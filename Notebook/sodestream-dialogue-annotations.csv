,draft_id,thread_id,segment_id,labels,relation,antecedent_segment_id,content,message_id,address,is_author,is_wg_chair,percentile,date
0,EdDSA,1,0,"InformationProviding,InformationProviding",,-1,In section 3.3 is the formula,<001501d16213$24b7eff0$6e27cfd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-07 17:50:52
1,EdDSA,1,9,"ExtensionOfPrevious,ExtensionOfPrevious",0,-1,"
S = (r + H(ENC(R) || ENC(A) || P(M)) s) mod l.",<001501d16213$24b7eff0$6e27cfd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-07 17:50:52
2,EdDSA,1,10,"ExtensionOfPrevious,InformationProviding",,-1,"
Supposed to be",<001501d16213$24b7eff0$6e27cfd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-07 17:50:52
3,EdDSA,1,11,"ExtensionOfPrevious,ExtensionOfPrevious",10,-1,"
S = (r + H(ENC(R) || ENC(A) || PH(M)) s) mod l.",<001501d16213$24b7eff0$6e27cfd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-07 17:50:52
4,EdDSA,1,28,"NeutralResponse,InformationProviding,NeutralResponse,StateDecision",11,11,"
Yes, fixed in working copy.
",<20160208064027.GA12661@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-02-08 08:40:27
5,EdDSA,1,29,Social,11,11,"
-Ilari",<20160208064027.GA12661@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-02-08 08:40:27
6,EdDSA,2,0,Social,,-1,"Hi,",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
7,EdDSA,2,16,"InformationProviding,InformationProviding",,-1,"
This message starts a Working Group Last Call (WGLC) for
draft-ietf-curdle-dnskey-eddsa-01.",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
8,EdDSA,2,17,"ExtensionOfPrevious,InformationProviding",,-1,"
The version to be reviewed is
https://tools.ietf.org/html/draft-ietf-curdle-dnskey-eddsa-01",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
9,EdDSA,2,18,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
Please send your comments, questions, and edit proposals to the WG mail
list until November 16th, 2016.  If you believe that the document is ready
to be submitted to the IESG for consideration as a Standards Track RFC
please send a short message stating this.",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
10,EdDSA,2,19,Social,,-1,"
Yours,",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
11,EdDSA,2,20,Social,,-1,"
Rich and Daniel",<CADZyTknh2VZXCz8kmYnDWxFoJ2wCxcgeyk61vatbVYYEnf0tRg@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-02 23:55:10
12,EdDSA,2,29,"Question,Question,InformationProviding,NeutralResponse",17,17,"
Does this use Ed25519 or Ed25519ctx?  It describes a context string,
which Ed25519 throws away.",<CABkgnnXt7o7uNQsKYB8sVAahA6xzrffRX0DXvRoyTPrE-MHmxg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-11-03 15:10:04
13,EdDSA,2,50,"Answer,InformationProviding,Answer",29,29,"
Well, if it has context, it can't be Ed25519 (because that can't have
context)... Dunno if that is wanted (note that Ed25519ctx can't be
computed with standard issue Ed25519 code (white-box changes aren't
great).

Also, even if I seemed to have come up with the idea, I don't like
it now (due to usage difficulty).
",<20161103135739.GA10408@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-11-03 15:57:39
14,EdDSA,2,51,Social,29,29,"
-Ilari",<20161103135739.GA10408@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-11-03 15:57:39
15,EdDSA,2,53,Social,,-1,"Ilari and rest of WG,",<1519267046.15113.1478186905413.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-03 16:28:25
16,EdDSA,2,100,"InformationProviding,InformationProviding,Agreement",50,-1,"
I also think it would be easier from implementation perspective for Ed25519.",<1519267046.15113.1478186905413.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-03 16:28:25
17,EdDSA,2,101,"Question,Question,NeutralResponse",50,-1,"
What about Ed448? Should I keep the context there or drop it as well?",<1519267046.15113.1478186905413.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-03 16:28:25
18,EdDSA,2,107,InformationProviding,,-1,If you believe that the document is ready to be submitted to the IESG for consideration as a Standards Track RFC please send a short message stating this.,<402D3EB2-3F06-4039-A4E3-D457B3082E19@isoc.org>,york@isoc.org,0.0,0,2,2016-11-03 09:36:42
19,EdDSA,2,128,Social,,-1,"Daniel,
",<402D3EB2-3F06-4039-A4E3-D457B3082E19@isoc.org>,york@isoc.org,0.0,0,2,2016-11-03 09:36:42
20,EdDSA,2,129,"InformationProviding,InformationProviding,NeutralResponse",107,-1,"
That said, I will need to defer to others to confirm the details of the EdDSA usage as I do not have experience with those crypto algorithms.

One minor editorial nit. In section 4 there are multiple references to the ""Chapter"" of another draft. Example:

The Ed25519 signature algorithm is described in Chapter
5.1.6 in [I-D.irtf-cfrg-eddsa<https://tools.ietf.org/html/draft-ietf-curdle-dnskey-eddsa-01#ref-I-D.irtf-cfrg-eddsa>].
",<402D3EB2-3F06-4039-A4E3-D457B3082E19@isoc.org>,york@isoc.org,0.0,0,2,2016-11-03 09:36:42
21,EdDSA,2,130,"InformationProviding,InformationProviding,ExtensionOfPrevious",129,-1,"
In US English a ""chapter"" is typically reserved for a ""book"". I think the better term here might be ""Section"", but I don't know if there is specific guidance anywhere on what to call areas of another I-D.
",<402D3EB2-3F06-4039-A4E3-D457B3082E19@isoc.org>,york@isoc.org,0.0,0,2,2016-11-03 09:36:42
22,EdDSA,2,131,"Thanking,Thanking",,-1,"
Thank you to the authors for moving this forward.
",<402D3EB2-3F06-4039-A4E3-D457B3082E19@isoc.org>,york@isoc.org,0.0,0,2,2016-11-03 09:36:42
23,EdDSA,2,193,"InformationProviding,InformationProviding,NeutralResponse,ProposeAction",18,-1,"Dear all,

I have incorporated the comments from Simon changing
Security Considerations and removing the Section about
Implementations.

I have also clarified usage of context.  The context label
is used only for Ed448.

I have also updated the example for Ed25519, but I would
really appreciate if somebody could review the script
used to generate the examples:

https://gitlab.labs.nic.cz/labs/ietf/blob/master/dnskey.py

The updated drafts can't be uploaded, but I uploaded the
last version to our gitlab:

XML: https://gitlab.labs.nic.cz/labs/ietf/raw/master/draft-ietf-curdle-dnskey-eddsa.xml
TXT: https://gitlab.labs.nic.cz/labs/ietf/raw/master/draft-ietf-curdle-dnskey-eddsa.txt
HTML: https://gitlab.labs.nic.cz/labs/ietf/raw/master/draft-ietf-curdle-dnskey-eddsa.html

O.
Ondřej Surý -- Technical Fellow
CZ.NIC, z.s.p.o.    --     Laboratoře CZ.NIC
Milesovska 5, 130 00 Praha 3, Czech Republic
mailto:ondrej.sury@nic.cz    https://nic.cz/

----- Original Message -----",<1202447570.15121.1478187954183.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-03 16:45:54
24,EdDSA,2,205,Disagreement,,-1,"On 5 Nov 2016, at 10:00, Daniel Migault wrote:",<141AEF7B-1853-4EB8-8A7E-5226B67D2761@vpnc.org>,paul.hoffman@vpnc.org,0.0,0,0,2016-11-15 07:49:55
25,EdDSA,2,222,"InformationProviding,Agreement,InformationProviding,Agreement,ContextSetting,ProposeAction",,-1,"The draft is in good shape. I agree with Simon that we should drop the
context string and add the security consideration. If the WG agrees, it
would be good for us to have another week to review the revised document
(and for people who have running code to re-run the test vectors.)

I have a concern not with the draft, but with the comments others have
made during the WG Last Call. In specific, I do not agree with:
",<141AEF7B-1853-4EB8-8A7E-5226B67D2761@vpnc.org>,paul.hoffman@vpnc.org,0.0,0,0,2016-11-15 07:49:55
26,EdDSA,2,223,Disagreement,,-1,"> I think that woudl be helpful to have some text that provides some
> rational
> for using Ed25519 versus Ed25519ph and Ed25519ctx as well as Ed448
> versus
> Ed448ph. I belive that is collision resilience as well as offline
> signing
> in which case double path does not really matter.",<141AEF7B-1853-4EB8-8A7E-5226B67D2761@vpnc.org>,paul.hoffman@vpnc.org,0.0,0,0,2016-11-15 07:49:55
27,EdDSA,2,224,"InformationProviding,InformationProviding,Disagreement,ExtensionOfPrevious",222,-1,"
The discussion of those other formats in draft-irtf-cfrg-eddsa seems
good enough to me. I have a concern that adding the rationale will in
fact confuse developers into looking at the other formats. Our spec
should be ""this is the format"", not ""and here are other things we
considered and didn't adopt"".
",<141AEF7B-1853-4EB8-8A7E-5226B67D2761@vpnc.org>,paul.hoffman@vpnc.org,0.0,0,0,2016-11-15 07:49:55
28,EdDSA,2,226,Social,,-1,"Paul,",<1249672855.512.1479165396790.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-15 00:16:36
29,EdDSA,2,285,"Thanking,InformationProviding,NeutralResponse,InformationProviding,NeutralResponse,Thanking",222,-1,"
thanks for the comment. I have just submitted an updated version
of the draft where I resolved all the comments except this particular
one.",<1249672855.512.1479165396790.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-15 00:16:36
30,EdDSA,2,286,"ExtensionOfPrevious,Agreement",224,-1,"
I also have feeling that we don't have to explain *in the draft* why
we picked this particular algorithm.",<1249672855.512.1479165396790.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-15 00:16:36
31,EdDSA,2,287,"ExtensionOfPrevious,InformationProviding",,-1,"
Here's the side by side diff for WG convenience:
https://www.ietf.org/rfcdiff?url1=draft-ietf-curdle-dnskey-eddsa-01&url2=draft-ietf-curdle-dnskey-eddsa-02",<1249672855.512.1479165396790.JavaMail.zimbra@nic.cz>,ondrej.sury@nic.cz,0.0,0,4,2016-11-15 00:16:36
32,EdDSA,2,294,NeutralResponse,,286,"> I also have feeling that we don't have to explain *in the draft* why we
> picked this particular algorithm.",<026cf48fcc404ef998e7dabc905f35f5@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-11-14 23:19:38
33,EdDSA,2,295,"Agreement,InformationProviding,Agreement",286,286,"
Much as I don't like to disagree with my co-chair :) I agree with you.  RFC's typically say ""how to do it.""  Rationale's are usually left for the WG mailing list or perhaps conference papers :)",<026cf48fcc404ef998e7dabc905f35f5@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-11-14 23:19:38
34,EdDSA,2,297,"Agreement,NeutralResponse",295,-1,Sounds like cross mailing list consensus ;-),<CADZyTkn=HB11AwrxQh9fJd_U7jxsMgxB3oZbo0i+gqTOhH-q7A@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-15 09:24:39
35,EdDSA,2,321,"InformationProviding,InformationProviding,ProposeAction",,-1,"
For those that have not yet reviewed the document, the WGLC is almost
ending, so please provide your comments by the end of the week... or on
your way back!",<CADZyTkn=HB11AwrxQh9fJd_U7jxsMgxB3oZbo0i+gqTOhH-q7A@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-15 09:24:39
36,EdDSA,2,322,Social,,-1,"
Yours",<CADZyTkn=HB11AwrxQh9fJd_U7jxsMgxB3oZbo0i+gqTOhH-q7A@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-15 09:24:39
37,EdDSA,2,362,"Thanking,InformationProviding,StateDecision,Social,Thanking",321,-1,"Hi,

Thank you all for the reviews. My understanding is that these reviews have
been considered in the new text and we are moving the document forward.

Yours,
Rich and Daniel
",<CADZyTkmLMfW228E1b1ZSZxjFf+etZ8YrjmwJVZts+8AdynAL7A@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2016-11-30 14:15:58
38,EdDSA,3,41,"InformationProviding,ContextSetting,InformationProviding",,-1,"The following is what I would consider to be on my open issue list for this
draft to get to approval.  I have tried to triage the list according to my
priorities.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
39,EdDSA,3,42,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",41,-1,"
High Priority:",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
40,EdDSA,3,43,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",42,-1,"
1.  Fix the known security issue with EdDSA25519 and EdDSA25119ph:  I have
provided what I consider to be an elegant solution for this with the
modification from Ilari
(https://mailarchive.ietf.org/arch/msg/cfrg/VkBtpUwNIJ1JFAka1NljgBXgwVo)
And I was not the first, but my presentation is slightly different.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
41,EdDSA,3,44,"InformationProviding,ContextSetting,ExtensionOfPrevious",41,-1,"
Moderate Priority:",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
42,EdDSA,3,45,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",44,-1,"
1.  Remove the dom function from Ed448ph",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
43,EdDSA,3,46,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",41,-1,"
Low Priority:",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
44,EdDSA,3,47,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",46,-1,"
1.  In section 5.1.7, explain the trade-off between the two formulas and why
one is better than the other.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
45,EdDSA,3,48,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",46,-1,"
2.  Increase the size of the output of the Ed448ph if the security is not
consistent between the 448 bit curve and the 512 bit hash.  It just looks
odd because Ed25519 also uses a 512 bit pre-hash function.   My guess is
that nothing needs to be done, but an explanation might be useful.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
46,EdDSA,3,49,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",46,-1,"
3.  Define the ctx version of EdDSA25519.   It would be nice, esp if we
think that the context version is better even with null contexts, but if we
solve the first issue this can be done later if we decide it is preferable.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
47,EdDSA,3,50,"ContextSetting,ExtensionOfPrevious",,-1,"
I don't care anymore:",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
48,EdDSA,3,51,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",50,-1,"
1. Change the Ed448ph function to be a hash function rather than an XOR.  It
appears as long as the length is a known constant the two are equivalent for
all intents and purposes.
2. Previous issues that I raised with the python code.  My code is working
it no longer bothers me anymore.",<014901d1f42a$c8e10950$5aa31bf0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 16:47:53
49,EdDSA,3,156,"InformationProviding,NeutralResponse,NeutralResponse",43,43,"
For reference, the idea is to add Ed448/Ed448ph-style prefix to
Ed25519ph, with first 32-bytes being fixed to be invalid point (so
hash can't trivially collide with any Ed25519 signature hash).
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
50,EdDSA,3,158,"Question,ClarificationElicitation",45,45,"
This is from the inner hash right?
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
51,EdDSA,3,160,"InformationProviding,NeutralResponse,NeutralResponse",47,47,"
The second formula is stricter. However many existing implementations use
the first, and in some cases, not agreeing on exact set of acceptable
inputs is a problem (e.g. fingerprinting).
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
52,EdDSA,3,161,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",47,47,"
Well, the matematical explanation of the issue:

There is point T on Edwards25519, which has property [8]T = 0.

Arbitrary point P on Edwards25519 can be written in form:

P = [x]B + [y]T

For some 0<=x<L and 0<=y<8.

Now, the verification formula without multiplication becomes:

[s]B = R + [h]A  =>
[s]B = ([r_x]B+[r_y]T) + [h]([a_x]B+[a_y]T)  =>
[s]B = [r_x]B+[h][a_x]B + [r_y]T+[h][a_y]T  =>
[s]B = [r_x+h*a_x]B + [r_y+h*a_y]T

Which is satified iff:
s = r_x+h*a_x (mod L)
0 = r_y+h*a_y (mod 8).

Whereas with multiplication it becomes:
[8][s]B = [8]R + [8][h]A  =>
[8][s]B = [8]([r_x]B+[r_y]T) + [8][h]([a_x]B+[a_y]T)  =>
[8][s]B = [8][r_x]B+[8][h][a_x]B + [8][r_y]T+[h][a_y]T  =>
[8][s]B = [8r_x+8h*a_x]B + [r_y+h*a_y][8]T  =>
[8][s]B = [8r_x+8h*a_x]B + [r_y+h*a_y]0  =>
[8][s]B = [8r_x+8h*a_x]B  =>
[s]B = [r_x+h*a_x]B

Which is satified iff:
s = r_x+h*a_x (mod L)

So the second condition has dropped out. Now normally signatures have r_y=0
and a_y=0. But specially generated signatures may have nonzero values for
those parameters. So the exact set of signatures accepted differs.

(One can't use this for malleability, because h depends on R and A, so
any tweaks there after generation make signature fail).

And in some situations, it is issue if implmentations don't agree on exact
set of accepted inputs.
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
53,EdDSA,3,163,"InformationProviding,Disagreement,NeutralResponse",48,48,"
No action needed: Ed448ph uses SHAKE256, which caps off as 256-bit collision
resistance at 512 bit output.
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
54,EdDSA,3,166,"InformationProviding,NeutralResponse,Disagreement",51,51,"
Actually, they aren't (SHAKE256@512 is much weaker against preimages than
what 512-bit hash would be), but the differences don't matter here, since
we want collision resistance (which should be equivalent to 512-bit hash).
",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
55,EdDSA,3,167,Social,51,51,"
-Ilari",<20160812191253.njuzwiywaybt4why@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-12 22:12:53
56,EdDSA,3,288,NeutralResponse,,167,"> -----Original Message-----
> From: ilariliusvaara@welho.com [mailto:ilariliusvaara@welho.com]
> Sent: Friday, August 12, 2016 12:13 PM
> To: Jim Schaad <ietf@augustcellars.com>
> Cc: cfrg@ietf.org
> Subject: Re: [Cfrg] Open Issue List for draft-irtf-cfrg-eddsa-06
> On Thu, Aug 11, 2016 at 04:47:53PM -0700, Jim Schaad wrote:
> > The following is what I would consider to be on my open issue list for
> > this draft to get to approval.  I have tried to triage the list
> > according to my priorities.
> > High Priority:
> > 1.  Fix the known security issue with EdDSA25519 and EdDSA25119ph:  I
> > have provided what I consider to be an elegant solution for this with
> > the modification from Ilari
> > (https://mailarchive.ietf.org/arch/msg/cfrg/VkBtpUwNIJ1JFAka1NljgBXgwV
> > o) And I was not the first, but my presentation is slightly different.
> For reference, the idea is to add Ed448/Ed448ph-style prefix to Ed25519ph, with
> first 32-bytes being fixed to be invalid point (so hash can't trivially collide with
> any Ed25519 signature hash).
> > Moderate Priority:
> > 1.  Remove the dom function from Ed448ph
> This is from the inner hash right?

Not sure what you mean by inner hash - I was a little bit lax - I am talking about the PH function for Ed448ph.

> > Low Priority:
> > 1.  In section 5.1.7, explain the trade-off between the two formulas
> > and why one is better than the other.
> The second formula is stricter. However many existing implementations use the
> first, and in some cases, not agreeing on exact set of acceptable inputs is a
> problem (e.g. fingerprinting).
> Well, the matematical explanation of the issue:
> There is point T on Edwards25519, which has property [8]T = 0.
> Arbitrary point P on Edwards25519 can be written in form:
> P = [x]B + [y]T
> For some 0<=x<L and 0<=y<8.
> Now, the verification formula without multiplication becomes:
> [s]B = R + [h]A  =>
> [s]B = ([r_x]B+[r_y]T) + [h]([a_x]B+[a_y]T)  => [s]B = [r_x]B+[h][a_x]B +
> [r_y]T+[h][a_y]T  => [s]B = [r_x+h*a_x]B + [r_y+h*a_y]T
> Which is satified iff:
> s = r_x+h*a_x (mod L)
> 0 = r_y+h*a_y (mod 8).
> Whereas with multiplication it becomes:
> [8][s]B = [8]R + [8][h]A  =>
> [8][s]B = [8]([r_x]B+[r_y]T) + [8][h]([a_x]B+[a_y]T)  => [8][s]B =
> [8][r_x]B+[8][h][a_x]B + [8][r_y]T+[h][a_y]T  => [8][s]B = [8r_x+8h*a_x]B +
> [r_y+h*a_y][8]T  => [8][s]B = [8r_x+8h*a_x]B + [r_y+h*a_y]0  => [8][s]B =
> [8r_x+8h*a_x]B  => [s]B = [r_x+h*a_x]B
> Which is satified iff:
> s = r_x+h*a_x (mod L)
> So the second condition has dropped out. Now normally signatures have r_y=0
> and a_y=0. But specially generated signatures may have nonzero values for
> those parameters. So the exact set of signatures accepted differs.
> (One can't use this for malleability, because h depends on R and A, so any
> tweaks there after generation make signature fail).
> And in some situations, it is issue if implmentations don't agree on exact set of
> accepted inputs.

Right and it would be useful to put some of that in as a security consideration or as part of the text that lists the formulas.

> > 2.  Increase the size of the output of the Ed448ph if the security is
> > not consistent between the 448 bit curve and the 512 bit hash.  It just looks
> > odd because Ed25519 also uses a 512 bit pre-hash function.   My guess is
> > that nothing needs to be done, but an explanation might be useful.
> No action needed: Ed448ph uses SHAKE256, which caps off as 256-bit collision
> resistance at 512 bit output.
> > 3.  Define the ctx version of EdDSA25519.   It would be nice, esp if we
> > think that the context version is better even with null contexts, but
> > if we solve the first issue this can be done later if we decide it is preferable.
> > I don't care anymore:
> > 1. Change the Ed448ph function to be a hash function rather than an
> > XOR.  It appears as long as the length is a known constant the two are
> > equivalent for all intents and purposes.
> Actually, they aren't (SHAKE256@512 is much weaker against preimages than
> what 512-bit hash would be), but the differences don't matter here, since we
> want collision resistance (which should be equivalent to 512-bit hash).

Yes, but that is because of the parameters chosen and not because there is something inherently bad about using SHAKE (the XOR) function rather than SHA1 (a hash function).  There is nothing about being an XOR construct that makes it bad unless the length can be changed in some arbitrary fashion by and attacker which is less true with hash functions.  That is doing something along the lines making the length of the SHAKE output a parameter might not be a good idea.  But having an OID with a fixed length might be reasonable.

In the LAMPS group there is a question of using SHAKE rather than SHA2 for computing the digest of the message.  This is more problematic if the length of the resulting digest is not fixed but is allowed to very.

Jim

> -Ilari",<01e001d1f4d2$39fdd120$adf97360$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-12 12:46:29
57,EdDSA,3,341,"InformationProviding,NeutralResponse,NeutralResponse",43,43,"
Did a WIP about algorithm modifications. Basically everything except
Ed25519 and Ed448 got modified.

I crosschecked the changes to the Python reference implementation
by modifying C implementation I have (turns out one has to only modify
tables that specify how schemes behave).
",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
58,EdDSA,3,343,"InformationProviding,NeutralResponse,NeutralResponse",45,45,"
Done in the WIP.
",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
59,EdDSA,3,345,"InformationProviding,NeutralResponse,NeutralResponse",47,47,"
Added some text about this into Editor's Copy.
",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
60,EdDSA,3,347,"InformationProviding,NeutralResponse,NeutralResponse",48,48,"
Added some text about this into Editor's Copy.
",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
61,EdDSA,3,349,"InformationProviding,NeutralResponse,NeutralResponse",49,49,"
Since that is easy to do once one has fix for the prehash issue, I did that
too (named the result ""Ed25519ctx"", just to avoid confusion).
",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
62,EdDSA,3,350,Social,49,49,"
-Ilari",<20160815084147.kerumoxkyg4ugvyb@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-15 11:41:48
63,EdDSA,4,0,Social,,-1,"Hi,",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
64,EdDSA,4,77,"InformationProviding,InformationProviding",,-1,"
we recently ran into one interoperability problem that is concerned
with RFC 7427.",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
65,EdDSA,4,78,"ExtensionOfPrevious,InformationProviding",,-1,"
We start testing RSASSA-PSS with another vendor product and found,
that while it supports Digital Signature authentication method, it seems
to not support RSASSA-PSS signatures in IKE. As a result, the SA
is failed to be created if we use RSASSA-PSS (and we do use it
because we want to be compliant with RFC-to-be draft-ietf-ipsecme-rfc4307bis,
that states that with Digital Signature RSASSA-PSS-SHA256 is MUST).",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
66,EdDSA,4,79,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
The problem is that RFC7427 doesn't provide any means to find out
what kind of signatures peer supports. If you have RSA certificate,
you need somehow to guess whether you can use newer PSS signature
format or should stick to old PKCS 1 one. The SIGNATURE_HASH_ALGORITHMS
notification doesn't provide any information of this kind. RFC7427
is silent whether support for RSASSA-PSS is required to be compliant
with it, so I think it is absolutely legal now to have support for Digital Signature
authentication method and have no support for RSASSA-PSS
(as in the product we have tested with).
The draft draft-ietf-ipsecme-rfc4307bis does requires that if
Digital Signatures are supported, then RSASSA-PSS with SHA2-256
MUST be supported. However, even if it becomes RFC in near future,
it'll take a couple of years before it is adopted by major vendors.",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
67,EdDSA,4,80,"ExtensionOfPrevious,InformationProviding",,-1,"
I think that it is a more fundamental problem: RFC7427 allows peers
to announce what hash functions they support, but the peers
cannot announce what kinds of signatures (or what signature formats)
they support. Few years ago life was simpler: there were a couple
of widely used signature schemes and they use different types of
public keys. So, if you had RSA certificate, you could be sure that
RSA PKCS 1 signature format would be understood by anyone.
Now we have new incompatible RSA signature format - RSASSA-PSS
and mere having RSA certificate is not enough to choose right
signature format. I envision that similar situation can repeat
in the future with Elliptic Curve certificates. Now new kind of signature
is being developed for Edwards curve public keys - EDDSA.
However, as far as I anderstand, any Edwards curve key can
be converted to short Weierstrass's form and used in ECDSA.
So we'll probably have a mess when some implementations
support EDDSA, while some use Edwards keys in ECDSA
(at least for a while), that will result in interoperability problems.",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
68,EdDSA,4,81,"ExtensionOfPrevious,InformationProviding",,-1,"
So, my question is - what to do with all this.
1. Do nothing. Coming back to the interoperability problem we have,
it is possible to find some workarounds:
- don't use RSASSA-PSS until it becomes ubiquitous (however if everybody
follows this way it'll never become ubiquitous)
- it is possible for the initiator to restart exchange if it receives
AUTHENTICATION_FAILED while using RSASSA_PSS
and use RSA PKCS 1 in the new run. However, this approach
will slow down connection setup and waste resources of
both initiator and responder.
- it is possible for responder to look at the format of signature
the initiator used and act in accordance - if the initiator
doesn't use RSASSA-PSS then don't use it.
These are all workarounds and they complicate implementations
and waste resources for no good reason.
2. Add some indication of signature form/format the peers support.
I can see two possible solutions.
- define new entries in Hash Algorithms registry
that are not hash functions but are rather signature formats.
For example, add RSASSA_PSS. If it is included
in SIGNATURE_HASH_ALGORITHMS notification.
it will mean that this format is supported with any real hash
algorithms that are included in this notification.
It is clearly a hack of RFC 7427.
- define new notification SIGNATURE_FORMATS, which
will include supported signature forms/formats.
It seems to be a most ""proper"" way, however
it is the slowest one (new RFC is needed).",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
69,EdDSA,4,82,"Question,Question",80,-1,"
What the WG thinks of all this?",<4413733F9BF24D94821C1814E88C3C26@buildpc>,svanru@gmail.com,0.0,0,10,2016-09-15 17:28:53
70,EdDSA,4,202,"InformationProviding,InformationProviding",,-1,"[This is bit old email, but I have not seen any replies to this, and I
am sending this as implementor not as chair.]

Valery Smyslov writes:",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
71,EdDSA,4,204,"NeutralResponse,InformationProviding,NeutralResponse",79,79,"
Section 5 of the RFC7427 covers this, and we also discussed this when
the RFC was being written. The consensus was that in most cases there
is existing configuration between peers anyways, thus configuring
which key to be used is just one more configuration option to do, and
that is easy way to solve the issue.

I.e., in the end we decided we do not want to add negotiation for the
public key algorithm.

[1] https://www.ietf.org/mail-archive/web/ipsec/current/msg08701.html
[2] https://www.ietf.org/mail-archive/web/ipsec/current/msg08671.html
",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
72,EdDSA,4,206,"NeutralResponse,InformationProviding,NeutralResponse",80,80,"
I think the current consensus is that you should not use same private
key with different signature algorithms. I.e., I think they are saying
that you should not use same private key for the different versions of
the EdDSA etc.

On the other hand draft-irtf-cfrg-eddsa do say that ""one can use the
same keypair for both Ed25519, Ed25519ctx and Ed25519ph"" because the
signature method is defined so it is still safe.

Anyways, I would expect that nobody would want to use the same key for
both EdDSA and ECDSA. And whether you want to use same private key for
both Ed25519 and Ed25519ph is something that some people say you
should not.

So I do not think this issue will come up with using same private key
for different EC signing methods, but it will come up with RSASSA-PSS.
",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
73,EdDSA,4,208,"NeutralResponse,InformationProviding,NeutralResponse",81,81,"
This is what we decided when we published RFC7427.
",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
74,EdDSA,4,210,"NeutralResponse,InformationProviding,NeutralResponse",81,81,"
We said that in initiator you need to either try all keys, use
Certificate request as hint, or have preconfiguration.

In the responder you can use the same format than the initiator used
(if it used signature authentication). If not, you can either use
certificate requests as hint, or use preconfiguration.
",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
75,EdDSA,4,212,"NeutralResponse,InformationProviding,Disagreement,NeutralResponse",81,81,"
As we already once decided we are not going to do it, I do not think
we want to come back to this. It is fine to come back to same issues
if something has changed, but I do not think there has been any real
changes in here, actually I think the issue is getting easier, as
rfc4307bis will say that RSASSA-PSS is MUST, thus this issue will go
away and everybody can start using RSASSA-PSS, and just have some
fallback option for old implementations not supporting rfc4307bis.

I do not think this is issue for ECDSA or EdDSA. And
draft-nir-ipsecme-eddsa-01 says that *ph SHOULD ONT be used...
kivinen@iki.fi",<22515.45673.944549.840807@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-10-04 16:45:13
76,EdDSA,5,47,"InformationProviding,ProposeAction,InformationProviding",,-1,"
1) The 912-bit wide internal hash function to use for Ed448.  In the
EDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512
would be more convenient in existing deployments than SHAKE256.

However, given that 1) some implementers thought the IV-modification
we proposed would be difficult to implement in some APIs, and 2) some
implementers (including at least one smartcard implementer, which
typically are more constrained than software-only developers)
appeared to be fine with SHAKE256 even though it is newer, I believe
we should treat this as an open issue.  Options include:

On reflection, for Ed448, my preferences are, from most to least
preferred:

1. SHA3-512 for prehash, SHAKE256 for H
2. Blake2b for prehash, Blake2b-CTR for H
(i.e., Blake2b(r || 0) || Blake2b(r || 1) || ...)
3. SHA-512 for prehash, either HKDF-SHA512 or SHA-512/912 for H

Rationale:

- Prefer one primitive over several for a single signature scheme.
- Prefer SHA-3 or Blake2 over SHA-2 for better security properties.
- Prefer standard primitives over nonstandard (e.g., SHA-512/912).
- Prefer simpler constructions over more complex (e.g., HKDF, HMAC).
- Performance of prehash is not critical: if you rely on signing very
long messages, you're inviting DoS for verifiers -- don't.

Both Blake2 and SHA-3 are easy to implement with decent performance in
portable C code:

http://mumble.net/~campbell/hg/blake2/blake2b.c
http://mumble.net/~campbell/hg/blake2/blake2s.c
http://mumble.net/~campbell/hg/sha3/keccak.c
http://mumble.net/~campbell/hg/sha3/sha3.c

(Blake2 is much easier to make fast than either SHA-2 or SHA-3, even
in portable C code (for 256-bit, blake2s 11-12 cpb, SHA-256 21-22 cpb,
SHA3-256 23-24 cpb; for 512-bit, blake2b 7-8 cpb, SHA-512 10-11 cpb,
SHA3-512 ~43 cpb -- on my Intel Ivy Bridge i7).  But the cost of a
signature in sensible protocols is dominated by the cost of the
elliptic curve operations, not by the cost of the prehash.)",<20151014224611.DEB3C606CB@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-14 22:47:25
77,EdDSA,5,63,"Question,NeutralResponse,Question",47,47,"
Why would you do this with Blake2b as opposed to using the personalization
strings feature?
",<CAHOTMVKhUJuS3w19ASaNYnXxweR74c6HxpS_5vpY+rHeJcrZdg@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2015-10-14 15:50:26
78,EdDSA,5,122,"InformationProviding,Disagreement,NeutralResponse",47,47,"
I think using anything else than identity / SHA-512 as prehash
in Ed448 is a bad idea.

The reason isn't so much that SHA3-512 is hilariously slow (Blake2b
is well known to be a speed demon), but due to practical
considerations the prehash is going to leak out of the ""box"", so
now applications need to deal with more casess.

E.g. TLS 1.2 has apparently been designed to leak the prehash
that way (TLS 1.3 retains the basic structure, but the amounts
of data to sign are much smaller).
",<20151015055429.GA17127@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 08:54:29
79,EdDSA,5,124,"InformationProviding,NeutralResponse,NeutralResponse",47,47,"
Aside, comparing speeds with my implementations, my Blake2 is quite
a bit slower, but SHA-3 is quite a bit faster (I ended up unrolling
every loop except the round loop).
",<20151015055429.GA17127@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 08:54:29
80,EdDSA,5,125,"InformationProviding,NeutralResponse,ExtensionOfPrevious",47,47,"
BTW: Estimates for amount of data it takes for good prehash to
dominate signing time against signing the hash with good PureEd448
implementation:
- SHA-3: ~13kB
- SHA-2: ~30-31kB
- Blake2b: ~69kB.

(I estimated PureEd448 signing time for 64 bytes at 240-260 kcyc
(depending on the hash, with Blake2 being at low end[1], and
HKDF-SHA512 at top end[2]).
",<20151015055429.GA17127@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 08:54:29
81,EdDSA,5,126,"InformationProviding,NeutralResponse,ExtensionOfPrevious",47,47,"
[1] ""Blake2b-CTR"" is pretty much the fastest on almost all sizes
(except some very small ones due to blocking effects).

[2] The HKDF-SHA512 slowness is mostly from overhead (18 blocks
@~1kcyc each(!)): It is faster than SHAKE256 on 8kB messages.
",<20151015055429.GA17127@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 08:54:29
82,EdDSA,5,127,Social,,47,"
-Ilari",<20151015055429.GA17127@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 08:54:29
83,EdDSA,5,138,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",47,47,"
If the targeted security strength is 256 bits, I would suggest to use
SHAKE256 for prehash as well, since SHAKE256 is much faster than SHA3-512.
",<5620B44F.202@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-10-16 10:24:47
84,EdDSA,5,153,Social,,-1,"
Dear all,
",<20151016100226.GG32489@tyrion>,peter@cryptojedi.org,0.0,0,96,2015-10-16 12:02:55
85,EdDSA,5,155,"Agreement,Agreement",138,138,"
+1
",<20151016100226.GG32489@tyrion>,peter@cryptojedi.org,0.0,0,96,2015-10-16 12:02:55
86,EdDSA,5,178,"InformationProviding,NeutralResponse,NeutralResponse",138,138,"
Well, SHAKE256 isn't a hash (according to FIPS202).

And if you want to use SHAKE256 for ""prehash"", you could as well
extract it at 912 bits, so one can use the same ""hash"" function for
internal and pre hashing (this costs about 4kcyc from blowing of
block boundaries).

(Some hash APIs need to fix hash length for each algorithm, so
you can't have ""SHAKE256"", but could have ""SHAKE256@912b"").
",<20151016134204.GA20886@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 16:42:04
87,EdDSA,5,179,Social,,138,"
-Ilari",<20151016134204.GA20886@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 16:42:04
88,EdDSA,6,12,"InformationProviding,ContextSetting,InformationProviding",,-1,"I was going through the document doing a bad implementation and I ran across
the following issue.",<058101d1d7b5$d605c5d0$82115170$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-06 11:40:14
89,EdDSA,6,13,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",12,-1,"
In Table 1 there is constant 'a' defined as being -1.
In section 5.1.6, the first step defines a new variable 'a'. As this is not
strongly highlighted, the variable is defined in the middle of a sentence, I
missed that it was being defined as I worked things out and had a problem.",<058101d1d7b5$d605c5d0$82115170$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-06 11:40:14
90,EdDSA,6,14,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
I would suggest that one or the other variables be re-named so that the
confusion does not exist.",<058101d1d7b5$d605c5d0$82115170$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-06 11:40:14
91,EdDSA,6,34,"InformationProviding,NeutralResponse,StateDecision,NeutralResponse",14,14,"
Renamed to 's' in Editor's Copy (that also seems to be the letter the generic
EdDSA description used).
",<20160706192710.GA28197@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-06 22:27:10
92,EdDSA,6,35,Social,14,14,"
-Ilari",<20160706192710.GA28197@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-06 22:27:10
93,EdDSA,7,32,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Crypto Forum of the IETF.",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
94,EdDSA,7,33,"InformationProviding,ExtensionOfPrevious",,-1,"
Title           : Edwards-curve Digital Signature Algorithm (EdDSA)
Authors         : Simon Josefsson
Ilari Liusvaara
Filename        : draft-irtf-cfrg-eddsa-03.txt
Pages           : 52
Date            : 2016-03-01",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
95,EdDSA,7,34,"InformationProviding,ExtensionOfPrevious",,-1,"
Abstract:
The elliptic curve signature scheme Edwards-curve Digital Signature
Algorithm (EdDSA) is described.  The algorithm is instantiated with
recommended parameters for the edwards25519 and edwards448 curves.
An example implementation and test vectors are provided.",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
96,EdDSA,7,35,"InformationProviding,ExtensionOfPrevious",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
97,EdDSA,7,36,"InformationProviding,ExtensionOfPrevious",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-03",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
98,EdDSA,7,37,"InformationProviding,ExtensionOfPrevious",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-irtf-cfrg-eddsa-03",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
99,EdDSA,7,38,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
100,EdDSA,7,39,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20160301203045.7965.96931.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-01 12:30:45
101,EdDSA,8,0,"InformationProviding,Question,Question,InformationProviding,ProposeAction,StateDecision",,-1,"A new version was posted. Can I ask people to check if it fixed issues reported earlier? If chairs hear no objections, we will ship this version to IRSG for approval and publication.",<F60801D3-FD21-4835-97B9-A8EAEEEA65DD@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2016-03-09 17:58:49
102,EdDSA,8,2,"Agreement,InformationProviding,Answer,Agreement",0,-1,"Yes, the Ed448ph test vector now looks reasonable, and is working in the test suite of my C/C++ implementation.",<A1A7431D-635F-475D-B003-98B73CC91F40@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-03-09 10:00:51
103,EdDSA,8,13,NeutralResponse,0,-1,Before this gets too late.,<01a001d17b56$39a9ac80$acfd0580$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-03-10 21:24:02
104,EdDSA,8,40,"Agreement,InformationProviding,NeutralResponse,ProposeAction",0,-1,"
All in all it looks good.  The security consideration on needing a good
random number generator for doing batch validation is not something that I
would call obvious to the layman.  It would be nice to have a reference
here.",<01a001d17b56$39a9ac80$acfd0580$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-03-10 21:24:02
105,EdDSA,8,41,"ExtensionOfPrevious,InformationProviding",,-1,"
I am not going to fall on my sword to get one.",<01a001d17b56$39a9ac80$acfd0580$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-03-10 21:24:02
106,EdDSA,10,39,"InformationProviding,InformationProviding",,-1,"The IESG has received a request from the CURves, Deprecating and a Little
more Encryption WG (curdle) to consider the following document:
- 'EdDSA for DNSSEC'
<draft-ietf-curdle-dnskey-eddsa-02.txt> as Internet Standard",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
107,EdDSA,10,40,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2016-12-16. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
108,EdDSA,10,41,"ExtensionOfPrevious,ContextSetting",,-1,"
Abstract",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
109,EdDSA,10,42,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",41,-1,"
This document describes how to specify EdDSA keys and signatures in
DNS Security (DNSSEC).  It uses the Edwards-curve Digital Security
Algorithm (EdDSA) with the choice of two curves, Ed25519 and Ed448.",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
110,EdDSA,10,43,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",42,-1,"
The file can be obtained via
https://datatracker.ietf.org/doc/draft-ietf-curdle-dnskey-eddsa/",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
111,EdDSA,10,44,"ExtensionOfPrevious,InformationProviding",,-1,"
IESG discussion can be tracked via
https://datatracker.ietf.org/doc/draft-ietf-curdle-dnskey-eddsa/ballot/",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
112,EdDSA,10,45,"ExtensionOfPrevious,InformationProviding",,-1,"
No IPR declarations have been submitted directly on this I-D.",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
113,EdDSA,10,46,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
The document contains these normative downward references.
See RFC 3967 for additional information:
rfc4033: DNS Security Introduction and Requirements (Proposed Standard - IETF stream)
rfc4035: Protocol Modifications for the DNS Security Extensions (Proposed Standard - IETF stream)
draft-irtf-cfrg-eddsa: Edwards-curve Digital Signature Algorithm (EdDSA)  (None -IRTF stream)
rfc4034: Resource Records for the DNS Security Extensions (Proposed Standard - IETF stream)
rfc7748: Elliptic Curves for Security (Informational - IRTF stream)
Note that some of these references may already be listed in the acceptable Downref Registry.",<148069124342.29737.4699635715517741091.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:07:23
114,EdDSA,11,32,"InformationProviding,InformationProviding",,-1,"[Note:  I was assigned draft-ietf-jose-cfrg-curves-03 but have
reviewed the most recent revision]",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
115,EdDSA,11,33,"ExtensionOfPrevious,InformationProviding",,-1,"
This document defines how to use the Diffie-Hellman algorithms
""X25519"" and ""X448"" as well as the signature algorithms ""Ed25519"" and
""Ed448"" from the IRTF CFRG elliptic curves work in JOSE, and in doing
so introduces new a key type and subtypes, and specifies registry
additions.  Section 3 specifies the application of the algorithms
within the JOSE framework.",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
116,EdDSA,11,34,"ExtensionOfPrevious,InformationProviding",,-1,"
Summary: ready, with very minor nits on formal publication
requirements",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
117,EdDSA,11,35,"ExtensionOfPrevious,InformationProviding",,-1,"
I do not have the cryptographic chops to perform a cryptographic
review of this draft.  The algorithms being added to JOSE in this
document are specified in a CFRG deliverable
(https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/), which is
currently under development (that is to say, mature but not
completed).  I am satisfied that this document pays heed to the
security considerations in the CFRG document.",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
118,EdDSA,11,36,"ExtensionOfPrevious,InformationProviding",,-1,"
The document appears complete and ready with respect to the needs
of someone implementing this specification.",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
119,EdDSA,11,37,"ExtensionOfPrevious,ContextSetting",,-1,"
Nits:",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
120,EdDSA,11,38,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
normative reference to an informational RFC (7748)
normative reference to an informational draft (draft-irtf-cfrg-eddsa)
later version of draft-irtf-cfrg-eddsa has been published
missing reference: ""RFC-THIS"" in IANA Considerations section",<ca99da3c-ff2e-798d-aa3a-27d435a4e096@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2016-08-12 14:41:56
121,EdDSA,12,32,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Crypto Forum of the IETF.",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
122,EdDSA,12,33,"InformationProviding,ExtensionOfPrevious",,-1,"
Title           : Edwards-curve Digital Signature Algorithm (EdDSA)
Authors         : Simon Josefsson
Ilari Liusvaara
Filename        : draft-irtf-cfrg-eddsa-06.txt
Pages           : 55
Date            : 2016-08-10",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
123,EdDSA,12,34,"InformationProviding,ExtensionOfPrevious",,-1,"
Abstract:
The elliptic curve signature scheme Edwards-curve Digital Signature
Algorithm (EdDSA) is described.  The algorithm is instantiated with
recommended parameters for the edwards25519 and edwards448 curves.
An example implementation and test vectors are provided.",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
124,EdDSA,12,35,"InformationProviding,ExtensionOfPrevious",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
125,EdDSA,12,36,"InformationProviding,ExtensionOfPrevious",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-06",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
126,EdDSA,12,37,"InformationProviding,ExtensionOfPrevious",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-irtf-cfrg-eddsa-06",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
127,EdDSA,12,38,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
128,EdDSA,12,39,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<147085540319.5316.15333424879005707799.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-10 11:56:43
129,EdDSA,13,11,"InformationProviding,NeutralResponse,InformationProviding",,-1,"
Yes, Blake2 has impressive performance. Unfortunately, the widest
defined variant is 512 bits, which isn't enough here (need 912).

It's not hard to imagine using BLAKE2 in `CTR mode' to get a 912-bit
hash function -- and that wouldn't be much different securitywise from
using SHAKE256.  Certainly neither one will claim 912-bit preimage
resistance.",<20151010154454.7621F607C1@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-10 15:46:05
130,EdDSA,13,40,"InformationProviding,NeutralResponse,Social,NeutralResponse",11,-1,"Assuming you put the counter at the beginning, this is essentially the
""homebrew"" proposal that got all the boos and hisses at the beginning of
this thread.  But I'm not sure why all the boos and hisses.  It is the
same technique that NIST uses for counter mode key derivation function
in Special Publication 800-108.  And it is also the same technique that
NIST uses to get 440 bits of initial state using SHA-256 in the
HASH-DRBG of NIST Special Publication 800-90A.

--David",<56194BA7.7030004@sbcglobal.net>,dmjacobson@sbcglobal.net,0.0,0,13,2015-10-10 10:32:23
131,EdDSA,14,0,Social,,-1,Hi all--,<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
132,EdDSA,14,110,"InformationProviding,InformationProviding",,-1,"
in draft-irtf-cfrg-eddsa-05, there is a context label defined for ed448,
but no such label is defined for ed25519.  (the ""context label"" is a way
to provide domain separation between signatures made in different
contexts, avoiding cross-protocol attacks)",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
133,EdDSA,14,111,"InformationProviding,ExtensionOfPrevious",,-1,"
people seem OK with domain separation for ed448, but we've rejected it
for ed25519 to achieve backward compatibility with existing signatures,
and to avoid API changes to existing ed25519 libraries, as discussed in
threads like [0].",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
134,EdDSA,14,112,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
I wanted to float one final middle-ground proposal that would allow us
to align the APIs between the two by adding an optional context
parameter to ed25519/ed25519ph.  If this isn't acceptable, please
consider instead the proposed additional Security Considerations toward
the end of this message.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
135,EdDSA,14,113,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
The proposal for including optional context labels in 25519 is simple:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
136,EdDSA,14,114,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
* in Table 1: Parameters of Ed25519, change H(x) from ""SHA-512(x)"" to
""SHA-512(context || x)"", and change PH(x) to ""context || x"".",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
137,EdDSA,14,115,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
* change the sentence describing the ph variant that follows the table
to:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
138,EdDSA,14,116,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",115,-1,"
Ed25519ph is the same but with PH being SHA-512(context || x)
instead, i.e., the input is hashed using SHA-512 before signing with
Ed25519.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
139,EdDSA,14,117,"InformationProviding,ExtensionOfPrevious",,-1,"
If ""context"" is unspecified by the user it is treated as the empty
string and, the result is exactly the same as the current description.
This is also easy for someone to implement with existing ed25519
libraries with no API change: just concatenate before signing or
verifying.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
140,EdDSA,14,118,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
This would mean that a signature with a context label for 25519 is not
separated from a signature *without* a context label (a weaker domain
separation than we're offering in ed448), but it at least provides a
standard way for protocols that want to make domain-separated signatures
to do so, which might help us to encourage domain separation in
standards which contemplate the use of either Ed448 or Ed25519 (their
abstract APIs are alignable).",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
141,EdDSA,14,119,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
I also think we need some text explaining the difference between the two
approaches.  If we adopt the above proposal, we could add something like
this to the Security Considerations or section 10.3 (""Use of contexts""):",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
142,EdDSA,14,120,"InformationProviding,ContextSetting,ProposeAction,ExtensionOfPrevious",,-1,"
Note that the domain separation for Ed25519 and Ed25519ph is weaker
than the domain separation for Ed448 and Ed448ph in two ways:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
143,EdDSA,14,121,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",120,-1,"
(a) Signatures that do not use context labels can potentially
collide with signatures that use context labels.  This can only be
mitigated by never using the same key in multiple domains without
having a domain-specific context label for each use.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
144,EdDSA,14,122,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",120,-1,"
(b) Signature domains that use context labels where one context
label is a prefix of the other may also have collisions.  This can be
mitigated by always choosing a context labels that consist of
printable ASCII characters followed by a single zero-valued octet.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
145,EdDSA,14,123,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",120,-1,"
This weaker domain separation is accepted in Ed25519 due to widespread
existing context-free deployment and the desire to avoid breaking
backward compatibility. For Ed448, which is not yet as widely
deployed, the dom() function's stronger domain separation guarantees
are preferred.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
146,EdDSA,14,124,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
If we do not adopt the above changes, and leave ed25519 and ed25519ph
without any attempt at domain separation, we also probably need a bit of
text explaining why one primitive has domain separation and the other
does not, probably in either Security Considerations or section 10.3.
Otherwise, future people reading the draft would need to track down
messages like those in [0] to understand the asymmetry.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
147,EdDSA,14,125,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",124,-1,"
A proposal for text in this scenario:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
148,EdDSA,14,126,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",125,-1,"
Note that only Ed448 offers strong domain separation via context
labels, while Ed25519 lacks this capability.  This is due to a desire
to retain backward compatibility with existing Ed25519 deployments,
and to leave the Ed25519 API as simple as possible.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
149,EdDSA,14,127,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
If an application or protocol needs domain separation in situations
where Ed25519 may be used, a weaker form of domain separation may be
had by prepending a context label (fixed octet string) to the message
before signing or verifying, using a different context label for each
signature domain.  For the prehash variant, prepend the context to the
message before pre-hashing.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
150,EdDSA,14,128,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
To avoid collisions between domains when using this weaker form of
domain separation, context labels should consist of only printable
ASCII characters followed by a single-valued octet.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
151,EdDSA,14,129,"Question,Question",,-1,"
What do folks think?",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
152,EdDSA,14,130,Social,,-1,"
--dkg",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
153,EdDSA,14,131,InformationProviding,,-1,"
[0] see for example Ilari's response here to Bryan Ford at Message-Id:
20151211202214.GA5522@LK-Perkele-V2.elisa-laajakaista.fi
https://www.ietf.org/mail-archive/web/cfrg/current/msg07713.html",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
154,EdDSA,14,132,"InformationProviding,ExtensionOfPrevious",131,-1,"
and the ""On the differences of Ed25519/448 and how it affects a vote
on twoshakes-d"" thread starting at Message-Id:
CAA4PzX18bcS_awPg-YDAoo90537Ot=s_nf7k_Vt75OVSdvtDrQ@mail.gmail.com
https://www.ietf.org/mail-archive/web/cfrg/current/msg07665.html",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
155,EdDSA,14,134,Social,,-1,"Hi Daniel,",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
156,EdDSA,14,262,"Answer,Agreement,Agreement","112,129",-1,"
Your proposal seems to me to be a very sensible idea.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
157,EdDSA,14,263,"InformationProviding,ExtensionOfPrevious",,-1,"
We are quite keen to get draft-irtf-cfrg-eddsa ""shipped"", as it's needed
elsewhere in IETF and dependencies are building up.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
158,EdDSA,14,264,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
So, @all, let's try to have a quick discussion on the proposal and see if
any reasons emerge for not adopting it.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
159,EdDSA,14,267,"Answer,InformationProviding,NeutralResponse,Agreement,Disagreement","117,129",-1,"This is okay with me, except for one pedantic clarification.  ""Empty string"" has a specific meaning in C, it's a single NUL byte.  Since our other uses of context including the NUL terminator, to avoid prefix attacks, then I think the wording needs some editing.",<11c960b5f1fa42aaaf4cd0a6961332ec@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-04-20 11:27:00
160,EdDSA,14,289,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",267,267,"
the ""empty string"" message in my message was not part of the proposed
wording change to the draft, but i can see how it might be confusing if
it were to make it into an edit.

If we need additional clarification in the draft to avoid confusion, i
propose:

If no context label is supplied, it is treated as an octet string of
zero length; that is, (context || x) is the same as x.
",<87ziso1m0l.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 08:51:22
161,EdDSA,14,297,"Agreement,Agreement",289,289,"
Works for me!",<e11afdc6c7db4952b9d2447b5974750d@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-04-20 12:59:58
162,EdDSA,14,327,"Answer,Question",267,267,"
Eh, I thought the other uses had length prefixing to avoid prefix attacks?
",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 17:29:53
163,EdDSA,14,329,"Question,Disagreement,ProposeAction,Question",289,289,"
Also, anyone up to some quick analysis to show that doesn't interact
harmfully with Ed25519 when using the same keys?

Also, that wouldn't solve the troublesome interaction between Ed25519
and Ed25519ph...
",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 17:29:53
164,EdDSA,14,330,Social,,289,"
-Ilari",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 17:29:53
165,EdDSA,14,381,"InformationProviding,Answer,Disagreement,NeutralResponse",327,327,"
they do, but we can't have that while still preserving backward
compatibility with the deployed implementations of ed25519, and while
making it relatively easy to use with ed25519 libraries that don't offer
explicit contexts.

If you wanted to do a length-prefixed context, but apply it only in the
case where the context exists (has non-zero length), that's another
option that would preserve backward compatibility with the deployed base.

But i think that's marginally more complicated to reason about and to
implement, and it still doesn't address the potential for collision
between contextualized and context-free domains, so i'm not sure what
we'd gain.
",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
166,EdDSA,14,383,"ClarificationElicitation,InformationProviding,ClarificationElicitation",329,329,"
eh?  this is specifically and only about how to apply a context label in
Ed25519 and Ed25519ph, since it's already defined for Ed448 -- what do
you mean ""interact harmfully with Ed25519"" ?
",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
167,EdDSA,14,385,"Answer,Agreement,Social,NeutralResponse",329,329,"
That's true, this proposal doesn't try to solve that problem.  I hope it
can be evaluated independently.

--dkg",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
168,EdDSA,14,427,"Question,InformationProviding,Answer,Question",383,383,"
Suppose attacker can get signatures for arbitrary (context,message) pairs
under some key, can he forge a signature for some (context',message') under
that key that he didn't see?
",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 21:26:17
169,EdDSA,14,429,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",385,385,"
I actually once implemented variant of Ed25519 with contexts done like
Ed448. Separate variant, so needed its own keys. It would be very easy
to build Ed25519ph-like scheme by just using SHA-512(msg) as prehash
and marking the message as prehashed (there is no need for context in
inner hash).
",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 21:26:17
170,EdDSA,14,430,Social,385,385,"
-Ilari",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-20 21:26:17
171,EdDSA,14,493,"InformationProviding,Answer,NeutralResponse",427,427,"
sure, by definition if context' is a prefix of context, and message' is
just the concatenation of (context - context' || message), then it's a
viable forgery.

This is the price we pay for backward compatibility, but it's actually a
*better* situation than we have without a recommended way to use a
context label.

Without a context label, any arbitrary message can be treated as a
""forgery"" by simply replaying it in a different context. (e.g. i sign
an ASN.1 sequence of two integers, and you understand it as signed
finite-field DHE params, but i wanted you to understand it as an RSA
public key)

With a context label, for every domain that defines a sane context
(e.g. the guidance i suggested of printable-ascii followed by '\0'), we
can rule out inter-domain replay as a successful forgery because no
context will be a prefix of any other context.

Furthermore, in practice, if we don't specify a standard way to use a
context label for domain separation in Ed25519, different schemes may
apply the context label in different ways, potentially allowing for some
message collision.
",<87bn540xh3.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 17:41:28
172,EdDSA,14,495,"Question,InformationProviding,NeutralResponse,Social,NeutralResponse,Question",429,429,"
i'm sure we could propose an entirely new variant that has the same
robustness as Ed448, but it would fail the backward compatibility goals
that i thought the group (including you) had previously identified. In
my proposal here, i am trying to work within those constraints.  Are you
saying that Ed25519ph doesn't need the backward compatibility?

If you're proposing a fix to a separate problem, is it something we can
consider separately?

--dkg",<87bn540xh3.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 17:41:28
173,EdDSA,14,582,"InformationProviding,Disagreement,NeutralResponse",493,493,"
H(x)=SHA-512(context||x) without any lengths or separators does not behave
that way. It does not have trivially computable collisions (but easily
computed ones might still exist, or worse, a way to extract the private key).

That is, signature for ('abc','def') is not expected to validate for
('abcd','ef').

It is also not possible to compute the result using stock Ed25519 code
with any non-empty context.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
174,EdDSA,14,584,"InformationProviding,Disagreement,NeutralResponse",493,493,"
Contexts were never meant to help with internally-inconsistent protocol
(e.g. TLS ServerKeyExchange signatures), only between different protocols
possibly sharing keys.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
175,EdDSA,14,586,"InformationProviding,Disagreement,NeutralResponse",493,493,"
Also, contexts cause large amount of API problems. And it is very easy
to use in spec without understanding the problems, resulting spec that
is very annoying to implement.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
176,EdDSA,14,588,"InformationProviding,NeutralResponse,Disagreement",493,493,"
There is absolutely no working way to apply contexts using stock Ed25519
implementations that isn't utterly broken.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
177,EdDSA,14,590,"InformationProviding,Disagreement,NeutralResponse",495,495,"
I don't think Ed25519ph needs backward compatiblity.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
178,EdDSA,14,592,"InformationProviding,Answer,NeutralResponse",495,495,"
It is closely related in any space to stick contexts to would also be space
to stick the hash flag to.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
179,EdDSA,14,593,Social,,495,"
-Ilari",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 07:39:47
180,EdDSA,14,669,"InformationProviding,NeutralResponse,UnderstandingNegative,ClarificationElicitation",582,582,"
I think I'm confused.  Surely if I set chunk = { 'a', 'b', 'c', 'd', 'e',
'f'} containing six octets, then SHA-512(chunk) is the same, whether I
construct chunk from 'abc','def' or 'abcd','ef'.  So you must be talking
about something else, but I'm not sure what.
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
181,EdDSA,14,671,"Question,ProposeAction,ClarificationElicitation",582,582,"
Can you be more specific?  Is the complaint just that one would need to
use a temporary buffer and copy the data to be signed in order to put in
the prefix?
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
182,EdDSA,14,673,"Question,NeutralResponse,Question",586,586,"signing API include a context input?  If yes, use that input; if no,
prepend the context to the message to be signed in my own code.  What am I
missing?
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
183,EdDSA,14,675,"InformationProviding,NeutralResponse,Agreement",590,590,"
I am mostly inclined to agree, which gives some useful flexibility here.
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
184,EdDSA,14,677,"Agreement,Social,Agreement",592,592,"
Sure.

-Ben",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
185,EdDSA,14,735,"InformationProviding,NeutralResponse,NeutralResponse",669,669,"
I actually implemented the scheme (modifying the python reference
implementation in the draft (modifying H(x) to be SHA512(context|x)).

- Modified and base scheme generate identical signatures and validate
identical signatures for empty context (as expected).
- Signature of ('abc','def') is different from signature of ('abcd','ef')
and does not cross-validate. Nor does either cross-validate with
('',abcdef).
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 22:50:14
186,EdDSA,14,737,"InformationProviding,Answer,Disagreement",671,671,"
No. I am saying you can't put in the prefix unless you have Ed25519
implementation modified to support it. Buffering the message won't
help.
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 22:50:14
187,EdDSA,14,739,"Answer,Disagreement,Disagreement",673,673,"
This does not work.
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 22:50:14
188,EdDSA,14,740,Social,673,673,"
-Ilari",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 22:50:14
189,EdDSA,14,773,"Question,InformationProviding,NeutralResponse,ClarificationElicitation",735,735,"
Is this because you're including the NUL octet between the context and
the signature, or for some other reason?  if so, then i'd phrase it as:

signature of ('abc\0', 'def') is different from signature of ('abcd\0', 'ef')

which i think everyone would agree is the right outcome.

Or are you talking about some other scheme?
",<87zismzo9o.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-21 16:43:15
190,EdDSA,14,775,"ClarificationElicitation,Social,ClarificationElicitation",739,739,"
Why not?  Can you explain more?

--dkg",<87zismzo9o.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-21 16:43:15
191,EdDSA,14,830,"InformationProviding,NeutralResponse,InformationProviding",735,-1,"Hmm, Ilari's messages are not making it into either my MIT or my Akamai
inbox; that's quite unfortunate.
",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
192,EdDSA,14,832,"InformationProviding,Answer,NeutralResponse",773,773,"
I think Ilari is talking about the Ed448 scheme already describe in the
document, which uses the function:

dom(x, y)  The octet string ""SigEd448"" || octet(x) ||
octet(OLEN(y)) || y, where x is in range 0-255 and y is octet
string of at most 255 octets.  ""SigEd448"" is in ASCII (8 octets).

which length-prefixes the context before including it in the signed data,
among other things.  (The dom() output is then concatenated with other
data before being passed to SHAKE256 as H(x).)
",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
193,EdDSA,14,834,"InformationProviding,Answer,ProposeAction,Social,NeutralResponse",775,775,"
I think we all need to be more clear about whether we are talking about
the existing Ed448 context scheme, or the bits in
http://unicorn-wg.github.io/context-labels/ .

My comments in this thread have centered on the latter.

-Ben",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
194,EdDSA,14,882,"InformationProviding,Answer,Answer",773,773,"
No, I am not including '\0'.

I literially modified H(x) to prepend context (defaulted to blank byte
string), with no lengths nor separators to x before hashing with SHA-512..

It does not handle empty context as special case, since <empty> is
additive identity for string concatenation.
",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 09:21:21
195,EdDSA,14,884,"InformationProviding,Answer,NeutralResponse",775,775,"
H(x)=SHA512(context|x) does not cause behaviour like Ed25519(key,context|x)
when applied.It causes behaviour that can't be expressed using the base
Ed25519 primitive.
",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 09:21:21
196,EdDSA,14,885,Social,775,775,"
-Ilari",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 09:21:21
197,EdDSA,14,895,"InformationProviding,UnderstandingNegative,NeutralResponse",884,884,"
I don't know why we got hung up on that concept.  PH(x) =
SHA512(context || x) might be closer to what we've been thinking of.",<CABkgnnVd28WHT+wpMxVd+XczkiJmExkjTewG5B_a1uKgTMo7+A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 17:26:37
198,EdDSA,14,916,"InformationProviding,Disagreement,NeutralResponse",895,895,"
1) That only 'works' with Ed25519ph. And even with that, you do not
want the context inside data hash.

2) You definitely do not want that kind of context schemes on non-
context keys. Even the prepending the context in hash (without
separation) makes me VERY uneasy.
",<20160422091618.GB27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 12:16:18
199,EdDSA,14,917,Social,,895,"
-Ilari",<20160422091618.GB27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 12:16:18
200,EdDSA,14,947,"InformationProviding,NeutralResponse,NeutralResponse",916,916,"
I don't know what you want, but maybe you could tell me why I don't want that.
",<CABkgnnUGSWYe+Z4t63GpNipLLUx4G43U+ARL+jYL825k6QraMw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 20:37:28
201,EdDSA,14,949,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",916,916,"
Well, it's how everyone is forced to do things if the primitive
doesn't have native contexts.  I agree that it could be better, but
I'm not going to lose sleep over it.

I'm having a hard time understanding what you want out of this
conversation.  Maybe you could try to explain whether you think that
context is a good idea and maybe how you would prefer that we solve
the problem.",<CABkgnnUGSWYe+Z4t63GpNipLLUx4G43U+ARL+jYL825k6QraMw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 20:37:28
202,EdDSA,14,1003,"InformationProviding,NeutralResponse,NeutralResponse",947,947,"
1) More vulernable to attacks there.
2) You need the context outside it anyway for non-prehashed version
(if you do contexts).
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 14:28:43
203,EdDSA,14,1005,"InformationProviding,NeutralResponse,NeutralResponse",949,949,"
Or just split on key. May be bit painful (and sometimes not possible
at all, e.g. TLS versus CSR) but much better than dealing with the
API mess.
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 14:28:43
204,EdDSA,14,1007,"InformationProviding,NeutralResponse,NeutralResponse",949,949,"
It is not possible to retrofit contexts into Ed25519 in a way that
I would be even remotely comfortable with. This is because Ed25519
lacks any space to put any extensions to.

Just adding contexts to Ed25519 without splitting variant would
leave it open for trivial attacks (or cryptographic screwedness
I really do not want to see).

If you split variant, you can do whatever is desired, eg. fit
Ed448-style context and hash indicator (which would also solve
problems with Ed25519ph).
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 14:28:43
205,EdDSA,14,1008,Social,949,949,"
-Ilari",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 14:28:43
206,EdDSA,14,1074,"Question,NeutralResponse,Question",1003,1003,"
can you describe the attacks you're concerned about?
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
207,EdDSA,14,1076,"InformationProviding,NeutralResponse,Disagreement",1005,1005,"
I don't think the API mess is as worrisome as you do.  We've had API
changes for primitives in the past (i already mentioned HKDF's evolution
from previous context-free KDF schemes), and they haven't caused the sky
to fall.  We already have a plan for how people can continue using the
primitive without a context label, and we can provide a well-defined
(granted, suboptimal) way for people to use it *with* a context label as
well.
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
208,EdDSA,14,1078,"InformationProviding,NeutralResponse,ProposeAction,Agreement",1007,1007,"
Right, this is the backward-compatibility issue.  So, we're trying to
propose a standard way that people who want contexts can use them with
Ed25519 that doesn't break backward compatibility with context-free
Ed25519.

This is guaranteed to be weaker protection than a scheme that included
contexts from the beginning; but we're not at the beginning -- the
deployed base of ""pure"" Ed25519 is too large.

However, it seems likely to offer better protection than either:

a) no one does domain separation at all even in cases where key
separation is not possible

b) different protocols make up their own domain separation mechanisms,
which may or may not collide with each other

No one is arguing that this is a perfect thing to do for Ed25519, we're
arguing that we should do something which is better than nothing at
all.  This is the curse of trying to improve a deployed base.  it should
be familiar to anyone who works at the IETF :/
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
209,EdDSA,14,1080,"Question,InformationProviding,NeutralResponse,UnderstandingNegative,Question",1007,1007,"
Are there other ""trivial attacks"" beyond confusing signature with a sane
context with a context-free signature?  Is there other cryptographic
screwedness we should be aware of?

I don't understand how to split the variant in a way that is
successfully incompatible with ""pure"" Ed25519, since as you say Ed25519
has no extension mechanism.

Are you proposing a way to do this that i'm not seeing?

--dkg",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
210,EdDSA,14,1166,"InformationProviding,NeutralResponse",1076,1076,"
Well, I don't recall seeing KDF interface.

But then, given crazy stuff I have seen in at least one WG, signature
APIs might not be that standardized (outside things like PKCS#11, that
are bit bad matches anyway).
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 20:12:28
211,EdDSA,14,1168,"InformationProviding,NeutralResponse,NeutralResponse",1078,1078,"
There exists pretty close to trivial transform that transforms any signature
scheme into DIFFERENT signature scheme (that uses original scheme as subroutine)
with context input.

Weak signatures are transformed into weak signatures with context, strong
signatures are transformed into strong signatures with context.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 20:12:28
212,EdDSA,14,1170,"InformationProviding,Answer,Answer",1080,1080,"
Yes, trivial existential forgeries. And attempts to look at how prefixing
the context into inner hash would fare turned into mess.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 20:12:28
213,EdDSA,14,1172,"InformationProviding,NeutralResponse,Answer",1080,1080,"
You can add contexts, only you get different scheme (which needs
different keys). If you can compute the result using existing Ed25519
code as-is is independent.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 20:12:28
214,EdDSA,14,1173,Social,,1080,"
-Ilari",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-22 20:12:28
215,EdDSA,14,1184,"InformationProviding,Agreement,ProposeAction,Agreement",267,267,"
+1

It would be better to say that an “empty context” consists of zero bytes (or octets if you prefer).
",<B0216DAC-3C6A-4FD8-8D17-447260153633@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-04-20 14:07:32
216,EdDSA,14,1186,"InformationProviding,ContextSetting",,-1,"Paterson, Kenny writes:",<20160420205120.28700.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-20 20:51:20
217,EdDSA,14,1200,"Question,InformationProviding,NeutralResponse,Social,Apologising,Question,Apologising",263,263,"
Do any of those dependencies rely on having the signed object be
something other than a message?

I sent CFRG a message ""Side inputs to signature systems"" back in
September that raises several different objections to the ""context""
concept. I believe that all of the objections remain valid. I didn't
notice until now that the concept was still under consideration; sorry!

---Dan",<20160420205120.28700.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-20 20:51:20
218,EdDSA,14,1289,"InformationProviding,Answer,ContextSetting,NeutralResponse",1200,1200,"
The context label is explicitly in place in Ed448 in the current draft,
but not in Ed25519.

Your concerns are reasonable, but i don't think they're insurmountable
or that they warrant the removal of Ed448:
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
219,EdDSA,14,1291,"InformationProviding,ExtensionOfPrevious,NeutralResponse,Answer","1200,1289",1200,"
A library that implements a signature scheme that has a context string
needs to provide an API for it, yes.  For signature schemes where the
context string is optional (which is all of them, afaict), the context
label should be optional.  Libraries that implement such a scheme can
continue to offer the traditional API (without a context label) of
course.

We've already seen some primitives adopt this approach, including the
""info"" parameter for HKDF-Expand
(https://tools.ietf.org/html/rfc5869#section-2.3).  This isn't a
traditional asymmetric signature scheme, but it's an addition to the API
compared to earlier KDFs (e.g. PBKDF2 didn't have such a context label).
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
220,EdDSA,14,1293,"InformationProviding,NeutralResponse,Answer",1200,1200,"
We're actually doing exactly this in TLS 1.3, but doing it in an ad-hoc
way: basically using the prefix approach in some places (e.g. server
CertificateVerify and client CertificateVerify in TLS 1.3 are prefixed
with distinct context strings:
https://tools.ietf.org/html/draft-ietf-tls-tls13-12#section-6.3.4), and
switching our KDF to HKDF in others (key expansion, etc
https://tools.ietf.org/html/draft-ietf-tls-tls13-12#section-7.1).
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
221,EdDSA,14,1294,"Question,InformationProviding,Answer,UnderstandingNegative,ClarificationElicitation",1200,1200,"
I'm not sure what you mean here.  You mean more context labels?  the
goal here is one distinct context label per domain.  the only purpose of
the context label is domain separation.  why would you want more than
one?
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
222,EdDSA,14,1296,"InformationProviding,Answer,Answer",1200,1200,"
Not all signature schemes take the same set of parameters (e.g. public
keys and secret keys have different structures in different messages).

A library that wants to offer a generic signature scheme where the user
doesn't know anything about the mechanism in use could accept a context
label (byte array and length) and a message (bytearray and length).  if
the signature scheme supports an explicit context, it would use it. If
not, it could use the concatenation approach described above.
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
223,EdDSA,14,1298,"Question,InformationProviding,Answer,Question,Answer",1200,1200,"
""more informative"" assumes that you know exactly how any bytestring is
going to be interpreted in every other context.

If we define a standard way that a signature or key derivation domain
can distinguish itself from any other domain, then we can avoid
cross-protocol attacks for every scheme that adopts this standard.

Without it, each protocol will define how it thinks it should structure
a message that is ""informative enough"" to be distinct from every other
signed message in every other protocol -- but how will this be
determined without cross-protocol coordination?  This mechanism offers a
means for cross-protocol coordination by selection of distinct context
strings.  (for signature schemes like Ed448 that aren't using the
prefix-approach, the only requirement is context string uniqueness,
since they are prefix-resistant)

Does this make it seem more palatable?  This isn't a strictly
cryptographic property, it's a mechanism to facilitate larger
cross-protocol coordination.
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
224,EdDSA,14,1347,"InformationProviding,Answer,NeutralResponse,NeutralResponse",1298,1298,"
To perhaps step back a bit, a signature scheme taking an optional context
label input with specified semantics (i.e., the label is prepended,
recommended to end with a NUL byte, etc.) is a way to strongly suggest
that application protocols using that signature scheme provide such ""more
informative message""s, and gives guidance as to what the structure of the
more informative message could be.

I don't really care if the application protocol makes its message being
signed more informative (i.e., specific to the particular protocol message
at hand) by manually putting that data at the front of its signing input
and ignoring the context input, or by using the context input.  I just
want it to happen, since that improves the overall safety of the internet.
",<alpine.GSO.1.10.1604201928520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-20 19:38:25
225,EdDSA,14,1349,"InformationProviding,Answer,NeutralResponse",1298,1298,"
Having a contetx input to newly specified signature schemes (and a
registry to ensure global prefix-uniqueness, which dkg and Martin and I
are working on a draft for) is a way to help protocol designers that
aren't cryptographers do the right thing, cryptographically speaking.
Perhaps there are better ways to encourage this behavior, but this is the",<alpine.GSO.1.10.1604201928520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-20 19:38:25
226,EdDSA,14,1415,"InformationProviding,NeutralResponse,ProposeAction,Social,NeutralResponse",1347,1347,"
If you want to include a NUL byte to separate the context from the
following stuff, then to avoid ambiguity you need to require that the
context not contain any NUL bytes.   And this rules out general binary
blobs as context values, including general ASN.1 objects.

NIST Special Publication 800-108 (about key derivation functions) made
this mistake.  Even though Section 7.4 requires a 1-to-1 mapping from
inputs to the internal blob send to the PRF, the constructs used in
Section 5 does not achieve that requirement when the label is allowed to
be an object that contains a NUL byte.

--David",<57186958.1040907@sbcglobal.net>,dmjacobson@sbcglobal.net,0.0,0,13,2016-04-20 22:47:04
227,EdDSA,14,1439,"InformationProviding,NeutralResponse,Agreement",1415,1415,"
Yes, we can be more concrete if you like:

It's possible to say that only necessary requirement is that no label
be a prefix of any other.  One way of doing that is with a proper
bijective mapping like the length-and-value encoding used in Ed448.
However, that makes zero-length contexts incompatible with existing,
context-free signatures; or to retcon existing uses into being good
citizens.

BTW, the plan is to submit this as a -00 soon, but here's our recommendation:

https://unicorn-wg.github.io/context-labels/#rfc.section.4

I'm sure that this will stimulate many fruitful discussions, much like this one.",<CABkgnnXPqaZcx_Yg_EozUG1Lv2rN592JOyXE=e3wcJWws_po3A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-21 15:58:22
228,EdDSA,14,1459,"InformationProviding,NeutralResponse,NeutralResponse",1415,1415,"
You really don't want ASN.1 objects, JSON serializations or anything like
that as context values.

Those values are supposed to be at most name of the protocol and possibly
version thereof (if one decides to use those at all).
",<20160421143752.GA24969@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 17:37:53
229,EdDSA,14,1460,Social,,1415,"
-Ilari",<20160421143752.GA24969@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-04-21 17:37:53
230,EdDSA,14,1699,"Question,InformationProviding,ProposeAction,InformationProviding",,-1,"Here's the standard API for signature systems:

* keygen inputs: nothing; outputs: public key, secret key;
* sign inputs: message (string), secret key; outputs: signature;
* verification inputs: message, signature, public key: outputs: yes/no.

This API is overwhelmingly popular in the cryptographic literature, the
security literature, and the software ecosystem. It is shared by the
vast majority of

* specifications of signature systems,
* papers analyzing the security of signature systems,
* theoretical proofs regarding signature systems,
* cryptographic libraries, and
* applications of signatures at higher layers of software.

This sharing is tremendously helpful---compare it to all the horror
stories of mismatched APIs slowing everybody down, making the auditor's
job hellishly difficult, and producing real-world security problems. The
simple fact that the signature API is so popular means that any change
to the API comes with a heavy presumption of being a _very bad idea_.

I'm not saying that it's impossible to rebut this presumption. For
example, I recommend merging the message and signature into a signed
message---I'm acutely aware of how many system layers need to be adapted
to make this work, but I don't see any other plausible way to eliminate
the very common ""use the message without noticing it's a forgery"" error
pattern. Stateful signatures are a deeper example. In both of these
cases I see clear, convincing reasons for a new API, outweighing the
massive costs and dangers---but changing the API is obviously an uphill
battle against a default position of amply justified skepticism.

This brings me to the idea of modifying signature specifications to add
""contexts"" (whatever exactly those are!) to signing and verification,
with the hope of stopping cross-protocol attacks. There's a severe lack
of justification for this idea:

* The security analysis is almost entirely missing. It's easy to come
up with examples where the idea seems to work, but slightly more
thought shows many more examples where the idea fails, because it's
not directly aimed at the core cross-protocol issue.

* The syntax/layering/API analysis is entirely missing. In every case
where the idea is effective, the same benefit is also achieved by a
much more traditional fix that _doesn't_ change the signature API,
and this traditional fix is much easier from a systems perspective.

As an example, let's imagine that the PGP protocol adopts some sort of
signature-plus-context system, and labels itself with context ""PGP"".
Sounds like a great way to separate PGP from other protocols, right?

Now let's consider two protocols built on top of PGP (copied verbatim
from my first ""Side inputs to signature systems"" message):

* Protocol A: There are two messages, ""Put the troops through a
surprise drill"" and ""Don't put the troops through a surprise
drill"". For efficiency these messages are compressed to ""1"" and
""0"" respectively. For security, make sure to check that the
compressed message is signed with the General's PGP key.

* Protocol B: There are two messages, ""Launch the missiles"" and ""Don't
launch the missiles"". For efficiency these messages are compressed
to ""1"" and ""0"". For security, make sure to check that the
compressed message is signed with the General's PGP key.

There's a gigantic cross-protocol vulnerability here, and the ""PGP""
context string completely fails to stop this vulnerability.

If you think that the messages in protocol A have to be separated
somehow from the messages signed by the same key in protocol B, then of
course you're right---but how exactly is this supposed to map to the
vague concept of a ""context""? Was it wrong for the PGP protocol to
declare ""PGP"" as the context? Is A supposed to assign a new ""A"" context,
ignoring the lower-level protocol that's actually doing the signatures?
How is the PGP software supposed to handle this?

What happens when the semantics of the A message _do_ take information
from the lower-level protocol? Should the higher-level protocol A change
the context to some tree structure such as ""A within PGP""? Maybe nobody
is actually using the side data available from PGP, but there are many
other examples of semantics being built through chains of protocols.

Even worse, what if the people writing the A software and the B software
don't even realize the need to coordinate ""context""? Assigning semantics
to strings is something that programmers are doing all the time---and,
whenever these strings are transmitted through an untrusted network, the
new semantics create a new opportunity for cross-protocol attacks. By
saying ""Protocol A"" and ""Protocol B"" I've been painting a picture of
programmers who _realize_ that they're building new protocols, but this
is not actually the normal situation; it is a rare exception.

At this point I expect ""Aha, we know the solution!"" comments from fans
of dozens of different formats for ""self-describing strings."" Random
examples that come to mind include the VAX/VMS file format, the original
MacOS file-type system, the Internet mail-message attachment format,
XML, etc., etc., etc. The dream of each of these formats is to provide a
grand unified description of semantics, resolving all possible
misinterpretations. This means that all we have to do is specify that
signed messages are encoded as XML, right?

Unfortunately---even if we ignore the question of how well defined and
understood these formats are---the reality is that programmers are
defining new data semantics so frequently that they usually don't even
define new types _inside their own programs_, never mind going through
the hassle of registering types in any of these grand unified systems.
The universe of semantics defined by software ends up vastly broader
than contemplated in any of these formats. Each format ends up resolving
misinterpretations only within an extremely limited semantic scope.

But wait, there's more! The notion of having a file describe its own
semantics might seem reasonable in contexts where each file is handled
independently---for example, viewed within a stateless file viewer. But
this notion disintegrates as soon as files begin to communicate through
a shared state. By changing this shared state, a signed file can change
how a subsequent signed file is interpreted---but then the signatures
need to include the state or some other strict-sequencing mechanism, to
prevent an attacker from changing the semantics of the second file. The
protocol _after_ modification of the shared state is not the same as the
protocol _before_ modification of the shared state.

It's easy to say that cross-protocol attacks are created by messages
being taken out of context. But what _is_ the context? This is the core
issue, and solving it is vastly more complex than simply sticking ""PGP""
somewhere into a signature hash. As I wrote before (without elaborating
on what the word ""protocol"" means):

The standard fix for this type of problem is to encode more
information into the signed messages so that they can't be taken out
of context. Of course, to figure out how much information is enough,
you have to work at the protocol layer, understanding all the
different contexts in all of the high-level protocols that might sign
messages under the same key---and the protocol designers need to talk
to each other! Any encoding, no matter how verbose, can be ruined by
another protocol assigning new meanings to some of the encoded
messages.

I think that's enough about semantics. Let me now turn to the questions
of syntax, layering, and API.

Show me any definition of semantics in a signature-plus-context system---

* what the ""context"" says about the semantics of the message, and
* how the ""message"" then encodes data

---and I'll show you an equivalent definition of semantics for the
_standard_ signature API, the simpler API that doesn't have ""context"":
simply encode the same ""context"" information and the data together as
the ""message"" to be signed.

This use of the _standard_ signature system provides all of the same
protection against cross-protocol attacks that can possibly be provided
by the signature-plus-context system. What creates the protection is
_not_ the change of signature concept to include a separate ""context"";
what creates the protection is defining the semantics of the string
being communicated.

The huge advantage of this syntax choice is that it's compatible with
the signature API already used in specifications and papers and proofs
and libraries and the rest of the system. It preserves the familiar
signature layer that we already have. It minimizes the number of inputs
for signing and the complexity of the task facing the signature-system
auditor.

I hope I've now made sufficiently clear that I'm objecting---and why I'm
objecting---to the use of ""contexts"" and other side inputs in CFRG's
specifications of signature systems.

Daniel Kahn Gillmor writes:",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
231,EdDSA,14,1701,"InformationProviding,NeutralResponse,NeutralResponse",1289,1289,"
My objection applies equally to all signature systems with side inputs.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
232,EdDSA,14,1703,"Question,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1291,1291,"
This is considerable deployment hassle---and it's only the beginning of
the massive software upgrade that you'd need to actually make ""context""
work. Remember that, e.g., PGP would need to accept ""context"" arguments
from any application processing PGP-signed messages, that those
applications would need to similarly allow ""context"" from higher-level
callers, etc. And then what happens if the applications, for whatever
reasons, think that they need to use traditional signature systems? Is
the ""context"" thrown away, allowing cross-protocol attacks? Or is it
encoded into the message, which is exactly what I'm saying should always
be done, and which doesn't need or want ""context"" in the signature spec?

Encoding the same information into traditional messages does just as
well in stopping cross-protocol attacks as a ""context"" side input can
possibly do. The API divergence is unnecessary and highly undesirable.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
233,EdDSA,14,1705,"Question,NeutralResponse,Question,Answer",1293,1293,"
Do you have justification for using the loaded word ""ad-hoc"" here? It
should be obvious that part of the job of TLS is to adequately define
the semantics of its own signatures. It's not at all surprising that
these semantics are specific to TLS.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
234,EdDSA,14,1707,"Question,Answer,Question",1294,1294,"
What's the ""domain"" for a PGP-signed message, interpreted by protocol X,
further interpreted by protocol Y, as meaning ""Immediately sell all of
the stocks that I listed in my previous message""? Surely one needs to
include not just static protocol information but also something dynamic
such as the hash of the stock list or of the previous message.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
235,EdDSA,14,1709,"InformationProviding,NeutralResponse,Answer",1298,1298,"
This is a tough question of semantics, as I've been trying to explain.
Complicating the syntax---splitting ""message"" into ""message"" plus a
separate ""context""---is of no value in tackling this question of
semantics. Meanwhile the costs of the new syntax are very clear.

Benjamin Kaduk writes:",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
236,EdDSA,14,1711,"InformationProviding,NeutralResponse,Social,Disagreement",1298,1347,"
Everyone agrees on trying to eliminate all possible confusion in the
semantics of signed messages, but the right way to do this is to
directly tackle the question of semantics, not to frivolously screw
around with the standard syntax for a signature system. You're saying
that you don't care about the syntax/layering/API issues; I _do_ care
and am very much opposed to changing the API.

---Dan",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
237,EdDSA,14,1809,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding",1703,1703,"
I'm just going to add a few more comments in addition to my reply from the
last time.

(And as always, anything of this complexity is unlikely to ever get
implemented, or implemented right for that matter. This is mostly a thought
experiment.)

https://www.ietf.org/mail-archive/web/cfrg/current/msg07302.html

Summary of how to define the context:

Track the path / branch taken through the code in the generation of the
signed message (identifying the software, the configuration / instance of
it, what it was that invoked the generation of the signature, which checks
the software went through to confirm it should be created, or whatever else
is important). Encode that with the message.

Document what each section of each code branch means, which paths are
valid, what exactly is authorized by any given path's signatures.

A code path that only covers acknowledgement of receipt obviously can't be
use to issue orders of action. Anything that parse the signed messages for
some given system must follow the documentation and must be able to
determine what exact actions a message authorizes. Ideally every type of
valid action should also be explicitly defined in the documentation, so
that this is possible to begin with.

The more I think of it, the more it resembles building a capabilities
oriented system. A bit like an adaption of Bitcoin pay-to-script-hash
transactions / Ethereum, where the system declares what conditions must be
fulfilled for every given action, and where the signed messages
(transactions) must prove the conditions were fulfilled. Take a look at
Bitcoin's Merkelized Abstract Syntax Trees (MAST) for a highly relevant
reference.
http://css.csail.mit.edu/6.858/2014/projects/jlrubin-mnaik-nityas.pdf

You shouldn't sign messages with this data structure without first
verifying it does what you want (to not fall for signature oracle attacks).
If everybody follows that advice, you can be sure that the signer intended
to create that particular message.
",<CAAt2M1-ccRTkMjV0jwDn-MbdcftLB4x8Zx6sEs4p1ph8c1Z3oQ@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2016-04-23 17:16:34
238,EdDSA,14,1810,"InformationProviding,NeutralResponse,ExtensionOfPrevious",1703,1703,"
By my reading, it sounds like you'd rather see something like a specific
signature message input format, where you sign some structured data that
encode the message. (Perhaps we could use the new saltpack format, and
define some json / xml data structure for encoding contexts, etc.)

As for the comment on preventing (carelessly) stripping out the raw message
without further verification: encrypt the message with a key derived from
the metadata (the non-message parts of the data structure) and signature.
Yes, this too is likely to be bypassed by careless programmers, but at
least they should have come across an warnings against doing so when
reading the documentation on how to extract the message. It shouldn't end
up like this:
https://xkcd.com/1181/",<CAAt2M1-ccRTkMjV0jwDn-MbdcftLB4x8Zx6sEs4p1ph8c1Z3oQ@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2016-04-23 17:16:34
239,EdDSA,14,1849,Social,,-1,"Hi Dan--
",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
240,EdDSA,14,1851,"InformationProviding,NeutralResponse,NeutralResponse",1699,1699,"
This seems to be saying that because domain separation by context labels
doesn't solve all conceivable cross-protocol issues (i agree it does
not) that we should not use it to address those issues that it does
solve.

Your PGP example is definitely correct.  The PGP signature would not
prevent collisions of multiple PGP messages with different
interpretations.  However, it *would* prevent a PGP signature from being
replayed as a signature on a TLS certificate verify message from the
same secret key (or a PKINIT message in krb5, etc)
",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
241,EdDSA,14,1853,"Question,InformationProviding,NeutralResponse,ProposeAction,Social,Thanking,ExtensionOfPrevious",1699,1699,"
i'm assuming that the ""traditional fix"" is just ""incorporate a sane
context-specific bytestring into the message being signed"".  And I
agree, it would be great if people did that.  But calling it a
""traditional fix"" implies that there is a tradition of doing the right
thing here, and that's been inconsistent at best.

Do you have a better suggestion of how to formalize this practice than
giving protocol designers a place to put a distinct context?  I'd be
happy with other proposals that try to address the same issue.

Thanks for the thoughtful discussion,

--dkg",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
242,EdDSA,14,1911,"InformationProviding,NeutralResponse,NeutralResponse",1853,1853,"
A second traditional fix is ""never use the same key for two different
purposes"".  And if the ""general"" in DBJ's story can't deal with many
keys, then use a KDF to derive a key for each purpose from the general's
key.  You can even have multi-level use of KDFs.  Once can be each
semantic domain the general uses, and a second level can be for
protocols (e.g. ""PGP""), etc., as deep as you need to go.

This keeps the issue of domain separation independent of encryption APIs
and algorithms.
",<571BF701.4050007@sbcglobal.net>,dmjacobson@sbcglobal.net,0.0,0,13,2016-04-23 15:28:17
243,EdDSA,14,1914,"InformationProviding,InformationProviding",,-1,I see after a long absence that I missed a new flare-up of the Great Context Debate (tm). :),<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
244,EdDSA,14,1950,"InformationProviding,ExtensionOfPrevious",,-1,"
When I originally proposed the hashing scheme that included contexts for Ed448, I brought up this Ed25519 backward-compatibility issue, and suggested a few alternatives, at least one of which as I recall was similar to DKG’s suggestion.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
245,EdDSA,14,1951,"InformationProviding,Agreement,ProposeAction,ExtensionOfPrevious,Agreement",,-1,"
At any rate, I agree with DKG and others that it would be nice for the RFC to specify a way to deal with an *optional* context parameter for Ed25519 - for consistency with Ed448 if nothing else - while preserving Ed25519 backward compatibility when the context parameter is missing/empty.  No one is forced to use it, but having it in the RFC - and in the APIs of implementations that choose to support it - both makes the RFC more self-consistent and offer a small robustness benefit to new protocols that decide to use contexts.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
246,EdDSA,14,1952,"InformationProviding,ExtensionOfPrevious",,-1,"
While the same domain-separation benefit can always be achieved by just prefixing the message, having an explicit context parameter in an API forces the software developer who’s calling that API to see it, and think “do I need to pass something there? what? should I ask a colleague?”  Whereas it’s much easier (essentially trivial) to “forget” to decide to prefix a signed message with something, especially if you’re not a crypto-geek and never heard that you were supposed to.  TLS won’t use contexts, and that’s fine, bit TLS isn’t the relevant “customer” here.  The “customer” is all the possible users of Ed25519 that are *not* nearly so widely-analyzed as TLS.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
247,EdDSA,14,1953,"InformationProviding,ExtensionOfPrevious",,-1,"
Yes, key-separation practices are good too, but do not substitute for the domain-separation that contexts can provide, because relying on key-separation exposes message-confusion risks at much higher levels of the “protocol stack” where key management occurs.  If an IETF protocol or proprietary application protocol is designed to use of a context, then any properly-functioning software implementing that protocol will enforce that domain-separation independently of how well or badly users or administrators might manage their keys.  Contexts provide a way for the protocol and software developer to enforce domain separation, whereas key-separation in many environments is something users and administrators have to do.  As others have stated, it’s about redundancy: no one is saying key-separation is bad, but encouraging the use of both reduces the chance of something going critically wrong at *both* levels (protocol design/implementation and key management).",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
248,EdDSA,14,1954,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
In terms of how exactly to specify a backward-compatible context mechanism for Ed25519, I would certainly support DKG’s specific proposal where context may be empty) as offering a reasonable balance between simplicity and domain-separation goals.  But just to explore a couple slightly different variants with slightly different tradeoffs:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
249,EdDSA,14,1955,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",1954,-1,"
1. DKG’s proposal (baseline): mainly just change H(x) in Table 1 to H(context || x), where context may be empty for backward-compatibility.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
250,EdDSA,14,1956,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",1954,-1,"
2. Change the H(x) line in Table 1 to:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
251,EdDSA,14,1957,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1956,-1,"
|    H(x)   | SHA-512(x) [RFC4634] if ctx is empty               |
|    H(x    | SHA-512(len(ctx) || ctx || x) if ctx is nonempty   |",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
252,EdDSA,14,1958,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1957,-1,"
Advantage: stronger domain separation, ensuring any use that specifies a context is domain-separated from any use that does not.
Downside: slightly more complex specification and code (one ‘if’ statement), though this bit of complexity is hidden from callers of the Ed25519 API.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
253,EdDSA,14,1959,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",1954,-1,"
3. Change the H(x) line in Table 1 to:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
254,EdDSA,14,1960,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1959,-1,"
|    H(x)   | SHA-512(len(context)^len(context) || context || x) [RFC4634]    |
…that is, the prefix is L consecutive bytes having value L, where L is the length of the context string, followed by the context and x.  So:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
255,EdDSA,14,1961,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1960,-1,"
- empty context: H(x) is SHA-512(x)
- context = “foo”: H(x) is SHA-512(“\3\3\3foo” || x)
- context = “blah”: H(x) is SHA-512(“\4\4\4\4blah” || x)",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
256,EdDSA,14,1962,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1961,-1,"
Advantage: eliminates the need for a special-case (the ‘if’ statement) for backward compatibility, while providing the same stronger domain-separation of alternative #2 above.
Downside: doubles the effective size of the context-prefix to process.  But I can’t imagine this mattering in any practical scenario, especially since contexts are expected to be short strings.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
257,EdDSA,14,1965,"Agreement,NeutralResponse",1959,-1,#3 is a clever idea.,<BY2PR09MB126C138CF1136B3DC2F732DF34C0@BY2PR09MB126.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2016-05-21 10:18:52
258,EdDSA,14,2015,InformationProviding,,-1,Bryan Ford writes:,<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
259,EdDSA,14,2046,ExtensionOfPrevious,1952,1952,>From a security perspective there's even more importance to specifying,<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
260,EdDSA,14,2054,"Question,InformationProviding,NeutralResponse,Answer",1952,1952,"
And so they copy and paste code from somewhere else, or (if they're in
control of both ends) try the empty string, which works, the same way
that most protocols built on top of DNS are identified in DNS as ""TXT"".
How do you imagine most programmers being successfully pressured to
create a new ""context"" whenever the message semantics change: library
revisions, for example, or state modified by previous messages?

If you think you're solving the fundamental cross-protocol security
problems that I described in ""Side inputs to signature systems, take 2"",
then let me suggest that you follow up in detail to that message. I see
your proposed bottom-to-top API revision as a distraction from the core
task of developing secure message semantics.

We already have too many file-type systems. Most of them were designed
out of complete disregard for previous work; we definitely don't need
more of these. Efforts to define semantics via oversimplified metadata
tags (DOS file types, for example, and MIME types) have always ended up
being supplemented by more flexible mechanisms to define semantics
inline (MP4, for example, and XML). People build software-dispatch
mechanisms around metadata tags and then end up having to build more
flexible software-dispatch mechanisms to handle subtypes declared
inline. Programmers are constantly fighting multiple API layers for
something that could and should have been handled with just one layer.
",<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
261,EdDSA,14,2055,"InformationProviding,NeutralResponse,Social,ExtensionOfPrevious",1952,1952,"semantics clearly; it's even more clear that these semantics depend on
application-specific dynamic context; and we _definitely_ don't want
unnecessarily complicated APIs. Separate tags have historically proven
to be inferior to inline mechanisms in all of these dimensions.

---Dan",<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
262,EdDSA,14,2094,Social,,-1,"Hi Dan,
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
263,EdDSA,14,2096,"InformationProviding,NeutralResponse,NeutralResponse",2054,-1,"
Even if they just to that, then that’s better than if there was no context parameter.  The subset of developers who just copy-and-paste a “TXT” context parameter for one set of applications (likely related, since they’re more likely to copy-and-paste from a similar application than a completely unrelated application) will be domain-separated from the subset of developers who copy-and-paste a “FOO” context parameter in another set of applications, and from the developers who copy-and-paste a “BAR” context parameter in a third class of applications.  Whereas without the context parameters, there will be no domain separation and the risk of signature confusion is strictly worse than if there were no context parameters.

Further, in any IETF-defined protocol in the future that specifies that the context parameter must be “FOO”, any demonstrably interoperable implementation of that protocol will have to use that context parameter, because an implementation that doesn’t will fail to interoperate in a completely obvious way.  Thus, if the IETF defines the Foo protocol to use “FOO” as the contexts in its signatures, and the Bar protocol is defined to require “BAR” to be used as the context in its signatures, then the FOO and BAR domains will effectively be enforced via the IETF process, leaving it not even up to the application developers.  Of course developers of different Foo implementations will probably still copy-and-paste code that creates “FOO”-context signatures from other implementations of the Foo protocol, but that’s fine.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
264,EdDSA,14,2098,"InformationProviding,Answer,Disagreement",2054,2054,"
I never suggested that, and I don’t remember seeing anyone else here suggesting that.  In fact I don’t remember hearing anyone suggesting that programmers be “pressured” to do anything in particular with contexts.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
265,EdDSA,14,2100,"InformationProviding,NeutralResponse,Disagreement",2054,2054,"
Looking up the message you’re referring to, it looks to me like you’re way overthinking this.

Yes, you could turn the context into a hierarchical filesystem-like namespace if you want, e.g., with “FOO/V1” versus “FOO/V2” being V1-type versus V2-type signatures for protocol or application FOO.  One of the nice things about variable-length strings is that they’re automatically composable, up to the 255-byte limit.  Protocol developers - or other IETF WGs that need to use signatures and need to specify what the “context” should be for those signatures - are free to consider fancy hierarchical schemes like that if they want.  Or not.  The EdDSA RFC need not and should not mandate that or any particular scheme for choosing context strings.  Leave that to those who build applications or protocols that use signatures.  If you don’t want context strings at all in your next application or protocol, then fine, don’t use them (i.e., use the empty string).  No Context Police SWAT team is going to bash down your door and haul you in to the face the Inquisition.

Nobody that I see is proposing that contexts “solve” any “fundamental cross-protocol security problems”.  All they are intended to do is add a bit of (weak, but preferably redundant) protection against certain classes of message-confusion blunders at a software engineering level.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
266,EdDSA,14,2102,InformationProviding,,-1,Bryan Ford writes:,<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
267,EdDSA,14,2131,"InformationProviding,NeutralResponse,NeutralResponse",2096,2096,"
Applications that share keys are very likely to copy this parameter, for
the same reasons that they pretty much always end up copying MIME types.
The benefits you're referring to are limited to cases where applications
share keys but manage to stick _more_ information into this parameter
than they would have stuck into the message itself.

Meanwhile everyone ends up suffering through bottom-to-top complications
in the signature API. This is, in particular, a drag on auditing, and
it's going to end up taking resources away from auditing and fixing the
hard cases of cross-protocol attacks, very much the same way that a pile
of well-intentioned complications to the X.509 certificate format ended
up taking resources away from what we _need_ to do with certificates.
",<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
268,EdDSA,14,2133,"InformationProviding,NeutralResponse,Social,NeutralResponse",2096,2096,"
The IETF-defined protocols can just as easily use prefixes---in fact,
more easily, because then they simply work with _all_ signature systems
rather than just systems supporting the committee API.

Nobody is objecting to having signature users coordinate message
semantics (especially if they're sharing keys!). Nobody is objecting to
having a central registry of prefixes. But this doesn't need a new API,
and there are many other reasons to object to a new API.

---Dan",<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
269,EdDSA,14,2143,"InformationProviding,NeutralResponse,NeutralResponse",2055,2015,"
So, in general, I gather, you’re saying that added complexity is not
simply strictly unnecessary but actually dangerous?  Go figure!
__outer",<AD2B974C-3945-4984-A020-693975C86246@interlog.com>,outer@interlog.com,0.0,0,86,2016-05-21 12:27:40
270,EdDSA,15,20,"InformationProviding,InformationProviding",,-1,"This draft satisfies all of my issues.  From that point of view I think it
is ready to progress.",<09b401d1fa5e$e85a0ae0$b90e20a0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-19 14:16:07
271,EdDSA,15,21,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
The following at things that might be clarifications and might not.  I would
request that you look at them, but none of them are of the level that I feel
they need to be fixed.",<09b401d1fa5e$e85a0ae0$b90e20a0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-19 14:16:07
272,EdDSA,15,22,"InformationProviding,ExtensionOfPrevious",,-1,"
Section 3.3 - paragraph 1 - The text here is slightly misleading.  It was
correct in the past for EdDSA25519 and EdDSA25519ph, but it is not quite
correct now.  Given that much clearer instructions exist in later sections I
don't think this is a problem.",<09b401d1fa5e$e85a0ae0$b90e20a0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-19 14:16:07
273,EdDSA,15,23,"Question,InformationProviding,ExtensionOfPrevious",,-1,"
I don't know if this needs to be dealt with in the constant time
verification or not.  Can I short circuit after doing the checks for
validity of S and the public key without doing the math to check the
signature value and not leak any significant information.",<09b401d1fa5e$e85a0ae0$b90e20a0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-19 14:16:07
274,EdDSA,15,24,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
I will look at doing validation of the examples sometime this weekend.",<09b401d1fa5e$e85a0ae0$b90e20a0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-19 14:16:07
275,EdDSA,15,44,"InformationProviding,Agreement,NeutralResponse",22,-1,"
I don't know about that EdDSA intro section. I find it hard to
read too.
",<20160820072819.vckgxbhlmgadxtdd@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-20 10:28:20
276,EdDSA,15,46,"InformationProviding,NeutralResponse,NeutralResponse",23,23,"
Well, all inputs for verification are usually public, so verification
usually does not need to be constant-time.

(There might be some bad standards that need constant-time
verification, but those are very rare and quite nasty).
",<20160820072819.vckgxbhlmgadxtdd@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-20 10:28:20
277,EdDSA,15,47,Social,,23,"
-Ilari",<20160820072819.vckgxbhlmgadxtdd@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-20 10:28:20
278,EdDSA,15,49,"Answer,ContextSetting,InformationProviding",23,-1,I have validated the following:,<006101d1fb2f$42b5cb20$c8216160$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-20 15:07:34
279,EdDSA,15,100,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",49,-1,"
1.  All of the examples in the draft validate using the python code
supplied.
2.  All of the examples in the draft validate using my implementation.",<006101d1fb2f$42b5cb20$c8216160$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-20 15:07:34
280,EdDSA,16,8,"Question,Question,InformationProviding",,-1,"Do you have test vectors for the Ed448 curve?  There appears to be a driver
for Ed25519 but not for Ed448 as well as a pointer for only one set of test
vectors.",<021201d1dc0e$1b9138d0$52b3aa70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-12 00:22:10
281,EdDSA,16,9,"InformationProviding,ProposeAction,Answer",,-1,"
Yes, I can see the test vectors in the text, but the python test vectors
would be useful as well.",<021201d1dc0e$1b9138d0$52b3aa70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-12 00:22:10
282,EdDSA,16,30,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",9,9,"
There are no actual test vectors for Ed448 python implementation. The way
the stuff in document is generated is taking driver from the repo,
and using it with given inputs to yield those ""test vectors"" (the same
applies to everything except Ed25519).

I do happen to have another implementation (In C, pretty slow) I can
feed the ""test vectors"" to check those.
",<20160712090823.GC30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-12 12:08:23
283,EdDSA,16,31,Social,,9,"
-Ilari",<20160712090823.GC30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-12 12:08:23
284,EdDSA,18,58,"Question,InformationProviding,InformationProviding,ProposeAction,ContextSetting",,-1,"One of the things I am trying to persuade groups writing crypto
applications is that we should adopt a common format for fingerprints, Why?",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
285,EdDSA,18,59,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",58,-1,"
1) Because having a standard approach is the right thing to do",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
286,EdDSA,18,60,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",58,-1,"
2) Because a direct trust mechanism (i.e. a fingerprint) is useful in every
crypto application",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
287,EdDSA,18,61,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",60,-1,"
* OpenPGP Key fingerprints
* SSH server keys AND it would be nice to do public keys one day
* Roots of trust for PKIX and S/MIME",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
288,EdDSA,18,62,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",58,-1,"
3) Because simply taking SHA-2 of 'stuff' opens possibilities for semantic
substitution attacks",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
289,EdDSA,18,63,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",58,-1,"
4) Adopting a common format encourages innovation that can benefit all
applications that share that format.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
290,EdDSA,18,64,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",58,-1,"
5) Adopting a single fingerprint format encourages the development of
applications to manage them across applications - like the Mathematical
Mesh which I am working on.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
291,EdDSA,18,65,"ExtensionOfPrevious,InformationProviding",,-1,"
We are not going to get to one true representation of keys. But I think we
could get to a fingerprint format that every application can use without
the risk of semantic substitution attacks.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
292,EdDSA,18,66,"ExtensionOfPrevious,InformationProviding",,-1,"
I am not too bothered about the possibility that someone generates an
OpenPGP key and somehow persuades S/MIME to send a message using the same
key. If I am being really strict, I can see it is not ideal.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
293,EdDSA,18,67,"ExtensionOfPrevious,InformationProviding",,-1,"
What does worry me however is that if Mallet gives Alice his key
fingerprint for OpenPGP, she puts it in her 'trusted key ring' and it turns
out that when the SSH app interprets the sequence of bits that were
fingerprinted they have some different semantics.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
294,EdDSA,18,68,"ExtensionOfPrevious,ContextSetting,ProposeAction",67,-1,"
My current proposal is in:",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
295,EdDSA,18,69,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",68,-1,"
https://tools.ietf.org/html/draft-hallambaker-udf-03",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
296,EdDSA,18,70,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",69,-1,"
This allows use SHA-2-512 and SHA-3-512 as the hash algorithms. The default
presentation is as a text string encoded in BASE32 encoding with spacing
every 5 characters to promote readability.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
297,EdDSA,18,71,"ExtensionOfPrevious,InformationProviding",,-1,"
So a SSH server fingerprint might look like:  MB2GK-6DUF5-YGYYL-JNY5E-RWSHZ",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
298,EdDSA,18,72,"ExtensionOfPrevious,InformationProviding",,-1,"
One of the things I find rather difficult with SSH is that the key files
for the applications I have seen in the wild do not comply with the spec,
lines don't wrap at 72 characters. Rather worse, the files have the full
public key in them which makes them a real pain to use when configuring
files.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
299,EdDSA,18,73,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
I would really like to be able to configure my GitHub accounts without
having to cut and paste lines with a thousand characters of text. It would
be nice if the SSH config files could use fingerprints rather than the
actual keys.",<CAMm+Lwgomf0jBeUUD0_9hnvm9w26mFx6E-DqOpc=85JQweiQUw@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-24 14:07:05
300,EdDSA,18,98,InformationProviding,,-1,"Phillip Hallam-Baker <phill@hallambaker.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4D01FAE@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2016-08-25 03:33:09
301,EdDSA,18,100,"NeutralResponse,InformationProviding,NeutralResponse",61,61,"
ObXKCD: https://xkcd.com/927/
",<9A043F3CF02CD34C8E74AC1594475C73F4D01FAE@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2016-08-25 03:33:09
302,EdDSA,18,101,"NeutralResponse,InformationProviding,Disagreement,Social",70,70,"
Oh not another SHA-as-big-as-we-can-get.  We know from various (public-IP)
Internet scans that the universal standard on the net is SHA-256, and
anything else, in particular the huge SHA-2 variants, are the GPS signal
of the Internet, their use is so far below the noise floor that you need
specialised signal processing just to see they're there.  Just stick with
SHA-256, which pretty much everything does, rather than going to oddball
exotic algorithms that need special-case support.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4D01FAE@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2016-08-25 03:33:09
303,EdDSA,18,146,"NeutralResponse,InformationProviding,NeutralResponse",101,101,"
​It is for compatibility with this:
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-07

My approach is that I do not believe in giving the user unnecessary
options. In particular won't give a lower security option unless there is a
compelling performance reason. ​

So I use SHA-2-512 and truncate to however many bits as are needed.

Since people want to use OpenPGP with ed448 curves for a 2^256 work factor,
there needs to be a fingerprint option with equivalent strength.

The code is going to need SHA-2-512 anyway. Just standardize on the higher
level.",<CAMm+Lwh92qS7Dz+=gt_hdO8FYuniwQqkzEJ6ss5z2OkKWvxmxQ@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2016-08-25 16:01:46
304,EdDSA,19,32,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Crypto Forum of the IETF.",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
305,EdDSA,19,33,"InformationProviding,ExtensionOfPrevious",,-1,"
Title           : Edwards-curve Digital Signature Algorithm (EdDSA)
Authors         : Simon Josefsson
Ilari Liusvaara
Filename        : draft-irtf-cfrg-eddsa-07.txt
Pages           : 59
Date            : 2016-08-18",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
306,EdDSA,19,34,"InformationProviding,ExtensionOfPrevious",,-1,"
Abstract:
The elliptic curve signature scheme Edwards-curve Digital Signature
Algorithm (EdDSA) is described.  The algorithm is instantiated with
recommended parameters for the edwards25519 and edwards448 curves.
An example implementation and test vectors are provided.",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
307,EdDSA,19,35,"InformationProviding,ExtensionOfPrevious",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
308,EdDSA,19,36,"InformationProviding,ExtensionOfPrevious",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-07",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
309,EdDSA,19,37,"InformationProviding,ExtensionOfPrevious",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-irtf-cfrg-eddsa-07",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
310,EdDSA,19,38,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
311,EdDSA,19,39,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<147158307706.27924.9494565103560825219.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-18 22:04:37
312,EdDSA,20,0,Social,,-1,"Hi CFRG,",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
313,EdDSA,20,17,"InformationProviding,InformationProviding",,-1,"
The TLS WG is nearing the end of our journey moving EC-based algorithms for TLS 1.2 (and earlier) from Informational to Standards track [0].  While we were doing that we also added in 25519 and x448 as well as EdDSA.",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
314,EdDSA,20,18,"ExtensionOfPrevious,InformationProviding,ContextSetting,ProposeAction",,-1,"
I’d like to get some input from the CFRG on the use of contexts; the ""context label"" is a way to provide domain separation between signatures made in different contexts, avoiding cross-protocol attacks.  s10.3 of draft-irtf-cfrg-eddsa includes the following:",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
315,EdDSA,20,19,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",18,-1,"
Contexts SHOULD NOT be used opportunistically, as that kind of use
is very error-prone.  If contexts are used, one SHOULD require all
signature schemes available for use in that purpose support
contexts.",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
316,EdDSA,20,20,"Question,ExtensionOfPrevious,Question,InformationProviding",,-1,"
This is great advice for new protocols because it’s easy to make all the schemes the same, but for existing protocols like TLS where there’s zero chance of obsoleting the existing signature schemes and defining new signature schemes with contexts it makes you wonder what “opportunistically” means. I.e., would setting a context parameter for Ed448 and no other already defined signature scheme be considered opportunistic?",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
317,EdDSA,20,21,"ExtensionOfPrevious,InformationProviding",,-1,"
spt
(as document Shepherd for draft-ietf-tls-rfc4492bis)",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
318,EdDSA,20,22,"ExtensionOfPrevious,InformationProviding",,-1,"
[0] https://datatracker.ietf.org/doc/draft-ietf-tls-rfc4492bis/",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
319,EdDSA,20,24,Social,,-1,"Dear CFRG,",<D4A2C31D.7E0C6%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-16 18:37:17
320,EdDSA,20,69,"InformationProviding,InformationProviding,ProposeAction",,-1,"
Please chime in asap if you have a view on the issue of signature contexts
in TLS 1.3, as described by Sean below. Otherwise, chairs will make a
possibly ill-informed decision...",<D4A2C31D.7E0C6%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-16 18:37:17
321,EdDSA,20,118,"NeutralResponse,InformationProviding,Answer,NeutralResponse,StateDecision",20,20,"
Domain separation for signed values is important and TLS already defines
context strings for signature operations:
https://tools.ietf.org/html/draft-ietf-tls-tls13-18#section-4.4.2

The way that this is constructed (due to me) is generic for any signature
scheme. (Basically just have the context string be NUL-terminated at the
beginning of the signed message.)

So for TLS I believe that the issue is already taken care of. It would also
probably just add pain for implementers if the context string were to be
duplicated as an input to the signature scheme where signature schemes
support it.
",<CAMfhd9WgPYfiCULuQpFOVeoLEEX__dZCa=ZoZuzdSJ_i9da5PQ@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2017-01-16 10:45:34
322,EdDSA,20,121,InformationProviding,,-1,Adam Langley writes:,<20170116200948.6535.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2017-01-16 20:09:48
323,EdDSA,20,153,"NeutralResponse,Question,InformationProviding,NeutralResponse,ProposeAction,Social",118,118,"
In other words, there's still a simple sign-a-message layer that uses
the standard signature API, that works with all signature systems, and
that minimizes costs for implementors and auditors. On top of this
there's a universal

def sign_a_context_and_data(c,d):
if '\0' in c: raise Exception('NUL not allowed in contexts')
return sign(c + '\0' + d)

layer used by the protocol (and by any other protocols that want it).
Everyone can see how this works from a spec perspective and from a
software-engineering perspective.

For comparison, trying to modify the interface and specification of
every sign() function creates a transition nightmare, with nobody able
to answer basic questions about how this approach is actually supposed
to work. What's the advantage supposed to be?

I would really like to see this unnecessary complexity eliminated from
CFRG's signature specifications. Please see

https://www.ietf.org/mail-archive/web/cfrg/current/msg08167.html

for further comments.

---Dan",<20170116200948.6535.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2017-01-16 20:09:48
324,EdDSA,20,186,"NeutralResponse,InformationProviding,NeutralResponse",153,153,"
I'm relatively neutral on the use or non-use of contexts,
but lean more towards Dan's position that the API changes
involved mean that practically, it's better to not demand
contexts.

However, I really do wish that CFRG specs would not offer
both choices - that will simply lead to repeating this
discussion each time an IETF protocol wants to use the CFRG
spec. And of course, different decisions will be made over
time, leading to slightly more mess than would otherwise
exist. That's not a showstopper thing, but life will be
better if the choice is not offered.

So, I'd support eliminating contexts from CFRG specs and
saying something like ""if you want that, and it's not a
bad idea for avoiding cross-protocol attacks, then do it
at a layer above the crypto API.""
",<5eeb3d4d-1fc0-35ba-6f47-87fa0d808edc@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2017-01-17 11:48:38
325,EdDSA,20,189,InformationProviding,,-1,"On Jan 17, 2017 3:48 AM, ""Stephen Farrell"" <stephen.farrell@cs.tcd.ie>",<CACsn0ckLeQmNiJAzHuNBxV_X1NDqWhjrWh+-R_Z-umtXUTb9ow@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-17 07:06:45
326,EdDSA,20,237,"NeutralResponse,InformationProviding,NeutralResponse",153,153,"
I'm relatively neutral on the use or non-use of contexts,
but lean more towards Dan's position that the API changes
involved mean that practically, it's better to not demand
contexts.

However, I really do wish that CFRG specs would not offer
both choices - that will simply lead to repeating this
discussion each time an IETF protocol wants to use the CFRG
spec. And of course, different decisions will be made over
time, leading to slightly more mess than would otherwise
exist. That's not a showstopper thing, but life will be
better if the choice is not offered.

So, I'd support eliminating contexts from CFRG specs and
saying something like ""if you want that, and it's not a
bad idea for avoiding cross-protocol attacks, then do it
at a layer above the crypto API.""
",<CACsn0ckLeQmNiJAzHuNBxV_X1NDqWhjrWh+-R_Z-umtXUTb9ow@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-17 07:06:45
327,EdDSA,20,286,"Agreement,Agreement",19,19,"
Me too.
",<AA42E783-43FC-4C9B-A387-623B5B18B4FB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-17 17:56:06
328,EdDSA,20,288,"Disagreement,NeutralResponse,InformationProviding,NeutralResponse",186,186,"
Not over time. In the next few months the IESG is going to get documents about EdDSA signatures from TLS, IPsecME and curdle for signatures in TLS, IKE, and PKIX respectively.  If the decision is not the same in all of them, I think (hope) that the IESG would ask why.
",<AA42E783-43FC-4C9B-A387-623B5B18B4FB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-17 17:56:06
329,EdDSA,20,307,"ClarificationElicitation,Question,NeutralResponse",288,288,"
So now that RFC 8032 is out and does include both choices, what is our advice to TLS, IPsecME and Curdle?  Contexts or no?
",<708C8E8E-37AE-4B8F-9843-B0F8CDB29229@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-25 09:02:26
330,EdDSA,20,338,"Question,Question,Answer",307,-1,"
No contexts. Why did we ever include them?

""Man is born free, but everywhere he is in chains"".
--Rousseau.",<CACsn0cm22h8_61CEZjKYyHfnd7vvnC39ZMjhusjWcZKu_Z0zhw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-29 14:33:39
331,EdDSA,20,375,"Answer,InformationProviding,Answer",338,338,"
Seemed like a good idea at the time. The thread begins here:

https://mailarchive.ietf.org/arch/msg/cfrg/GOPQ6lgJcfrXboexQmgNk_ZIZW8 <https://mailarchive.ietf.org/arch/msg/cfrg/GOPQ6lgJcfrXboexQmgNk_ZIZW8>

Regardless, ISTM that almost nobody is advocating for using contexts now for Ed448 in any of the above applications, or for using Ed25519ctx in there.
",<DA141A39-05C2-4B87-92FA-AE8C5421E104@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-30 01:24:06
332,EdDSA,20,389,"NeutralResponse,InformationProviding",375,375,"
If cfrg decided to revisit the decision and eliminate contexts,
I don't think anyone would really suffer. (And any sufferer
can always write an RFC too if that's really needed.)
",<0435210f-0aa4-1c34-89d6-0f7a2aef0621@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2017-01-29 23:37:34
333,EdDSA,20,392,Social,,-1,"Dear CFRG,",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
334,EdDSA,20,437,"Thanking,InformationProviding,Thanking",,-1,"
Thanks to those who already expressed their views on this. We should close
this one out in the next few days. The current rough consensus seems to
lean towards ""no to contexts in this instance"". (The wider question of
whether contexts are a good idea or not is, formally, out of scope here,
but I don't think I can expect y'all to resist discussing it!)",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
335,EdDSA,20,438,"Question,Question,InformationProviding",,-1,"
So: does anyone else want to offer an opinion on the question of contexts?
The original request for input from Sean Turner can be found below.",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
336,EdDSA,20,441,InformationProviding,,-1,"On 30 January 2017 at 12:40, Paterson, Kenny <Kenny.Paterson@rhul.ac.uk>",<CA+yVaTxTbqDUBbX2oTgC6BT2LprOz8uqAbhTRukuqfZD124kSA@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-03 09:16:11
337,EdDSA,20,463,"Answer,InformationProviding,Answer",438,438,"Contexts are a clean and relatively simple way to prevent cross-protocol
attacks, in particular when implemented in an as simple way as proposed
by Adam and Dan.

The cross-protocol attacks we have seen so far were mostly rather
academic and not too practical. However, with an increasing number of
cryptographic protocols in use the occurrence of practical
cross-protocol attacks becomes much more likely, as the number of
possible combinations grows quadratically. At some point it will become
infeasible to analyze all possible combinations thoroughly enough.

I think at some point in the future we will have to deal with the
prevention of cross-protocol attacks by using contexts, and doing this
as early as possible is a good idea - following the ""better safe than
sorry"" principle is always a good idea when designing security protocols.",<CA+yVaTxTbqDUBbX2oTgC6BT2LprOz8uqAbhTRukuqfZD124kSA@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-03 09:16:11
338,EdDSA,20,511,"Disagreement,InformationProviding,NeutralResponse",463,463,"
Unfortunately, in practice those are anything but clean and simple.

Yes, the theoretical notion is pretty simple (where (context,message)
tuple replaces the message in standard notion of signature security).

The biggest practical problem: Backwards compatiblity, the ever-present
nemsis of security.

There are basically two major problems:

- Non-contextualized schemes, which leave the system wide open for
any possible attacks. Hopefully nothing major.
- The standard signature API can't accomodiate contexts.

When it comes to TLS, AFAIK the most significant target for possible
cross-protocol attacks is PKIX CSR mechanism.
",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-03 14:55:33
339,EdDSA,20,512,"ExtensionOfPrevious,InformationProviding",463,463,"
What I think it would take to deploy contextualization to TLS and
closely associated technologies (PKIX mainly):

- New RSA-PSS (possibly original RSA-PSS), ECDSA and EdDSA signature
schemes (X.509 algorithms) that are contextualized.
- New RSA and ECDSA key types (X.509 key types; EdDSA can reuse keys)
- New TLS SignatureScheme values to go with these.

One advantage of having different RSA key type would be that the old
standard one has been jinxed by the broken RSA-PKCS#1v1.5 encryption.
However, there is already standard RSA-PSS key type, which does not
have the same problem AFAIK.
",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-03 14:55:33
340,EdDSA,20,513,Social,,463,"
-Ilari",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-03 14:55:33
341,EdDSA,20,522,"ClarificationElicitation,InformationProviding",438,438,contexts?,<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
342,EdDSA,20,610,"InformationProviding,NeutralResponse",463,463,"
Unfortunately, in practice those are anything but clean and simple.

Yes, the theoretical notion is pretty simple (where (context,message)
tuple replaces the message in standard notion of signature security).

The biggest practical problem: Backwards compatiblity, the ever-present
nemsis of security.

There are basically two major problems:

- Non-contextualized schemes, which leave the system wide open for
any possible attacks. Hopefully nothing major.
- The standard signature API can't accomodiate contexts.
",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
343,EdDSA,20,611,"Question,Question,InformationProviding,ProposeAction","463,610",463,"
Couldn't we go the other way and suggest that people don't simply use the
raw signature primitive, and instead only use a message format that
includes room for contexts? Because in general, only cryptographers should
deal with the raw primitives.

Can anybody find a flaw with the following?

Sign(<private key>;
SHAKE256(<output length parameter>;
<[hexadecimal encoded output length in bits],
[Base64(Signature algorithm + format identifier],
[Base64(Context identifier)],
[hexadecimal encoded message hash]>))

= message signature, context

You feed in the message, key and context, the rest is hardcoded in the
context aware software.

Question: should the public key be included among the above inputs?
Depending on the signature scheme it may not always be formatted as
expected by the verifier (malleability, etc), and must thus be forwarded
along with every message.
This could perhaps be algorithm specific, since those algorithms with a
deterministic public key encoding can hash it without publishing it with
the message, and still validate.

The signature algorithm description could use predefined ciphersuite
identifiers (much like TLS does), defining the exact choices in use.

The above SHAKE256 inputs should also be encoded with prefixes like a null
byte to guarantee there can be no manufactured collision spanning across
them.
",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
344,EdDSA,20,612,"Question,InformationProviding,Question,InformationProviding,Apologising",463,463,"
This should in theory provide a context-equipped signature that will not
collide accidentally with context-less messages, and will not collide
across unique signature algorithms/formats, and in particular will not
collide across contexts.

It should also resist most imaginable attacks including length extension
attacks and similar, while also naturally being able to generate arbitary
length hashes (SHAKE256) for the signing primitives (which may use unusual
input lengths). It even achieves this without truncation or padding!
Another question, should we prefix the SHAKE256 output? Is there any
attacks that would stop?

This format should also stop context-unaware software (which can be
presumed to be intended to NOT be able to parse these message) from being
able to validate these signatures, preventing these signatures from
enabling cross-protocol attacks elsewhere.
While one could verify the signature of the raw SHAKE256 output, it would
be meaningless to most unaware software.

Software only expecting signatures with contexts also wouldn't accept
context-less signatures, as they would be extremely unlikely to validate
(assuming SHAKE256 is secure).
The exception is if a context-less program would be insecure and behave as
a signature oracle or even be malicious and thus could be manipulated to
generate such a SHAKE256 output to be signed, to be used against context
aware software.

(Sorry if anything is incoherent, my phone keyboard app Swiftkey bugged out
and started deleting text. Had to rewrite a lot.)",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
345,EdDSA,20,620,"Question,Question",438,438,contexts?,<CA+yVaTzr+9rFM_GX--6B+M8hyz5O-bWFmjDwEiPKeOyCM17zXQ@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-05 08:48:01
346,EdDSA,20,657,"NeutralResponse,InformationProviding,NeutralResponse",511,511,"
We do not have to change old protocols in order to enable domain separation
via contexts in new protocols:

- Old protocols: keep signing messages as before: sig = Sign(sk, m)
- New protocols: sign messages as sig = Sign(sk, ctx||m)

Here, ctx is a ""unique"" and sufficiently large context string, which even
in presence of an attacker is unlikely to occur in the message m of any
existing protocol. For example, one could use the ASCII string ""TLS 1.3 TLS
1.3 TLS 1.3 ..."", repeating ""TLS 1.3"" a suitable number of times. The
symbol || denotes concatenation of bytes, possibly with a NULL-byte as a
separator.

This is how I understand the solution pointed to by Adam and explained by
Dan, and it seems similar in spirit to (but simpler than) what Natanael
described. In particular, it seems not to break backwards compatibility
with existing protocols, but would allow a smooth transition to the use of
contexts to achieve domain separation, and thus help to prevent
cross-protocol attacks.",<CA+yVaTzr+9rFM_GX--6B+M8hyz5O-bWFmjDwEiPKeOyCM17zXQ@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-05 08:48:01
347,EdDSA,20,727,"NeutralResponse,InformationProviding,NeutralResponse",657,657,"
The problem is, that keys need to be separated as well.

If it is just a protocol that stands alone, then one may just declare
its keys to be suitable.

However, if it uses external keys, you are faced with separating these
keys, which means changes to the key format. And if external keys are
critically used in some other way, you need to modify this use as well.

Implication of above for TLS:

- TLS critically relies in practice on X.509 SPKI key format and X.509
CSRs.
- Reliance on SPKI impiles that new SPKI key type would be needed.
- Reliance on CSR would mean new X.509 signature type would be required.

Yes, the new key type and new signature type are not difficult to
define, but still need to be done for the scheme to give security.
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-05 14:35:37
348,EdDSA,20,729,"NeutralResponse,InformationProviding,NeutralResponse",657,657,"
Fails the basic notion of security of contextualized signatures.
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-05 14:35:37
349,EdDSA,20,731,"NeutralResponse,InformationProviding,Disagreement","18,657",18,"
I don't think they described the catch with this type of construction...
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-05 14:35:37
350,EdDSA,20,732,Social,,18,"
-Ilari",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2017-02-05 14:35:37
351,EdDSA,20,776,"Agreement,Question,InformationProviding,Agreement",153,-1,"I agree with Dan Bernstein's suggestion and reasoning below against CFRG's currently contextualization of signature schemes, though I would also understand if CFRG does not want to reverse its decisions.

Further points:

Protocol designers should be responsible to enforce uniqueness of protocol messages (within and between honest protocols), not just for digital signatures but for all forms of authentication.  How much is this to ask? Isn't that kind of reliability their bread-and-butter?  If there hadn't been non-uniqueness, then cross-protocol attacks would have failed, right?

Adding a context to signatures is a complexity that is (1) not guaranteed to help (no formal security definition, no security proof? And no, I do not volunteer), (2) potentially collides with non-contextualized signatures (must signers now also track whether each non-context signature corresponds to some contextual signature?), (3) blames crypto for too much ;)
",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
352,EdDSA,20,778,InformationProviding,,-1,"
Adam Langley writes:",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
353,EdDSA,20,779,InformationProviding,,118,"> The way that this is constructed (due to me) is generic for any
> signature scheme. (Basically just have the context string be
> NUL-terminated at the beginning of the signed message.)",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
354,EdDSA,20,780,"InformationProviding,ExtensionOfPrevious,InformationProviding","118,153",118,"
In other words, there's still a simple sign-a-message layer that uses the standard signature API, that works with all signature systems, and that minimizes costs for implementors and auditors. On top of this there's a universal

def sign_a_context_and_data(c,d):
if '\0' in c: raise Exception('NUL not allowed in contexts')
return sign(c + '\0' + d)

layer used by the protocol (and by any other protocols that want it).
Everyone can see how this works from a spec perspective and from a software-engineering perspective.

For comparison, trying to modify the interface and specification of every sign() function creates a transition nightmare, with nobody able to answer basic questions about how this approach is actually supposed to work. What's the advantage supposed to be?

I would really like to see this unnecessary complexity eliminated from CFRG's signature specifications. Please see

https://www.ietf.org/mail-archive/web/cfrg/current/msg08167.html

for further comments.

---Dan

Cfrg mailing list
Cfrg@irtf.org
https://www.irtf.org/mailman/listinfo/cfrg",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
355,EdDSA,21,22,"Question,InformationProviding,Question",,-1,"
Why would you do this with Blake2b as opposed to using the personalization
strings feature?

It's simpler and likely faster to do this than to use personalization
strings (which, e.g., the Blake2 internet-draft doesn't include).  See
my note (message-id 20151014152755.03AAE607C3@jupiter.mumble.net) at

https://www.ietf.org/mail-archive/web/cfrg/current/msg07420.html

for details.",<20151014230937.37652607B5@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-14 23:10:50
356,EdDSA,22,32,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Crypto Forum of the IETF.",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
357,EdDSA,22,33,ExtensionOfPrevious,,-1,"
Title           : Edwards-curve Digital Signature Algorithm (EdDSA)
Authors         : Simon Josefsson
Ilari Liusvaara
Filename        : draft-irtf-cfrg-eddsa-05.txt
Pages           : 52
Date            : 2016-03-21",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
358,EdDSA,22,34,ExtensionOfPrevious,,-1,"
Abstract:
The elliptic curve signature scheme Edwards-curve Digital Signature
Algorithm (EdDSA) is described.  The algorithm is instantiated with
recommended parameters for the edwards25519 and edwards448 curves.
An example implementation and test vectors are provided.",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
359,EdDSA,22,35,ExtensionOfPrevious,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
360,EdDSA,22,36,ExtensionOfPrevious,,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-05",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
361,EdDSA,22,37,ExtensionOfPrevious,,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-irtf-cfrg-eddsa-05",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
362,EdDSA,22,38,ExtensionOfPrevious,,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
363,EdDSA,22,39,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20160321162832.31929.98706.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-03-21 09:28:32
364,EdDSA,23,0,"InformationProviding,ContextSetting",,-1,More fun with implementing:,<021b01d1d99f$481c0b80$d8542280$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-08 22:03:48
365,EdDSA,23,15,"Question,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,Question",0,-1,"
1.  Normalization function after point addition is implicit.  Should it be
explicit and mention the fun with modular inverses.  I did not have a
problem with this but notice it is lacking.",<021b01d1d99f$481c0b80$d8542280$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-08 22:03:48
366,EdDSA,23,16,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",0,-1,"
2.  Zero point for the two Point Addition routines is not defined.  Without
knowing this scalar multiplication is harder to do.  I did find the points
needed in the python code but if it was in the text it would be better.",<021b01d1d99f$481c0b80$d8542280$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-08 22:03:48
367,EdDSA,23,17,"Question,ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious",0,-1,"
3.  You have the point addition functions define in the text, should you
also have the point doubling function define in the text as well?",<021b01d1d99f$481c0b80$d8542280$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-08 22:03:48
368,EdDSA,24,24,"InformationProviding,NeutralResponse,Agreement",,-1,"
No objection here, provided it is truncated at (at least) 512 bits.

Well, SHAKE256 isn't a hash (according to FIPS202).

The relevant property is that SHAKE256 truncated at d bits is
advertised to have collision resistance of min(d/2, 256) bits.  So
SHAKE256@512b is supposed to satisfy the main property we expect of a
prehash.

If there are concerns about sharing common outputs, we could always
prepend `Ed448ph-SHAKE256@512b-prehash' or something to the message
before feeding it SHAKE256@512b as the prehash.",<20151016144844.A4232609FD@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-16 14:49:59
369,EdDSA,24,65,"InformationProviding,Answer,Answer",,-1,"
I would simply take SHAKE256 and truncate the output to 512 bits. This
gives a hash function of 512 bits with a 256-bit security strength.
",<56212111.6030100@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-10-16 18:08:49
370,EdDSA,24,67,"InformationProviding,NeutralResponse,NeutralResponse",24,24,"
After truncation, it becomes a hash function, but indeed this is not a
hash function approved by NIST. As far as I understood, the reason for
this is summarized in [FIPS 202, Section A.2], i.e., calling SHAKE with
the same input and different output lengths yield common output
prefixes. However, I expect the output length of the pre-hash to be
clearly defined in the signature scheme.
",<56212111.6030100@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-10-16 18:08:49
371,EdDSA,24,69,"InformationProviding,NeutralResponse,ProposeAction,Agreement",24,24,"
Right, if you need to stick to traditional hash APIs, you would have
""SHAKE256@512b"" for pre-hash and ""SHAKE256@912b"" for the internal hash,
both calling SHAKE256 internally.

When possible, a better solution would be to foresee a XOF API, where
the output bits can be taken at will (""extendable output"", literally).
",<56212111.6030100@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-10-16 18:08:49
372,EdDSA,24,71,"Agreement,Agreement",24,24,"
I agree.
",<56212111.6030100@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-10-16 18:08:49
373,EdDSA,24,112,"InformationProviding,NeutralResponse,NeutralResponse",69,69,"
I wrote a hash library (for all sorts of experiments, it could treat
all kinds of hashes in way uniform to the caller). With API being new
design, but mostly following tried and true IUF (albeit with some
extensions). Had to modify API in ways I'm not happy about in order
to accomodiate variable-width stuff[1].

Well yeah, one could take 912-bit SHAKE256 and truncate it to 512 bits
to get 512-bit SHAKE256. But that property is specific to XOFs, which
aren't the only variable-width things around. With SHAKE256, one could
even use 1088-bit variant (one full block) and truncate the answer.
That would be big enough even for E-521 (needs 1056-bit KDF).
",<20151016170835.GA20968@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 20:08:36
374,EdDSA,24,113,"InformationProviding,ExtensionOfPrevious",69,69,"
This looks to be part of problem with ""exotic-and-simple"" vs. ""ordinary-
and-complicated"" one sees a lot in diffrent contexts.
",<20151016170835.GA20968@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 20:08:36
375,EdDSA,24,114,"InformationProviding,ExtensionOfPrevious",69,69,"
[1] XOFs and variant where different widths are not truncations of each
other.
",<20151016170835.GA20968@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 20:08:36
376,EdDSA,24,115,Social,,69,"
-Ilari",<20151016170835.GA20968@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-16 20:08:36
377,EdDSA,24,153,"InformationProviding,Agreement,Agreement",24,-1,"+1 on using just one hash function Š I still have a slight preference for
BLAKE2 for it¹s speed in software.",<D2466D4B.7CD00%paul@marvell.com>,paul@marvell.com,0.0,0,4,2015-10-16 16:02:06
378,EdDSA,25,29,"InformationProviding,InformationProviding",,-1,"The IESG has completed a review of draft-irtf-cfrg-eddsa-08 consistent
with RFC5742.",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
379,EdDSA,25,30,"ExtensionOfPrevious,InformationProviding",,-1,"
The IESG has no problem with the publication of 'Edwards-curve Digital
Signature Algorithm (EdDSA) ' <draft-irtf-cfrg-eddsa-08.txt> as an
Informational RFC.",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
380,EdDSA,25,31,"ExtensionOfPrevious,InformationProviding",,-1,"
The IESG has concluded that there is no conflict between this document
and IETF work.",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
381,EdDSA,25,32,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
The IESG would also like the IRTF to review the comments in the
datatracker related to this document and determine whether or not they
merit incorporation into the document. Comments may exist in both the
ballot and the history log.",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
382,EdDSA,25,33,"ExtensionOfPrevious,InformationProviding",,-1,"
The IESG review is documented at:
https://datatracker.ietf.org/doc/conflict-review-irtf-cfrg-eddsa/",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
383,EdDSA,25,34,"ExtensionOfPrevious,InformationProviding",,-1,"
A URL of the reviewed Internet Draft is:
https://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
384,EdDSA,25,35,"ExtensionOfPrevious,InformationProviding",,-1,"
The process for such documents is described in RFC 5743",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
385,EdDSA,25,36,"Thanking,Thanking",,-1,"
Thank you,",<147673056683.13143.2317726516445508037.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-17 11:56:06
386,EdDSA,26,49,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"This message starts 2 weeks Quaker Poll on hash functions to be used for
definition of Ed448 in draft-irtf-cfrg-eddsa. Please reply for each choice:
+1, if you prefer a particular choice
0, if you can live with it
-1, if you are against a particular choice",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
387,EdDSA,26,50,"InformationProviding,ContextSetting,ContextSetting",,-1,"
Choices are:",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
388,EdDSA,26,51,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",50,-1,"
1) ""twoshakes-s"", (SHAKE256@912(x) for the internal hash,
SHAKE256@512(x) as the prehash)",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
389,EdDSA,26,52,"InformationProviding,InformationProviding,ExtensionOfPrevious",51,-1,"
More details:
<http://www.ietf.org/mail-archive/web/cfrg/current/msg07629.html>",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
390,EdDSA,26,53,"InformationProviding,ExtensionOfPrevious",50,-1,"
2) ""twoshakes-d"",",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
391,EdDSA,26,54,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",53,-1,"
This scheme again uses the SHAKE256 extensible-output functions (XOFs)
to implement both hashes, with the inputs prefixed as specified below
for explicit domain separation purposes.",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
392,EdDSA,26,55,"InformationProviding,InformationProviding,ExtensionOfPrevious",54,-1,"
More details:
<http://www.ietf.org/mail-archive/web/cfrg/current/msg07629.html>",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
393,EdDSA,26,56,"InformationProviding,InformationProviding,ExtensionOfPrevious",50,-1,"
3) ""simon1"" (SHAKE256@912(x) for the internal hash, SHA3-512 as the
prehash).",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
394,EdDSA,26,57,"InformationProviding,InformationProviding,ExtensionOfPrevious",50,-1,"
4) ""simon2"" (Use SHA2-512/912 as described in [1] as the internal hash
and SHA2-512 as the prehash).",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
395,EdDSA,26,58,"InformationProviding,InformationProviding,ExtensionOfPrevious",57,-1,"
[1] - <http://ed25519.cr.yp.to/eddsa-20150704.pdf>",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
396,EdDSA,26,59,"InformationProviding,InformationProviding,ExtensionOfPrevious",50,-1,"
5) ""ilari1"" (SHAKE256@912bits(x) for the internal hash, SHA2-512(x) as
the prehash)",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
397,EdDSA,26,60,"InformationProviding,InformationProviding,ExtensionOfPrevious",59,-1,"
More details:
<http://www.ietf.org/mail-archive/web/cfrg/current/msg07644.html>",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
398,EdDSA,26,61,"InformationProviding,ExtensionOfPrevious",50,-1,"
6) ""ilari2""",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
399,EdDSA,26,62,"InformationProviding,InformationProviding,ExtensionOfPrevious",61,-1,"
Hash: HKDF-EXPAND(hash=SHA2-512, prk=HKDF-EXTRACT(hash=SHA2-512,
salt=<blank>, ikm=x), info=<blank>, 114) Prehash: SHA2-512(x)",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
400,EdDSA,26,63,"InformationProviding,InformationProviding,ExtensionOfPrevious",62,-1,"
More details:
<http://www.ietf.org/mail-archive/web/cfrg/current/msg07644.html>",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
401,EdDSA,26,64,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",50,-1,"
7) You can specify an alternative proposal, if you wish",<5666F7A9.7020608@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-08 15:30:49
402,EdDSA,26,83,"InformationProviding,InformationProviding,NeutralResponse",49,-1,"-1: twoshakes-s: prefer twoshakes-d
+1: twoshakes-d: domain separation is a nice property
-1: simon1: prefer twoshakes-d
+1: simon2: SHA2-512 would allow a single hash function for both Ed25519
and Ed448. SHA2-512 is the fastest option, and there is presently no reason
to suspect its security
-1: ilari1: I am uncertain of the advantages of mixing SHA2-512 and
SHAKE256. All of the other options use a single hash family
0: ilari2: HKDF is a nice standard construction but I don't see the
advantage over simon2",<CAHOTMVJgO7MhXF+MpnTYGThUJG3YXtD8jQifC=UcDyq3AMPj+w@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2015-12-08 12:24:55
403,EdDSA,26,84,"InformationProviding,ProposeAction,InformationProviding",,-1,"
It would've been nice to see a SHA2-512-based option supporting domain
separation. I'm not prepared to specify it though.",<CAHOTMVJgO7MhXF+MpnTYGThUJG3YXtD8jQifC=UcDyq3AMPj+w@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2015-12-08 12:24:55
404,EdDSA,26,100,"Social,Social",,-1,"Hey,
",<566749CD.5070506@azet.org>,azet@azet.org,0.0,0,7,2015-12-08 22:21:17
405,EdDSA,26,102,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Disagreement",83,83,"
The point made in this proposal is somewhat valid as HKDF is the
""standard"" KDF in IETF and it's going to be used (in some form) in TLS
1.3 [OPTLS]. That being said; I can't see why we should not take the
simon2 proposal.
",<566749CD.5070506@azet.org>,azet@azet.org,0.0,0,7,2015-12-08 22:21:17
406,EdDSA,26,174,"InformationProviding,NeutralResponse",49,-1,"+1: (1), (3)
0: (2)
-1: (4), (5), (6)",<D28CB70B.23B12%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-12-08 21:36:05
407,EdDSA,26,192,"InformationProviding,NeutralResponse",49,49,"
twoshakes-d: 1
simon1: 1
simon2: 0
ilari1: -1
ilari2: -1
twoshakes-s: -1",<alpine.BSO.2.20.1512091011270.12629@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-12-09 10:14:39
408,EdDSA,26,248,"InformationProviding,InformationProviding,NeutralResponse",49,-1,"twoshakes-s: 0
twoshakes-d: +1
simon1: -1, because SHA3-512 is unnecessarily slow.
simon2: 0
ilari1: -1, let's not require 2 totally different hash algs in 1 sig scheme.
ilari2: 0",<6DE973FC-935C-4BFC-8D4B-73FDFA389C8C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-09 05:53:54
409,EdDSA,26,251,"InformationProviding,Thanking,InformationProviding,NeutralResponse,Agreement",248,-1,"My vote is the same. Cheers, -- Mike",<0A6DE226-AC45-4523-9549-3940330DC990@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2015-12-22 21:50:36
410,EdDSA,26,316,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Sent from my phone.  Please excuse brevity and typos.",<0A6DE226-AC45-4523-9549-3940330DC990@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2015-12-22 21:50:36
411,EdDSA,26,375,"InformationProviding,NeutralResponse",49,-1,"twoshakes-s: -1
twoshakes-d:  0
simon1: -1
simon2: +1
ilari1: -1
ilari2: 0",<AA2C0C32-FFE4-47B6-ACCC-96202C64B4CC@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-12-09 12:49:51
412,EdDSA,26,376,"InformationProviding,InformationProviding,ExtensionOfPrevious",375,-1,"
Rationale: simon2 allows SHA2-512 for both Ed25519 and Ed448.",<AA2C0C32-FFE4-47B6-ACCC-96202C64B4CC@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-12-09 12:49:51
413,EdDSA,26,379,"InformationProviding,NeutralResponse,ProposeAction",375,-1,"Please record my poll result as being the same as Russ's, for the same reasons.",<BY2PR03MB442D41D81BD0AD05BC6E2C6F5EC0@BY2PR03MB442.namprd03.prod.outlook.com>,Michael.Jones@microsoft.com,0.0,0,2,2015-12-13 00:29:52
414,EdDSA,26,580,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",49,-1,"0: twoshakes-s: prefer twoshakes-d.
+1: twoshakes-d: domain separation is a nice property
0: prefer Simon-2 or twoshakes-d.
+1: Simon-2
-1: ilari1. No, mixing up two different hashes in that fashion might give
you the stronger of the two, but it is also giving the attacker two systems
to attack and you might well find that a break of either one will work.
-1: ilari2. I think the SHAKE functions are a better way to go than HKDF.
",<CAMm+LwgWA3NGL3MgurT9CYG9HExVWWCgCOLHsatdBiyYev9b9g@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2015-12-09 13:13:10
415,EdDSA,26,581,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",580,-1,"
My preference is that in the future, every IETF crypto primitive has two
preferred options, a mandatory to implement and a 'hot backup'. Right now
SHA-2 is the best choice for mandatory to implement on the basis of
performance and deployment. But I also want to see SHA-3 implemented in
every toolkit so that it is ready for use as a hot backup.

So my preferred choice would be to specify twoshakes-d AND Simon-2 in a
plug interchangeable fashion. This would only be a little bit extra work
for the WG now but means that folks writing toolkits have a lot less work
to do. 90% of the implementation effort for crypto goes into writing the
validation suites and running the permutations. I would like to have that
all happen and be done.
",<CAMm+LwgWA3NGL3MgurT9CYG9HExVWWCgCOLHsatdBiyYev9b9g@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2015-12-09 13:13:10
416,EdDSA,26,582,"InformationProviding,InformationProviding,ExtensionOfPrevious",581,-1,"the SHAKE functions as the primitive to build protocols on. HKDF and HMAC
are two constructions that were very much constrained by the circumstances
in which they were designed. People wanted a very conservative design
because they were not confident of the available review resources. The
SHAKE functions have been subjected to a lot of review.
",<CAMm+LwgWA3NGL3MgurT9CYG9HExVWWCgCOLHsatdBiyYev9b9g@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2015-12-09 13:13:10
417,EdDSA,26,583,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
So my proposal is:

7) Do twoshakes-d and Simon-2

Yes, this results in two different signature algorithms, but if you look at
the crypto identifiers for signature algorithms, most of them are for the
signature, hash combo 'RSA-with-MD5'. Yes, I know that here we have an
internal and an external hash thing going on. The point is that digest
function and signature have always been very closely related. In fact in
quite a few protocols you see the RSA ( SHA2 ( SHA2 (Data))) because the
deployment constraints make you want to break those two apart and the
crypto libs available don't allow that.

I don't think it would be a bad thing to have the default set be:

RSA2048-SHA2 [Incumbent, expecting this to be replaced]
Curve25519-SHA2
Curve448-SHA2
Curve448-SHA3

The reason for dropping Curve25519-SHA3 out of the set is that right now I
see it as a hot backup. I am going to make sure that I have all the
keys/certs etc. that I might need in place so that I can switch to that if
there is a disaster but I don't need a high security and a ludicrously high
security keystrength for that. Just give me ludicrously high for both.

[Yes I am also thinking about backup plans to save crypto if quantum crypto
strikes. But right now, those involve Kerberos type approaches.]

Of course people are going to specify the code point for Curve25519-SHA3
and test it etc. but in terms of load on applications, I am seeing us put 3
new options on the table, not 4.
",<CAMm+LwgWA3NGL3MgurT9CYG9HExVWWCgCOLHsatdBiyYev9b9g@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2015-12-09 13:13:10
418,EdDSA,26,584,"InformationProviding,InformationProviding",,-1,"
I expect the future WebPKI to be based on Curve448-SHA2 roots.
",<CAMm+LwgWA3NGL3MgurT9CYG9HExVWWCgCOLHsatdBiyYev9b9g@mail.gmail.com>,phill@hallambaker.com,0.0,0,0,2015-12-09 13:13:10
419,EdDSA,26,600,"InformationProviding,InformationProviding,NeutralResponse",49,-1,"- twoshakes-s:  0
- twoshakes-d: +1 (Or in general any variant that provides domain
separation in the internal hash between PureEdDSA and HashEdDSA. Bryan's
proposal is fine as is, but I am not against variants that can help
reach a consensus.)
- simon1:      -1 (It would be a pity to use a slower-than-needed hash
function.)
- simon2:      -1 (The construction behind the internal hash is less
efficient.)
- ilari1:       0
- ilari2:      -1 (The construction behind the internal hash is less
efficient.)",<566AF943.8000300@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-12-11 17:26:43
420,EdDSA,26,602,"InformationProviding,Social",,-1,Dear colleagues:,<566B0342.1080007@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2015-12-11 12:09:22
421,EdDSA,26,635,"InformationProviding,Agreement,InformationProviding,Agreement,NeutralResponse",600,-1,"
I do concur with Gilles Van Assche's ranking (and earlier email on
domain separation).",<566B0342.1080007@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2015-12-11 12:09:22
422,EdDSA,26,636,"InformationProviding,InformationProviding",,-1,"
{As an aside: I am not sure whether one should standardize the
""internal"" hash, since untestable, but that is a different topic.}",<566B0342.1080007@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2015-12-11 12:09:22
423,EdDSA,26,681,"InformationProviding,InformationProviding",,-1,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512
",<566BFE37.1050009@akr.io>,akr@akr.io,0.0,0,6,2015-12-12 11:00:07
424,EdDSA,26,683,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",49,49,"
twoshakes-s: 0   OK, but prefer twoshakes-d, because...
twoshakes-d: +1  domain separation for XOF of different length outputs.
simon1: 0        SHA3-512 is a bit slow.
simon2: 0        Could live with, but prefer Keccak to SHA-2 for Ed448.
ilari1: -1       Using both a legacy SHA-2 hash and Keccak is weird.
ilari2: 0        Could live with, but prefer Keccak to SHA-2 for Ed448.

For the record: I'm against any change to Ed25519, and I ... actually
don't care much about Ed25519ph because I don't plan on ever using it.

If I wanted to sign big files (or several big files), I'd probably
prefer to sign a BLAKE2b (b2sum) or some tree-hash manifest instead.
I have no other use-case for IUF.

/akr
-----BEGIN PGP SIGNATURE-----

iQIcBAEBCgAGBQJWa/4tAAoJEOyEjtkWi2t6H6cQAKZScDcUbQRDZh+oHC+F5Pwy
L8sJcBHsf8b/YTExS2RHSoDMvXituRfzeACp50xu7CtXaqJ4zkUyPUdx7xXeTnIc
TH2Mk+0ioD5hE/EgR7kqtqVnZxJHYbUM7d/g1oZzX0YrOo+xu/qbC8CFjDEm3Zag
AqJz17hm33W6DIkg+Qd1u9Zw027EieYqKztpvImSz+3z8D27xQmuHLDMiEgQ24U/
HaBrCJcT1FQLJwe5oHk8m1fc4ZkfMwK7m8lWJpSDO7nc4y9ULitKVo8tLBhPq84B
SA+PA3jgT8u+kLA8TZ5GaPcwlbM1Nky5SHco5sT7Xa+Pmql3TTTlA77Bt++AvN0P
OA2p6RBAIyikz2zwKmV9lB08QGE8xuDjY+RtMPlvQWITr7v2rffWdd5ayMgVBN+Z
5gXJ4vBPcLuWbtpmt4ayg73CLqSF28pl/GDwpDUM7QOvYIQoVNLhSm6dX2sQW0r+
FJHlpYgcLe+aWW4Yi70bhaaV9JVzQdTHwigxkPGhhuWoabW5FM+MLEem2v40CFBB
rFmrTmIkhII1Ax6eul23ftofEgn7iVERukhBrDYkpcRAfK7EG+qT8twfcARXRbH8
KBCQMP+aNseKscYXDa2WTK/USXDAb89KUOGnRJAUsPqkke5rZKwV9DdU8v1QVXC3
aBjij9iC2Es2ZYvJohJl
=sbBJ
-----END PGP SIGNATURE-----",<566BFE37.1050009@akr.io>,akr@akr.io,0.0,0,6,2015-12-12 11:00:07
425,EdDSA,26,755,"InformationProviding,InformationProviding,NeutralResponse",49,-1,"1) twoshakes-s:  0. Simplest method, but I'd prefer to have domain separation.
2) twoshakes-d: +1. My preference.
3) simon1: 0. I can understand the use of SHA3-512 for prehash, although it's slower.
4) simon2:  -1. No mixing SHA-2 and SHA-3.
5) ilari1:  -1. I don't like SHA2-512/xxx where xxx > 512. SHAKE has a much more natural way to do the same.
6) ilari2:  -1. I'm a bit conflicted on this. I don't like HKDF and HMAC, but HKDF is used and can do the job. I'm going for -1 instead of 0 due to efficiency of HKDF compared to SHAKE.",<A5B97FC31491E340A2D28D55553F775802659BA78E@SAFEX1MAIL3.st.com>,ruggero.susella@st.com,0.0,0,62,2015-12-22 11:18:22
426,EdDSA,26,810,"InformationProviding,StateDecision,InformationProviding,NeutralResponse","49,64",64,"
After reviewing all messages received it looks like twoshakes-d is the
first choice and simon2 is a distant second.",<56815AF0.4080300@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-12-28 15:53:20
427,EdDSA,27,0,"Social,Social",,-1,"Hello,",<20161214105434.418FAADD1C@smtp.postman.i2p>,str4d@i2pmail.org,0.0,0,75,2016-12-14 10:54:34
428,EdDSA,27,25,"InformationProviding,InformationProviding",,-1,"
I am currently updating my EdDSA Java library to implement the current
spec for key encoding [0] (previously I used
draft-josefsson-pkix-eddsa-04 for public keys, and the equivalent in
PKCS#8 format for private keys). The example public key given in
draft-ietf-curdle-pkix-03 [1] passes my tests, however the example
private key [2] does not.",<20161214105434.418FAADD1C@smtp.postman.i2p>,str4d@i2pmail.org,0.0,0,75,2016-12-14 10:54:34
429,EdDSA,27,26,"InformationProviding,InformationProviding",,-1,"
It appears that the private key material within the example is 34 bytes,
but according to Section 3.2 of draft-irtf-cfrg-eddsa-08 [3] (which
AFAICT the present draft defers to for encoding), the private key is the
b-bit seed k, which is 32 bytes.",<20161214105434.418FAADD1C@smtp.postman.i2p>,str4d@i2pmail.org,0.0,0,75,2016-12-14 10:54:34
430,EdDSA,27,27,"Question,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
Am I missing something? If the example keys in the present draft are
correct, it would be helpful to add a reference that clarifies their
exact encoding.",<20161214105434.418FAADD1C@smtp.postman.i2p>,str4d@i2pmail.org,0.0,0,75,2016-12-14 10:54:34
431,EdDSA,27,56,"InformationProviding,Answer,InformationProviding,Answer",27,27,"
Apparently the key is wrapped in OCTET STRING twice for some reason,
so the length is actually 32 bytes (the first 2 are second OCTET STRING
header).
",<20161214121515.GA10791@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-12-14 14:15:15
432,EdDSA,27,57,"Social,InformationProviding",27,27,"
-Ilari",<20161214121515.GA10791@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-12-14 14:15:15
433,EdDSA,27,93,"Question,InformationProviding,NeutralResponse,Question,InformationProviding",56,56,"
Is it too late to change that / was there any particular reason for this?
Not that saving or using two bytes really matters, but it seems unnecessary
when we already have an OCTET-STRING-shaped hole to put our octet string in.
",<CAF8qwaCWAx8Vp67VZz4G5DQpTGf5DX-sMN+1i40acgCYT8_NVA@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-14 13:23:05
434,EdDSA,27,95,"InformationProviding,Answer,InformationProviding",93,-1,I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time.,<002501d25760$a75c0bb0$f6142310$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-15 21:52:54
435,EdDSA,27,196,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",95,-1,"Ah, yes, I see OpenSSL has already shipped code which serializes X25519 in
this way, as early as OpenSSL 1.1.0 in September. That's unfortunate. It
would have been preferable to avoid this confusing double wrapper, but so
it goes I guess.",<CAF8qwaDzC8C0czSPrCdTgKH-3_YqW8KeVQ291p+SNcOo-NyGxg@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-16 06:56:27
436,EdDSA,27,284,"Question,InformationProviding,NeutralResponse,ContextSetting,Question,InformationProviding",196,-1,"So we don't end up with two variants of this floating around (this thread
gives one data point of the current text being misinterpreted), What do you
think about these editorial changes?",<CAF8qwaASPih==KC9NKSy6KtEeySjEf4ByM1JkzCuu2bF8EP1xQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-16 07:18:11
437,EdDSA,27,285,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",284,-1,"
1. In the paragraph beginning ""For the keys defined in this document
[...]"", add a sentence like ""Note the opaque byte sequence is wrapped in
OCTET STRINGs twice in total.""",<CAF8qwaASPih==KC9NKSy6KtEeySjEf4ByM1JkzCuu2bF8EP1xQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-16 07:18:11
438,EdDSA,27,286,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",284,-1,"
2. EdPrivateKey sounds like this only applies to Ed* rather than both Ed*
and X*. It should probably be renamed. But the best name I can come up with
right now is PrivateKeyWrapper, which is terrible. Another option is to
avoid defining a type and just say:",<CAF8qwaASPih==KC9NKSy6KtEeySjEf4ByM1JkzCuu2bF8EP1xQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-16 07:18:11
439,EdDSA,27,287,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",286,-1,"
For the keys defined in this document, the private key is always an
opaque byte sequence.  This is encoded in a OneAsymmetricKey
object by wrapping the sequence in an ASN.1 OCTET STRING
and placing its DER encoding in the 'privateKey' field. Note that
'privateKey' is itself an OCTET STRING, so the original byte
sequence is wrapped in OCTET STRINGs twice in total.",<CAF8qwaASPih==KC9NKSy6KtEeySjEf4ByM1JkzCuu2bF8EP1xQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-16 07:18:11
440,EdDSA,27,316,"NeutralResponse,ProposeAction,Social,Question",285,285,"
And/or have an appendix with an example of the full encoding for a given
dummy key?

-Ben",<20161217024355.GT8460@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2016-12-16 20:43:55
441,EdDSA,27,318,"InformationProviding,Answer,NeutralResponse,ContextSetting,InformationProviding,ProposeAction,ContextSetting",284,-1,"In my local version, I have done the following:",<035701d25a3f$a46ca9f0$ed45fdd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-19 13:34:10
442,EdDSA,27,435,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",318,-1,"
1.       Changed EdPrivateKey to CurvePrivateKey.  I hope that this will not cause any confusion with the ECPrivateKey type defined in RFC5915.",<035701d25a3f$a46ca9f0$ed45fdd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-19 13:34:10
443,EdDSA,27,436,"InformationProviding,ExtensionOfPrevious",318,-1,"
2.      I have changed the last sentence in the paragraph mentioned below to
Thus when encoding a OneAsymmetricKey object, the private key is wrapped in an CurvePrivateKey object and wrapped by the OCTET STRING of the 'privateKey' field.",<035701d25a3f$a46ca9f0$ed45fdd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-19 13:34:10
444,EdDSA,27,437,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",318,-1,"
3.      I have also expanded the appendix with the private key example to have 1) the current PEM format, 2) an ASN.1 dump and 3) the value of the private key.",<035701d25a3f$a46ca9f0$ed45fdd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-19 13:34:10
445,EdDSA,27,438,"InformationProviding,ExtensionOfPrevious,InformationProviding,StateDecision",318,-1,"
I debated using the OKP (Octet Key Pair) which was used in JOSE and COSE but decided not to.",<035701d25a3f$a46ca9f0$ed45fdd0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-12-19 13:34:10
446,EdDSA,27,441,"Social,Social",,-1,"Hi,",<CADZyTk=PFHDU5R+AR6G7C9=Shd6hW8KQkAX7TqcM9YSRuYaEmw@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2017-01-17 15:33:13
447,EdDSA,27,612,"InformationProviding,ProposeAction,ProposeAction",318,-1,"
Please indicate if the text added by Jim clarifies the previous confusion,
and if we can close the thread.",<CADZyTk=PFHDU5R+AR6G7C9=Shd6hW8KQkAX7TqcM9YSRuYaEmw@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2017-01-17 15:33:13
448,EdDSA,27,613,"InformationProviding,InformationProviding",,-1,"
My understanding of the text is:
""""""the private key is wrapped in an CurvePrivateKey object """"""
CurvePrivateKey = OCTET STRING ( private key)
""""""and wrapped by the OCTET STRING of the 'privateKey' field.""""""
privateKey = OCTET STRING (OCTET STRING (private key))",<CADZyTk=PFHDU5R+AR6G7C9=Shd6hW8KQkAX7TqcM9YSRuYaEmw@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2017-01-17 15:33:13
449,EdDSA,27,614,"Question,Question",613,-1,"
Am I correct ?",<CADZyTk=PFHDU5R+AR6G7C9=Shd6hW8KQkAX7TqcM9YSRuYaEmw@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2017-01-17 15:33:13
450,EdDSA,27,615,"Social,Social",,-1,"
Yours,",<CADZyTk=PFHDU5R+AR6G7C9=Shd6hW8KQkAX7TqcM9YSRuYaEmw@mail.gmail.com>,daniel.migault@ericsson.com,0.0,1,3,2017-01-17 15:33:13
451,EdDSA,27,800,"InformationProviding,NeutralResponse,InformationProviding,Agreement",436,-1,"Jim's proposed text seems reasonable to me. CurvePrivateKey is a much
better name than PrivateKeyWrapper! Maybe ""and wrapped by the OCTET STRING""
=> ""which is then wrapped by the OCTET STRING"", but this is all nitpicks
and I'm happy with whatever.
",<CAF8qwaAeSpu5bvcB=sXXjao3h45Eym1km8VJyy_xAXqJoGg-wQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2017-01-17 21:06:46
452,EdDSA,27,811,"NeutralResponse,ProposeAction,Agreement,ProposeAction",95,95,"
Speaking as an individual, yes.  Please don’t change this.",<808d6563f5f54acfb1a795769dc84402@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-12-16 13:06:01
453,EdDSA,27,840,"Question,InformationProviding,NeutralResponse,Question,InformationProviding",811,811,"
It's a fairly frustrating feeling for a protocol designer to be hedged
in to a particular behavior because an implementation of a draft version
escaped into the wild and the change is not worth the pain of breaking
interoperability.  This happens all over the place, not just here, of course,
which leads to the question of what can we do to avoid getting locked into
the draft interfaces.  It's easy to point fingers and say that the
software authors should know to have a transition strategy if they ship
a protocol that is explicitly a work in progress, but that doesn't really
seem very productive.  The TLS 1.3 story seems fairly reasonable, with
a scheme to indicate support for a specific draft version as opposed to
having to squat on the version number for the final protcol, but that
seems to have evolved semi-organically as I understand it, with informal
contact among the early implementors.  Should all drafts burn a set of
codepoints and map them to the given draft versions?  Probably not.
Should they think about it?  Maybe.  Are there other techniques that
we can use to help software authors avoid shooting the ecosystem in the foot?

-Ben",<20161217032657.GU8460@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2016-12-16 21:26:58
454,EdDSA,27,866,"InformationProviding,Answer,NeutralResponse",840,840,"
In this particular draft (the earlier versions which had been demo'ed
-though not included- in gnutls), we were switching the OIDs once the
definitions were modified in an incompatible way.
",<1482147562.21135.16.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2016-12-19 12:39:22
455,EdDSA,27,888,"Question,InformationProviding,NeutralResponse,Question,InformationProviding,ProposeAction",811,811,"
While indeed openssl has quite some user base, version 1.1.0 is still
not being integrated to major distributions to have significant impact.
Do we really need to carry technical debt for that? Can't we change the
OIDs on the final version to avoid confusion with released versions?
",<1482147435.21135.14.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2016-12-19 12:37:15
456,EdDSA,27,920,"Question,InformationProviding,Answer,NeutralResponse,Question,InformationProviding,Answer",888,888,"
Actually, looking at the ECC keys out there, aren't most V2 keys,
since those contain also the public key, as public key is not subset
of private key for ECC (unlike RSA)?

Looking at the private key example in document, those look like
(at least the Ed25519 key does) v1 keys. And I am aware of at least
one Ed25519 implementation (that I didn't write) that requires both
private and public key to load a keypair.
",<20161219164145.GB4593@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-12-19 18:41:45
457,EdDSA,27,921,"Social,InformationProviding",888,888,"
-Ilari",<20161219164145.GB4593@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-12-19 18:41:45
458,EdDSA,28,0,"Social,Social",,-1,Hi,<4A93EB96-11C3-4F08-B1DC-6ED21E11BFC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 15:46:00
459,EdDSA,28,11,"InformationProviding,InformationProviding,StateDecision",,-1,"
Based on an email exchange with Nikos Mavrogiannopoulos, I’ve submitted a PR.",<4A93EB96-11C3-4F08-B1DC-6ED21E11BFC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 15:46:00
460,EdDSA,28,12,"InformationProviding,ExtensionOfPrevious,InformationProviding",11,-1,"
https://github.com/tlswg/rfc4492bis/pull/23",<4A93EB96-11C3-4F08-B1DC-6ED21E11BFC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 15:46:00
461,EdDSA,28,13,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,StateDecision",,-1,"
If there are no objections, I will accept it and submit version -08 this Friday.",<4A93EB96-11C3-4F08-B1DC-6ED21E11BFC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 15:46:00
462,EdDSA,28,14,"Thanking,Thanking",,-1,"
Thanks",<4A93EB96-11C3-4F08-B1DC-6ED21E11BFC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 15:46:00
463,EdDSA,28,32,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",13,13,"
While scanning through, I noticed that the Ed25519 and Ed448 ""curves""
are still there. I think negotiating those should be done the same way
as in TLS 1.3 (those would then appear as hash=7 signature=3/4 IIRC).
",<20160704140625.GD4287@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-04 17:06:25
464,EdDSA,28,33,"Social,InformationProviding",13,13,"
-Ilari",<20160704140625.GD4287@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-04 17:06:25
465,EdDSA,28,58,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Disagreement,StateDecision",32,32,"
IMO this makes it very complex. TLS 1.3 replaces the old signature_algorithms extension that had pairs of signature algorithm/hash algorithm with one that has 16-bit values.

It changes things for ECDSA as well. We’re not going to change ECDSA in TLS 1.2. So if we wanted to adopt that we would still interpret 0x04,0x03 as ECDSA (with whatever curve) along with SHA-256, while 0x07,0x03 would be Ed25519, not ECDSA with some unknown hash function 0x07.

Seems strange to me, but I’ll make whatever changes the group wants.
",<C5503852-9B73-41DD-A54C-5B5ADA643397@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 17:59:06
466,EdDSA,28,117,"InformationProviding,NeutralResponse,Apologising,InformationProviding,ProposeAction,Apologising",58,58,"
Oops, I think I agreed to backport this at IETF 95 and completely forgot.
Sorry about that! My bad.

Although, thinking about it now, I'm not sure if we should bother. As you
mention, it's weird since ECDSA still needs to be interpreted in the 1.2
style, despite being spelled in the 1.3 way. We'd also end up with the new
scheme being defined in two places.

It seems better to get X25519 / X448 out the door first as that has no
prerequisites. X25519 in TLS already has running code today. Chrome ships
it, and Google servers have it enabled. The 1.1.0 release of OpenSSL is
also slated to have support.

Ed25519 / Ed448, on the other hand, don't even have an embedding in X.509
yet (though hopefully the main question remaining will get resolved in
curdle soon). Then there's the timeline for draft-irtf-cfrg-eddsa, which
I'm not familiar with. New signature schemes also depend on CAs being
willing to sign them which, for the web PKI, I expect will not be fast. Saying
new signature schemes are only defined for 1.3 and up seems reasonable
enough to me, though I suppose it depends on how the timelines for all the
other drafts end up looking.
",<CAF8qwaB+zBnHAras4e2Mjhts=e-C0dGKbBZRu7zioVqcbd9V6Q@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-07-04 16:12:06
467,EdDSA,28,158,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",117,117,"
The CFRG draft is not the limiting factor. We’re waiting for draft-ietf-curdle-pkix-00.

But honestly, I don’t think anyone is going to be issuing EdDSA certificates any time soon. The commercial CAs have just recently starting using ECDSA, and even for local CAs you generally don’t use a new algorithm until every relying party in your environment supports it.
",<BC8B24DC-D70F-48B8-9DE3-CA3F6F2AA607@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-07-04 21:23:32
468,EdDSA,29,20,"Question,InformationProviding,Question,InformationProviding,ProposeAction",,-1,"
Let's rephrase:  Any argument *against* SHA3-512?

(yes, jetlag stinks:)

SHA3-512 is slow in order to attain the meaninglessly high 512-bit
preimage resistance, whereas SHAKE256-512 provides `only' 256-bit
preimage resistance at much higher speed.  Both provide only 256-bit
collision resistance.

Note that draft-irtf-cfrg-eddsa doesn't use SHA3-512 at all, whereas
it does use SHAKE256 for several purposes.",<20161114185337.2CC3B6039C@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2016-11-14 18:53:47
469,EdDSA,30,24,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",,-1,"In step #3 of the verify function, I assume that I can reduce k mod p
without any problems.   Can I reduce it mod L or not?  It would be useful to
have the hint in the text since it is all over the Sign algorithm.",<008901d1db7b$ab86bed0$02943c70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-11 06:53:54
470,EdDSA,30,25,"InformationProviding,InformationProviding",,-1,"
I have been using the python program to help debug my quick implementation
of the signature algorithm.  This has worked up to the point of trying to
decode points as the python code does not use the suggested formula in
section 5.1.3 (use this trick) but instead just directly computes a square
root on the base formula.",<008901d1db7b$ab86bed0$02943c70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-11 06:53:54
471,EdDSA,30,26,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
I am therefore unable to determine where my bug is:  In my code, in the
formula, or in how I read the formula.  It might be worthwhile to actually
implement this algorithm for computing square roots if that is what is
suggested.",<008901d1db7b$ab86bed0$02943c70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-11 06:53:54
472,EdDSA,30,27,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
By the way, I finally found were the neutral point was defined.  You still
might want to highlight it as part of the point addition sections.",<008901d1db7b$ab86bed0$02943c70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-11 06:53:54
473,EdDSA,30,28,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Looking at the python code, I think I see the trick you are using to deal
with step 1 in the decoding code for removing the x_0 bit but it could be
highlighted that it is being done in the field parsing function rather than
the decoding function.",<008901d1db7b$ab86bed0$02943c70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-11 06:53:54
474,EdDSA,30,77,"Answer,Agreement,ProposeAction,InformationProviding,Answer,NeutralResponse",24,24,"
Good idea; we should add that hint to the spec.

You can’t reduce it mod p.  You can and should reduce it mod L (aka q), at least for
the non-strict verification formula.

For the strict verification formula, it may be better to reduce mod hL, where h=8 or 4
for ed25519 and ed448 respectively.  This doesn’t affect the usual notion of security,
but reducing mod hL will give you the same answer as not reducing, and reducing
mod L will sometimes change whether a maliciously-crafted signature validates or not.
Since the spec doesn’t say you may reduce mod L, you probably shouldn’t.  But the
easier solution is not to use the strict formula.
",<84618BCB-35C7-4978-8F75-7FEE4B137A9F@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-07-11 11:14:19
475,EdDSA,30,79,"Question,ProposeAction,Question,InformationProviding,NeutralResponse",26,26,"
How are you implementing the division and square root?  The code for square
root looks almost the same as the trick anyway, so you could just switch it over.
",<84618BCB-35C7-4978-8F75-7FEE4B137A9F@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-07-11 11:14:19
476,EdDSA,30,81,"ClarificationElicitation,ClarificationElicitation,NeutralResponse",28,28,"
It’s being done in decode_base, right?
",<84618BCB-35C7-4978-8F75-7FEE4B137A9F@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-07-11 11:14:19
477,EdDSA,30,233,"InformationProviding,Agreement,ProposeAction,InformationProviding,Agreement",79,156,"
I agree that the python code could stand some improvement.  It should probably also use pow() instead of implementing exponentiation itself.

I believe that the formula given for sqrt(u/v) is correct, but it really should be given as x = u * (uv)^((p-5)/8) and then the same adjustment stpes, because that’s simpler and also correct.  Also, it should be implemented in the Python code.

Likewise, the formula for ed448 in 5.2.3 is correct, but should be replaced by x = u * (uv)^((p-3)/4) with the same adjustment steps.
",<34FC4763-3995-490C-9842-3A7B4B97A2A5@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-07-11 12:25:43
478,EdDSA,30,235,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse,Social",233,29,"
Ah, OK.  Another place where the python should be simplified.

— Mike",<34FC4763-3995-490C-9842-3A7B4B97A2A5@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-07-11 12:25:43
479,EdDSA,31,35,"InformationProviding,ContextSetting,InformationProviding",,-1,"The IESG has received a request from the Javascript Object Signing and
Encryption WG (jose) to consider the following document:
- 'CFRG ECDH and signatures in JOSE'
<draft-ietf-jose-cfrg-curves-05.txt> as Proposed Standard",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
480,EdDSA,31,36,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,StateDecision",,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2016-08-12. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
481,EdDSA,31,37,"InformationProviding,InformationProviding",,-1,"
Abstract",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
482,EdDSA,31,38,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",37,-1,"
This document defines how to use the Diffie-Hellman algorithms
""X25519"" and ""X448"" as well as the signature algorithms ""Ed25519"" and
""Ed448"" from the IRTF CFRG elliptic curves work in JOSE.",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
483,EdDSA,31,39,"InformationProviding,InformationProviding",,-1,"
The file can be obtained via
https://datatracker.ietf.org/doc/draft-ietf-jose-cfrg-curves/",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
484,EdDSA,31,40,"InformationProviding,InformationProviding",,-1,"
IESG discussion can be tracked via
https://datatracker.ietf.org/doc/draft-ietf-jose-cfrg-curves/ballot/",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
485,EdDSA,31,41,"InformationProviding,InformationProviding",,-1,"
No IPR declarations have been submitted directly on this I-D.",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
486,EdDSA,31,42,"InformationProviding,InformationProviding",,-1,"
The document contains these normative downward references.
See RFC 3967 for additional information:
draft-irtf-cfrg-eddsa: Edwards-curve Digital Signature Algorithm (EdDSA)  (None - Independent Submission Editor stream)
Note that some of these references may already be listed in the acceptable Downref Registry.",<20160729132623.26975.44610.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-07-29 06:26:23
487,EdDSA,32,27,"Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
I think using anything else than identity / SHA-512 as prehash
in Ed448 is a bad idea.

Well, I think *any* fixed prehash is a bad idea, but identity and
randomized prehash were both rejected in favour of appeasing legacy
I/U/F APIs and encouraging DoS against verifiers, so given that...

The reason isn't so much that SHA3-512 is hilariously slow (Blake2b
is well known to be a speed demon), but due to practical
considerations the prehash is going to leak out of the ""box"", so
now applications need to deal with more casess.

E.g. TLS 1.2 has apparently been designed to leak the prehash
that way (TLS 1.3 retains the basic structure, but the amounts
of data to sign are much smaller).

Can you elaborate on this leak?  I'm not familiar enough with the
details of TLS 1.2 to know what you're referring to.

If it's just the SignatureAndHashAlgorithm list, in which one could
conceivably mix Ed448 with a prehash of, e.g., SHA-1 (which is still
there in the TLS 1.3 draft, apparently), that doesn't preclude the
CFRG from recommending that Ed448 be mixed only with SHA3-512.",<20151015132551.71F0660546@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-15 13:27:05
488,EdDSA,32,74,"InformationProviding,Agreement,InformationProviding,Agreement",27,27,"
Well, agreed. I consider signature-level online operation a bad
idea.

And with regards to those legacy APIs, I suspect PKCS#11 is major
one, and it tends to cause problems everywhere it touches (e.g. Firefox
THS fix got delayed some time in order to deal wit PCKS#11 issues).
",<20151015140119.GA19546@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 17:01:19
489,EdDSA,32,76,"InformationProviding,Answer,InformationProviding,NeutralResponse",27,27,"
TLS 1.2 spec impiles (altough it doesn't state this explicitly) that
TLS protocol code itself does the HashAlgorithm hashing of the
signature and then passes the hash to be signed.
",<20151015140119.GA19546@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 17:01:19
490,EdDSA,32,78,"Question,InformationProviding,ProposeAction,Question,InformationProviding,NeutralResponse",27,27,"
Or one could perhaps specify that al EdDSA signatures always have
HashAlgorithm of 0 (None). No current signature primitive uses
HA0, but it is explicitly specified for future signature primitives.
Ed25519 and Ed448 definitely always use HA0. But does e.g.
Ed25519ph use HA0 or HA6 (SHA-512)? There is no SHA3-512 currently.
",<20151015140119.GA19546@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 17:01:19
491,EdDSA,32,79,"InformationProviding,Social",27,27,"
-Ilari",<20151015140119.GA19546@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2015-10-15 17:01:19
492,EdDSA,33,20,"InformationProviding,InformationProviding",,-1,"Ben Campbell has entered the following ballot position for
charter-ietf-ipsecme-10-01: No Objection",<147269503033.31834.10513562338482321120.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-31 18:57:10
493,EdDSA,33,21,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<147269503033.31834.10513562338482321120.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-31 18:57:10
494,EdDSA,33,22,"InformationProviding,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/charter-ietf-ipsecme/",<147269503033.31834.10513562338482321120.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-31 18:57:10
495,EdDSA,33,23,"InformationProviding,ContextSetting,InformationProviding",,-1,"
COMMENT:",<147269503033.31834.10513562338482321120.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-31 18:57:10
496,EdDSA,33,24,"Agreement,ExtensionOfPrevious,InformationProviding,Agreement",23,-1,"
I share Alissa's concern about the number of documents for the time
window.",<147269503033.31834.10513562338482321120.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-31 18:57:10
497,EdDSA,33,26,"Social,InformationProviding",,-1,"Tero & Dave,",<52A62106-3A93-4511-9FAD-4641BDDFA4CA@gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-08-31 22:53:21
498,EdDSA,33,59,"NeutralResponse,ProposeAction,Question,ProposeAction",21,-1,"
Could you respond on the timeline and if you think it's reasonable and why or if it should be changed.",<52A62106-3A93-4511-9FAD-4641BDDFA4CA@gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-08-31 22:53:21
499,EdDSA,33,62,InformationProviding,59,-1,kathleen.moriarty.ietf@gmail.com writes:,<22473.33185.527507.419009@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-09-02 16:41:53
500,EdDSA,33,108,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Answer,ProposeAction,StateDecision",59,59,"
Sure.

Out of the nine documents to be published, there is two which are
already going out from the WG, i.e., which are already submitted for
publication (DDoS and curve25519). Two more are almost ready (4307bis
and 7321bis), and those are updating the MTI requirements, thus there
is not that much of protocol work, we just need to agree what is
suitable level for each algorithm.

This means that four of the documents should be out from the WG hands
before the next IETF, and hopefully published as RFC on first half of
2017...

Then there is EdDSA which is mostly waiting for the curdle-pkix to
agree on the OIDS to be used for the EdDSA, and then it should be
ready soon after that is done (it is 2 page document just saying we do
what draft-irtf-cfrg-eddsa and draft-ietf-curdle-pkix do).

For the rest of the items, we have quite stable drafts for three of
them (tcp-encp, split-dns, and implicit IV), so after we get those
first drafts out, we should get them done during the winter.

Only thing that still requires more work is the quantum resistant
version of the IKEv2, and even for that, I think we already have the
idea how it will be done, and it should not take too long.

Also I would assume that during 2017 we most likely will get some new
work items that will start working on, thus we will most likely want
to do recharter by the end of 2017 anyways. And if there is nothing
new to be done, and we have only 1-2 items left, we can continue
working them without WG if needed.

Year ago (IETF 93, July 2015) we had started charter dicussion last
time, i.e., during the meeting we discussed whether we should close
down the WG, or recharter and continue. Then we decided to keep the
WG, and recharter, but the recharter discussion took some time, and as
we did not meet in Yokohama IETF 94, the discussion on charter started
on the IETF 95 in Buenos Aires, and finalized during the IETF 96 in
Berlin.
kivinen@iki.fi",<22473.33185.527507.419009@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-09-02 16:41:53
501,EdDSA,33,129,"ContextSetting,Social,InformationProviding,ContextSetting,Social",,-1,"Hi all,

two comments:
",<424A6EE6-7EC4-4503-99E5-AF482C799478@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2016-09-02 15:54:57
502,EdDSA,33,131,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",108,108,"
If that’s the case I would recommend to remove the deadline from the charter. Please note that if you end up without new work you can always ask your AD to close the group (even without this deadline in the charter).
",<424A6EE6-7EC4-4503-99E5-AF482C799478@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2016-09-02 15:54:57
503,EdDSA,33,133,"InformationProviding,Disagreement,InformationProviding,Agreement,ProposeAction",108,108,"
That’s usually not a good ideas. If you don’t have a wg all docs need to be AD sponsored. If you have a wg you can just finish your doc, ask for reviews on the mailing, and run an WGLC to ensure there is enough review. You don’t have to have meetings or what ever. I don’t see a reason to close a wg before the work is done (if there is enough energy to finish the work).
",<424A6EE6-7EC4-4503-99E5-AF482C799478@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2016-09-02 15:54:57
504,EdDSA,33,178,"Social,Social",,-1,"Hello,
",<CAHbuEH7g5szfYwFgiRxo54uP+PounUF-WGg+JA_GAVqvDsP=0A@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-09-02 12:36:04
505,EdDSA,33,180,"InformationProviding,NeutralResponse,InformationProviding,UnderstandingNegative,StateDecision",131,131,"
I don't see why this is such an issue, including a deadline in the
charter.  It hasn't been a problem for the past 2.5 year (and for the
AD for this group before).

I'm fine with a deadline remaining in the charter.
",<CAHbuEH7g5szfYwFgiRxo54uP+PounUF-WGg+JA_GAVqvDsP=0A@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-09-02 12:36:04
506,EdDSA,33,182,"InformationProviding,NeutralResponse,Thanking,InformationProviding,NeutralResponse,Thanking",133,133,"
I can manage this with the WG.

Thank you.
",<CAHbuEH7g5szfYwFgiRxo54uP+PounUF-WGg+JA_GAVqvDsP=0A@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-09-02 12:36:04
507,EdDSA,33,185,"InformationProviding,NeutralResponse,InformationProviding","180,182",-1,That’s fine. It’s just my opinion. But as responsible AD you can of course handle this as you like.,<B00380D4-644F-46AF-A215-5333E3669A33@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2016-09-02 19:20:28
508,EdDSA,33,307,"InformationProviding,NeutralResponse,Thanking,InformationProviding,StateDecision,Thanking",185,185,"
Sure and thanks for that.  The chairs did their analysis on the
timeline and shared that with me.  I think their analysis and
justification is reasonable and I trust their judgement and don't want
to micromanage the group as it's running just fine.
",<CAHbuEH4rAKh808UDCbyUNSKqV6Exq_oVRrMdJjvxAF4bpjNP_w@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-09-02 14:01:14
509,EdDSA,34,63,"Agreement,ProposeAction,Agreement,ProposeAction",,-1,"
Making names clear is a good idea.
Perhaps Ed448 should be renamed Ed448ctx
",<5e514b7c361f4ed9a4d6ea41d40c350c@SC-EXCH03.marvell.com>,paul@marvell.com,0.0,0,4,2016-04-25 18:03:12
510,EdDSA,35,235,"InformationProviding,InformationProviding",,-1,"INTERNET ENGINEERING STEERING GROUP (IESG)
Summarized Agenda for the 2016-10-13 IESG Teleconference",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
511,EdDSA,35,236,"InformationProviding,InformationProviding,ContextSetting",,-1,"
This agenda was generated at 2016-10-07 14:19:48 PDT
Up-to-date web version of this agenda can be found at:
https://datatracker.ietf.org/iesg/agenda/",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
512,EdDSA,35,237,"InformationProviding,InformationProviding",,-1,"
1. Administrivia
1.1 Roll call
1.2 Bash the agenda
1.3 Approval of the minutes of past telechats
1.4 List of remaining action items from last telechat",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
513,EdDSA,35,238,"ContextSetting,InformationProviding",,-1,"
OUTSTANDING TASKS",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
514,EdDSA,35,239,"InformationProviding,InformationProviding",,-1,"
Last updated: September 30, 2016",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
515,EdDSA,35,240,"InformationProviding,ExtensionOfPrevious,InformationProviding",238,-1,"
o Benoit Claise, Alvaro Retana, and Suresh Krishnan to propose charter
development recommendations.
- Added 2016-06-16 (8 telechats ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
516,EdDSA,35,241,"InformationProviding,ExtensionOfPrevious,InformationProviding",238,-1,"
o Suresh Krishnan to find more scribes.
- Added after IETF 96 (5 telechats ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
517,EdDSA,35,242,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",238,-1,"
o Spencer Dawkins to organize a brainstorming session at the Working
Group Chairs Forum in Seoul about possible experiments with
different working group meeting formats.
- Added 2016-09-29 (1 telechat ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
518,EdDSA,35,243,"InformationProviding,NeutralResponse,ProposeAction",238,-1,"
o Alissa Cooper to find designated experts for RFC-ietf-clue-data-
model-schema-17 (CLUE) [IANA #927901].
- Added 2016-09-29 (1 telechat ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
519,EdDSA,35,244,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",238,-1,"
o Ben Campbell and Alexey Melnikov to find designated experts for RFC
6690 (CoRE Parameters) [IANA #928192], as well as a backup for Zach
Shelby for the other CoRE registries.
- Added 2016-09-29 (1 telechat ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
520,EdDSA,35,245,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",238,-1,"
o Suresh Krishnan to find a designated expert for RFC 4944 [IANA
#929707].
- Added 2016-09-29 (1 telechat ago)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
521,EdDSA,35,246,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2. Protocol actions
2.1 WG submissions
2.1.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
522,EdDSA,35,247,"InformationProviding,InformationProviding",246,-1,"
o draft-ietf-tsvwg-rfc5405bis-18  - IETF stream
UDP Usage Guidelines (Best Current Practice)
Token: Spencer Dawkins
IANA Review: IANA OK - No Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
523,EdDSA,35,248,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-ospf-two-part-metric-09  - IETF stream
OSPF Two-part Metric (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
524,EdDSA,35,249,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-netconf-restconf-17  - IETF stream
RESTCONF Protocol (Proposed Standard)
Token: Benoit Claise
IANA Review: Version Changed - Review Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
525,EdDSA,35,250,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-dnsop-maintain-ds-03  - IETF stream
Managing DS records from parent via CDS/CDNSKEY (Proposed Standard)
Token: Joel Jaeggli
IANA Review: IANA OK - Actions Needed
Consensus: Yes
Was deferred by Joel Jaeggli on 2016-09-28",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
526,EdDSA,35,251,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-regext-epp-rdap-status-mapping-01  - IETF stream
Extensible Provisioning Protocol (EPP) and Registration Data Access
Protocol (RDAP) Status Mapping (Proposed Standard)
Token: Alexey Melnikov
IANA Review: IANA - Not OK
Consensus: Yes
Last call expires: 2016-10-10",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
527,EdDSA,35,252,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-core-etch-02  - IETF stream
Patch and Fetch Methods for Constrained Application Protocol (CoAP)
(Proposed Standard)
Token: Alexey Melnikov
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
528,EdDSA,35,253,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-ipsecme-safecurves-04  - IETF stream
Curve25519 and Curve448 for IKEv2 Key Agreement (Proposed Standard)
Token: Kathleen Moriarty
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
529,EdDSA,35,254,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-avtcore-5761-update-05  - IETF stream
RFC 5761 SDP Offer/Answer Clarifications (Proposed Standard)
Token: Ben Campbell
IANA Review: Version Changed - Review Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
530,EdDSA,35,255,"InformationProviding,ExtensionOfPrevious,InformationProviding",246,-1,"
o draft-ietf-webpush-protocol-10  - IETF stream
Generic Event Delivery Using HTTP Push (Proposed Standard)
Token: Alissa Cooper
IANA Review: IANA - Review Needed
Consensus: Yes
Last call expires: 2016-10-11",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
531,EdDSA,35,256,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2.1.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
532,EdDSA,35,257,"InformationProviding,ExtensionOfPrevious,InformationProviding",256,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
533,EdDSA,35,258,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2.2 Individual submissions
2.2.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
534,EdDSA,35,259,"InformationProviding,ExtensionOfPrevious,InformationProviding",258,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
535,EdDSA,35,260,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2.2.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
536,EdDSA,35,261,"InformationProviding,ExtensionOfPrevious,InformationProviding",260,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
537,EdDSA,35,262,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2.3 Status changes
2.3.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
538,EdDSA,35,263,"InformationProviding,ExtensionOfPrevious,InformationProviding",262,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
539,EdDSA,35,264,"InformationProviding,ContextSetting,InformationProviding",,-1,"
2.3.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
540,EdDSA,35,265,"InformationProviding,ExtensionOfPrevious,InformationProviding",264,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
541,EdDSA,35,266,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3. Document actions
3.1 WG submissions
3.1.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
542,EdDSA,35,267,"InformationProviding,ExtensionOfPrevious,InformationProviding",266,-1,"
o draft-ietf-core-http-mapping-15  - IETF stream
Guidelines for HTTP-to-CoAP Mapping Implementations (Informational)
Token: Alexey Melnikov
IANA Review: Version Changed - Review Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
543,EdDSA,35,268,"InformationProviding,ExtensionOfPrevious,InformationProviding",266,-1,"
o draft-ietf-lisp-crypto-08  - IETF stream
LISP Data-Plane Confidentiality (Experimental)
Token: Deborah Brungard
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
544,EdDSA,35,269,"InformationProviding,ExtensionOfPrevious,InformationProviding",266,-1,"
o draft-ietf-lisp-lcaf-16  - IETF stream
LISP Canonical Address Format (LCAF) (Experimental)
Token: Deborah Brungard
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
545,EdDSA,35,270,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.1.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
546,EdDSA,35,271,"InformationProviding,ExtensionOfPrevious",270,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
547,EdDSA,35,272,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.2 Individual submissions via AD
3.2.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
548,EdDSA,35,273,"InformationProviding,ExtensionOfPrevious,InformationProviding",272,-1,"
o draft-harkins-salted-eap-pwd-06  - IETF stream
Adding Support for Salted Password Databases to EAP-pwd
(Informational)
Token: Kathleen Moriarty
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
549,EdDSA,35,274,"InformationProviding,ExtensionOfPrevious,InformationProviding",273,-1,"
o draft-ietf-mif-happy-eyeballs-extension-10  - IETF stream
Happy Eyeballs Extension for Multiple Interfaces (Informational)
Token: Terry Manderson
IANA Review: IANA OK - No Actions Needed
Consensus: Unknown",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
550,EdDSA,35,275,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.2.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
551,EdDSA,35,276,"InformationProviding,ExtensionOfPrevious,InformationProviding",275,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
552,EdDSA,35,277,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.3 Status changes
3.3.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
553,EdDSA,35,278,"InformationProviding,ExtensionOfPrevious,InformationProviding",277,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
554,EdDSA,35,279,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.3.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
555,EdDSA,35,280,"InformationProviding,ExtensionOfPrevious,InformationProviding",279,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
556,EdDSA,35,281,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.4 IRTF and Independent Submission stream documents
3.4.1 New items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
557,EdDSA,35,282,"InformationProviding,ExtensionOfPrevious,InformationProviding",281,-1,"
o conflict-review-sarikaya-6man-sadr-overview-00
IETF conflict review for draft-sarikaya-6man-sadr-overview
draft-sarikaya-6man-sadr-overview-12
Source Address Dependent Routing and Source Address Selection for
IPv6 Hosts: Problem Space Overview (ISE: Informational)
Token: Suresh Krishnan",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
558,EdDSA,35,283,"InformationProviding,ExtensionOfPrevious,InformationProviding",281,-1,"
o conflict-review-irtf-cfrg-eddsa-00
IETF conflict review for draft-irtf-cfrg-eddsa
draft-irtf-cfrg-eddsa-08
Edwards-curve Digital Signature Algorithm (EdDSA)  (IRTF:
Informational)
Token: Stephen Farrell",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
559,EdDSA,35,284,"InformationProviding,ContextSetting,InformationProviding",,-1,"
3.4.2 Returning items",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
560,EdDSA,35,285,"InformationProviding,ExtensionOfPrevious,InformationProviding",284,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
561,EdDSA,35,286,"InformationProviding,ContextSetting,InformationProviding",,-1,"
4. Working Group actions
4.1 WG creation
4.1.1 Proposed for IETF review",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
562,EdDSA,35,287,"InformationProviding,ExtensionOfPrevious,InformationProviding",286,-1,"
o Security Events (secevent)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
563,EdDSA,35,288,"InformationProviding,ContextSetting,InformationProviding",,-1,"
4.1.2 Proposed for approval",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
564,EdDSA,35,289,"InformationProviding,ExtensionOfPrevious,InformationProviding",288,-1,"
o SIDR Operations (sidrops)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
565,EdDSA,35,290,"InformationProviding,ExtensionOfPrevious,InformationProviding",288,-1,"
o IP Wireless Access in Vehicular Environments (ipwave)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
566,EdDSA,35,292,"InformationProviding,ContextSetting,InformationProviding",,-1,"
4.2 WG rechartering
4.2.1 Under evaluation for IETF review",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
567,EdDSA,35,293,"InformationProviding,ExtensionOfPrevious,InformationProviding",292,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
568,EdDSA,35,294,"InformationProviding,ContextSetting,InformationProviding",,-1,"
4.2.2 Proposed for approval",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
569,EdDSA,35,295,"InformationProviding,ExtensionOfPrevious,InformationProviding",294,-1,"
NONE",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
570,EdDSA,35,296,"InformationProviding,InformationProviding",,-1,"
5. IAB news we can use",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
571,EdDSA,35,297,"InformationProviding,InformationProviding",,-1,"
6. Management issues",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
572,EdDSA,35,298,"InformationProviding,InformationProviding",,-1,"
6.1  [IANA #927901] Designated expert for RFC-ietf-clue-data-model-schema-17 (CLUE) (Alissa Cooper)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
573,EdDSA,35,299,"InformationProviding,InformationProviding",,-1,"
6.2 [IANA #928192] Designated expert for RFC 6690 (CoRE Parameters) (Alexey Melnikov)",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
574,EdDSA,35,300,"InformationProviding,InformationProviding",,-1,"
7. Working Group news",<147587528350.8923.12897917928130773156.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-10-07 14:21:23
575,EdDSA,36,22,"Agreement,InformationProviding,Agreement",,-1,"+1

Sent from my BlackBerry 10 smartphone on the Verizon Wireless 4G LTE network.
Original Message",<20151016134630.17780800.62993.28746@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-16 13:46:21
576,EdDSA,36,24,"Social,Social",,-1,"
Dear all,
",<20151016134630.17780800.62993.28746@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-16 13:46:21
577,EdDSA,36,26,"Agreement,Agreement",,-1,"
+1
",<20151016134630.17780800.62993.28746@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-16 13:46:21
578,EdDSA,37,0,"Social,Social",,-1,"Dear WG,",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
579,EdDSA,37,84,"InformationProviding,StateDecision,InformationProviding",,-1,"
We have posted the following draft to describe EdDSA, based on the
EdDSA/Ed25519 description in draft-josefsson-eddsa-ed25519 and the
EdDSA2 paper.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
580,EdDSA,37,85,"InformationProviding,InformationProviding",,-1,"
https://tools.ietf.org/html/draft-irtf-cfrg-eddsa-00",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
581,EdDSA,37,86,"InformationProviding,ProposeAction",,-1,"
Feedback is welcome.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
582,EdDSA,37,87,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ContextSetting",,-1,"
There are at least two main areas I believe the WG will need to discuss:",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
583,EdDSA,37,88,"InformationProviding,StateDecision,InformationProviding,ExtensionOfPrevious",87,-1,"
1) The 912-bit wide internal hash function to use for Ed448.  In the
EDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512
would be more convenient in existing deployments than SHAKE256.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
584,EdDSA,37,89,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting",88,-1,"
However, given that 1) some implementers thought the IV-modification
we proposed would be difficult to implement in some APIs, and 2) some
implementers (including at least one smartcard implementer, which
typically are more constrained than software-only developers)
appeared to be fine with SHAKE256 even though it is newer, I believe
we should treat this as an open issue.  Options include:",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
585,EdDSA,37,90,"InformationProviding,InformationProviding,ExtensionOfPrevious",89,-1,"
1) SHA-512/912 as described in
http://ed25519.cr.yp.to/eddsa-20150704.pdf",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
586,EdDSA,37,91,"InformationProviding,InformationProviding,ExtensionOfPrevious",89,-1,"
2) Straightforward use of SHAKE256, also discussed in the previous
paper.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
587,EdDSA,37,92,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",89,-1,"
3) Home-cooked SHA2-based variant such as:",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
588,EdDSA,37,93,"InformationProviding,InformationProviding,ExtensionOfPrevious",92,-1,"
Truncate-912-bits(SHA512(""0"" | M) | SHA512(""1"" | M))",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
589,EdDSA,37,94,"InformationProviding,InformationProviding,ExtensionOfPrevious",89,-1,"
4) Less home-cooked SHA2-based variant such as the RFC 5869 HDKF.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
590,EdDSA,37,95,"Question,Question,ProposeAction",,-1,"
Thoughts?  Other options?  Strengths and weaknesses of the above?",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
591,EdDSA,37,96,"InformationProviding,InformationProviding",,-1,"
Personally I am currently in favor of chosing SHAKE256 for Ed448.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
592,EdDSA,37,97,"InformationProviding,InformationProviding,ExtensionOfPrevious",87,-1,"
2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the
relationship between PureEdDSA and HashEdDSA.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
593,EdDSA,37,98,"InformationProviding,UnderstandingNegative,InformationProviding",,-1,"
For this draft I chose the short but still (barely) readable names
Ed25519ph and Ed448ph.  In the EDDSA2 paper we used
'SHA-512-Ed25519-SHA-512' which might be shorted to 'SHA-512-Ed25519'
since the internal hash function is already settled on.  Still, I
believe 'SHA-512-Ed25519' is a quite unreadable name and the
important part, Ed25519, is lost.  Using 'Ed25519-SHA-512' to refer
to the pre-hash variant seems confusing given that it is already in
use to describe Ed25519 with SHA-512 as the internal hash.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
594,EdDSA,37,99,"InformationProviding,InformationProviding",,-1,"
The 'Ed25519ph' name variant came up during discussions related to
the PKIX EdDSA draft.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
595,EdDSA,37,100,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
I believe we definitely should not use the name 'Ed25519' to describe
what we are doing in the pre-hash variant since that is already well
established in deployment to refer to, eh well, Ed25519.  So another
name is needed.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
596,EdDSA,37,101,"Question,Question",,-1,"
Does someone have a better suggestion, or can we settle on
'Ed25519ph' and 'Ed448ph'?",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
597,EdDSA,37,102,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,ContextSetting",,-1,"
The document is not ready, and our primary main open work items are as
below.  If anyone has suggested improvements here, they are welcome.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
598,EdDSA,37,103,"InformationProviding,InformationProviding,ExtensionOfPrevious",102,-1,"
1) Test vectors and sample code for Ed448 and the pre-hash variants.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
599,EdDSA,37,104,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",102,-1,"
2) Align terminology and notation with cfrg-curves.  Perhaps this is
already in good shape, but it might be that a lot of work is required to
harmonise terminology.  Someone has to review both documents for
consistency.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
600,EdDSA,37,105,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",101,-1,"
3) We need to abstract the Ed25519 description somewhat so that it can
describe Ed448 too, but not abstract it all the way to the generic EdDSA
which is already described.  Otherwise the document will repeat large
chunk of text to describe Ed25519 and Ed448 which is mostly identical.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
601,EdDSA,37,106,"InformationProviding,InformationProviding,ExtensionOfPrevious",102,-1,"
4) Security Considerations, especially related to cross-protocol attacks
(i.e., when you use the same key in pure mode or different pre-hashes).",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
602,EdDSA,37,107,"InformationProviding,ProposeAction,ProposeAction",,-1,"
Of course, any other feedback is welcome.",<87wpuxo8vc.fsf@latte.josefsson.org>,simon@josefsson.org,1.0,0,5,2015-10-08 14:14:15
603,EdDSA,37,110,InformationProviding,,-1,"On 10/8/15, 8:14 , ""Cfrg on behalf of Simon Josefsson""",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
604,EdDSA,37,173,"Disagreement,Disagreement",88,88,"
I disagree.
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
605,EdDSA,37,175,"InformationProviding,NeutralResponse,Disagreement",90,90,"
Only if worst comes to worst.
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
606,EdDSA,37,177,"Agreement,Agreement",84,84,"
Yes, this is the ideal option, which I state my support for.
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
607,EdDSA,37,179,"Disagreement,Disagreement",93,93,"
Oh Lord, no! Violently opposing.
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
608,EdDSA,37,180,"Disagreement,Disagreement",94,94,"
2nd worst - better than (1), worse than (2).
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
609,EdDSA,37,182,"InformationProviding,Agreement,InformationProviding,Agreement","97,98",98,"
Good names! Remind me of the days of “Phreaking” and such. :-)
",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
610,EdDSA,37,184,"Answer,Agreement,Answer",101,101,"
I’m for settling on the above names.",<D23BF4A6.2022B%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 14:35:37
611,EdDSA,37,230,"InformationProviding,Answer,InformationProviding,Answer,NeutralResponse",95,95,"
As a note, only the signing function internals need 912-bit hash
function. For the hash that appears in both signing and verification,
512 bits is fine.

Specifically, the steps that need large hashes are:
- Derivation of secret scalar and seed from master key
- Derivation of pseudorandom parameter r from seed and message.

OTOH, the internal hash function needs to be specified for completeness
and testability.
",<20151008152931.GA13397@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-10-08 18:29:32
612,EdDSA,37,231,"InformationProviding,Social",95,95,"
-Ilari",<20151008152931.GA13397@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-10-08 18:29:32
613,EdDSA,37,261,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",89,89,"
[snip]

My preference, with OpenSSH hat on:

Ed25519: SHA512 (quite a bit of deployed software uses this already)

Ed448: In preference order:

1. SHA-512/912 or HKDF (slight preference to SHA-512/912, but don't mind much)
2. SHAKE256
3. Homebrew extension of SHA512 (distant last)
",<alpine.BSO.2.20.1510090505221.13690@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-10-09 05:10:14
614,EdDSA,37,263,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse,Social",97,97,"
don't care beyond retaining Ed25519 as the name of what is already deployed.

-d",<alpine.BSO.2.20.1510090505221.13690@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-10-09 05:10:14
615,EdDSA,37,287,"InformationProviding,StateDecision,InformationProviding,NeutralResponse,ContextSetting",261,-1,"
The arguments wrt SHA-3/SHAKE have convinced me, so updating my
preferences:
",<alpine.BSO.2.20.1510150309020.26675@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-10-15 03:10:41
616,EdDSA,37,289,"InformationProviding,InformationProviding,NeutralResponse",261,261,"
unchanged
",<alpine.BSO.2.20.1510150309020.26675@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-10-15 03:10:41
617,EdDSA,37,291,"InformationProviding,InformationProviding,NeutralResponse,Social",261,261,"
1. SHA-3/SHAKE
2. SHA-512/912 or HKDF (could live with this)
3. Homebrew extension of SHA512 (avoid if possible)

-d",<alpine.BSO.2.20.1510150309020.26675@natsu.mindrot.org>,djm@mindrot.org,0.0,0,24,2015-10-15 03:10:41
618,EdDSA,38,0,"Social,Social",,-1,"Hi all,",<CAKmKYaAR7s=U_H2zOr3P1W9Q5uCYyR2hJhot-rfZhgrAQ0suhw@mail.gmail.com>,dirkjan@ochtman.nl,0.0,0,31,2016-02-01 14:19:29
619,EdDSA,38,19,"Question,InformationProviding,Question,InformationProviding",,-1,"
I'm interested in getting a bunch of new algorithms into the JOSE IANA
registry. Is the process of doing so described anywhere? I looked at
this mailing list's archive, but it's still empty.",<CAKmKYaAR7s=U_H2zOr3P1W9Q5uCYyR2hJhot-rfZhgrAQ0suhw@mail.gmail.com>,dirkjan@ochtman.nl,0.0,0,31,2016-02-01 14:19:29
620,EdDSA,38,20,"ContextSetting,ProposeAction,ContextSetting,ProposeAction",,-1,"
I would like to propose the following additions:",<CAKmKYaAR7s=U_H2zOr3P1W9Q5uCYyR2hJhot-rfZhgrAQ0suhw@mail.gmail.com>,dirkjan@ochtman.nl,0.0,0,31,2016-02-01 14:19:29
621,EdDSA,38,21,"InformationProviding,InformationProviding,ExtensionOfPrevious",20,-1,"
Chacha20 -- stream cipher, specified in RFC 7539
Poly1305-AES -- message-authentication code, specified in RFC 7539
Curve25519 and Curve448 -- for elliptic curve cryptography + ECDH,
specified in RFC 7748
Ed25519 -- public-key signature system, draft-irtf-cfrg-eddsa-02.txt is in RGLC",<CAKmKYaAR7s=U_H2zOr3P1W9Q5uCYyR2hJhot-rfZhgrAQ0suhw@mail.gmail.com>,dirkjan@ochtman.nl,0.0,0,31,2016-02-01 14:19:29
622,EdDSA,38,22,"ProposeAction,InformationProviding,ProposeAction",,-1,"
Finally, it might be interesting to add Blake2 and Argon2 algorithms, as well.",<CAKmKYaAR7s=U_H2zOr3P1W9Q5uCYyR2hJhot-rfZhgrAQ0suhw@mail.gmail.com>,dirkjan@ochtman.nl,0.0,0,31,2016-02-01 14:19:29
623,EdDSA,38,25,"InformationProviding,ProposeAction,InformationProviding,Answer",19,-1,"The registration process is described in s7 of RFC 7518 (https://datatracker.ietf.org/doc/rfc7518/).  In a nutshell you need a specification, which doesn’t have to take the form of an internet-draft but often does, for the algorithms and you need to submit the registration template.",<FE640EBA-B97D-4C8C-BB3B-88BB6C5875E8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-02-01 12:01:51
624,EdDSA,38,58,"InformationProviding,InformationProviding",,-1,"
Also note that I also think that the JOSE WG has started specifying a few of these already:
https://datatracker.ietf.org/doc/draft-ietf-jose-cfrg-curves/",<FE640EBA-B97D-4C8C-BB3B-88BB6C5875E8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-02-01 12:01:51
625,EdDSA,38,59,"InformationProviding,Social",,-1,"
spt",<FE640EBA-B97D-4C8C-BB3B-88BB6C5875E8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-02-01 12:01:51
626,EdDSA,38,110,"InformationProviding,InformationProviding,Answer",19,-1,"There is currently an efferent to deal with the new CFRG algorithms in the
JOSE working group.",<00c501d15d26$a13c7790$e3b566b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-01 11:27:46
627,EdDSA,38,111,"InformationProviding,ProposeAction,InformationProviding",,-1,"
There is not currently a draft for dealing with chacha20.  The simple
process is to write a draft and ask either JOSE or CURDLE to look at it.
Alternatively would be to write a draft, get an AD to sponsor it and then
ask for review by this group.",<00c501d15d26$a13c7790$e3b566b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-02-01 11:27:46
628,EdDSA,40,18,"InformationProviding,ContextSetting,InformationProviding",,-1,"CFRG IRTF Research Group met on Monday. Short status of RG documents was
presented, the most important being:",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
629,EdDSA,40,19,"InformationProviding,ExtensionOfPrevious,InformationProviding",18,-1,"
1) Elliptic Curves for Security (draft-irtf-cfrg-curves-11) is in RFC
Editor's queue.",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
630,EdDSA,40,20,"InformationProviding,ExtensionOfPrevious,InformationProviding",18,-1,"
2) Edwards-curve Digital Signature Algorithm (draft-irtf-cfrg-eddsa-00)
needs to specify KDF and pre-hash functions for ed448, but otherwise it
is heading in the right direction. Definition of ed25519 is stable at
this point.",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
631,EdDSA,40,21,"InformationProviding,InformationProviding",,-1,"
There was one presentation on ""FSU: Identity-based Authenticated Key
Exchange"".",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
632,EdDSA,40,22,"InformationProviding,InformationProviding",,-1,"
The rest of the meeting was spent discussing which topics CFRG should
work on next after finishing currently outstanding EC work.",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
633,EdDSA,40,23,"InformationProviding,InformationProviding",,-1,"
We finished 30 minutes early.",<56383EA4.4070407@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-03 13:57:08
634,EdDSA,42,16,"Question,InformationProviding,Question,InformationProviding",,-1,"There is a difference between the document and the code for point addition
of 448.  Which is the correct one?",<00de01d1e280$e31c0290$a95407b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 14:18:52
635,EdDSA,42,17,"InformationProviding,InformationProviding",,-1,"
Text in section 5.2.4",<00de01d1e280$e31c0290$a95407b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 14:18:52
636,EdDSA,42,18,"InformationProviding,InformationProviding",,-1,"
X3 = A*G*(H-C-D)
Y3 = A*G*(D-C)",<00de01d1e280$e31c0290$a95407b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 14:18:52
637,EdDSA,42,19,"InformationProviding,InformationProviding",,-1,"
Python Code
tmp.x=zcp*F*((self.x+self.y)*(y.x+y.y)-xcp-ycp)
tmp.y,tmp.z=zcp*G*(ycp-xcp),F*G",<00de01d1e280$e31c0290$a95407b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 14:18:52
638,EdDSA,42,20,"InformationProviding,InformationProviding",,-1,"
Note that the first uses A*G the section uses A*F in computing the new x
value.",<00de01d1e280$e31c0290$a95407b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 14:18:52
639,EdDSA,42,43,"InformationProviding,Answer,StateDecision,InformationProviding,Agreement,ProposeAction","16,20",20,"
Good catch: It should be A*F (as in code). Fixed in Editor's Copy.
",<20160720124904.GA22541@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 15:49:04
640,EdDSA,42,44,"Social,InformationProviding",20,20,"
-Ilari",<20160720124904.GA22541@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 15:49:04
641,EdDSA,42,46,"NeutralResponse,InformationProviding",43,-1,OK - Another one for you.,<006401d1e294$63418310$29c48930$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 16:38:28
642,EdDSA,42,87,"InformationProviding,InformationProviding",,-1,"
H = (X1+X2)*(Y1+Y2)
X3 = A*G*(H-C-D)",<006401d1e294$63418310$29c48930$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 16:38:28
643,EdDSA,42,88,"InformationProviding,ExtensionOfPrevious,InformationProviding",87,-1,"
Vs code",<006401d1e294$63418310$29c48930$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 16:38:28
644,EdDSA,42,89,"InformationProviding,InformationProviding",,-1,"
tmp.x=zcp*F*((self.x+self.y)*(y.x+y.y)-xcp-ycp)",<006401d1e294$63418310$29c48930$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 16:38:28
645,EdDSA,42,90,"InformationProviding,InformationProviding",,-1,"
note that in once case the two X are being added and in the other x and y are being added.",<006401d1e294$63418310$29c48930$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 16:38:28
646,EdDSA,42,151,"Question,InformationProviding,NeutralResponse,Question,InformationProviding",46,-1,"Why aren't we using the formulas from EFD?
https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html

We know these are right due to a Magma script checking them.
",<CACsn0c=BZamd8h6hczY32pvgKodsEmhT+F0N=4RbCgY1YnT3qw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-07-20 07:48:59
647,EdDSA,42,153,"InformationProviding,InformationProviding",,-1,"
""Man is born free, but everywhere he is in chains"".
--Rousseau.",<CACsn0c=BZamd8h6hczY32pvgKodsEmhT+F0N=4RbCgY1YnT3qw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-07-20 07:48:59
648,EdDSA,42,155,"InformationProviding,Answer,Question,Answer",151,-1,Maybe because this is an a=-1 curve?  (Guess on my part).,<007901d1e298$803be3d0$80b3ab70$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-07-20 17:07:55
649,EdDSA,42,264,"NeutralResponse,InformationProviding",90,90,"
Got that too.
",<20160720155943.GA22763@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 18:59:43
650,EdDSA,42,266,"InformationProviding,Answer,InformationProviding,Answer",151,151,"
The formulas supposedly come from EFD. No darn clue why that one
formula pulled one of the terms as H (and did so incorrectly).
",<20160720155943.GA22763@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 18:59:43
651,EdDSA,42,267,"InformationProviding,NeutralResponse,InformationProviding,Answer",151,151,"
The twisted doubling formula in EFD contains a, despite having assumed
a=-1 for some darn reason. There the a=-1 was carried forward in the
draft (note that E, F, G and H flip sign, but end results only contain
two-products of those, so sign flips cancel out).
",<20160720155943.GA22763@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 18:59:43
652,EdDSA,42,268,"Social,InformationProviding",151,151,"
-Ilari.",<20160720155943.GA22763@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-07-20 18:59:43
653,EdDSA,43,0,"Social,Social",,-1,Hi,<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
654,EdDSA,43,39,"InformationProviding,InformationProviding,StateDecision",,-1,"
At the meeting today, I presented the SafeCurves draft status and asked the room whether we wanted to wait for CFRG and Curdle to settle their respective RFCs. The room was unanimously in favor of not having anything in the current draft, instead using RFC 7427 digital signatures. To be certain if we *did* wait, we’d just list the two OIDs from Curdle that we like (the non-prehashed ones).",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
655,EdDSA,43,40,"InformationProviding,ContextSetting,InformationProviding",,-1,"
Quoting from the Curdle draft, they have this:",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
656,EdDSA,43,41,"InformationProviding,ExtensionOfPrevious,InformationProviding",40,-1,"
id-Curve25519   OBJECT IDENTIFIER ::= { 1.3.6.1.4.1.11591.15.1 }
id-Curve448     OBJECT IDENTIFIER ::= { 1.3.6.1.4.1.11591.15.2 }
id-Curve25519ph OBJECT IDENTIFIER ::= { 1.3.6.1.4.1.11591.15.3 }
id-Curve448ph   OBJECT IDENTIFIER ::= { 1.3.6.1.4.1.11591.15.4 }",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
657,EdDSA,43,42,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
In other news, it turns out that we still have some discussion to go with 4307bis. So I suggest that we add these to table 9 of section 4.2 there as follows:",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
658,EdDSA,43,43,"InformationProviding,ExtensionOfPrevious,InformationProviding",42,-1,"
| Description                        | Status     | Comment |
| RSASSA-PSS with SHA-256            | SHOULD     |         |
| ecdsa-with-sha256                  | SHOULD     |         |
| sha1WithRSAEncryption              | SHOULD NOT |         |
| dsa-with-sha1                      | SHOULD NOT |         |
| ecdsa-with-sha1                    | SHOULD NOT |         |
| RSASSA-PSS with Empty Parameters   | SHOULD NOT |         |
| RSASSA-PSS with Default Parameters | SHOULD NOT |         |
| sha256WithRSAEncryption            | MAY        |         |
| sha384WithRSAEncryption            | MAY        |         |
| sha512WithRSAEncryption            | MAY        |         |
| sha512WithRSAEncryption            | MAY        |         |
| dsa-with-sha256                    | MAY        |         |
| ecdsa-with-sha384                  | MAY        |         |
| ecdsa-with-sha512                  | MAY        | ?SHOULD |
| id-Curve25519                      | MAY        |         |
| id-Curve448                        | MAY        |         |
| id-Curve25519ph                    | MUST NOT   |         |
| id-Curve448ph                      | MUST NOT   |         |",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
659,EdDSA,43,44,"Question,Question",,-1,"
What do others think?",<0DDFFD34-1114-470B-AD6F-4F7C38D7AECF@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-04 16:43:22
660,EdDSA,43,46,"Answer,InformationProviding",44,-1,Replying to myself...,<9FE89ED3-4DE9-4FA2-882C-11C157BDE09E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-05 11:09:51
661,EdDSA,43,97,"InformationProviding,InformationProviding,ProposeAction",,-1,"
I’ve been told off-list that it didn’t make sense to introduce the hot, new algorithm as a MAY. The only reason I’m suggesting this is that there are currently no implementations to interop with, and no EdDSA certificates where the public keys might come from. My main motivation is to MUST NOT the pre-hashed versions because we don’t need them and again there’s no install base to interop with.",<9FE89ED3-4DE9-4FA2-882C-11C157BDE09E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-05 11:09:51
662,EdDSA,43,98,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Thinking it over, the new EdDSA signature algorithm defined in the CFRG draft[1] can sign arbitrary-sized messages. We traditionally fed the signature functions hashes of the message because these signature functions only accepted a limited-size input. That is why the “digital signature” document (RFC 7427) has a negotiation and field for hash algorithm. Since we don’t need that with this particular algorithm, I suggest we don’t. IOW I’m suggesting that we allocate a new entry in the “IKEv2 Hash Algorithms” registry called “identity” that will be used only with EdDSA signatures (or any future signature with the same property).",<9FE89ED3-4DE9-4FA2-882C-11C157BDE09E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-05 11:09:51
663,EdDSA,43,101,"NeutralResponse,InformationProviding",44,-1,No responses yet...,<C331AE70-6504-4A57-BED0-3336E494728D@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-07 11:34:45
664,EdDSA,43,161,"Question,Question",,-1,"
Tero: What would it take to register an “identity” hash function for use with the EdDSA?",<C331AE70-6504-4A57-BED0-3336E494728D@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-07 11:34:45
665,EdDSA,43,164,"InformationProviding,InformationProviding",,-1,Yoav Nir writes:,<22278.52540.662618.380257@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 00:12:28
666,EdDSA,43,207,"InformationProviding,InformationProviding",98,98,kivinen@iki.fi,<22278.52540.662618.380257@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 00:12:28
667,EdDSA,43,209,"ClarificationElicitation,InformationProviding,Answer,ProposeAction,Question,InformationProviding,Answer,ProposeAction",161,161,"
I assume you mean new value for the RFC7427 Hash Algorithm registry?
That registry is by expert review, but as ""identity"" is not
necessarely clear enough for the implementors, I would suggest writing
internet-draft doing the allocation, and also explaining how the
""identity"" hash function would be used and where it can be used.

That same draft could also point references to the suitable cfrg
document, and recommend not using the ph versions.

I.e., if we could use existing hash and signature algorithms then
there would not be need for document, but if we want to define new
""hash"" algorithm, then I think we do need document that specifies
where it can be used and how it is ""calculated"". And that same
document can then also explain the signature algorithms where it is to
be used, and provide references.
",<22278.52540.662618.380257@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 00:12:28
668,EdDSA,43,262,"ClarificationElicitation,InformationProviding,NeutralResponse,Question,InformationProviding",209,209,"
Like this?
https://tools.ietf.org/html/draft-nir-ipsecme-eddsa-00
",<BBD705B4-B576-4275-A1DF-35ED9529CBC0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-08 01:29:15
669,EdDSA,43,329,"InformationProviding,Answer,InformationProviding,ProposeAction",262,-1,"""Identity"" is the formally correct term, but I think ""null"" is much
clearer than ""identity"". Especially in the context of certificates,
where ""identity"" can be mistaken for something else.",<5707A448.6060003@gmail.com>,yaronf.ietf@gmail.com,0.0,0,1,2016-04-08 09:30:00
670,EdDSA,43,332,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",329,-1,"I also think that ""null"" is less ambiguous here.",<9F91CB57F73A4D7C952128FA72636F68@notebook>,svanru@gmail.com,0.0,0,10,2016-04-08 09:57:25
671,EdDSA,43,415,"InformationProviding,NeutralResponse,InformationProviding,StateDecision",332,-1,"I can change that. However, “Identity” is the term used in the CFRG draft.",<0AA3EA1A-2E28-43B2-876A-210076CBAD54@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-04-08 10:11:25
672,EdDSA,43,501,"InformationProviding,InformationProviding",,-1,Yoav Nir writes:,<22279.49306.488475.545859@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 17:30:50
673,EdDSA,43,530,"InformationProviding,Answer,InformationProviding,Answer,ProposeAction",262,262,"
Yep.

One nit:

OLD

To signal within IKE that no hashing needs to be done. A new value
has to be signalled in the SIGNATURE_HASH_ALGORITHMS notification,
one that indicates that no hashing is performed.

NEW

To signal within IKE that no hashing needs to be done, we need a
new value in the SIGNATURE_HASH_ALGORITHMS notification to signal
that.
",<22279.49306.488475.545859@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 17:30:50
674,EdDSA,43,531,"Question,InformationProviding,Question","262,530",262,"
Why only SHOULD NOT for pre-hashed version? Would it not be better to
just say MUST NOT?
kivinen@iki.fi",<22279.49306.488475.545859@fireball.acr.fi>,kivinen@iki.fi,0.0,0,3,2016-04-08 17:30:50
675,EdDSA,46,67,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"This message looks at Digest Algorithms.  Please restrict your discussion to
this set of algorithms.  I will be sending out messages on other algorithms
over time.",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
676,EdDSA,46,68,"InformationProviding,InformationProviding",,-1,"
Note:  Digest Algorithms are used for computing the digest of the content.",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
677,EdDSA,46,69,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
These are not the ""same"" as the digest algorithms that are used as part of
signature algorithms.  There may be things one wants to try and keep
similar, as we suggest that you use the same digest algorithm, but they are
not the same things.",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
678,EdDSA,46,70,"InformationProviding,InformationProviding",,-1,"
Current Document for S/MIME 3.1",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
679,EdDSA,46,71,"InformationProviding,InformationProviding",,-1,"
MUST: SHA-256",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
680,EdDSA,46,72,"InformationProviding,InformationProviding",,-1,"
SHOULD-: SHA-1, MD5(for backwards compatibility)",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
681,EdDSA,46,73,"InformationProviding,InformationProviding",,-1,"
Proposed for S/MIME 3.5",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
682,EdDSA,46,74,"InformationProviding,InformationProviding",,-1,"
MUST: SHA-256",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
683,EdDSA,46,75,"InformationProviding,InformationProviding",,-1,"
SHOULD: SHA-512",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
684,EdDSA,46,76,"InformationProviding,InformationProviding",,-1,"
Historic: SHA-1, MD5",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
685,EdDSA,46,77,"ContextSetting,InformationProviding",,-1,"
Questions:",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
686,EdDSA,46,78,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",77,-1,"
1.      There is only one MUST and no path forward.  Is this a problem that
needs to be dealt with?  EdDSA25519 uses SHA-512 under the covers, does that
mean we should make SHA-512 at least a SHOULD here?",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
687,EdDSA,46,79,"InformationProviding,InformationProviding,ProposeAction,StateDecision",,-1,"
Take 2 status:  I have added SHA-512 to the list of SHOULDs because it
vaguely matches what is used by EdDSA 25519.  It is not really needed as
EdDSA 25519 is targeted as the 128-bit level which is what SHA-256 supports
but an implementation of EdDSA 25519 is probably going to have it available.",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
688,EdDSA,46,80,"Question,InformationProviding,Question",77,-1,"
2.      Is there anybody who wants to standup and argue for adopting in any
of the SHA-3 algorithms?",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
689,EdDSA,46,81,"InformationProviding,InformationProviding",,-1,"
Take 2 status:  There have been a couple of pro SHAKE people, a couple of
anti SHA-3 people and a larger segment that seems to say 'Meh'.  My take at
this time is that there does not seem to be support to adding this right
now.",<05fb01d1f807$866599c0$9330cd40$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 14:45:34
690,EdDSA,46,94,"NeutralResponse,InformationProviding,ContextSetting",78,-1,"Jim:

Just responding to the first question.
",<9841C267-6CFF-4029-A47E-EE1D9DEECACE@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-08-16 17:50:56
691,EdDSA,46,96,"InformationProviding,Answer,InformationProviding,Answer,ProposeAction",78,79,"
I think that EdDSA25519 and SHA-512 should both be SHOULD algorithms.  Your other message has EdDSA25519 at the MUST level, and I suggested moving it to the SHOULD level to make these match.
",<9841C267-6CFF-4029-A47E-EE1D9DEECACE@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-08-16 17:50:56
692,EdDSA,46,165,"InformationProviding,InformationProviding",,-1,"Jim:
",<867D20C0-402F-4F63-AC50-1E97AA717633@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-08-17 15:59:38
693,EdDSA,46,167,"InformationProviding,Answer,InformationProviding,NeutralResponse","78,96",148,"
My reading of section 5.1 of draft-irtf-cfrg-eddsa-06 is that SHA-512 is mandated.  It is fully baked into the algorithm description.  For this reason, not the security impedance match, I think that both EdDSA25519 and SHA-512 ought to be SHOULD algorithms (or they could both be MUST algorithms).  Your recent proposal had one as a SHOULD and the other as a MUST.
",<867D20C0-402F-4F63-AC50-1E97AA717633@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-08-17 15:59:38
694,EdDSA,47,36,"InformationProviding,ContextSetting,InformationProviding",,-1,"The IESG has received a request from the CURves, Deprecating and a Little
more Encryption WG (curdle) to consider the following document:
- 'EdDSA for DNSSEC'
<draft-ietf-curdle-dnskey-eddsa-02.txt> as Proposed Standard",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
695,EdDSA,47,37,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,StateDecision",,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2016-12-16. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
696,EdDSA,47,38,"InformationProviding,InformationProviding",,-1,"
Abstract",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
697,EdDSA,47,39,"InformationProviding,InformationProviding",38,-1,"
This document describes how to specify EdDSA keys and signatures in
DNS Security (DNSSEC).  It uses the Edwards-curve Digital Security
Algorithm (EdDSA) with the choice of two curves, Ed25519 and Ed448.",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
698,EdDSA,47,40,"InformationProviding,InformationProviding",,-1,"
The file can be obtained via
https://datatracker.ietf.org/doc/draft-ietf-curdle-dnskey-eddsa/",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
699,EdDSA,47,41,"InformationProviding,InformationProviding",,-1,"
IESG discussion can be tracked via
https://datatracker.ietf.org/doc/draft-ietf-curdle-dnskey-eddsa/ballot/",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
700,EdDSA,47,42,"InformationProviding,InformationProviding",,-1,"
No IPR declarations have been submitted directly on this I-D.",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
701,EdDSA,47,43,"InformationProviding,InformationProviding",,-1,"
The document contains these normative downward references.
See RFC 3967 for additional information:
draft-irtf-cfrg-eddsa: Edwards-curve Digital Signature Algorithm (EdDSA)  (None - Independent Submission Editor stream)
rfc7748: Elliptic Curves for Security (Informational - Independent Submission Editor stream)
Note that some of these references may already be listed in the acceptable Downref Registry.",<148069284930.29701.5188528862476516647.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2016-12-02 07:34:09
702,EdDSA,50,7,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"I hate to offer yet another possible upgrade to TB, but I really would
prefer to use Ed25519 by default.  I see QUIC is already using it, and it
seems a bit silly not to enable it in TB, when I've already implemented
support for the other three.  Should we add Ed25519-SHA256 as a 4th key
parameters type?",<CAH9QtQFM1-wZQk0fsBVfODrGqMDhA4f2aW51bGx0kS62DynhSA@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-08-30 13:41:41
703,EdDSA,50,35,"InformationProviding,Agreement,InformationProviding,Agreement",7,-1,"+1.

In short order draft-irtf-cfrg-eddsa should become an informational RFC. I
think it at least makes sense to at least support the new CFRG
curves/signature algorithm.
",<CAHOTMV+uy10mF7PoKS0oBew6CHjz_L_eomrd3jVX1UuuHfR-QQ@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2016-08-30 13:57:18
704,EdDSA,50,38,"InformationProviding,NeutralResponse,InformationProviding,Agreement,ProposeAction",7,-1,"I would not oppose a PR adding this new TokenBindingKeyParameters identifier, although at some point we should freeze the existing 3 specs for LC and put new ideas into new specs.",<CY1PR0301MB0842B2DE1F4F22221826DCA48CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:00:29
705,EdDSA,50,84,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ProposeAction",7,7,"
We should certainly make sure the specs can swallow something like this
as an extension but in order to hold up the specs at this point with
a substantial addition I would like (with chair hat on) to see pretty
strong statements of support from implementors.
",<96c11d53-03c0-bcc3-92e1-ea73ce4d6a57@sunet.se>,leifj@sunet.se,0.0,1,1,2016-08-30 23:18:59
706,EdDSA,50,104,"Question,InformationProviding,Agreement,Question,InformationProviding,Agreement",84,-1,"
That sounds really good to me.  The changes from the -08 to -09 are going
to set me back a week, most likely.  BTW, why do we use SHA256 to hash all
the security parameters together rather than feed them as parameters into
the key export material API?  It already has a ""label"" and a ""context"".
This would be a smaller change, and would eliminate a SHA256 hash.
",<CAH9QtQEZYsufNV3rhM8-ndO=xoXKxqtou8NfM=Vip-Njmv7iZg@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-08-30 14:27:00
707,EdDSA,50,133,"ClarificationElicitation,InformationProviding,NeutralResponse,Question,InformationProviding",104,-1,"Are you suggesting that we concatenate:
o  A ProtocolVersion structure representing the negotiated version of
the Token Binding protocol, e.g. 0x01 0x00 for Token Binding 1.0;
o  TokenBindingType value contained in the
TokenBinding.tokenbinding_type field;
o  TokenBindingKeyParameters value contained in the
TokenBindingID.key_parameters field;

And use the result as our EKM context value, and then just sign the resulting EKM?
",<CY1PR0301MB084227C730B7B2B7E12FCC9B8CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:33:56
708,EdDSA,50,135,"InformationProviding,Answer,NeutralResponse,InformationProviding,ProposeAction",7,-1,"We should certainly make sure the specs can swallow something like this
as an extension but in order to hold up the specs at this point with
a substantial addition I would like (with chair hat on) to see pretty
strong statements of support from implementors.
",<CY1PR0301MB084227C730B7B2B7E12FCC9B8CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:33:56
709,EdDSA,50,171,"InformationProviding,Answer,InformationProviding,Answer",133,133,"
Yes, though I also hate to double-hash values.  The protocol version and
key parameters are already hashed into the handshake hash, which is hashed
into the EKM seed.  This is at least a third level of hashing, and with
repeated parameters.  I've heard mathematicians prefer to analyze a
protocol with everything hashed at once, but in this case, hashing in
parameters from the handshake really is redundant.
",<CAH9QtQFxcK=ZNHMM_GbbkvQP=GsCKtsWNAKiB7YZ=aQukWR6dg@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-08-30 14:37:46
710,EdDSA,50,173,"InformationProviding,NeutralResponse,InformationProviding",171,-1,The TokenBindingKeyParameters value is not necessarily in the TLS handshake hash (e.g. for referred bindings).,<CY1PR0301MB08423E8541185B5E48F1D7448CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:49:04
711,EdDSA,50,199,"InformationProviding,InformationProviding",,-1,"
The ProtocolVersion value is only in the TLS handshake if we keep it in the token_binding extension (which I hope we will).",<CY1PR0301MB08423E8541185B5E48F1D7448CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:49:04
712,EdDSA,50,200,"InformationProviding,InformationProviding,ProposeAction",,-1,"
I don’t immediately see why this idea wouldn’t work, and it eliminates one hash operation, but I think we have to supply at least TokenBindingType and TokenBindingKeyParameters as the EKM context.",<CY1PR0301MB08423E8541185B5E48F1D7448CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:49:04
713,EdDSA,50,227,"InformationProviding,Agreement,NeutralResponse,InformationProviding,Agreement",200,200,"
I guess I would prefer this, just for the reduction of one hash operation.
",<CAH9QtQFeemvHEKTkG1ahuvrRT0onYAjx77xZxK8zuahjpg0O-w@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-08-30 15:20:56
714,EdDSA,50,229,"InformationProviding,NeutralResponse",227,-1,"Unless there are objections, I’ll rev TBPROTO once more and eliminate one hash operation. Concatenated TokenBindingType and TokenBindingKeyParameters will be mixed in as EKM context, and the resulting EKM will be signed.",<CY1PR0301MB0842ADE0B5CED8CCFCA1FAA88CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 22:24:55
715,EdDSA,50,253,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",84,-1,Perhaps this could be a new I-D specifying a new TokenBindingKeyParameters identifier.,<CY1PR0301MB084276DD81242A40CB7A37288CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:27:33
716,EdDSA,50,283,"InformationProviding,InformationProviding",253,-1,"
Speaking as an implementer, MS has no plans to support Ed25519 TB keys in the foreseeable future.",<CY1PR0301MB084276DD81242A40CB7A37288CE00@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-08-30 21:27:33
717,EdDSA,50,338,"InformationProviding,Agreement,ProposeAction,InformationProviding,Agreement,Disagreement",253,-1,"+1 to a new I-D specifying a new TokenBindingKeyParameters identifier for
Ed25519. It'd be a good proof point that the extension hooks in the core
specs are correct.

Likewise as an implementer, I don't envision supporting Ed25519 TB keys in
the reasonably foreseeable future.
",<CA+k3eCQ=6dmvESb0ditFqy1BQ92nunikE-NPofxumu7202jfJw@mail.gmail.com>,bcampbell@pingidentity.com,0.0,0,6,2016-08-30 16:06:32
718,EdDSA,50,351,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,ProposeAction",7,7,"
Be sure to specify which variant you want to use.  You don't want the
-ph variant, I think.

Also, Ed25519 uses SHA-512, so be careful in how you define this.
(See other discussion on this point.)",<CABkgnnUHkqoHQtJ13=GibEV4jjVgHpf8qhkW9TDO4HHN0sJaNw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-09-09 14:47:03
719,EdDSA,53,30,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
1) The 912-bit wide internal hash function to use for Ed448.  In the
EDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512
would be more convenient in existing deployments than SHAKE256.
Personally I am currently in favor of chosing SHAKE256 for Ed448.

Yes please!

If you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for
the prehash?  That would reduce the number of distinct crypto
primitives needed for a single Ed448ph implementation.

2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the
relationship between PureEdDSA and HashEdDSA.
I believe we definitely should not use the name 'Ed25519' to describe
what we are doing in the pre-hash variant since that is already well
established in deployment to refer to, eh well, Ed25519.  So another
name is needed.

Yes please!

Does someone have a better suggestion, or can we settle on
'Ed25519ph' and 'Ed448ph'?

No objection here.",<20151008162641.6E1F86055E@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-08 16:27:51
720,EdDSA,53,60,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,Agreement",30,30,"
...but using SHAKE256 would increase the total number of primitives needed
to implement both Ed25519ph and Ed448ph in a single implementation.

The latest EdDSA paper:

http://ed25519.cr.yp.to/eddsa-20150704.pdf

...considers both SHAKE256 and SHA-512/912, and selects the latter because
existing widespread deployment of SHA-512 (e.g. in Ed25519, which isn't
called out specifically in the paper but is certainly worth noting)

My vote would be for #1 (SHA-512/912 as described in the EdDSA paper) or #4
(HKDF)

I am fine with the names Ed25519ph and Ed448ph
",<CAHOTMVLAcz9bccF7M3NzQJLHvnfVKxtHfPR_tFxOHFTqB=9hxQ@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2015-10-08 09:39:32
721,EdDSA,53,82,"NeutralResponse,InformationProviding,NeutralResponse",60,60,"
It may. So be it.
",<D23C14DC.2027C%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 16:42:20
722,EdDSA,53,84,"InformationProviding,Disagreement,NeutralResponse,InformationProviding,Disagreement",60,60,"
I haven’t seen SHA-512 “widely deployed”. Perhaps we operate in different
worlds.",<D23C14DC.2027C%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 16:42:20
723,EdDSA,53,101,"InformationProviding,NeutralResponse,InformationProviding",84,-1,"
Ed25519-with-SHA-512 is also used by Apple's HomeKit in iOS:
https://ssl.apple.com/business/docs/iOS_Security_Guide.pdf
",<CAHOTMVJWEndNVDjZX1GzAs0ifd9KMHQbZpLZJRCVXDpeXEWt1g@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2015-10-08 09:48:13
724,EdDSA,53,114,"NeutralResponse,InformationProviding,NeutralResponse",101,101,"
OK. My preference is still SHAKE256.",<D23C17D6.20284%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 16:54:09
725,EdDSA,53,161,"Question,InformationProviding,NeutralResponse,Social,Question,InformationProviding,ProposeAction",114,114,"
Presumably because this is a more natural primitive for producing
arbitrary width output.  So you're looking for a ""cleaner"" design?

While SHA2-512 expanded to 912 bits is an ""ad-hoc"" construction?
And you want to avoid legacy baggage?

If so, the choice is between a cleaner forward-looking design, and
a pragmatic what can we use with off-the-shelf code today design.

The downside of the forward-looking design is that code for both
SHAKE256 and SHA2-256 would likely be needed in a complete protocol
implementation.

I think a relevant question then is how soon would SHAKE256 be
needed anyway (because it ends up in TLS ciphersuites or other
protocol components in a complete system).

If SHAKE256 support is a likely near term requirement in many
applications anyway, then we're not saving anyone code-space with
a SHA2-512 ad-hoc construction.  In the long-run, we may be imposing
a code-space cost, if SHA2-512 is mostly deprecated by SHAKE256
some day in the all the other algorithm slots of complete systems.

Is it the group's best guess that SHAKE256 will become ""essential""
soon enough, and ultimately preferred to SHA512?  If so, that seems
the wiser long-term choice.

Or is it the case that SHA2-512 is likely with us for the long-haul
(long enough for EC to be obsoleted by scalable Quantum Computers)?
In which case allowing immediate implementation with off-the-shelf
code without introducing a new SHAKE256 requirement may be the more
pragmatic option.

Viktor.",<20151008175501.GE15070@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-10-08 17:55:01
726,EdDSA,53,163,"InformationProviding,InformationProviding",,-1,"On 10/8/15, 13:55 , ""Cfrg on behalf of Viktor Dukhovni""",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
727,EdDSA,53,238,"Answer,InformationProviding,Answer",161,161,"
Yes, I most certainly do.
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
728,EdDSA,53,240,"InformationProviding,Answer,InformationProviding,Answer",161,161,"
That too. Also, in my experience SHA-256 caught up somewhat - not nearly
to the degree I’d expect given the SHA-* situation, SHA-512 is nowhere to
be seen (sort of examples Tony provided, which I haven’t dealt with
myself).
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
729,EdDSA,53,242,"InformationProviding,Disagreement,NeutralResponse,InformationProviding,Disagreement",161,161,"
We’re already re-doing and adding (and removing :) ton of things.

If the concern is *existence* of the code - then there’s code available
for all of the algorithms mentioned, both ECC and hash. I believe I saw
both reference and optimized implementations of SHA-3 and SHAKE.

So I don’t see how avoiding SHAKE (and SHA-3) *now* is “pragmatic”.
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
730,EdDSA,53,244,"InformationProviding,NeutralResponse,Question,InformationProviding,Agreement",30,30,"
True - unless you replace SHA-256 with SHA-3 (which is already
approved/allowed by NIST for use in “federal""-related products, so it
doesn’t look like jumping the gun any more).

On the other hand, while SHA-256 is likely to stay in the code for quite a
while, SHA-3 would have to be added anyway, and probably sooner rather
than later. So why not now…
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
731,EdDSA,53,246,"NeutralResponse,InformationProviding,Answer",161,161,"
Off-hand, I cannot answer this question. :-(
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
732,EdDSA,53,248,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",161,161,"
I’m pretty sure we’d all be better off with employing SHAKE256 now.

I don’t think there are reasons to prefer SHA-512 over SHAKE256 or
SHA-3-512, given that there seems to be a need for a 256-bit security, but
few seem to actually deploy a SHA-512-based solution.
",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
733,EdDSA,53,250,"InformationProviding,Agreement,NeutralResponse,InformationProviding,Agreement",161,161,"
Good points! Though I suspect the group’s crystal ball is no better than
mine. :-)",<D23C27FA.202A2%uri@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-08 18:13:09
734,EdDSA,53,259,"InformationProviding,NeutralResponse,InformationProviding,Agreement",60,60,"
Ditto, for the same reasons as Tony.

Senior Architect, Akamai Technologies
IM: richsalz@jabber.at Twitter: RichSalz",<6341464c49e6469bbd7d2dfda9b0597b@ustx2ex-dag1mb3.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-10-08 16:48:09
735,EdDSA,54,54,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"I could certainly live with BLAKE2, but IMHO it would be ‎more prudent to stick with NIST-approved (standardized) algorithms.

Another possibility is offering ""negotiable"" options, but I suspect this group would prefer the ""one function fits all"" approach. ;-)
",<20151009182354.17780800.91120.27521@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-09 18:23:45
736,EdDSA,54,55,"InformationProviding,InformationProviding",,-1,"
Sent from my BlackBerry 10 smartphone on the Verizon Wireless 4G LTE network.
Original Message",<20151009182354.17780800.91120.27521@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-09 18:23:45
737,EdDSA,54,57,"InformationProviding,InformationProviding",,-1,"
On 10/9/15, 8:37 AM, ""Cfrg on behalf of Ilari Liusvaara""
<cfrg-bounces@mail.ietf.org on behalf of ilari.liusvaara@elisanet.fi>",<20151009182354.17780800.91120.27521@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-09 18:23:45
738,EdDSA,54,59,"Question,NeutralResponse,Social,Question,InformationProviding",,-1,"
Are we constrained to NIST approved hash algorithms?
If not, BLAKE2 has some impressive performance benefits:
https://blake2.net/ and
https://datatracker.ietf.org/doc/draft-saarinen-blake2/

Paul
",<20151009182354.17780800.91120.27521@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-09 18:23:45
739,EdDSA,55,87,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"I am reviewing the current draft because it is what is published.  I know
that some very significant changes have been made by the author's to their
editors draft which have not yet been published.  These changes must be
considered to be blocking as they are errors in the algorithm.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
740,EdDSA,55,88,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ContextSetting",,-1,"
I will now comment on the draft as a whole and on specific issues that I
have with the draft.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
741,EdDSA,55,89,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",88,-1,"
1.  I find the different capabilities between the two signature algorithms
to be frustrating.  I understand the value of context structures, however
the reasoning for it not being in the Curve 25519 side of the world is not
motivated.  While they are useful, I believe they should be removed from the
Curve 448 algorithms for consistency between the two.  I do not believe that
it is sufficient to say, don't worry and use an empty context when doing
drop in replacements if they are really that significant.  Either put them
in both or remove them from both.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
742,EdDSA,55,90,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",88,-1,"
2.  Although it does appear that the point addition code can be used for
doubling, the fact that the python code does not use would imply that it is
far more efficient to use a doubling function that is different.  The
Doubling code should be part of the provided document for people to use if
they desire.  This is true for both curves.  - Suggest highlighting the fact
in section 3 where it says that the formulas are complete that they can be
used for point doubling.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
743,EdDSA,55,91,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",88,-1,"
3.  It would be reasonable to provide a list of differences between the two
curve functions.  This would include things like the use of dom for one and
not the other with a list of reasons for the differences and expected
security differences.  One of which I assume is that 448 is more resistant
to abuse of pre-hash vs non pre-hash swaps since that is part of the dom
function.  There may be other things that should be highlighted up front as
well.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
744,EdDSA,55,92,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",88,-1,"
4.  It might be clearer in section 3.1 to describe ENC(x, y) = ENC(y) ||
SIGN(x)  and then defined SIGN(x) as ""1 if x is negative and 0 if x is not
negative"".  This builds on the previous paragraph.   I don't know what
happens to the ENC(x, y) function if b is not a multiple of 8.  This should
probably be defined.  The ENC(x) function I assume is never padded out to a
multiple of 8, but that might not be the case.  It might also be different
depending on the context in which case life will get fun really fast.
Simplest answer might be to go from recommended to required in the
definition of b",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
745,EdDSA,55,93,"InformationProviding,ExtensionOfPrevious,ProposeAction,UnderstandingNegative,ProposeAction,UnderstandingNegative",88,-1,"
5.  In section 3.1, I don't understand where the last paragraph is going.
It might be useful to motivate it.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
746,EdDSA,55,94,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",88,-1,"
6.  In section 3.3, the function dom is not used in the computation of S.
This should be included in the generic algorithm and defined as being the
empty function for Ed25519.  This means that introducing it later is no
longer a surprise.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
747,EdDSA,55,95,"InformationProviding,ExtensionOfPrevious,InformationProviding,UnderstandingNegative",88,-1,"
7.  In section 3.4 suggest s/A in E/A/  I found the additional in E to be
confusing and it is not used elsewhere.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
748,EdDSA,55,96,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ProposeAction",88,-1,"
8.  In section 5.1.7 there needs to be a discussion of the trade-offs of
using the second verification formula rather than the first.  What is the
difference if any?",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
749,EdDSA,55,97,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",88,-1,"
9.  In section 5.2, I just got a surprise that was unexpected.  I did not
expect that the pre-hash function would include the use of function dom.
This is going to be a surprise for a lot of code as it will assume that they
can just compute the hash of the message x and then pass that into the
signing function without any additional work being done on their part.  I
can understand dom being used in the signature computation but why is it
done here as well.  Also this is very different from Ed25519ph.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
750,EdDSA,55,98,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",88,-1,"
10.  A citation in section 10.2 on multiple signature verification needing
randomness is requested.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
751,EdDSA,55,99,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",88,-1,"
11. I found the driver function to be frustrating in the process of using it
to debug my code for a number of reasons.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
752,EdDSA,55,100,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding,UnderstandingNegative",99,-1,"
a)  It was missing the following line "" assert sys.version_info >= (3,3)""
which would have saved me time since I have multiple versions of python.
b) The driver is only setup to deal with the one function of Ed25519.  That
meant I had to munge it in various ways to deal with the other functions.
c) The format is of the file at sign.input is not documented either here or
in the file itself.
d) It is not clear what the file format should be for the pre-hash functions
or for the addition of the context field for Ed448.
e) The python code occasionally pulls tricks that are not self-evident in
order to perform some of the checks required in the document making checking
of this more difficult.  ""Do I need to do that check really?""
f) The python code uses point doubling, but of course the document doesn't.",<01e401d1ec1b$b9ccbd90$2d6638b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-01 10:39:56
753,EdDSA,55,244,"InformationProviding,NeutralResponse,InformationProviding,Agreement",89,89,"
Yeah, that _seriously_ annoys me. Because if you need contexts, you _need_
contexts.

The issues with ""LURK SKI"" ekr pointed out are a good warning on how
things can go wrong (abusing TLS server signing key to sign some
completely different things).
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
754,EdDSA,55,246,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",90,90,"
One of the changes to Editor's Copy should fix this (doubling formulas
are given after respective addition formulas). In one case, there is
substantial difference.
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
755,EdDSA,55,248,"NeutralResponse,InformationProviding",91,91,"
Oh yeah, the Ed25519 vs. Ed25519ph footgun...
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
756,EdDSA,55,250,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",92,92,"
If b is not multiple of 8, some outputs will not be octet strings! That's
the reason for using b=456 and not b=449 with Ed448, as the latter would
cause nasty special cases.
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
757,EdDSA,55,252,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",93,93,"
Essentially, the idea is to defer divisions to as late as possible by
representing numbers in form x/z.

This is because divisions are _seriously_ slow. It is much faster to
do lots of extra multiplies to handle ""numerators"" and ""denominators""
separatedly.
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
758,EdDSA,55,254,"NeutralResponse,InformationProviding",94,94,"
Hmm...
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
759,EdDSA,55,256,"InformationProviding,NeutralResponse,InformationProviding,UnderstandingNegative",95,95,"
E means the elliptic curve (and it is defined earlier).

The whole section 3 is pretty confusing...
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
760,EdDSA,55,258,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer",96,96,"
The second formula rejects some signatures (that aren't constructed by
the signing algorithm presented) the first accepts.

Specifically, the first one ignores multiples of point of order 8 added
to R and A (however, A is hashed into k), whereas with the second formula,
such multiples have to match up too.

And in certain applications, it is a problem if two implementations don't
agree on what are acceptable signatures (even if computing acceptable
signatures for both without private key is infeasible).
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
761,EdDSA,55,260,"InformationProviding,Answer,NeutralResponse,InformationProviding,Agreement",97,97,"
Yeah, that's unnecressary. Also, the prehash used is kinda weird anyway
(SHAKE256@512, which is not actual hash function).
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
762,EdDSA,55,262,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",98,98,"
Essentially, the idea is to verify a random linear combination of
signatures, and the role of randomness is to prevent attacker from
constructing signatures that meet the fixed relation.
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
763,EdDSA,55,264,"InformationProviding,NeutralResponse,InformationProviding",100,100,"
I actually have alternate driver that is focused to protocol development
(I don't remember if it does contexts, but it definitely does Ed448).
Can take keys stuff as hex/base64/UTF-8 from command line or as binary
from file, and output hex/base64 to screen or binary to file.
",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
764,EdDSA,55,265,"Social,InformationProviding",100,100,"
-Ilari",<20160802075055.GB21071@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-02 10:50:55
765,EdDSA,55,527,"InformationProviding,NeutralResponse,ProposeAction,Question,InformationProviding,Agreement,ProposeAction",244,244,"
Perhaps we could fix the context to the empty string, and then put the actual context code in the appendix?

There’s been a lot of criticism for contexts, since of course they are redundant with prefixing the message.  I still kind of like them, because in some legacy protocol you can specify the signature algorithm as Ed448(context=“my legacy protocol”) and it will be separated from other uses of Ed448 with the same key.  But I agree that the split is confusing as it is now.
",<4B08AAC4-A91E-4AD4-B2FC-A5DA1DC73B91@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-02 13:59:28
766,EdDSA,55,529,"Agreement,InformationProviding,Agreement,ProposeAction",258,258,"
I agree that this needs to be discussed in the document.
",<4B08AAC4-A91E-4AD4-B2FC-A5DA1DC73B91@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-02 13:59:28
767,EdDSA,55,531,"InformationProviding,Agreement,ProposeAction,InformationProviding,Agreement,ProposeAction",260,260,"
I’d be happy to see a change to the prehash.  It should still probably be SHAKE or SHA3 though, to match the signature; or else we would have to extend the context to describe what the hash is, which would be annoying.
",<4B08AAC4-A91E-4AD4-B2FC-A5DA1DC73B91@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-02 13:59:28
768,EdDSA,57,53,"InformationProviding,ProposeAction,InformationProviding",,-1,"
If I understood correctly, computing a longer hash with SHA-512 as
specified in [Bernstein et al., EdDSA for more curves] requires
processing the input twice (for SHA-512/832 and /912) or four times (for
SHA-512/1056) with different IVs, against only *once* for a SHAKE. Aside
from the complexity aspect, this should also be taken into account if
the performance of the hashing part matters.

Since this hash function is used only on one or two hundred bytes in
the first place, to hash two x coordinates and a message hash
together, it is unlikely to be a bottleneck, given that we already
have to perform elliptic curve scalar multiplications.

That said, even if it were, or for the sake of a non-prehashed scheme,
it is not hard to imagine appending a counter instead of changing the
IV/personalization string, e.g.

blake2b(r || a || m || ""0"") || blake2b(r || a || m || ""1"") || ...,

which allows one to copy the state of blake2b(r || a || m || .)
instead of recomputing the hash from the beginning, in any reasonable
implementation[1].

Blake2b's security properties include that

c |---> blake2b(r || a || m || c)

is a PRF indexed by r || a || m, so I don't expect security concerns
with this construction.  (If the message is not prehashed and hence
not uniform random, then still (m, c) |---> blake2b(r || a || m || c)
is a PRF indexed by r || a.)
",<20151014152755.03AAE607C3@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-14 15:29:08
769,EdDSA,57,54,"InformationProviding,ExtensionOfPrevious,InformationProviding",53,-1,"
[1] Example, using http://mumble.net/~campbell/hg/blake2/:

struct blake2b ctx0, ctx;
uint8_t h[128];
uint8_t c[8] = {0};

blake2b_init(&ctx0, 64, NULL, 0);
blake2b_update(&ctx0, r, rlen);
blake2b_update(&ctx0, a, alen);
blake2b_update(&ctx0, m, mlen);
ctx = ctx0;
blake2b_update(&ctx, c, sizeof c);
blake2b_final(&ctx, h + 0);
c[0]++;
ctx = ctx0;
blake2b_update(&ctx, c, sizeof c);
blake2b_final(&ctx, h + 64);",<20151014152755.03AAE607C3@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-14 15:29:08
770,EdDSA,60,26,"InformationProviding,InformationProviding",,-1,"Ben Campbell has entered the following ballot position for
draft-ietf-jose-cfrg-curves-05: No Objection",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
771,EdDSA,60,27,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
772,EdDSA,60,28,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
773,EdDSA,60,29,"InformationProviding,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-jose-cfrg-curves/",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
774,EdDSA,60,30,"ContextSetting,InformationProviding",,-1,"
COMMENT:",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
775,EdDSA,60,31,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",30,-1,"
I note that the reference to RFC7748 is a normative downref that does not
appear to be mentioned in the last call announcement. It’s not in the
downref registry, but since it's an algorithm spec, it probably should
be. I don't suggest any particular course of action; I merely bring it up
in case people hadn't already noticed.",<147140015280.19947.15915664309829411372.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2016-08-16 19:15:52
776,EdDSA,60,33,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",31,-1,"I don't know when it needs to be done, but the other down reference in the document is also an algorithm document which I hope will get into the registry as well when it is published.",<063301d1f831$2408d6a0$6c1a83e0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-16 19:43:27
777,EdDSA,60,139,"InformationProviding,Agreement,InformationProviding,Agreement",33,33,"
I agree . I didn't call that out because that one _was_ mentioned in the
last call announcement.
",<2A58CE47-F942-4DC5-8719-CB3F811667FE@nostrum.com>,ben@nostrum.com,0.0,0,0,2016-08-16 22:46:55
778,EdDSA,60,224,"Question,InformationProviding,NeutralResponse,Apologising,Question,InformationProviding,Apologising","139,31",31,"
Sorry to chime in late.  I thought this was covered in the shepherd
report, but didn't realize there were 2 downrefs.  What do I need to
do at this point?  We don't need to do another last call anymore,
right?  Sorry I am not remembering the new procedure.
",<CAHbuEH5Qiw1MnTdHHd17uOHgDhYSny+ewCh1HWpTYmjqs7=_HA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-08-17 12:39:11
779,EdDSA,60,334,"InformationProviding,Answer,NeutralResponse,Social,InformationProviding,Answer",224,224,"
We have been discussing the relaxation of the (repeated) last call
requirement, both in the IESG and in Barry's draft. I'm not sure that
discussion has reached it's conclusion. I'm not sure what we should do
in the interim (this my comment about not suggesting any particular
course of action.)

By the way, I think both were mentioned in the shepherd write up, but
not in the last call announcement.

Ben.
",<616FB2FE-B8A6-490A-8E5E-418E10A988C5@nostrum.com>,ben@nostrum.com,0.0,0,0,2016-08-17 11:43:28
780,EdDSA,60,456,"InformationProviding,NeutralResponse,Question,InformationProviding","31,334",31,"
OK, the shepherd report was there prior to last call, so hopefully
that is enough to not require a second last call?
",<CAHbuEH6gAqTkjuHn+s5k-4d=vZcGjp5K+E2-63HrHTQHt+x96w@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-08-17 12:56:03
781,EdDSA,60,548,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ProposeAction",224,224,"If you belive that the downrefs to a particular document are accepted by
the community you waive them and do nothing.

Once a specific down reference to a particular document has been
accepted by the community (e.g., has been mentioned in several Last
Calls), an Area Director may waive subsequent notices in the Last
Call of down references to it.  This should only occur when the same
document (and version) are being referenced and when the AD believes
that the document's use is an accepted part of the community's
understanding of the relevant technical area.  For example, the use
of MD5 [RFC1321 <https://tools.ietf.org/html/rfc1321>] and HMAC [RFC2104 <https://tools.ietf.org/html/rfc2104>] is well known among
cryptographers.

normative downrefs to external crypto specifications documented in informational RFCs are a normal and accepted part of the process.
",<6e8c4169-14f5-953d-637d-3e7ece733545@bogus.com>,joelja@bogus.com,0.0,0,0,2016-08-17 09:56:58
782,EdDSA,60,650,"Thanking,Thanking",548,-1,"Thank you, Joel!
",<CAHbuEH7T4ihD7h=jwXPWkngT7kVuxqQcag0XU=Lb_aRw_O7cGg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2016-08-17 13:17:15
783,EdDSA,60,696,"Question,InformationProviding,NeutralResponse,Question",548,548,"
Hasn't that historically still been handled on a spec by spec basis?",<ED7AB977-2EDA-4061-8A89-DBBCBBA35E15@nostrum.com>,ben@nostrum.com,0.0,0,0,2016-08-17 12:50:38
784,EdDSA,60,742,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer",696,696,"sure, but if you're not looking at the downref with an eye towards what
kind of reference it is then that detail is missing for the discussion.

the cfrg may have change control on draft-irtf-cfrg-eddsa but it doesn't
on the curves contained therein, so citiing a curve located there is
reference to an external specification.",<23ee0234-7a35-ef3f-23ea-89f3eb747af9@bogus.com>,joelja@bogus.com,0.0,0,0,2016-08-17 11:13:04
785,EdDSA,61,14,"InformationProviding,InformationProviding,Social",,-1,"Dear CFRG participants,
Chairs would like to get Ed448 finished and send
draft-irtf-cfrg-eddsa to RFC Editor.",<56508C20.7090009@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-21 15:22:08
786,EdDSA,61,15,"InformationProviding,ProposeAction,InformationProviding",,-1,"
In order to do that, we need to pick 1) pre-hashing algorithm and 2)
912-bit internal hash function.",<56508C20.7090009@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-21 15:22:08
787,EdDSA,61,16,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,StateDecision",,-1,"
Chairs would like to ask participants to submit their detailed
implementable proposals within 1 week (till November 29th). After that
we will have a Quaker poll to settle on one choice for each of the above
(alternatively chairs can just pick something and ask for objections).",<56508C20.7090009@isode.com>,alexey.melnikov@isode.com,0.0,1,1,2015-11-21 15:22:08
788,EdDSA,61,177,"InformationProviding,ContextSetting,InformationProviding,NeutralResponse,ContextSetting",16,-1,"Here are two closely-related proposals for the pre-hashing and internal
hashing scheme.  For discussion purposes let's call them ""twoshakes-s""
and ""twoshakes-d"".  Both are defined in clearly-demarked sections below.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
789,EdDSA,61,178,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",177,-1,"
#1: twoshakes-s (""s"" is for ""simple""):",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
790,EdDSA,61,179,"InformationProviding,InformationProviding,ExtensionOfPrevious",178,-1,"
This scheme uses the SHAKE256 extensible-output functions (XOFs) to
implement both the internal hash and prehash. The internal hash uses the
first 912 bits (114 octets) of the output produced by SHAKE256, whereas
the prehash uses the first 512 bits (64 octets) of SHAKE256-produced output.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
791,EdDSA,61,180,"InformationProviding,InformationProviding",,-1,"
In PureEdDSA, the prehash PH(M) is the identity function, PH(M)=M. In
HashEdDSA, the prehash PH(M) is computed as SHAKE256(M, 512), where M is
the message to be hashed and the second parameter determines the number
of bits of output the SHAKE256 XOR produces.  Note that this notation is
consistent with the two-parameter definition of SHAKE256 in section 6.3
of FIPS 202.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
792,EdDSA,61,181,"InformationProviding,InformationProviding",,-1,"
The internal hash H(M) is similarly computed as SHAKE256(M, 912),
yielding a 912-bit output.  (Note that the M here merely names the
internal hash's input parameter, not the message ultimately input to the
EdDSA scheme.  In its usage by EdDSA this M will be substituted with
'Prefix || M' or 'R || A || M' in the signing process.)",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
793,EdDSA,61,182,"InformationProviding,ContextSetting",,-1,"
Design justification:",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
794,EdDSA,61,183,"InformationProviding,InformationProviding,ExtensionOfPrevious",182,-1,"
The overall justification for using SHAKE256 for both internal hash and
prehash, as discussed already on this list, is: (a) implementations need
only a single symmetric crypto primitive (Keccak) for both; and (b)
SHAKE256 operates the underlying Keccak sponge function with a rate and
capacity designed to be appropriate for a 256-bit security level, and
not at an overly-conservative rate as she SHA3-* hashes do. This latter
performance consideration is important mainly for the prehash, since the
prehash can be used to operate on long messages making its hashing
throughput potentially significant (and not necessarily always dominated
by the cost of the public-key operations).",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
795,EdDSA,61,184,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",183,-1,"
This scheme has the advantage of simplicity and consistency with how the
Ed25519 signature scheme works, only dropping in SHAKE256 with
appropriate output-size parameters in place of SHA-512.  I do not
perceive any real security problem with using the same SHAKE256 XOF
(with different output-size parameters) for the two hashes, because in
practice part of the input M will always be different for the XOF's
different uses, yielding implicit domain-separation.  In particular:",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
796,EdDSA,61,185,"InformationProviding,InformationProviding,ExtensionOfPrevious",184,-1,"
- The secret per-message 'r' value gets computed using the internal hash
as SHAKE256(prefix || M, 912), which depends on the secret and
cryptographically unique 'prefix'.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
797,EdDSA,61,186,"InformationProviding,InformationProviding,ExtensionOfPrevious",184,-1,"
- The Schnorr challenge gets computed using the internal hash (again) as
SHAKE256(R || A || M, 912), where R depends on r and in turn on the
secret prefix, and hence should be cryptographically unique and
unpredictable to anyone not holding the private signing key.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
798,EdDSA,61,187,"InformationProviding,InformationProviding",,-1,"
Argued another way, if there was a real problem with using SHAKE256 for
both the internal hash and prehash in Ed448, it seems the same problem
would probably exist with using SHA-512 for both the internal hash and
prehash in Ed25519.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
799,EdDSA,61,188,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
Still, in case we would like to make the design a bit more conservative
with explicit domain separation, I suggest the following alternative scheme.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
800,EdDSA,61,189,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",188,-1,"
#2: twoshakes-d (""d"" is for ""domain-separated""):",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
801,EdDSA,61,190,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",189,-1,"
This scheme again uses the SHAKE256 extensible-output functions (XOFs)
to implement both hashes, with the inputs prefixed as specified below
for explicit domain separation purposes.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
802,EdDSA,61,191,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting",190,-1,"
The scheme accepts two optional, application-defined parameters for
customization, but applications simply needing a generic signature
scheme (and APIs offering no convenient way to specify optional
parameters) can simply use the defaults as specified below:",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
803,EdDSA,61,192,"InformationProviding,InformationProviding,ExtensionOfPrevious",191,-1,"
- Prehash: 1-bit flag, default True
- Context: octet string of length 0..255, default empty (0-octet)",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
804,EdDSA,61,193,"InformationProviding,InformationProviding",,-1,"
In PureEdDSA, the prehash PH(M) is the identity function, PH(M)=M.
In HashEdDSA, the prehash PH(M) is computed as SHAKE256(dom||M, 512),
where dom is a domain separation prefix defined below with the Flags
octet set to 0x02.  The 512 parameter means use the first 512 bits of
SHAKE256 output as the hash prehash output.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
805,EdDSA,61,194,"InformationProviding,InformationProviding",,-1,"
The internal hash H(M) is computed as SHAKE256(dom||M, 912), where dom
is defined below, with the Flags octet it contains set to 0x00 for
PureEdDSA or to 0x01 for HashEdDSA.  The 912 again means use the first
912 bits of SHAKE256 output as the internal hash output.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
806,EdDSA,61,195,"InformationProviding,InformationProviding",,-1,"
The domain separation prefix 'dom' in each case above consists of:
- 8 octets: the ASCII characters ""SigEd448""
- 1 octet: Flags, as defined below
- 1 octet: length of optional Context string, 0-255 (0 meaning empty)
- 0-255 octets: Context string",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
807,EdDSA,61,196,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The Flags octet is defined as follows:
- Bit 0: Prehash parameter: 0 for PureEdDSA or 1 for HashEdDSA.
- Bit 1: 0 for the internal hash, 1 for the prehash
- Bits 2-7: reserved, MUST be zero",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
808,EdDSA,61,197,"InformationProviding,ContextSetting",,-1,"
Justification for this design:",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
809,EdDSA,61,198,"InformationProviding,InformationProviding,ExtensionOfPrevious",197,-1,"
The 8-octet 'SigEd448' prefix provides (weak) explicit domain separation
of EdDSA+Goldilocks's use of SHAKE256 from other independent uses of
SHAKE256.  It is not by any means essential to the scheme's security but
is included merely as a low-cost conservative precaution.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
810,EdDSA,61,199,"InformationProviding,InformationProviding",,-1,"
The optional Context parameter enables applications to distinguish
signatures intended for use in one context from signatures intended for
another.  In particular, if a signature S is generated with one context
C1, i.e., S = Sign_C1(M), then any attempt to verify S in a different
context C2 != C1 will fail, i.e., Verify_C2(M) = False.  A Context could
simply be a well-known application- or protocol-defined name, or a hash
or random number to allow more fine-grained context separation.  The
document defining how EdDSA is to be used in a given application or
protocol is expected to specify how the Context parameter is to be
determined.",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
811,EdDSA,61,200,"InformationProviding,InformationProviding",,-1,"
The Flags octet provides explicit domain separation between the three
uses of SHAKE256 in EdDSA+Goldilocks: namely the prehash (flags=0x02),
the PureEdDSA internal hash (flags=0x00), or the HashEdDSA internal hash
(flags=0x01).",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
812,EdDSA,61,201,"InformationProviding,InformationProviding",,-1,"
Any or all of these domain separation provisions could of course be
dropped without affecting the resulting signature scheme's security in
any one use-case considered independently, but are included as a
conservative security precaution that costs little in terms of either
performance or implementation complexity.  As such, I feel these
domain-separation provisions are useful but am also fine with dropping
any of them if the balance of the WG feels they are not worth the
trouble.  (Or just go with twoshakes-s above.)",<565109E4.7000904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-21 16:18:44
813,EdDSA,61,204,"Social,Social",177,-1,"Hi Bryan,",<5655E8F3.8050404@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-11-25 17:59:31
814,EdDSA,61,375,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse","177,201",-1,"
I have a preference for your second proposal ""twoshakes-d"", for its
domain separation between PureEdDSA and HashEdDSA. This would have the
practical advantage of allowing a single key to be used for both options
(if certified as such), without input clashes at the internal hash level.",<5655E8F3.8050404@st.com>,gilles.vanassche@st.com,0.0,0,38,2015-11-25 17:59:31
815,EdDSA,61,378,"Agreement,Agreement",375,-1,+1,<5655FA97.1000809@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2015-11-25 10:14:47
816,EdDSA,62,37,"Agreement,Agreement",,-1,"+1

Sent from my BlackBerry 10 smartphone on the Verizon Wireless 4G LTE network.
Original Message",<20151014153737.17780800.53602.28167@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-14 15:37:52
817,EdDSA,62,40,"Social,Social",,-1,"
Dear all,
",<20151014153737.17780800.53602.28167@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-14 15:37:52
818,EdDSA,62,42,"InformationProviding,Agreement,InformationProviding,Agreement",,-1,"
I fully agree with Gilles here. It's true that Keccak is slower in
software than, e.g., Blake 2, but when compared to SHA-512, there's not
much of a difference, except if SHA-512 has hardware acceleration [1].
As much as I like fast crypto, I think that simplicity is more
important.

Some people have argued that SHA-3 is complex to implement in software,
but actually, an implementation of all 6 algorithms of the FIPS-202
standard fits into just 9 tweets:
http://keccak.noekeon.org/tweetfips202.html
",<20151014153737.17780800.53602.28167@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2015-10-14 15:37:52
819,EdDSA,65,15,"Question,InformationProviding,Agreement,Question,InformationProviding",,-1,"
There's been a lot of criticism for contexts, since of course they
are redundant with prefixing the message.  I still kind of like
them, because in some legacy protocol you can specify the signature
algorithm as Ed448(context=`my legacy protocol') and it will be
separated from other uses of Ed448 with the same key.  But I agree
that the split is confusing as it is now.

In what legacy protocol can you specify a new signature scheme over a
new curve with a new special-purpose context parameter for existing
keys, yet you can't control anything else about how the existing keys
are used for other inputs?",<20160802222833.5F2BE603FB@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2016-08-02 22:28:41
820,EdDSA,65,55,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,NeutralResponse",15,-1,"I would have to go through the mailing list again to be sure, however I
believe that the argument was the Ed25519 is currently being used in
protocols today.  For some reason I seem to remember that SSH was one such
but I don't have anything but a vague memory to back that up. If so, the
version being used in SSH does not have the context structure built into it.
The desire was to not deliberately have an incompatible signature scheme
defined here that would not match what is being done in these protocols.",<038501d1ed1b$aa34ec30$fe9ec490$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-02 17:12:01
821,EdDSA,65,124,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",55,-1,"It dawns on me that I should probably state that while my main worry is that
the two algorithms be consistent of either having or not having the context
structure.  My preference would be to have the context structure as it
strengthens the resistance to the pre-hash/pure misuse even if it means that
there are two different things called Ed25519 in the wild.",<039901d1ed42$eef1e630$ccd5b290$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-02 21:53:07
822,EdDSA,65,164,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",124,124,"
I really don't think Ed25519 should be any different from what is in the
wild. Ed25519ph is not in the wild much.

The Chacha20-Poly1305 mess was bad enough, and that function was MUCH
less out there than Ed25519.
",<20160803083912.GA30525@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-03 11:39:12
823,EdDSA,65,165,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction","124,164",124,"
Also, I came up with the following cute hack:

- Split Ed448 into Ed448 and Ed448ctx according to context present/not.
- Define Ed25519ctx with hash prefix of
""SigEd25519 no Ed25519 collisions""|byte(phflag)|byte(len(ctx))|ctx
- Define Ed25519ph in terms of Ed25519ctx.

Leaves Ed448(key,message) unchanged, leaves Ed25519 unchanged, that
prefix prevents any trivial hash collisions with Ed25519[1], prevents
Ed25519 vs. Ed25519ph key mixups (that seems like a major footcannon,
considering some of the use proposals I have seen).

One couldn't then compute Ed25519ph with standard Ed25519 software,
but I don't consider that that major problem.
",<20160803083912.GA30525@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-03 11:39:12
824,EdDSA,65,166,"InformationProviding,InformationProviding",165,124,"
[1] If one tries to use that value as R in Ed25519, which is necressary
for trivial collision, verification tries to calculate square root of
QNR, which obviously fails.
",<20160803083912.GA30525@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-03 11:39:12
825,EdDSA,65,167,"InformationProviding,Social",124,124,"
-Ilari",<20160803083912.GA30525@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-03 11:39:12
826,EdDSA,65,169,"InformationProviding,Agreement,Agreement",165,-1,"I like this hack, though it is certainly a hack.  Does",<97D41210-62A7-4F26-9BB8-0F135508AFE8@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-03 11:55:41
827,EdDSA,65,171,"Question,Question,NeutralResponse",165,165,mean that Ed448 is equivalent to Ed448ctx(context=“”)?  I’m guessing so?,<97D41210-62A7-4F26-9BB8-0F135508AFE8@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-03 11:55:41
828,EdDSA,65,218,"InformationProviding,Social",165,165,"
— Mike
",<97D41210-62A7-4F26-9BB8-0F135508AFE8@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-03 11:55:41
829,EdDSA,65,221,"InformationProviding,Agreement,InformationProviding,NeutralResponse",169,-1,"It is a hack, but as hacks go this is relatively clean and looks like it addresses the problems.  There would be a question in the Curdle group about which of the 25519 functions to support - with or w/o the context but other than that things look good.",<04b301d1edba$6f522750$4df675f0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-03 12:08:32
830,EdDSA,65,287,"Question,ContextSetting,NeutralResponse,ContextSetting,ProposeAction",165,-1,What if we do the following for dealing with things:,<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
831,EdDSA,65,351,"InformationProviding,ExtensionOfPrevious,ContextSetting",287,-1,"
Ed25519:",<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
832,EdDSA,65,352,"InformationProviding,InformationProviding,ExtensionOfPrevious",351,-1,"
r = SHA-512(dom(F, c) || prefix || PH(M))
k = SHA-512(dom(F, c) || A || PH(M))",<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
833,EdDSA,65,353,"InformationProviding,InformationProviding,ExtensionOfPrevious",352,-1,"
where
dom(F, c) = empty string for PureEdDSA
dom(F, c) = ""SigEd25519"" || octet(x) || octet(OLEN(y)) || y    for Prehash-EdDSA",<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
834,EdDSA,65,354,"ProposeAction,ExtensionOfPrevious,ProposeAction",287,-1,"
Ed448:
Keep the fomulas as they are today.",<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
835,EdDSA,65,355,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",354,-1,"
This would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed.",<001501d1f397$6749dc00$35dd9400$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-10 23:12:53
836,EdDSA,65,389,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",355,355,"
I would use some 32-byte prefix that does not decode as valid point.
Even if I don't know any attacks if prefix can decode as a valid point,
I'd rather not risk anything.
",<20160811065121.vswhvnmhevpryh5w@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-11 09:51:21
837,EdDSA,65,390,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious","355,389",355,"
Also, If one wanted to do contexts in another document, one could
just fix the OLEN octet to 0 (so it is compatible).
",<20160811065121.vswhvnmhevpryh5w@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-11 09:51:21
838,EdDSA,65,391,"InformationProviding,Social",355,355,"
-Ilari",<20160811065121.vswhvnmhevpryh5w@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,1.0,0,2,2016-08-11 09:51:21
839,EdDSA,65,399,"InformationProviding,InformationProviding",,-1,draft-irtf-,<012901d1f40f$af6343a0$0e29cae0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2016-08-11 13:33:54
840,EdDSA,65,485,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,NeutralResponse,Social",15,15,"
Legacy protocols get extended all the time.  Especially TLS.  They get new cryptosystems and new ways of using those cryptosystems.  They have many extension specs written by many different people, some of which may be rather unlikely to change and would therefore need to be superseded, compounding the legacy headache.

Contexts are there so that you can domain-separate two extensions or other uses of a key, without changing the specs to both of them — or, conceivably, to either of them, if you define a way to determine the context for a given extension.

I understand that this doesn’t protect people who use older signature schemes that don’t have contexts.  It is merely a defense in depth, but this seems appropriate for what is already a paranoid-level curve.

If you don’t use the contexts, they cost a couple paragraphs in the spec, one extra byte passed to a hash function, and (if the library supports with and without) one extra function in the library API.  I hope that this is still little enough complexity that the potential gains outweigh the risks.  If not, I don’t have a huge problem with removing them, but I still think it’s important to distinguish prehashed and non-prehashed modes.

— Mike",<ECA8D710-2086-4483-8DAD-43BD900887A4@shiftleft.org>,mike@shiftleft.org,0.0,0,8,2016-08-02 18:43:37
841,EdDSA,68,23,"InformationProviding,InformationProviding",,-1,"
It might be the fact that it's brand new and everybody's been
waiting for NIST to finalize it, but I'm feeling a distinct lack of
interest in SHA-3.

SHA-3 was finalized on 2015-08-05:

http://csrc.nist.gov/groups/ST/hash/sha-3/fips202_standard_2015.html
http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf

Its software performance leaves a lot to be desired, and there doesn't
seem to be anyone actively pushing for its adoption at least in free
software and public internet engineering.  The security margin of
SHA-3 is pretty high, so maybe that argues in favour of using it for
Ed448ph.

In contrast, BLAKE2 has decent performance in software, comparable to
SHA-2 in portable C code and -- with the help of hand-tuned vectorized
x86 assembly -- better than MD5 on certain platforms, and its
designers have been actively pushing to encourage its adoption.",<20151010153925.ADC1B607C1@jupiter.mumble.net>,campbell+cfrg@mumble.net,0.0,0,35,2015-10-10 15:40:36
842,MMusic,1,40,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
843,MMusic,1,41,InformationProviding,,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-30.txt
Pages           : 301
Date            : 2012-07-16",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
844,MMusic,1,42,InformationProviding,,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
845,MMusic,1,43,InformationProviding,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
846,MMusic,1,44,InformationProviding,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
847,MMusic,1,45,InformationProviding,,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-30",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
848,MMusic,1,46,InformationProviding,,-1,"
A diff from previous version is available at:
http://tools.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-30",<20120716195132.1662.16487.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-07-16 12:51:32
849,MMusic,1,49,Social,,-1,"Hi there,",<50047266.1090807@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-07-16 21:58:30
850,MMusic,1,123,InformationProviding,,-1,"
This updated version of draft-ietf-mmusic-rfc2326bis-30.txt addresses
the comments of the WGLC.",<50047266.1090807@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-07-16 21:58:30
851,MMusic,2,28,"InformationProviding,ContextSetting,StateDecision",,-1,"The IETF79 MMUSIC agenda has been posted. Since it is short, it is
repeated here.",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
852,MMusic,2,29,ExtensionOfPrevious,,-1,"
MMUSIC IETF79 Agenda",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
853,MMusic,2,30,InformationProviding,,-1,"
Wednesday 1510-1610 Emerald Room
Flemming Andreason and Tom Taylor, Co-Chairs",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
854,MMusic,2,31,InformationProviding,,-1,"
1510-1515 Working Group Status                        Chairs",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
855,MMusic,2,32,InformationProviding,,-1,"
1515-1525 The Session Description Protocol (SDP)      James Polk
'servclass' Attribute
draft-polk-mmusic-traffic-class-for-sdp-00.txt",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
856,MMusic,2,33,InformationProviding,,-1,"
1525-1540 TCP Candidates with Interactive             Ari Keranen
Connectivity Establishment (ICE)\
draft-ietf-mmusic-ice-tcp-09.txt",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
857,MMusic,2,34,InformationProviding,,-1,"
1540-1555 Grouping of Adjacent Media in the Session   Ali Begen
Description Protocol
draft-jennings-mmusic-adjacent-grouping-01.txt",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
858,MMusic,2,35,InformationProviding,,-1,"
1555-1610 Real Time Streaming Protocol 2.0 (RTSP)     Magnus Westerlund
draft-ietf-mmusic-rfc2326bis-24.txt             Martin Stiemerling",<BLU0-SMTP86CB915EC7FA853E434096D85D0@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-10-20 23:18:06
859,MMusic,4,0,Social,,-1,"Hi Mark,",<3EB920F7.6010407@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-05-07 17:06:31
860,MMusic,4,104,"InformationProviding,Disagreement",,-1,"
They may be products out there that claim that they verify RTSP
compliance. However the real picture in regards to RTSP is that the
specification is not clear enough to result in fully interoperable RTSP
implementations. Basic interoperability has been achieved for basic
playback functionality. However a number of features or behavior that
are rather centric to RTSP has been implemented differently by different
vendors. This is the reason that in my opinion no one can currently
develop a tool that test compliance.",<3EB920F7.6010407@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-05-07 17:06:31
861,MMusic,4,105,"InformationProviding,ProposeAction",,-1,"
Due to this differences we in this WG are currently working on updating
the RTSP specification to something that will be possible to implement
in an interoperable way. The latest version of the draft is
""draft-ietf-mmusic-rfc2326bis-03.txt"". This draft does not yet cover all
the known issues. A list of bugs can be found at
http://rtspspec.sourceforge.net. We also have teleconferences where we
discuss issues and resolutions. A list of the minutes of meeting for
these, see http://rtsp.org. I would recommend that you look at the
changes list in the draft, the bugs and their resolutions, and what we
discussed in the telecons to discover which changes we propose and areas
where there has been unclearities regarding RTSP. I would also encourage
you to write to this mailing list any question you have regarding RTSP
issues. You are also welcome to join the RTSP telecons if you have input
on anything on the agenda.",<3EB920F7.6010407@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-05-07 17:06:31
862,MMusic,5,0,Social,,-1,Dear RTSP Authors:,<72263E8E8622D611975C0002B32C19D84A6F18@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2002-02-28 10:48:43
863,MMusic,5,74,InformationProviding,,-1,"
In this rfc2326bis draft, it appears TEARDOWN from S->C is not allowed (no
change
from RFC2326).",<72263E8E8622D611975C0002B32C19D84A6F18@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2002-02-28 10:48:43
864,MMusic,5,75,Question,,-1,"
Is it a mistake or by intention?",<72263E8E8622D611975C0002B32C19D84A6F18@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2002-02-28 10:48:43
865,MMusic,6,0,Social,,-1,"Hi,",<4030D1E0.9090104@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-16 15:21:20
866,MMusic,6,41,"InformationProviding,ProposeAction,StateDecision",,-1,"
A few minutes ago we submitted version 6 of the updated RTSP
specificaiton. Using the last minutes as usual. There are a significiant
amount of changes in this version. At the same time it also resolves a
lot of the issues. Now the amount of open issues not addressed at all
are rahter few. Therefore I would now recommend people to start reading
it. I know it is a thick bastard, however we are in need of review.",<4030D1E0.9090104@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-16 15:21:20
867,MMusic,6,42,"InformationProviding,ContextSetting",,-1,"
Until it is available from the IETF it can be fetched here:
Text Version:
http://standards.ericsson.net/westerlund/draft-ietf-mmusic-rfc2326bis-06.txt",<4030D1E0.9090104@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-16 15:21:20
868,MMusic,6,43,"InformationProviding,ExtensionOfPrevious",,-1,"
PDF Version:
http://standards.ericsson.net/westerlund/draft-ietf-mmusic-rfc2326bis-06.pdf",<4030D1E0.9090104@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-16 15:21:20
869,MMusic,6,44,"InformationProviding,StateDecision",,-1,"
I plan to have both a WG presentation and have an offline meeting to
discuss the remaining issues. I will try to get out a agenda for the
offline meeting before the meeting starts.",<4030D1E0.9090104@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-16 15:21:20
870,MMusic,7,0,Social,,-1,"Hi,",<4c0cba3e.014fd80a.6ccf.7970@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:19:54
871,MMusic,7,9,"InformationProviding,ProposeAction",,-1,"
Section C.1.4 and C.1.5 recommend using MIKEY for key exchange. I think that
since we now have DTLS-SRTP in RFC 5764 we should look at recommending this
option.",<4c0cba3e.014fd80a.6ccf.7970@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:19:54
872,MMusic,7,60,"InformationProviding,Agreement,ProposeAction",9,9,"
Hi Roni,

This questions doesn't seem to have been answered nor commented by anyone.

I think you actually have found an issue here. First of all that without
a mandated to implement keying mechanism this is actually
underspecified. The second a discussion on what keying mechanism to use.

To resolve this I will suggest that we change RECOMMEND to MUST in
section C.14 and C.1.5 on using MIKEY with these protocol identifiers.
That way we do get a fully specified security mechanism. The only thing
I need to consider is if MIKEY and SRTP has at least one mandatory to
implement mode each so that no further about which sets of mechanism
must be supported.

I would agree that DTLS-SRTP is a good idea for transport layer security
if needed for RTP media streams in RTSP. However, this needs
specification work and some considerations. I would also like to point
out that this do require a bit of special muxing which should be
expressed in the protocol string, just like in the SDP case also in
RTSP. Thus I think using another profile, lower transport combination
than for SRTP directly on UDP is warranted for DTLS-SRTP. As this
require job, I think anyone interested in this should define this
separately so that we can finish the core RTSP 2.0 spec.

I don't know if the interest is so big for transport level protection,
although I think we shall provide a solution. The reason is that at
least content protection is usually in place. Thus the need is primarily
for integrity and authentication between server and client.
",<4CA0B04C.30100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-09-27 16:55:08
873,MMusic,7,166,Social,,-1,"Hi Dan,",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
874,MMusic,7,294,"InformationProviding,Agreement,ProposeAction,Thanking",60,-1,"
Thanks for your comment. I agree that using MIKEY is not the greatest
fit for this and do require a certain amount of specification work that
currently is missing. I am starting to lean in the direction that
defining DTLS-SRTP for this might be actually easier. What I see needed
to be specified are:",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
875,MMusic,7,295,"InformationProviding,ExtensionOfPrevious",,-1,"
- Use DTLS-SRTP when having negotiated that transport identifier.",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
876,MMusic,7,296,"InformationProviding,ProposeAction",,-1,"
- Include a DER fingerprint of the certificates that is going to be used
in the handshake, likely self signed on the client side in the transport
spec. In line with the SDP TLS fingerprint in RFC 4572",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
877,MMusic,7,297,"InformationProviding,ProposeAction",,-1,"
- Require that one support all 4 DTLS SRTP protection profile present in
RFC 5764. In other words SHA-1 80 or 32 bits integrity and AES 128 CM if
encryption is used.",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
878,MMusic,7,298,"InformationProviding,ProposeAction",,-1,"
- Recommend that for media that are already confidentiality protected
use only authentication and integrity protection.",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
879,MMusic,7,299,Question,,-1,"
Other comments on this?",<4CAC8D38.4040509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-06 16:52:40
880,MMusic,7,302,Social,,-1,"Hi,",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
881,MMusic,7,498,"InformationProviding,StateDecision",,-1,"
I was planning on doing DTLS-SRTP key management but I realized that it
would take to much time and I was still uncertain that I would get it
correct. Thus I did do what I could get local support with. A solution
using MIKEY. It is defined as the default for SAVP and SAVPF profiles.
But there is room to define alternatives.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
882,MMusic,7,499,InformationProviding,,-1,"
Also I do expect DTLS to get a different transport spec identifier that
include dtls due to the multiplexing in the transport port. So that
should easily be separated.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
883,MMusic,7,500,"InformationProviding,ContextSetting",,-1,"
Please see below for the suggested text in the different sections:",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
884,MMusic,7,501,InformationProviding,,-1,"
15.4.31. 466 Key Management Error",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
885,MMusic,7,502,InformationProviding,,-1,"
This indicates that there has been an error in a Key Management
function used in conjunction with a request. For example usage of
MIKEY according to Appendix C.1.4.1 may result in this error.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
886,MMusic,7,503,InformationProviding,,-1,"
16.52 Transports",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
887,MMusic,7,504,InformationProviding,,-1,"
MIKEY:  This parameter is used in conjunction with transport
specifications that can utilize MIKEY for security context
establishment.  So far only the SRTP based RTP profiles SAVP
and SAVPF can utilize MIKEY and this is defined in
Appendix C.1.4.1.  This parameter can be included both in
request and response messages.  The binary MIKEY message SHALL
be BASE64 [RFC4648] encoded before being included in the value
part of the parameter.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
888,MMusic,7,505,InformationProviding,,-1,"
20.2.3:",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
889,MMusic,7,506,InformationProviding,,-1,"
trns-parameter      = (SEMI ( ""unicast"" / ""multicast"" ))
/ (SEMI ""interleaved"" EQUAL channel [ ""-"" channel ])
/ (SEMI ""ttl"" EQUAL ttl)
/ (SEMI ""layers"" EQUAL 1*DIGIT)
/ (SEMI ""ssrc"" EQUAL ssrc *(SLASH ssrc))
/ (SEMI ""mode"" EQUAL mode-spec)
/ (SEMI ""dest_addr"" EQUAL addr-list)
/ (SEMI ""src_addr"" EQUAL addr-list)
/ (SEMI ""setup"" EQUAL contrans-setup)
/ (SEMI ""connection"" EQUAL contrans-con)
/ (SEMI ""RTCP-mux"")
/ (SEMI ""MIKEY"" EQUAL MIKEY-Value)
/ (SEMI trn-param-ext)",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
890,MMusic,7,507,InformationProviding,,-1,"
MIKEY-Value         = base64",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
891,MMusic,7,508,InformationProviding,,-1,"
C.1.4.  SAVP/UDP",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
892,MMusic,7,509,"InformationProviding,ProposeAction",,-1,"
The RTP profile ""The Secure Real-time Transport Protocol (SRTP)""
[RFC3711] is an RTP profile (SAVP) that MAY be used in RTSP sessions
using RTP.  All that is defined for AVP MUST also apply for SAVP.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
893,MMusic,7,510,InformationProviding,,-1,"
The usage of SRTP requires that a security context is established.
The default key-management unless otherwise signalled shall be MIKEY
in RSA-R mode as defined in Appendix C.1.4.1, and not according to
the procedure defined in ""Key Management Extensions for Session
Description Protocol (SDP) and Real Time Streaming Protocol (RTSP)""
[RFC4567].  The reason is that RFC 4567 sends the initial MIKEY
message in SDP, thus both requiring the usage of the DESCRIBE method
and forcing the server to keep state for client performing DESCRIBE
in anticipation that they might require key management.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
894,MMusic,7,511,InformationProviding,,-1,"
MIKEY is selected as default method for establishing security
association within an RTSP session as it can be embedded in the RTSP
messages, while still ensuring confidentiality of content of the
keying material, even when using hop-by-hop TLS security for the RTSP
messages.  This method does also support pipelining of the RTSP
messages.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
895,MMusic,7,512,InformationProviding,,-1,"
C.1.4.1.  MIKEY Key Establishment",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
896,MMusic,7,513,"InformationProviding,ProposeAction",,-1,"
This method for using MIKEY to establish the security context for
SRTP is initiated in the client's SETUP request, and the servers
response to the SETUP carries the MIKEY response.  Thus ensuring that
the Security context establishment happens simultaneously with the
establishment of the media stream being protected.  By using MIKEY's
RSA-R mode [RFC4738] the client can be initiator and still allow the
server to set the parameters in accordance with the actual media
stream.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
897,MMusic,7,514,InformationProviding,,-1,"
The Security Context Establishment is done according to the following
process:",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
898,MMusic,7,515,InformationProviding,,-1,"
1.   The client determines that SAVP or SAVPF shall be used from
media description format, e.g.  SDP.  If no other key management
method is explicitly signalled, then MIKEY SHALL be used as
defined here in.  This specification does not specify an
explicit method for indicating this security context
establishment method, but future specifications may.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
899,MMusic,7,516,InformationProviding,,-1,"
2.   The client SHALL establish a TLS connection for RTSP messages,
directly or hop by hop with the server.  If hop-by-hop TLS
security is used, the User method SHALL be indicated in the
Accept-Credentials header.  We do note that using hop-by-hop
does allow the proxy to insert itself as a man in the middle
also in the MIKEY exchange by providing one of its certificates,
rather than the server's in the Connection-Credentials header.
The client shall therefore validate the server certificate.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
900,MMusic,7,517,InformationProviding,,-1,"
3.   The client retrieves the servers certificate from a direct TLS
connection, or if hop by hop from Connection-Credentials header.
The client then checks that the server certificate is valid and
belongs to server.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
901,MMusic,7,518,InformationProviding,,-1,"
4.   The client forms the MIKEY Initiator message using RSA-R mode in
unicast mode as specified in [RFC4738].  The client SHOULD use
the same certificate for TLS and in MIKEY to enable server to
bind the two together.  The client's certificate SHALL be
included in the MIKEY message.  The client SHALL indicate its
SRTP capabilities in the message.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
902,MMusic,7,519,InformationProviding,,-1,"
5.   The MIKEY message from the previous step is base64 [RFC4648]
encoded and becomes the value of the MIKEY parameter that are
included in the transport specification(s) that specifies a SRTP
based profile (SAVP, SAVPF) in the SETUP request.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
903,MMusic,7,520,"InformationProviding,ProposeAction",,-1,"
6.   Any proxy encountering the MIKEY parameter SHALL forward it
without modification.  A proxy requiring to understand transport
specificaation which doesn't support SAVP/SAVPF with MIKEY will
discard the whole transport specification.  Most types of proxy
can easily support SAVP and SAVPF with MIKEY.  If possible
bypassing the proxy should be tried.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
904,MMusic,7,521,InformationProviding,,-1,"
7.   The server upon receiving the SETUP request, while need to
decide upon the transport specification to use, if multiple are
included by the client.  In the determination of which transport
specifications that are supported and preferred, the server
should decode the MIKEY message to take the embedded SRTP
parameters into account.  If all transport specs require SRTP
but no MIKEY parameter or other supported keying method is
included, the server shall respond with 403.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
905,MMusic,7,522,"InformationProviding,ContextSetting",,-1,"
8.   Upon generating a response the following outcomes can occur:",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
906,MMusic,7,523,"InformationProviding,ExtensionOfPrevious",,-1,"
*  A transport spec not using SRTP and MIKEY is selected.  Thus
the answer will not contain any MIKEY parameter.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
907,MMusic,7,524,InformationProviding,,-1,"
*  A transport spec using SRTP and MIKEY is selected but an
error is encountered in the MIKEY processing.  In that case
an RTSP error response code of 466 ""Key Management Error""
SHALL be used.  A MIKEY message describing the error MAY be
included.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
908,MMusic,7,525,InformationProviding,,-1,"
*  A transport spec using SRTP and MIKEY is selected and a MIKEY
response message can be created.  The server SHOULD use the
same certificate for TLS and in MIKEY to enable client to
bind the two together.  If a different certificate is used it
SHALL be included in the MIKEY message.  It is RECOMMENDED
that the envelope key cache type is set to 'Cache' and that a
single envelope key is reused for all MIKEY messages to the
client.  That message is included in the MIKEY parameter part
of the single selected transport specification in the SETUP
response.  The server will set the SRTP parameters as
preferred for this media stream within the supported range by
the client.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
909,MMusic,7,526,InformationProviding,,-1,"
9.   The server transmits the SETUP response back to the client.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
910,MMusic,7,527,InformationProviding,,-1,"
10.  The client receives the SETUP response and if the response code
indicates a successful request it decodes the MIKEY message and
establish the security context from the parameters in the MIKEY
response.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
911,MMusic,7,528,InformationProviding,,-1,"
In the above method the client's certificate may be self-signed in
cases where the client's identify is not necessary to establish and
the security goal is only to ensure that the RTSP signalling client
is the same as the one receiving the SRTP security context.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
912,MMusic,7,529,InformationProviding,,-1,"
C.1.5.  SAVPF/UDP",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
913,MMusic,7,530,InformationProviding,,-1,"
The RTP profile ""Extended Secure RTP Profile for RTCP-based Feedback
(RTP/SAVPF)"" [RFC5124] is an RTP profile (SAVPF) that MAY be used in
RTSP sessions using RTP.  All that is defined for AVP MUST also apply
for SAVPF.",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
914,MMusic,7,531,InformationProviding,,-1,"
The usage of SRTP requires that a security association is
established.  The RECOMMENDED mechanism for establishing that
security association is to use MIKEY[RFC3830] with RTSP as defined in
RFC 4567 [RFC4567].",<4CC1B1F7.8000101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:47:03
915,MMusic,7,534,Social,,-1,"Hi,",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
916,MMusic,7,762,"InformationProviding,ProposeAction",,-1,"
There was a bit of an error in the C.1.5 part which should read:",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
917,MMusic,7,763,InformationProviding,,-1,"
C.1.5.  SAVPF/UDP",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
918,MMusic,7,764,InformationProviding,,-1,"
The RTP profile ""Extended Secure RTP Profile for RTCP-based Feedback
(RTP/SAVPF)"" [RFC5124] is an RTP profile (SAVPF) that MAY be used in
RTSP sessions using RTP.  All that is defined for AVP MUST also apply
for SAVPF.",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
919,MMusic,7,765,InformationProviding,,-1,"
The usage of SRTP requires that a security association is
established.  The default mechanism for establishing that security
association is to use MIKEY[RFC3830] with RTSP as defined
Appendix C.1.4.1.",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
920,MMusic,7,766,InformationProviding,,-1,"
I also included a paragraph in C.2.2:",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
921,MMusic,7,767,InformationProviding,,-1,"
The usage of SRTP, i.e. either SAVP or SAVPF profiles requires that a
security association is established.  The default mechanism for
establishing that security association is to use MIKEY[RFC3830] with
RTSP as defined Appendix C.1.4.1.",<4CC1B493.2060800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-10-22 17:58:11
922,MMusic,7,770,"Agreement,NeutralResponse,Thanking",531,-1,"Thank you, this works for me.",<03c301cb74a9$6cd451a0$467cf4e0$@com>,dwing@cisco.com,0.0,0,0,2010-10-25 18:02:13
923,MMusic,7,1005,"InformationProviding,StateDecision",,-1,"
I will send you some nits off-list.",<03c301cb74a9$6cd451a0$467cf4e0$@com>,dwing@cisco.com,0.0,0,0,2010-10-25 18:02:13
924,MMusic,7,1006,InformationProviding,,-1,"
-d",<03c301cb74a9$6cd451a0$467cf4e0$@com>,dwing@cisco.com,0.0,0,0,2010-10-25 18:02:13
925,MMusic,9,0,Social,,-1,"Dear experts,",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
926,MMusic,9,41,"InformationProviding,ProposeAction",,-1,"
I am planning a sytems which had a great delay problem, so I want to
reduce the set of RTSP commands needed to establish a connection.
The system sends multicast video but only if there at least one
subscriber.",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
927,MMusic,9,42,"InformationProviding,StateDecision",,-1,"
My approach is to use the DESCRIBE and TEARDOWN  commands only.",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
928,MMusic,9,43,"InformationProviding,ExtensionOfPrevious",,-1,"
On the first DESCRIBE, the server will initate a multicast session and
return its connection details to the client (in SDP format).
Any other DESCRIBE will receive the same sdp. All DESCRIBE commands
increment an internal counter by 1.",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
929,MMusic,9,44,InformationProviding,,-1,"
Client who wish to disconnect sends TEARDOWN. It will decrement the
counter by 1. If the counter is 0 the multicast will be stoppped.",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
930,MMusic,9,45,InformationProviding,,-1,"
All other commands (SETUP,PLAY) will be supported as no-op for interop.",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
931,MMusic,9,46,Question,,-1,"
Is that possible by the standard point of view? Is such approach will be
supported by standard clients (QuickTime, VLC etc...)",<EB34B5A39CF26E408490ED9279BF10A70EB428@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-30 18:02:33
932,MMusic,9,71,Answer,46,46,"
Not that I know.
",<200807301810.49115.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-07-30 18:10:48
933,MMusic,9,73,"Question,InformationProviding",46,46,"
VLC supports the (from Amino? IIRC) x-playNow SETUP undocumented proprietary
extension on the server-side, but I would not recommend it. Besides, VLC does
not reference count multicast RTSP (it streams all the time, even if there's
no client).
",<200807301810.49115.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-07-30 18:10:48
934,MMusic,9,133,InformationProviding,,-1,"Let me be more clear.
I am developing the server side, and I want to be able to work with standard clients.",<EB34B5A39CF26E408490ED9279BF10A70EB42A@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 07:58:09
935,MMusic,9,134,InformationProviding,,-1,"
In RFC2326 Appenix A, it is mentioned that on multicast session an explicit SETUP is not required.
For my understanding in that case PLAY is also not required since after the DESCRIBE reply the client got all it needs, and the clients don't actually control the stream.",<EB34B5A39CF26E408490ED9279BF10A70EB42A@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 07:58:09
936,MMusic,9,135,"InformationProviding,UnderstandingNegative,StateDecision",,-1,"
All I am adding in my server side is to count PLAY/TEARDOWN commands to maintain a listener counter.
I don't understand why this approach may not apply to the RFC2326 requirements.",<EB34B5A39CF26E408490ED9279BF10A70EB42A@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 07:58:09
937,MMusic,9,176,"InformationProviding,NeutralResponse",135,135,"
Ahaa, that made things much clearer. You simply are using RTSP as media
configuration deliver mechanism, like SAP or HTTP could do.

There is no support in RTSP today for your usage. The problem with RTSP
in this use cases is that the SETUP and play/pause and teardown doesn't
affect the media delivery. That makes it not clear cut that RTSP is the
most appropriate mechanism for simply saying, I am joining, I am
leaving. I have not thought about how appropriate there would be to add
something like this as an extension.
",<4891B8D6.2090001@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-07-31 14:06:30
938,MMusic,9,179,Social,,-1,Hello!,<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
939,MMusic,9,298,"InformationProviding,ProposeAction",41,-1,"
In my opinion, the use case can be covered with RTSP - if you look at the
things a slightly different way (Please correct me if my view is wrong ;)",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
940,MMusic,9,299,"InformationProviding,ExtensionOfPrevious,ContextSetting",,-1,"
First I'll summarize what I understood from the requirements:
A server has a multicast stream that is available to anyone, all the time
(the server is always in the state Playing). To save resources, the actual
stream is sent only after the first client registers for it and stopped after
the last one left.",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
941,MMusic,9,300,"Question,InformationProviding,ProposeAction",,-1,"
I'd have the DESCRIBE method not change the servers client count - it's
simply the question 'What do you have?'.
Instead, the client count is a sort of state at the server, and I'd have this
state changed with a SETUP/TEARDOWN pair per client. When using timeouts with
the established session, the TEARDOWN can be omitted. The Transport header in
the SETUP would simply state ""RTP/AVP;multicast"" - all other parameters
default to those from SDP.",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
942,MMusic,9,301,InformationProviding,,-1,"
Admittedly, there is a difference to the RFC in the sense that after the
session has been 'created', it is already in the state Playing.",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
943,MMusic,9,302,"InformationProviding,ProposeAction",,-1,"
Thinking a bit further I'll take a different approach: There is already one
RTSP 'session' - the one that the server created by itself (since it is
always in the state Playing). I'd then go ahead and require the clients to
keep this only one session alive (identifier is taken from SDP). The amount
of hosts that is keeping this session alive is the amount of listeners. When
the server is the only one, it stops streaming.
Still, this requires some handiwork on the client, but it looks like to be
covered by RTSP...",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
944,MMusic,9,303,InformationProviding,,-1,"
So far for my first post on this list :)",<70FB7A734037F44399441D45A72DE90D0303D9BC@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-07-31 15:54:05
945,MMusic,9,451,"InformationProviding,Disagreement,Thanking",,-1,"Thank you for your detaild answers, but I think you missed the point.

I am using RTSP as media configuration delivery mechanism, as Magnus wrote, since I want to be able to use standard clients (QuickTime, VLC)
I want than no changes should be done at the client side (otherwise I would developed a full proprietary protocol).

My goal is that a standard client will be able to communicate with my server and receive configuration as it would do with any other RTSP based media server.",<EB34B5A39CF26E408490ED9279BF10A70EB437@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 21:05:49
946,MMusic,9,452,Thanking,,-1,"
Thank you again.
Amit.
",<EB34B5A39CF26E408490ED9279BF10A70EB437@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 21:05:49
947,MMusic,9,454,"Question,InformationProviding,ProposeAction",,-1,"
Hello!

In my opinion, the use case can be covered with RTSP - if you look at the
things a slightly different way (Please correct me if my view is wrong ;)

First I'll summarize what I understood from the requirements:
A server has a multicast stream that is available to anyone, all the time
(the server is always in the state Playing). To save resources, the actual
stream is sent only after the first client registers for it and stopped after
the last one left.

I'd have the DESCRIBE method not change the servers client count - it's
simply the question 'What do you have?'.
Instead, the client count is a sort of state at the server, and I'd have this
state changed with a SETUP/TEARDOWN pair per client. When using timeouts with
the established session, the TEARDOWN can be omitted. The Transport header in
the SETUP would simply state ""RTP/AVP;multicast"" - all other parameters
default to those from SDP.

Admittedly, there is a difference to the RFC in the sense that after the
session has been 'created', it is already in the state Playing.

Thinking a bit further I'll take a different approach: There is already one
RTSP 'session' - the one that the server created by itself (since it is
always in the state Playing). I'd then go ahead and require the clients to
keep this only one session alive (identifier is taken from SDP). The amount
of hosts that is keeping this session alive is the amount of listeners. When
the server is the only one, it stops streaming.
Still, this requires some handiwork on the client, but it looks like to be
covered by RTSP...
",<EB34B5A39CF26E408490ED9279BF10A70EB437@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 21:05:49
948,MMusic,9,455,InformationProviding,,-1,"
So far for my first post on this list :)",<EB34B5A39CF26E408490ED9279BF10A70EB437@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-07-31 21:05:49
949,MMusic,9,507,"InformationProviding,Disagreement,ProposeAction",452,452,"
The problem with your approach is that Describe is stateless. Only SETUP
creates RTSP sessions. Then there is the question of keep-alive.
Everything in RTSP is built around the RTSP session concept. Thus unless
one creates an RTSP session Teardown doesn't have any context to operate on.

Secondary, the problem with standard RTSP is that the meaning of RTSP
SETUP with Transport header specifying a destination of a multicast
group is ambiguous. As I see there are two alternative semantics:

1. Please setup media delivery to this provided multicast group. Thus
RTSP is the multicast group owners way of controlling media being
delivered to the media delivery channel.

2. Bind a client to a pre-existing multicast delivery channel to allow
for extended unicast signalling around the provided media. Where the
RTSP client gets a state but many operation are not allowed due to
restricted permissions for a regular client.

I think it would be good to figure this out in the context of RTSP 2.0.
",<4896FC94.2050704@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-08-04 14:56:52
950,MMusic,9,510,InformationProviding,,-1,"Magnus,",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
951,MMusic,9,603,"InformationProviding,Agreement",,-1,"
I agree with the ambiguity that SETUP method should cause in multicast scenarios.
This is exactly the case described in RFC2326 Appendix A (section A.1 and A.2) come to resolve:",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
952,MMusic,9,604,"InformationProviding,ContextSetting",,-1,"
About client state (A.1 pg. 76):
""If no explicit SETUP is required for the object (for example, it is available via a multicast group),
state begins at Ready. In this case, there are only two states, Ready and Playing. The client also
changes state from Playing/Recording to Ready when the end of the requested range is reached.""",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
953,MMusic,9,605,InformationProviding,,-1,"
About server state (A.2 pg. 78):
""If no explicit SETUP is required for the object, the state starts at
Ready and there are only two states, Ready and Playing.",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
954,MMusic,9,606,InformationProviding,,-1,"
Which means that session may be created by the server witout explicit SETUP command, (maybe by some internal configuration).",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
955,MMusic,9,607,Question,,-1,"
Do you agree?",<EB34B5A39CF26E408490ED9279BF10A70EB456@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 16:16:24
956,MMusic,9,680,"Question,Answer,ProposeAction",607,607,"
I would say that this is just an example of one more case of RFC 2326
brokenness. Yes, re-reading the text that exist around session IDs
indicate that the RTSP session could be generated in other ways than
using SETUP. However, how this is accomplished or how one actually can
use that state isn't specified. There is one hint that dynamic RTSP URIs
could be used to indicate a specific session. But, nothing is specified
that makes this implementable. Open issues that I directly see are:

- How to go from a URI to a session ID header?

- In which methods that one can use this and how the operations affect
the state machine?

- What happens to the session identified when one does Teardown?

I would also like to point out that using the same session ID for
multiple clients are not allowed according to this text in section 12.37:

Note that a session identifier identifies a RTSP session across
transport sessions or connections. Control messages for more than one
RTSP URL may be sent within a single RTSP session. Hence, it is
possible that clients use the same session for controlling many
streams constituting a presentation, as long as all the streams come
from the same server. (See example in Section 14). However, multiple
""user"" sessions for the same URL from the same client MUST use
different session identifiers.

So I would still say that there only exist an embryo to potential
solutions for what you want to do. And if you expect RTSP 1.0 clients to
do something like this then I wouldn't expect interoperability. I would
be surprised if any has the functionality.

As I see it the right way forward would be to discuss this in the
context of changes and extensions to RTSP 2.0 that would allow what you
want to be worked into a coherent behavior.
",<48971630.1040102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-08-04 16:46:08
957,MMusic,9,755,"InformationProviding,UnderstandingNegative",,-1,"Hello!

I have to point out one paragraph since it puzzles me a bit - if not even
throws over my view of RTSP so far :)
",<70FB7A734037F44399441D45A72DE90D030A0A45@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-08-04 17:10:05
958,MMusic,9,757,"InformationProviding,Answer",680,680,"
I'd have read this paragraph (and others) that controlling one stream from
several different clients is indeed possible - especially with the first
sentence.;
For example, in RFC 2326, 1.1 'Invitation of a media server to a conference':
""... Several parties in the conference may take turns 'pushing the remote
control buttons' "".
So far I have interpreted RTSP to be a control mechanism that allows sharing
of the controls [for shared resources, such as multicast streams, where this
makes sense].
How the session identifier is distributed was out of the scope, but that I'd
have SDP considered for.

I interpreted the last sentence of your quoted paragraph with respect to
multiple dedicated streams. When starting a RealPlayer twice for example on
the same host, requesting the same file will generate two streams (two
sessions).

This was the base of my second idea for our use case to have all clients keep
alive the one session the server controls; and the session identifier I'd
have taken from SDP (for example the 's' field).
",<70FB7A734037F44399441D45A72DE90D030A0A45@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2008-08-04 17:10:05
959,MMusic,9,835,"InformationProviding,NeutralResponse,ProposeAction",757,757,"
Well, then this is one more example of the inconsistencies of RFC 2326.

Having multiple client instances control the same session may be of
interest, but it is not a thought through solution as one needs to
ensure consistent handling of the RTSP state and provide a working
security model for this. Something that I would claim is not in place in
either RFC 2326 or in the RTSP 2.0 draft.

If you go read RTSP 2.0 it says in section 3.4 (version 18):

If one has an established conference or group session, it is possible
to have an RTSP server distribute media to the whole group.
Transmission to the group is simplest when controlled by a single
participant or leader of the conference.  Shared control might be
possible, but would require further investigation and possibly
extensions.
",<48972236.3090203@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-08-04 17:37:26
960,MMusic,9,934,"Question,InformationProviding,ProposeAction,Thanking",,-1,"Thank you all for your comments.
Now lets consider again the following scenario:
One media server which manage multiple live streams only - all the streams are sent by multicast to the local network.
Several clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.
What is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)
All other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)
What is wrong with that? Don't forget that I control the server to do whatever I want.",<EB34B5A39CF26E408490ED9279BF10A70EB459@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-04 21:39:32
961,MMusic,9,1003,"Question,InformationProviding,ProposeAction,StateDecision",934,934,"
Clearly using RTSP to retrieve the SDP with all the details it needs are
workable. However, here we get to the issues:

A client that retrives a SDP with filled in c= lines to a multicast
address. What should they do? I don't think we have a clear standardized
behavior here. At least two alternatives exist:

1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or
one downloaded the SDP in HTTP or received it over email.

2. Use RTSP to perform SETUP on the media streams.

If one do 2 then one comes to the next question:

3. How does I separate this case A) when I simply want to indicate that
I am listing to a multicast group that I can't affect from B) where I
want to ask the server to please deliver the media to a multicast group
of my choice. To me both A) and B) are valid use cases.

4. What does it mean to perform PLAY on a multicast group where you will
receive media as soon as you perform the IGMP join?

5. Are there well defined signaling to have the client understand that
sending PAUSE will not do anything. Sure trying and failing will carry
that message, but unless the client is aware of these cases he might
think everything is broken and take error recovery actions.

The main point I like to make is that we clearly can support some use
cases around multicast with RTSP. However, it needs to be written up in
such a way that clients and servers are interoperable. I also think it
will need to be motivated correctly because otherwise client implementor
will not understand why they should care for a case where the client use
SETUP as way of registering its listing to the multicast group.

If you can contribute this in draft specification text to RTSP 2.0 we
clearly can have the WG consider to add it. I personally would like to
see it written up. But I have enough to work on the RTSP 2.0 core that I
don't going to branch out to cover this.
",<48981CBB.5010400@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-08-05 11:26:19
962,MMusic,9,1096,"InformationProviding,Agreement,ProposeAction",1003,178,"
I think that this is exactly the difference bewteen the two options you
mentioned in Q3.

When the multicast is controlled by the server/other client, a DESCRIBE
is enough for the client to get all
The connection details and join the multicast. Since the stream is not
controlled by him, it is obviuos that control methods like:
SETUP,PAUSE, TEARDOWN are not needed and should be ignored by the
server.
However if the client want to setup a NEW multicast stream, then he must
use the SETUP method, since this is the only command to set a new
stream.
I think it should be obvious that in muticast scenarios only the
master/creator of the stream can control it.
I agree there is a lack of special method to tell the server that a new
listener has joined. Which is exactly my problem.
Maybe PLAY without SETUP can be a solution....

BTW,I will honored to help with the RTSP 2.0.
",<EB34B5A39CF26E408490ED9279BF10A70EB462@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-06 11:06:58
963,MMusic,9,1097,"InformationProviding,ContextSetting",,178,"
The information in this e-mail transmission contains proprietary and business
sensitive information.  Unauthorized interception of this e-mail may constitute
a violation of law. If you are not the intended recipient, you are hereby
notified that any review, dissemination, distribution or duplication of this
communication is strictly prohibited. You are also asked to contact the sender
by reply email and immediately destroy all copies of the original message.
mmusic mailing list
mmusic@ietf.org
https://www.ietf.org/mailman/listinfo/mmusic",<EB34B5A39CF26E408490ED9279BF10A70EB462@mailesl5.esl.corp.elbit.co.il>,amit.yedidia@elbitsystems.com,0.0,0,32,2008-08-06 11:06:58
964,MMusic,9,1174,"InformationProviding,Answer,ProposeAction",1003,1003,"
Yes.  Note, BTW, that case A) is what is already described as an
example in section 14.4 of RFC 2326 (RTSP 1.0); it's also the
""Multicast, server chooses address"" option described in section 1.6.
So there's really nothing weird or unusual about this.  Several
existing clients (including VLC and QuickTime Player) support this,
and have done so for years.  It continues to baffle me that so many
people think that RTSP is used only for playing unicast streams, when
there both documentation and widespread use to the contrary.

As for how to do case B), once again RTSP 2326 gives an answer - in
section 12.39, where - in the description of the ""destination""
parameter, it says:
""The client may specify the multicast address with the
destination parameter.""
I.e., a client could specify its chosen multicast address using the
""destination"" parameter in the ""Transport:"" header in the RTSP
""SETUP"" request.  However, I don't know of any clients that support
this, and there are probably few (if any) servers that support it,
because of the potential for denial-of-service attacks (an issue
which is also described in section 12.39).
",<f06240803c4c979a73a24@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2008-08-13 23:20:00
965,MMusic,9,1176,"InformationProviding,Answer",1003,1003,"
In this case the ""PLAY"" operation is really just a no-op (although
the client might still find some information in the ""PLAY"" response
useful - e.g., the ""Range:"" header could be used to indicate the
stream's duration, in case such information was not already present
in the SDP description (a ""t=..."" line)).
",<f06240803c4c979a73a24@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2008-08-13 23:20:00
966,MMusic,9,1178,"InformationProviding,Answer",1003,1003,"
Yes, we clearly can, and in fact already do :-)
",<f06240803c4c979a73a24@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2008-08-13 23:20:00
967,MMusic,9,1180,"InformationProviding,Answer,Agreement",1003,1003,"
Yes, I agree.
",<f06240803c4c979a73a24@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2008-08-13 23:20:00
968,MMusic,9,1203,"InformationProviding,ProposeAction",451,451,"
If you put a multicast address in the c= line(s) and proper (non-zero) port
numbers in the m= line(s), VLC will try to setup the media using multicast,
as normal (DESCRIBE, SETUP, PLAY...). I assume Quicktime does the same.
",<200808041604.29524.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-08-04 16:04:29
969,MMusic,9,1240,Question,1203,1203,"
In other words request that the streaming sever deliver media to the
specified multicast group?
",<48971675.2060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-08-04 16:47:17
970,MMusic,9,1277,"InformationProviding,Answer,ProposeAction",1240,1240,"
Yes. At least, that's how I recall Live555 RTSP stack works (that being the
RTSP client stack in VLC at the moment). In yet other words, the server
(configuration) decides whether and to which group to send multicast to.

In theory, I suppose RTSP client could just try to setup multicast by default,
and fallback to unicast... but that involve the client agent ""computing""
an ""appropriate"" multicast group, whatever that means. Sounds brittle :(
",<200808041802.43254.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-08-04 18:02:42
971,MMusic,9,1329,"InformationProviding,ExtensionOfPrevious",,-1,"
In RTSP 2.0 (draft-ietf-mmusic-rfc2326bis) there is the pipelined
request that allows one to send all setup and the play request in a
single sequence without waiting for any response.

This has also been defined by 3GPP for RTSP 1.0 in 3GPP TS 26.234.
",<4890B58B.3010508@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-07-30 19:40:11
972,MMusic,10,0,InformationProviding,,-1,"Folks,",<42283004.9080008@tzi.uni-bremen.de>,jo@tzi.uni-bremen.de,0.0,0,5,2005-03-04 10:53:08
973,MMusic,10,64,"InformationProviding,ContextSetting,ProposeAction",,-1,"
the tentative MMUSIC agenda is as follows (note that ICE was
added just recently and may not yet show up on the to be
published agenda at the IETF web site)",<42283004.9080008@tzi.uni-bremen.de>,jo@tzi.uni-bremen.de,0.0,0,5,2005-03-04 10:53:08
974,MMusic,10,92,"Question,InformationProviding",64,-1,"
According to the Agenda on the IETF homepage, MMUSIC is currently
scheduled for Thursday at 15.30 - 17.45, do you have any other information?
",<42283BBA.3000307@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-03-04 11:43:06
975,MMusic,11,0,Social,,-1,"Hi,",<3E704693.7010902@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-13 09:51:31
976,MMusic,11,37,"InformationProviding,ContextSetting",,-1,"
Here comes an initial version of the slides that I will use on monday.
The slides are for both the RTSP Update and the RTSP & NAT draft,
draft-ietf-mmusic-rfc2326bis-03.txt and
draft-ietf-mmusic-rtsp-nat-00.txt. The slides can be retrieved at:",<3E704693.7010902@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-13 09:51:31
977,MMusic,11,38,"InformationProviding,ExtensionOfPrevious",,-1,"
http://standards.ericsson.net/westerlund/RTSPatIETF56.pdf",<3E704693.7010902@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-13 09:51:31
978,MMusic,11,39,"InformationProviding,ProposeAction",,-1,"
Please look through them before the meeting because I will need to have
a certain tempo in the presentation and will not go into much detail. So
if you have any input into anything please raise them on the mailing
list or interrupt me during the presentation.",<3E704693.7010902@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-13 09:51:31
979,MMusic,11,40,"InformationProviding,StateDecision",,-1,"
We have also planned to have two RTSP ad-hoc meetings during the
meeting. The first is already scheduled to Sunday (16/3) at 21.00 in the
bar. The location is the hotel bar. If there are multiple ones, a
clarifying message will be sent to the list as soon as we have managed
to scout the location. We will also in that case put up a note on the
message board. We will at that meeting schedule the second one and
present the actual time at the WG meeting.",<3E704693.7010902@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-13 09:51:31
980,MMusic,14,7,"InformationProviding,ContextSetting,ProposeAction",,-1,"In Section 5 of draft-ietf-mmusic-rfc2326bis, after stating that the RTSP
character set is ISO 10646 with UTF-8 encoding, there are a couple of sentences
talking about ISO 8859-1. These sentences appear to be irrelevant, and I suggest
they be deleted. In particular, there is no point in looking for information in
RFC 3629 about ISO 8859-1. There isn't any.",<BLU0-SMTP39BDD1319A6F9C43A12ED5D8D60@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-06-08 10:36:21
981,MMusic,14,9,"InformationProviding,Agreement",7,-1,I couldn't also figure out why there is the text about  ISO 8859-.,<547F018265F92642B577B986577D671C0152C6E1@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 15:03:28
982,MMusic,14,38,"InformationProviding,Agreement,StateDecision",7,-1,"
Removing it is fine with me.",<547F018265F92642B577B986577D671C0152C6E1@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 15:03:28
983,MMusic,14,39,InformationProviding,,-1,"
martin.stiemerling@neclab.eu",<547F018265F92642B577B986577D671C0152C6E1@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 15:03:28
984,MMusic,14,40,InformationProviding,,-1,"
NEC Laboratories Europe - Network Research Division
NEC Europe Limited | Registered Office: NEC House, 1 Victoria Road, London W3 6BL | Registered in England 2832014",<547F018265F92642B577B986577D671C0152C6E1@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 15:03:28
985,MMusic,15,0,Social,,-1,Hi  Spiros:,<758B5A159B385447B4F950DE72D7D7AD678C71@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2005-02-03 09:43:21
986,MMusic,15,92,"ClarificationElicitation,InformationProviding",,-1,"
Your transport is RTP, right? Can you not use RTCP BYE to signal end-of-stream until draft-ietf-mmusic-rfc2326bis-08.txt and draft-ietf-mmusic-rtsp-announce-00.txt are ratified?",<758B5A159B385447B4F950DE72D7D7AD678C71@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2005-02-03 09:43:21
987,MMusic,15,95,"InformationProviding,Social",,-1,"Hi Thomas,",<PPEPKGOKJJGOIIEBKKOEEEGKDAAA.spis@intracom.gr>,spis@intracom.gr,0.0,0,35,2005-02-04 09:21:19
988,MMusic,15,216,"InformationProviding,Answer,Agreement,Thanking",92,-1,"
Thanks for the suggestion. I had thought about that but I am trying to cover
cases where the server is not implementing RTCP as well (oh yes, these heathens
do exist). Anyway, the four reasons you are mentioning in Appendix A of
draft-ietf-mmusic-rtsp-announce-00.txt against the use of RTCP BYE as an
end-of-stream signaling mechanism are certainly valid in general.",<PPEPKGOKJJGOIIEBKKOEEEGKDAAA.spis@intracom.gr>,spis@intracom.gr,0.0,0,35,2005-02-04 09:21:19
989,MMusic,15,217,"InformationProviding,ProposeAction,StateDecision",92,-1,"
I am oriented towards maintaining a presentation clock (npt) in the client for
detecting EOS locally in the case of RFC2326 servers. This has the added feature
of being able to display to the user the running play time, remaining time etc.
just like DVD players can. I could add support for
draft-ietf-mmusic-rtsp-announce-00.txt as it progresses in order to be forwards
compatible.",<PPEPKGOKJJGOIIEBKKOEEEGKDAAA.spis@intracom.gr>,spis@intracom.gr,0.0,0,35,2005-02-04 09:21:19
990,MMusic,15,252,InformationProviding,,-1,"Hi,
",<42033DAD.6090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-02-04 10:17:33
991,MMusic,15,254,"InformationProviding,Answer,ProposeAction",92,92,"
I would like to point out that if one sends a RTCP BYE, that means that
the SSRC sending the BYE is leaving the session. Thus you get some
semantics that is not desirable by using RTCP BYE for end of stream
notification. I know that it occurs, but in my eyes it is not a correct
behavior and should not be endorsed.

The RTCP BYE message should comes as a result of a TEARDOWN of that RTP
session. A SETUP that changes the RTP session, like new ports should
also result in RTCP BYE on the old session.
",<42033DAD.6090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-02-04 10:17:33
992,MMusic,17,32,"InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
993,MMusic,17,33,"InformationProviding,ExtensionOfPrevious",32,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-27.txt
Pages           : 296
Date            : 2011-03-09",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
994,MMusic,17,34,"InformationProviding,ExtensionOfPrevious,ContextSetting",33,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
995,MMusic,17,35,"InformationProviding,ExtensionOfPrevious",34,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
996,MMusic,17,36,"InformationProviding,ExtensionOfPrevious",35,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-27.txt",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
997,MMusic,17,37,"InformationProviding,ExtensionOfPrevious",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
998,MMusic,17,38,"InformationProviding,ExtensionOfPrevious,ContextSetting",37,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20110309123002.22817.6385.idtracker@localhost>,Internet-Drafts@ietf.org,0.0,,,2011-03-09 04:30:02
999,MMusic,17,40,Social,,-1,"Hi,",<4D7774BF.4000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-03-09 13:38:23
1000,MMusic,17,101,"InformationProviding,ContextSetting",37,-1,"
As the diff will show:
http://tools.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-27",<4D7774BF.4000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-03-09 13:38:23
1001,MMusic,17,102,"InformationProviding,ExtensionOfPrevious,ContextSetting",101,-1,"
this is a very minor update. It does two things.",<4D7774BF.4000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-03-09 13:38:23
1002,MMusic,17,103,"InformationProviding,ExtensionOfPrevious",102,-1,"
1. Fixed the bug Ross Finnlayson pointed out.",<4D7774BF.4000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-03-09 13:38:23
1003,MMusic,17,104,"InformationProviding,ExtensionOfPrevious",102,-1,"
2. Resolved some bad formating around some references.",<4D7774BF.4000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-03-09 13:38:23
1004,MMusic,18,0,"Social,Social",,-1,"Hi,",<547F018265F92642B577B986577D671C0152CB45@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-07-02 14:06:19
1005,MMusic,18,68,"InformationProviding,ContextSetting,StateDecision,InformationProviding,ContextSetting",,-1,"
The updated version of RTSP 2.0 addresses the comments received during the WGLC.
The diff to -23 will be available here:
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rfc2326bis/draft-ietf-mmusic-rfc2326bis-24-from-23.diff.html",<547F018265F92642B577B986577D671C0152CB45@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-07-02 14:06:19
1006,MMusic,18,69,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",68,-1,"
There are, to my knowledge, two open issues by now that still have to be discussed:
- 503 issues (cf. SIP) (in issue tracker)
https://sourceforge.net/tracker/?func=detail&aid=3007825&group_id=23194&atid=377744
- Content-Location in RTSP 2.0 (email Tom)
http://www.ietf.org/mail-archive/web/mmusic/current/msg08204.html",<547F018265F92642B577B986577D671C0152CB45@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-07-02 14:06:19
1007,MMusic,18,70,"InformationProviding,InformationProviding,ContextSetting",,-1,"
I will be away from my emails (starting tonight) until July 12 and back afterwards.",<547F018265F92642B577B986577D671C0152CB45@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-07-02 14:06:19
1008,MMusic,21,0,"Social,Social",,-1,"Hi,",<4418389B.7050500@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 16:54:03
1009,MMusic,21,24,"InformationSeeking,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
In the open issues list in draft-ietf-mmusic-rfc2326bis-12 there is issue:
6.   Should a IPv6 multicast scope parameter for the Transport
header be defined? This would be similar to TTL.",<4418389B.7050500@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 16:54:03
1010,MMusic,21,25,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,StateDecision",24,-1,"
However after refreshing my knowledge of the IPv6 multicast addresses in
RFC 4291 I think this is an non issue. The reason is that the address
itself contains scope specification.",<4418389B.7050500@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 16:54:03
1011,MMusic,22,200,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"I have been selected as an additional General Area Review Team (Gen-ART)
reviewer for this draft (for background on Gen-ART, please see
http://www.alvestrand.no/ietf/gen/art/gen-art-FAQ.html).",<1384898234.1937.3611.camel@mightyatom>,elwynd@dial.pipex.com,0.0,0,2,2013-11-19 21:57:14
1012,MMusic,22,201,"ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",200,-1,"
Please wait for direction from your document shepherd or AD before
posting a new version of the draft.",<1384898234.1937.3611.camel@mightyatom>,elwynd@dial.pipex.com,0.0,0,2,2013-11-19 21:57:14
1013,MMusic,22,202,"InformationProviding,InformationProviding,ExtensionOfPrevious",200,-1,"
Document: draft-ietf-mmusic-rfc2326bis-38.txt",<1384898234.1937.3611.camel@mightyatom>,elwynd@dial.pipex.com,0.0,0,2,2013-11-19 21:57:14
1014,MMusic,22,205,"Question,Thanking,Question,ContextSetting,Thanking",200,-1,Thank you for your extensive review and Magnus thank you for addressing the issues. Are you tracking the nits from below?,<B63EF02E-EBB4-4308-885F-0D1257ACB24D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2013-11-20 15:23:13
1015,MMusic,22,418,"InformationProviding,StateDecision,InformationProviding,ExtensionOfPrevious",205,-1,"
I have balloted no-obj.",<B63EF02E-EBB4-4308-885F-0D1257ACB24D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2013-11-20 15:23:13
1016,MMusic,22,659,"InformationProviding,Answer,InformationProviding,Answer,StateDecision",205,205,"
Yes, I will edit them in as part of the update taking care of the
discuss the document has gotten.

/Magnus
",<528DB5BD.1000607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 08:26:53
1017,MMusic,25,0,"Social,Social",,-1,"Hi,",<BAE6622CB43FBC40B98FC068AA0EA5F801266CED@idaexc03.emea.cpqcorp.net>,frederic.huve@hp.com,0.0,,,2005-03-11 19:37:52
1018,MMusic,25,105,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",,-1,"
Another way of looking at this with the introduction of video is to have
the UAS capable to compose a Video picture/clip from the ""Text list"" of
available movies, and then the client use DTMF or voice to select the
movie (no more problems w/ proxies as the information are exchanged in a
standard way on the data channel)... Regarding RTSP many flaws have been
identified, pls see
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-09.txt",<BAE6622CB43FBC40B98FC068AA0EA5F801266CED@idaexc03.emea.cpqcorp.net>,frederic.huve@hp.com,0.0,,,2005-03-11 19:37:52
1019,MMusic,26,0,"Social,Social",,-1,"Hi,",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1020,MMusic,26,79,"InformationProviding,ContextSetting,InformationProviding,StateDecision",,-1,"
I have submitted a new version of the RTSP 2.0 specification.",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1021,MMusic,26,80,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",79,-1,"
Available here until it becomes publicly available:
http://www.denstore.se/IETF/draft-ietf-mmusic-rfc2326bis-12.txt",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1022,MMusic,26,81,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,StateDecision",80,-1,"
The changes are many as a result of complete review by myself. Many
small details has been changed. I have also performed a larger ones.
Here is a side by side diff file between this version and the previous one:
http://www.denstore.se/IETF/rfc2326bis-diff11vs12.html",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1023,MMusic,26,82,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",81,-1,"
Larger changes:
- Removal of Range in PAUSE
- Changed URI definition and included IANA registration
- An IRI definition for RTSP
- Changed ETag definition
- Client includes Accept-Ranges in SETUP requests
- Introduction of the Proxy-Authorization header
- Accept credentials includes hash algorithm and IANA registry.
- IANA registration of range header formats.
- Minimal Implementation chapter updated.",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1024,MMusic,26,83,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting,ProposeAction",82,-1,"
It also resulted in a new open issues list. I will post separate email
about those to facilitate discussion. However it is included below:",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1025,MMusic,26,84,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",83,-1,"
1.   Procedures for establishing the TCP connections for
RTP/AVP/TCP without interleaving in Section B.2.2 needs to
be written.",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1026,MMusic,26,85,"Question,ExtensionOfPrevious,Question",83,-1,"
2.   Should the SMPTE range format be updated to support the 50
and 60 frames per second modes?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1027,MMusic,26,86,"Question,ExtensionOfPrevious,Question",83,-1,"
3.   Should we define a recommended format for error message
bodies?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1028,MMusic,26,87,"ClarificationElicitation,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",83,-1,"
4.   Today there is no recommended or required format for 300
response entities containing URI lists. Should one be
defined?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1029,MMusic,26,88,"Question,ExtensionOfPrevious,Question",83,-1,"
5.   Should the dest_addr parameter in the Transport header in
responses include the destination used by the server?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1030,MMusic,26,89,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",83,-1,"
6.   Should a IPv6 multicast scope parameter for the Transport
header be defined? This would be similar to TTL.",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1031,MMusic,26,90,"Question,ExtensionOfPrevious,Question",83,-1,"
7.   Should we remove the Accept header with application/rtsl in
Section 14.1 due to that it is not a registered media type?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1032,MMusic,26,91,"ExtensionOfPrevious,ContextSetting,Question",83,-1,"
8.   The Expires header (Section 14.22 contains the below
paragraph:",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1033,MMusic,26,92,"ExtensionOfPrevious,ContextSetting,InformationProviding",91,-1,"
Expires header field with a date value of some time in the
future on a media stream that otherwise would by default be
non- cacheable indicates that the media stream is
cacheable, unless indicated otherwise by a Cache-Control
header field (Section 14.10).",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1034,MMusic,26,93,"Question,ClarificationElicitation,ExtensionOfPrevious,Question",92,-1,"
Is there any purpose for this in RTSP, or could we remove
this statement and instead rely on the Cache-Control
header?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1035,MMusic,26,94,"Question,ExtensionOfPrevious,Question",83,-1,"
9.   Should proxies strip out the credentials for themselves
when forwarding messages with Accept-Credentials?",<440C4996.3080100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-06 15:39:18
1036,MMusic,27,40,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1037,MMusic,27,41,"InformationProviding,ExtensionOfPrevious,InformationProviding",40,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-33.txt
Pages           : 302
Date            : 2013-03-22",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1038,MMusic,27,42,"InformationProviding,ExtensionOfPrevious,InformationProviding",41,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1039,MMusic,27,43,"InformationProviding,ExtensionOfPrevious,InformationProviding",42,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1040,MMusic,27,44,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",43,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1041,MMusic,27,45,"InformationProviding,ExtensionOfPrevious,InformationProviding",44,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-33",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1042,MMusic,27,46,"InformationProviding,ExtensionOfPrevious,InformationProviding",45,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-33",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1043,MMusic,27,47,"InformationProviding,ExtensionOfPrevious,InformationProviding",46,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20130322162134.14348.58258.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:21:34
1044,MMusic,27,49,"InformationProviding,Social",,-1,"WG,",<514C8580.9050001@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:23:28
1045,MMusic,27,124,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",40,-1,"
This is a version produced by the old XML2RFC tool. No other changes
then the version number.",<514C8580.9050001@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:23:28
1046,MMusic,27,125,"InformationProviding,ExtensionOfPrevious,Social,InformationProviding,ProposeAction",124,-1,"
Please note that it becomes 17 pages longer with the old tool.",<514C8580.9050001@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:23:28
1047,MMusic,27,126,"Social,ProposeAction",,-1,"
Have a nice weekend",<514C8580.9050001@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:23:28
1048,MMusic,28,0,"ContextSetting,InformationProviding,ContextSetting",,-1,A few remarks on the changes in this draft:,<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1049,MMusic,28,48,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",0,-1,"
Section 2.2 doesn't have any major changes, but, to complement the
change to the description of ""Live"" in section 1.4, it may be useful
to add something about seekable live content, such as:",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1050,MMusic,28,49,"InformationProviding,ExtensionOfPrevious,ClarificationElicitation",48,-1,"
In some cases, the server providing live content may be saving some
or all
of the material to allow clients to pause the stream and resume it
from the paused
point, or to ""rewind"" and play continuously from a point earlier
than the live point.
Hence, this use case does not necessarily exclude playing from other
than the
live point of the stream, playing with scales other than 1.0, etc.",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1051,MMusic,28,50,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",0,-1,"
Section 2.5 seems to mostly say that RTSP 2.0 is not likely to be
useful in this case without extensions.  Perhaps it shouldn't say
much more than that.",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1052,MMusic,28,51,"InformationSeeking,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,InformationProviding,Disagreement,ProposeAction",0,-1,"
Section C.1.5 on SDP attributes sendrecv, recvonly, and sendonly is
confusing.  In particular, the mention of '""PLAY"" mode' is odd, since
RECORD mode is explicitly undefined, so PLAY mode is the only mode
defined.  For that matter, why isn't ""RECORD"" removed from the
grammar for mode -- is there some value to making it reserved but
undefined?  Also, section 13.4.2 mentions the RECORD request, which
no longer exists.",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1053,MMusic,28,52,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,Disagreement,ProposeAction",0,-1,"
Section F introduces new language on the interpretation of CR and LF
for backward compatibility.  The language in RFC2326 was a bad idea,
since it can be paraphrased as ""Receivers should be prepared for
senders to violate this specification.""  While this is always true,
putting it into the specification itself is unwise, as it appears to
give license to violators.  That said, the language that was added to
section F uses the word ""should"" in a dangerous way.  The new
instruction raises doubts about the correct interpretation of
sequences like CR LF LF, LF CR, and CR CR LF.  If there are, in fact,
any RTSP 1.0 clients still extant that take such liberties, maybe it
would be best to pretend they don't exist.",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1054,MMusic,28,53,"ExtensionOfPrevious,ContextSetting,InformationProviding",0,-1,"
Hope this is useful.",<E2FF60D7-3230-4DD6-8A92-117007AC1FB1@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2007-01-02 14:10:31
1055,MMusic,28,150,"ContextSetting,Social,Thanking,Apologising,InformationProviding,Thanking,Apologising",0,-1,"Hi Joe,

Thanks for the comments. Sorry I haven't responded before. But now that
we actually are going somewhere with RTSP it seemed a good time to
actually respond.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1056,MMusic,28,152,"InformationProviding,Agreement,ProposeAction,InformationProviding,Agreement,ProposeAction",49,49,"
I agree that there are servers that has this functionality. However I
think we may need to consider how we indicate the properties of streams.
We maybe need at least three categories: On-demand, Live, Recorded-Live.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1057,MMusic,28,154,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding,Disagreement",50,50,"
I am not agreeing with that classification. There is primarily a warning
about some serious security issues. However they do not apply in all
deployements.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1058,MMusic,28,156,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Disagreement,ProposeAction",51,51,"
I think we need to consider how these rules apply for ""PLAY"" mode.
However not being clear that we are talking about ""PLAY"" seems a bit
strange. But I am on the other hand convinced that the text can be
improved as this is the first shot at the text.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1059,MMusic,28,158,"InformationProviding,Answer,ProposeAction,InformationProviding,ProposeAction,Answer",51,51,"
This should be fixed. The ""mode"" parameter anyway need an extension so
keeping something for the future when it can easily be re-instate when
the rest of the definition exist seems fine.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1060,MMusic,28,159,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",51,51,"
Needs to be fixed.",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1061,MMusic,28,161,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",52,52,"
I don't know how common it is these violations are. It might be easier
to leave this alone by removing the paragraph.
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1062,MMusic,28,162,"Agreement,Agreement",53,53,"
Definitely
",<46239668.4030603@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-16 17:29:44
1063,MMusic,28,239,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",0,-1,"Hi,

See some the issues addressed. I think the comments regarding the first
sections of the document will be addressed somehow when that part is
rewritten.
",<471CAD7F.8090106@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-22 16:02:39
1064,MMusic,28,241,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Question,InformationProviding",51,51,"
I have fixed the occurances of RECORD and removed it from the grammar. I
have also updated the text for the SDP directionality attributes. Is the
following text clearer?

The SDP attributes ""a=sendrecv"", ""a=recvonly"" and ""a=sendonly"" provides
instructions on which direction the media streams flow within a session.
When using RTSP the SDP can be delivered to a client using either RTSP
DESCRIBE or a number of RTSP external methods, like HTTP, FTP, and
email. Based on this the SDP applies to how the RTSP client will see the
complete session. Thus for media streams delivered from the RTSP server
to the client would be given the ""a=recvonly"" attribute.

The direction attributes are not commonly used in SDPs for RTSP, but may
occur. ""a=recvonly"" in a SDP provided to the RTSP client SHALL indicate
that media delivery will only occur in the direction from the RTSP
server to the client. In SDP provided to the RTSP client that lacks any
of the directionality attributes (a=recvonly, a=sendonly, a=sendrecv)
SHALL behave as if the ""a=recvonly"" attribute was received. Note that
this overrules the normal default rule defined in SDP [RFC4566]. The
usage of ""a=sendonly"" or ""a=sendrecv"" is not defined, nor is the
interpretation of SDP by other entities than the RTSP client.
",<471CAD7F.8090106@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-22 16:02:39
1065,MMusic,28,243,"NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",52,52,"
I have posted the other day on how I have propose to addressed this.
Basically removing the text in section F.
",<471CAD7F.8090106@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-22 16:02:39
1066,MMusic,29,0,"Social,Social",,-1,"Hi,",<458913680809290844y2fc92ce4s238f23b8f7958303@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2008-09-29 17:44:16
1067,MMusic,29,21,"InformationProviding,InformationProviding,ContextSetting",,-1,"
Instead of using mechanisms such as HTTP or RTSP DESCRIBE to retrieve
the SDP, I've seen some implementations with SDP in the response of
the RTSP SETUP.",<458913680809290844y2fc92ce4s238f23b8f7958303@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2008-09-29 17:44:16
1068,MMusic,29,22,"Question,Question,ExtensionOfPrevious",21,-1,"
Is this allowed in RTSP?",<458913680809290844y2fc92ce4s238f23b8f7958303@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2008-09-29 17:44:16
1069,MMusic,29,57,"InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ContextSetting",22,22,"
Media initialization is a requirement for any RTSP-based system,
but the RTSP specification does not dictate that this must be done
via the DESCRIBE method. There are three ways that an RTSP client
may receive initialization information:

* via RTSP's DESCRIBE method;
* via some other protocol (HTTP, email attachment, etc.);
* via the command line or standard input (thus working as a browser
helper application launched with an SDP file or other media
initialization format).

RTSP's SETUP is not RTSP's DESCRIBE. It is not some other protocol, and it is
not the command line or standard input. Hence it is not an allowed way
to ""receive initialization information"" in my understanding.
",<200809300955.53826.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-09-30 09:55:53
1070,MMusic,30,12,"InformationProviding,InformationProviding,ContextSetting,ProposeAction",,-1,"In four places, ""draft-ietf-mmusic-rfc2326bis-06.txt"" contains the string
""interleave=""
instead of
""interleaved=""",<6.0.1.1.1.20040219025209.02719e40@localhost>,finlayson@live.com,0.0,0,3,2004-02-19 02:53:17
1071,MMusic,30,13,InformationProviding,,-1,"
Ross.",<6.0.1.1.1.20040219025209.02719e40@localhost>,finlayson@live.com,0.0,0,3,2004-02-19 02:53:17
1072,MMusic,30,14,InformationProviding,,-1,"
mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<6.0.1.1.1.20040219025209.02719e40@localhost>,finlayson@live.com,0.0,0,3,2004-02-19 02:53:17
1073,MMusic,32,0,Social,,-1,"Hello Folks,",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1074,MMusic,32,38,"InformationProviding,ContextSetting,ProposeAction",,-1,"
here is a list of Drafts which our ADs would like us to provide a
review; nonr of them are on next IESG telechat, thus we can set the due
date to June 25th for all of them.",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1075,MMusic,32,39,"ExtensionOfPrevious,ContextSetting",38,-1,"
I start with the ""long"" one:",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1076,MMusic,32,40,"InformationProviding,ExtensionOfPrevious",39,-1,"
1) draft-ietf-mmusic-rfc2326bis-34 Real Time Streaming Protocol 2.0 (RTSP)",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1077,MMusic,32,41,"InformationProviding,ExtensionOfPrevious",40,-1,"
wich might e a candidate for a Joint Review.",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1078,MMusic,32,42,"ExtensionOfPrevious,ContextSetting",38,-1,"
Then we have:",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1079,MMusic,32,43,"InformationProviding,ExtensionOfPrevious",42,-1,"
2) draft-ietf-abfab-eapapplicability-03 Update to the EAP Applicability
Statement for ABFAB",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1080,MMusic,32,44,"InformationProviding,ExtensionOfPrevious",42,-1,"
3) draft-ietf-avtcore-avp-codecs-02 Update to Recommended Codecs for the RTP
Profile for Audio and Video Conferences with Minimal Control (RTP/AVP)",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1081,MMusic,32,45,"InformationProviding,ExtensionOfPrevious",42,-1,"
4) draft-ietf-avtcore-idms-09 Inter-destination Media Synchronization using
the RTP Control Protocol (RTCP)",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1082,MMusic,32,46,"InformationProviding,ExtensionOfPrevious",42,-1,"
5) draft-ietf-payload-vp8-08 RTP Payload Format for VP8 Video",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1083,MMusic,32,47,"InformationProviding,ExtensionOfPrevious",38,-1,"
As you see we have a lot of multimedia this time!",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1084,MMusic,32,48,"InformationSeeking,ProposeAction,StateDecision",38,-1,"
Volunteers, before I send the assignments tomorrow?",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1085,MMusic,32,49,Thanking,,-1,"
thanks indeed,",<alpine.OSX.2.02.1306051848480.4492@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-05 19:00:39
1086,MMusic,32,102,"StateDecision,Agreement,ProposeAction","40,41",41,"
I can review that one, but I agree that a Joint Review would be a good
idea since it is so massive.
",<51AF83F2.5010601@stpeter.im>,stpeter@stpeter.im,0.0,0,0,2013-06-05 12:31:14
1087,MMusic,32,162,"StateDecision,StateDecision","44,46",-1,"I would be willing to review
draft-ietf-payload-vp8-08
and/or
draft-ietf-avtcore-avp-codecs-02",<46A1DF3F04371240B504290A071B4DB63D776F90@szxeml558-mbx.china.huawei.com>,Bert.Greevenbosch@huawei.com,0.0,0,9,2013-06-06 00:43:39
1088,MMusic,33,47,"InformationProviding,ContextSetting,InformationProviding",,-1,"Magnus provided a reminder of this IPR disclosure during our WG session
at IETF 76.
Given the mailing list discussions on RAP conditions and seek-style,
just want to make sure everyone saw this:

--- from Magnus' slides:
Submitted September 2009 by Ericsson -
https://datatracker.ietf.org/ipr/1189/ -
http://www.wipo.int/pctdb/en/wo.jsp?WO=2008156390

Concerns Seek-Style and related in RFC2326bis
-""Basically, according to the invention, the client requests
transmission of a media stream from a unicast transport source, said
request including information of where in the media stream the
transmission should start. This is achieved by the inclusion of a
specific indication of a desired starting frame"" [WO 2008/156390]

Jean-Francois.
",<9AAEDF491EF7CA48AB587781B8F5D7C602645859@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-11-19 03:55:11
1089,MMusic,33,49,InformationProviding,,-1,"magnus.westerlund@ericsson.com; stiemerling@nw.neclab.eu;
robla@robla.net",<9AAEDF491EF7CA48AB587781B8F5D7C602645859@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-11-19 03:55:11
1090,MMusic,36,34,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"In section 16.4 (""Live Media Presentation Using Multicast"") there's the
following ""Editor's Note""):",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1091,MMusic,36,35,"Question,ExtensionOfPrevious,ContextSetting",34,-1,"
Is this example really valid? In what situations does it make sense to do a
setup to a multicast distribution channel, and also issue PLAY requests?",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1092,MMusic,36,36,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",35,-1,"
Please remove this ""Editor's Note"".  As I noted in a message to this
mailing list back in August:",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1093,MMusic,36,37,"Question,InformationProviding,Question,InformationProviding,ExtensionOfPrevious",36,-1,"
Why did this even arise as an issue?  RTSP *is definitely* useful for
playing multicast sessions.  In particular, the RTSP ""DESCRIBE"" command is
an excellent way for a client to get the SDP description for a multicast
session (even though, in this case, the subsequent ""SETUP"" and ""PLAY""
commands turn out to be effectively no-ops).",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1094,MMusic,36,38,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",37,-1,"
A media player client can play a stream using a ""rtsp://"" URL, without
having to know in advance whether the stream is multicast or unicast.  It
would be silly to require that a media player use one mechanism for playing
multicast streams, and another for playing unicast streams.",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1095,MMusic,36,39,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",38,-1,"
It baffles me that so many people seem to think that RTSP is for unicast
streams only.  Please don't perpetuate this myth by removing the multicast
example from the spec.",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1096,MMusic,36,40,InformationProviding,,-1,"
Ross (who has implemented and deplayed several multicast streaming
applications with built-in RTSP servers)",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1097,MMusic,36,41,InformationProviding,,-1,"
mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<6.2.0.14.1.20041123133318.031a0370@localhost>,finlayson@live.com,0.0,0,3,2004-11-23 13:37:19
1098,MMusic,36,83,"ProposeAction,Social,ContextSetting,Social",39,-1,"Hi Ross,

See below:
",<41A5FBE2.6030801@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-11-25 16:36:02
1099,MMusic,36,85,"Question,InformationProviding,Agreement,Apologising,Question,InformationProviding,Agreement,ContextSetting,ProposeAction,Apologising",36,36,"Yes, I don't see a big problem with removing the editors note. However
the question was also on a more technical level rather than on the
principle level.

So have you looked at the actual example and think it is correct?

I am also sorry that I didn't manage to edit the draft to the shape I
have desired before the meeting. There are a number of open issues not
edited in, and this editorial note, is clearly one things that needs to
be concluded.
",<41A5FBE2.6030801@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-11-25 16:36:02
1100,MMusic,37,40,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1101,MMusic,37,41,"InformationProviding,InformationProviding,ExtensionOfPrevious",40,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-32.txt
Pages           : 285
Date            : 2013-03-22",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1102,MMusic,37,42,"InformationProviding,InformationProviding,ExtensionOfPrevious",41,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1103,MMusic,37,43,"InformationProviding,InformationProviding,ExtensionOfPrevious",42,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1104,MMusic,37,44,"InformationProviding,InformationProviding,ExtensionOfPrevious",43,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1105,MMusic,37,45,"InformationProviding,InformationProviding,ExtensionOfPrevious",44,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-32",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1106,MMusic,37,46,"InformationProviding,InformationProviding,ExtensionOfPrevious",45,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-32",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1107,MMusic,37,47,"InformationProviding,InformationProviding,ExtensionOfPrevious",46,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20130322160339.18189.47384.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-03-22 09:03:39
1108,MMusic,37,49,InformationProviding,,-1,"WG,",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1109,MMusic,37,144,"InformationProviding,StateDecision,InformationProviding",40,-1,"
This updates takes care of the last of some smaller issues that Flemming
noticed in his chair writeup review. This includes the issues I have
brought up on the mailing list.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1110,MMusic,37,145,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",144,-1,"
The diff of the changes:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-32",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1111,MMusic,37,146,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",145,-1,"
A number of changes in this diff are due to the new XML2RFC tool. The
significant changes are:",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1112,MMusic,37,147,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",146,-1,"
Section 10.2 - above 1024 registered port.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1113,MMusic,37,148,"InformationProviding,InformationProviding,ExtensionOfPrevious",146,-1,"
Section C.1.2, C.1.3, C.2.2 - Clarifing usage of RTP/RTCP multiplexing.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1114,MMusic,37,149,"InformationProviding,InformationProviding,ExtensionOfPrevious",146,-1,"
Appendix D: SDP usage clarification, intro + D.1.5",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1115,MMusic,37,150,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting",144,-1,"
I would note that this document has been bitten by bugs in the XML2RFC
tool. Two issues to be noted.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1116,MMusic,37,151,"InformationProviding,InformationProviding,ExtensionOfPrevious",150,-1,"
- The long line is due to hangtext not keeping within limits
- Some hangtext items without content has diseapeard in the MIME
registration.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1117,MMusic,37,152,"InformationProviding,StateDecision,ExtensionOfPrevious,StateDecision",151,-1,"
Thus I will resubmit a version with the old XML tool to avoid these.",<514C82DE.9030303@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-22 17:12:14
1118,MMusic,38,367,"InformationProviding,ContextSetting,ContextSetting",,-1,"This is a combined Gen-ART and OPS-DIR review.
Boilerplate for both follows ...",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1119,MMusic,38,368,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",,-1,"
I am the assigned Gen-ART reviewer for this draft. For background on
Gen-ART, please see the FAQ at",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1120,MMusic,38,369,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",368,-1,"
<http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1121,MMusic,38,370,"ProposeAction,ExtensionOfPrevious,ProposeAction,Social",367,-1,"
Please resolve these comments along with any other Last Call comments
you may receive.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1122,MMusic,38,371,"InformationProviding,ProposeAction,StateDecision,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",368,-1,"
I have reviewed this document as part of the Operational directorate's ongoing
effort to review all IETF documents being processed by the IESG.  These comments
were written primarily for the benefit of the operational area directors.
Document editors and WG chairs should treat these comments just like any other
last call comments.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1123,MMusic,38,372,"InformationProviding,InformationProviding,ExtensionOfPrevious",367,-1,"
Document: draft-ietf-mmusic-rtsp-nat-evaluation-14
Reviewer: David L. Black
Review Date: June 14, 2014
IETF LC End Date: June 13, 2014",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1124,MMusic,38,373,"InformationProviding,InformationProviding,ExtensionOfPrevious",372,-1,"
Summary: This draft is on the right track, but has open issues
described in the review.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1125,MMusic,38,374,"InformationProviding,InformationProviding,ExtensionOfPrevious",373,-1,"
This draft describes and evaluates a number of proposed NAT traversal
mechanisms for RTSP.  The draft covers a lot of detailed material
about the proposed mechanisms, and necessarily assumes that the reader
has some reasonable familiarity with NAT and RTP concepts.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1126,MMusic,38,375,"InformationProviding,ExtensionOfPrevious,ContextSetting",372,-1,"
Major issues:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1127,MMusic,38,376,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",375,-1,"
[1] The abstract characterizes this draft as the evaluation that lead to
the mmusic WG's choice of the NAT traversal technique for RTSP, but
the evaluation in this draft did not drive that choice, as indicated
in Section 6:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1128,MMusic,38,377,"InformationProviding,StateDecision,InformationProviding,ExtensionOfPrevious,ContextSetting",376,-1,"
Looking at Figure 1 one would draw the conclusion that using TCP
Tunneling or Three-Way Latching is the solutions that best fulfill
the requirements.  The different techniques were discussed in the
MMUSIC WG.  It was established that the WG would pursue an ICE based
solution due to its generality and capability of handling also
servers delivering media from behind NATs.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1129,MMusic,38,378,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",377,-1,"
OTOH, there appears to be a lot  of useful material in this draft that
should be published in an informational RFC, not only the comparison, of
NAT traversal techniques, but also documentation of some of those
techniques, as indicated in Section 4:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1130,MMusic,38,379,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",378,-1,"
This section includes NAT traversal techniques that
have not been formally specified anywhere else.  The overview section
of this document may be the only publicly available specification of
some of the NAT traversal techniques.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1131,MMusic,38,380,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",379,-1,"
This may be fairly simple to address, as the last sentence in the
abstract and the Section 6 text quoted above are the primary sources
of this issue.  It may also help to change the title of this draft
from ""The Evaluation of ..."" to ""Comparison of ..."" and do something
analogous to other occurrences of the word ""evaluation"" in this draft.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1132,MMusic,38,381,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",380,-1,"
Also in the text quoted from section 4 above ""overview section"" is
misleading, as the documentation is in Section 4 - I suggest deleting
""The overview section of"". [Editorial]",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1133,MMusic,38,382,"InformationProviding,ContextSetting,ExtensionOfPrevious,ContextSetting",375,-1,"
[2] Section 4 says:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1134,MMusic,38,383,"InformationProviding,ExtensionOfPrevious,ContextSetting",382,-1,"
Some other techniques have been recommended against or are no longer
possible due to standardization works' outcome or their failure to
progress within IETF after the initial evaluation in this document,
e.g.  RTP No-Op [I-D.ietf-avt-rtp-no-op].",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1135,MMusic,38,384,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",383,-1,"
That's too vague, an explicit list should be provided of techniques in
Section 4 that should not or cannot currently be used, starting with RTP
No-Op including an explanation of why that is the case for each technique.
There's also an important editorial clarification needed - these
""other techniques"" are not NAT traversal techniques; they are possible
elements of some NAT traversal techniques.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1136,MMusic,38,385,"InformationProviding,ExtensionOfPrevious,ContextSetting",384,-1,"
This text is 4.1.1 is part of this issue:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1137,MMusic,38,386,"InformationProviding,ExtensionOfPrevious,ContextSetting",385,-1,"
The first version of STUN [RFC3489] included categorization and
parameterization of NATs.  This was abandoned in the updated version
[RFC5389] due to it being unreliable and brittle.  Some of the below
discussed methods are based on RFC3489 functionality which will be
called out and the downside of that will be part of the
characterization.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1138,MMusic,38,387,"InformationProviding,ExtensionOfPrevious",372,-1,"
Minor issues:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1139,MMusic,38,388,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",387,-1,"
[A] Firewall paragraph in Introduction confuses ALG implementation with
firewall configuration (presumably UDP pinholes).  It needs to clearly
separate those two concepts, as the current text implies that punching
a UDP (pin)hole is part of the firewall implementation, whereas it's
actually part of the operational configuration of the firewall.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1140,MMusic,38,389,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
[B] Still in the Introduction (Section 1):",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1141,MMusic,38,390,"InformationProviding,ExtensionOfPrevious,ContextSetting",389,-1,"
At the time when the bulk of work on this document was done, a single
level of NAT was the dominant deployment for NATs, and multiple level
of NATs, including Carrier Grade NATs (CGNs) has been only partially
considered.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1142,MMusic,38,391,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",390,-1,"
That's vague - please provide a clear statement of what is out of scope for
this draft.  It looks like everything other than Basic NAT techniques is
out of scope.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1143,MMusic,38,392,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 1.2
[C]
Many organizations
use firewalls to prevent privacy intrusions and malicious attacks to
corporate computing resources in the private intranet [RFC2588].",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1144,MMusic,38,393,"InformationProviding,Disagreement,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",392,-1,"
Please remove the word ""privacy"" - I don't believe it's correct in this
context, as many of the intrusions are intended to compromise far more than
privacy. I would also change ""to prevent"" -> ""to counter"" as many current
attacks are not prevented by firewalls.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1145,MMusic,38,394,"ProposeAction,ExtensionOfPrevious,ContextSetting",392,-1,"
This needs more explanation:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1146,MMusic,38,395,"InformationProviding,ExtensionOfPrevious,ContextSetting",394,-1,"
2.  NAT does not in itself provide security, although some access
control policies can be implemented using address translation
schemes.  The inherent filtering behaviours are commonly mistaken
for real security policies.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1147,MMusic,38,396,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",395,-1,"
At a minimum, explain what sort of ""security"" is not provided.  In addition,
I suggest noting that a NAT can provide some privacy by concealing address/port
usage on the private side of the NAT.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1148,MMusic,38,397,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
[D] Still in Section 1.2:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1149,MMusic,38,398,"InformationProviding,ExtensionOfPrevious,ContextSetting",397,-1,"
In the rest of this memo we use the phrase ""NAT traversal""
interchangeably with ""firewall traversal"", and ""NAT/firewall
traversal"".",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1150,MMusic,38,399,"InformationProviding,Disagreement,ExtensionOfPrevious,ProposeAction,InformationProviding,Disagreement,ExtensionOfPrevious,Social",398,-1,"
No, don't do that, please.  This is a NAT traversal document that considers
the effects of NAT traversal techniques on firewalls, so the term ""NAT
traversal"" should be the primary term.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1151,MMusic,38,400,"InformationProviding,ContextSetting,ProposeAction,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 2, last paragraph.
[E]
Note that if neither RTCP packets nor RTSP
messages are received by the RTSP server for a while, the RTSP server
has the option to delete the corresponding RTP session, SSRC and RTSP
session ID, because either the client can not get through a middle
box NAT/firewall, or the client is mal-functioning.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1152,MMusic,38,401,"Question,ClarificationElicitation,ExtensionOfPrevious",400,-1,"
Is there any delay recommended before RTSP server reuse of that set of
identifying information (RTP session, SSRC and RTSP session ID)?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1153,MMusic,38,402,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 3
[F]
3.  Should have minimal impact on clients not behind NATs and which
are not dual-hosted.  RTSP dual-hosting means that the RTSP
signalling protocol and the media protocol (e.g.  RTP) are
implemented on different computers with different IP addresses.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1154,MMusic,38,403,"InformationProviding,ExtensionOfPrevious,ContextSetting",402,-1,"
*  For instance, no extra delay from RTSP connection till arrival
of media",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1155,MMusic,38,404,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",402,-1,"
By comparison to requirement R3 in Section 6, the above text is too broad.
The R3 requirement considered in this draft is specifically about additional
protocol round trips; ""extra delay"" could be introduced for other reasons.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1156,MMusic,38,405,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
[G] Still in Section 3",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1157,MMusic,38,406,"InformationProviding,ExtensionOfPrevious,ContextSetting",405,-1,"
4.  Should be simple to use/implement/administer so people actually
turn them on",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1158,MMusic,38,407,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",406,-1,"
*  Otherwise people will resort to TCP tunneling through NATs",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1159,MMusic,38,408,"InformationProviding,Disagreement,ProposeAction,InformationProviding,Disagreement,ProposeAction",407,-1,"
Not so fast ... TCP tunneling is one of the evaluated techniques (see
Section 4.8), so that text isn't right.  Deletion of the
""* Otherwise ..."" sub-bullet should suffice to deal with this.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1160,MMusic,38,409,"InformationProviding,ContextSetting,ExtensionOfPrevious,ContextSetting",387,-1,"
[H] Still in Section 3",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1161,MMusic,38,410,"InformationProviding,ExtensionOfPrevious,ContextSetting",409,-1,"
5.  Should authenticate dual-hosted client transport handler to
prevent DDoS attacks.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1162,MMusic,38,411,"Question,ProposeAction,ClarificationElicitation,ExtensionOfPrevious,ProposeAction",410,-1,"
What's a ""dual-hosted client transport handler"" ???  I suggest adding
this term and dual-hosting/dual-hosted to the Glossary in Section 1.3.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1163,MMusic,38,412,"InformationProviding,ContextSetting,ExtensionOfPrevious,ContextSetting",387,-1,"
[I] Still in Section 3",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1164,MMusic,38,413,"InformationProviding,ExtensionOfPrevious,ContextSetting",412,-1,"
Note a simple preventative measure commonly
deployed is for the RTSP server to disallow the cases where the
client's RTP receiver has a different IP address than that of the
RTSP client.  With the increased deployment of NAT middleboxes by
operators, i.e. carrier grade NAT (CGN), the reuse of an IP address
on the NAT's external side by many customers reduces the protection
provided.  Also in some applications (e.g., centralized
conferencing), dual-hosted RTSP/RTP clients have valid use cases.
The key is how to authenticate the messages exchanged during the NAT
traversal process.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1165,MMusic,38,414,"Question,ProposeAction,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",413,-1,"
Is that ""measure commonly deployed"" recommended?  The above text chunk
feels like Security Considerations text, and this text could usefully
be moved to Section 8.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1166,MMusic,38,415,"Question,InformationProviding,ProposeAction,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
[J] Section 4.1.1 relies on STUN's abandoned NAT type classification
functionality to determine where to send the hole-punching UDP packets.
What's wrong with always sending those packets to the ""server's source
address/port""?  That should work for both types of NATs, thereby removing
the dependency on STUN classification of NAT types.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1167,MMusic,38,416,"Question,Question,ExtensionOfPrevious",387,-1,"
[K] Why are ALG considerations only applicable to STUN-based techniques?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1168,MMusic,38,417,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 4.3.4 Disadvantages list
[L]
o  Assumes that it is possible to de-multiplex between the packets of
the media protocol and STUN packets.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1169,MMusic,38,418,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",417,-1,"
That is actually possible, although the demux technique is not exactly
elegant Add a pointer to Section 5.1.2 of RFC 5764 for information on
how this can be done.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1170,MMusic,38,419,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 4.4.1
[M]
Latching [I-D.ietf-mmusic-latching] is a NAT traversal solution that
is based on requiring RTSP clients to send UDP packets to the
server's media output ports.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1171,MMusic,38,420,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",419,-1,"
Well, draft-ietf-mmusic-latching is about to be approved for publication
as an RFC, but it does not apply to RTSP.  Additional RTSP extension work
would be required, as specified in section 4.4.2. Please make that clear
at the start of this section, and include a forward pointer to section 4.4.2.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1172,MMusic,38,421,"Question,Question,ExtensionOfPrevious,ContextSetting",387,-1,"
[N] Section 4.6 - Where are the security considerations for 3-way Latching?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1173,MMusic,38,422,"InformationProviding,ExtensionOfPrevious,ContextSetting",387,-1,"
-- Section 4.8.4
[O]
It is not possible to
get any amplification effect for denial of service attacks due to
TCP's flow control.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1174,MMusic,38,423,"InformationProviding,Disagreement,ProposeAction,InformationProviding,Disagreement,ExtensionOfPrevious,ProposeAction",422,-1,"
That's not correct or at least not a complete discussion of denial of service
possibilities - if an attacker can cause a lot of TCP SYNs to be sent to a
target/victim, the result can be a DDoS attack.  The text quoted above needs
to be rewritten to address this possibility.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1175,MMusic,38,424,"InformationProviding,ExtensionOfPrevious,ContextSetting",372,-1,"
Nits/editorial comments:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1176,MMusic,38,425,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious,ContextSetting",424,-1,"
There are additional editorial cleanups that I'll leave to the RFC Editor,
but I noted a few things that seem to deserve mention here:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1177,MMusic,38,426,"InformationProviding,ExtensionOfPrevious,ContextSetting",425,-1,"
- Section 1, 1st paragraph",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1178,MMusic,38,427,"InformationProviding,ExtensionOfPrevious,ContextSetting",426,-1,"
Today there is a proliferate deployment of different flavors of",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1179,MMusic,38,428,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",427,-1,"
""proliferate"" -> ""proliferating"", ""flavors"" -> ""types""",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1180,MMusic,38,429,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 1.1:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1181,MMusic,38,430,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting",,-1,"
""This document uses the term ""address and port mapping"" as the
translation between an external address and port and an internal
address and port.  Note that this is not the same as an ""address
binding"" as defined in RFC 2663.""",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1182,MMusic,38,431,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting","430,431",-1,"
Note: In the above it would be more correct to use external
instead of public in the above text.  The external IP address is
commonly a public one, but might be of other type if the NAT's
external side is in a private address domain.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1183,MMusic,38,432,"InformationProviding,ProposeAction,UnderstandingNegative,InformationProviding,ExtensionOfPrevious,ProposeAction",431,-1,"
That's confusing - I think this can be improved by using more precise
terms in the first sentence (including adding quotes):
external instead of public ->
""external IP address"" instead of ""public IP address""",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1184,MMusic,38,433,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 2",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1185,MMusic,38,434,"InformationProviding,ExtensionOfPrevious,ContextSetting",433,-1,"
The loss of a
RTP mapping can only be detected when expected traffic does not
arrive.  If a client does not receive data within a few seconds after
having received the ""200 OK"" response to a PLAY request, it may be
the result of a middlebox blocking the traffic.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1186,MMusic,38,435,"Question,Disagreement,ProposeAction,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,Social",434,-1,"
Are ""200 OK"" and ""PLAY request"" sent via RTP?  I don't think so ...
please clarify.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1187,MMusic,38,436,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 4",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1188,MMusic,38,437,"Question,InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",436,-1,"
Add an explanation of what the ""Transition:"" text discusses for each
mechanism are about - transition from what to what?  I believe that
these chunks of text concern transitioning to a (hypothetical, IMHO)
world in which NATs don't exist.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1189,MMusic,38,438,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 4.3.4 Disadvantages list",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1190,MMusic,38,439,"InformationProviding,ExtensionOfPrevious,ContextSetting",438,-1,"
o  Assumes that it is possible to de-multiplex between the packets of
the media protocol and STUN packets.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1191,MMusic,38,440,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",439,-1,"
It is possible, although not elegant.  Add a pointer to Section 5.1.2
of RFC 5764 for this.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1192,MMusic,38,441,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 5",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1193,MMusic,38,442,"InformationProviding,ExtensionOfPrevious,ContextSetting",441,-1,"
DDoS attacks occur if
the attacker fakes the messages in the NAT traversal mechanism to
trick the RTSP server into believing that the client's RTP receiver
is located on a separate host.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1194,MMusic,38,443,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",442,-1,"
""a separate host"" -> ""the host to be attacked"".",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1195,MMusic,38,444,"ContextSetting,ExtensionOfPrevious,ContextSetting",425,-1,"
-- Section 8",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1196,MMusic,38,445,"Question,InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",444,-1,"
The second paragraph in this section summarizes the security considerations
from Section 4.  It ought to be followed by a paragraph that compares/
contrasts the degree of security risks of the various NAT traversal mechanisms
to draw some conclusions - e.g., are some of the proposed mechanisms simply
infeasible/implausible because the security risks are too high?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1197,MMusic,38,446,"InformationProviding,ExtensionOfPrevious,ContextSetting",425,-1,"
idnits 2.13.01 found a few minor concerns with the references:",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1198,MMusic,38,447,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
== Outdated reference: A later version (-07) exists of
draft-ietf-mmusic-latching-05",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1199,MMusic,38,448,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
== Outdated reference: A later version (-21) exists of
draft-ietf-mmusic-rtsp-nat-20",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1200,MMusic,38,449,"Question,InformationProviding,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
-- Obsolete informational reference (is this intentional?): RFC 3489
(Obsoleted by RFC 5389)",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1201,MMusic,38,450,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",449,-1,"
The final concern deserves attention - it would be a good thing if the
need to reference to RFC 3489 could be eliminated.  See [J] above for
one suggested step towards that end.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1202,MMusic,38,451,"InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
--- Selected RFC 5706 Appendix A Q&A for OPS-Dir review ---",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1203,MMusic,38,452,"InformationProviding,InformationProviding,ContextSetting",372,-1,"
In general, there is a lot of operational considerations material
(applicable to A.1 questions) in this draft.  Beyond that, management
considerations (A.2 questions) are generally inapplicable.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1204,MMusic,38,453,"Question,Question,ExtensionOfPrevious,ContextSetting",452,-1,"
A.1.1.  Has deployment been discussed?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1205,MMusic,38,454,"InformationProviding,Answer,Answer",453,-1,"
Yes, there is significant good material on deployment considerations.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1206,MMusic,38,455,"Question,Question,ExtensionOfPrevious,ContextSetting",452,-1,"
A.1.3.  Has the migration path been discussed?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1207,MMusic,38,456,"InformationProviding,Answer,InformationProviding,Answer",455,-1,"
Not much, but discussion of migration is mostly deferrable to the
documentation of the selected NAT traversal mechanism and its
components.  Ease/difficulty of adding the NAT traversal support
could have been an evaluation consideration, but was not used.
On balance, this seems ok.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1208,MMusic,38,457,"Question,Question,ExtensionOfPrevious,ContextSetting",452,-1,"
A.1.4.  Have the Requirements on other protocols and functional
components been discussed?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1209,MMusic,38,458,"InformationProviding,Answer,Answer",457,-1,"
Yes, the discussion of each NAT traversal mechanism indicates what,
if any changes would be needed to protocols used by that mechanism.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1210,MMusic,38,459,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",458,-1,"
But ... see major issue [2] above on the need for clarification
of the discussion of obsolete/unusable protocol changes/features.",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1211,MMusic,38,460,"Question,Question,ExtensionOfPrevious,ContextSetting",452,-1,"
A.1.9 Is configuration discussed?",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1212,MMusic,38,461,"InformationProviding,Answer,InformationProviding,Answer",460,-1,"
Yes, as part of the deployment considerations discussion, and
the desire to avoid complexity of configuration is one of the
evaluation criteria (R4).",<8D3D17ACE214DC429325B2B98F3AE712076FF268CF@MX15A.corp.emc.com>,david.black@emc.com,0.0,1,0,2014-06-14 22:56:43
1213,MMusic,38,645,"InformationProviding,StateDecision,Thanking,InformationProviding,ContextSetting,Social,Thanking",371,-1,"Hi David,

I have finally gotten to do the update of this document. I thank you
very much as I believe the document has gotten substantially better and
more consistent due to your and Sarah Banks review comments.

I will say upfront that the updated version has not become a
masterpiece, but it will suck a bit less. My view is that this document
contains some valuable pieces of information, but it is not worth
spending tons of time in editing.

I have some inline response to your comments and question below.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1214,MMusic,38,647,"InformationProviding,StateDecision,InformationProviding,ContextSetting,StateDecision",380,380,"
Yes, I have attempted to do what your suggest. I think it mostly
resolves the issue.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1215,MMusic,38,649,"InformationProviding,StateDecision,InformationProviding,ContextSetting,StateDecision",386,386,"
I have attempted to be clearer in the text when methods are based on
either deprecated or abandoned proposals. However, from my perspective,
especially for abandoned work, if one would have wanted to pursue a
mechanism based on abandoned work it could have been resurrected.
Deprecated is worse as that usually have a good motivation behind its
removal.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1216,MMusic,38,651,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer",401,401,"
No, to my knowledge there exist no such recommendation. However, the
RTSP session is basically defined by the RTSP session context and the
used 5-tuples. The SSRC are scoped by session, and should be randomly
generated to minimize the risk of collision. RTSP session IDs needs to
be generated with very low probability of collision with any recently used.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1217,MMusic,38,653,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,ProposeAction",414,414,"
In RTSP 2.0 this is well documented and recommended practice. See
Section 21.2.2 in
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1218,MMusic,38,655,"InformationProviding,Answer,Disagreement,ProposeAction,InformationProviding,Answer,ContextSetting,ProposeAction",415,415,"
Actually that is not the main reason. The difference between 4.1
Stand-alone STUN and 4.2 Embedded STUN is where the STUN server is. In
4.2 the STUN server is sharing the server port, thus taking care of
handling the STUN requests and sending respone. For 4.1 the server can
be either on its own IP or share IP but have a different port compared
to the RTSP server. The classification method is basically to detect
cases where the method would fail, prior to really attempting them. One
could skip the classification and instead fail during SETUP. But that
will result in the server starting to send media, which will not be
delivered to the client. This late failure I think is desirable to
avoid. But, this has been clarified:

The first version of STUN [RFC3489] included categorization and
parameterization of NATs.  This was abandoned in the updated version
[RFC5389] due to it being unreliable and brittle.  This particular
traversal method uses the removed RFC3489 functionality to detect the
NAT type to give an early failure indication when the NAT is showing
the behavior that this method can't support.  This method also
suggest using the RTP NO-OP payload format [I-D.ietf-avt-rtp-no-op]
for key-alives of the RTP traffic in the client to server direction.
This can be replaced with another form of UDP packet as will be
further discussed below.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1219,MMusic,38,656,"InformationProviding,Answer,StateDecision,InformationProviding,Answer,StateDecision",416,416,"
They are applicable to all cases. I have corrected this in this version.
In most cases the main finding about ALGs was listed in the Deployment
considerations.
",<5535028E.6090502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-04-20 15:43:42
1220,MMusic,39,43,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1221,MMusic,39,44,"InformationProviding,ExtensionOfPrevious,InformationProviding",43,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Authors         : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-39.txt
Pages           : 309
Date            : 2014-01-17",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1222,MMusic,39,45,"InformationProviding,ExtensionOfPrevious,InformationProviding",44,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1223,MMusic,39,46,"InformationProviding,ExtensionOfPrevious,InformationProviding",45,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-layer
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1224,MMusic,39,47,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",46,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1225,MMusic,39,48,"InformationProviding,ExtensionOfPrevious,InformationProviding",47,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-39",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1226,MMusic,39,49,"InformationProviding,ExtensionOfPrevious,InformationProviding",48,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-39",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1227,MMusic,39,50,"InformationProviding,ExtensionOfPrevious,Social,InformationProviding,ProposeAction",49,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1228,MMusic,39,51,"InformationProviding,ExtensionOfPrevious,InformationProviding",50,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20140117105827.23104.91681.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-01-17 02:58:27
1229,MMusic,39,53,InformationProviding,,-1,"WG,",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1230,MMusic,39,141,"InformationSeeking,ContextSetting,ProposeAction,InformationProviding,ProposeAction,StateDecision",47,-1,"
Martin and I have now worked through the discusses and comments received
in IESG review. Thus this is our suggestion on how to resolve them. I
encourage you to review the changes while the ADs reviews the discuss
positions. If you find issues we need to hear comments ASAP.",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1231,MMusic,39,142,"ExtensionOfPrevious,ContextSetting,InformationProviding",141,-1,"
The main changes are:",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1232,MMusic,39,143,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
- rewritten structure for a large number of IANA entries",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1233,MMusic,39,144,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
- Additional text regarding security and sensitivity of control vs media.",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1234,MMusic,39,145,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
- ABNF chagnes regarding UTF-8",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1235,MMusic,39,146,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
- Rewritten NPT text and ABNF.",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1236,MMusic,39,147,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
- Updated examples for Date to follow the time format actually specified.",<52D90DFC.3000102@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-01-17 12:03:24
1237,MMusic,40,61,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts
directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1238,MMusic,40,62,InformationProviding,,-1,"
Title		: Real Time Streaming Protocol 2.0 (RTSP)
Author(s)	: H. Schulzrinne, et al.
Filename	: draft-ietf-mmusic-rfc2326bis-15.txt
Pages		: 215
Date		: 2007-6-26",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1239,MMusic,40,63,InformationProviding,,-1,"
This memorandum defines RTSP version 2.0 which is a revision of the
Proposed Standard RTSP version 1.0 which is defined in RFC 2326.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1240,MMusic,40,64,InformationProviding,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for control over the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1241,MMusic,40,65,InformationProviding,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-15.txt",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1242,MMusic,40,66,"InformationProviding,ProposeAction",,-1,"
To remove yourself from the I-D Announcement list, send a message to
i-d-announce-request@ietf.org with the word unsubscribe in the body of
the message.
You can also visit https://www1.ietf.org/mailman/listinfo/I-D-announce
to change your subscription settings.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1243,MMusic,40,67,"InformationProviding,ProposeAction",,-1,"
Internet-Drafts are also available by anonymous FTP. Login with the
username ""anonymous"" and a password of your e-mail address. After
logging in, type ""cd internet-drafts"" and then
""get draft-ietf-mmusic-rfc2326bis-15.txt"".",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1244,MMusic,40,68,InformationProviding,,-1,"
A list of Internet-Drafts directories can be found in
http://www.ietf.org/shadow.html
or ftp://ftp.ietf.org/ietf/1shadow-sites.txt",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1245,MMusic,40,69,InformationProviding,,-1,"
Internet-Drafts can also be obtained by e-mail.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1246,MMusic,40,70,"InformationProviding,ProposeAction",,-1,"
Send a message to:
mailserv@ietf.org.
In the body type:
""FILE /internet-drafts/draft-ietf-mmusic-rfc2326bis-15.txt"".",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1247,MMusic,40,71,"InformationProviding,ProposeAction",,-1,"
NOTE:	The mail server at ietf.org can return the document in
MIME-encoded form by using the ""mpack"" utility.  To use this
feature, insert the command ""ENCODING mime"" before the ""FILE""
command.  To decode the response(s), you will need ""munpack"" or
a MIME-compliant mail reader.  Different MIME-compliant mail readers
exhibit different behavior, especially when dealing with
""multipart"" MIME messages (i.e. documents which have been split
up into multiple messages), so check your local documentation on
how to manipulate these messages.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1248,MMusic,40,72,InformationProviding,,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<E1I3JrG-0001Q4-4I@stiedprstage1.ietf.org>,Internet-Drafts@ietf.org,0.0,,,2007-06-26 18:50:02
1249,MMusic,41,39,InformationProviding,,-1,"Jonathan,
",<3DD8E257.8B785762@lmf.ericsson.se>,Gonzalo.Camarillo@lmf.ericsson.se,0.0,0,6,2002-11-18 14:51:35
1250,MMusic,41,40,InformationProviding,,-1,"Jonathan Rosenberg wrote:
> Ah, yet another case of deviation between RTSP and SIP, all for no
> reason. Grr.",<3DD8E257.8B785762@lmf.ericsson.se>,Gonzalo.Camarillo@lmf.ericsson.se,0.0,0,6,2002-11-18 14:51:35
1251,MMusic,41,41,"Agreement,ContextSetting,InformationProviding,Agreement",40,-1,"
Yes, that's exactly what I thought yesterday when I discovered it:
Grrrr!
",<3DD8E257.8B785762@lmf.ericsson.se>,Gonzalo.Camarillo@lmf.ericsson.se,0.0,0,6,2002-11-18 14:51:35
1252,MMusic,41,42,ClarificationElicitation,,-1,"> So, are you saying you propose that we adopt a new PING method for doing
> this in SIP?",<3DD8E257.8B785762@lmf.ericsson.se>,Gonzalo.Camarillo@lmf.ericsson.se,0.0,0,6,2002-11-18 14:51:35
1253,MMusic,41,43,"InformationProviding,Answer,ContextSetting,ProposeAction,InformationProviding,Answer,ProposeAction",42,-1,"
Since the entities involved in session timer have to support session
timer, it would be alright to use a new method which would be specific
to this extension. PING would be a good choice.

In any event, I believe that having RTSP and SIP aligned on this issue
is a good thing.

FYI: this is the definition of the PING method in RTSP:

10.12 PING

This method is a bi-directional mechanism for server or client live-
ness checking. It has no side effects. The issuer of the request MUST
include a session header with the session ID of the session that is
being checked for liveness.

http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-02.txt
",<3DD8E257.8B785762@lmf.ericsson.se>,Gonzalo.Camarillo@lmf.ericsson.se,0.0,0,6,2002-11-18 14:51:35
1254,MMusic,42,43,"InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1255,MMusic,42,44,"InformationProviding,ExtensionOfPrevious",43,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-35.txt
Pages           : 320
Date            : 2013-09-02",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1256,MMusic,42,45,"InformationProviding,ExtensionOfPrevious",44,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1257,MMusic,42,46,"InformationProviding,ExtensionOfPrevious",45,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1258,MMusic,42,47,"InformationProviding,ExtensionOfPrevious",46,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1259,MMusic,42,48,"InformationProviding,ExtensionOfPrevious",47,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-35",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1260,MMusic,42,49,"InformationProviding,ExtensionOfPrevious",48,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-35",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1261,MMusic,42,50,"InformationProviding,ExtensionOfPrevious,Social",49,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1262,MMusic,42,51,"InformationProviding,ExtensionOfPrevious",50,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20130902135208.22295.53812.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-09-02 06:52:08
1263,MMusic,42,133,"InformationSeeking,InformationProviding,ProposeAction,Social",47,-1,"
This is the current state of the draft implementing all the proposed
changes and attempting to address all the issues the IETF last call
reviewers has noted. If you don't like how we have addressed it please
comment on the particular issue.",<522499FE.60900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 16:00:30
1264,MMusic,42,134,"InformationProviding,ExtensionOfPrevious,ProposeAction",133,-1,"
And yes, this needs reviews as there quite a lot of changes.",<522499FE.60900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 16:00:30
1265,MMusic,45,0,"Social,Social",,-1,"Hello all,",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1266,MMusic,45,41,"InformationProviding,Thanking,InformationProviding,ContextSetting,Thanking",,-1,"
thanks to a number of volunteers, assignations were easy, too:",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1267,MMusic,45,42,"InformationProviding,ExtensionOfPrevious,ContextSetting",41,-1,"
1) draft-ietf-mmusic-rfc2326bis-34 Real Time Streaming Protocol 2.0 (RTSP)",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1268,MMusic,45,43,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",42,-1,"
volunteered by Peter Saint-Andre; as this is long, I will also help him
with a joint review.",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1269,MMusic,45,44,"InformationProviding,ExtensionOfPrevious,ContextSetting",41,-1,"
2) draft-ietf-abfab-eapapplicability-03 Update to the EAP Applicability
Statement for ABFAB",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1270,MMusic,45,45,"InformationProviding,Thanking,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social,Thanking",44,-1,"
** assigned to Eliot Lear, please ACK ! Thanks!",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1271,MMusic,45,46,"InformationProviding,ExtensionOfPrevious,ContextSetting",41,-1,"
3) draft-ietf-avtcore-avp-codecs-02 Update to Recommended Codecs for the RTP
Profile for Audio and Video Conferences with Minimal Control (RTP/AVP)",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1272,MMusic,45,47,"InformationProviding,InformationProviding,ExtensionOfPrevious",46,-1,"
volunteered by Bert Greevenbosch",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1273,MMusic,45,48,"InformationProviding,ExtensionOfPrevious,ContextSetting",41,-1,"
4) draft-ietf-avtcore-idms-09 Inter-destination Media Synchronization using
the RTP Control Protocol (RTCP)",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1274,MMusic,45,49,"InformationProviding,Thanking,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social,Thanking",48,-1,"
** assigned to Eric Burger, please ACK ! Thanks!",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1275,MMusic,45,50,"InformationProviding,ExtensionOfPrevious,ContextSetting",41,-1,"
5) draft-ietf-payload-vp8-08 RTP Payload Format for VP8 Video",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1276,MMusic,45,51,"InformationProviding,InformationProviding,ExtensionOfPrevious",50,-1,"
volunteered by Bert Greevenbosch",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1277,MMusic,45,52,"InformationProviding,InformationSeeking,InformationProviding,ProposeAction,InformationProviding",,-1,"
All review are due by June 25th.",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1278,MMusic,45,53,"Thanking,Thanking",,-1,"
Thank you all!",<alpine.OSX.2.02.1306082227120.6075@mac-allocchio3.local>,Claudio.Allocchio@garr.it,0.0,0,4,2013-06-08 22:37:22
1279,MMusic,46,20,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,Disagreement",,-1,"I have some concerns about the changes made to the syntax of RTP-Info
in the RTSP 2.0 draft. In RTSP/1.0 it is a simple standard semi-colon
separated list of values concerning the identified URL parameter. The
newer draft changes it considerably, and I do not see any reason given
or examples illustrating the need.",<46263E72.20405@real.com>,jgordon@real.com,0.0,0,46,2007-04-18 16:51:14
1280,MMusic,46,21,"InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction,UnderstandingNegative",20,-1,"
Since it is far more complex, requires very specific parsers, and
completely separate code path (in case of a server supporting both 1.0
and 2.0, which one would assume will be rather common if 2.0 is to take
hold), I would like to understand the reasoning for this change, and
whether there is a simpler alternative.",<46263E72.20405@real.com>,jgordon@real.com,0.0,0,46,2007-04-18 16:51:14
1281,MMusic,46,66,"InformationProviding,NeutralResponse,ContextSetting,Social,InformationProviding,NeutralResponse,StateDecision","20,21",21,"
Hi Jamie,

The problem with the RTSP 1.0 RTP-Info header is that it doesn't
indicate at all for which SSRC the information applies. Thus to address
this and allow for synchronization information from multiple SSRCs in an
RTP session the syntax format in the draft was specified. This as we
need scoping in the following way. For each media stream (identified by
URL) there can be multiple SSRCs and for each SSRC there can be multiple
different parts of synchronization information.
",<46274CDB.70500@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-19 13:04:59
1282,MMusic,48,0,InformationProviding,,-1,"Dear Dr. Henning Schulzrinne, Anup Rao, Rob Lanphier, Magnus Westerlund, Martin Stiemerling:",<20130404151821.944.96423.idtracker@ietfa.amsl.com>,ietf-ipr@ietf.org,0.0,,,2013-04-04 08:18:21
1283,MMusic,48,11,InformationProviding,,-1,"
An IPR disclosure that pertains to your Internet-Draft entitled ""Real Time
Streaming Protocol 2.0 (RTSP)"" (draft-ietf-mmusic-rfc2326bis) was submitted to
the IETF Secretariat on 2013-03-20 and has been posted on the ""IETF Page of
Intellectual Property Rights Disclosures""
(https://datatracker.ietf.org/ipr/2028/). The title of the IPR disclosure is
""Telefonaktiebolaget LM Ericsson (publ)'s Statement about IPR related to draft-
ietf-mmusic-rfc2326bis-31."""");",<20130404151821.944.96423.idtracker@ietfa.amsl.com>,ietf-ipr@ietf.org,0.0,,,2013-04-04 08:18:21
1284,MMusic,50,154,"InformationProviding,ContextSetting,InformationProviding,ProposeAction",,-1,"WG,

Both Robert Sparks and Elwyn Davies found issues that relates to the
following paragraph in section 10.2 of draft-ietf-mmusic-rfc2326bis-34

An RTSP agent SHOULD NOT have more than one connection to the server
at any given point.  If a client or proxy handles multiple RTSP
sessions on the same server, it SHOULD use only one connection for
managing those sessions.

This saves connection resources on the server.  It also reduces
complexity by enabling the server to maintain less state about its
sessions and connections.
",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1285,MMusic,50,155,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,Disagreement,ProposeAction",154,-1,"s10.2, para 6 and following note:  I can't see that the note following
para 6 can be justified: since the restriction on multiple connections
from a client to a server is only a SHOULD, an interoperable server MUST
be capable of handling multiple connections from a client unless the
server can explicitly send back a TOO MANY CONNECTIONS status.
",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1286,MMusic,50,156,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",154,-1,"
Robert had two issues that relates to this (including my comments to the
original issue):
",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1287,MMusic,50,157,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",156,-1,">> In section 10.4, it looks like a server can keep an RTSP transaction
>> pending forever if it sends 100 responses often enough. I assume the
>> client's recourse if it doesn't want to remain involved is to close the
>> connection. If that's right, it's worth calling it out explicitly in
>> this section.
> This is likely a good suggestion, and works fine if the client simply
> wants to abort the request and is anyway abandoning the RTSP session.
> However, the question is what to do if just the request becomes
> irrelevant and instead want to do something else with the RTSP session.
> A single client may abandon the connection, open a new one and issue a
> request, to a potentially undetermined session state. Yet another
> complexity is what a proxy does that has multiple RTSP sessions on the
> same server. Here the rules for processing in order the different
> requests and their relation to answers in the same order.
> This makes me want to weaken the recommendation on re-using an
> connection for multiple RTSP sessions.",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1288,MMusic,50,158,"ExtensionOfPrevious,ContextSetting,InformationProviding",156,-1,"
The second issue is related to the 503 and Retry-After response and what
happens when multiple sessions are on the same connections:
",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1289,MMusic,50,159,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",158,-1,">> There are several places in the text that talk about using a 503
>> response with a Retry-After header to push back on traffic from an
>> element (the first is section 10.7).
>> * It's not clear what the subject of a 503 is. Is it intended to be
>> scoped to requests to the resource in the RURI of the associated
>> request? Is it intended to be scoped to the domain in that resource? Or
>> is it, like in SIP, intended to be scoped to the server issuing the
>> response, independent of what the RURI contained?
> Very good question. It is far from obvious what the best choice is. And
> I think even talking only about URI related scope may not be the best.
> The case I have in mind is if a proxy that has several already
> established RTSP sessions over a persistent connection. When a client
> connected to the proxy requests to establish a new session the server
> may have insufficient resource to handle the SETUP request and send a
> 503 answer. However if another client already having an RTSP session for
> the same resource want to terminate that session it would be strange to
> refuse to process the message as it will actually free up resources.
> This makes me believe that you need to have a RTSP Session scope for any
> request carrying a Session-ID and a general server, or host name scope
> for non-associated that doesn't prevent established sessions to try.
> Thoughts on this?
>> * If the intent is that the 503 talks about the server, then you should
>> clarify that a proxy doesn't simply forward 503 responses (after
>> rewriting CSeqs), and should probably have a response of its own.
>> Otherwise, clients that might be talking to two different servers
>> through one proxy would lose access to both of them when one of the
>> servers 503ed.
> If we us a host and session scope then this issue would not be present.
> However, if the proxy is actually overloaded that still needs its own
> 552 Proxy Unavailable response with the same scope rules as for the 503,
> but where unassociated requests concerns sending to the proxy at all.",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1290,MMusic,50,160,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",154,-1,"
My proposal for dealing with these issues are the following:

1. Change the recommendation around multiple sessions over one
connection to a MAY use multiple sessions over a connection and that it
is allowed also for proxies.

Proposed text:

An RTSP agent MAY use one connection to handle multiple RTSP sessions on
the same server. The RTSP agent SHALL NOT use more than one connection
per RTSP session at any given point.

Using a single connection for multiple RTSP session saves connection
resources on the server. Not using more than one connection at a
time for a particular RTSP session avoids wasting connection
resources and allows the server to track only for the latest in
client to server used connection for each RTSP session as being the
currently valid server to client connection.

2. Making clear the the downsides of closing a multi-session connection,
but also how to recover from it by writing the following in 10.4:

A requester SHOULD wait at least 10 seconds for a response before
concluding that the responder will not be responding to its request.
After receiving a 100 response, the requester SHOULD continue waiting
for further responses. If more than 10 seconds elapses without receiving
any response, the requester MAY assume that the responder is
unresponsive and abort the connection by closing the TCP connection.

Note: In cases multiple RTSP sessions share the same transport
connection, abandoning a request closing the connection may have
significant impact on those other sessions. First of all, other
RTSP requests may have become queued up due to the request taking
long time. Secondly also those sessions loose the possibility to
receive server to client requests. To mitigate that situation the
RTSP Agent should establish a new connection and send any queued up
and non-responded requests on this new connection. Secondly, to
ensure that the RTSP server knows which connection that is valid for
a particular RTSP session, the RTSP agent should send a keep-alive
request, if no other request will be sent immeditely for that RTSP
session, for each RTSP session on the old connection. The keep-alive
request will normally be a GET_PARAMETER with a session header to
inform the server that this agent cares about this RTSP session.

3. I recommend that we make the separation for the 503 response proposed
above, i.e.: Session scope if session request, otherwise server scope
according to host name. Especially noting that a server scope 503
response does not prevent one from issue session related requests for
already established sessions.

Comments and feedback?
",<51C83A10.40601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-24 14:22:40
1291,MMusic,53,32,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1292,MMusic,53,33,"InformationProviding,ExtensionOfPrevious,InformationProviding",32,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-22.txt
Pages           : 282
Date            : 2009-07-13",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1293,MMusic,53,34,"InformationProviding,ExtensionOfPrevious,InformationProviding",33,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1294,MMusic,53,35,"InformationProviding,ExtensionOfPrevious,InformationProviding",34,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1295,MMusic,53,36,"InformationProviding,ExtensionOfPrevious,InformationProviding",35,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-22.txt",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1296,MMusic,53,37,"InformationProviding,ExtensionOfPrevious,InformationProviding",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1297,MMusic,53,38,"ExtensionOfPrevious,ContextSetting,InformationProviding",37,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20090713164502.1FF803A6E6D@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-07-13 09:45:02
1298,MMusic,53,40,"Social,InformationProviding",,-1,Hi.,<1FEB9B9F2EC38343955D02B2AE86AACB01332CA3@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-28 11:57:40
1299,MMusic,53,101,"ClarificationElicitation,InformationProviding,ContextSetting,Question,InformationProviding",36,-1,"
I've got a question regarding ANNOUNCE and PLAY_NOTIFY. What is the relation between ANNOUNCE,  as per http://tools.ietf.org/id/draft-stiemerling-rtsp-announce-01.txt, and  PLAY_NOTIFY specified in this draft? They have something in common, but ANNOUNCE is much more ellaborated.",<1FEB9B9F2EC38343955D02B2AE86AACB01332CA3@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-28 11:57:40
1300,MMusic,53,102,"InformationSeeking,ExtensionOfPrevious,Question",101,-1,"
Are there plans to merge the two or replace one for the other?",<1FEB9B9F2EC38343955D02B2AE86AACB01332CA3@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-28 11:57:40
1301,MMusic,53,132,"InformationProviding,Answer,InformationProviding,Answer",102,102,"
PLAY_NOTIFY is based on the Announce draft. The base spec defines the
parts it needs for the defined media control. Additional indications for
reasons to deliver failures etc are not defined. However, note that the
play_notify with end-of-stream message do include error codes for why
delivery was cancelled in the ""Request-Status"" header.
",<4A6EF1CB.5080502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-28 14:40:43
1302,MMusic,53,135,"Social,InformationProviding",,-1,Hi Magnus.,<1FEB9B9F2EC38343955D02B2AE86AACB01332D1B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-29 08:55:59
1303,MMusic,53,189,"Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,UnderstandingNegative",132,-1,"
Still one thing is not clear to me: is the method PLAY_NOTIFY itself going to be kept in 2.0 as is or will it be extended with what's in the ANNOUNCE draft (and so deprecate it)? It would seem to me that if PLAY_NOTIFY and ANNOUNCE address the same functionality and have already some codes in common, like end-of-stream, so the rest of codes could also be added to it (?)",<1FEB9B9F2EC38343955D02B2AE86AACB01332D1B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-29 08:55:59
1304,MMusic,53,258,"InformationProviding,NeutralResponse,InformationProviding",189,-1,"FWIW, a lot of STB's and VoD servers use the codes and syntax
specified in draft-stiemerling-rtsp-announce-01 with RTSP 1.0.",<57a9e15d0907290815q1a5801e5r801573b13f67b13f@mail.gmail.com>,alex.giladi@gmail.com,0.0,0,48,2009-07-29 10:15:39
1305,MMusic,53,261,InformationProviding,,-1,"Alex,",<1FEB9B9F2EC38343955D02B2AE86AACB01332DEB@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-30 12:30:58
1306,MMusic,53,367,"Question,Thanking,Question,Thanking",258,-1,"
Thanks for the info. I assume these servers are in walled garden environments?",<1FEB9B9F2EC38343955D02B2AE86AACB01332DEB@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-30 12:30:58
1307,MMusic,53,405,"Question,InformationProviding,Answer,ContextSetting,Social,Question,InformationProviding,Answer",189,189,"
Hi Jose,

Lets go look at the history from RTSP 1.0 to today for RTSP 2.0.
Announce was removed early in the update history due to uncertanties in
the semantics. Primarily intended to upload session description with
record. As record was removed, announce also disappeard.

Later there was these suggestions for announce as in the draft. This was
not accepted in full, but only the parts that the RTSP 2.0 core
specification do needs. Some things was modified in how they work. For
example error codes for the PLAY request can be included in
Request-Status header in a PLAY_NOTIFY request. Thus a number of the
Notice in the document are covered.

Thus a question to you, which from the ANNOUNCE draft do think needs to
be added to the RTSP core in some way?
",<4A70686A.7000005@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-29 17:19:06
1308,MMusic,53,479,"ContextSetting,InformationProviding",405,-1,"Magnus,

Inline...",<1FEB9B9F2EC38343955D02B2AE86AACB01332DEA@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-30 12:29:33
1309,MMusic,53,481,"NeutralResponse,ContextSetting,Thanking,InformationProviding,Thanking",405,405,"
Ok, I was unaware how some of ANNOUNCE got into the base spec. Thanks for that.
",<1FEB9B9F2EC38343955D02B2AE86AACB01332DEA@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-30 12:29:33
1310,MMusic,53,483,"InformationProviding,Answer,ContextSetting,InformationProviding,Answer",405,405,"
I thought of beginning-of-stream but I've been told by your colleague Jan Lindquist that this is already possible with the functionality in RTSP 2.0.
",<1FEB9B9F2EC38343955D02B2AE86AACB01332DEA@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-07-30 12:29:33
1311,MMusic,55,32,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1312,MMusic,55,33,"InformationProviding,ExtensionOfPrevious,InformationProviding",32,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-20.txt
Pages           : 284
Date            : 2009-03-09",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1313,MMusic,55,34,"InformationProviding,ExtensionOfPrevious,InformationProviding",33,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1314,MMusic,55,35,"InformationProviding,ExtensionOfPrevious,InformationProviding",34,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1315,MMusic,55,36,"InformationProviding,ExtensionOfPrevious,InformationProviding",35,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-20.txt",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1316,MMusic,55,37,"InformationProviding,ExtensionOfPrevious,InformationProviding",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1317,MMusic,55,38,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",37,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20090309163001.AFAE53A6C9F@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-03-09 09:30:01
1318,MMusic,55,40,"Social,Social",,-1,"Hi,",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1319,MMusic,55,109,"InformationProviding,ContextSetting,InformationProviding,StateDecision",32,-1,"
Martin and I have been working hard on this new revision. There are
proposals for all known issues. This has resulted in quite a lot of new
text, 35 pages actually. What we failed to do was a proper consistency
review. That we will work on that next.",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1320,MMusic,55,110,"InformationProviding,ExtensionOfPrevious,InformationProviding",109,-1,"
The diff is large, an may actually not be so useful due to a lot of
small changes or reorganization of sections etc:
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rfc2326bis/draft-ietf-mmusic-rfc2326bis-20-from-19.diff.html",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1321,MMusic,55,111,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",110,-1,"
I hope people can review the new draft and provide feedback on anything:",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1322,MMusic,55,112,"ExtensionOfPrevious,ContextSetting,StateDecision,Question,InformationProviding",111,-1,"
- The new proposals
- Found inconsistencies
- Things that still are not clear.
- If there are any feature that absolutely must be in the core spec?
This will be your last chance to raise them.",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1323,MMusic,55,113,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",112,-1,"
We will have agenda time on SFO. To have any discussion there we need to
know what you see as issues that needs to discuss. So please send
feedback to the list.",<49B627EE.70506@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-10 09:42:22
1324,MMusic,57,311,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social",,-1,"Enclosed are draft minutes from MMUSIC in San Francisco. These need to be
submitted by tomorrow (Monday 14th), so please send any comments quickly.
Copies of the minutes and presentation materials are available at
http://www.dmn.tzi.org/ietf/mmusic/",<200304132214.h3DMEPOJ004578@purple.nge.isi.edu>,csp@csperkins.org,0.0,0,2,2003-04-13 18:14:25
1325,MMusic,59,25,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,Question,InformationProviding",,-1,"Hi this is my first time posting here.  I have a basic question about
how a RTSP server should handled a connect and disconnect for what I am
calling the control channel (connection or transport). The control
channel (please correct me) is what sends the DESCRIBE, SETUP, OPTIONS,
PLAY commands to the RTSP SERVER.",<53223DAA.4040107@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-13 17:22:18
1326,MMusic,59,26,"InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",25,-1,"
Should a server treat the first DESCRIBE connection as its session. So
in the case where a socket connects to a RTSP server and sends a
DESCRIBE, is disconnected either by the client or some failure on the
server should the following SETUP succeed?",<53223DAA.4040107@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-13 17:22:18
1327,MMusic,59,27,"Question,ExtensionOfPrevious,Question,InformationProviding",26,-1,"
Also if using a RTSP Proxy and in the same scenario, but after the
DESCRIBE and closing of the socket a new socket is open to send an
OPTIONS (for keepalive) should the following SETUP succeed?",<53223DAA.4040107@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-13 17:22:18
1328,MMusic,59,28,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",27,-1,"
From what I understood from the RFC2326 Section 1.7 RTSP State, it
should not matter how many connections are used to control the RTSP Stream.",<53223DAA.4040107@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-13 17:22:18
1329,MMusic,59,29,"InformationProviding,ExtensionOfPrevious,InformationProviding",28,-1,"
1. Control Socket is not prevent a client from connecting and
disconnecting to send Transport commands.
2. The keep-alive for a session should not start until a SETUP command,
which can optional report the timeout for the session.",<53223DAA.4040107@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-13 17:22:18
1330,MMusic,59,89,"InformationProviding,Answer,InformationProviding,Answer,ProposeAction",26,26,"
No, DESCRIBE is a state less operation. If one needs a linkage between
the Describe response body and the setup, then one should use etags and
conditional requests to ensure that one is establishing the session with
a relevant session description.
",<5322D749.8020306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-03-14 11:17:45
1331,MMusic,59,91,"Answer,Agreement,InformationProviding,Answer",27,27,"
Yes the SETUP should succeed if otherwise valid.
",<5322D749.8020306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-03-14 11:17:45
1332,MMusic,59,93,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction,UnderstandingNegative",29,29,"
I am uncertain what you mean with the Control socket, if you means the
Socket the server listens to incoming TCP connection establishments and
their data, it needs to be accepting those comming and going.
",<5322D749.8020306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-03-14 11:17:45
1333,MMusic,59,95,"InformationProviding,Agreement,ProposeAction,InformationProviding,NeutralResponse",29,29,"
Exact, the keep-alive is associated with the RTSP session, not the
signalling connection used to send RTSP requests and response between
the server and client.

You might find RTSP 2.0's text on this being clearer:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/
",<5322D749.8020306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-03-14 11:17:45
1334,MMusic,59,98,"Social,Social",,-1,"Hi Magnus,",<532490B8.7020208@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-15 11:41:12
1335,MMusic,59,175,"InformationProviding,ContextSetting,Thanking,InformationProviding,Thanking",93,-1,"
Thanks for your response, to be clear when I was referring to a Control
Socket I mean the connection that sends commands such as the DESCRIBE,
OPTIONS, SETUP.  So to restate, it should not matter if a connection for
the transports comes or goes to server.  For example if a server flow to
a client is:",<532490B8.7020208@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-15 11:41:12
1336,MMusic,59,176,"InformationSeeking,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",175,-1,"
C->S - Send DESCRIBE Command, C gets 200 response from S.
Close connection and start new connection
C->S - Send OPTIONS command, C gets 200 response from S.
Close connection and start new connection
C->S - Send SETUP command, C gets ??? response from S.",<532490B8.7020208@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-15 11:41:12
1337,MMusic,59,177,"InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",176,-1,"
So at the SETUP the response should be 200? or fail (400)?  I'm trying
to clear up an issue I have with a vendors RTSP Server implementation
and would like to know if the sequence above should work to a RTSP
Server.  Based on the Section 1.1 and 1.7 seems the above should work.
The only issue would be after the SETUP the session id needs to
accompany commands that follow?",<532490B8.7020208@vivint.com>,cmatsuura@vivint.com,0.0,0,65,2014-03-15 11:41:12
1338,MMusic,59,280,"Answer,Agreement,InformationProviding,Answer",177,177,"
Yes, according to my interpretation of RFC 2326 that should be
completely valid and the SETUP request result in a 200 OK with a session
ID that is later used to reference that session.

/Magnus
",<5326F28C.4070504@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-03-17 14:03:08
1339,MMusic,60,49,"InformationSeeking,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",,-1,"Here's an initial draft agenda for MMUSIC at the 63rd IETF. Comments,
corrections or additions to the chairs please.",<623FC414-B421-4B16-91DD-279D5D2C1CE6@csperkins.org>,csp@csperkins.org,0.0,0,2,2005-07-19 13:35:25
1340,MMusic,60,52,"ContextSetting,InformationProviding",49,-1,Multiparty Multimedia Session Control (MMUSIC) Working Group,<3F9A9C11-6346-475F-8542-10217B8471EE@csperkins.org>,csp@csperkins.org,0.0,0,2,2005-07-25 15:40:55
1341,MMusic,60,94,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",52,-1,"
CHAIRS: Joerg Ott     <jo@acm.org>",<3F9A9C11-6346-475F-8542-10217B8471EE@csperkins.org>,csp@csperkins.org,0.0,0,2,2005-07-25 15:40:55
1342,MMusic,60,136,"ContextSetting,InformationProviding",52,-1,"minor point of clarification:
",<42E508C8.2080502@cisco.com>,jdrosen@cisco.com,0.0,0,1,2005-07-25 11:44:08
1343,MMusic,60,139,"InformationProviding,ExtensionOfPrevious,InformationProviding",136,-1,"
The draft is -05:

http://www.ietf.org/internet-drafts/draft-ietf-mmusic-ice-05.txt
",<42E508C8.2080502@cisco.com>,jdrosen@cisco.com,0.0,0,1,2005-07-25 11:44:08
1344,MMusic,60,142,"InformationProviding,ContextSetting,InformationProviding",49,-1,Now also available (with pointers to all drafts) at,<200507252050.j6PKoBuM016471@rubin.informatik.uni-bremen.de>,jo@informatik.uni-bremen.de,0.0,0,5,2005-07-25 22:50:11
1345,MMusic,60,198,"InformationProviding,ExtensionOfPrevious,InformationProviding",142,-1,"
http://www.dmn.tzi.org/ietf/mmusic/",<200507252050.j6PKoBuM016471@rubin.informatik.uni-bremen.de>,jo@informatik.uni-bremen.de,0.0,0,5,2005-07-25 22:50:11
1346,MMusic,60,199,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting",198,-1,"
Also note the minor correction below.",<200507252050.j6PKoBuM016471@rubin.informatik.uni-bremen.de>,jo@informatik.uni-bremen.de,0.0,0,5,2005-07-25 22:50:11
1347,MMusic,62,0,InformationProviding,,-1,"WG,",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1348,MMusic,62,99,"InformationProviding,ContextSetting,InformationProviding",,-1,"
In the Authors48 review of
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ I have
come to look at the authentication mechanisms used in RTSP 2.0. These
are basically the HTTP mechanism with some clarifications that are based
on the ones for SIP.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1349,MMusic,62,100,"InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,InformationProviding,StateDecision",99,-1,"
The draft that was approved by IESG more than 2 years ago pointed to RFC
2617. However, since then the updated HTTP specification has been
approved RFC7230 to RFC7235. So part of preparation for publication we
have updated references to the current specifications.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1350,MMusic,62,101,"InformationProviding,ExtensionOfPrevious,InformationProviding",100,-1,"
This has had relative minor impact as all the headers etc are copied and
authoritatively specified in the RTSP specification. Then there are
security considerations that are referencing issues and threats and
remedies that are generally applicable in the new specification. This
required some work, and even leaving some references to the obsolete one
as the new one lacks corresponding text. However, this is not protocol
specifications.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1351,MMusic,62,102,"InformationProviding,ExtensionOfPrevious,StateDecision,InformationProviding,StateDecision",101,-1,"
However, the references to RFC2617 they are however protocol details.
RFC2617 has been changed to consist of a framework document (RFC7235)
and the basic (RFC7617) and digest (RFC7616) authentication schemes.
This will have impact on the actual protocol implementations.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1352,MMusic,62,103,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting",102,-1,"
To give you some understanding of what has changed I have below included
the three RFCs changes section. I think using the latest version rather
than pointing to the obsoleted versions will mean an improvement in
clarity, and also modern algorithms. I note that the RTSP 2.0
specification already mandates support of SHA-256 in the
Accept-Credentials header.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1353,MMusic,62,104,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",103,-1,"
However, if someone has concerns over these changes, please raise them now.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1354,MMusic,62,105,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",104,-1,"
RFC 7235:
Appendix A.  Changes from RFCs 2616 and 2617",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1355,MMusic,62,106,"InformationProviding,ExtensionOfPrevious,InformationProviding",105,-1,"
The framework for HTTP Authentication is now defined by this
document, rather than RFC 2617.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1356,MMusic,62,107,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",105,-1,"
The ""realm"" parameter is no longer always required on challenges;
consequently, the ABNF allows challenges without any auth parameters.
(Section 2)",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1357,MMusic,62,108,"InformationProviding,ExtensionOfPrevious,InformationProviding",105,-1,"
The ""token68"" alternative to auth-param lists has been added for
consistency with legacy authentication schemes such as ""Basic"".
(Section 2)",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1358,MMusic,62,109,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding","105,108",-1,"
This specification introduces the Authentication Scheme Registry,
along with considerations for new authentication schemes.
(Section 5.1)",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1359,MMusic,62,110,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",104,-1,"
RFC 7616:
Appendix A.  Changes from RFC 2617",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1360,MMusic,62,111,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",110,-1,"
This document introduces the following changes:",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1361,MMusic,62,112,"InformationProviding,ExtensionOfPrevious,InformationProviding",111,-1,"
o  Adds support for two new algorithms, SHA2-256 as mandatory and
SHA2-512/256 as a backup, and defines the proper algorithm
negotiation.  The document keeps the MD5 algorithm support but
only for backward compatibility.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1362,MMusic,62,113,"InformationProviding,ExtensionOfPrevious,InformationProviding",111,-1,"
o  Introduces the username hashing capability and the parameter
associated with that, mainly for privacy reasons.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1363,MMusic,62,114,"InformationProviding,ExtensionOfPrevious,InformationProviding",111,-1,"
o  Adds various internationalization considerations that impact the
A1 calculation and username and password encoding.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1364,MMusic,62,115,"InformationProviding,ExtensionOfPrevious,InformationProviding",111,-1,"
o  Introduces a new IANA registry, ""Hash Algorithms for HTTP Digest
Authentication"", that lists the hash algorithms that can be used
in HTTP Digest Authentication.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1365,MMusic,62,116,"InformationProviding,ExtensionOfPrevious,InformationProviding",111,-1,"
o  Deprecates backward compatibility with RFC 2069.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1366,MMusic,62,117,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",104,-1,"
RFC 7617:
Appendix A.  Changes from RFC 2617",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1367,MMusic,62,118,"InformationProviding,ExtensionOfPrevious,ClarificationElicitation,StateDecision",117,-1,"
The scheme definition has been rewritten to be consistent with newer
specifications such as [RFC7235].",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1368,MMusic,62,119,"InformationProviding,ExtensionOfPrevious,InformationProviding",117,-1,"
The new authentication parameter 'charset' has been added.  It is
purely advisory, so existing implementations do not need to change,
unless they want to take advantage of the additional information that
previously wasn't available.",<63711049-a3e7-4e62-4bb4-f59560d07296@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-13 15:31:40
1369,MMusic,62,122,"Social,Social",,-1,"Hi,",<7b86a690-c83d-f7f0-ddbb-596ffaecd804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-14 16:22:18
1370,MMusic,62,243,"InformationProviding,InformationProviding,StateDecision",99,-1,"
I have implemented this in the specification text after having reviewed
the new specifications in detail.",<7b86a690-c83d-f7f0-ddbb-596ffaecd804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-14 16:22:18
1371,MMusic,62,244,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",243,-1,"
So this means that SHA2-256 is the mandatory hashing algorithm, rather
than MD5. As RTSP 2.0 already requires support of SHA2-256 the extra
implementation impact is minimal.",<7b86a690-c83d-f7f0-ddbb-596ffaecd804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-14 16:22:18
1372,MMusic,62,245,"InformationProviding,ExtensionOfPrevious,StateDecision,InformationProviding,StateDecision",244,-1,"
I have also chosen to attempt to point even more on the new RFCs 7235,
7615, 7616, and 7617. This includes also the ABNF of the field values.
This is so that RTSP 2.0 will use HTTP authentication as defined, and
not its own variant.",<7b86a690-c83d-f7f0-ddbb-596ffaecd804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-14 16:22:18
1373,MMusic,64,48,"InformationProviding,Agreement,ProposeAction,Social,InformationProviding,ProposeAction",,-1,"Hi,
Yes. However, I found many players and servers couldn't handle some strings like ""client_port=3122;server=12100"".
Therefore, your application is good to have RTP/RTCP port pairs in the SETUP process. If so, supporting both RTP/RTCP seems not much difficult.",<FE6A9D3F2979884280CE0F5F5185517B1921FB@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-01 17:48:09
1374,MMusic,64,49,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
As for sync, you can use RTP-Info and Range in RTSP. If it is live, although it is depends on the implementation of the peer, I receommend you support RTCP as well.",<FE6A9D3F2979884280CE0F5F5185517B1921FB@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-01 17:48:09
1375,MMusic,64,128,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,Thanking,Question,InformationProviding,ProposeAction,Thanking",48,-1,"Hi,

Thanks for all these replies and suggestions.  I have developed RTP and RTCP but, due to some technical reasons I commented RTCP code as previously my application demanded only AUDIO.  And now I am about to implement even VIDEO.  For this I suppose it’s better to implement RTCP rather than going for other synchronization methods?? Can any one comment on this?  As per my understanding its better to use RTCP with RTP for synchronization of video and audio packets!!
",<E1HXwqi-0006rV-Ei@megatron.ietf.org>,annasagaram.vamsi@aftek.com,0.0,0,62,2007-04-01 15:29:18
1376,MMusic,64,129,"Social,Thanking,InformationProviding,Thanking",,-1,"
Thanks & regards,

Vamsi
",<E1HXwqi-0006rV-Ei@megatron.ietf.org>,annasagaram.vamsi@aftek.com,0.0,0,62,2007-04-01 15:29:18
1377,MMusic,64,131,"InformationProviding,ProposeAction",,-1,"
Hi,

Yes. However, I found many players and servers couldn't handle some strings like ""client_port=3122;server=12100"".

Therefore, your application is good to have RTP/RTCP port pairs in the SETUP process. If so, supporting both RTP/RTCP seems not much difficult.
",<E1HXwqi-0006rV-Ei@megatron.ietf.org>,annasagaram.vamsi@aftek.com,0.0,0,62,2007-04-01 15:29:18
1378,MMusic,64,132,"InformationProviding,ProposeAction",,-1,"
As for sync, you can use RTP-Info and Range in RTSP. If it is live, although it is depends on the implementation of the peer, I receommend you support RTCP as well.
",<E1HXwqi-0006rV-Ei@megatron.ietf.org>,annasagaram.vamsi@aftek.com,0.0,0,62,2007-04-01 15:29:18
1379,MMusic,64,149,"InformationProviding,Disagreement,InformationProviding,Disagreement,ProposeAction",49,49,"
No, this is appears to be a common misconception.  Although - when
used in combination with the first RTCP ""SR"" report - the ""RTP-Info""
and ""Range"" headers can be used to generate an offset between
presentation time and ""NPT"" (Normal Play Time), the ""RTP-Info"" and
""Range"" headers *alone* do not guarantee that you can get times (for
audio and video) that remain synchronized *forever*.  For that, you
need synchronized presentation times provided by RTCP.
",<f06240802c2357566a067@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2007-04-01 07:53:40
1380,MMusic,64,152,"Social,Social",,-1,"Hi,",<FE6A9D3F2979884280CE0F5F5185517B480200@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 07:04:32
1381,MMusic,64,199,"InformationSeeking,ProposeAction,Question",149,-1,"
And could you explain more in detail?",<FE6A9D3F2979884280CE0F5F5185517B480200@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 07:04:32
1382,MMusic,64,200,"InformationSeeking,ExtensionOfPrevious,ProposeAction,InformationProviding",199,-1,"
I would appreciate if you give us an example.",<FE6A9D3F2979884280CE0F5F5185517B480200@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 07:04:32
1383,MMusic,64,201,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",200,-1,"
If there is a common misconception happening again and again, IMO, the
notion with enough examples should be into RTSP specification.",<FE6A9D3F2979884280CE0F5F5185517B480200@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 07:04:32
1384,MMusic,64,252,"InformationProviding,NeutralResponse,ProposeAction,StateDecision,InformationProviding,NeutralResponse,ProposeAction,StateDecision",201,201,"
Okay, we will log a request to clarify that RTP-Info only provides for
initial sync and that RTCP is needed for maintaining sync in the case of
clock drift. But there is much more on timestamp handling in
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-14
than what is in RFC 2326.

I could also recommend looking at the How To write RTP payload formats
that has some discussion on the RTCP synch mechanism or Colin Perkins
book on RTP.
http://tools.ietf.org/html/draft-ietf-avt-rtp-howto-01

There is also need to have RTCP for synch in cases such as multiple
sources (SSRCs) and live sessions. In addition RTCP is needed for its
transport monitoring purpose. The sender can't do any type of adaptation
or avoid causing long term congestion unless RTCP is used.
",<4610AB4C.1080807@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-04-02 09:05:48
1385,MMusic,64,281,"InformationProviding,NeutralResponse",252,252,of,<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1386,MMusic,64,289,"Agreement,NeutralResponse,ClarificationElicitation,Agreement",252,252,"Very nice references. Of course, Colin's is bible.",<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1387,MMusic,64,294,InformationProviding,252,252,adaptation,<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1388,MMusic,64,309,"InformationSeeking,InformationProviding,Agreement,ContextSetting,ProposeAction,Social,Thanking,Question,InformationProviding,ProposeAction",252,-1,"Dear Magnus,
Yes, we need. And thanks to this group, people could learn many things
about RTP timestamp as described in the Appendix B of rfc2326bis. Now I
found most major players have been changed to follow it; it was not in
the past.

As for the subject, I would appreciate if we add more text about ""why""
in future; I found one sentence from rfc2326bis-04 but failed to find
why.
(page92)

I felt that Ross knows some empirical knowledge. So, I asked him.
Ross, do you mind if you share your experience with us?
",<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1389,MMusic,64,310,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",309,-1,"session is enough long, the additional work, checking RTCP would not be
necessary to our client codes.

I think Ross mentioned the live RTSP session, in which we need to take
into account more. I would like to learn :->

And inline:
",<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1390,MMusic,64,314,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",252,252,"Sometimes, non-functional requirement like simplicity and modifiability
is more important than additional features. IMHO, thereby allowing an
applications using just RTP without RTCP would be meaningful. At least,
it looks like optional in rfc2326.
",<FE6A9D3F2979884280CE0F5F5185517B48023E@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2007-04-02 19:10:57
1391,MMusic,64,382,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",252,-1,"If we are going to add some language, I'd like to make sure we make a
clear point that RTCP provides the only standard way to get
*visibility* into the playback behavior (ie, packet loss rate etc) at
the end points.  Even if you don't plan to actively *use* that data
for stream control, it's very important to have that data for some
applications - and RTCP provides the standard way to get it.  I have
to explain this constantly to folks - more specific language about
""Why RTCP?"" would be a good thing.",<31d1be720704020407j1c28deck28568be5aae13e58@mail.gmail.com>,gherlein@herlein.com,0.0,0,18,2007-04-02 04:07:58
1392,MMusic,65,0,"Social,Social",,-1,"Hi,",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1393,MMusic,65,57,"ContextSetting,Apologising,InformationProviding,Apologising",,-1,"
Sorry being this late. Here is the proposed agenda for tomorrow's telecon.",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1394,MMusic,65,58,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",57,-1,"
1. Follow up:
- draft-ietf-mmusic-rfc2326bis-03.txt
- Interleave: Aravind to write text and post to MMUSIC to address
all four bugs.
- Everybody reads on offer/answer (RFC 3264) and meet in next IETF
meeting to take next step.",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1395,MMusic,65,59,"InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",57,-1,"
2. What to discuss during the IETF and the MMUSIC session.
-  What to take up to the whole WG:
+ The last changes
+ Open issues that need input?
- Off line session
+ Offer Answer for RTSP?
+
3. New Issues:
* Unclarities when doing resetup
http://rtsp.org/bug513737",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1396,MMusic,65,60,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",59,-1,"
* Conference header underspecified
http://rtsp.org/bug539040",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1397,MMusic,65,61,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",59,-1,"
* ""Clarify Range Where t0 <= t1"" & ""How to use Range when Scale is
negative""
http://rtsp.org/bug533691
http://rtsp.org/bug513880",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1398,MMusic,65,62,"InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",59,-1,"
* ""When can REDIRECT be received?"",
http://rtsp.org/bug556061",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1399,MMusic,65,63,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",59,-1,"
* ""Client issues PAUSE while server ready""
http://rtsp.org/bug556295",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1400,MMusic,65,64,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",57,-1,"
Next meeting:
Proposal: 2nd April.",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1401,MMusic,65,65,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",57,-1,"
If you would like to participate please send a mail and you will receive
the contact information.",<3E64BFE8.3010406@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:02:00
1402,MMusic,69,32,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1403,MMusic,69,33,"InformationProviding,InformationProviding,ExtensionOfPrevious",32,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-23.txt
Pages           : 291
Date            : 2010-03-08",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1404,MMusic,69,34,"InformationProviding,InformationProviding,ExtensionOfPrevious",33,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1405,MMusic,69,35,"InformationProviding,InformationProviding,ExtensionOfPrevious",34,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1406,MMusic,69,36,"InformationProviding,InformationProviding,ExtensionOfPrevious",35,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-23.txt",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1407,MMusic,69,37,"InformationProviding,InformationProviding,ExtensionOfPrevious",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1408,MMusic,69,38,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",37,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20100308220002.41A713A69C6@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2010-03-08 14:00:02
1409,MMusic,69,40,"Social,Social",,-1,"Hi,",<4B961068.3000907@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-09 10:10:00
1410,MMusic,69,111,"InformationProviding,InformationProviding,ContextSetting",32,-1,"
This update intends to take care of all the remaining open issues. We
have also done a consistency check of the spec. Thus the amount of
changes in this one is fairly large. The side by side diff:",<4B961068.3000907@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-09 10:10:00
1411,MMusic,69,112,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",111,-1,"
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rfc2326bis/draft-ietf-mmusic-rfc2326bis-23-from-22.diff.html",<4B961068.3000907@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-09 10:10:00
1412,MMusic,69,113,"InformationProviding,StateDecision,InformationProviding,ExtensionOfPrevious",112,-1,"
Will show that the changes are from high to low. Editorial, naming,
change of header classifications, corrected or changed RFC 2119 language
levels, corrected examples and usage of the new test/example IP address
ranges, copying and adjusting more text from the HTTP spec, the
Conditional RAP policy for Seek-Style, proxy muxing, putting an upper
limit on a number of numerical values, updated the changes section.",<4B961068.3000907@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-09 10:10:00
1413,MMusic,69,114,"InformationProviding,ProposeAction,Apologising,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Apologising",113,-1,"
I am sorry that it has taken this long to get to this stage. But I think
the document is ready for a second WG last call. It is now your turn to
see if you think everything is in order or if we messed things up.",<4B961068.3000907@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-09 10:10:00
1414,MMusic,69,208,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social",114,-1,"This is to initiate a 4-week Working Group Last Call of draft-ietf-mmusic-rfc2326bis-23.txt.
The comment period will end Friday, April 23, 2010 at midnight US Pacific Time.
Please post all your comments to the list (spelling errors, minor suggested wording changes, technical issues, etc.). If you have read the document and believe it is good to go, please indicate so as well on the list.",<76AC5FEF83F1E64491446437EA81A61F7CD4E31134@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-26 15:58:11
1415,MMusic,69,209,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",208,-1,"
The document is somewhat large and we have started to seek reviewers willing to take a one or more sections at a time.  If you would like to volunteer, please send your name and the chapters you are willing to review to the WG chairs.",<76AC5FEF83F1E64491446437EA81A61F7CD4E31134@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-26 15:58:11
1416,MMusic,69,212,"Question,ClarificationElicitation",209,-1,"Is this still being reviewed to be draft standard, or will this version continue to be proposed standard?",<EDC0A1AE77C57744B664A310A0B23AE20D163DFD@FRMRSSXCHMBSC3.dc-m.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2010-03-27 04:25:05
1417,MMusic,69,347,"InformationProviding,Answer,ProposeAction,InformationSeeking,Answer,ProposeAction",212,212,"
The MMUSIC charter and the RTSP 2.0 milestone in particular allow for either DRAFT or Proposed Standard.
I would very much like to hear from the authors and WG participants on what the WG should shoot for.

My sense is that we should aim for Proposed Standard given the lack of RTSP 2.0 implementations but I could be wrong.

Jean-François",<76AC5FEF83F1E64491446437EA81A61F7CD4E3116E@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-28 23:40:24
1418,MMusic,69,349,"Social,Social",,-1,"Hi,",<4BB1BFA2.50602@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-30 11:08:50
1419,MMusic,69,387,"InformationProviding,ProposeAction,InformationProviding,Answer,InformationProviding,NeutralResponse","212,347",-1,"
This must go to Proposed standard. There is quite a lot of new things in
here so that a draft standard is not possible.",<4BB1BFA2.50602@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2010-03-30 11:08:50
1420,MMusic,69,390,"InformationProviding,NeutralResponse,NeutralResponse,ContextSetting",387,-1,"That is what I thought, but the last discussion I have recorded of status a considerable time ago said draft standard.",<EDC0A1AE77C57744B664A310A0B23AE20D1C7E35@FRMRSSXCHMBSC3.dc-m.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2010-03-30 13:00:55
1421,MMusic,69,450,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",390,-1,"
All WGLC should indicated the current intentded status of the draft.",<EDC0A1AE77C57744B664A310A0B23AE20D1C7E35@FRMRSSXCHMBSC3.dc-m.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2010-03-30 13:00:55
1422,MMusic,69,451,InformationProviding,,-1,"
Keith",<EDC0A1AE77C57744B664A310A0B23AE20D1C7E35@FRMRSSXCHMBSC3.dc-m.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2010-03-30 13:00:55
1423,MMusic,69,454,"InformationProviding,ContextSetting,ContextSetting",114,-1,Here's my first batch of remarks:,<4BAE17E5.1020501@googlemail.com>,wolfgang.beck01@googlemail.com,0.0,0,16,2010-03-27 07:36:21
1424,MMusic,69,456,InformationProviding,,-1,"Wolfgang,",<547F018265F92642B577B986577D671C01381B80@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-20 15:27:34
1425,MMusic,69,477,"InformationProviding,StateDecision,Thanking,ContextSetting,StateDecision,Thanking",454,-1,"
Thanks - I'm currently working through them and will come with specific points, if needed.",<547F018265F92642B577B986577D671C01381B80@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-20 15:27:34
1426,MMusic,69,480,InformationProviding,,-1,"Wolfgang, all,",<547F018265F92642B577B986577D671C0144BF03@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-17 15:17:35
1427,MMusic,69,903,"InformationProviding,ContextSetting,ContextSetting",454,-1,"
Here is are replies, all marked with [MS] (see below).",<547F018265F92642B577B986577D671C0144BF03@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-17 15:17:35
1428,MMusic,69,904,"Thanking,Thanking",454,-1,"
Thanks a lot for the detailed review!!",<547F018265F92642B577B986577D671C0144BF03@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-17 15:17:35
1429,MMusic,69,955,"InformationProviding,ProposeAction,NeutralResponse,ContextSetting,ProposeAction",968,-1,[PTT] I suppose you could add the following note to this paragraph:,<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1430,MMusic,69,963,"InformationProviding,ContextSetting,ContextSetting",903,-1,"A couple of remarks below, dealing with unreliable transport and the 503 response.
",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1431,MMusic,69,964,"Question,ContextSetting",,-1,"Martin Stiemerling wrote:
> Wolfgang, all,
> Here is are replies, all marked with [MS] (see below).
> Page 49 10.1 ""When RTSP messages are transmitted using reliable transport
> protocols.."" doesn't the previous section state that RTSP must use reliable
> transport?
> [MS] seems to be a left-over from RTSP 1.0. I discussed this text with Magnus
> some time ago and we agreed to keep this text - just for the case somebody in
> the future (not me or Magnus) will extend RTSP 2.0 with unreliable transport.
> [PTT] I wonder if we could simply change that ""When"" to a ""Since""? I would hope",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1432,MMusic,69,965,"InformationProviding,ProposeAction,InformationProviding,Answer,ProposeAction",964,-1,"that would provide a warning to someone who wishes to specify an unreliable
transport, that application-level acknowledgements may be required.
",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1433,MMusic,69,966,InformationProviding,,-1,"> 15.5.4 Response 503 has caused some headache in SIP. Some implementors tried
> the next IP address as returned in the DNS answer, some just gave up.
> [MS] Does SIP also use this mechanism (described in 15.5.4): ""If known, the
> length of the delay MAY be indicated in a Retry-After header. If no
> Retry-After is given, the client SHOULD handle the response as it would for a
> 500 response. """,<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1434,MMusic,69,967,"InformationProviding,InformationProviding,NeutralResponse",966,-1,"[PTT] SIP uses exactly this mechanism. RFC 5390 documents the problems they have
with it. A SIP overload control WG (SOC) was finally chartered earlier this
month to specify alternative controls.

It's possible that RTSP is different from SIP in terms of the RTSP network's
reaction to 503, but once you get proxies into the picture I wouldn't bet on it.
",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1435,MMusic,69,968,"InformationProviding,ContextSetting",,-1,"> ... Page 149 16.51 Timestamp
> [..] It also resolves retransmission ambiguities for unreliable transport of
> RTSP compare with 2. Protocol Overview [..] RTSP messages are sent over a
> reliable transport protocol
> [MS] left-over with a bet to the future that somebody will come up with
> unreliable transport ;)",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1436,MMusic,69,969,"InformationProviding,InformationProviding,ExtensionOfPrevious",955,-1,"
""Note that the present specification provides only for reliable transport of
RTSP messages. The Timestamp general-header is specified in case the protocol is
extended in the future to use unreliable transport.""
",<BLU0-SMTP2461D5CED228942F88C0F6D8E10@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-05-17 21:42:26
1437,MMusic,69,1066,"InformationProviding,Social",,-1,"Hi Tom, all,
",<547F018265F92642B577B986577D671C0144C872@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-27 10:24:05
1438,MMusic,69,1069,"InformationProviding,StateDecision,StateDecision",965,965,"
Changed to ""Since"".
",<547F018265F92642B577B986577D671C0144C872@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-27 10:24:05
1439,MMusic,69,1071,"InformationProviding,StateDecision,InformationProviding,ContextSetting,StateDecision",967,967,"
OK, I have added this to the issue tracker and will come back with a separate email about this.
(3007825, https://sourceforge.net/tracker/?func=detail&aid=3007825&group_id=23194&atid=377744)
",<547F018265F92642B577B986577D671C0144C872@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-27 10:24:05
1440,MMusic,69,1073,"InformationProviding,Agreement,StateDecision,Thanking,Agreement,StateDecision,Thanking",969,969,"
Yes, that is indeed a good text proposal. Added.

Thanks a lot!
",<547F018265F92642B577B986577D671C0144C872@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-27 10:24:05
1441,MMusic,69,1087,"ExtensionOfPrevious,ContextSetting",1368,-1,> quoted-string   =  ( DQ *qdtext DQ ),<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1442,MMusic,69,1101,"ExtensionOfPrevious,ContextSetting",1373,-1,> fraction         =  1*9DIGIT,<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1443,MMusic,69,1128,"ExtensionOfPrevious,ContextSetting",1377,-1,> mode-spec           = ( DQ mode *(COMMA mode) DQ ),<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1444,MMusic,69,1145,"ExtensionOfPrevious,ContextSetting",1380,-1,> [...] the server when sending a REDIRECT or TERMINATE request [...],<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1445,MMusic,69,1146,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",1145,-1,"I believe it should be written TEARDOWN, not TERMINATE.",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1446,MMusic,69,1175,"ExtensionOfPrevious,ContextSetting",1383,-1,"> [...] however, it is RECOMMENDED to start at 0.",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1447,MMusic,69,1176,"InformationProviding,ExtensionOfPrevious,ContextSetting",1175,-1,J.2.:,<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1448,MMusic,69,1177,"ExtensionOfPrevious,ContextSetting",1176,-1,> CSeq header [...] A Recommendation to start at 1 has also been added.,<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1449,MMusic,69,1367,"InformationProviding,StateDecision,InformationProviding,ContextSetting,StateDecision,Social",209,-1,"Hello!

This time I reviewed the syntax and examples first, with only quick
references to the text whenever I wasn't sure about the meaning of the
syntax.
I'm planning another go at the full text some other time.
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1450,MMusic,69,1368,"InformationProviding,ExtensionOfPrevious,ContextSetting",1367,-1,"
I) Simple findings in syntax

1. quoted-string",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1451,MMusic,69,1369,"Question,ClarificationElicitation,ExtensionOfPrevious",1087,-1,"
Why the extra parentheses?
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1452,MMusic,69,1370,"InformationProviding,ExtensionOfPrevious,ContextSetting",1367,-1,"
2. FLOAT",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1453,MMusic,69,1371,"ExtensionOfPrevious,ContextSetting",1370,-1,"> FLOAT            = [""-""] 1*12DIGIT [""."" 1*9DIGIT]
> POS-FLOAT        = 1*12DIGIT [""."" 1*9DIGIT]",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1454,MMusic,69,1372,"Question,InformationProviding,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",1371,-1,"
A float is a positive float with a prefix; How about
FLOAT            = [""-""] POS-FLOAT
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1455,MMusic,69,1373,"InformationProviding,ExtensionOfPrevious,ContextSetting",1367,-1,"
3. fraction",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1456,MMusic,69,1374,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1101,-1,"
is used only once for utc-clock, whereas npt-sec and npt-hhmmss write
its value explicitly. Suggestions:
a) (remove fraction)
utc-clock        =  6DIGIT [ ""."" 1*9DIGIT ]
b) (exclusive use of fraction)
npt-sec          =  1*19DIGIT [ ""."" fraction ]
npt-hhmmss       =  npt-hh "":"" npt-mm "":"" npt-ss [ ""."" fraction ]
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1457,MMusic,69,1375,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1367,-1,"
4. Connection and connection-token
According to 16.11., the connection-token ""close"" is defined for RTSP
2.0, but this string isn't included in syntax. Suggestion:
connection-token = ""close"" / token

(Note: The connection-tokens are not listed in chapter 22, IANA
considerations, though I don't know the rule when some extensible tokens
shall be listed)
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1458,MMusic,69,1376,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1367,-1,"
5. Timestamp:
The LWS should be part of the optional delay; Suggestion:
Timestamp        =  ""Timestamp"" HCOLON timestamp-value [LWS delay]
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1459,MMusic,69,1377,"InformationProviding,ExtensionOfPrevious,ContextSetting",1367,-1,"
6. mode-spec",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1460,MMusic,69,1378,"Question,InformationProviding,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction",1128,-1,"
Similar as above, why the extra parentheses?
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1461,MMusic,69,1379,"Question,InformationProviding,Question,ExtensionOfPrevious,ContextSetting,ProposeAction",1367,-1,"
7. SDP, control-attribute
CRLF is missing at the end, suggestion:
control-attribute   =  ""a=control:"" *SP RTSP-REQ-Ref CRLF

(Question: Why is SP explicitly permitted - or /not/ for the other two
attributes?)
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1462,MMusic,69,1380,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious,ContextSetting",1367,-1,"
II) Other findings:

1. Terminate-Reason
See 16.50.:",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1463,MMusic,69,1381,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1380,-1,"
2. Header syntax:
User-Agent is still only a request-header and Server only a
response-header. What may the respective agents send for the PLAY_NOTIFY
and REDIRECT exchanges? I don't think the server should send User-Agent
and the client Server.
I would even go as far as to drop the ABNF separation of request-header
and response-header and put them all into general-header. Tables 10-12
already list in detail which header may appear in which message.
Note: All the examples with PLAY_NOTIFY and REDIRECT have the client
send User-Agent in the response, violating the current classification of
response-header - a pedantic parser would treat them as extension-header
now.

(One step even further would be too drastic I guess and not desired:
unify User-Agent and Server and simply call the header ""Agent"")
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1464,MMusic,69,1382,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1380,-1,"
3. Accept-Language
The syntax still allows this header to be empty; We had the mail
exchange about that last year, resulting in agreement to disallow the
empty header.
(http://www.ietf.org/mail-archive/web/mmusic/current/msg07799.html)
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1465,MMusic,69,1383,"InformationProviding,ExtensionOfPrevious,ContextSetting",1380,-1,"
4. CSeq
16.19.:",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1466,MMusic,69,1384,"Question,InformationProviding,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",1177,-1,"
Quite contradicting :) Or will the final detailed list of changes be
finalized at the very last minute?
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1467,MMusic,69,1385,"Question,InformationProviding,ProposeAction,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1367,-1,"
III) Examples:

13.4.1.
The request CSeq 836 misses a CRLF between Range and User-Agent.

19.3.2.:
- The second request case the same CSeq number (or is it a valid
retransmission according to 16.19.?)
- Also, the second line of the Transport header is not properly SWS
delimited from its previous line - both in the request and the response.

C.2.2.:
The response to CSeq 2 has some malformed Address/Port string in the
second src_addr field.

Many responses have the Server header specify the supposed version as
product, not product-version (it should be PhonyServer/x.y - '/' is
often missing)
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1468,MMusic,69,1386,"Question,InformationProviding,UnderstandingNegative,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",1367,-1,"
IV) Possible Nit-Picking (can be ignored if not relevant - or I didn't
understand it)

16.50. Terminate-Reason (user-msg)
If I understand correctly, in case of Server-Admin reason, user-msg is
something the server administrator wants to to tell the current clients
why the session will be dropped. Such as ""I really need to change that
memory now, sorry!"". How does this work in relation to Accept-Language,
where 16.4. specifies it being relevant for reason phrases?
Or, is it expected that the admin chooses from a list of reason codes,
behind which the server has a lookup table for the respective languages
it supports?
",<4BB777B2.5050800@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2010-04-03 19:15:30
1469,MMusic,69,1615,"InformationProviding,Thanking,ContextSetting,Social,Thanking",1367,-1,"Hi Christian,

Thanks for your review and my replies are below:
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1470,MMusic,69,1617,"InformationProviding,Answer,InformationProviding,Answer,ContextSetting",1369,1087,"
Good question, but seems to be in line with RFC 5234, Section 3.5, at the end:
""The sequence group notation is also used within free text to set off an element sequence from the prose.""
the brackets is denoting the sequence group.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1471,MMusic,69,1619,"Agreement,StateDecision,Agreement,StateDecision",1372,1372,"
True. Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1472,MMusic,69,1621,"InformationProviding,Agreement,StateDecision,NeutralResponse,StateDecision",1374,1374,"
I would prefer a). Changed to this in the draft.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1473,MMusic,69,1623,"InformationProviding,Agreement,StateDecision,Agreement,StateDecision",1375,1375,"
Yes, that is indeed missing. fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1474,MMusic,69,1625,"StateDecision,Agreement,StateDecision",1376,1376,"
Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1475,MMusic,69,1627,"InformationProviding,ProposeAction,Answer,ContextSetting",1378,1378,"
see above, your very first point.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1476,MMusic,69,1629,"InformationProviding,StateDecision,StateDecision",1379,1379,"
Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1477,MMusic,69,1631,"InformationProviding,Answer,Answer",1379,1379,"
You can have multiple RTSP-REQ-Ref and they need to be separated by SP.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1478,MMusic,69,1633,"Agreement,StateDecision,Agreement,StateDecision",1146,1146,"
Yep – fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1479,MMusic,69,1635,"InformationProviding,NeutralResponse,StateDecision",1381,1381,"
I've just sent an extra email to discuss this with the WG.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1480,MMusic,69,1637,"InformationProviding,StateDecision,InformationProviding,StateDecision",1382,1382,"
Fixed.
Accept-Language   =  ""Accept-Language"" HCOLON
language *(COMMA language)
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1481,MMusic,69,1639,"InformationProviding,Answer,StateDecision,Answer,StateDecision",1384,1384,"
Fixed in J.2, as this is the informative part and not 16.19.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1482,MMusic,69,1641,"InformationProviding,StateDecision,ContextSetting,StateDecision",1385,1385,"
Fixed, as of Wolfgang's email.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1483,MMusic,69,1643,"InformationProviding,Answer,StateDecision,InformationProviding,Answer,StateDecision",1385,1385,"
Nope, 2nd request should carry a new CSeq.

Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1484,MMusic,69,1645,"InformationProviding,StateDecision,StateDecision",1385,963,"
Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1485,MMusic,69,1647,"InformationProviding,StateDecision,StateDecision",1385,1385,"
Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1486,MMusic,69,1649,"InformationProviding,StateDecision,StateDecision",1385,1385,"
Fixed.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1487,MMusic,69,1651,"InformationProviding,Answer,Agreement,InformationProviding,Answer,Agreement",1386,1386,"
It's true that Accept-Language applies to the reason phrases, but how this is implemented is outside the RTSP2.0 protocol specification.
",<547F018265F92642B577B986577D671C0144C1D4@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-05-19 15:20:38
1488,MMusic,70,76,"InformationProviding,InformationProviding,ContextSetting",,-1,"The MMUSIC WG is currently doing an WG Last Call on RTSP 2.0. The WG
last call ends on May 16th, 2012.",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1489,MMusic,70,77,"InformationProviding,InformationProviding,ExtensionOfPrevious",76,-1,"
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1490,MMusic,70,78,"InformationProviding,InformationProviding,ExtensionOfPrevious",77,-1,"
This document includes the definition (Appendix F) and registration of
the text/parameters format.",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1491,MMusic,70,79,"InformationProviding,ExtensionOfPrevious,ContextSetting",78,-1,"
22.16.  Media Type Registration for text/parameters",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1492,MMusic,70,80,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Type name:  text",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1493,MMusic,70,81,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Subtype name:  parameters",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1494,MMusic,70,82,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Required parameters:",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1495,MMusic,70,83,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Optional parameters:",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1496,MMusic,70,84,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Encoding considerations:",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1497,MMusic,70,85,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Security considerations:  This format may carry any type of
parameters.  Some can have security requirements, like privacy,
confidentiality or integrity requirements.  The format has no
built in security protection.  For the usage it was defined the
transport can be protected between server and client using TLS.
However, care must be take to consider if also the proxies are
trusted with the parameters in case hop-by-hop security is used.
If stored as file in file system the necessary precautions needs
to be taken in relation to the parameters requirements including
object security such as S/MIME [RFC5751].",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1498,MMusic,70,86,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Interoperability considerations:  This media type was mentioned as a
fictional example in RFC 2326 but was not formally specified.
This has resulted in usage of this media type which may not match
its formal definition.",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1499,MMusic,70,87,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Published specification:  RFC XXXX, Appendix F.",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1500,MMusic,70,88,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Applications that use this media type:  Applications that use RTSP
and have additional parameters they like to read and set using the
RTSP GET_PARAMETER and SET_PARAMETER methods.",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1501,MMusic,70,89,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Additional information:",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1502,MMusic,70,90,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Magic number(s):",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1503,MMusic,70,91,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
File extension(s):",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1504,MMusic,70,92,"InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Macintosh file type code(s):",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1505,MMusic,70,93,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Person & email address to contact for further information:  Magnus
Westerlund (magnus.westerlund@ericsson.com)",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1506,MMusic,70,94,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Intended usage:   Common",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1507,MMusic,70,95,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",79,-1,"
Restrictions on usage:   None",<4F99654A.5070600@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:10:02
1508,MMusic,70,130,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",83,83,"
Well, text types usually have a 'charset' parameter, and applications
are known to treat, say, a HTTP response with

Content-Type: text/parameters;charset=iso-8859-1

As ISO-8859-1 encoded document, even though I gather they are to use
UTF-8 to decode the document. If you don't want a 'charset' parameter,
this problem should be noted in the Security or Interoperability con-
siderations.
",<kb1bq7p1omv5i95tqiibajcm4qphdmbpcu@hive.bjoern.hoehrmann.de>,derhoermi@gmx.net,0.0,0,2,2012-05-05 21:59:18
1509,MMusic,70,131,"InformationProviding,InformationProviding,ProposeAction",84,84,"
This field needs a value (probably ""8bit"" or ""binary"").
Björn Höhrmann · mailto:bjoern@hoehrmann.de · http://bjoern.hoehrmann.de
Am Badedeich 7 · Telefon: +49(0)160/4415681 · http://www.bjoernsworld.de
25899 Dagebüll · PGP Pub. KeyID: 0xA4357E78 · http://www.websitedev.de/",<kb1bq7p1omv5i95tqiibajcm4qphdmbpcu@hive.bjoern.hoehrmann.de>,derhoermi@gmx.net,0.0,0,2,2012-05-05 21:59:18
1510,MMusic,70,184,"Thanking,Thanking",130,-1,"Thanks for the review.
",<4FAA1FC4.5050502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-09 09:41:56
1511,MMusic,70,186,"InformationProviding,Agreement,InformationProviding,Agreement,ProposeAction",130,130,"
Yes, you are correct. I guess having the charset being applicable to the
values of the parameters would be very reasonable. The parameters
themselves are in this format restricted to visible 7-bit US-ASCII
characters.
",<4FAA1FC4.5050502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-09 09:41:56
1512,MMusic,70,188,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",131,131,"
That would be 8bit if I interpret that definition correctly. This will
only contain UTF8 text.
",<4FAA1FC4.5050502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-09 09:41:56
1513,MMusic,71,0,"InformationProviding,Social",,-1,Hello Magnus:,<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1514,MMusic,71,16,"Social,Social",,-1,"
Merry Christmas.",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1515,MMusic,71,17,"InformationProviding,ContextSetting",,-1,"
We have been looking at the subject of capability handling which led us to RFC2326bis-08, Chapter 10, where it is suggested that the server uses the Supported header to advertise the list of feature tags it is capable of handling.",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1516,MMusic,71,18,"InformationProviding,ExtensionOfPrevious,ProposeAction",17,-1,"
It is worth clarifying whether the list of tags in the Supported header should be a function of  the request URL or not.",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1517,MMusic,71,19,"Question,InformationProviding,Question,ExtensionOfPrevious,ContextSetting",18,-1,"
For instance, if a client issues a DESCRIBE on a audio only request URL, and the server in its 200 OK response includes the feature tag ""com.A_company.video-bit-stream-switching"". Is that appropriate?",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1518,MMusic,71,20,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",19,-1,"
Clearly video-bit-stream-switching does not apply to an audio-only URL, but one could argue that video-bit-stream-switching is one of the server's capabilities and the client may choose to take advantage of it later on.",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1519,MMusic,71,21,"Question,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction",20,-1,"
What is your interpretation? What does the group think?",<758B5A159B385447B4F950DE72D7D7AD678BD0@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2004-12-23 10:34:25
1520,MMusic,71,24,"Social,Social",,-1,"Hi Thomas,",<20041224171131.97525.qmail@web50404.mail.yahoo.com>,marx_bhargav@yahoo.com,0.0,0,47,2004-12-24 09:11:31
1521,MMusic,71,103,"InformationProviding,InformationProviding,Answer",21,-1,"
Clients having the capability to maintain
the server capabilities might require server
capabilities and not url specific capabilities. If the
client and server have exchanged the capabilities
previously. In future if the clients receives the
meta-file having multiple urls for the same content
and the SDP is received Out of Band for these urls
then the client can use the previously determined
capabilities to select which url to use to have best
experience.",<20041224171131.97525.qmail@web50404.mail.yahoo.com>,marx_bhargav@yahoo.com,0.0,0,47,2004-12-24 09:11:31
1522,MMusic,71,104,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",103,-1,"
But it also might be argued that if the
client has such capability then it should use the
OPTIONS with ""*"" to get the server capability. And the
server capabilities will only be sent if url is ""*""
and if it is presentation url then the capabilities
pretaining to the media are sent.",<20041224171131.97525.qmail@web50404.mail.yahoo.com>,marx_bhargav@yahoo.com,0.0,0,47,2004-12-24 09:11:31
1523,MMusic,71,105,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",104,-1,"
But I would prefer that the Supported Header
gives the server capabilities instead of the
capabilities related to the url. If the server
capabilities are used then it is still easy for the
client to know what pretains to the current session
(as media capabilities will be subset of total
capabilities).",<20041224171131.97525.qmail@web50404.mail.yahoo.com>,marx_bhargav@yahoo.com,0.0,0,47,2004-12-24 09:11:31
1524,MMusic,71,108,"Social,Social",,-1,"Hi Thomas,",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1525,MMusic,71,187,"InformationProviding,InformationProviding,NeutralResponse",18,-1,"
My intention with ""Supported"" is that these are not linked to the URI,
and instead describe features supported by the client and server
depending on the direction of the message.",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1526,MMusic,71,188,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",187,-1,"
In the case one has features that are media type specific, the ones
understanding the features, knows that it is media specific. Also the
definer of a feature must consider if further negotiation of the
functionality is needed. The Supported mechanism is really only a
mechanism for intial discovery of support of features. It has the
meaning like: Hey, here is what I support, please send me what you can.",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1527,MMusic,71,189,"InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction",188,-1,"
So I could see that one clarifies this in the next version, I would
propose to make the following change in the section 14.43, see last
sentencte of paragraph 2:",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1528,MMusic,71,190,"InformationProviding,ExtensionOfPrevious,ContextSetting",189,-1,"
The Supported header field enumerates all the extensions supported by
the client or server using feature tags. The header carries the
extensions supported by the message sending entity.  The Supported
header MAY be included in any request.  When present in a request,
the receiver MUST respond with its corresponding Supported header.
Note, also in 4xx and 5xx responses is the supported header included.",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1529,MMusic,71,191,"InformationProviding,ExtensionOfPrevious,ContextSetting",190,-1,"
The Supported header field contains a list of feature-tags, described
in Section 3.7, that are understood by the client or server. The list
is not depending on the request URI context, and describes the client
and server capabilities in general.",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1530,MMusic,71,192,"Question,InformationSeeking,ExtensionOfPrevious,ProposeAction",191,-1,"
What do you say?",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1531,MMusic,71,193,"Social,Social",,-1,"
Merry Chrismtas and a Happy new Year",<41CD8B87.7030109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-12-25 16:47:19
1532,MMusic,72,41,"InformationProviding,InformationProviding,ContextSetting",,-1,"The IESG has received a request from the Multiparty Multimedia Session
Control WG (mmusic) to consider the following document:
- 'Real Time Streaming Protocol 2.0 (RTSP)'
<draft-ietf-mmusic-rfc2326bis-34.txt> as Proposed Standard",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1533,MMusic,72,42,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",41,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2013-06-04. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1534,MMusic,72,43,"InformationProviding,ExtensionOfPrevious,ContextSetting",42,-1,"
Abstract",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1535,MMusic,72,44,"InformationProviding,InformationProviding,ExtensionOfPrevious",43,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1536,MMusic,72,45,"InformationProviding,InformationProviding,ExtensionOfPrevious",44,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1537,MMusic,72,46,"InformationProviding,InformationProviding,ExtensionOfPrevious",45,-1,"
The file can be obtained via
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1538,MMusic,72,47,"InformationProviding,InformationProviding,ExtensionOfPrevious",46,-1,"
IESG discussion can be tracked via
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ballot/",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1539,MMusic,72,48,"InformationProviding,ExtensionOfPrevious,ContextSetting",47,-1,"
The following IPR Declarations may be related to this I-D:",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1540,MMusic,72,49,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",48,-1,"
http://datatracker.ietf.org/ipr/2028/
http://datatracker.ietf.org/ipr/1189/",<20130521192043.28957.35761.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-05-21 12:20:43
1541,MMusic,72,51,InformationProviding,,-1,"WG and AD,",<519DD209.3010100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-05-23 10:23:37
1542,MMusic,72,122,"InformationProviding,StateDecision,InformationProviding,StateDecision",42,-1,"
We authors have received private feedback about some editorial issues.
We intended to address these at the end of the IETF last call. So don't
be surprised by yet another revision.",<519DD209.3010100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-05-23 10:23:37
1543,MMusic,72,125,"Thanking,Thanking",122,-1,"Thanks for the heads up, Magnus.",<519F3F32.5010908@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-05-24 13:21:38
1544,MMusic,76,58,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1545,MMusic,76,59,"InformationProviding,InformationProviding,ExtensionOfPrevious",58,-1,"
Title		: Real Time Streaming Protocol (RTSP)
Author(s)	: H. Schulzrinne
Filename	: draft-ietf-mmusic-rfc2326bis-05.txt,.ps,.pdf
Pages		: 147
Date		: 2003-10-27",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1546,MMusic,76,60,"InformationProviding,InformationProviding,ExtensionOfPrevious",59,-1,"
This memorandum is a revision of RFC 2326, which is currently a Pro-
posed Standard.
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for control over the delivery of data with real-time
properties. RTSP provides an extensible framework to enable con-
trolled, on-demand delivery of real-time data, such as audio and
video. Sources of data can include both live data feeds and stored
clips. This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 1889).",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1547,MMusic,76,61,"InformationProviding,InformationProviding,ExtensionOfPrevious",60,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-05.txt",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1548,MMusic,76,62,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",61,-1,"
To remove yourself from the IETF Announcement list, send a message to
ietf-announce-request with the word unsubscribe in the body of the message.",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1549,MMusic,76,63,"InformationProviding,InformationProviding,ExtensionOfPrevious",62,-1,"
Internet-Drafts are also available by anonymous FTP. Login with the username
""anonymous"" and a password of your e-mail address. After logging in,
type ""cd internet-drafts"" and then
""get draft-ietf-mmusic-rfc2326bis-05.txt"".",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1550,MMusic,76,64,"InformationProviding,InformationProviding,ExtensionOfPrevious",63,-1,"
A list of Internet-Drafts directories can be found in
http://www.ietf.org/shadow.html
or ftp://ftp.ietf.org/ietf/1shadow-sites.txt",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1551,MMusic,76,65,"InformationProviding,InformationProviding,ExtensionOfPrevious",64,-1,"
Internet-Drafts can also be obtained by e-mail.",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1552,MMusic,76,66,"InformationProviding,InformationProviding,ExtensionOfPrevious",65,-1,"
Send a message to:
mailserv@ietf.org.
In the body type:
""FILE /internet-drafts/draft-ietf-mmusic-rfc2326bis-05.txt"".",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1553,MMusic,76,67,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",66,-1,"
NOTE:	The mail server at ietf.org can return the document in
MIME-encoded form by using the ""mpack"" utility.  To use this
feature, insert the command ""ENCODING mime"" before the ""FILE""
command.  To decode the response(s), you will need ""munpack"" or
a MIME-compliant mail reader.  Different MIME-compliant mail readers
exhibit different behavior, especially when dealing with
""multipart"" MIME messages (i.e. documents which have been split
up into multiple messages), so check your local documentation on
how to manipulate these messages.",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1554,MMusic,76,68,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting",67,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<200310281421.JAA22418@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2003-10-28 09:21:43
1555,MMusic,76,70,"Social,Social",,-1,"Hi,",<3F9F7FE3.1080802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-29 09:52:51
1556,MMusic,76,173,"InformationProviding,ProposeAction,InformationProviding,ContextSetting",61,-1,"
I would like to make you aware of that the 05 text versions contains a
number of erroneous formatted tables. This is the known occurrences:",<3F9F7FE3.1080802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-29 09:52:51
1557,MMusic,76,174,"InformationProviding,InformationProviding,ExtensionOfPrevious",173,-1,"
Page 24, status codes.
Page 26, table lines
Page 51, Adjusted Packet diagram does not fit on one page.
Page 62, 63, Header table.
Page 99, Message syntax
Page 100, 101, Message syntax
page 114, Table 7, init state
Page 115, Table 8, Ready State
Page 116, Table 9, Play State",<3F9F7FE3.1080802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-29 09:52:51
1558,MMusic,76,175,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",174,-1,"
You will have to live with these errors or read the pdf or PS version.
Please note that the change bars in the documents are in relation to the
04 draft version. The major changes are in the methods chapter where a
lot of rewrite has been performed.",<3F9F7FE3.1080802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-29 09:52:51
1559,MMusic,76,176,"StateDecision,InformationProviding,InformationProviding,ExtensionOfPrevious",175,-1,"
We will post a new corrected version after the meeting.",<3F9F7FE3.1080802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-29 09:52:51
1560,MMusic,78,315,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding",,-1,"I am the assigned Gen-ART reviewer for this draft. For background on
Gen-ART, please see the FAQ at",<51AFB3FF.7000009@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-05 16:56:15
1561,MMusic,78,316,"InformationProviding,ExtensionOfPrevious,InformationProviding",315,-1,"
<http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.",<51AFB3FF.7000009@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-05 16:56:15
1562,MMusic,78,317,"ExtensionOfPrevious,ProposeAction,Social,ProposeAction",316,-1,"
Please resolve these comments along with any other Last Call comments
you may receive.",<51AFB3FF.7000009@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-05 16:56:15
1563,MMusic,78,318,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",317,-1,"
Document: draft-ietf-mmusic-rfc2326bis-34",<51AFB3FF.7000009@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-05 16:56:15
1564,MMusic,78,369,Question,,-1,> use NAPTR/SRV?,<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1565,MMusic,78,862,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social,Thanking,InformationProviding,ContextSetting,ProposeAction,Thanking",,-1,"Hi Robert,

Thanks for the massive review. A number of really good comments in here.
Below you will find my answers, comments, questions and in most cases
clarifications what I see us doing with your comment. These covers your
major and minor comments. The nits we will simply implement as we see
fit, if we have questions we will comeback with those.

WG, there are a number of issues in here that would be greatly helped by
your input!
",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1566,MMusic,78,863,"InformationProviding,ContextSetting,ProposeAction",317,-1,"On 2013-06-05 23:56, Robert Sparks wrote:
> Document: draft-ietf-mmusic-rfc2326bis-34
> Reviewer: Robert Sparks
> Review Date: 05-Jun-2013
> IETF LC End Date: 04-Jun-2013
> IESG Telechat date: not yet on a telechat
> The document is very long, and the structure is unusual - much of the
> definition of the protocol itself is in the appendices. You are missing
> an opportunity to make this document much shorter (thereby likely
> increasing its effectiveness). Much of the jump in from RFC2326 was
> importing the description of headers and responses from HTTP, tailoring
> them to RTSP. That was a good exercise in that it highlights some issues
> that would otherwise be non-obvious (and raises a few questions below).
> But you followed the style from HTTP perhaps too closely - much shorter
> descriptions without examples might have done the job better. Overall,
> separating exposition and examples from the protocol definition would
> make it much easier for an implementer to find the definition of the
> protocol, and use the document as a reference when diagnosing a failure
> to interoperate.",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1567,MMusic,78,864,"InformationProviding,Agreement,InformationProviding,Agreement",863,-1,"
Agree, it would be differently structure if we wrote it from scratch
today. But it is an document that is 10 years in the making with dual
heritage in RFC 2326 and RFC 2068.
",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1568,MMusic,78,865,"ClarificationElicitation,InformationProviding,ContextSetting,UnderstandingNegative",317,-1,"> Major Issues
> I'm not seeing what instructs an RTSP element on how to find the server
> it would try to open a connection to given an rtsp or rtsps URI? Are you
> assuming it would be doing A or AAAA DNS lookups?",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1569,MMusic,78,866,"Answer,Agreement,ProposeAction,InformationProviding,Answer",865,-1,"
Yes, using A or AAAA DNS records are assumed. No problem making that
explicit.

Should this protocol",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1570,MMusic,78,867,"Agreement,ContextSetting,ProposeAction,InformationProviding,Answer,ProposeAction",369,-1,"
Potentially, but as everyone have been using A records for all these
years, I think it is not worth defining it at this stage.

The document should be explicit. On a related note, (and",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1571,MMusic,78,868,"InformationSeeking,Question,ClarificationElicitation,ContextSetting,ProposeAction",,-1,"> maybe I missed this), but where do you talk about what an element should
> check in the server's certificate when connecting over TLS? Are you
> assuming a common name match? Or are you expecting some SubjectAltName
> processing?",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1572,MMusic,78,869,"InformationProviding,Answer,ContextSetting,InformationProviding,Answer",868,-1,"
This draft says in Section 19.2 the following regarding this:

RTSP MUST follow the same guidelines with",<51C047BC.1050207@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-18 13:42:52
1573,MMusic,78,945,"Agreement,ContextSetting,InformationProviding,Answer",869,-1,Yes - I was worried that I might have missed it before.,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1574,MMusic,78,965,"InformationProviding,Answer,InformationProviding,Agreement",1404,-1,"You understood what I intended, and your resolution looks sufficient.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1575,MMusic,78,1065,"NeutralResponse,InformationProviding,UnderstandingNegative",1411,-1,"Makes my head swim, but maybe it's must me.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1576,MMusic,78,1115,"Answer,ProposeAction,InformationProviding,Answer",1413,-1,I think it would be worth the extra space it would take up.,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1577,MMusic,78,1222,"InformationSeeking,ProposeAction,Question",1418,-1,Are there also considerations here wrt pipelining?,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1578,MMusic,78,1348,"Answer,Answer",1421,-1,Yes,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1579,MMusic,78,1354,"Answer,Answer",1422,-1,Yes,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1580,MMusic,78,1387,"NeutralResponse,InformationProviding",1423,-1,Ack,<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1581,MMusic,78,1402,"InformationProviding,ContextSetting,Social,Thanking,InformationProviding,Agreement,Thanking",862,-1,"Hi Magnus -

Thanks for your careful treatment of these comments - I think you're on
a good path with all the suggestions below.
Responses to questions and a few comments inline:
",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1582,MMusic,78,1404,"InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,StateDecision",,-1,">> The document should say more about when connection reuse is appropriate,
>> particularly when the connections happened because of an rtsps uri. Two
>> different names might resolve to the same IP address - reusing a
>> connection formed when looking at the first name (and verifying the
>> server's cert) is dangerous. A new connection needs to be formed (and
>> verified) instead.
> I want to check my understanding of the issue you are seeing here. So a
> client looks ups foo.example.org, gets an ip address A and establishes
> an TCP/TLS connection and verifies that there are a SubjectAltName that
> matches foo.example.org works. Then client is going to open
> bar.example.com and looks up that address and gets the same IP address A.
> Client matches A against existing connections and simply sends a request to
> bar.example.com. Thus bypassing the certificate verification.
> If we clarify that in the process of opening rtsps://bar.example.com the
> client MUST verify that the server certificate for the TLS connection it
> considers re-using has an SubjectAltName of bar.example.com, does that
> resolve your concerns. If not, please explain the concern further.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1583,MMusic,78,1405,"InformationProviding,ProposeAction",,-1,">> The text talks about the option to queue S->C requests if there isn't a
>> connection to the client available. Ostensibly, this means the request
>> can go down some future connection. It's not clear how the server can
>> tell the right client connected. In particular, when using rtsps, how do
>> you prevent a malicious client from getting such a queued message that
>> wasn't meant for him?
> Okay, this security issue I have totally missed but it is clearly
> serious. I don't see any easy way of fixing this. Thus I would suggest
> that we simply make it clear that a server MUST NOT queue the S->C RTSP
> message, independent if they are requests PLAY_NOTIFY and TEARDOWN or
> responses to client requests.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1584,MMusic,78,1406,"ClarificationElicitation,Agreement,Question,InformationProviding",1405,-1,"Works for me. Does this mean you are removing cross-connection queueing
altogether?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1585,MMusic,78,1407,"InformationSeeking,InformationProviding,Answer,NeutralResponse,ProposeAction",,-1,">> Given that the text talks about queuing S-C requests, it should
>> explicitly call out whether a server can queue a response if the
>> connection the associated request arrived on is no longer available. I
>> think what you want to say is that such a response must not be queued,
>> and must be dropped.
> Agreed, lets mandate that they are dropped.
>> There are several places in the text that talk about using a 503
>> response with a Retry-After header to push back on traffic from an
>> element (the first is section 10.7).
>> * It's not clear what the subject of a 503 is. Is it intended to be
>> scoped to requests to the resource in the RURI of the associated
>> request? Is it intended to be scoped to the domain in that resource? Or
>> is it, like in SIP, intended to be scoped to the server issuing the
>> response, independent of what the RURI contained?
> Very good question. It is far from obvious what the best choice is. And
> I think even talking only about URI related scope may not be the best.
> The case I have in mind is if a proxy that has several already
> established RTSP sessions over a persistent connection. When a client
> connected to the proxy requests to establish a new session the server
> may have insufficient resource to handle the SETUP request and send a
> 503 answer. However if another client already having an RTSP session for
> the same resource want to terminate that session it would be strange to
> refuse to process the message as it will actually free up resources.
> This makes me believe that you need to have a RTSP Session scope for any
> request carrying a Session-ID and a general server, or host name scope
> for non-associated that doesn't prevent established sessions to try.
> Thoughts on this?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1586,MMusic,78,1408,"NeutralResponse,ProposeAction,InformationProviding,Agreement,ProposeAction",1407,-1,"That seems like it might work - exploring the idea should get some
WG cycles.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1587,MMusic,78,1409,"InformationProviding,ProposeAction",,-1,">> * If the intent is that the 503 talks about the server, then you should
>> clarify that a proxy doesn't simply forward 503 responses (after
>> rewriting CSeqs), and should probably have a response of its own.
>> Otherwise, clients that might be talking to two different servers
>> through one proxy would lose access to both of them when one of the
>> servers 503ed.
> If we us a host and session scope then this issue would not be present.
> However, if the proxy is actually overloaded that still needs its own
> 552 Proxy Unavailable response with the same scope rules as for the 503,
> but where unassociated requests concerns sending to the proxy at all.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1588,MMusic,78,1410,"InformationSeeking,NeutralResponse,ProposeAction,Social,InformationProviding,ProposeAction",1409,-1,"If you build one of these, please be sure to highlight the impact of the
other sessions already established, and call out the potential for
problems if you forward one as a Proxy, as opposed to generating your
own based on the situation.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1589,MMusic,78,1411,"InformationProviding,ProposeAction",,-1,">> Section 4.9.1 lists values the Seek-Style header can take, but 18.45
>> lists a completely different set (which most of the rest of the document
>> uses). Should 4.9.1 be changed to use the values in 18.45? Are the right
>> strings being used in sections 13.4.4 through 13.4.6? Those appear to be
>> using strings from 4.9.1.
> Yes, clearly an inconsistency issue that needs to be resolved.
>> The document will not stand if you delete some of the appendices. They
>> aren't supplementary material. Please consider restructuring the
>> normative sections back into the main document, or clearly identifying
>> which ones define protocol and which are background information.
> I would like to characterize this differently. I think you will have a
> working protocol of RTSP, but you can't use it for anything. This as you
> will have no media transport (C), no media description protocol (D), and
> no parameters format (F). But, these appendixes are replaceable with
> other protocol solutions.
> The Introduction section (1) says:
>                                   The appendixes describe and define some
>     functionalities that are not part of the core RTSP specification, but
>     which are still important to enable some usages.  Among them, the RTP
>     usage is defined in Appendix C and the SDP usage with RTSP is defined
>     in Appendix D, which are two mandatory appendixes.
> I note that we should add F to this list.
> I think we should be clear in each of this appendices that if one
> support Foo for the purpose of bar then this appendix defines
> normatively how one does it.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1590,MMusic,78,1412,"InformationProviding,ContextSetting,InformationProviding",1411,-1,"
fwiw - I'm still worried that there are information in Appendix B that's
not captured in the main text, but I can't find easy things to point to.
Elwyn seems more comfortable that everything is covered.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1591,MMusic,78,1413,"Question,InformationProviding",,-1,">> Section 15 talks about a ""transparent' proxy, but there is no
>> description in this document of what protocol such a thing should
>> follow. What bad thing happens if you remove all mention of
>> ""transparent"" proxies from the document? As far as I can tell, that
>> won't affect the protocol definition at all.
> Not really, there is no definition of transparent proxies currently.
> There is one security concern that make require some word smithing if we
> remove transparent proxies.
> >From my perspective a transparent proxy is something that hijacks a TCP
> connection towards an RTSP server to be a proxy between client and
> server. Further is not detectable from the client's or the servers
> perspective, but still may modify RTSP messages within the bounds of the
> RTSP protocol.
> But, in reality as we have proxies that are visible we should focus on
> those and forget this bastard version.
>> The list of steps for establishing an SRTP cryptographic context in
>> C.1.4.1 says ""This specification does not specify an explicit method for
>> indicating this SRTP cryptographic context establishment method, but
>> future specifications may."" in the context of looking at the SDP. SDP
>> _has_ methods of indicating what keying mechanism is used with SRTP -
>> are you talking about something different?
> I think you are considering the methods for keying SRTP that are
> Offer/Answer dependent. The only RTSP SDP using method that exist is the
> one defined in RFC 4567, which we are explicit on not using.
> Why doesn't this section say
>> something like ""the use of SRTP with RTSP is only defined with MIKEY
>> with keys established as defined in this section. Future documents may
>> talk about how an RTSP implementation might treat SDP that indicates
>> some other key mechanism be used""?
> Yes, that is appears better, but we will have to make it clear that is
> is regarding RTSP 2.0. Must also think if RFC 4567 needs to be worked
> into that sentence.
> Could you provide an example in the
>> document of an RTSP message carrying SDP reflecting the use of SRTP as
>> defined in this document?
> The point is that the only difference is that he RTP profile is SAVP/RTP
> or SAVPF/RTP in the SDP. Thus making such an SDP isn't difficult.
> Question is if it provides a benefit?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1592,MMusic,78,1414,"Question,InformationProviding,ContextSetting",,-1,">> Minor Issues
>> The document uses the notion of a ""control connection"" (it appears first
>> in section 2.5) without defining what that is, or what kind of
>> connections you might have that aren't control connections.
> The ""control connection"" is the connection established for sending RTSP
> messages on it. I agree it is undefined and could likely be replaced by
> the ""RTSP connection"" or ""connection for RTSP messages""
>> The update to the registration of the rtsp and rtsps schema call out
>> that there are changes that can result in interoperability issues. It
>> doesn't say what the issues are, or who might encounter them. I can
>> infer that the point is that there might be problems if a URI following
>> this updated registration were to be processed by an RTSP 1.0
>> implementation (or any other application that relied on the previous
>> definition). It would be better to say that explicitly, and talk about
>> how a previous implementation is likely to act when presented with a URI
>> that exercised these new changes.
> I have gotten these comment elsewhere and have prepared a text update
> for section 4.2:
>     The details of the syntax of ""rtsp"" and ""rtsps"" URIs has been changed
>     from RTSP 1.0.  These changes are:
>     o  Support for IPV6 literal in host part and future IP literals
>        through RFC 3986 defined mechanism.
>     o  A new relative format to use in the RTSP protocol elements that is
>        not required to start with ""/"".
>     Neither should have any significant impact on interoperability.  If
>     one is required to use IPv6 literals to reach an RTSP server, then
>     that RTSP server must be IPv6 capable, and RTSP 1.0 is not a fully
>     IPv6 capable protocol.  If an RTSP 1.0 client attempts to process the
>     URI it will not match the allowed syntax and be considered invalid
>     and processing will be stopped.  This is clearly a failure to reach
>     the resource, however it is not a signification issue as RTSP 2.0
>     support was needed anyway in both server and client.  Thus failure
>     will only occur in a later step when there is a RTSP version
>     mismatch between client and server.  The second change will only
>     occur in RTSP messages, that are explicitly identified as being RTSP
>     2.0 messages, thus a RTSP 1.0 only agent will not be required to
>     parse this variant.
> Clear enough?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1593,MMusic,78,1415,"ClarificationElicitation,Answer,ContextSetting,ProposeAction,Social,Question,InformationProviding,Answer,ProposeAction",1414,-1,"Maybe. In the last sentence, are you saying you would never see a relative
URL in a request URI? If you're not already saying that explicitly in
the document
(you might be) please consider doing so. Saying it that way in this text
would
also help.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1594,MMusic,78,1416,"ContextSetting,ProposeAction",,-1,"> The above is Edited In.
>   (It's not clear to me that all of the
>> thread at www.ietf.org—msg01567.html
>> <http://www.ietf.org/mail-archive/web/uri-review/current/msg01567.html>
>> concluded - I see how the fragments question ended, but what about
>> things like the addition of IPV6 literals? In particular, I'm not
>> finding a response where Ted Hardie agreed that the potential for
>> interoperability failure had been adequately addressed).
> I talked to him in person about this just after the discussion to better
> understand his comments. If we want a confirmation I think we need to
> loop him into a discussion regarding this particular issue.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1595,MMusic,78,1417,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",1416,-1,"I suggest the shepherd/AD double-check with him if he doesn't jump into
this thread before.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1596,MMusic,78,1418,"Question,InformationProviding,Agreement,ProposeAction",,-1,"> I provided a clarification to the designated URI reviewer which accepted
> the request.
>> I think you've said something different than you mean in 5.4 item 1. I
>> think you mean to say that an RTSP implementation would ignore any body
>> that happened to come in message that MUST NOT contain one. What you've
>> said is that the part of the parser that's doing framing has to stop
>> framing at the end of the headers, and that such an errant body would be
>> parsed as a separate message. As written this would keep someone from
>> using an Internet Message Format parser since it would have to ignore
>> any Content-Length that might have appeared, even though it wasn't
>> supposed to.
> Yes, it is clearly sufficient to ignore the body, and likely much better
> from an error handling consideration.
> We will propose a text change.
>> In section 10.4, it looks like a server can keep an RTSP transaction
>> pending forever if it sends 100 responses often enough. I assume the
>> client's recourse if it doesn't want to remain involved is to close the
>> connection. If that's right, it's worth calling it out explicitly in
>> this section.
> This is likely a good suggestion, and works fine if the client simply
> wants to abort the request and is anyway abandoning the RTSP session.
> However, the question is what to do if just the request becomes
> irrelevant and instead want to do something else with the RTSP session.
> A single client may abandon the connection, open a new one and issue a
> request, to a potentially undetermined session state. Yet another
> complexity is what a proxy does that has multiple RTSP sessions on the
> same server. Here the rules for processing in order the different
> requests and their relation to answers in the same order.
> This makes me want to weaken the recommendation on re-using an
> connection for multiple RTSP sessions.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1597,MMusic,78,1419,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social",,-1,">> Somewhere, probably in section 15.2, you should be explicit that a proxy
>> that is multiplexing requests MUST keep the requests in the same order
>> as they are folded together. You can infer that, or things simply break,
>> but saying it explicitly would be better.
> Probably, as a clarification to what is already present in section 18.19
> (CSeq header)
>     Proxies that aggregate several sessions on the same transport will
>     have to ensure that the requests sent towards a particular server
>     have a joint sequence number space, i.e., they will regularly need to
>     renumber the CSeq header field in requests (from proxy to server) and
>     responses (from server to proxy) to fulfill the rules for the header.
>     The proxy MUST increase the CSeq by one for each request it
>     transmits, without regard of different sessions.
>> Both GET_PARAMETER and SET_PARAMETER are listed as keep-alive methods in
>> 10.5, but the note in section 13 on table 7 only uses that as a reason
>> for requiring SET_PARAMETER. Why doesn't it also apply to GET_PARAMETER?
>> And why is this only required at servers? ""Required"" in this section
>> means Mandatory to Implement, I think. If that's right, it should be
>> made explicit. If that's not right, what does it mean?
> Yes, required is Required to implement in the server. The GET_PARAMETER
> is not required as only one method for keep-alive is necessary. Thus,
> the ones that needs to use GET/SET_PARAMETER for keep-alive will have to
> choose SET_PARAMETER.
> It is only required at the server, as it is in the client implementation
> choice of how to ensure keep-alive works. As this is also dependent on
> the media transport support one has, the client may not need a method
> based keep-alive.
> Clarifying ""Required"" should be straightforward.
>> Section 13.8 makes a good argument for always putting parameters to be
>> retrieved in a body. Why are you keeping the complexity of also allowing
>> them in headers?
> Some arguments are probably lost in the passage of time. However, the
> headers specified to be suitable for inclusion in a GET_PARAMETER
> requests are used for providing these information also in other methods,
> thus we have not wanted to duplicate the representation of this
> information in both a body and a header form.
>> Section 13.10: ""That should not provide any benefit."" is not clear - can
>> you expand it a little?
>     If the REDIRECT request times out following the rules in Section 10.4
>     the server MAY terminate the session or transport connection that
>     would be redirected by the request.  This is a safeguard against
>     misbehaving clients that refuse to respond to a REDIRECT request.
>     That should not provide any benefit.
> The intention here is to make clear that there shouldn't be an incentive
> in the protocol to not acknowledge a REDIRECT request and instead simply
> go on as it wasn't received or seen. Thus, we want to make clear that
> the server may simply terminate the session in those cases.
> I propose we change this sentence to:
> Thus, removing any incentive to not acknowledge the reception of a
> REDIRECT request.
> Edited In
>> In Section 13.10 you talk about clients _sending_ media (search for
>> ""send or receive media""). Do you mean anything more than possibly RTCP?
>> Can you make that clear in the section?
> You mean this sentence:
>     After a REDIRECT request has been processed, a client that wants to
>     continue to send or receive media for the resource identified by the
>     Request-URI will have to establish a new session with the designated
>     host.
> The mentioning of send media is likely a RECORD reference. In this case
> I don't see any issue with removing it.
> Edited In
>> Section 15.2's second paragraph appears to be the only place the proxy
>> rewriting of CSeq in order to multiplex requests is defined, and it is
>> very loose. It would be easy for a reader to fail to recognize this as
>> an interoperability requirement. Please consider expanding how this is
>> specified when addressing the comment about above about keeping requests
>> in relative order when multiplexing.
> There are text in Section 18.19 CSeq also. But I do think I agree that
> this should be clarified.
>> You follow the principle of saying a client should treat a response with
>> an unknown response code, the same as it would treat the x00 of that
>> class (e.g. 400 for an unknown 4xx). However, you do not define what a
>> response code of 300 means. How is a client supposed to handle an
>> unknown 3xx response?
> Sorry, I don't quite get this comment. Section 17.3 says:
>     If a 3rr response is received for a request in relation to
>     an established session, the client SHOULD send a TEARDOWN request for
>     the session, and MAY reestablish the session using the resource
>     indicated by the Location.
>     If the Location header is used in a response it MUST contain an
>     absolute URI pointing out the media resource the client is redirected
>     to, the URI MUST NOT only contain the host name.
> As explained above unknown 3XX codes will be 3rr codes, as 304 isn't
> unknown.
> If you don't believe this is sufficient can you please be more explicit
> about the issue?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1598,MMusic,78,1420,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction,Answer",1419,-1,"Sure. It might be quickest if you look at the table of contents.
Note that you define 100 in 17.1.1, 200 in 17.2.1, 400 in 17.4.1, 500 in
17.5.1, but you do not define 300 anywhere - you jump straight to 301.
Please add a section defining it, or declaring that you will never see a
literal 300 on the wire, but if you did you would do (what you quote
above) and nothing else.
",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1599,MMusic,78,1421,ClarificationElicitation,,-1,">> As written, a client and server can use HTTP Basic authentication over
>> TCP that is not protected with TLS. Consider restricting it's use to TLS
>> only. Are you sure you don't need to say anything RTSP specific about
>> DIGEST computations (I don't think you need to go as far as SIP did
>> talking about DIGEST, but I'm surprised you haven't run into issues
>> relying only on 2617 literally.
> Are you referring to Section 19.1 here?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1600,MMusic,78,1422,ClarificationElicitation,,-1,"> Yes, I would not have any issue with requiring Basic to be combined with
> TLS. I think that is appropriate.
> When it comes to DIGEST, are you referring to section 22.4 in RFC 3261?",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1601,MMusic,78,1423,"NeutralResponse,ProposeAction",,-1,"> That section indicates that some clarifications are likely needed.
>> How does 411 Length Required for this protocol make sense? Given that
>> you've restricted the protocol to TCP and require the Content-Length
>> header to be present if there is a body, in what circumstance would a
>> server need to send a 411?
> It really should occur for malformed messages, which we could use 400 as
> response. So yes, 411 could be removed.
>> Section 18.19 requires senders to increment CSeq by 1. We have a
>> reliable transport with no request retransmission, so there should never
>> be gaps at the receiver. Should the receiver check and react some way if
>> there are gaps? I think you should explicitly tell them not to even
>> look. If you agree, why is incrementing by one important as long as you
>> are always strictly increasing?
> I agree that for TCP or other reliable transports the receiver
> SHOULD/SHALL ignore gaps. For any future specification of an unreliable
> transport of RTSP messages this would be needed. As noted in Appendix G,
> CSeq is retained for future support of unreliable transport.
>> You call out several places where RTCP is essential to allow RTSP using
>> RTP to work correctly, yet section C.1.2 sets up conditions where RTCP
>> MUST NOT be sent. Why are you allowing those instead of treating the
>> conditions you describe as errors?
> Good question. I think it is a case we must ensure that you can
> negotiate and configure your desired way, without really considering if
> it should be allowed at all. I think mandating usage of RTCP with RTP
> for RTSP 2.0 would be good. But, I think that needs to be verified with
> the WG.",<51C06CDC.9050804@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-06-18 09:21:16
1602,MMusic,78,2265,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social,InformationProviding,StateDecision",1402,-1,"Robert and WG,

Please see inline in this messages further comments or response on how
we have dealt with listed issues.

With this email we believe we have answered the outstanding issues and
draft response and new text for all the issues. Therefore we will submit
a new draft version so that you can review the changes in context.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1603,MMusic,78,2268,"NeutralResponse,InformationProviding,NeutralResponse",945,945,"
No issue here.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1604,MMusic,78,2270,"InformationProviding,ContextSetting,StateDecision,InformationProviding,StateDecision",965,965,"
Added now with the following text in 19.2:

There exist a potential security vulnerability when reusing TCP and TLS
state for different resources (URIs). If two different host names points
at the same IP address it can be desirable to re-use the TCP/TLS
connection to that server. In that case the RTSP agent having the
TCP/TLS connection MUST verify that the server certificate associated
with the connection has a SubjectAltName  matching the host name present
in the URI for the resource an RTSP request is to be issued for.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1605,MMusic,78,2272,"InformationProviding,Answer,Agreement,ProposeAction,InformationProviding,Answer,ProposeAction",1406,1406,"
Yes, see separate email sent on June 24.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1606,MMusic,78,2274,"InformationProviding,InformationProviding,Answer","1406,1407",1407,"
Proposed in email on June 24.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1607,MMusic,78,2276,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding",1408,1408,"
There are some changes proposed for how to handle multiple connections.
See email with subject: RTSP 2.0: Change of recommendation for multiple
connections to server

Then we have implemented updated text regarding 503 which clarifies its
scope. And also added the 553 response.

10.7.  Overload Control

Overload in RTSP can occur when servers and proxies have insufficient
resources to complete the processing of a request.  An improper
handling of such an overload situation at proxies and servers can
impact the operation of the RTSP deployment, and probably worsen the
situation.  RTSP defines the 503 (Service Unavailable) response
(Section 17.5.4) to let servers and proxies notify requesting proxies
and RTSP clients about an overload situation.  In conjunction with
the Retry-After header (Section 18.42) the server or proxy can
indicate the time after the requesting entity can send another
request to the proxy or server.

There are two scopes of such 503 answers, one for established RTSP
sessions, where the request resulting in the 503 response as well as
the response carries a Session header identifying the session which
is suffering overload.  This response only applies to this particular
session.  The other scope is the general RTSP server as identified by
the host in the request URL.  Such a 503 answer with any Retyr-After
header applies to all non-session specific requests to that server,
including SETUP request intended to create a new RTSP session.

Another scope for overload situation exists, which is the RTSP proxy.
To enable an RTSP proxy to signal that it is overloaded, or otherwise
unavailable and can't handle the request, a 553 response code has
been defined with the meaing ""Proxy Unavailable"".  Also for proxies
there is a separation in response scopes between requests associated
with existing RTSP sessions, and requests to create new sessions or
general proxy requests.

Simply implementing and using the 503 (Service Unavailable) and 553
(Proxy Unavailable) is not sufficient for properly handling overload
situations.  For instance, a simplistic approach would be to send the
503 response with a Retry-After header set to a fixed value.
However, this can cause the situation where multiple RTSP clients
again send requests to a proxy or server at roughly the same time
which may again cause an overload situation, or if the ""old"" overload
situation is not yet solved, i.e., the length indicated in the Retry-
After header was too short.

An RTSP server or proxy in an overload situation must select the
value of the Retry-After header carefully and bearing in mind its
current load situation.  It is REQUIRED to increase the timeout
period in proportion to the current load on the server, i.e., an
increasing workload should result in an increased length of the
indicated unavailability.  It is REQUIRED to not send the same value
in the Retry-After header to all requesting proxies and clients, but
to add a variation to the mean value of the Retry-After header.

A more complex case may arise when a load balancing RTSP proxy is in
use, i.e., where an RTSP proxy is used to select amongst a set of
RTSP servers to handle the requests, or when multiple server
addresses are available for a given server name.  The proxy or client
may receive a 503 (Service Unavailable) or 553 (Proxy Unavailable)
from one of its RTSP servers or proxies, or a TCP timeout (if the
server is even unable to handle the request message).  The proxy or
client simply retries the other addresses or configured proxies, but
may also receive a 503 (Service Unavailable) or 553 (Proxy
Unavailable) response or TCP timeouts from those addresses.  In such
a situation, where none of the RTSP servers/proxies/addresses can
handle the request, the RTSP agent has to wait before it can send any
new requests to the RTSP server.  Any additional request to a
specific address MUST be delayed according to the Retry-After headers
received.  For addresses where no response was received or TCP
timeout occurred, an initial wait timer SHOULD be set to 5 seconds.
That timer MUST be doubled for each additional failure to connect or
receive response until the value exceeds 30 minutes when the timers
mean value may be set to 30 minutes.  It is REQUIRED to not set the
same value in the timer for each scheduling, but instead to add a
variation to the mean value, resulting in picking a random value
within the range of 0.5 to 1.5 of the mean value.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1608,MMusic,78,2278,"NeutralResponse,ProposeAction",1410,1410,"
See above!
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1609,MMusic,78,2280,"InformationProviding,StateDecision,InformationProviding,StateDecision","1410,1411",1411,"
This has been address and are now consistent.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1610,MMusic,78,2282,"NeutralResponse,ProposeAction,StateDecision,InformationProviding,ProposeAction",1412,1412,"
Some minor changes has been applied to correct some minor errors. But I
guess we may need a note in the write-up.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1611,MMusic,78,2284,"InformationProviding,Agreement,InformationProviding","1412,1413",1413,"
Yes, now we only discuss real proxies, except in one introductory
place where we make clear that we don't define ""transparent"" proxies.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1612,MMusic,78,2286,"Answer,ContextSetting,InformationProviding,StateDecision","1412,1413",1413,"
This has been been changed along the lines proposed.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1613,MMusic,78,2287,"InformationProviding,ExtensionOfPrevious,InformationProviding","1412,2286",1413,"
1.   The client determines that SAVP or SAVPF shall be used from
media description format, e.g., SDP.  If no other key management
method is explicitly signalled, then MIKEY SHALL be used as
defined herein.  The use of SRTP with RTSP is only defined with
MIKEY with keys established as defined in this Section.  Future
documents may define how an RTSP implementation treats SDP that
indicates some other key mechanism to be used.  The need for
such specification include [RFC4567] that is not defined for use
in RTSP 2.0 within this document.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1614,MMusic,78,2289,"InformationProviding,StateDecision,InformationProviding,StateDecision",1115,1115,"
I have added a complete establishment example for secure media. This
include a redirect to a rtsps URI and then establishing using MIKEY.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1615,MMusic,78,2291,"InformationProviding,StateDecision,InformationProviding,StateDecision","1115,1414",1414,"
All instances of control connection has been removed and a bit of extra
introduction in Section 10 Connections clarifies the use of connection
in this document.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1616,MMusic,78,2293,"InformationProviding,Agreement,Answer",1415,1415,"
Correct. Requests must use absolute URIs.

If you're not already saying that explicitly in",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1617,MMusic,78,2295,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding,StateDecision",1415,1415,"
Clarified text:
The second change will only occur inside RTSP message headers, as the
request URI must be an absolute URI. Thus such usages are occurring
after agents has accepted processing RTSP 2.0 messages, and an RTSP 1.0
only agent will not be required to parse such types of relative URIs.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1618,MMusic,78,2297,"InformationProviding,NeutralResponse,InformationProviding,Answer","1415,1418",1418,"
No additional information about this.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1619,MMusic,78,2299,"InformationProviding,ContextSetting,StateDecision",1418,1418,"
The result of thinking what this section was supposed to say. Made me
make a major restructuring of 5.4, but also to add text in 5.3 about the
discarding unexpected message bodies.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1620,MMusic,78,2300,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding","1415,2299",1418,"
5.3.  Message Body

The message body (if any) of an RTSP message is used to carry further
information for a particular resource associated with the request or
response.  An example of a message body is a Session Description
Protocol (SDP) message.

The presence of a message body in either a request or a response MUST
be signaled by the inclusion of a Content-Length header (see
Section 18.16) and Content-Type (see Section 18.18).  A message body
MUST NOT be included in a request or response if the specification of
the particular method (see Method Definitions (Section 13)) does not
allow sending a message body.  In case a message body is received in
a message when not expected the message body data SHOULD be
discarded.  This is to allow future extensions to define optional use
of message body.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1621,MMusic,78,2301,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding","1415,2300",1418,"
5.4.  Message Length

RTSP Messages that doesn't contain any message body is terminated by
the first empty line after the header fields (Note: An empty line is
a line with nothing preceding the CRLF.).  In RTSP messages that
contains message bodies the empty line is followed by the message
body.  The length of that body is determined by the value of the
Content-Length header (Section 18.16).  The headers value represents
the length of the message-body in octets.  If this header field is
not present, a value of zero is assumed, i.e. no message body present
in message.  Unlike an HTTP message, an RTSP message MUST contain a
Content-Length header whenever it contains a message body.  Note that
RTSP does not support the HTTP/1.1 ""chunked"" transfer coding (see
[H3.6.1]).

Given the moderate length of presentation descriptions returned,
the server should always be able to determine its length, even if
it is generated dynamically, making the chunked transfer encoding
unnecessary.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1622,MMusic,78,2303,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding,NeutralResponse","1415,1418",1418,"
So the text now reads:

A requester SHOULD wait at least 10 seconds for a response before
concluding that the responder will not be responding to its request.
After receiving a 100 response, the requester SHOULD continue waiting
for further responses.  If more than 10 seconds elapses without
receiving any response, the requester MAY assume that the responder
is unresponsive and abort the connection by closing the TCP
connection.

Note: In cases multiple RTSP sessions share the same transport
connection, abandoning a request closing the connection may have
significant impact on those other sessions.  First of all, other
RTSP requests may have become queued up due to the request taking
long time.  Secondly also those sessions loose the possibility to
receive server to client requests.  To mitigate that situation the
RTSP agent should establish a new connection and send any queued
up and non-responded requests on this new connection.  Secondly,
to ensure that the RTSP server knows which connection that is
valid for a particular RTSP session, the RTSP agent should send a
keep-alive request, if no other request will be sent immeditely
for that RTSP session, for each RTSP session on the old
connection.  The keep-alive request will normally be a
GET_PARAMETER with a session header to inform the server that this
agent cares about this RTSP session.

A requester SHOULD wait longer than 10 seconds for a response if it
is experiencing significant transport delays on its connection to the
responder.  The requester is capable of determining the round trip
time (RTT) of the request/response cycle using the Timestamp header
(Section 18.51) in any RTSP request.

10 seconds was chosen for the following reasons.  It gives TCP
time to perform a couple of retransmissions, even if operating on
default values.  It is short enough that users may not abandon the
process themselves.  However, it should be noted that 10 seconds
can be aggressive on certain type of networks.  The 5 seconds
value for 1xx messages is half the timeout giving a reasonable
chance of successful delivery before timeout happens on the
requester side.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1623,MMusic,78,2304,"Answer,InformationProviding,Answer",1222,1222,"
I think the above brings up the main consideration regarding pipelining.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1624,MMusic,78,2306,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,ProposeAction","1222,1419",1419,"
See separate email on this as this connects to the other issues around
the sequence number.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1625,MMusic,78,2308,"NeutralResponse,StateDecision,StateDecision",1419,1419,"
Added text both in 13 and 10.5.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1626,MMusic,78,2310,"NeutralResponse,StateDecision,InformationProviding",1419,1419,"
Answered and no action planned for this.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1627,MMusic,78,2312,"StateDecision,InformationProviding,StateDecision",1416,1416,"
Done
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1628,MMusic,78,2314,"StateDecision,InformationProviding,StateDecision",1416,1416,"
Done
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1629,MMusic,78,2317,"ProposeAction,InformationProviding","1419,2282",1419,"
See above.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1630,MMusic,78,2319,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",1420,1420,"
I think adding an exception to treat the unknown 3xx code as a 302, i.e.
a temporarily move makes sense for the 3rr codes.

First half of the paragraph after reformulating it:

RTSP status codes are extensible. RTSP applications are not required to
understand the meaning of all registered status codes, though such
understanding is obviously desirable. However, applications MUST
understand the class of any status code, as indicated by the first
digit, and treat any unrecognized response as being equivalent to the
x00 status code of that class, with an exception for unknown 3xx codes,
which MUST be treated as a 302 (Found). The reason being that no 300
(Multiple Choices in HTTP) is defined for RTSP. An response with
unrecognized status code MUST NOT be cached
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1631,MMusic,78,2321,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding","1420,1422",1422,"
Added to 19.1:

Any RTSP message containing an Authorization header containing a basic
authorization MUST be using a TLS connection with confidentiality
protection enabled, i.e. no NULL encryption.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1632,MMusic,78,2323,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding",1423,1423,"
Okay, this was a big rathole. Actually found that we where missing two
headers in addition to that some recommendations are needed. Posting a
separate review message on this one.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1633,MMusic,78,2325,"StateDecision,InformationProviding,StateDecision",1423,1423,"
Removed.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1634,MMusic,78,2327,"ProposeAction,Social,ProposeAction",1423,1423,"
Please see separate email on this.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1635,MMusic,78,2329,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",315,315,"
This was actually already mandated in C.1.6. We have made this clearer
by including a re-statement and a reference from the AVP/UDP
profile definition.

However, this made me turn my eyes on C.1.6.3 Bit-rate adaption. As we
know have circuit breakers in the process I think it is appropriate to
reference that as the outer envelope an adaptation mechanism must keep
within. See separate email to MMUSIC list.
",<5224825F.6070306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-02 14:19:43
1636,MMusic,78,2341,"Social,Social",2265,2265,Hi Magnus -,<52264BF9.9070006@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-09-03 15:52:09
1637,MMusic,78,2358,"ContextSetting,InformationProviding,Agreement",2265,2265,"
This all looks good - I look forward to the new revision.

One question from what you sent though:",<52264BF9.9070006@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-09-03 15:52:09
1638,MMusic,78,2360,"Question,ContextSetting,Question,InformationProviding",2323,2323,"I skimmed for that message, and didn't find it quickly - what subject
should I search for?

RjS",<52264BF9.9070006@nostrum.com>,rjsparks@nostrum.com,0.0,0,1,2013-09-03 15:52:09
1639,MMusic,78,2407,"InformationProviding,Answer,InformationProviding,NeutralResponse,InformationProviding","2358,2360",2358,"
It is available now.
",<5226CFCF.2030708@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-04 08:14:39
1640,MMusic,78,2409,"InformationProviding,Answer,InformationProviding,Answer",2360,2358,"
I also attached it for your convenience.
",<5226CFCF.2030708@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-04 08:14:39
1641,MMusic,79,5,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,InformationProviding,ProposeAction",,-1,"This is to announce a final (we hope) review period for
draft-ietf-mmusic-rfc2326bis-26.txt, to ensure that all WGLC issues have
now been cleared. Please submit any comments by the end of Friday, Nov. 26.",<BLU0-SMTP80D9883B7A689ADEC24B68D8390@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-11-18 09:17:00
1642,MMusic,80,24,"InformationProviding,ContextSetting,InformationProviding",,-1,"There is a new draft of the ""Rapid Acquisition of Multicast RTP Sessions
(RAMS)"" draft available at
http://www.ietf.org/internet-drafts/draft-versteeg-avt-rapid-synchroniza
tion-for-rtp-03.txt
<http://www.ietf.org/internet-drafts/draft-versteeg-avt-rapid-synchroniz
ation-for-rtp-03.txt>",<81B9B88E2F9D574AA5328A85547CDE9101071D80@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-16 12:38:56
1643,MMusic,80,25,"InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,InformationProviding,StateDecision",24,-1,"
We have incorporated the changes from the technical breakout session in
San Francisco. The major changes in this version of the draft include
1- Changing the document title to avoid confusion with other ongoing
""synchronization"" drafts
2- changing the message names to reflect the title change
3- clarification of the RTCP message semantics, including changes to the
""Request"" and ""Inform"" messages
4- additional description/motivation for the various message flows has
been added
5- RTP/RTCP muxing has been added",<81B9B88E2F9D574AA5328A85547CDE9101071D80@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-16 12:38:56
1644,MMusic,80,26,"InformationProviding,ExtensionOfPrevious,StateDecision,InformationProviding",25,-1,"
We hope to make this a Working Group item, and will change the name of
the draft to avoid conflicts with other ""synchronization"" drafts at that
time.",<81B9B88E2F9D574AA5328A85547CDE9101071D80@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-16 12:38:56
1645,MMusic,80,27,InformationProviding,,-1,"
Bill VerSteeg",<81B9B88E2F9D574AA5328A85547CDE9101071D80@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-16 12:38:56
1646,MMusic,80,29,"Social,Social",,-1,"Hi,",<49f1a1d6.190c660a.58fe.ffffa90e@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 14:24:16
1647,MMusic,80,89,"InformationProviding,InformationProviding",24,-1,"
I think that the current draft does not give a description of a system that
works since there is no text explaining how the RS knows the unicast
transport address on the RR to where to send the stream.",<49f1a1d6.190c660a.58fe.ffffa90e@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 14:24:16
1648,MMusic,80,90,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",89,-1,"
If you mandate the use of RTP/RTCP mux it should say so otherwise the RAMS-R
should have an optional parameter that supplies this information and a flag
for using RTP/RTCP mux.",<49f1a1d6.190c660a.58fe.ffffa90e@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 14:24:16
1649,MMusic,80,91,"Thanking,Thanking",,-1,"
Thanks",<49f1a1d6.190c660a.58fe.ffffa90e@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 14:24:16
1650,MMusic,80,144,InformationProviding,24,24,ynchronization-for-rtp-03.txt <http://www.ietf.org/internet-> drafts/draft-versteeg-avt-rapid-synchronization-for-rtp-03.txt>,<04CAD96D4C5A3D48B1919248A8FE0D54092C80DA@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 09:37:42
1651,MMusic,80,182,"Social,Social",,-1,"Hi Roni,
",<04CAD96D4C5A3D48B1919248A8FE0D54092C80DA@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 09:37:42
1652,MMusic,80,184,"ClarificationElicitation,ClarificationElicitation",89,89,"
What do you mean by ""a system that works""?
",<04CAD96D4C5A3D48B1919248A8FE0D54092C80DA@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 09:37:42
1653,MMusic,80,186,"InformationSeeking,InformationProviding,NeutralResponse,StateDecision,InformationProviding,StateDecision",89,89,"
Once RS receives the request packet from an RR, RS knows its address. Ports are defined in the SDP. If you are asking about ""NAT"" issues, we have a section for it, and we plan to complete it as we move forward. It is not as critical as the other parts for now.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C80DA@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 09:37:42
1654,MMusic,80,188,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",90,90,"
IMO, we cannot mandate muxing as it is not required to make RAMS work. If muxing is supported, the SDP should reflect it.

BR,
-acbegen
",<04CAD96D4C5A3D48B1919248A8FE0D54092C80DA@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 09:37:42
1655,MMusic,80,306,"ContextSetting,InformationProviding",186,-1,"Ali,
I will try to explain in simple way",<49f208e8.05a0660a.5bd2.6764@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 21:44:01
1656,MMusic,80,307,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding",186,-1,"
When the RS receives the RAMS-R it need to start sending an RTP stream to
the RR.
In order to send a unicast packet, the RS needs to know a transport address
on the RR to where the RTP stream will be sent. The current draft does not
say how the RS knows this address. There is no SDP from RR to RS like you
mention in your response.
This is why I say that the current draft does not specify a solution that
can be implemented as a working solution",<49f208e8.05a0660a.5bd2.6764@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 21:44:01
1657,MMusic,80,310,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding",307,-1,"Oh, I see. The burst goes to the port that we would normally send the retransmissions. For example, consider the SDP from the draft:",<04CAD96D4C5A3D48B1919248A8FE0D54092C81C9@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:00:51
1658,MMusic,80,470,"InformationProviding,ExtensionOfPrevious,InformationProviding",310,-1,"
m=video 41000 RTP/AVPF 98
i=Primary Multicast Stream #2
c=IN IP4 224.1.1.2/255
a=source-filter: incl IN IP4 224.1.1.2 192.0.2.2
a=rtpmap:98 MP2T/90000
a=rtcp:41001 IN IP4 192.0.2.1
a=rtcp-fb:98 nack
a=rtcp-fb:98 nack ssli
a=ssrc:123321 cname:iptv-ch32@rams.example.com
a=mid:3
m=video 41002 RTP/AVPF 99
i=Unicast Retransmission Stream #2 (Ret. and Rapid Acq. Support)
c=IN IP4 192.0.2.1
a=recvonly
a=rtpmap:99 rtx/90000
a=rtcp:41003
a=fmtp:99 apt=98; rtx-time=5000
a=mid:4",<04CAD96D4C5A3D48B1919248A8FE0D54092C81C9@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:00:51
1659,MMusic,80,471,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",470,-1,"
In this case, the burst will go to port 41002 on the RR. The RAMS-I message(s), which is an RTCP feedback message, will go to port 41003.",<04CAD96D4C5A3D48B1919248A8FE0D54092C81C9@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:00:51
1660,MMusic,80,472,InformationProviding,,-1,"
HTH,
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54092C81C9@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:00:51
1661,MMusic,80,652,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,Disagreement",471,-1,"Ali,
I think you get it wrong, this SDP is from the RS and not the RR so the RS
cannot specify to which address it will send it can only specify to which
address it can receive RTP stream. In this SDP the relevant information is
that the request for retransmission will be sent by the RR to port 41003",<49f211fc.07a5660a.3f7f.ffff8f4a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:22:37
1662,MMusic,80,655,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding",652,-1,"This is a part of an example SDP sent to RS and RR in a SAP announcement, for example. So, the SDP describes what both parties should do (RR cannot say that he wants to receive this multicast on its favorite port). The individual SDPs sent to RR or RS may include other portions of descriptions that will contain specific information.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8202@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:37:06
1663,MMusic,80,852,InformationProviding,,-1,"
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54092C8202@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-24 12:37:06
1664,MMusic,80,1075,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding",655,-1,"Ali,
The example SDP is syntactically correct but it does not say that the
rtp/rtcp mux will be used and it does not give the information to where the
unicast stream will be sent when the RR sends a RAMS-R.",<49f2efa2.1c215e0a.4454.ffffaf91@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 14:08:27
1665,MMusic,80,1076,"Question,InformationProviding,ExtensionOfPrevious,UnderstandingNegative,Question,InformationProviding",1075,-1,"
I am not sure why the unicast stream m-line has a port number with an
attribute of recvonly. What is the use case for that. The only information
that the RR will need is the RTCP port on the RS to where to send the RAMS-R
message.",<49f2efa2.1c215e0a.4454.ffffaf91@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 14:08:27
1666,MMusic,80,1330,"InformationProviding,Answer,ContextSetting,InformationProviding,Agreement,StateDecision",1075,1075,"
To my knowledge, the first line in the following SDP tells the RRs on which port they will receive the retransmission/burst packets.

m=video 41002 RTP/AVPF 99
i=Unicast Retransmission Stream #2 (Ret. and Rapid Acq. Support)
c=IN IP4 192.0.2.1
a=rtpmap:99 rtx/90000
a=rtcp:41003
a=fmtp:99 apt=98; rtx-time=5000
a=mid:4

There is a typo, you are right. That ""a=recvonly"" line should only exist in the SDP sent to RRs. In the SDP sent to RS, we should rather have ""a=sendonly"". I will make this correction in the next version.

The feedback target for the SSM session and the RTCP port for the retransmission session are also defined in the SDP.

Hope this clarifies.

BR,
-acbegen
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8403@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:02:13
1667,MMusic,80,1606,"InformationSeeking,ContextSetting,ProposeAction,ProposeAction",1330,-1,"Ali,
Can you please write three addresses from this strange SDP.",<49f36ee2.0437560a.11df.1eef@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 23:11:28
1668,MMusic,80,1607,"InformationSeeking,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",1606,-1,"
1. The address and port of multicast",<49f36ee2.0437560a.11df.1eef@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 23:11:28
1669,MMusic,80,1608,"InformationSeeking,ExtensionOfPrevious,ProposeAction,InformationProviding",1606,-1,"
2. The address and port of the RS where the RTCP FB should go to",<49f36ee2.0437560a.11df.1eef@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 23:11:28
1670,MMusic,80,1609,"InformationSeeking,ExtensionOfPrevious,ProposeAction,InformationProviding",1606,-1,"
3. The address and port on the RR where the unicast stream should be sent to",<49f36ee2.0437560a.11df.1eef@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-25 23:11:28
1671,MMusic,80,1612,"Answer,ContextSetting,InformationProviding",1606,-1,Here is the SDP.,<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1672,MMusic,80,1943,"InformationProviding,ExtensionOfPrevious,InformationProviding",1612,-1,"
m=video 41000 RTP/AVPF 98
i=Primary Multicast Stream #2
c=IN IP4 224.1.1.2/255
a=source-filter: incl IN IP4 224.1.1.2 192.0.2.2",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1673,MMusic,80,1944,"InformationProviding,ExtensionOfPrevious,InformationProviding",1943,-1,"
Source (192.0.2.2) sends the rtp packets to the multicast group (224.1.1.2) with a dest port 41000.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1674,MMusic,80,1945,"InformationProviding,ExtensionOfPrevious,InformationProviding",1944,-1,"
a=rtpmap:98 MP2T/90000
a=rtcp:41001 IN IP4 192.0.2.1",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1675,MMusic,80,1946,"InformationProviding,ExtensionOfPrevious,InformationProviding",1945,-1,"
The feedback target (RS) address for this SSM session is 192.0.2.1 and its port is 41001. This is the address/port where RR sends the RAMS-R, or receiver reports for the SSM session.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1676,MMusic,80,1947,"InformationProviding,ExtensionOfPrevious,InformationProviding",1946,-1,"
a=rtcp-fb:98 nack
a=rtcp-fb:98 nack ssli
a=ssrc:123321 cname:iptv-ch32@rams.example.com
a=mid:3
m=video 41002 RTP/AVPF 99",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1677,MMusic,80,1948,"InformationProviding,ExtensionOfPrevious,InformationProviding",1947,-1,"
The retransmission packets go to port 41002. This is the port RRs listen to for retransmission and RAMS.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1678,MMusic,80,1949,"InformationProviding,ExtensionOfPrevious,InformationProviding",1948,-1,"
i=Unicast Retransmission Stream #2 (Ret. and Rapid Acq. Support)
c=IN IP4 192.0.2.1",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1679,MMusic,80,1950,"InformationProviding,ExtensionOfPrevious,InformationProviding",1949,-1,"
This is where the retransmission packets come from, same as the feedback target (in this example).",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1680,MMusic,80,1951,"InformationProviding,ExtensionOfPrevious,InformationProviding",1950,-1,"
a=rtpmap:99 rtx/90000
a=rtcp:41003",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1681,MMusic,80,1952,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",1951,-1,"
This is where the RTCP packets for the retransmission session go. For example, RAMS-I goes to this port on RRs. RAMS-T goes to this port on RS.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1682,MMusic,80,1953,"InformationProviding,ExtensionOfPrevious,InformationProviding",1952,-1,"
a=fmtp:99 apt=98; rtx-time=5000
a=mid:4",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1683,MMusic,80,1954,InformationProviding,,-1,"
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54092C8405@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 13:30:19
1684,MMusic,80,2323,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"Ali,
See inline",<49f37fde.09a1660a.2b46.ffffb694@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 00:24:00
1685,MMusic,80,2727,"ContextSetting,InformationProviding",2323,-1,"Inline.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1686,MMusic,80,2728,InformationProviding,,-1,">         m=video 41000 RTP/AVPF 98
>         i=Primary Multicast Stream #2
>         c=IN IP4 224.1.1.2/255
>         a=source-filter: incl IN IP4 224.1.1.2 192.0.2.2
> Source (192.0.2.2) sends the rtp packets to the multicast
> group (224.1.1.2)
> with a dest port 41000.
>         a=rtpmap:98 MP2T/90000
>         a=rtcp:41001 IN IP4 192.0.2.1
> The feedback target (RS) address for this SSM session is
> 192.0.2.1 and its
> port is 41001. This is the address/port where RR sends the RAMS-R, or
> receiver reports for the SSM session.
>         a=rtcp-fb:98 nack
>         a=rtcp-fb:98 nack ssli
>         a=ssrc:123321 cname:iptv-ch32@rams.example.com
>         a=mid:3
>         m=video 41002 RTP/AVPF 99
> The retransmission packets go to port 41002. This is the port
> RRs listen to
> for retransmission and RAMS.
> Roni E: This implies that the multicast source defines the
> port that all
> clients MUST use to receive the unicast information from the
> Burst source.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1687,MMusic,80,2729,"InformationProviding,Agreement,ProposeAction,InformationProviding,ProposeAction",2728,-1,"
Yes, that is what it implies (One nit is that I would call it unicast RTP packets rather than information since we may use another port for RTCP packets).
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1688,MMusic,80,2730,"InformationProviding,ContextSetting",,-1,">         i=Unicast Retransmission Stream #2 (Ret. and Rapid
> Acq. Support)
>         c=IN IP4 192.0.2.1
> This is where the retransmission packets come from, same as
> the feedback
> target (in this example).
> Roni E: If this is the address of the feedback target it
> belongs to the
> above m-line (m=video 41002 RTP/AVPF 99) that according to
> you gives the
> port on the RR and not on the RS. The problem is that",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1689,MMusic,80,2731,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,NeutralResponse",2730,-1,"
This line actually specifies the sender for the unicast retransmission session. In our case, it just happens to be the feedback target for the primary SSM session, too. I recall some discussion about using a retransmission source which is different than the feedback target for the SSM. In that case, the address would be different, I guess.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1690,MMusic,80,2732,"InformationProviding,ExtensionOfPrevious",2730,-1,"> according to SDP the
> combination of the c= and port on the m-line provides the
> transport address
> to where a stream will be sent so according to SDP this",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1691,MMusic,80,2733,"ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,Question,InformationProviding",2732,-1,"
The port on the m line is the port where the retranmission packets are sent. However, c line denotes the source for these packets. RFC 4566 page 13 says that ""... If the session is not multicast, then the connection address contains the unicast IP address of the expected data source or data relay or data sink as determined by additional attribute fields...""

Am I missing something?
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1692,MMusic,80,2734,"InformationProviding,ExtensionOfPrevious,ProposeAction",2732,-1,"> m-line specify an
> address and port on the Feedback Target and not on the RR and
> only to this
> address RTP payload type 99 will be sent. I am positive that
> this is not
> what you want.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1693,MMusic,80,2735,"NeutralResponse,ProposeAction,StateDecision,InformationProviding,StateDecision",2734,-1,"
There can be other payload types we might need to send on this retransmission session in the future. In that case, we will add them.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1694,MMusic,80,2736,"InformationProviding,ProposeAction",,-1,">         a=rtpmap:99 rtx/90000
>         a=rtcp:41003
> This is where the RTCP packets for the retransmission session go. For
> example, RAMS-I goes to this port on RRs. RAMS-T goes to this
> port on RS.
> Roni E: So now you assume that the RR must use the same port
> as the FT for
> this communication. I could not find any place that one
> m-line gives the",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1695,MMusic,80,2737,"Question,InformationProviding,Disagreement,Question,InformationProviding",2736,-1,"
Not the m line, but the ""a=rtcp"" line. Is this wrong?
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1696,MMusic,80,2738,"InformationProviding,ExtensionOfPrevious",2736,-1,"> address for both sides. This RTCP port is on 192.0.2.1 so it
> will be used
> for RAMS-R but not for RAMS-I.",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1697,MMusic,80,2739,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",2738,-1,"
RAMS-R should go to the feedback target address and port for the primary SSM session since it is a feedback message for the SSM session. But, RAMS-T is a feedback message for the retransmission session, thus, it should go to the RTCP port of the retransmission session (41003). I hope this also clarifies your question in the next email. If you think I got the ports wrong, let me know.

-acbegen
",<04CAD96D4C5A3D48B1919248A8FE0D54092C8408@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:23:17
1698,MMusic,80,3232,"InformationProviding,ContextSetting,InformationProviding",2739,-1,"Ali,
I looked at RTSP
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-20#appendix-D",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1699,MMusic,80,3233,"ExtensionOfPrevious,ContextSetting,InformationProviding",3232,-1,"
D.1.2.  Media Streams",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1700,MMusic,80,3234,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",3233,-1,"
The ""m="" field is used to enumerate the streams.  It is expected that
all the specified streams will be rendered with appropriate
synchronization.  If the session is over multicast, the port number
indicated SHOULD be used for reception.  The client MAY try to
override the destination port, through the Transport header.  The
servers MAY allow this, the response will indicate if allowed or not.
If the session is unicast, the port numbers are the ones RECOMMENDED
by the server to the client, about which receiver ports to use; the
client MUST still include its receiver ports in its SETUP request.
The client MAY ignore this recommendation.  If the server has no
preference, it SHOULD set the port number value to zero.",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1701,MMusic,80,3235,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",3234,-1,"
Note that the client has the choice on which port to receive the unicast
stream, this is why there should be such a parameter in RAMS-R",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1702,MMusic,80,3236,"ExtensionOfPrevious,InformationProviding",3232,-1,"
Also",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1703,MMusic,80,3237,"ExtensionOfPrevious,ContextSetting,InformationProviding",3236,-1,"
"" D.1.8.  Connection Information",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1704,MMusic,80,3238,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",3237,-1,"
In SDP, the ""c="" field contains the destination address for the media
stream.  For on-demand unicast streams and some multicast streams,
the destination address MAY be specified by the client via the SETUP
request, thus overriding any specified address.  To identify streams
without a fixed destination address, where the client is required to
specify a destination address, the ""c="" field SHOULD be set to a null
value.  For addresses of type ""IP4"", this value MUST be ""0.0.0.0"",
and for type ""IP6"", this value MUST be ""0:0:0:0:0:0:0:0"" (can also be
written as ""::""), i.e. the unspecified address according to RFC 4291
[RFC4291].""",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1705,MMusic,80,3239,"ExtensionOfPrevious,ContextSetting,ClarificationElicitation",3238,-1,"
As for the c-line in the unicast stream the whole section you quoted",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1706,MMusic,80,3240,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",3239,-1,"
"" If the session is multicast, the connection address will be an IP
multicast group address.  If the session is not multicast, then
the connection address contains the unicast IP address of the
expected data source or data relay or data sink as determined by
additional attribute fields.  It is not expected that unicast
addresses will be given in a session description that is
communicated by a multicast announcement, though this is not
prohibited.""",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1707,MMusic,80,3241,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",3240,-1,"
Now the expectation here is for the address of the stream described by the
port in the m-line, I do not see any other attribute. Also look at the above
text from RTSP. The RS does not know the IP address on the RR to where to
send the RTP unicast repair stream. If you assume it is to the IP address
from where the RTCP RAMS-R came from this is not mandated that the client
will have such implementation. Furthermore the address that the RS will see
in the received RTCP RAMS-R packet may have been change by a NAT or SBC.",<49f4182f.07a5660a.3f7f.ffffe36a@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 11:14:07
1708,MMusic,80,3244,"Social,Social",,-1,"Hi Roni,",<04CAD96D4C5A3D48B1919248A8FE0D54092C841F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 10:02:24
1709,MMusic,80,3800,"InformationProviding,ContextSetting,ProposeAction,Thanking,InformationProviding,NeutralResponse,Thanking",3232,-1,"
Thanks for the detailed answer. Admittedly, I don't know much about RTSP beyond its basics. However, I doubt how much it applies in our case. ""Unicast"" in RTSP context mostly refers to video-on-demand kind of applications where the primary distribution is over unicast. In contrast, our primary distribution is over multicast, and we use unicast as a repair stream. Thus, I still believe the SDP we have should work fine. RS gathers the IP address of the RR when it receives the RAMS request. The samething happens when RR sends a NACK for requesting retransmissions.",<04CAD96D4C5A3D48B1919248A8FE0D54092C841F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 10:02:24
1710,MMusic,80,3801,"InformationProviding,Disagreement,ExtensionOfPrevious,ProposeAction,InformationProviding,Disagreement,ExtensionOfPrevious",3800,-1,"
That is not to say that this SDP is the only SDP that will work in this system. There may be others. But, I still don't agree with you when you say that this SDP won't work. My expectation is that we will include other SDP examples as we move forward.",<04CAD96D4C5A3D48B1919248A8FE0D54092C841F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 10:02:24
1711,MMusic,80,3802,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",3241,-1,"
On your last point, NAT is a different issue and there has to be a way to deal with it. Muxing sounds reasonable, and we may or may not mandate it, I am not sure at this point. An alternative could be that RR opens ports on its NAT device and includes them in the request message it sends. These could be in RAMS-R TLV extensions, or could be a separate RTCP packet solely for this purpose within the same RTCP compound packet that carries the RAMS-R. I believe Bill mentioned these briefly in his earlier email. We are open to suggestions at this point and the NAT section will cover these issues once we have a WG item.",<04CAD96D4C5A3D48B1919248A8FE0D54092C841F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 10:02:24
1712,MMusic,80,3803,InformationProviding,,-1,"
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54092C841F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 10:02:24
1713,MMusic,80,4410,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Disagreement,ProposeAction",3800,-1,"Ali,
Your SDP example will not help anyone who will try to develop interop
application, the c-line in the unicast stream and the port should refer to
the same device since there is no other attribute in the example that points
to a different semantics to anyone who will look at it. The semantics that
you are using where the c-line is for the RS and the port is for the RR and
the RS assuming that the RS somehow knows the IP address of the RR based on
the RAMS-R request may work in some cases but should not be the one shown as
the primary example and should not be the recommended way, The recommended
way should be to convey the address of the RR in the RAMS-R and this is the
reason I pointed to RTSP. The semantics of the SDP in the example is not
documented in your text and is not obvious to anyone who will just look at
it.",<49f4acd6.0c11660a.6549.ffffb339@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 21:48:12
1714,MMusic,80,4411,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,Disagreement","3801,3802",-1,"
I also strongly object to mandating that the client MUST use a port defined
by the server to receive the unicast stream. The RS can recommend a port but
it is the client (RR) decision to decide which port to use.",<49f4acd6.0c11660a.6549.ffffb339@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 21:48:12
1715,MMusic,80,5087,InformationProviding,,-1,"Roni,
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1716,MMusic,80,5089,"InformationProviding,NeutralResponse,InformationProviding,Disagreement",4410,4410,"
I believe this is rather a strong claim, considering that I already mentioned that we would add more SDP examples as we moved forward.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1717,MMusic,80,5091,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,Disagreement,UnderstandingNegative",4410,4410,"
Again, you are missing the point that we will add more SDP examples as well as discussion for NAT issues. The current SDP is just one example that we came up with, and which, I believe, still works and has been there since version -00. It may be modified, removed or replaced.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1718,MMusic,80,5093,"InformationProviding,NeutralResponse,InformationProviding,Agreement",4410,4410,"
This is reasonable, rtp/rtcp muxing is also reseanoable and it is indeed very neat, too.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1719,MMusic,80,5095,"Agreement,ProposeAction,InformationProviding,ProposeAction","188,4410",188,"
We can certainly add more detailed explanation to the SDP section. But, let's focus more on the draft rather than a single SDP example that it currently has.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1720,MMusic,80,5097,"InformationProviding,NeutralResponse,ProposeAction,StateDecision,InformationProviding,ProposeAction",4411,4411,"
We are not mandating anything yet as I mentioned several times before. I suggest we drop this discussion and move forward with the draft. Based on the comments/suggestions that may be sent to your email about the SDP example, we will be more than happy to incorporate what AVT decides to do.

-acbegen
",<04CAD96D4C5A3D48B1919248A8FE0D54092C844F@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-26 18:54:14
1721,MMusic,80,5452,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding",1952,-1,"Ali,
Another comment
I thought that RAMS-R and RAMS-T go to the same port but in the example you
say that RAMS-R go to port 41001 and RAMS-T go to port 41003",<49f3826c.25e2660a.7ce0.7689@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 00:34:51
1722,MMusic,80,5808,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding",1946,-1,"Ali,
I looked at RFC 4570 and I assume that port 41001 is the port for the
unicast RTCP reports from the receivers and according to section 3.2.1 of
that RFC you also should have a RTCP-unicast specification. This is for the
multicast receiver reports.",<49f387ca.0305560a.6657.4be7@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-26 00:57:46
1723,MMusic,80,6202,"Agreement,Agreement",5808,5808,"
Yes, indeed.
",<04CAD96D4C5A3D48B1919248A8FE0D54092C840A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:26:44
1724,MMusic,80,6204,"InformationProviding,Agreement,ContextSetting,Agreement,StateDecision",5808,5808,"
Correct. We do have that line in our draft at the top right after the grouping lines:",<04CAD96D4C5A3D48B1919248A8FE0D54092C840A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-04-25 15:26:44
1725,MMusic,80,6207,"Social,Social",,-1,"Hi all,",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1726,MMusic,80,6660,"ContextSetting,Apologising,Apologising",,-1,"
sorry for jumping in....",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1727,MMusic,80,6661,"InformationProviding,ProposeAction,InformationProviding,UnderstandingNegative",1945,-1,"
I think one of the sources of confusion is that the attribute a=rtcp: is
used once for specifying the destination port  and once for specifying a
receiving port, and in the same SDP (!). The destination port for RAMS-I
packets sent by RS and the receiving port for RAMS-T. Which is also why
different port numbers are used for RAMS-T and -R packets.",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1728,MMusic,80,6662,"ExtensionOfPrevious,ProposeAction,InformationProviding,UnderstandingNegative",6661,-1,"
I think the use of a=rtcp: in SSM is the problem here. Or the fact that
we are mixing unicast and multicast, or both.",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1729,MMusic,80,6663,"ExtensionOfPrevious,Social,InformationProviding",6662,-1,"
Hope this helps,",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1730,MMusic,80,6664,InformationProviding,,-1,"
JLR",<4A15D40E.80509@eu.panasonic.com>,jose.rey@eu.panasonic.com,0.0,0,19,2009-05-22 00:22:06
1731,MMusic,80,6667,"Social,Social",,-1,"Hi Jose,",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1732,MMusic,80,7231,"Question,InformationProviding,NeutralResponse,Question,InformationProviding",6661,-1,"
We have separate RTCP ports for the SSM session and the unicast session. Why is it a problem?",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1733,MMusic,80,7232,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",6661,-1,"
The slightly modified SDP for the next version is below:",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1734,MMusic,80,7233,"InformationProviding,ExtensionOfPrevious,InformationProviding",7232,-1,"
a=group:FID 3 4
a=rtcp-unicast:rsi
m=video 41000 RTP/AVPF 98
i=Primary Multicast Stream #2
c=IN IP4 233.252.0.2/255
a=source-filter: incl IN IP4 233.252.0.2 192.0.2.2
a=recvonly
a=rtpmap:98 MP2T/90000
a=rtcp:41001 IN IP4 192.0.2.1
a=rtcp-fb:98 nack
a=rtcp-fb:98 nack ssli
a=ssrc:123321 cname:iptv-ch32@rams.example.com
a=mid:3
m=video 41002 RTP/AVPF 99
i=Unicast Retransmission Stream #2 (Ret. and Rapid Acq. Support)
c=IN IP4 192.0.2.1
a=recvonly
a=rtpmap:99 rtx/90000
a=rtcp:41003
a=fmtp:99 apt=98; rtx-time=5000
a=mid:4",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1735,MMusic,80,7234,"InformationProviding,ExtensionOfPrevious,InformationProviding",7233,-1,"
This is the SDP we send to RR. For RS, a=recvonly will be a=sendonly.",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1736,MMusic,80,7235,InformationProviding,,-1,"
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54095E153A@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-21 16:59:54
1737,MMusic,80,7936,"Social,Social",,-1,"Hi Ali,
",<1FEB9B9F2EC38343955D02B2AE86AACB011BF41B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-05-22 16:09:20
1738,MMusic,80,7938,"Question,ClarificationElicitation,InformationProviding,Answer,ContextSetting,ProposeAction,Question,ClarificationElicitation,InformationProviding,Answer",7231,7231,"
In line 19 you say you specify the dst port for RMS-I (41003), on RR. And you say that would also be the port where the RR sends RMS-T, on RS. That is mixing the semantics of a=rtcp for SSM (listening port at Feedback Target = mcast RTCP dst port) and those of RFC 3605 (dst port). In other words, you are implicitly assuming that specifies symmetric RTCP...no?

Another thing that was mentioned already:  RMS-T is not sent to same port as RMS-R; is it not the same RTCP session ? Or is this muxing desired? why?

JLR
",<1FEB9B9F2EC38343955D02B2AE86AACB011BF41B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-05-22 16:09:20
1739,MMusic,80,7939,InformationProviding,7232,7232,"1>         a=group:FID 3 4
2>         a=rtcp-unicast:rsi
3>         m=video 41000 RTP/AVPF 98
4>         i=Primary Multicast Stream #2
5>         c=IN IP4 233.252.0.2/255
6>         a=source-filter: incl IN IP4 233.252.0.2 192.0.2.2
7>         a=recvonly
8>         a=rtpmap:98 MP2T/90000
9>         a=rtcp:41001 IN IP4 192.0.2.1
10>         a=rtcp-fb:98 nack
11>         a=rtcp-fb:98 nack ssli
12>         a=ssrc:123321 cname:iptv-ch32@rams.example.com
13>         a=mid:3
14>         m=video 41002 RTP/AVPF 99
15>         i=Unicast Retransmission Stream #2 (Ret. and Rapid",<1FEB9B9F2EC38343955D02B2AE86AACB011BF41B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-05-22 16:09:20
1740,MMusic,80,7940,InformationProviding,470,470,"16>         c=IN IP4 192.0.2.1
17>         a=recvonly
18>         a=rtpmap:99 rtx/90000
19>         a=rtcp:41003
20>         a=fmtp:99 apt=98; rtx-time=5000
21>         a=mid:4",<1FEB9B9F2EC38343955D02B2AE86AACB011BF41B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-05-22 16:09:20
1741,MMusic,80,7942,InformationProviding,470,470,"
Panasonic R&D Center Germany GmbH
63225 Langen, Hessen, Germany
Reg: AG Offenbach (Hessen) HRB 33974
Managing Director: Thomas Micke",<1FEB9B9F2EC38343955D02B2AE86AACB011BF41B@lan-ex-02.panasonic.de>,Jose.Rey@eu.panasonic.com,0.0,0,19,2009-05-22 16:09:20
1742,MMusic,80,7944,"Social,Social",,-1,"Hi Jose,",<04CAD96D4C5A3D48B1919248A8FE0D54095E18BB@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-22 17:26:36
1743,MMusic,80,8663,"InformationProviding,Answer,Agreement,InformationProviding,Agreement",7938,-1,"
Indeed, RAMS-R goes to the FT of the new primary session that RR is interested in acquiring rapidly. Then the unicast session becomes alive and RS sends RAMS-I message(s) to RR on the RTCP port for the unicast session. After some time, RR sends the RAMS-T message to the RTCP port for the unicast session since it is supposed to end the unicast session.",<04CAD96D4C5A3D48B1919248A8FE0D54095E18BB@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-22 17:26:36
1744,MMusic,80,8664,InformationProviding,,-1,"
-acbegen",<04CAD96D4C5A3D48B1919248A8FE0D54095E18BB@xmb-sjc-215.amer.cisco.com>,abegen@cisco.com,0.0,0,8,2009-05-22 17:26:36
1745,MMusic,80,8699,InformationProviding,,-1,"Sessions (RAMS)"" available",<81B9B88E2F9D574AA5328A85547CDE9101153491@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 14:50:25
1746,MMusic,80,8764,"InformationProviding,Agreement,ProposeAction,InformationProviding,ProposeAction",89,-1,"Roni-

Yes, the document needs updating in this respect. We have two broad
options which need to be described in detail.

The method that I have been assuming does use muxing. The RS sends the
unicast burst back to the UDP port number on the RR that sent the
RAMS-R. This allows transparent operation through NAT. There is a single
UDP port, and the transaction is initiated by the ""client"", so it is NAT
friendly.

There are quite a few ways we could handle the case in which muxing is
not used. We could add a parameter to the RAMS-R, use another RTCP
packet in the same compound packet, define the port numbers as a
relationship to the opened port (not attractive), or define something in
the SDP (also not attractive). I personally like the ""RAMS-R optional
field"" approach, but I think this should be a topic that we consider in
detail once we have a WG item.
",<81B9B88E2F9D574AA5328A85547CDE9101153491@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 14:50:25
1747,MMusic,80,8765,InformationProviding,,-1,"
bvs
",<81B9B88E2F9D574AA5328A85547CDE9101153491@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 14:50:25
1748,MMusic,80,8767,"InformationProviding,Disagreement,ProposeAction",,-1,"
Hi,

I think that the current draft does not give a description of a system
that works since there is no text explaining how the RS knows the
unicast transport address on the RR to where to send the stream.

If you mandate the use of RTP/RTCP mux it should say so otherwise the
RAMS-R should have an optional parameter that supplies this information
and a flag for using RTP/RTCP mux.

Thanks

Roni Even
",<81B9B88E2F9D574AA5328A85547CDE9101153491@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 14:50:25
1749,MMusic,80,8770,InformationProviding,,-1,"Bill,",<49f2111f.02a1660a.2722.ffff9354@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:19:04
1750,MMusic,80,8916,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,InformationProviding",8764,-1,"
Since I have two hats here then as a WG chair, my intention is to ask the
list to start this topic as a WG item",<49f2111f.02a1660a.2722.ffff9354@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:19:04
1751,MMusic,80,8917,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",8916,-1,"
Taking my WG chair off, my expectation is that a WG document will describe a
solution that can be implemented while the current text does not specify how
to make it work. I do not care if you write that RTP/RTCP mux MUST be used
by the RS and supported by the RR and update the SDP in the example to
specify that this is case.",<49f2111f.02a1660a.2722.ffff9354@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:19:04
1752,MMusic,80,8918,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",8917,-1,"
My personal preference is to have the RS indicate in the SDP that it wants
to use multiplexing and to add a flag to RAMS-R that will indicate if
RTP/RTCP mux is supported by RR and can be used. Only if the RR cannot
support the multiplexing it should indicate it using the flag and add to the
RAMS-R the transport address to be used (Note that it can be v4 or v6).",<49f2111f.02a1660a.2722.ffff9354@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:19:04
1753,MMusic,80,8919,"InformationProviding,ExtensionOfPrevious,InformationProviding",8918,-1,"
SDP cannot be used since there is no SDP from RR to RS.",<49f2111f.02a1660a.2722.ffff9354@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2009-04-24 22:19:04
1754,MMusic,80,8939,InformationProviding,,-1,Roni Even,<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1755,MMusic,80,8943,InformationProviding,,-1,"RTPSessions (RAMS)"" available",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1756,MMusic,80,8983,InformationProviding,,-1,"Sessions (RAMS)"" available",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1757,MMusic,80,9033,InformationProviding,,-1,"Sessions (RAMS)"" available",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1758,MMusic,80,9096,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,Agreement",8917,-1,"Roni-

These are reasonable approaches, which I need to consider in detail. I
have (mostly) been thinking about NAT-friendly solutions, which leads me
back to muxing. I need to consider the ramifications of NAT on the
methods that signal IP addresses and port numbers as part of the
run-time for acceleration. The intent is to make acquisition faster, and
additional complexity at session instantiation should be avoided (IMHO).

More to come, once I get my head around the various options.

bvs
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1759,MMusic,80,9098,InformationProviding,,-1,"
Bill,
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1760,MMusic,80,9099,InformationProviding,,-1,"
Since I have two hats here then as a WG chair, my intention is to ask
the list to start this topic as a WG item
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1761,MMusic,80,9100,InformationProviding,,-1,"
Taking my WG chair off, my expectation is that a WG document will
describe a solution that can be implemented while the current text does
not specify how to make it work. I do not care if you write that
RTP/RTCP mux MUST be used by the RS and supported by the RR and update
the SDP in the example to specify that this is case.
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1762,MMusic,80,9101,"InformationProviding,ProposeAction",,-1,"
My personal preference is to have the RS indicate in the SDP that it
wants to use multiplexing and to add a flag to RAMS-R that will indicate
if RTP/RTCP mux is supported by RR and can be used. Only if the RR
cannot support the multiplexing it should indicate it using the flag and
add to the RAMS-R the transport address to be used (Note that it can be
v4 or v6).

SDP cannot be used since there is no SDP from RR to RS.
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1763,MMusic,80,9102,InformationProviding,,-1,"
Roni Even
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1764,MMusic,80,9104,InformationProviding,,-1,"
Roni-
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1765,MMusic,80,9105,"InformationProviding,ProposeAction",,-1,"
Yes, the document needs updating in this respect. We have two broad
options which need to be described in detail.
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1766,MMusic,80,9106,InformationProviding,,-1,"
The method that I have been assuming does use muxing. The RS sends the
unicast burst back to the UDP port number on the RR that sent the
RAMS-R. This allows transparent operation through NAT. There is a single
UDP port, and the transaction is initiated by the ""client"", so it is NAT
friendly.
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1767,MMusic,80,9107,"ClarificationElicitation,ProposeAction",,-1,"
There are quite a few ways we could handle the case in which muxing is
not used. We could add a parameter to the RAMS-R, use another RTCP
packet in the same compound packet, define the port numbers as a
relationship to the opened port (not attractive), or define something in
the SDP (also not attractive). I personally like the ""RAMS-R optional
field"" approach, but I think this should be a topic that we consider in
detail once we have a WG item.
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1768,MMusic,80,9108,InformationProviding,,-1,"
bvs
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1769,MMusic,80,9110,"InformationProviding,ProposeAction",,-1,"
Hi,

I think that the current draft does not give a description of a system
that works since there is no text explaining how the RS knows the
unicast transport address on the RR to where to send the stream.

If you mandate the use of RTP/RTCP mux it should say so otherwise the
RAMS-R should have an optional parameter that supplies this information
and a flag for using RTP/RTCP mux.

Thanks

Roni Even
",<81B9B88E2F9D574AA5328A85547CDE91011534E2@xmb-rtp-21d.amer.cisco.com>,versteb@cisco.com,0.0,0,12,2009-04-24 15:37:11
1770,MMusic,81,0,InformationProviding,,-1,Multiparty Multimedia Session Control (MMUSIC) Working Group Minutes,<E8578259-D6ED-4D2A-B4B3-9BE85BD9360F@csperkins.org>,csp@csperkins.org,0.0,0,2,2005-11-19 11:01:16
1771,MMusic,82,782,"InformationProviding,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"I am an additional Gen-ART reviewer for this draft. For background on
Gen-ART, please see the FAQ at",<1370477514.4596.9052.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-06 01:11:53
1772,MMusic,82,783,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",782,-1,"
<http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.",<1370477514.4596.9052.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-06 01:11:53
1773,MMusic,82,784,"ProposeAction,ExtensionOfPrevious,ProposeAction,Social",783,-1,"
Please resolve these comments along with any other Last Call comments
you may receive.",<1370477514.4596.9052.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-06 01:11:53
1774,MMusic,82,785,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",784,-1,"
Document: draft-ietf-mmusic-rfc2326bis",<1370477514.4596.9052.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-06 01:11:53
1775,MMusic,82,925,"InformationProviding,ProposeAction,StateDecision,Thanking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social,Thanking",784,-1,"Hi Elwyn,

Many thanks for the detailed review. We will address the nits you have
raised, but I cut them out of this reply to focus on the more
substantial issues you have brought up.

See inline below.
",<51B1A95B.2030208@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 11:35:23
1776,MMusic,82,926,"Question,InformationProviding,ContextSetting,ProposeAction",,-1,"On 2013-06-06 02:11, Elwyn Davies wrote:
> I am an additional Gen-ART reviewer for this draft. For background on
> Gen-ART, please see the FAQ at
> <http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.
> Please resolve these comments along with any other Last Call comments
> you may receive.
> Document: draft-ietf-mmusic-rfc2326bis
> Reviewer: Elwyn Davies
> Review Date: 5 June 2013
> IETF LC End Date: 5 JUne 2013
> IESG Telechat date: (if known) -
> Summary:
> Almost ready.  Generally this is an excellent and well written document,
> particularly given its size.  There are a few minor issues to sort out
> mainly at the nit level and some consistency issues to fix up.  The two
> issues that I have brought out below are really at what the IESG would
> call 'DISCUSS-DISCUSS' level.  The issue of URI scheme redefinition may
> well have already been cleared by the URI expert - the draft does not do
> itself any favours here by failing to explain what the syntax changes
> are in s4.2; this raises immediate red flags that only start to fade a
> couple of hundred pages later. The rudimentary nature of the pipeline
> mechanism is carried over from RTSP 1.0.  I'd like to be sure that this
> has been properly discussed in the WG as it looks pretty flaky to an
> outsider.  There are several inconsistencies between various lists of
> headers that need sorting out and there is no definition of
> Proxy-Authorization in the ABNF.
> There are also a fairly large number of editorial nits but these are all
> localized and trivial to fix.  Finally I have't had time to review the
> appendices (maybe there will be a follow up).
> Robert Sparks is the main gen-art reviewer for the document; he asked
> for additional eyes on the document given the size and his RAI
> background.  Having (just) seen his review, I think we have both picked
> up on the URI scheme and pipeline issues.  I am not sure that I concur
> with his view that there is significant normative material in the
> appendices - AFAICS the main protocol definition *is* in the main body
> of the document and the bits especiially in Appendices B and C are not
> the core of the protocol.  However this is based on a very cursory
> glance through something like 75 pages of the document.  However, I do
> concur with Robert's view that it needs a security expert to check the
> security stories.
> Major(ish) issues:
> s4.2: This section (re-)defines the URI schemes ""rtsp"" and ""rtsps"". The
> last sentence of para 1 states that the 'details of the syntax' of the
> URIs 'have been changed'.  Is this a reasonable thing to do? Has this
> been cleared with the URI expert reviewer?  I am not entirely clear what
> the change involves and the draft doesn't explain exactly how the syntax
> has been altered  and its consequences (if any) in s4.2.  Some details
> are finally given in s22.14.",<51B1A95B.2030208@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 11:35:23
1777,MMusic,82,927,"InformationProviding,ProposeAction,InformationProviding,Answer,ContextSetting,ProposeAction",926,-1,"
These syntax changes where discussed in the reviews I got on the URI
list. That resulted in the explicitness in the template, but I forgot
about adding anything into Section 4.2. I see no issue with adding the
following clarification to Section 4.2:

The details of the syntax of ""rtsp"" and ""rtsps"" URIs has been changed
from RTSP 1.0.  These changes are:

o  Support for IPV6 literal in host part and future IP literals
through RFC 3986 defined mechanism.

o  A new relative format to use in the RTSP protocol elements that is
not required to start with ""/"".

Neither should have any significant impact on interoperability.  If
one is required to use IPv6 literals to reach an RTSP server, then
that RTSP server must be IPv6 capable, and RTSP 1.0 is not a fully
IPv6 capable protocol.  Thus, RTSP 2.0 support will be needed anyway.
The second change will only occur in RTSP messages, that are
explicitly identified as being RTSP 2.0 messages, thus a RTSP 1.0
only agent will not be required to parse this variant.

I hope this makes it clear that these syntax changes is unlikely to hurt
the interoperability.
",<51B1A95B.2030208@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 11:35:23
1778,MMusic,82,928,"InformationProviding,ContextSetting,ProposeAction",,-1,"> Minor issues:
> s11, para 3: I guess that the WG decided that sticking with the RTSP 1.0
> model of sending requests and worrying about success of prior prior
> pipelined requests was the right answer.  I would have thought that it
> might have been helpful to provide qualifiers on the Pipelined-Requests
> header that allowed subsequent requests to be suppressed unless the
> previous command resulted in one of a given set of status codes with a
> 'reset' option to 'restart' the pipeline.  It strikes me that this would
> avoid some irritating need to work out how to recover from arbitrary
> failures in a command chain in a client.",<51B1A95B.2030208@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 11:35:23
1779,MMusic,82,929,"InformationProviding,Agreement,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Social",928,-1,"
I assume you mean this Section 12 paragraph:

If a pipelined request builds on the successful completion of one or
more prior requests the requester must verify that all requests were
executed as expected.  A common example will be two SETUP requests
and a PLAY request.  In case one of the SETUP fails unexpectedly, the
PLAY request can still be successfully executed.  However, the
resulting presentation will not be as expected by the requesting
client, as only a single media instead of two will be played.  In
this case the client can send a PAUSE request, correct the failing
SETUP request and then request it to be played.

I think I agree with your assessment, that it would have been nice.
However, we should have thought of that when we introduced this type of
pipelining 7 years ago. Making any changes to this at this stage is
counter productive. The reality is that all the ""nice"" features and
necessary clarifications has been retrofitted into RTSP 1.0 by the ones
that have been using RTSP 1.0. So changing anything will separate the
RTSP 1.0 and RTSP 2.0 implementations. The good thing is that I can't
remember any substantial complaints about this issue.

I hope this resolves your comments.
",<51B1A95B.2030208@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 11:35:23
1780,MMusic,82,938,"Thanking,Thanking",925,925,.. and thanks for the quick response.,<1370607960.4596.9114.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-07 13:26:00
1781,MMusic,82,942,"InformationProviding,Agreement,NeutralResponse",925,925,OK.  I think the responses clear those issues.,<1370607960.4596.9114.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-07 13:26:00
1782,MMusic,82,1112,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","925,942",925,"
I have done a little bit more on the Appendices and liaised a bit with
Robert Sparks.  'Highlights':

Appendix F: I missed that the text/parameter format appeared in the
examples for GET_PARAMETER and SET_PARAMETER. It isn't stated in the
definitions of these methods what encodings are acceptable for the
message bodies that may go with these methods and their responses.
Clearly the new text/parameter MIME format is one.  Is it the only one?
I guess you could use a application/json or an XML format but I guess
these would also either have to be called out explicitly in the method
descriptions or put in as feature extensions.  This needs to be
clarified in the method descriptions (s13).  The upshot of all this is
that I think Appendix F needs to be pulled back into Section 20 as
currently it is the only way to encode the message bodies.

Appendix B: I appreciate that the state machine is illustrative and to
an extent 'abstract'.  However, the tables are really written to
describe the state machine in the server: the action column mostly
describes the events that come into the server (apart from the notify
actions) - sending these 'events' are actions in the client.  The 'real'
state machine in the both the server and the client has a somewhat more
complex form: I'd think that there was a STOPPED state in the server
when the media has reached an end point and not been explictly paused
and STARTING/PAUSING states in the client while the client waits for
response to PLAY/PAUSE respectively.  I think a little bit more
explanation about the dual nature of the columns would solve the
problem.

Appendix C: Pending.
",<1370607960.4596.9114.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-07 13:26:00
1783,MMusic,82,1197,"Social,Social",,-1,"Hi Elwyn,
",<51B1E8BD.80901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 16:05:49
1784,MMusic,82,1199,"InformationProviding,Agreement,InformationProviding,NeutralResponse",1112,1112,"
Exactly, that is intentional. These methods can use anything that has a
MIME type. Also it has HTTP's mechanisms for determining what formats
one supports.
",<51B1E8BD.80901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 16:05:49
1785,MMusic,82,1200,"InformationProviding,Answer,InformationProviding,Answer",1112,1112,"
It is the only one defined by IETF for this purpose. That is why it is
in the appendix so that RTSP users shall have something to define the
parameters they want in. However, they have to accept the limitations of
a basic text format.
",<51B1E8BD.80901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 16:05:49
1786,MMusic,82,1202,"InformationProviding,Agreement,Disagreement,ProposeAction,StateDecision,InformationProviding,Agreement,Disagreement,ProposeAction",1112,1112,"
I can agree that the format negotiation for the bodies of
GET/SET_PARAMETER is not clear. I will look at proposing some
improvements of the text related to the handling of method bodies and
their format negotiation.

However, I am not pulling in Appendix F. It is an optional to use format
for parameter value pairs that can be used in these methods, it is not
required. Nor, does the specification define any parameters that are
transferred using this interface. The things that are in the appendix
are not core protocol, they represent either informational things, like
the examples and the state machine. The other appendices are normative
definitions of particular choices for things that can be combined or
used with RTSP, like RTP as media transport.
",<51B1E8BD.80901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 16:05:49
1787,MMusic,82,1204,"InformationProviding,StateDecision,NeutralResponse,ProposeAction",1112,1112,"
There shouldn't be an issue to clarify this nature.
",<51B1E8BD.80901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 16:05:49
1788,MMusic,82,1264,"InformationProviding,NeutralResponse,InformationSeeking,InformationProviding,NeutralResponse,ProposeAction",1202,1202,"Good. I don't see where the server tells what formats it accepts for
either GET_PARAMETER or SET_PARAMETER.  Also the Accept spec doesn't say
anything about SET_PARAMETER.  AFAICS the client could tell the server
what formats it accepts as a side-effect of DESCRIBE but that's a bit
arcane - and it is not clear how you would separate the formats for
DESCRIBE from those for GET_PARAM and SET_PARAM.",<1370619602.4596.9175.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-07 16:40:02
1789,MMusic,82,1266,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",1202,1202,"OK, it is possible to use GET_PARAM for basic requirements without using
message bodies, so you can get away without defining a lowest common
denominator format. However, the use of message bodies for SET_PARAM is
RECOMMENDED so it seems a little odd not to ensure that server and
client will have at least one format in common. (And its not as if we
are dealing with a hugely complicated bit of spec for
text/parameters! :-) ).  Then, given the example in GET_PARAMETER it
seems sensible to advise implementing text/parameters as the default for
GET_PARAM also.

/Elwyn",<1370619602.4596.9175.camel@mightyatom>,elwynd@folly.org.uk,0.0,0,2,2013-06-07 16:40:02
1790,MMusic,82,1342,"InformationProviding,Agreement,Agreement,ProposeAction",1264,1264,"
Yes, I think this negotiation should happen on per methods basis.",<51B585A7.7060109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-10 09:52:07
1791,MMusic,82,1344,"InformationProviding,NeutralResponse,NeutralResponse,ProposeAction",1266,1266,"
Sure, I personally don't have any issue with making it at least SHOULD
implement text/parameters. But from my horizon a forward pointer with
the normative requirements is sufficient to accomplish that.
",<51B585A7.7060109@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-10 09:52:07
1792,MMusic,83,0,"Social,Social",,-1,"Dear all,",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1793,MMusic,83,57,"InformationProviding,ContextSetting,InformationProviding",,-1,"
draft-ietf-mmusic-rfc2326bis-28 specifies the Vary header in Section 16.55. I have included the full text if this section below, for your reference.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1794,MMusic,83,58,"InformationProviding,ExtensionOfPrevious,InformationProviding",57,-1,"
This header has been taken from HTTP/1.1 and did appear in past versions of draft-ietf-mmusic-rfc2326bis-28 as a simple reference to HTTP, i.e., without any explanation of what this header really means in RTSP. We copied and adapted the current text from HTTP/1.1 in one of the revisions of RTSP 2.0.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1795,MMusic,83,59,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction,UnderstandingNegative",58,-1,"
However, we got the comment that Vary as operation is very unclear and it is unclear if any existing RTSP 1.0 implementation is actually using this. It might be a good first indicator that Vary is not needed in RTSP 2.0 at all, if there is no implementation using this in RTSP 1.0.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1796,MMusic,83,60,"ExtensionOfPrevious,ContextSetting,InformationProviding",59,-1,"
I can see why this header is available in HTTP, but I have doubts about in RTSP.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1797,MMusic,83,61,"InformationSeeking,ExtensionOfPrevious,ProposeAction,ProposeAction",60,-1,"
Let me know your opinion.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1798,MMusic,83,62,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",61,-1,"
Here is the full text of Section 16.55",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1799,MMusic,83,63,"ExtensionOfPrevious,ContextSetting,InformationProviding",62,-1,"
The Vary field value indicates the set of request-header fields that
fully determines, while the response is fresh, whether a cache is
permitted to use the response to reply to a subsequent request
without revalidation.  For uncacheable or stale responses, the Vary
field value advises the user agent about the criteria that were used
to select the representation.  A Vary field value of ""*"" implies that
a cache cannot determine from the request headers of a subsequent
request whether this response is the appropriate representation.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1800,MMusic,83,64,"ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",63,-1,"
An RTSP server SHOULD include a Vary header field with any cacheable
response that is subject to server-driven negotiation.  Doing so
allows a cache to properly interpret future requests on that resource
and informs the user agent about the presence of negotiation on that
resource.  A server MAY include a Vary header field with a non-
cacheable response that is subject to server-driven negotiation,
since this might provide the user agent with useful information about
the dimensions over which the response varies at the time of the
response.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1801,MMusic,83,65,"ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",64,-1,"
A Vary field value consisting of a list of field-names signals that
the representation selected for the response is based on a selection
algorithm which considers ONLY the listed request-header field values
in selecting the most appropriate representation.  A cache MAY assume
that the same selection will be made for future requests with the
same values for the listed field names, for the duration of time for
which the response is fresh.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1802,MMusic,83,66,"ExtensionOfPrevious,ContextSetting,InformationProviding",65,-1,"
The field-names given are not limited to the set of standard request-
header fields defined by this specification.  Field names are case-
insensitive.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1803,MMusic,83,67,"ExtensionOfPrevious,ContextSetting,InformationProviding",66,-1,"
A Vary field value of ""*"" signals that unspecified parameters not
limited to the request-headers (e.g., the network address of the
client), play a role in the selection of the response representation.
The ""*"" value MUST NOT be generated by a proxy server; it may only be
generated by an origin server.",<E84E7B8FF3F2314DA16E48EC89AB49F024F4CCA3@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-21 10:46:21
1804,MMusic,83,70,InformationProviding,,-1,"WG,",<4F4C937E.5090900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-02-28 09:42:38
1805,MMusic,83,180,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",61,-1,"
My personal opinion of this is that we should remove Vary. This is a
piece of HTTP that seems to poorly match RTSP and would need significant
work to be made functional.",<4F4C937E.5090900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-02-28 09:42:38
1806,MMusic,83,181,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",180,-1,"
For example Vary talks about server-driven negotation which isn't
explained in the RTSP 2.0 spec at all. If you want to know of it you
need to go read section 12.1 of RFC 2616 (HTTP).",<4F4C937E.5090900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-02-28 09:42:38
1807,MMusic,83,182,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",181,-1,"
Although the idea behind the vary header may be usful for RTSP media
stream caching I suspect a different approach is needed. If there is
interest in any issue that would arise due to the cache and server not
knowing the criterias for tailoring of  the delivered media stream
present in the cache then a more suitable solution will need to be
developed.",<4F4C937E.5090900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-02-28 09:42:38
1808,MMusic,83,185,"Social,Social",,-1,"Hi all,",<E84E7B8FF3F2314DA16E48EC89AB49F024F5A1A5@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-29 15:33:50
1809,MMusic,83,317,"InformationProviding,Agreement,InformationProviding,ProposeAction,Agreement",180,-1,"
I basically see it the same way, Vary is useful in HTTP but it will require a lot work to bring to RTSP without seeing a clear need for it.",<E84E7B8FF3F2314DA16E48EC89AB49F024F5A1A5@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-29 15:33:50
1810,MMusic,83,318,"InformationSeeking,ExtensionOfPrevious,ProposeAction,StateDecision,InformationProviding,StateDecision",317,-1,"
I will remove the Vary header from the upcoming version of the draft, unless somebody has any objection to it.",<E84E7B8FF3F2314DA16E48EC89AB49F024F5A1A5@DAPHNIS.office.hd>,Martin.Stiemerling@neclab.eu,0.0,0,4,2012-02-29 15:33:50
1811,MMusic,84,311,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"See  http://www.ietf.org/proceedings/75/minutes/mmusic.html
and below:",<9AAEDF491EF7CA48AB587781B8F5D7C601ABA112@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-09-15 21:12:55
1812,MMusic,84,312,"ProposeAction,InformationSeeking,ExtensionOfPrevious,ProposeAction",311,-1,"
Send any comments or corrections to the list.",<9AAEDF491EF7CA48AB587781B8F5D7C601ABA112@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-09-15 21:12:55
1813,MMusic,88,9,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"I'm not sure if the usage of Via in RTSP is a good idea. Judging from
the error codes, a proxy is expected to wait for responses and send a
504 Gateway Timeout if it doesn't receive one. This means it has to
keep state anyway. If we keep Via, the Security Considerations section
should mention the dangers associated with all source-routing schemes.
And the via-branch syntax should be removed as it is not described in
the draft.",<8d1131ce1003232036x3e73fd53raa84c50c20f06d38@mail.gmail.com>,wolfgang.beck01@googlemail.com,0.0,0,16,2010-03-23 20:36:05
1814,MMusic,88,73,"Social,Social",,-1,"Hi all,
",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1815,MMusic,88,75,"InformationProviding,Agreement,InformationSeeking,InformationProviding,Agreement",9,9,"
I'm also reasoning for myself why there is the Via header, given that we
have TCP as transport and stateful proxies...

The text from the via header (below) suggest that a record of the used
transport protocols could be of use to somebody. Anyhow, we have only
a single transport protocol and there is no sign that there will be more.
",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1816,MMusic,88,76,"InformationProviding,ExtensionOfPrevious,ContextSetting",9,9,"
16.56. Via
",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1817,MMusic,88,77,"InformationProviding,ExtensionOfPrevious,ContextSetting","76,9",9,"
The Via general-header field MUST be used by proxies to indicate the
intermediate protocols and recipients between the user agent and the
server on requests, and between the origin server and the client on
responses.  The field is intended to be used for tracking message
forwards, avoiding request loops, and identifying the protocol
capabilities of all senders along the request/response chain.

Multiple Via field values represents each proxy that has forwarded
the message.  Each recipient MUST append its information such that
the end result is ordered according to the sequence of forwarding
applications.

Proxies (e.g., Access Proxy or Translator Proxy) SHOULD NOT, by
default, forward the names and ports of hosts within the private/
protected region.  This information SHOULD only be propagated if
explicitly enabled.  If not enabled, the via-received of any host
behind the firewall/NAT SHOULD be replaced by an appropriate
pseudonym for that host.

For organizations that have strong privacy requirements for hiding
internal structures, a proxy MAY combine an ordered subsequence of
Via header field entries with identical sent-protocol values into a
single such entry.  Applications MUST NOT combine entries which have
different received-protocol values.
",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1818,MMusic,88,79,"InformationProviding,StateDecision,InformationSeeking,NeutralResponse,ProposeAction,StateDecision",9,9,"
Added to the issue tracker and waiting for somebody to complain about
this.
",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1819,MMusic,88,80,InformationProviding,9,9,"
martin.stiemerling@neclab.eu

NEC Laboratories Europe - Network Research Division
NEC Europe Limited | Registered Office: NEC House, 1 Victoria Road, London W3 6BL | Registered in England 2832014",<547F018265F92642B577B986577D671C01381FED@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-04-23 14:14:22
1820,MMusic,89,0,"InformationProviding,Social",,-1,"Folks,",<4AB65606.4040905@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-20 19:19:18
1821,MMusic,89,21,"InformationProviding,StateDecision,InformationProviding,ContextSetting,StateDecision",,-1,"
as agreed in Stockholm, we are issuing working group last
call on the revised RTSP spec, draft-ietf-mmusic-rfc2326bis-22
heading for Proposed Standard.
(http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-22)",<4AB65606.4040905@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-20 19:19:18
1822,MMusic,89,22,"InformationProviding,InformationProviding,ExtensionOfPrevious",21,-1,"
The WGLC will expire in four weeks, on 19 Oct 2009.",<4AB65606.4040905@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-20 19:19:18
1823,MMusic,89,23,"InformationProviding,ProposeAction,Thanking,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Thanking",22,-1,"
We know that this is a long spec, the more important is it
to receive thorough review by the community.  While we have
three volunteer reviewers (thanks again!), we urge everyone
who cares to provide detailed feedback.",<4AB65606.4040905@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-20 19:19:18
1824,MMusic,89,24,"ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",23,-1,"
Please review the document and post your comments to the
MMUSIC list and/or the authors.",<4AB65606.4040905@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-20 19:19:18
1825,MMusic,89,27,"Social,Social",,-1,Hello all!,<70FB7A734037F44399441D45A72DE90D04B8298B@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-09-25 07:23:47
1826,MMusic,89,98,"InformationProviding,InformationProviding,ContextSetting",24,-1,"
I've read through the draft (skipping the syntax definitions) and found only
minor issues regarding wording, typos and consistency so far, which I already
sent to Magnus directly.",<70FB7A734037F44399441D45A72DE90D04B8298B@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-09-25 07:23:47
1827,MMusic,89,99,"InformationProviding,InformationProviding,ExtensionOfPrevious,StateDecision",98,-1,"
I will try to find some time during the upcoming days for a dedicated check
of the syntax.",<70FB7A734037F44399441D45A72DE90D04B8298B@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-09-25 07:23:47
1828,MMusic,89,102,"InformationProviding,Social",,-1,"Dear authors,",<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1829,MMusic,89,183,"InformationProviding,ContextSetting",24,-1,"
I have one question, which came into my mind reading Appendix D.",<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1830,MMusic,89,184,"InformationProviding,ContextSetting,ExtensionOfPrevious,ContextSetting",183,-1,"
In section D.1.2, I read """,<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1831,MMusic,89,185,"InformationProviding,InformationProviding,ExtensionOfPrevious",184,-1,"
Usage of grouping of media lines [[RFC3388](http://tools.ietf.org/html/rfc3388 """"Grouping of Media Lines in the Session Description Protocol \(SDP\)"""")] to determine which media
lines should or should not be included in a RTSP session is
unspecified.",<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1832,MMusic,89,186,"InformationProviding,ExtensionOfPrevious,ContextSetting",183,-1,"
Earlier in the Appendix, I read """,<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1833,MMusic,89,187,"InformationProviding,InformationProviding,ExtensionOfPrevious",186,-1,"
However
,the SDP extension ""Grouping of Media Lines in the Session
Description Protocol (SDP)"" [[RFC3388](http://tools.ietf.org/html/rfc3388 """"Grouping of Media Lines in the Session Description Protocol \(SDP\)"""")] may provide such functionality
depending on need.  Also future grouping semantics may in the future
be developed.",<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1834,MMusic,89,188,"Question,InformationProviding,Question,ClarificationElicitation,ExtensionOfPrevious,ProposeAction",187,-1,"
What does it mean?  Is SDP grouping allowed to be used with this spec? If not,
then there might be an issue with respect of using the RFC 5583 decoding
dependency signaling required for multi flow transmission of layered codecs
such as SVC.",<4ADC5251.2010304@hhi.fhg.de>,schierl@hhi.fhg.de,0.0,0,8,2009-10-19 13:49:37
1835,MMusic,89,245,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,NeutralResponse,ContextSetting,ProposeAction",188,188,"
I guess we need to clarify this. Grouping of media lines will require
that one understands the semantic that is used. But from an RTSP point
of view most semantics would be easy to incorporate as long as they
describe the relationship between media streams that you all most
receive. If any semantic would be more in the context of alternatives or
play only one at the time that creates also interaction with RTSP. I
think we can add text to clarify that it is required to understand the
semantics, and define what to do with the known semantics.
",<4AEDAFB5.4060005@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:56:37
1836,MMusic,89,297,"InformationProviding,StateDecision,Thanking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Thanking",24,-1,"Thanks to everyone that has provided comments. In additions to the one
on the mailing list I have received some private ones. Unfortunately I
don't have time to resolve these and provide an updated draft by Monday.
I will do my best to go through your comments next week and provide
proposals for resolutions and bring up where I think additional
discussion are needed.",<4AE1BB44.7010008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-10-23 16:18:44
1837,MMusic,90,0,"Social,Social",,-1,"Hi,",<458913680810220724m525da96aw58752fee95aee6e5@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2008-10-22 16:24:37
1838,MMusic,90,13,"Question,InformationProviding,Question,InformationProviding,ContextSetting,ProposeAction",,-1,"
I have a question concerning src_addr in draft-ietf-mmusic-rfc2326bis-18.
It is currently written that ""This information may also be available
through SDP"".
Would it be possible to add some explanations about how to do it?",<458913680810220724m525da96aw58752fee95aee6e5@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2008-10-22 16:24:37
1839,MMusic,90,47,"InformationProviding,Answer,ProposeAction,Answer,ProposeAction",13,13,"
I think this is text that is not really correct. One could consider to
use the c= field or for multicast the SSM source address attribute, RFC
4570. Regarding c= that clashes with the text in the appendix.

My proposal is simple to update this motivation text.
",<48FF3D41.8090501@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-10-22 16:48:33
1840,MMusic,93,19,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"When I read the grammar for the absolute time format in RTSP both in RFC
2326 and in draft-ietf-mmusic-rfc2326bis-05.txt I stumbled across a
recursive definition. In both documents you can find this text:",<B7989DEC7B60254BBC6EF5DE01E31263419C4A@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-12 11:19:45
1841,MMusic,93,20,"InformationProviding,ExtensionOfPrevious,InformationProviding",19,-1,"
utc-time = utc-date ""T"" utc-time ""Z""
utc-date = 8DIGIT ; < YYYYMMDD >
utc-time = 6DIGIT [ ""."" fraction ] ; < HHMMSS.fraction >",<B7989DEC7B60254BBC6EF5DE01E31263419C4A@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-12 11:19:45
1842,MMusic,93,21,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",20,-1,"
Which gives two definitions for utc-time of which the first happens to
be recursive. Fixing this only involves changing the name of one of the
definitions, but have two definitions for utc-time can lead to some
confusion.",<B7989DEC7B60254BBC6EF5DE01E31263419C4A@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-12 11:19:45
1843,MMusic,95,0,"Social,Social",,-1,"Hi,",<547F018265F92642B577B986577D671C9E382A@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-06-19 15:35:24
1844,MMusic,95,57,"InformationProviding,ContextSetting,InformationProviding,ProposeAction",,-1,"
There is an updated RTSP 2.0 draft (see below) that solely contains editorial changes.",<547F018265F92642B577B986577D671C9E382A@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-06-19 15:35:24
1845,MMusic,95,58,"InformationSeeking,ExtensionOfPrevious,ProposeAction,ProposeAction",57,-1,"
Let me know any comment you have.",<547F018265F92642B577B986577D671C9E382A@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-06-19 15:35:24
1846,MMusic,97,0,"Social,Social",,-1,Hi:,<72263E8E8622D611975C0002B32C19D84A77D0@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-02-07 11:04:34
1847,MMusic,97,74,"InformationProviding,InformationProviding,ContextSetting",,-1,"
During the Jan 22, 2003 RTSP telecon, we discussed Range header in PLAY
reponses in the context of option tag play.basic.
In current draft (draft-ietf-mmusic-rfc2326bis-02.txt), PLAY Range response
is required for on demand media (see section 10.5).
It was decided to make this an requirement for live streaming as well.",<72263E8E8622D611975C0002B32C19D84A77D0@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-02-07 11:04:34
1848,MMusic,97,75,"InformationProviding,StateDecision,InformationProviding,ExtensionOfPrevious,ContextSetting",74,-1,"
Here is the proposed changes to section 10.5 and section 14 (examples) in
draft-ietf-mmusic-rfc2326bis-02.txt. Each change is separated by ""-----""'s,
and instructions on how to make the changes are put in square brackets.",<72263E8E8622D611975C0002B32C19D84A77D0@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-02-07 11:04:34
1849,MMusic,97,76,"InformationProviding,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social",75,-1,"
Your comments are always welcome.",<72263E8E8622D611975C0002B32C19D84A77D0@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-02-07 11:04:34
1850,MMusic,97,77,"Thanking,Thanking",,-1,"
Thanks",<72263E8E8622D611975C0002B32C19D84A77D0@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-02-07 11:04:34
1851,MMusic,98,0,"Social,Social",,-1,"Hello,",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1852,MMusic,98,42,"InformationProviding,ContextSetting,InformationProviding,ProposeAction",,-1,"
draft-ietf-mmusic-rfc2326bis-40
<https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/> has
been in state MISSREF for some time now. See below:",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1853,MMusic,98,43,"InformationProviding,ExtensionOfPrevious,InformationProviding",42,-1,"
2014-02-11    draft-ietf-mmusic-rfc2326bis-40.txt [C214]
MISSREF*R(1G)
REF    draft-ietf-avtcore-rtp-circuit-breakers    NOT-RECEIVED
draft-ietf-mmusic-rtsp-nat    IN-QUEUE
H. Schulzrinne, A. Rao, R. Lanphier, M. Westerlund, M. Stiemerling, Ed.
""Real Time Streaming Protocol 2.0 (RTSP)""
Bytes: 764018
Working Group: Multiparty Multimedia Session Control",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1854,MMusic,98,44,"InformationProviding,ExtensionOfPrevious,InformationProviding",43,-1,"
There is still a dependency on draft-ietf-avtcore-rtp-circuit breakers
which is holding up an RFC number being assigned. My understanding is
that it could be quite awhile before the circuit breakers draft is approved.",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1855,MMusic,98,45,"InformationProviding,ExtensionOfPrevious,InformationProviding",44,-1,"
There's only one reference to the circuit breakers draft in C.1.6.3
""Bit-rate adaption"", i.e.
To ensure that the implementation's adaptation mechanism has a well
defined outer envelope, all implementations using a non-congestion
controlled unicast transport protocol, like UDP, MUST implement
Multimedia Congestion Control: Circuit Breakers for Unicast RTP
Sessions [I-D.ietf-avtcore-rtp-circuit-breakers].",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1856,MMusic,98,46,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",45,-1,"
I wondering if it would be possible to change this slightly so that the
circuit breakers draft becomes informative whilst still keeping the
congestion control requirement as a MUST? i.e.
""... all implementations using a non-congestion controlled unicast
transport protocol, like UDP, MUST implement multimedia congestion
control. For example: by utilising the mechanism defined by ""Multimedia
Congestion Control: Circuit Breakers for Unicast RTP Sessions
[I-D.ietf-avtcore-rtp-circuit-breakers].""",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1857,MMusic,98,47,"ExtensionOfPrevious,ProposeAction,InformationProviding",46,-1,"
This would mean that RTSP2.0 could finally become an RFC.",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1858,MMusic,98,48,"Question,ExtensionOfPrevious,Question",47,-1,"
Would this be possible?",<54B5CFFC.7000904@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-14 13:10:04
1859,MMusic,98,99,"Answer,StateDecision,InformationProviding,Agreement",48,-1,"No objections from my side because the requirement as such is still sufficiently covered.
Thus, would support that change proposal.
-Albrecht
",<786615F3A85DF44AA2A76164A71FE1AC38394F@FR711WXCHMBA03.zeu.alcatel-lucent.com>,albrecht.schwarz@alcatel-lucent.com,0.0,0,8,2015-01-14 08:55:04
1860,MMusic,98,101,"Question,InformationProviding,ProposeAction",,-1,"
Hello,

draft-ietf-mmusic-rfc2326bis-40
<https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/> has been in state MISSREF for some time now. See below:

2014-02-11    draft-ietf-mmusic-rfc2326bis-40.txt [C214]
MISSREF*R(1G)
REF    draft-ietf-avtcore-rtp-circuit-breakers    NOT-RECEIVED
draft-ietf-mmusic-rtsp-nat    IN-QUEUE
H. Schulzrinne, A. Rao, R. Lanphier, M. Westerlund, M. Stiemerling, Ed.
""Real Time Streaming Protocol 2.0 (RTSP)""
Bytes: 764018
Working Group: Multiparty Multimedia Session Control

There is still a dependency on draft-ietf-avtcore-rtp-circuit breakers which is holding up an RFC number being assigned. My understanding is that it could be quite awhile before the circuit breakers draft is approved.

There's only one reference to the circuit breakers draft in C.1.6.3 ""Bit-rate adaption"", i.e.
To ensure that the implementation's adaptation mechanism has a well
defined outer envelope, all implementations using a non-congestion
controlled unicast transport protocol, like UDP, MUST implement
Multimedia Congestion Control: Circuit Breakers for Unicast RTP
Sessions [I-D.ietf-avtcore-rtp-circuit-breakers].

I wondering if it would be possible to change this slightly so that the circuit breakers draft becomes informative whilst still keeping the congestion control requirement as a MUST? i.e.
""... all implementations using a non-congestion controlled unicast transport protocol, like UDP, MUST implement multimedia congestion control. For example: by utilising the mechanism defined by ""Multimedia Congestion Control: Circuit Breakers for Unicast RTP Sessions [I-D.ietf-avtcore-rtp-circuit-breakers].""

This would mean that RTSP2.0 could finally become an RFC.

Would this be possible?
",<786615F3A85DF44AA2A76164A71FE1AC38394F@FR711WXCHMBA03.zeu.alcatel-lucent.com>,albrecht.schwarz@alcatel-lucent.com,0.0,0,8,2015-01-14 08:55:04
1861,MMusic,98,167,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",99,-1,"We'll probably need to hear from Magnus as well (since he's the main
author). I'm not sure if he is back from leave yet or not.",<54BEC96A.4090504@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-20 16:32:26
1862,MMusic,98,168,"Thanking,Thanking",,-1,"
Thanks",<54BEC96A.4090504@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-20 16:32:26
1863,MMusic,98,169,InformationProviding,,-1,"
-- Flemming",<54BEC96A.4090504@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-20 16:32:26
1864,MMusic,98,172,"Social,Social",,-1,"Hi,",<54C66834.3090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 17:15:48
1865,MMusic,98,290,"NeutralResponse,InformationProviding",47,-1,"
Unfortunately I don't see an easy way to address this issue.",<54C66834.3090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 17:15:48
1866,MMusic,98,291,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,Disagreement",290,-1,"
So the reference to the circuit breakers draft is clearly normative as
it specifies a minimal behaviour for avoiding persistent congestion from
RTP based media controlled by RTSP. So reclassifying it to informative,
basically would remove the requirement on having such a mechanism. Which
in my view is not acceptable.",<54C66834.3090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 17:15:48
1867,MMusic,98,292,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",291,-1,"
I do wonder if one can get the RFC-editor to release the RFC number
ahead of time? I think it might be worth asking nicely from the chairs.
After all the document is in the queue. There is only one document
missing and that is at least a WG document. And one that is needed by
multiple WGs. Thus, it will happen.",<54C66834.3090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 17:15:48
1868,MMusic,98,293,"Question,ExtensionOfPrevious,Question",292,-1,"
Or isn't that sufficient for you Christian?",<54C66834.3090401@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 17:15:48
1869,MMusic,98,296,"Social,Social",,-1,"Hello Magnus,",<54C8B9BB.3060702@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-28 21:28:11
1870,MMusic,98,411,"InformationProviding,Answer,ContextSetting,InformationProviding",293,-1,"
Yes unfortunately it doesn't seem to be an easy fix. I'd be happy if the
RFC number was released ahead of time. However my understanding that
this wasn't done any more (not that I would complain if they did release
one).",<54C8B9BB.3060702@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2015-01-28 21:28:11
1871,MMusic,98,552,"InformationProviding,ContextSetting,InformationProviding,ProposeAction",411,-1,"I'm not a big fan of short-circuiting the process and provide a stable
reference to something that could change (nothing is final until it has
been published). I do understand the special circumstances here though
and we don't seem to be close to resolving the missing reference issue.
In liue of that and the fact that 2326bis has been in progress for well
over 10 years, I have asked the RFC Editor if we can have an RFC number
assigned. Irrespective of whether they agree, I want to stress that this
should be viewed as a clearly exceptional case and we don't want to set
a precedent with it.",<54C8D6D1.2000108@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-28 07:32:17
1872,MMusic,98,553,"Thanking,Thanking",,-1,"
Thanks",<54C8D6D1.2000108@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-28 07:32:17
1873,MMusic,98,554,InformationProviding,,-1,"
-- Flemming (MMUSIC co-chair)",<54C8D6D1.2000108@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-01-28 07:32:17
1874,MMusic,100,0,"Social,Social",,-1,Greetings,<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1875,MMusic,100,17,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",,-1,"
Following WGLC and a few additional updates and maling list discussions
subsequently, we requested publication of 2326bis-34. As a result of the
IESG and Gen-Art review, several updates have been made to the document
and we are hereby issuing a 2-week WGLC for those changes to give the WG
participants a chance to review them as well. If you have any comments
on the changes between -34 and -35, please make sure to send those to
the mailing list and the authors no later than Monday September 23, 2013.",<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1876,MMusic,100,18,"ExtensionOfPrevious,ContextSetting,InformationProviding",17,-1,"
The relevant diff-file can be accessed at:",<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1877,MMusic,100,19,"InformationProviding,ExtensionOfPrevious,InformationProviding",18,-1,"
http://www.ietf.org/rfcdiff?url1=draft-ietf-mmusic-rfc2326bis-34&difftype=--html&submit=Go%21&url2=draft-ietf-mmusic-rfc2326bis-35",<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1878,MMusic,100,20,"Thanking,Thanking",,-1,"
Thanks",<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1879,MMusic,100,21,InformationProviding,,-1,"
-- Ari & Flemming (MMUSIC co-chairs)",<522E1F94.1090804@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-09 15:20:52
1880,MMusic,100,23,InformationProviding,,-1,"WG,",<522EB2BA.10707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-10 07:48:42
1881,MMusic,100,72,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,InformationProviding",17,-1,"
A clarification: The comments that we authors have tried to address are
from the IETF last call, not IESG review yet. Just to make clear the
current state. If you are okay or even happy with the changes then we go
to IESG review with the document.",<522EB2BA.10707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-10 07:48:42
1882,MMusic,100,75,"NeutralResponse,Thanking,InformationProviding,Thanking",72,-1,My mistake - thanks for clarifying Magnus.,<522F3F33.7090008@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-10 11:48:03
1883,MMusic,100,117,InformationProviding,,-1,"
-- Flemming",<522F3F33.7090008@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-10 11:48:03
1884,MMusic,100,120,"Social,InformationProviding",,-1,"Hello Ari and Flemming,",<52300FB7.1070300@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2013-09-11 16:37:43
1885,MMusic,100,167,"InformationProviding,ProposeAction,InformationProviding",17,-1,"
There appears to be a cut and paste error or tab error in Table 4, half
of the rows in the table appear to be in the wrong column. i.e. the
method column has codes. Also the codes don't appear to match the
descriptions.",<52300FB7.1070300@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2013-09-11 16:37:43
1886,MMusic,100,193,"InformationProviding,Agreement,InformationProviding,Agreement",167,167,"
Correct, I got this from another reviewer (Elwyn) also. I guess it is is",<52301539.9070602@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-11 09:01:13
1887,MMusic,100,196,InformationProviding,,-1,"WG,",<5231B124.60408@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-12 14:18:44
1888,MMusic,100,252,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",17,-1,"
Christian Groves sent me a question regarding the usage of RFC 2822
format in the Date, Expires, If-Modified-Since, Last-Modified and
Retry-After headers. I hadn't changed this despite being somewhat aware
of the fact that this specification used a obsoleted RFC as normative
reference. However, his question made be recheck the differences in
format between RFC 2822 and RFC 5322 and although the formulation of the
syntax description has been changed, I think the actual syntax is
untouched. Thus I suggest we update the reference to use RFC 5322
section 3.3.",<5231B124.60408@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-12 14:18:44
1889,MMusic,100,253,"Question,ExtensionOfPrevious,Question",252,-1,"
Any objections to this?",<5231B124.60408@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-12 14:18:44
1890,MMusic,100,256,InformationProviding,,-1,"WG,",<52414EE6.1040602@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-24 11:35:50
1891,MMusic,100,326,"InformationProviding,StateDecision,InformationProviding,StateDecision",252,-1,"
I have updated the draft to change from RFC 2822 to RFC 5322 for the
date format. With this change I believed to have addressed all
outstanding issues.",<52414EE6.1040602@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-09-24 11:35:50
1892,MMusic,100,329,"Thanking,Thanking",,-1,Thank you Magnus,<52439463.8010900@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-25 21:56:51
1893,MMusic,100,397,"InformationProviding,StateDecision,InformationProviding,ProposeAction",326,-1,"
This concludes the WGLC of the -35 changes. Since we have not received
any further comments, the draft is ready to move forward.",<52439463.8010900@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-09-25 21:56:51
1894,MMusic,101,0,Social,,-1,"Hi all,",<456D8EDA.4020104@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-29 14:44:58
1895,MMusic,101,23,"Question,InformationProviding,InformationSeeking,Question,InformationProviding,ContextSetting",,-1,"
For me it is not quite clear how to interpret the a=recvonly and
a=sendonly SDP items in an RTSP response to a DESCRIBE request. The SDP
specification says that ""this specifies that the tools should be started
in"" the specified mode (recvonly or sendonly). However, in an asymmetric
scenario, where one entity is only sending and the other entity is only
receiving, it is not quite clear, which entity is meant by ""the tools"".
In RTSP, is ""the tools"" actually the RTSP server or the client? Is there
a general answer for this question for other protocols like SIP as well?",<456D8EDA.4020104@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-29 14:44:58
1896,MMusic,101,24,"Question,Question,ExtensionOfPrevious",23,-1,"
Is there anything more concrete about this issue, or is this a gap in
the SDP specification?",<456D8EDA.4020104@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-29 14:44:58
1897,MMusic,101,25,"Thanking,Thanking",,-1,"
Thank you in advance.",<456D8EDA.4020104@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-29 14:44:58
1898,MMusic,101,71,"Answer,InformationProviding,Answer",24,-1,"SDP was originally devised for multicast sessions, and this wording
reflects the original use.  If a session was recvonly, the multicast
participants who received the SDP description must not transmit data.
Obviously someone else will transmit data or the session will be
rather quiet.

In a unicast world, recvonly would typically indicate that the
recipient of the SDP description should not send data. Thus it would
apply to the RTSP client, as the SDP is sent from the server to the
client.

- Mark
",<84a612dd0611290559l6c49d8d4x166054e029350900@mail.gmail.com>,M.Handley@cs.ucl.ac.uk,0.0,0,7,2006-11-29 13:59:30
1899,MMusic,101,125,"Question,NeutralResponse,Question,ClarificationElicitation,NeutralResponse,ContextSetting",71,-1,"OK, but when having the Offerer/Answerer model in mind, I would expect
that the SDP describes the sending terminal's capabilities, right?",<456D9826.2050701@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-29 15:24:38
1900,MMusic,101,202,"Answer,InformationProviding,Answer,Agreement,ContextSetting",125,-1,"Yes, offer/answer inverted the original meaning of this.  According to RFC 3264:

If the offerer wishes to only send media on a stream to its peer, it
MUST mark the stream as sendonly with the ""a=sendonly"" attribute.  We
refer to a stream as being marked with a certain direction if a
direction attribute was present as either a media stream attribute or
a session attribute.  If the offerer wishes to only receive media
from its peer, it MUST mark the stream as recvonly.

So it's pretty clear if offer/answer is used, what the sense of
recvonly and sendonly are.

But I didn't think RTSP used offer/answer.  Or if it does now, I
missed it somewhere (I haven't been watching RTSP for a long time).

- Mark
",<84a612dd0611290654n32ed3b52h695c83fdabb42dfe@mail.gmail.com>,M.Handley@cs.ucl.ac.uk,0.0,0,7,2006-11-29 14:54:18
1901,MMusic,101,249,"Agreement,InformationProviding,Agreement,ProposeAction",202,202,"
Your correct, RTSP doesn't use offer/answer. There is no text in either
RFC 2326 or draft-ietf-mmusic-rfc2326bis about the usage of recvonly. It
is however included in some examples. To my reading of RFC 4566 is quite
applicable in for a client receiving an a=recvonly line in the DESCRIBE
response. However we probably should add a few line of text in regards
to this.
",<456DAF4B.3010909@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-11-29 17:03:23
1902,MMusic,101,295,"Agreement,InformationProviding,Agreement,ContextSetting",249,249,"
Agreed.  Unfortunately the examples in RFC 2326 and in rfc2326bis are
all of a multicast session, so the meaning is clear, but it's hard for
the reader to generalise to unicast from this.  Especially when
offer/answer does the opposite.  I wish the offer/answer spec hadn't
reversed this, but it's too late to change now.

For RTSP with unicast streams, I guess the main issue is not so much
what I intended when I wrote the SDP spec, but rather how current RTSP
implementations interpret this for unicast.

- Mark

mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<84a612dd0611290909i6ef5e401rc3a65a1bec527f16@mail.gmail.com>,M.Handley@cs.ucl.ac.uk,0.0,0,7,2006-11-29 17:09:55
1903,MMusic,101,350,Social,,-1,"Hi,

Mark Handley schrieb:",<456EA031.5080003@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-30 10:11:13
1904,MMusic,101,352,"Agreement,InformationProviding,Agreement,ProposeAction",71,71,"
I also agree.
To conclude it depends on using offer/answer which kind of semantics is
used for recvonly and sendonly.
Therefore, for clarifying I would appreciate this being explicitly
stated in some draft/rfc.
",<456EA031.5080003@uni-ulm.de>,holger.schmidt@uni-ulm.de,0.0,0,71,2006-11-30 10:11:13
1905,MMusic,101,446,"NeutralResponse,InformationProviding,ContextSetting",202,202,"
I think offer/answer were being discussed to
setup the RTSP streams/session some while ago when
RTSP and SIP combination was being discussed on this
list.
",<338441.66486.qm@web52109.mail.yahoo.com>,marx_bhargav@yahoo.com,0.0,0,47,2006-11-29 16:58:15
1906,MMusic,101,484,"Agreement,InformationProviding,Agreement,ContextSetting",446,446,"
Yes, in the context of doing media setup for RTSP controlled session
using SIP one does end up using offer/answer (in the SIP part). However
I don't think anyone has seriously argued for using offer/answer within
RTSP.
",<456E967E.9060507@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-11-30 09:29:50
1907,MMusic,102,130,"InformationProviding,InformationProviding,ContextSetting",,-1,"Reading further into the new draft I had some more feedback and questions
which I feel should be addressed.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1908,MMusic,102,131,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",130,-1,"
I see that the re-transmission text has been moved elsewhere and that
various nomenclature regarding 're-transmission' has been either removed or
it's location and context has changed to totally oppose the previous
concepts put forth... It seems that re-transmission is now only acceptable
under UDP which the standard goes to remove support for?",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1909,MMusic,102,132,"Question,Question,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
What about TCP? How should a RTSP 2 system deal with legacy RTSP 1
connection with that regard? I think there are several other places this
mistake was made also.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1910,MMusic,102,133,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",132,-1,"
Appendix G <http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-40#appendix-G>.
Requirements for Unreliable Transport of RTSP",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1911,MMusic,102,134,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",133,-1,"
This appendix provides guidance for those who want to implement RTSP
messages over unreliable transports as has been defined in RTSP 1.0
[RFC2326 <http://tools.ietf.org/html/rfc2326>].  RFC 2326
<http://tools.ietf.org/html/rfc2326> defined the ""rtspu"" URI scheme
and provided some
basic information for the transport of RTSP messages over UDP.  The
information is being provided here as there has been at at least one
commercial implementation and compatibility with that should be
maintained.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1912,MMusic,102,135,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",134,-1,"
The following points should be considered for an interoperable
implementation:",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1913,MMusic,102,136,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  Requests shall be acknowledged by the receiver.  If there is no
acknowledgement, the sender may resend the same message after a
timeout of one round-trip time (RTT).  Any retransmissions due to
lack of acknowledgement must carry the same sequence number as the
original request.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1914,MMusic,102,137,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  The round-trip time can be estimated as in TCP (RFC 6298
<http://tools.ietf.org/html/rfc6298>)
[RFC6298 <http://tools.ietf.org/html/rfc6298>], with an initial
round-trip value of 500 ms.  An
implementation may cache the last RTT measurement as the initial
value for future connections.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1915,MMusic,102,138,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting",135,-1,"
o  The Timestamp header (Section 18.53
<http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-40#section-18.53>)
is used to avoid the
retransmission ambiguity problem [Stevens98
<http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-40#ref-Stevens98>].",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1916,MMusic,102,139,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  The registered default port for RTSP over UDP for the server is
554.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1917,MMusic,102,140,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  RTSP messages can be carried over any lower-layer transport
protocol that is 8-bit clean.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1918,MMusic,102,141,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  RTSP messages are vulnerable to bit errors and should not be
subjected to them.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1919,MMusic,102,142,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",135,-1,"
o  Source authentication, or at least validation that RTSP messages
comes from the same entity becomes extremely important, as session
hijacking may be substantially easier for RTSP message transport
using an unreliable protocol like UDP than for TCP.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1920,MMusic,102,143,"Question,Question,ExtensionOfPrevious,ContextSetting",135,-1,"
Bullet 5 - *TCP is too, what does this statement add?*",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1921,MMusic,102,144,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",143,-1,"
*This information in the header seems to contradict what information
is given later on in Appendix I.*",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1922,MMusic,102,145,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",144,-1,"
*Additionally the information related to re-transmission and Timestamp
is still ambiguous IMHO as the Timestamp header plays no role TCP
re-transmissions, furthermore since it's syntax [The Timestamp header]
only has meaning to a Client the Server has no way of measuring or
comparing the previous Timestamp unless they attempt parsing of
various ways of conveying the information. *",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1923,MMusic,102,146,"ProposeAction,ExtensionOfPrevious,ProposeAction",145,-1,"
*There needs to be more definite syntax related to Timestamp and it
needs to further be indicated that TCP re-transmissions can cause
partial data to appear to a receiver and that when using TCP and how
to handle this as I previously indicated. *",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1924,MMusic,102,147,"ProposeAction,ExtensionOfPrevious,ProposeAction",146,-1,"
*Some text about minimum packet size with respect to Blocksize
utilized would also be beneficial so there is no reason for clients to
attempt to verify data which cannot be verified by a packet with no
Timestamp header (Rtsp or Rtp or otherwise e.g. a Rtcp packet)*",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1925,MMusic,102,148,"InformationProviding,ExtensionOfPrevious,ContextSetting",144,-1,"
*The contradicting text from Appendix I is listed below.*",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1926,MMusic,102,149,"InformationProviding,ExtensionOfPrevious,ContextSetting",148,-1,"
*  The description on how rtspu works is not part of the core
specification and will require external description.  Only that",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1927,MMusic,102,150,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",149,-1,"
it exists is defined here and some requirements for the
transport is provided.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1928,MMusic,102,151,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",148,-1,"
*Additionally this section seems to further contradict the above paragraphs.*",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1929,MMusic,102,152,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",151,-1,"
4.2 <http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-40#section-4.2>.
RTSP IRI and URI",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1930,MMusic,102,153,"InformationProviding,ExtensionOfPrevious,ContextSetting",152,-1,"
RTSP 2.0 defines and registers or updates three URI schemes ""rtsp"",
""rtsps"" and ""rtspu"".  The usage of the last, ""rtspu"", is unspecified
in RTSP 2.0, and is defined here to register the URI scheme that was
defined in RTSP 1.0.  The ""rtspu"" scheme indicates unspecified
transport of the RTSP messages over unreliable transport (UDP in RTSP
1.0).  An RTSP server MUST respond with an error code indicating the
""rtspu"" scheme is not implemented (501) to a request that carries a
""rtspu"" URI scheme.",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1931,MMusic,102,154,"Question,Question,ExtensionOfPrevious,ProposeAction",153,-1,"
Lastly wouldn't that also mean that a client can still use UDP but their
requests simply can't have a 'rtspu' scheme? I am not sure if that wan
intended or not but it seems silly to indicate that the scheme of the
location means anything when in fact the protocol of the connection is what
really matters. Why would anyone care if a client used a different scheme
in their request?",<CACFvNHUfQyY9OrAx7iCCR5XLQM7LHKS28WfcJG=FsmWfJ8_BvA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-08 13:36:42
1932,MMusic,102,244,"NeutralResponse,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social",154,-1,"Hi Julius,

Dropping AVTCORE WG as they are not the relevant WG for this.

I am just back from a quite long parental leave. I have not yet anywhere
near to catch up on my email. Thus, I have not read more than some few
of your emails.

First of all, I see just from the volume that you appreciate how broken
the specification text of RFC 2326 is. That is why we started back in
2003 to produce an updated version. That work has finally in principal
concluded by the approval for publication of
draft-ietf-mmusic-rfc2326bis. The only thing preventing this document
from being published as an RFC is a missing normative reference.

Thus, we are currently in a state where it is difficult to make any
significant changes to the text. Wording corrections would still be
possible to fix. Also if you find anything that is so significant that
it must be corrected then we

Filing Errata on RFC 2326 is also not particular useful.

Having said that I will attempt to answer your issue below.
",<54C607C0.1020908@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 10:24:16
1933,MMusic,102,246,"Agreement,Answer,Agreement",131,131,"
Yes, that is a fair summary. And this is well motivated.
",<54C607C0.1020908@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 10:24:16
1934,MMusic,102,248,"Answer,Disagreement,InformationProviding,Answer,ProposeAction",132,132,"
This was not a mistake. The reason is that in RTSP 2.0 the RTSP client
is not to retransmit any RTSP requests. It relies on TCP for the
requests to be delivered to the next hop RTSP agent. TCP will perform
any necessary retransmission. This way the receiving agent will not be
forced to deal with multiple duplicated of requests.

This is of course not possible if one would use UDP. However, due to
lack of interest in UDP transport of RTSP messages this has not be
specified for RTSP 2.0.

When it comes to a RTSP 2.0 agents handling of RTSP 1.0 messages, that
have to be implemented as best can according to RFC 2326. This will mean
duplication handling.

The main point is that the messages are clearly indicating RTSP version,
and thus an RTSP 2.0 message and its protocol interactions can be held
to the tighter and more well defined behaviour of the new specification.
It is difficult to define how to correctly handle something that is
underspecified.
",<54C607C0.1020908@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 10:24:16
1935,MMusic,102,249,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting,ProposeAction","132,135",132,"
Looking at the below comments, I think you misinterpreted the reason for
Appendix G. It is not to provide anything that one can implement a
working and interoperable solution from this section. It is intended as
a starting point for someone that needs to write a specification for
unreliable transport of RTSP messages.

One thing I do need to remark on. The registration of the RTSPU URI
scheme. This does not fully belong here, however it is included to clean
up the paper-trail for the RTSP URIs. Better to have a proper
registration, if only to make it clear that it is only defined in RFC 2326.
",<54C607C0.1020908@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-26 10:24:16
1936,MMusic,103,0,"InformationProviding,ContextSetting",,-1,#147: hangtext with empty body,<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1937,MMusic,103,89,"InformationProviding,InformationProviding,ExtensionOfPrevious",0,-1,"
When using a hangtext only containing label, not body part then it is not
displayed.",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1938,MMusic,103,90,"ExtensionOfPrevious,ContextSetting",89,-1,"
Following XML",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1939,MMusic,103,91,"InformationProviding,ExtensionOfPrevious",90,-1,"
<t>This specification registers the following values: <list
hangIndent=""6"" style=""hanging"">
<t hangText=""no-cache:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1940,MMusic,103,92,"InformationProviding,ExtensionOfPrevious",91,-1,"
<t hangText=""public:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1941,MMusic,103,93,"InformationProviding,ExtensionOfPrevious",92,-1,"
<t hangText=""private:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1942,MMusic,103,94,"InformationProviding,ExtensionOfPrevious",93,-1,"
<t hangText=""no-transform:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1943,MMusic,103,95,"InformationProviding,ExtensionOfPrevious",94,-1,"
<t hangText=""only-if-cached:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1944,MMusic,103,96,"InformationProviding,ExtensionOfPrevious",95,-1,"
<t hangText=""max-stale:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1945,MMusic,103,97,"InformationProviding,ExtensionOfPrevious",96,-1,"
<t hangText=""min-fresh:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1946,MMusic,103,98,"InformationProviding,ExtensionOfPrevious",97,-1,"
<t hangText=""must-revalidate:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1947,MMusic,103,99,"InformationProviding,ExtensionOfPrevious",98,-1,"
<t hangText=""proxy-revalidate:""/>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1948,MMusic,103,100,"InformationProviding,ExtensionOfPrevious",99,-1,"
<t hangText=""max-age:""/>
</list>The registry should be represented as: Name of the
directive,
contact person and reference.</t>",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1949,MMusic,103,101,"ExtensionOfPrevious,ContextSetting",100,-1,"
V2 Output:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1950,MMusic,103,102,"ExtensionOfPrevious,ContextSetting",101,-1,"
This specification registers the following values:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1951,MMusic,103,103,"InformationProviding,ExtensionOfPrevious,ContextSetting",102,-1,"
The registry should be represented as: Name of the directive, contact
person and reference.",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1952,MMusic,103,104,"ExtensionOfPrevious,ContextSetting",103,-1,"
V1 output:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1953,MMusic,103,105,"ExtensionOfPrevious,ContextSetting",103,-1,"
This specification registers the following values:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1954,MMusic,103,106,"InformationProviding,ExtensionOfPrevious",105,-1,"
no-cache:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1955,MMusic,103,107,"InformationProviding,ExtensionOfPrevious",105,-1,"
public:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1956,MMusic,103,108,"InformationProviding,ExtensionOfPrevious",105,-1,"
private:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1957,MMusic,103,109,"InformationProviding,ExtensionOfPrevious",105,-1,"
no-transform:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1958,MMusic,103,110,"InformationProviding,ExtensionOfPrevious",105,-1,"
only-if-cached:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1959,MMusic,103,111,"InformationProviding,ExtensionOfPrevious",105,-1,"
max-stale:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1960,MMusic,103,112,"InformationProviding,ExtensionOfPrevious",105,-1,"
min-fresh:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1961,MMusic,103,113,"InformationProviding,ExtensionOfPrevious",105,-1,"
must-revalidate:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1962,MMusic,103,114,"InformationProviding,ExtensionOfPrevious",105,-1,"
proxy-revalidate:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1963,MMusic,103,115,"InformationProviding,ExtensionOfPrevious",105,-1,"
max-age:",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1964,MMusic,103,116,"InformationProviding,ExtensionOfPrevious,ContextSetting",105,-1,"
The registry should be represented as: Name of the directive, contact
person and reference.",<078.9e6abe0d33d472225bc46bafb708675b@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:56:57
1965,MMusic,103,202,"NeutralResponse,InformationProviding,ContextSetting,ProposeAction",89,-1,"I assume some of the hangtext entries are non-null, otherwise it would
make more sense to use style=""empty"".",<5148C53E.1050300@gmail.com>,tom.taylor.stds@gmail.com,0.0,0,1,2013-03-19 16:06:22
1966,MMusic,103,313,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting",202,202,"
Although this example doesn't show that, I have other actual text in the
document I detected this with: draft-ietf-mmusic-rfc2326bis-31 update.
These issues are visible when generating with v31 xml available in
datatracker.

/Magnus
",<5148DA8B.9090804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-03-19 22:37:15
1967,MMusic,103,317,"InformationProviding,ContextSetting",,-1,#147: hangtext with empty body,<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1968,MMusic,103,350,"InformationProviding,ExtensionOfPrevious,ContextSetting",317,-1,"
Changes (by ietf@augustcellars.com):",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1969,MMusic,103,351,"InformationProviding,ExtensionOfPrevious,ContextSetting",350,-1,"
* status:  new => closed
* resolution:   => fixed",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1970,MMusic,103,352,"ExtensionOfPrevious,ContextSetting",351,-1,"
Comment:",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1971,MMusic,103,353,"InformationProviding,ExtensionOfPrevious",352,-1,"
Fixed in [1060]:",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1972,MMusic,103,354,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",353,-1,"
Fix some list indentation problems.  We now default to an indent of 3 for
hanging lists which is the same thing that v1 did.  We also use a value
based on the bullet for format lists rather than using the 3 of a default
hang indent - this also now matches v1 behavior.",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1973,MMusic,103,355,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",354,-1,"
Fix #117 - use width of bullet not default to 3*level+3
Fix #147 - a hangingText without any text in the body now emits the
hangingText",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1974,MMusic,103,356,ExtensionOfPrevious,,-1,"
Reporter:  magnus.westerlund@ericsson.com  |      Owner:
Type:  defect                          |  henrik@levkowetz.com
Priority:  medium                          |     Status:  closed
Component:  Version 2 cli txt               |  Milestone:
Resolution:  fixed                           |    Version:  2.3.10
|   Keywords:",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1975,MMusic,103,357,ExtensionOfPrevious,,-1,"
Ticket URL: </ticket/147#comment:1>
xml2rfc <http://tools.ietf.org/tools/xml2rfc/>",<093.be51acb1147cb2cc4120651acee9c609@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-12-04 20:21:31
1976,MMusic,104,41,"InformationProviding,InformationProviding,ContextSetting",,-1,"The IESG has received a request from the Multiparty Multimedia Session
Control WG (mmusic) to consider the following document:
- 'Real Time Streaming Protocol 2.0 (RTSP)'
<draft-ietf-mmusic-rfc2326bis-38.txt> as Proposed Standard",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1977,MMusic,104,42,"InformationProviding,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",41,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2013-10-25. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1978,MMusic,104,43,"ExtensionOfPrevious,ContextSetting",41,-1,"
Abstract",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1979,MMusic,104,44,"ExtensionOfPrevious,ContextSetting",43,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1980,MMusic,104,45,"InformationProviding,ExtensionOfPrevious,ContextSetting",44,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1981,MMusic,104,46,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
The file can be obtained via
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1982,MMusic,104,47,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",46,-1,"
IESG discussion can be tracked via
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ballot/",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1983,MMusic,104,48,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",47,-1,"
The following IPR Declarations may be related to this I-D:",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1984,MMusic,104,49,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",48,-1,"
http://datatracker.ietf.org/ipr/2028/
http://datatracker.ietf.org/ipr/1189/",<20131011161559.4968.64237.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-10-11 09:15:59
1985,MMusic,104,120,"InformationProviding,InformationSeeking,InformationProviding,ProposeAction,Social",42,-1,"
Please take this probably last chance to review the changes during these
last months for this document.",<525B8B33.7030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-10-14 08:12:03
1986,MMusic,106,0,Social,,-1,"Hi,",<9BB92CB59918E1418A06FD4E3269FABE116A4737@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-06 16:37:26
1987,MMusic,106,8,"InformationProviding,ContextSetting,ProposeAction,InformationProviding",,-1,"
I have reviewed this document as part of the security directorate's ongoing effort to review all IETF documents being processed by the IESG.  These comments were written primarily for the benefit of the security area directors.  Document editors and WG chairs should treat these comments just like any other last call comments.",<9BB92CB59918E1418A06FD4E3269FABE116A4737@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-06 16:37:26
1988,MMusic,106,9,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",8,-1,"
This is a lengthy document and I did not have time to fully review it.  I did review the Security Considerations section and found it to be well written and thorough.  I found no problems there and consider that it appropriately covers the concepts in the document.",<9BB92CB59918E1418A06FD4E3269FABE116A4737@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-06 16:37:26
1989,MMusic,106,12,Social,,-1,"Hi Chris,",<51B17B3C.3090509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 08:18:36
1990,MMusic,106,51,"Question,Question",9,-1,"
Did you review Section 19 - Security Framework and section C.1.4 which
are the two major sections which defines usage of security mechanisms?",<51B17B3C.3090509@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-06-07 08:18:36
1991,MMusic,106,54,Social,,-1,"Hi Magnus,",<FF194AD4-68FE-429C-B90F-5547702DF411@cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-07 15:25:36
1992,MMusic,106,105,"Answer,ContextSetting,Answer",51,-1,"
Unfortunately I did not review those sections. My travel with the day job lately has prevented me from doing that. I did want to get a review in before the deadline and what I did was all that I could accomplish right now.",<FF194AD4-68FE-429C-B90F-5547702DF411@cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-07 15:25:36
1993,MMusic,106,106,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,NeutralResponse",105,-1,"
I do have a long-ish flight coming up in a few days. If it would help, I could review those sections and have my notes out by next Wednesday or Thursday. Let me know.",<FF194AD4-68FE-429C-B90F-5547702DF411@cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-07 15:25:36
1994,MMusic,106,109,Social,,-1,"Hi All,",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
1995,MMusic,106,207,"ContextSetting,InformationProviding",106,-1,"
I looked over those sections on my long-ish flight and have written up some notes while I'm waiting for my very much delayed final leg back home.",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
1996,MMusic,106,208,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",207,-1,"
Without a thorough reading of the entire document, I'll say that I understand the intentions of Appendix C.1.4, and Section 19, but havn't fully wrapped my head around it.  I'll also say that I'm not well versed in MIKEY.  Since it stood out, I also looked at Appendix G.  Nothing stood out as being insecure and I'll say again that most of the documentation is very well done.",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
1997,MMusic,106,209,"ExtensionOfPrevious,ContextSetting,InformationProviding",208,-1,"
Below are some nits:",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
1998,MMusic,106,210,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",209,-1,"
Appendix G",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
1999,MMusic,106,211,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",210,-1,"
Current:
This section provides anyone intending to define how to transport of
RTSP messages over a unreliable transport protocol with some
information learned by the attempt in RFC 2326 [RFC2326].  RFC 2326
defined both an URI scheme and some basic functionality for transport
of RTSP messages over UDP, however, it was not sufficient for
reliable usage and successful interoperability.",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2000,MMusic,106,212,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",211,-1,"
The RTSP scheme defined for unreliable transport of RTSP messages was
""rtspu"".  It has been reserved by this specification as at least one
commercial implementation exists, thus avoiding any collisions in the
name space.",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2001,MMusic,106,213,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",212,-1,"
The following considerations should exist for operation of RTSP over
an unreliable transport protocol:",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2002,MMusic,106,214,"ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",213,-1,"
Proposed:
This appendix provides guidance for those who want to implement RTSP messages over unreliable transports as has been defined in RFC 2326 [RFC2326].  RFC 2326 defined the ""rtspu"" scheme and provided some basic information for the transport of RTSP messages over UDP.  The information is being provided here as there has been at at least one commercial implementation and compatibility with that should be maintained.",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2003,MMusic,106,215,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",214,-1,"
The following points should be considered for an interoperable implementation:",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2004,MMusic,106,216,"ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ExtensionOfPrevious",215,-1,"
CML> Throughout the document, I found an assortment of ""an URI"" and ""a URI"".  Please pick one and be consistent.  :-)",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2005,MMusic,106,217,"Question,ExtensionOfPrevious,ContextSetting,Question",215,-1,"
CML> Do you want to say something about using rtspu is NOT RECOMMENDED in the Security Considerations section?",<9BB92CB59918E1418A06FD4E3269FABE116A6711@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-06-09 22:52:51
2006,MMusic,106,338,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding",8,-1,"Hi,
I have reviewed this document as part of the security directorate's ongoing effort to review all IETF documents being processed by the IESG.  These comments were written primarily for the benefit of the security area directors.  Document editors and WG chairs should treat these comments just like any other last call comments.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2007,MMusic,106,339,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",338,-1,"
This draft has issues that should be fixed before it moves forward.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2008,MMusic,106,340,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",339,-1,"
General
The word ""suitable"" appears 3-4 times in the document, but there is no definition of ""suitable"". In fact, there does not seem to be any evaluation of ""suitability"" in the procedures defined here. Either drop the word or define it and take account of the definition in the procedures.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2009,MMusic,106,341,"InformationProviding,ExtensionOfPrevious,ContextSetting,NeutralResponse",339,-1,"
Abstract
Well done. Says what the document is about, sets the architectural context and limits the scope. No comment.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2010,MMusic,106,342,"InformationProviding,ExtensionOfPrevious,ContextSetting,NeutralResponse",339,-1,"
1. Introduction
Again well done. Relates this document to other work done and in progress. No comment other than the one on ""suitable"" made above.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2011,MMusic,106,343,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ProposeAction",339,-1,"
2. ALTO Server Discovery Procedure Overview
Provides the indicated overview. One substantive issue: not consistent with the detailed procedure given in Section 3. Please see below. You might also say that the procedure has to be performed for each interface, for each Address Family (AF) supported on that interface.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2012,MMusic,106,344,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",339,-1,"
Several nits:
- neccessary, neccessarily -> necessary, necessarily
- ""yielded"" might better be ""configured"" or ""acquired"" in paragraph 2
- whishes -> wishes in paragraph 3",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2013,MMusic,106,345,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",339,-1,"
3.  ALTO Server Discovery Procedure Specification
Definitely you should say here that the procedure has to be performed for each interface, for each Address Family (AF) supported on that interface.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2014,MMusic,106,346,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",345,-1,"
3.1.  Step 1: Retrieving the Domain Name",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2015,MMusic,106,347,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",346,-1,"
3.1.1.  Step 1, Option 1: User input
Begins by giving the motivation for user override, then defines an user input procedure which falls back to DHCP.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2016,MMusic,106,348,"ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",347,-1,"
Comment: That appears to contradict the summary in Section 2, which says that DHCP is the primary means of acquiring the domain name. If Section
2 is correct, it would seem logical to present what is now in Section
3.1.2 first, followed by the current contents of Section 3.1.1.
Furthermore, after the example of user override in the user input section, perhaps say that implementations MUST allow for user input if the DHCP option fails, and SHOULD allow user input to override the DHCP.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2017,MMusic,106,349,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",348,-1,"
On the other hand, further down it appears that the authors have assumed that if the user provides the domain name, it applies to all interface-AF combinations. Is this a reasonable assumption? If so, the current order of presentation is reasonable but 3.1.1 should explicitly state this assumption.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2018,MMusic,106,350,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",349,-1,"
3.1.2.  Step 1, Option 2: DHCP
Second para introduces the relevant DHCPv4 and DHCPv6 options. Third para provides details with normative language. No comment.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2019,MMusic,106,351,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",350,-1,"
3.2.  Step 2: U-NAPTR Resolution
Reviews the result of the first step, gives details of the U_NAPTR lookup procedure, gives an example, and discusses failure cases.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2020,MMusic,106,352,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",351,-1,"
Comment: the statement that an HTTPS: result is preferred is made in the example (third paragraph). That statement should be part of the normative procedural description in the second paragraph.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2021,MMusic,106,353,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",352,-1,"
Comment: the last sentence of the final paragraph seems slightly ambiguous. If the phrase ""lookup that has failed"" is expanded to ""lookup of a domain name-interface-AF combination that has failed"" capture the authors' intention?",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2022,MMusic,106,354,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",353,-1,"
Editorial: the third paragraph should begin with the statement: ""Here is an example.""",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2023,MMusic,106,355,"ExtensionOfPrevious,ContextSetting",339,-1,"
4.  Deployment Considerations",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2024,MMusic,106,356,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",355,-1,"
4.1.  Issues with Home Gateways
Notes that the home gateway could fail to pass the necessary DHCP options to the host because it fails to understand them. Notes further that the home gateway could pass a local DNS name to the host in place of the name returned by DHCP. In this case the procedure will fail unless the home gateway itself resolves the NAPTR lookup correctly.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2025,MMusic,106,357,"ExtensionOfPrevious,ContextSetting,ProposeAction",356,-1,"
Editorial: issues -> issue in the first line of the last paragraph.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2026,MMusic,106,358,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",357,-1,"
4.2.  Issues with Multihoming, Mobility and Changing IP Addresses
Notes that:
- manual entry could give undesirable results in the case of mobility
- DHCP usage applies per interface-AF combination
- Alto server(s) used should (no normative text) be that/those applicable to the interface-AF combination selected
- a change of address on an interface invalidates any prior choice of Alto server(s) for that interface-AF combination
- a server good for one interface may not be good for another
- DHCP generally not available for VPNs and mobile IP, hence manual configuration (of the domain of the VPN gateway or Home Agent) will be required.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2027,MMusic,106,359,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question",358,-1,"
Comment: The first paragraph appears to assume that manual entry provides a single domain name that applies to all interface-AF combinations. Is this intended? (See also comment to Section 3.1.1 above.)",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2028,MMusic,106,360,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",359,-1,"
Comment: The point about DHCP per interface-AF combination should appear earlier, see comments to Section 2 and 3 above.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2029,MMusic,106,361,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",360,-1,"
Editorial: second paragraph, familly (line 2) and familiy (line 4) -> family",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2030,MMusic,106,362,"InformationProviding,ExtensionOfPrevious,ContextSetting",339,-1,"
5.  IANA Considerations
Registers U-NAPTR application service tag.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2031,MMusic,106,363,"InformationProviding,ExtensionOfPrevious",362,-1,"
No comment.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2032,MMusic,106,364,"InformationProviding,ExtensionOfPrevious,ContextSetting",339,-1,"
6.  Security Considerations
No current content.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2033,MMusic,106,365,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",364,-1,"
Comment: suggest that this section say that implementers and operators must understand the security considerations presented in Section 14 of [I-D.ietf-alto-protocol]. Further, the present section responds to the requirement on the discovery process implied by Section 14.1.3 of [I-D.ietf-alto-protocol].",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2034,MMusic,106,366,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",365,-1,"
6.1.  General Security Considerations
Describes two failure modes: inability to get a URI at all, and getting a URI that points to a poor choice of Alto server or one containing the wrong information either by misconfiguration or by malicious intent. In the latter case, advises operator to watch for undesirable traffic patterns or user complaints of poor performance and terminate Alto service if they occur.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2035,MMusic,106,367,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",366,-1,"
Comment: this section presents no discussion of the mechanisms by which an attacker may interfere with the Alto service. Without identifying potential mechanisms, it is not possible to suggest mitigating measures.
To focus their discussion, the authors might wish to consider the organization of discussion in [I-D.ietf-alto-protocol]: ""Risk Scenarios""
- ""Protection Strategies"" - ""Limitations"".",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2036,MMusic,106,368,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",367,-1,"
6.2.  Security Considerations for U-NAPTR
Notes that ""interception"" of messages not an issue because the URI of the Alto server in a domain is generally well known. Identifies three specific attacks: falsified input domain name, DNS alteration, and actual server impersonation. Suggests the use of DNSSEC to thwart DNS alteration and provides some discussion of the use of https: to authenticate the server. Refers to RFC 5986 for the rest.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2037,MMusic,106,369,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",368,-1,"
Comment: what the opening paragraph means to say is probably that message confidentiality is unnecessary. Interception and modification or blocking of messages would constitute attacks that you might discuss.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2038,MMusic,106,370,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",369,-1,"
Comment: once the discussion in Section 6.1 has been properly focussed, the authors may need to reorganize the discussion to eliminate redundancy between 6.1 and 6.2.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2039,MMusic,106,371,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",,-1,"
Comment: most of Section 6.2 is copied from the Security Considerations section of RFC 5986. This is reasonable, since the contexts are very similar. There is one real difference, in that, rather than suggesting administrative constraints on the domain name used for the Alto server, the present document calls for the use of DNSSEC to ensure the validity of the returned URI. Here is a suggestion for a more direct presentation of Section 6.2:",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2040,MMusic,106,372,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",371,-1,"
- Section 5 of RFC 5986 is generally applicable to the present document, with the substitution of the Alto server for the Location Information Server (LIS).
- That section identifies three attacks: falsified input domain name, DNS alteration, and actual server impersonation, and suggests mitigating measures for each. Implementors and operators should read that section for details.
- Rather than using the input domain provided by the user or DHCP in the https: validation procedure (which implies administrative constraints on the domain name used for the Alto server), the present document recommends the use of DNSSEC to assure the validity of the returned URI, followed by the use of the domain contained in the URI in the https: validation procedure.",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2041,MMusic,106,373,Thanking,,-1,"
Thank you,",<C0E0A32284495243BDE0AC8A066631A8167BEEA5@dfweml513-mbs.china.huawei.com>,Tina.Tsou.Zouting@huawei.com,0.0,0,3,2013-06-15 04:29:24
2042,MMusic,107,189,"InformationProviding,ContextSetting,ProposeAction,InformationProviding",,-1,"I have reviewed draft-ietf-mmusic-rtsp-nat-20 in preparation for IETF LC.
The document is in good shape. I have a few questions and comments below
that need to be resolved before issuing the last call. I’ve also included
a list of nits that should be resolved in the next rev.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2043,MMusic,107,190,"ExtensionOfPrevious,ContextSetting",189,-1,"
Comments and questions:",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2044,MMusic,107,191,"ExtensionOfPrevious,ContextSetting,ProposeAction",190,-1,"
Sec 4.2:
""The connection address SHOULD use the same format
(explicit IP or FQDN) as in the dest_addr parameter used to
express fallbacks.”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2045,MMusic,107,192,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",191,-1,"
Per 4.1, I thought the dest_addr MUST NOT be included, so this requirement
seems contradictory.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2046,MMusic,107,193,"ExtensionOfPrevious,ContextSetting,ProposeAction",191,-1,"
""<tcp-type-ext>:  conveys the candidates connection type (active,
passive, or S-O) for TCP based candidates.  This MUST be included
for candidates that have <transport> set to TCP and MUST NOT be
included for other transport types, including UDP, unless
explicitly specified for that transport protocol.""",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2047,MMusic,107,194,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ClarificationElicitation",193,-1,"
I’m assuming the last phrase means “unless <something> gets specified in
the future for that transport protocol.” But I’m not clear on what the
<something> is.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2048,MMusic,107,195,"ExtensionOfPrevious,ContextSetting,InformationProviding",190,-1,"
Sec 4.4:
""The RTSP client SHOULD send the feature tag ""setup.ice-d-m"" in the
""Supported"" header in all SETUP requests that contain the ""D-ICE""
lower layer transport.”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2049,MMusic,107,196,"Question,ExtensionOfPrevious,Question",195,-1,"
What are the situations where the SETUP request contains “D-ICE” but where
the feature tag should not be included? Is it for SETUP requests issued
after media is already playing (as described in Sec 6.13)?",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2050,MMusic,107,197,"ExtensionOfPrevious,ContextSetting,InformationProviding",190,-1,"
Sec 6.5:
""The server determines if the SETUP request is successful from the
other perspectives”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2051,MMusic,107,198,"InformationSeeking,ExtensionOfPrevious,ClarificationElicitation",197,-1,"
It’s not clear what is meant by “from the other perspectives.”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2052,MMusic,107,199,"ExtensionOfPrevious,ContextSetting,InformationProviding",190,-1,"
Sec 6.10:
""If the 480 response is received or sent in response to a PLAY
request, the server MUST NOT free its gathered candidates.""",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2053,MMusic,107,200,"ClarificationElicitation,ExtensionOfPrevious,ProposeAction,ClarificationElicitation",199,-1,"
The “received or sent” part doesn’t quite make sense, since we’re talking
about the server, right? Shouldn’t this just say “sent”?",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2054,MMusic,107,201,"Question,ExtensionOfPrevious,ContextSetting,ProposeAction,Question",190,-1,"
Sec 6.13:
See comments on Sec 4.4 above — why is the Supported header not included
in the SETUP requests in this example?",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2055,MMusic,107,202,"Question,ExtensionOfPrevious,ContextSetting,Question",190,-1,"
Sec 7.1 and 7.2:
Again with reference to Sec 4.4 — why is the ""setup.ice-d-m” feature tag
mandatory for media proxies but recommended for clients and signaling
proxies?",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2056,MMusic,107,203,"ExtensionOfPrevious,ContextSetting,InformationProviding",190,-1,"
Sec 7.3:
""Unfortunately, the usage of the ""setup.ice-d-m"" feature tag in the
Proxy-Require will have contradicting results.”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2057,MMusic,107,204,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",203,-1,"
This sentence and the paragraph that follows are confusing because there
is no prior mention of putting the feature tag in the Proxy-Require header
(although I guess it was implicitly assumed). I think what you meant is
this:",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2058,MMusic,107,205,"ExtensionOfPrevious,ProposeAction,InformationProviding",204,-1,"
""The usage of the “setup.ice-d-m” feature tag in the Proxy-Require header
is NOT RECOMMENDED because it can have contradictory results.”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2059,MMusic,107,206,"ExtensionOfPrevious,ContextSetting,InformationProviding",190,-1,"
Sec 8:
""This multiplexing SHALL be combined with ICE”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2060,MMusic,107,207,"ExtensionOfPrevious,ProposeAction,InformationProviding",206,-1,"
I think s/ICE/ICE-RTSP/ makes sense here.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2061,MMusic,107,208,"ExtensionOfPrevious,ContextSetting,InformationProviding",206,-1,"
""Due to the above mentioned benefits, RTSP servers and clients that
support ""D-ICE"" lower layer transport in combination with RTP SHALL
also implement RTP and RTCP multiplexing as specified in this section
and [RFC5761].”",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2062,MMusic,107,209,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,Question",208,-1,"
Multiplexing is not specified in this section. Did you mean as specified
in Appendix C of draft-ietf-mmusic-rfc2326bis and RFC5761?",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2063,MMusic,107,210,"ExtensionOfPrevious,ContextSetting",189,-1,"
Nits:",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2064,MMusic,107,211,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",210,-1,"
There are a couple of idnits that should be fixed.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2065,MMusic,107,212,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec 1:
s/when PLAY request are/when PLAY requests are/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2066,MMusic,107,213,"ExtensionOfPrevious,ContextSetting,InformationProviding",211,-1,"
Sec 4.2:
OLD:
<foundation>:   is an identifier that is equivalent for two
candidates that are of the same type, share the same base, and
come from the same STUN server, and is composed of one to thirty
two <ice-char>.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2067,MMusic,107,214,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",213,-1,"
NEW:
<foundation>:   is an identifier that is equivalent for two
candidates that are of the same type, share the same base IP
address, and
come from the same STUN server. It is composed of 1 to 32
<ice-char>s.",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2068,MMusic,107,215,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/is used when the second component/is used, in which case the second
component/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2069,MMusic,107,216,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/the Allocate Response/the TURN Allocate Response/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2070,MMusic,107,217,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
s/<tcp-type-ext>:  conveys the candidates connection type/<tcp-type-ext>:
conveys the candidate’s connection type/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2071,MMusic,107,218,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec 4.4:
s/RTSP agents; clients, servers and proxies./RTSP agents: clients, servers
and proxies./",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2072,MMusic,107,219,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec 6.12:
s/First, if it can attempt/First, it can attempt/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2073,MMusic,107,220,"ExtensionOfPrevious,ProposeAction,InformationProviding",212,-1,"
s/or change the transport parameters./or changing the transport
parameters./",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2074,MMusic,107,221,"ExtensionOfPrevious,ProposeAction,InformationProviding",212,-1,"
s/SHALL use Regular nomination./SHALL use regular nomination./",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2075,MMusic,107,222,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",212,-1,"
Sec 6.13:
s/A Server/A server/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2076,MMusic,107,223,"ExtensionOfPrevious,ProposeAction,InformationProviding",212,-1,"
s/gather new ICE candidates, and send/gather new ICE candidates and send/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2077,MMusic,107,224,"ExtensionOfPrevious,ProposeAction,InformationProviding",212,-1,"
s/If not the client will/If not, the client will/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2078,MMusic,107,225,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",212,-1,"
Sec 7.3:
s/non ICE/non-ICE/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2079,MMusic,107,226,"ExtensionOfPrevious,ContextSetting,InformationProviding",225,-1,"
OLD:
A non-media handling proxy is expected to ignore and simply forward
all unknown transport specifications, however, this can only be
guaranteed for proxies following the RTSP 2.0 specification
[I-D.ietf-mmusic-rfc2326bis].",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2080,MMusic,107,227,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",226,-1,"
NEW:
A non-media handling proxy is expected to ignore and simply forward
all unknown transport specifications. However, this can only be
guaranteed for proxies following the RTSP 2.0 specification
[I-D.ietf-mmusic-rfc2326bis].",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2081,MMusic,107,228,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/if you want to provide other fallbacks/if it is desirable to provide
other fallbacks/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2082,MMusic,107,229,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/For non-supporting non-media handling proxies the result will also
result in aborting the setup, however,/For non-ICE supporting non-media
handling proxies the result will be aborting the setup. However,/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2083,MMusic,107,230,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/the proxy chain support/the proxy chain supports/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2084,MMusic,107,231,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/to try perform an SETUP/to try to perform a SETUP/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2085,MMusic,107,232,"ExtensionOfPrevious,ContextSetting,InformationProviding",211,-1,"
Sec 9:
OLD:
However, for RTSP clients lacking a relay server,
like a TURN server, or where usage of such a server has significant
cost associated with it the usage of a STUN derived server reflexive
address",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2086,MMusic,107,233,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",232,-1,"
NEW:
However, for RTSP clients lacking a relay server,
such as a TURN server, or where usage of such a server has significant
cost associated with it, the usage of a STUN-derived server reflexive
address",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2087,MMusic,107,234,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/the selected protocol, e.g. UDP needs/the selected protocol, e.g. UDP,
needs/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2088,MMusic,107,235,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/Secondly the selected/Secondly, the selected/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2089,MMusic,107,236,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec 10.1:
s/This document request that/This document requests that/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2090,MMusic,107,237,"ExtensionOfPrevious,ProposeAction,InformationProviding",211,-1,"
s/ICE based/ICE-based/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2091,MMusic,107,238,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec. 10.2:
s/Transport Protocol Specifications/Transport Protocol Identifiers/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2092,MMusic,107,239,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",211,-1,"
Sec 12:
s/Bill Atwood have provided/Bill Atwood has provided/",<CFA3CB5F.3BF69%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-22 15:42:23
2093,MMusic,107,406,"ProposeAction,Social,Thanking,Thanking",189,-1,"Hi,

Thanks for the review. Please see below for answers and comments on your
questions and comments.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2094,MMusic,107,408,"InformationProviding,NeutralResponse,ProposeAction,StateDecision,Answer",192,192,"
So, this is a reference to another transport specification used as
fallback if ICE isn't supported. The format of the D-ICE transport
spec's connection-address SHOULD be the same format (explicit IP or
FQDN) as used in that fallback transport specification's dest_addr
parameter.

Will see what we can do to clarify that it is referencing another
transport spec.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2095,MMusic,107,410,"InformationProviding,NeutralResponse,ProposeAction,Answer",194,194,"
So, if anyone defines a new transport protocol and you like to add this
here. Then that protocol may chose to re-use this header. That is when
that unless occurs. As one can define a new parameter as easily, I guess
this ""unless ..."" is quite unnecessary and can be removed.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2096,MMusic,107,412,"Answer,Answer",196,196,"
I would classify this SHOULD as: we have no good reason why you would
not include the feature tag. But if you have one, we don't see a reason
for making the implementation violate a MUST.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2097,MMusic,107,414,"InformationProviding,NeutralResponse,ProposeAction,Answer",198,198,"
As a SETUP for a media resource also the preparation and availability of
the media resource, not only the transport needs to be fulfilled. It
might be clear to simply use ""is successful""
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2098,MMusic,107,416,"Answer,Agreement,ContextSetting,ProposeAction,Agreement",200,200,"
Correct, as currently specified the 480 is only sent in Server -> Client
direction, thus the ""received or"" is to be removed.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2099,MMusic,107,418,"InformationProviding,Answer,ProposeAction,Answer",201,201,"
I don't think there exist a reason, just a missed inclusion. will address.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2100,MMusic,107,420,"InformationProviding,Answer,ContextSetting,ProposeAction,Answer",202,202,"
Because a client really needs to know if a proxy supports the ICE-D
transport. If it doesn't you end up in all the issues discussed in
Section 7.3. If there is one change I think should be done here is to
make 7.2 a SHALL indicate its capability. I also clarified that this
relates to SETUP request and responses.

If a client skips including a Supported header but anyway tries using
ICE-D as transport, it will work if the nodes support it. Including the
Supported header will only make it clear on the feature negotiation
level that the feature is supported and also prompt the proxies to
include their Proxy-Supported header.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2101,MMusic,107,422,"InformationProviding,Agreement,ProposeAction,StateDecision,Agreement",205,205,"
Yes, the sentence you propose is better, will include. The text is
written with the assumption that one knows RTSP 2.0 and its feature
negotiation mechanisms. Thus, clearly one can include the feature tag in
any headers that uses feature tags when relevant.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2102,MMusic,107,424,"NeutralResponse,ContextSetting,ProposeAction,StateDecision,Disagreement",207,207,"
I actually removed the SHALL, it was duplicate with the SHALL in the
last sentence. So I change this to ""This multiplexing is very benefical
when be combined with ICE for RTSP as it makes RTP and RTCP need only a
single component ...""
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2103,MMusic,107,426,"Answer,Agreement,StateDecision,Agreement",209,209,"
Yes, will address.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2104,MMusic,107,427,"NeutralResponse,StateDecision",211,209,"
We will take care of the nits.
",<538461ED.50008@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-27 11:59:09
2105,MMusic,107,644,"InformationProviding,Social,Thanking,Thanking",406,-1,"Hi Magnus,

Thanks. Comments inline.

On 5/27/14, 2:59 AM, ""Magnus Westerlund"" <magnus.westerlund@ericsson.com>",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2106,MMusic,107,646,"Thanking,Thanking",408,408,"
Thanks.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2107,MMusic,107,648,"Agreement,Agreement",410,410,"
Sounds good.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2108,MMusic,107,650,"NeutralResponse,ProposeAction,NeutralResponse",412,412,"
Would help to explain that rationale in the document.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2109,MMusic,107,652,"Agreement,Agreement",414,414,"
Agreed.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2110,MMusic,107,654,"NeutralResponse,Agreement",416,416,"
Ok.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2111,MMusic,107,656,"NeutralResponse,Agreement",418,418,"
Ok.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2112,MMusic,107,658,"Agreement,ContextSetting,Agreement",420,420,"
Good, this makes sense to me.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2113,MMusic,107,660,"NeutralResponse,Agreement",422,422,"
Ok.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2114,MMusic,107,662,"NeutralResponse,Agreement",424,424,"
Ok.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2115,MMusic,107,664,Agreement,426,426,"
Ok.
",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2116,MMusic,107,665,"Thanking,Agreement,Thanking","426,427",427,"
Great, thanks.",<CFAA6BC1.3CC45%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-27 16:24:23
2117,MMusic,107,710,"InformationProviding,ContextSetting,ProposeAction,ProposeAction",650,650,"
I propose the following:

The RTSP client SHOULD send the feature tag ""setup.ice-d-m"" in the
""Supported"" header in all SETUP requests that contain the ""D-ICE""
lower layer transport.  Note, this is not a ""MUST"" due to that an
RTSP client always can attempt to perform an SETUP using ICE to see
if it functions or fails.  But including the feature tag in the
""Supported"" header do ensure that proxies supporting this
specification do explicitly indicate such support, see Section 7.
",<5385E8F7.1040306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2014-05-28 15:47:35
2118,MMusic,107,765,"Agreement,Agreement",710,710,"
Looks good.",<CFAB56FD.3CDBC%alissa@cooperw.in>,alissa@cooperw.in,0.0,1,0,2014-05-28 09:04:13
2119,MMusic,108,0,Social,,-1,"Hi Enrico,",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2120,MMusic,108,125,"Agreement,ContextSetting,ProposeAction,Agreement",,-1,"
Yes, I believe you are mostly correct. But I would like to clarify a few
things why I think there at least some client modifications.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2121,MMusic,108,126,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",125,-1,"
The scenario you have when you have a client (A) behind full cone NAT to
a RTSP server (C) and STUN server (D).
A->D: The client makes a STUN request for each UDP port the session needs.
A->C: The client makes a RTSP SETUP utilizing only client_port.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2122,MMusic,108,127,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",126,-1,"
A->C: The client sends a RTSP PLAY.
C->A: RTP stream plays.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2123,MMusic,108,128,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",127,-1,"
This works under a few assumptions.
1. The RTSP TCP connection gets the same public IP address as the UDP
mappings.
2. The STUN request results in that the correct port numbers are
received, i.e. RTP gets a even port and RTCP gets the next odd.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2124,MMusic,108,129,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",128,-1,"
Of the above assumption I is commonly fulfilled. However the second, may
not be fulfilled. Why this works does most likely depend on two things.
1. The server does not care if it delivers RTP to odd or even port
(Which is a good implementation strategy). 2. The streaming works
without RTCP getting through. The RTCP that is directed at the RTP port
number + 1, and are lost there.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2125,MMusic,108,130,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",129,-1,"
The second point to make about the RTSP NAT draft is that it intended to
be used with updated RTSP specification
draft-ietf-mmusic-rfc2326bis-??.txt. In that draft we define new
transport parameters for address and ports that are more flexible and
allows to specify for each individual IP/UDP flow what address/port it
should be sent to. This allows one to avoid making the above assumptions.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2126,MMusic,108,131,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",130,-1,"
The use of the tuple of address and port is a good thing, as it ensures
that both parameters are explicitly given. This also makes the server
possible to define certain strategies regarding forwarding media to
certain addresses.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2127,MMusic,108,132,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",131,-1,"
The client needs adaptation to use the STUN method as it needs a STUN
client. However no more changes are needed for this solution.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2128,MMusic,108,133,"ExtensionOfPrevious,Social,ExtensionOfPrevious",132,-1,"
I hope this clarifies a few things.",<3EEC9F15.5060608@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-15 18:30:13
2129,MMusic,109,13,"InformationProviding,InformationProviding,ContextSetting",,-1,"In ""draft-ietf-mmusic-rfc2326bis-28"" (and preceding), a ""npt-range-spec"" is defined as
npt-range-spec   =  ( npt-time ""-"" [ npt-time ] ) / ( ""-"" npt-time )
(ditto for ""smtp-range-spec"" and ""utc-range-spec"").",<E1C5C532-C506-4BCD-82C8-2797E8625042@live555.com>,finlayson@live555.com,0.0,0,6,2011-11-26 11:53:33
2130,MMusic,109,14,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",13,-1,"
This suggests that the following are valid:
npt = -now
npt = -12.34",<E1C5C532-C506-4BCD-82C8-2797E8625042@live555.com>,finlayson@live555.com,0.0,0,6,2011-11-26 11:53:33
2131,MMusic,109,15,"Question,ExtensionOfPrevious,ClarificationElicitation,InformationProviding,ExtensionOfPrevious",14,-1,"
What are these supposed to mean (especially given that - in section 4.5 - you say that ""Negative values are not defined"")?",<E1C5C532-C506-4BCD-82C8-2797E8625042@live555.com>,finlayson@live555.com,0.0,0,6,2011-11-26 11:53:33
2132,MMusic,109,49,"Answer,Agreement,InformationProviding,Answer,ProposeAction,Social",15,15,"
It means play from ""now"" or stored playout point _until_ the given
value. I agree that npt=-now does not make sense, so that should be made
clear is not valid. Please also remember that the timescale can go
backwards.
",<4F1D2887.3090607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-01-23 10:29:43
2133,MMusic,110,0,"InformationProviding,ContextSetting",,-1,I meant to send this in earlier..here it is now..,<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2134,MMusic,110,139,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",0,-1,"
Questions and comments (some typos too):",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2135,MMusic,110,140,"Question,InformationProviding,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 10: Transport Negotiation
Can transport parameters of an existing session be changed, mid-stream?
For instance, is it possible to change the server's RTP/RTCP ports
mid-stream?
If so, exactly how does the transition to using the new ports happen? Do some
mechanisms need to be specified to ensure synchronization etc after the cutover?
If not, it would be good to specify the states in which transport negotiation
can be done.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2136,MMusic,110,141,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 10, last paragraph section 1.5 - are 'stream identifiers' the
same as 'session identifiers'? If so, it might help to use the same
term throughout the document.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2137,MMusic,110,142,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 14, section 2 - typo after last paragraph 'b'?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2138,MMusic,110,143,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 15, 1st paragraph, last sentence - typo?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2139,MMusic,110,144,"Question,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 15, 3rd paragraph, it might help to rephrase to say that FQDNs
are preferred, especially for IPv6, (maybe even 'required for IPv6 ?)
however IP addresses should also be supported (for backward
compatibility).",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2140,MMusic,110,145,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 18, section 3.7, 2nd sentence - typo 'in' appears twice.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2141,MMusic,110,146,"Question,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 20, section 5 - adding Expires header?
Page 27, section 7.1.2 - add Expires header?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2142,MMusic,110,147,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 30, section 9.3, 3rd paragraph, last sentence - typo?
Page 31, section 9.3, Is play.basic a superset of *not* con.persistent?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2143,MMusic,110,148,"Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 31, section 9.4, 1st paragraph, 4th sentence s/must/should/?
I.e. 'This requires that any RTSP URL pointing tat a IPv6 host should
use fully qualified domain name and not a IPv6 address.'",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2144,MMusic,110,149,"Question,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 31, section 10, 1st paragraph, 2nd sentence - typo 'too'?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2145,MMusic,110,150,"Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 31-32, section 10,
Should responses to OPTIONS be cached? If so, is there an expiry on
this and any specification on how to refresh?
Are there rules about determining capability in the presence of a
proxy?
Does this section specify all that is required for each endpoint to
determine capability?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2146,MMusic,110,151,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 32, 1st paragraph, last sentence - typo? Should it say 'Public
header tag which declares...'?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2147,MMusic,110,152,"Question,InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 32, 2nd paragraph, typos? Should it be
'It is not necessary to use OPTIONS to discover support of a method,
it is possible to simply try it. If the receiver of the request does
not support the method it will respond with an error code indicating
that the method is either not implemented (501) or does not apply for
the resource (405). ..'",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2148,MMusic,110,153,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 32, 3rd paragraph, 3rd sentence, typo? Should it be:
'The amount of functionality  that a feature-tag represents can vary
significantly.'",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2149,MMusic,110,154,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 32, 5th paragrapgh, typo? Should it be:
'Supported: The supported header is used..'",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2150,MMusic,110,155,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 34, 1st paragraph - typo? ""SHOULD NOT"" instead of ""SHOULD not""?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2151,MMusic,110,156,"Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 36, section 11.3, 2nd paragraph - the part that mentions that the
media shall start to play in sync.
Does a=group apply to this discussion?
What is the scope of synchronization here - does it mean that packets
are sent on the different tracks according the the movie timeline that
is specified for all packets in the track?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2152,MMusic,110,157,"Question,ClarificationElicitation,ExtensionOfPrevious",156,-1,"
Also, does 'setup.playing' apply to a specific URL or request/session
or is it a statement about the server in general?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2153,MMusic,110,158,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 37, 3rd paragraph 'Since SETUP.."" Isn't it likely that there
would be intermediary devices that would be interested in seeing the
b= line in the DESCRIBE response as well?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2154,MMusic,110,159,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 38: liveness:
Should there be a mention of signs of liveness - no RTCP and no TCP
KeepAlive implies the session is gone?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2155,MMusic,110,160,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 39, 4th paragraph, about the Range header. There is a mention
in section 3.5, 2nd paragraph, that 'now' should only be used for
live. This applies even in this section, right? I.e. the
recommendation to use npt=now- is for live?",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2156,MMusic,110,161,"Question,Question,InformationProviding,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 39, 5th paragraph - If there is no Range header in the request,
what should the response use as units for the Range header?
There was a suggestion that, if you do have the Range in npt, it can
be used, if not in the SETUP response there should be an indication of
the Range specifications that apply to the stream.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2157,MMusic,110,162,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",161,-1,"
Also, it seems like the specification here is only for old
implementations, as newer implementations the Range header must be
sent in the request according to Page 41.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2158,MMusic,110,163,"Question,InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 39, last paragraph - typo? Should it be
'After playing the desired range, the presentation is NOT
automatically paused, media delivery simply stops. A PAUSE must be
issued before another PLAY request can be issued.""",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2159,MMusic,110,164,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 41, 2nd and 3rd paragraph: Here it says PLAY without range is not
ok - does this apply for stored content only? This seems to contradict
the text in the 3rd paragraph..",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2160,MMusic,110,165,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 43, 1st paragraph - is very confusing. Does this refer to the
case where the PAUSE request comes after the first occurence? Again it
seems like PLAY without a range header is ok...confusing.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2161,MMusic,110,166,"InformationProviding,ExtensionOfPrevious,ContextSetting",139,-1,"
Page 44, section 11.6, 1st paragraph, suggested rewording of the last
few sentences:",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2162,MMusic,110,167,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",166,-1,"
'However the session and any other media not torn down yet, remains,
and any valid request, e.g. PLAY or SETUP, can be issued. As an
optional feature a server MAY keep a session even after the last media
on it has been torn down by use of TEARDOWN with a media URI for the
last media. In this cases, when the server continues to maintain a
valid session, after processing a TEARDOWN request on this session, the
server MUST return the session identifier in the TEARDOWN response.'",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2163,MMusic,110,168,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",139,-1,"
Page 44, section 11.6, last paragraph: It would help to move these
sentences to earlier in the section - to explain the motivation for
what's discussed in the sentences above.",<200308211837.LAA18443@phys-ha1mpka.Eng.Sun.COM>,Geetha.Srikantan@Sun.COM,0.0,0,53,2003-08-21 11:37:26
2164,MMusic,110,258,"Agreement,StateDecision",147,147,Fixed,<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2165,MMusic,110,280,"Agreement,StateDecision",149,149,Fixed,<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2166,MMusic,110,313,"Agreement,Answer,StateDecision",151,151,"Yes, fixed.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2167,MMusic,110,323,"Agreement,Answer,StateDecision",152,152,"Yes, fixed.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2168,MMusic,110,328,"Agreement,Answer,StateDecision",153,153,"Yes, fixed.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2169,MMusic,110,332,"Agreement,Answer,StateDecision",154,154,"Yes, fixed.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2170,MMusic,110,335,"Agreement,Answer,StateDecision",155,155,"Yes, fixed.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2171,MMusic,110,561,"ProposeAction,Thanking,InformationProviding,ContextSetting,ProposeAction,StateDecision,Social,Thanking",139,-1,"Hi Geetha,

And thanks for the review. I have fixed the typos, however there are a
few things that may need discussion.

If you are replying to any particular section could you please remove
everything except that topic and change the subject. Please also one
topic per email.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2172,MMusic,110,563,"Answer,InformationProviding,Answer,ContextSetting",140,140,"
Yes, If the server implements it and allows it. As seen by the
application mobility discussion this functionality can be used for this.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2173,MMusic,110,565,"Answer,InformationProviding,Answer",140,140,"
Upon the successful response to a SETUP request to change the transport
parameters the server will start using the new parameters. The client to
avoid losing any packets should keep the old ports/transport open for a
couple of seconds. The client should also have opened its ports for the
new transport prior to sending the request. So I don't believe there are
any synchronization problem.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2174,MMusic,110,567,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",140,140,"
This is currently specified in the state machine. If supported is must
be possible in READY state, and MAY be supported in PLAY state. This can
probably be a clarified and simplified by tightening the requirements a
bit. The text in section 11.3 can probably be improved to be more clear
about what is allowed in this respect.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2175,MMusic,110,569,"Answer,Answer,ProposeAction",141,141,"
In some sense. The occurrence here of stream identifiers should probably
be replaced by session ID and stream and control URLs.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2176,MMusic,110,570,"Agreement,Answer,Agreement",142,142,"
Definitely, probably a result of the document generation.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2177,MMusic,110,571,"Agreement,Answer,StateDecision",143,143,"
Definitely a bad sentence. Is now corrected.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2178,MMusic,110,573,"Answer,InformationProviding,NeutralResponse",144,144,"
I think we have a good level now. First of all the requirement to use
FQDNs to handle IPv6 hosts only applies to RFC 2326 servers, not the
ones in accordance with this specification. There are also reasons why
one might use literal IP addresses. For example in destination fields, a
FQDN name that resolve only to the targeted host may not exist. Also
there are some performance issues if proxies needs to do DNS requests
for all messages it is forwarding.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2179,MMusic,110,574,"Agreement,StateDecision",145,145,"
Fixed
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2180,MMusic,110,576,"Answer,InformationProviding,Answer,ProposeAction",146,146,"
The Expires header is a Entity header, see section 8.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2181,MMusic,110,577,"Answer,InformationProviding,Answer,ProposeAction",147,147,"
play.basic is not a superset of con.peristent. A RTSP entity supporting
play.basic must handle non-persistent connections. The con.peristent is
defined to allow any service requiring a persistent connection to use
this in a Required header. However looking at this I would in fact
propose that this is removed. I can't see any clear need and therefore
it is unnecessary, and if it is need in the future it can simply be
define in relation to the necessary user of the feature tag.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2182,MMusic,110,579,"Answer,InformationSeeking,InformationProviding,Answer,ProposeAction",148,148,"It is a informal must, not a normative one. This paragraph is only for
information on how to make this work if the other party does not support
the updated specification. Are there any problem with this?
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2183,MMusic,110,581,"Answer,InformationProviding,Answer,ProposeAction",150,150,"Maybe, it is actually a problem of what OPTIONS is used for. As long it
is only used for determine server capability it is not a problem.
However if it is used to maintain session liveness, i.e. session ID
present, no. Also depending on the URI and the possibilities to cache ma
y vary. Needs further consideration.

If so, is there an expiry on",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2184,MMusic,110,582,"Answer,InformationProviding,Answer,ProposeAction",150,150,"This is a tough problem. I don't think there are. The Expires header is
an entity header, but the text in RFC 2616 seems to mean the whole
request. SO this is something that needs consideration.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2185,MMusic,110,584,"Answer,InformationProviding,Answer,ProposeAction",150,150,"Yes, I would say so. Options can either be targeted at the next hop. Or
to the server by including host name. However I think the usage of
supported header will not reveal anything about the proxy. Also
something that might need some more consideration.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2186,MMusic,110,586,"Answer,InformationProviding,Answer,ProposeAction",150,150,"Actually this section is totally informal. The specification of the
operations is actually dispersed around the document. See the options
method and the headers for specification.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2187,MMusic,110,592,"Answer,InformationProviding,NeutralResponse",156,156,"
This is only intended to resolve the synchronization problem when doing
SETUP in PLAY state. The newly setuped media must be playing in synch
with already present media, otherwise this would break the aggregation
policy we apply.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2188,MMusic,110,593,"Answer,InformationProviding,Answer",156,156,"I have not considered if a=group has any impact at all. I would not
thinks so, because such a SETUP as described in the second paragraph in
it self requires that the server plays out the media in synch.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2189,MMusic,110,595,"Answer,InformationSeeking,ClarificationElicitation,InformationProviding,Answer,ProposeAction,Social",156,156,"The session has an internal clock that runs during play state. When a
media is added to the session that media must also play out according to
that clock.

0----5----10---15---20---25 Session playout time
0xxxx5xxxx10xxx15xxx20xxx25 First media stream
10***15***20***25 Second media stream starts at 10 seconds
into the media.

In this example a SETUP request to add a second media stream is received
at time 10. Then the second media will start playout from time point 10.

I hope this clarifies this. Are there need to improve the text in that
chapter? Is the functionality (SETUP during PLAY state) needed, or could
we throw it away. In my opinion it is not a really necessary and such a
extension could anyway be added later. In my eyes it will anyway need
extensions.",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2190,MMusic,110,597,"Answer,InformationProviding,Answer",157,157,"
A Feature tag is used in a context, depending on the context it can
either relate to a session, media stream, or the complete server.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2191,MMusic,110,599,"Answer,InformationSeeking,InformationProviding,Answer,ProposeAction",158,158,"
This is probably something the original authors should answer on.
However in my opinion the design is made to allow an middle box to
understand that the individual flows exist and which protocols they use.
It is not designed to allow for conveying QoS properties for the stream.
Anyway I don't think that b= is of much more use then to provide some
basic limits. A media stream today is not of fixed bit-rate, it may very
well be adapted to available resources for best effort traffic. For
streams with QoS agreements they will have there own policy on policing,
control and admission control that does not belong in RTSP.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2192,MMusic,110,601,"Question,InformationSeeking,InformationProviding,Answer,ContextSetting,ProposeAction",159,159,"
How do you interpret the second last paragraph and bullet list of
section 11.3? There are also a reference to section 13.37 that discuss
this further.

From the text of section 11.3:

""Signs of liveness for a RTSP session are:

+ Any RTSP request from a client which includes a Session header
with that session's ID.

+ If RTP is used as a transport for the underlying media streams,
an RTCP sender or receiver report from the client for any of the
media streams in that RTSP session.""
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2193,MMusic,110,603,"Answer,InformationSeeking,ClarificationElicitation,Answer,ProposeAction",160,160,"
Yes. Is it not understandable that this sentence is in relation to the
context of the previous sentence? Have you proposal for improvements of
the text?
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2194,MMusic,110,605,"Answer,InformationProviding,Answer,ContextSetting,ProposeAction",161,161,"
Yes, this is a bit unclear. I propose it to clarify it in the following way:

For a on-demand stream, the server {\MUST} reply with the actual
range that will be played back.  This may differ from the
requested range if alignment of the requested range to valid frame
boundaries is required for the media source.  If no range is
specified in the request, the start position {\SHALL} still be
returned in the reply.  The unit of the range in the reply
{\SHOULD} be the same as that in the request. If no range header
was present in the request the server {\MAY} use any of the
supported formats, however it is {\RECOMMENDED} that a format the
client has shown support for is used. If the media part of an
aggregate has different lengths the {\PLAY} request and any
\header{Range} {\SHALL} be performed as long it is valid for the
longest media. Media will be sent whenever it is available for the
given play-out point.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2195,MMusic,110,607,"Disagreement,InformationProviding,Disagreement,ProposeAction,Social",162,162,"
No, it is for the updated specification. There is no requirement that a
client includes a range header in a request. The range header MUST be
present in responses. Please quote the section you have interpreted as
requiring Range in PLAY requests.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2196,MMusic,110,609,"Answer,InformationProviding,Answer,ProposeAction",163,163,"
Yes, type except that I would like to keep ""request"" in the last
sentence after pause:

""A PAUSE request must be issued before another PLAY request can be issued.""
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2197,MMusic,110,611,"Answer,InformationProviding,Answer,ContextSetting,StateDecision",164,164,"
My intention with the two following paragraphs:

""The queued play functionality described in RFC 2326 [21] is removed
and multiple ranges can be used to achieve a similar performance. If
a server receives a PLAY request while in the PLAY state, the server
SHALL respond using the error code 455 (Method Not Valid In This
State). This will signal the client that queued play are not sup-
ported.

The use of PLAY for keep-alive signaling, i.e. PLAY request without a
range header, has also been depreciated.  Instead a client can use,
PING, SET_PARAMETER or OPTIONS for keep alive. A server receiving a
PLAY keep alive SHALL respond with the 455 error code.""

Is that it is informs that while in PLAY state, a PLAY request is not
allowed. This was in RFC 2326 used for two different purposes depending
on if range was present or not (queued play, and keep alive). These two
paragraphs try to explain what to do if one would receive a request that
tries to perform such an operation. I will add a ""in PLAY state"" to the
second paragraphs first sentence to be clearer.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2198,MMusic,110,613,"Answer,Answer",165,165,"
I guess it is not that confusing clearing out the previous confusion.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2199,MMusic,110,615,"Agreement,Disagreement,InformationProviding,Agreement,ContextSetting,ProposeAction,StateDecision",167,167,"Yes, you where correct that the sentences need to be reworded. However I
was not completely happy with your proposal either. So I propose the
following:

The {\TEARDOWN} request stops the stream delivery for the given
URI, freeing the resources associated with it. If the URI is the
aggregated control URI for this presentation, any RTSP session
identifier associated with the session is no longer valid. The use
of ""*"" as URI in {\TEARDOWN} will also result in that the session
is removed independent of the number of media that was part of
it. If the URI in the request was for a media within an aggregated
session that media is removed from the aggregate. However the
session and any other media not torn down yet, remains, and any
valid request, e.g. PLAY or SETUP, can be issued. The server
{\MAY} keep the session when the last media is torn down with a
{\TEARDOWN} request specifying the media URI. The server {\SHALL}
always include in a {\TEARDOWN} response the session header, if a
valid session state exist after the processing of the request.

However I have logged a bug suggesting that we remove the Ready-NM
state. That way we can get rid of the ""*"" teardowns that I feel will not
work satisfactory through proxies.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2200,MMusic,110,617,"NeutralResponse,InformationSeeking,NeutralResponse,ProposeAction,Social",168,168,"
I don't think this provides any motivation. However it might be
beneficial to change the the complete section into something that is
more readable and more clearly explains things. One can also discuss the
need for having TEARDOWN during PLAY state. Please provide input on this
topic.
",<3F4B54B7.2040707@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-08-26 14:38:15
2201,MMusic,111,140,"Question,InformationProviding,ContextSetting,InformationProviding",,-1,"Does the -05 version have a .pdf format?  This URL doesn't work:

<http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-05.pdf

I can only find the .txt file.
",<AFD33B1DBD906847B460CE449A9EC53B57EE8A@exchange.alb.on2.com>,mheaney@on2.com,0.0,0,42,2003-10-29 10:30:08
2202,MMusic,113,0,InformationProviding,,-1,#144: Does not allow RFC editor style guide order of sections for references,<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2203,MMusic,113,43,InformationProviding,,-1,"
The RFC-editor style guide:",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2204,MMusic,113,44,ExtensionOfPrevious,,-1,"
http://www.rfc-editor.org/rfc-style-guide/rfc-style",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2205,MMusic,113,45,ExtensionOfPrevious,,-1,"
States that the following section order within the body of the memo:
8.  Body of the Memo              [Required]
8a.  Introduction               [Required]
or equivalent
8b.  Requirement Words (RFC 2119)
8c.  ...
MAIN BODY OF THE TEXT
8t.  ...
8u.  Security Considerations   [Required]
8v.  IANA Considerations
8w.  Appendixes
8x.  References
8y.  Contributors
8z.  Acknowledgments
9. Author's Address             [Required]",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2206,MMusic,113,46,ExtensionOfPrevious,,-1,"
My issues is that the XML2RFC and likely the DTD does not allow me to
place the References list after the appendixes. This is problematic:",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2207,MMusic,113,47,ExtensionOfPrevious,,-1,"
First it is difficult to find references when having long documents. In
draft-ietf-mmusic-rfc2326bis, the references are on page 216 out of 284.",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2208,MMusic,113,48,ExtensionOfPrevious,,-1,"
I also wished I could use it as work around for ID-Nits which produces
Unused reference warnings for any references that are only used in
appendices.",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2209,MMusic,113,49,ExtensionOfPrevious,,-1,"
Reporter:  magnus.westerlund@ericsson.com  |      Owner:
Type:  defect                          |  henrik@levkowetz.com
Priority:  medium                          |     Status:  new
Component:  Version 2 cli                   |  Milestone:
Keywords:                                  |    Version:  2.3.10",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2210,MMusic,113,50,ExtensionOfPrevious,,-1,"
Ticket URL: <http://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/144>
xml2rfc <http://tools.ietf.org/tools/xml2rfc/>",<078.0b53f8fad62cd87610629440ac1a0ec8@tools.ietf.org>,trac@tools.ietf.org,0.0,,,2013-03-18 21:12:07
2211,MMusic,115,49,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2212,MMusic,115,50,ExtensionOfPrevious,,-1,"
Title		: Real Time Streaming Protocol (RTSP)
Author(s)	: H. Schulzrinne et al.
Filename	: draft-ietf-mmusic-rfc2326bis-00.txt
Pages		: 4
Date		: 27-Feb-02",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2213,MMusic,115,51,ExtensionOfPrevious,,-1,"
This memorandum is a revision of RFC 2326, which is currently a
Proposed Standard.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2214,MMusic,115,52,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-00.txt",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2215,MMusic,115,53,ExtensionOfPrevious,,-1,"
To remove yourself from the IETF Announcement list, send a message to
ietf-announce-request with the word unsubscribe in the body of the message.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2216,MMusic,115,54,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP. Login with the username
""anonymous"" and a password of your e-mail address. After logging in,
type ""cd internet-drafts"" and then
""get draft-ietf-mmusic-rfc2326bis-00.txt"".",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2217,MMusic,115,55,ExtensionOfPrevious,,-1,"
A list of Internet-Drafts directories can be found in
http://www.ietf.org/shadow.html
or ftp://ftp.ietf.org/ietf/1shadow-sites.txt",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2218,MMusic,115,56,ExtensionOfPrevious,,-1,"
Internet-Drafts can also be obtained by e-mail.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2219,MMusic,115,57,ExtensionOfPrevious,,-1,"
Send a message to:
mailserv@ietf.org.
In the body type:
""FILE /internet-drafts/draft-ietf-mmusic-rfc2326bis-00.txt"".",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2220,MMusic,115,58,ExtensionOfPrevious,,-1,"
NOTE:	The mail server at ietf.org can return the document in
MIME-encoded form by using the ""mpack"" utility.  To use this
feature, insert the command ""ENCODING mime"" before the ""FILE""
command.  To decode the response(s), you will need ""munpack"" or
a MIME-compliant mail reader.  Different MIME-compliant mail readers
exhibit different behavior, especially when dealing with
""multipart"" MIME messages (i.e. documents which have been split
up into multiple messages), so check your local documentation on
how to manipulate these messages.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2221,MMusic,115,59,ExtensionOfPrevious,,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<200202281208.HAA18282@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-02-28 07:08:04
2222,MMusic,116,0,Social,,-1,Hi all,<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2223,MMusic,116,35,"InformationProviding,InformationSeeking,ContextSetting,ProposeAction",,-1,"
As I am new to implementing RTSP/RTCP protocol, I thought I would seek help from this mailing list.",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2224,MMusic,116,36,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",35,-1,"
I would like to explain my understanding here with respect to audio video synchronization after PAUSE/RESUME and during seek.Request you to correct me if Iam wrong.There are ideally 2 ways the streaming server gives the client,synchronization information for audio and video.",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2225,MMusic,116,37,"Question,InformationProviding,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",36,-1,"
1. RTSP PLAY Response
If RTSP is used as the control channel, after an RTSP PAUSE and PLAY the server sends a play response before sending the first packet after resume in which it tells the RTP time stamp for both audio and video which would be in synch.
Ideally the implementation on the Client for the audio video synchronization would be , after getting the first packet after resume calculate the offset for the first packet's RTP timestamp from the reference RTPtimestamp  got from the PLay response in both the audio and video threads seperately and increment the presentation time by that offset(after dividing it by the RTp timestamp frequency say 44100 for audio) so that they would be in synch.
Am I right in this understanding?
Now given this understanding is right, we won't need the wallclock synchronization at all as the RTP timestamp is purely based on the number of samples sent in the packet in which case we won't need the RTCP implementation at all.
What am I missing here?",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2226,MMusic,116,38,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",36,-1,"
2.RTCP sender report
The RTP sender report sends the NTP timestamp which would be synchronized for both server and client and for both audio and video and an RTP timestamp associated with it.Ideally after pause and resume after we get the RTCP sender report, we take the RTP timesatamp sent in the RTCP sender report use that as a reference calculate the offset of the first audio and video packets after resume from the reference RTP timestamp and calculate the presentation time in the same way as explained above.",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2227,MMusic,116,39,"InformationProviding,ExtensionOfPrevious,ContextSetting,UnderstandingNegative",38,-1,"
If this is correct what I don't understand is",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2228,MMusic,116,40,"Question,ExtensionOfPrevious,Question,ExtensionOfPrevious",39,-1,"
1.How is the NTP time associated with the RTP timestamp if RTp timestamp is purely based on the sample count in the packet?",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2229,MMusic,116,41,"InformationProviding,ExtensionOfPrevious,ContextSetting",35,-1,"
In general I have the following queries regarding how the server sends the RTP time stamp in the play response as well as in the RTCP sender report.",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2230,MMusic,116,42,"Question,ExtensionOfPrevious,ContextSetting,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",,-1,"
1.Suppose the RTPtimestamp for audio=12345 and RTP Timestamp for Video=123456 at the point they were paused.
After Resume the first audio and video packet should have an RTP timestamp of say audio=12360 and video=123486 ideally if we assume that the packets sent has 15 audio samples and 30 video samples respectively.Is my understanding right or is the duration of PAUSE has to do anything with the RTPtimestamps(in the sense would the server calculate the RTPtimestamp of the first packet based on what it would have been if we did not pause at all based on the wall clocktime?)",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2231,MMusic,116,43,"ProposeAction,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction",42,-1,"
It would be really helpful if anyone could validate or clarify my understanding.Though this is slightly out of topic I think it would be really useful for those who are new to this.",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2232,MMusic,116,44,"Social,Thanking",,-1,"
Thanks and Regards
Shobana V",<20050901193454.16107.qmail@web30213.mail.mud.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-09-01 12:34:54
2233,MMusic,116,150,"ProposeAction,Social",,-1,"Hi Shobana,

See inline:
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2234,MMusic,116,152,"Answer,InformationProviding,Answer,UnderstandingNegative",37,37,"
I don't know, as can't clearly follow this. However RTSP does provide a
Normal Play Time (NPT) and the corresponding RTP Timestamps for that
point in time. Thus one can calculate a local wall clock time for
playout of the different packets based on these reference.
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2235,MMusic,116,154,"Answer,InformationProviding,Agreement",37,37,"
Correct, for synchronization of audio and video from the same source
there are no need for wall clock synchronization.
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2236,MMusic,116,156,"NeutralResponse,InformationProviding,NeutralResponse",38,38,"
The error you have made here is assuming that sender and receiver would
be time synchronized. This is not a requirement. RTCP synchronization
only relies on that the sender has been using the same clock for all
media it needs to send synchronized. The NTP formated clock has no
requirement on it being NTP derived and with any tolerance.
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2237,MMusic,116,158,"Answer,InformationProviding,Answer",40,40,"
If comparing with RTSP where the RTP timestamp for a fixed other clock
is provide, RTCP is synchronized based on a common time reference
expressed in NTP format. This can be converted into the corresponding
timestamps at a particular point in time.

RTSP:

Media A
------------TS_A----------

NPT
------------NPT-----------

Media B
------------TS_B----------

All clocks are provided for the same time.

RTCP

Media A

---TS_A------------------
V     NTP Format Clock
---NTP_A-----NTP_B-------
Media B      V
-------------TS_B--------

Here each media is provided independently a mapping between TS and NTP
formated reference clock allowing a receiver to calculate the sync.
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2238,MMusic,116,160,"Answer,InformationProviding,Answer,ProposeAction,Social",42,42,"
The duration in pause state do have impact on the TS advancement for the
first packet after a pause period. Please review Appendix B in
draft-ietf-mmusic-rfc2326bis-10.txt.
",<431FE706.4090103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-09-08 09:23:50
2239,MMusic,117,0,Social,,-1,"Folks,",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2240,MMusic,117,20,"InformationProviding,InformationSeeking,InformationProviding,ProposeAction",,-1,"
we should have one meeting slot for MMUSIC to meet in
Hiroshima.  We'd like to poll you for agenda items.",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2241,MMusic,117,21,"ProposeAction,InformationSeeking,ExtensionOfPrevious,ProposeAction",20,-1,"
Please indicate in your agenda item request",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2242,MMusic,117,22,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",21,-1,"
-- about which published Internet draft (and version)
it is
-- which specific issues you would like to talk about",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2243,MMusic,117,23,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",22,-1,"
(and, of course, please note the 'note well' statement
before sending in requests)",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2244,MMusic,117,24,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",22,-1,"
WG items will have priority over individual drafts.",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2245,MMusic,117,25,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ProposeAction,Social",21,-1,"
Please send requests just to Jean-François and myself.",<4AC0B88F.9000609@netlab.tkk.fi>,jo@netlab.tkk.fi,0.0,0,3,2009-09-28 16:22:23
2246,MMusic,117,28,"InformationProviding,InformationProviding,ContextSetting",20,-1,A draft agenda for the MMUSIC WG meeting at IETF 76 is posted at http://www.ietf.org/proceedings/09nov/agenda/mmusic.html,<9AAEDF491EF7CA48AB587781B8F5D7C6024FF443@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-10-29 09:36:18
2247,MMusic,117,70,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",28,-1,"
We only received 2 agenda items so far:",<9AAEDF491EF7CA48AB587781B8F5D7C6024FF443@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-10-29 09:36:18
2248,MMusic,117,71,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",71,-1,"
1) RTSP 2.0                             (Magnus Westerlund, 30)
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-22",<9AAEDF491EF7CA48AB587781B8F5D7C6024FF443@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-10-29 09:36:18
2249,MMusic,117,72,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",70,-1,"
2) FEC Grouping Semantics in SDP        (Ali Begen, 10)
http://tools.ietf.org/html/draft-ietf-mmusic-rfc4756bis-05",<9AAEDF491EF7CA48AB587781B8F5D7C6024FF443@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-10-29 09:36:18
2250,MMusic,117,73,"ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction",28,-1,"
We know some of you won't be in Hiroshima but let us know if you have additional agenda items or if we missed any requests.",<9AAEDF491EF7CA48AB587781B8F5D7C6024FF443@srvxchg3.cablelabs.com>,jf.mule@cablelabs.com,0.0,0,3,2009-10-29 09:36:18
2251,MMusic,118,43,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2252,MMusic,118,44,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",43,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-38.txt
Pages           : 322
Date            : 2013-10-10",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2253,MMusic,118,45,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",44,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2254,MMusic,118,46,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2255,MMusic,118,47,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",46,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2256,MMusic,118,48,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",47,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-38",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2257,MMusic,118,49,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",48,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-38",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2258,MMusic,118,50,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",49,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2259,MMusic,118,51,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",50,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20131010142622.30339.52922.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-10 07:26:22
2260,MMusic,118,141,"InformationProviding,InformationProviding,ContextSetting",47,-1,"
I have submitted this version of the draft as it contains the following
changes:",<5256BD15.9010905@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-10-10 16:43:33
2261,MMusic,118,142,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",141,-1,"
1. The CSeq text currently being discussed based on Elwyn Davies comment.
2. The proposal for Time format definitions from Peter St Andre and
Claudio.
3. Elwyn Davies sent private editorials that has been incorporated.",<5256BD15.9010905@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-10-10 16:43:33
2262,MMusic,118,143,"ExtensionOfPrevious,ProposeAction,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social",142,-1,"
So please provide feedback on these changes.",<5256BD15.9010905@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-10-10 16:43:33
2263,MMusic,118,144,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",143,-1,"
I intended to ask the AD to do an IETF last call on the changes now.
During that time the WG can also provide any additional feedback on the
changes.",<5256BD15.9010905@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-10-10 16:43:33
2264,MMusic,119,0,Social,,-1,"Hi all,",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2265,MMusic,119,31,"InformationProviding,ContextSetting,InformationProviding",,-1,"
This is a reminder that another RTSP telecon is coming up on
Wednesday, June 12, at 9:00am PDT.  There's not an agenda yet, but it's
basically going to cover things that have been discussed in email on this
list, plus the action items from the last telecon.",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2266,MMusic,119,32,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",31,-1,"
Details on the telecon can be found here:
http://rtsp.org/telecon/",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2267,MMusic,119,33,"InformationSeeking,ExtensionOfPrevious,ProposeAction,Social,ExtensionOfPrevious",32,-1,"
Please send mail to me if you plan on attending.",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2268,MMusic,119,34,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",33,-1,"
Additionally, we've just submitted a new draft revision of RTSP, which is
available here:",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2269,MMusic,119,35,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",34,-1,"
http://rtsp.org/2002/drafts/draft-ietf-mmusic-rfc2326bis-01.txt
http://rtsp.org/2002/drafts/draft-ietf-mmusic-rfc2326bis-01.ps",<Pine.WNT.4.43.0206071844300.174-100000@robla350.dev.prognet.com>,robla@real.com,1.0,0,24,2002-06-07 18:52:22
2270,MMusic,122,43,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2271,MMusic,122,44,ExtensionOfPrevious,,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Authors         : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-40.txt
Pages           : 309
Date            : 2014-02-10",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2272,MMusic,122,45,ExtensionOfPrevious,,-1,"
Abstract:
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2273,MMusic,122,46,ExtensionOfPrevious,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-layer
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2274,MMusic,122,47,ExtensionOfPrevious,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2275,MMusic,122,48,ExtensionOfPrevious,,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-40",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2276,MMusic,122,49,ExtensionOfPrevious,,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-40",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2277,MMusic,122,50,ExtensionOfPrevious,,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2278,MMusic,122,51,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20140210152506.17258.70147.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-10 07:25:06
2279,MMusic,124,4,ExtensionOfPrevious,,-1,On page 216 you wrote:,<op.ulbzzvnnkq3lxg@hal9000>,p.hoffmann@berlin.de,0.0,0,43,2008-11-28 14:34:33
2280,MMusic,124,29,"InformationProviding,InformationProviding,ContextSetting,Social",,-1,"Hello everybody,

I'm currently working on a boost::spirit based implementation that parses RTSP and SDP. I'm orienting myself to your ""draft-ietf-mmusic-rfc2326bis-19"" and I have found this issue:
",<op.ulbzzvnnkq3lxg@hal9000>,p.hoffmann@berlin.de,0.0,0,43,2008-11-28 14:34:33
2281,MMusic,124,30,"Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",29,-1,"
1: C->M: SETUP rtsp://example.com/twister.3gp/trackID=1 RTSP/2.0
2:       CSeq: 2
3:       User-Agent: PhonyClient/1.2
4:       Require: play.basic
5:       Transport: RTP/AVP/TCP;unicast;dest_addr="":9""/"":9""
6:                  setup=active;connection=new

I couldn't parse this because there is a "";"" missing at the end of line 5. Or am I wrong?

Mit freundlichen Grüßen (best regards),
",<op.ulbzzvnnkq3lxg@hal9000>,p.hoffmann@berlin.de,0.0,0,43,2008-11-28 14:34:33
2282,MMusic,124,85,"Question,InformationProviding,InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Social",30,-1,"Hi again.

Same problem in the following example.

And more, at page 220:

C->S: PLAY rtsp://example.com/fizzle RTSP/2.0
CSeq: 4
Session: abcdefg
Range: npt=10-15;npt=18-20
User-Agent: PhonyClient/1.2

Should'nt this be a comma between the ranges in ""npt=10-15;npt=18-20""?

All other examples in your document seem to be right - my parser says

Am 28.11.2008, 14:34 Uhr, schrieb Patrick Hoffmann <p.hoffmann@berlin.de>:
",<op.ulb1h9qbkq3lxg@hal9000>,p.hoffmann@berlin.de,0.0,0,43,2008-11-28 15:07:11
2283,MMusic,124,87,Social,30,30,"
Mit freundlichen Grüßen (best regards),
",<op.ulb1h9qbkq3lxg@hal9000>,p.hoffmann@berlin.de,0.0,0,43,2008-11-28 15:07:11
2284,MMusic,124,154,"InformationProviding,Thanking,StateDecision,Social,Thanking",85,-1,"Hi Patrick,

Thanks for the report. This have now been fixed in the source.
",<49300552.4020206@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-28 15:50:58
2285,MMusic,124,156,"Answer,Answer,Agreement",85,85,"
Yes.
",<49300552.4020206@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-28 15:50:58
2286,MMusic,124,158,"Agreement,Answer,Agreement,Thanking",30,30,"
Correct, missing "";"".

Thanks
",<49300552.4020206@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-28 15:50:58
2287,MMusic,125,119,"NeutralResponse,NeutralResponse",168,-1,[Thomas Zeng]  Here the concern is on RTSP state machine.,<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2288,MMusic,125,157,"ContextSetting,ProposeAction,InformationProviding",,-1,"Bill:

Based on my understanding of the discussions during the past RTSP tele
conferences, I'd like to make a couple of  comments.

See below.

- thomas
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2289,MMusic,125,158,"InformationProviding,Agreement",,-1,">  -----Original Message-----
> From: 	Bill May [mailto:wmay@cisco.com]
> Sent:	Friday, July 11, 2003 10:17 AM
> To:	Aravind Narasimhan
> Cc:	Magnus Westerlund; mmusic@ietf.org
> Subject:	Re: [MMUSIC] Aggregate Control URI
> Aravind Narasimhan wrote:
> >  Secondly, as Tom and Magnus have mentioned, a
> > user may try to aggregate multiple streams in one RTSP session, where
> > there isnt a unified presentaiton description, or where someone has
> > ignored to put a session level aggregate control URL in the SDP.  Now
> > the server has the right to say that it cannot aggregate the given media
> > URLs in a session,
> I will agree with this; however, it does not make sense for the client
> to create it's own aggregate URLS where the server does not specify one
> (given the SDP case).",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2290,MMusic,125,159,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",158,-1,"[Thomas Zeng]  The bottom line is that PLAY is always an ""aggregate""
operation. Regardless of the control URI in the PLAY request, the sessionID
will uniquely identify the media streams affected by the PLAY request.  That
is the spirit of draft-ietf-mmusic-rfc2326bis-04 (see section 11.4).  In
your case, if the SDP does not intend to support aggregate control (assume
that the SDP does have more than one media tracks), it should NOT have used
RTSP in the media level control URL.
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2291,MMusic,125,160,"InformationProviding,ProposeAction,UnderstandingNegative,Apologising",,-1,">  > but it does not make sense for the server to allow
> > two or more streams to be part of a session where each stream within the
> > session is going ot be controlled separately in a non-aggregate fashion.
> I'm sorry, but I do not understand.
> I can see a scenario where you might want to stop the video, but still
> maintain
> the audio.  In this case, you have 2 or more streams running, and the
> client
> wishes to stop 1 of them.  This is a perfectly legal scenario.",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2292,MMusic,125,161,"NeutralResponse,ContextSetting,NeutralResponse",160,-1,"[Thomas Zeng]  There are two ways to do what you want here: 1) issue
teardown on the audio track. 2) perform a MUTE on the audio track.
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2293,MMusic,125,162,ProposeAction,,-1,"> Another would be a fast forward application, where you pause 1 or more
> streams
> while changing speeds on another.",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2294,MMusic,125,163,"InformationProviding,ProposeAction,NeutralResponse",162,-1,"[Thomas Zeng]  Again, you would use MUTE to pause 1 or more streams,
then use PLAY with range to seek.
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2295,MMusic,125,164,"InformationSeeking,Question,ContextSetting,ProposeAction",,-1,"> Can you please expand on why it doesn't make sense to allow streams to
> be controlled seperately ?  I've done most of my work on the player side
> with
> the idea that the streams could be seperate, so most likely I'm missing
> something.",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2296,MMusic,125,165,"Question,InformationProviding,NeutralResponse",164,-1,"[Thomas Zeng]  If two streams belong to same RTSP session, and you
issue PLAY on one stream, what would be the state of the overall session ?
what would be the NPT  (Normal Play Time) of the session? If I recall
correctly, if PLAY/PAUSE were allowed on each track in a mutli-tracked RTSP
session, the RTSP state machine would break.
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2297,MMusic,125,166,"Question,ProposeAction",,-1,"> > In the RTSP concalls of late, there was a general trend towards a
> > consensus that within a RTSP session, all streams should be ""aggregately
> > controlled.""  In other words, once part of a session, an individual
> > media stream will be tied to the timeline of the session and will be
> > controlled in conjunction with the rest of the streams in the session.
> > So control methods such as PAUSE, PLAY would apply collectively to all
> > streams within the session.  The upshot of this is that you cannot just
> > PLAY or PAUSE a single media stream within a session.
> Why ?  To me, aggregate (or control of the entire session) control and
> non-aggregate control (or control based on each stream) can be used
> at the same time, and should be allowed.",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2298,MMusic,125,167,"InformationProviding,Agreement,Agreement",166,-1,"[Thomas Zeng]  Yes, you are right here. The decision by the RTSP
task force was to let PLAY/PAUSE be aggregate, while SETUP/TEARDOWN and
MUTE/UNMUTE be non-aggregate (note MUTE/UNMUTE is defined as an extension to
RTSP core spec).
",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2299,MMusic,125,168,"InformationProviding,UnderstandingNegative",,-1,"> Perhaps I do not understand the argument why control over streams
> in a session is so difficult.  Can you point me to some information about
> this ?
> The only thing I could see is that you might want to discourage changes
> to the overall timeline, ie:one stream going back 10 seconds from the
> rest of the presentation.
> But it would seem to me that would be an easy thing to prevent.
> > To achieve the notion of ""non-aggregate control"", or may be the more
> > appropriate term is ""independent control"" the consensus was that the
> > onus should be on the client to set up multiple RTSP sessions, each with
> > one or more media streams and manage them in a non-aggregate fashion.
> That seems non-intuitive to me -keeping twice as much information as
> needed.
> > To try to clearly specify the mechanisms of ""non-aggregate"" control of
> > individual media streams within a single session would probably cloud
> > and confuse the spec unnecessarily, since the functionality is easily
> > achievable by having multiple RTSP sessions that are controlled
> > independently.  If this becomes a very serious requirement, someone can
> > write an extension to RTSP that describes how two independent RTSP
> > sessions can be controlled in a coordinated, yet non-aggregate fashion.
> I guess I'm not understanding why this would be difficult.  The only
> limitation would be that the timeline must be consistent across all
> streams.  Otherwise, control the streams to your heart's content.",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2300,MMusic,125,169,UnderstandingNegative,,-1,"> I apologize for being so dense.
> > Now there is an effort underway to establish the MUTE/UNMUTE methods to
> > temporarily ""silence/unsilence"" individual streams within a RTSP session
> > as a extension to RTSP.  In this case, however, the streams would still
> > be tied to the timeline of the RTSP Session, where PLAY and PAUSE on the
> > session would supercede the MUTE/UNMUTE methods.
> I'm not sure that this buys you anything, if all a MUTE is is a PAUSE to
> an individual streams.  It does sound like over-complicating (adding more
> states and breaking backward compatibility) to avoid a couple of
> sentences.
> > But I can see where my definitions for aggregate control and
> > non-aggregate control could be a bit ambiguous, since obviously, there
> > are methods such as SETUP and TEARDOWN, and even MUTE and UNMUTE that
> > can work on individual media streams within a session.  I'll see if I
> > can clean it up to take these methods into account.  We may just have to
> > come up with more appropriate terminology.
> Most likely that is why I do not understand.
> Bill
> mmusic mailing list
> mmusic@ietf.org
> https://www1.ietf.org/mailman/listinfo/mmusic",<72263E8E8622D611975C0002B32C19D84A7C57@misty.packetvideo.com>,zeng@PacketVideo.COM,0.0,0,22,2003-07-11 13:27:46
2301,MMusic,125,256,"InformationProviding,Agreement,Disagreement,ContextSetting,StateDecision,Social,InformationProviding,NeutralResponse",157,-1,"Thomas,

I think that we can agree that this new specification would not be
backward compatible with existing RTSP session.

To me, it does not seem like for good reason.  Not enough bang for the
buck, but perhaps I am still missing something.

As long as you are aware of this and have done so intentionally, that's
cool.  But IMO, I would not not be making these changes (adding MUTE,
requiring PLAY/PAUSE to be aggregate as opposed to stream based) in
order to make wording or a state machine clearer.

In fact, the MUTE complicates the state machine in the exact same way
that a non-aggregate PAUSE does.

More below:
",<3F12EB45.7080003@cisco.com>,wmay@cisco.com,0.0,0,59,2003-07-14 10:41:25
2302,MMusic,125,258,"Question,InformationProviding,Question,Disagreement",161,161,"
Doesn't teardown now need to be aggregate ?  So that wouldn't work.
",<3F12EB45.7080003@cisco.com>,wmay@cisco.com,0.0,0,59,2003-07-14 10:41:25
2303,MMusic,125,260,"Question,ClarificationElicitation,InformationProviding,UnderstandingNegative,Question,NeutralResponse",165,165,"
I'm not sure that I understand why the state of the session is important.
The server would be issueing the required streams.

The NPT of the session would be whatever the player decided it would be -
it can derive this from the RTPInfo, and decide how it wants to deal with it.

Are you defining a specification on how to develop a server (which is what
a state machine would imply) ?  Or a method of interoperability ?
",<3F12EB45.7080003@cisco.com>,wmay@cisco.com,0.0,0,59,2003-07-14 10:41:25
2304,MMusic,125,262,"InformationProviding,UnderstandingNegative,NeutralResponse",167,167,"
I'm not sure I understand still why MUTE is needed.  All it does is PAUSE
a single stream.  The MUTE complicates the RTSP server state machine in exactly
the same way that a non-aggregate PAUSE down.

It's the same thing called something different.
",<3F12EB45.7080003@cisco.com>,wmay@cisco.com,0.0,0,59,2003-07-14 10:41:25
2305,MMusic,125,264,"InformationProviding,NeutralResponse,NeutralResponse",119,119,"
Which still has the same complications with the MUTE.
",<3F12EB45.7080003@cisco.com>,wmay@cisco.com,0.0,0,59,2003-07-14 10:41:25
2306,MMusic,125,429,Social,,-1,"Hi Bill,
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2307,MMusic,125,431,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",256,256,"
To my knowledge the changes result in a subset of the functionality that
RFC 2326 specifies. This subset is working in this regard the same way
the original specification. In our discussion there where no
implementations that actually use the functionality of having individual
PLAY/PAUSE in a aggregated session. The reason of the change was
basically get the protocol to be interoperable. There where so many
strange things when you allow individual media control within an
aggregated session. By requiring all media control methods (PLAY and
PAUSE) to work on the aggregated the whole issue was resolved and
everything becomes consistent. So the interoperability issues of this
change seem minor and the client will get clear indications through
error codes that it attempts something not allowed by the server.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2308,MMusic,125,433,"InformationProviding,Disagreement,Disagreement",256,256,"
No it doesn't. As MUTE/UNMUTE only switch on and off the media delivery
and do not effect the timing of the state and in what state machine
state it is, it does not complicate things.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2309,MMusic,125,435,"Answer,Disagreement,NeutralResponse",258,258,"
Teardown can be used both aggregated and non aggregated.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2310,MMusic,125,437,"InformationSeeking,Question,InformationProviding,Answer,ProposeAction,Question,NeutralResponse",260,260,"
Have you tried to implement a correct minimal implementation of the RFC
2326 defined RTSP server? If you had I don't think you would ask this
question. When I performed the implementation this resulted in a 50+
questions regarding how things should work that directly related to
expected behaviour and interoperability.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2311,MMusic,125,439,"Question,InformationProviding,NeutralResponse,ContextSetting,Disagreement",260,260,"
I don't think it is this simple. In a session with two aggregated
session you will have actually three different playout clocks if you
allow individual PLAY/PAUSE.
- The aggregated session playout time
- Media 1 playout time
- media 2 playout time.

When you perform an individual PLAY on a pause media using the media URL
what should happened, what timers should be started? If you after that
performs an aggregated PLAY, does that replace the previous media
playout, or does it only start all not already running media? This is a
rat hole.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2312,MMusic,125,441,"InformationProviding,NeutralResponse,NeutralResponse",260,260,"
This is a interoperability problem and a fix to a under specified part
of RTSP.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2313,MMusic,125,443,"InformationProviding,Agreement,Disagreement,ProposeAction,StateDecision,NeutralResponse",262,262,"
Not exactly the same thing. You are correct that MUTE can be realized
using one RTSP session per media and do all media synchronization at the
client side. The MUTE/UNMUTE proposal is a separate extension draft and
will  need further review. You might be correct that MUTE/UNMUTE are not
in fact needed.
",<3F13B2A1.7000000@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 09:52:01
2314,MMusic,125,480,"NeutralResponse,NeutralResponse",435,435,"
I was under the impression that RTSP/1.0 only allowed aggregate TEARDOWN,
while RTSP/1.1 will allow both aggregate and non-aggregate TEARDOWN.
",<20030715080822.GB25484@real.com>,tmarshall@real.com,0.0,0,13,2003-07-15 01:08:22
2315,MMusic,125,482,"Question,InformationProviding,ContextSetting,Question,NeutralResponse",443,443,"
I believe we have recently agreed that the RTP time continues while in the
PAUSE state.  Wouldn't this make MUTE and PAUSE pretty much identical?  What
would be the remaining difference(s)?

One good reason why computers can do more work than people is that they
never have to stop and answer the phone.",<20030715080822.GB25484@real.com>,tmarshall@real.com,0.0,0,13,2003-07-15 01:08:22
2316,MMusic,125,507,"Question,InformationProviding,Answer,Question,Answer",482,482,"
RTP time continues indeed, but not NPT, whereas I understand MUTE to
say that NPT is advancing, whereas when paused it is not.  So, after
play/pause a subsequent play will start where you paused (with RTP
timestamps advanced by the duration of the pause, but the media
continuous);  play/mute and then subsequent unmute would unmute
material that is later in the source content by the the muted
duration.

right?
David Singer
Apple Computer/QuickTime

mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<p05210645bb396c77c1b2@[81.160.227.51]>,singer@apple.com,0.0,0,18,2003-07-15 10:34:18
2317,MMusic,125,540,"InformationProviding,Answer,Agreement,Answer",507,507,"
Yes, MUTE only specifies that delivery is not performed. If you are in
PLAY state the NPT time continues to run.
",<3F13BCD7.9000909@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-07-15 10:35:35
2318,MMusic,126,0,Social,,-1,"Hi,",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2319,MMusic,126,56,"InformationProviding,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"
It is time to resume the RTSP teleconferences. We have not had one since
12th of June. But now a significantly updated version of draft exist we
can continue to make progress. All RTSP interested are welcome to
participate. If you want to participate please send me a mail and I will
send you the contact information.",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2320,MMusic,126,57,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",56,-1,"
The teleconference will be the December 11, 2002 at 18.00 CET, equal to
9.00 AM PST. It will last 90 minutes.",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2321,MMusic,126,58,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",57,-1,"
Participants are assumed to be knowledgeable about the the latest draft
version:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-02.txt",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2322,MMusic,126,59,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",58,-1,"
Also the currently reported bugs are available at:
http://rtspspec.sourceforge.net",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2323,MMusic,126,60,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",59,-1,"
Proposed Meeting Agenda
1. Opening of meeting
2. Way forward
2.1 Intention of work: Get RTSP to draft standard
2.2 Method: Divide and conquer. Write a base spec for basic playback
and anything not basic shall be written as extensions.
2.3 Extensions?
2.4 Review of the draft
2.5 Interoperability tests
3. Issues (As many as we have time for):
3.1 - RTSP URL is case sensitive: http://rtsp.org/bug644626
3.2 - Transport model: See discussion outcome:",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2324,MMusic,126,61,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",60,-1,"
http://www.ietf.org/mail-archive/working-groups/mmusic/current/msg01056.html
3.3 - IPv6 , see http://rtsp.org/bug493054
3.4 - Accept-Ranges, see RTSP draft
3.5 - Via header,
3.6 - Redirect resolution, see discussion outcome.
4. Next meeting",<3DECC3C9.8060102@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-03 15:46:33
2325,MMusic,129,14,"ClarificationElicitation,InformationProviding,ContextSetting,Apologising,Question",,-1,"Sorry if this is the wrong mailing list to discuss this, but I noticed
in draft-ietf-mmusic-rfc2326bis-26 that the RECORD method has been
removed from RTSP. Is this because the recording-like functionality
has been removed from RTSP or is there another recommended mechanism
in RTSP 2.0?",<AANLkTineY8nR6pAZwXr5hCO+b+z0ovQwRiNEwnJmYq1n@mail.gmail.com>,skillzero@gmail.com,0.0,0,47,2011-02-21 08:21:45
2326,MMusic,129,15,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",14,-1,"
I'm using RTSP to control pushing of audio and video content for live
playback on an RTSP server device. So a client connects to the RTSP
server, sets up a session, and then sends a RECORD to the server to
prepare it to receive audio and video RTP streams. The server then
plays those streams via its audio/video hardware (e.g. a TV is the
RTSP server and plays the content on its screen and speakers).",<AANLkTineY8nR6pAZwXr5hCO+b+z0ovQwRiNEwnJmYq1n@mail.gmail.com>,skillzero@gmail.com,0.0,0,47,2011-02-21 08:21:45
2327,MMusic,129,16,"Question,ExtensionOfPrevious,Question,ExtensionOfPrevious",15,-1,"
Is this a valid use of RTSP 2.0?",<AANLkTineY8nR6pAZwXr5hCO+b+z0ovQwRiNEwnJmYq1n@mail.gmail.com>,skillzero@gmail.com,0.0,0,47,2011-02-21 08:21:45
2328,MMusic,129,67,"InformationProviding,Answer,NeutralResponse,ContextSetting,ProposeAction,Social,Answer","14,16",16,"
Hi,

You are certainly on the right list.

We excluded RECORD from RTSP 2.0 because it underspecified nature, and
the lack of interest from anyone in performing the specification work
needed.

As your use case appears to be primarily a case of configuring a media
stream sink. There is no action for the server to do other than to
render what ever media it receives. Thus I would think that this can be
easily accomplished using an auto-answering SIP client in what you call
the server.

I think if one was interested in defining RECORD for RTSP 2.0 one should
start at considering what functionality are one really needing, and what
is the semantics of RECORD. This as I think your use case could be
viewed in several ways from an semantics point of view. One is to view
it as playback scenario where the server controls the client, rather
than having the client request from the server what to play.
",<4D629962.6010909@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-02-21 17:57:06
2329,MMusic,129,120,"Question,InformationProviding,ContextSetting,Thanking,Question,NeutralResponse,Thanking",67,67,"Thanks, I'll check out SIP.

My reason for starting with RTSP is that it also has several other
features I need:

- SETUP/TEARDOWN for session management. I use this for correlating
audio and video streams as well as controlling access (e.g. a device
might only support playing one audio stream at a time and I use RTSP
sessions to manage this).

- ANNOUNCE/DESCRIBE for communicating stream details (e.g. encoding
formats, RTP payload type mappings, etc.).

- GET_PARAMETER/SET_PARAMETER for things like controlling audio
volume, setting meta data, etc.

Does this seem like an appropriate use of RTSP?",<AANLkTinpRXEYftVGhPcKWOfPWEER9iD9gtXTPcQMkKQs@mail.gmail.com>,skillzero@gmail.com,0.0,0,47,2011-02-21 12:16:24
2330,MMusic,129,201,"Question,InformationProviding,Answer,ContextSetting,ProposeAction,Question,Answer",120,120,"
Well, your semantics is using the reverse direction for what RTSP PLAY
functionality was designed for. And the RECORD semantics has some
additional things actually doing with recording, rather than controlling
far end playback.

I would say that RTSP 2.0 would need a serious consideration of the
semantics and likely some extensions to cleanly support your use case.
At the same time, I don't know what amount of extensions would be needed
in SIP case for handling the Meta data and other settings.

The question is what your goals are. Do you want a standardized solution
for performing your use case, or simply trying to capitalize on existing
implementations? IF the later than it might be possible to take parts of
a client implementation and drop it into the server side to reverse the
direction of messages. IF you want standardization I that is also
possible, but will need quite a lot of work.
",<4D64C01C.8050309@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2011-02-23 09:06:52
2331,MMusic,132,0,InformationProviding,,-1,"Folks,",<528DDF12.6030701@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-21 12:23:14
2332,MMusic,132,16,"InformationProviding,InformationProviding",,-1,"
the IESG is reviewing the RTSP 2.0 spec below:",<528DDF12.6030701@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-21 12:23:14
2333,MMusic,132,17,"ExtensionOfPrevious,InformationProviding",,-1,"
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<528DDF12.6030701@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-21 12:23:14
2334,MMusic,132,18,"ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,"
Before progressing the draft, I have been asked by the IESG to check
with the MMUSIC WG whether or not people still think it is worthwhile
publishing this spec. In particular, they would like to know what level
of deployment we can expect once the spec is published.",<528DDF12.6030701@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-21 12:23:14
2335,MMusic,132,19,"ExtensionOfPrevious,InformationProviding,Thanking",,-1,"
Your input is appreciated.",<528DDF12.6030701@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-21 12:23:14
2336,MMusic,132,56,"NeutralResponse,InformationProviding,Disagreement,Apologising",19,-1,"I am feeling terrible to say this as obviously much effort has gone into this document.

But to me, this spec is simply too late to have any chance to get deployed. Today there are lots of massive RTSP based streaming systems, yet they are obsolete and present lots of scalability and management issues. They also have lots of interop issues as not every vendor actually implemented RTSP in the same way.

Providers are not very eager to ditch these systems right a way. The ones that pull the trigger are mostly ditching RTSP altogether and moving towards http/cdn based streaming. Chances are quite slim for them to switch from RTSP 1.0 to RTSP 2.0. Needless to say, RTSP is a difficult protocol to both implement and deploy/manage.

Whether this should this draft from moving forward, that is a separate discussion, I think.
",<0C52DDFC-9792-48BB-89AF-09FB022F5159@cisco.com>,abegen@cisco.com,0.0,0,8,2013-11-21 10:38:21
2337,MMusic,132,142,"NeutralResponse,InformationProviding,ProposeAction",18,18,"
Hi,

I know that 3GPP in TS 26.234 (12.1.0) do reference a feature in RTSP 2.0:

Section N.2
“RTP over TCP” (RFC4571):  The RTP packets are tunnelled over separate
TCP connections. A major difference compared to the “RTSP/RTP
Interleaving” mode (RFC 2326) is, that the client opens one or more
separate TCP connections to the server for the RTP transport. This
mechanism is described in the RTSP 2.0 draft
(draft-ietf-mmusic-rfc2326bis-18.txt).

Thus, I expect this reference to be updated when RTSP 2.0 gets implemented.

I would also note that PSS (in section 5.5.2 of 26.234) have back fitted
several of RTSP 2.0 specification features into their RTSP 1.0 usage.
These include:

- Supported header
- Pipelining

They also have their own versions of time-shift handling and
asynchronous notifications.
",<528DE688.6010402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 11:55:04
2338,MMusic,132,143,"ExtensionOfPrevious,InformationProviding",18,18,"
I have also received this email from Scott Taylor
(scott.taylor@immersaview.com)
",<528DE688.6010402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 11:55:04
2339,MMusic,132,144,InformationProviding,18,18,"> Thank you for your work putting together the RTSP 2.0 spec. It's
> exactly what I needed to address the shortcomings of RTSP 1.0 in my
> current project. I'm the lead developer on a software product that
> performs live streaming, synchronized recording and playback of
> simulation environments.",<528DE688.6010402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 11:55:04
2340,MMusic,132,145,"ExtensionOfPrevious,InformationProviding",18,18,"
I think this points to that RTSP has other uses than just normal
audio/video and that there exist other cases where one needs control of
playout and transmission of inter time related information or streams.
",<528DE688.6010402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 11:55:04
2341,MMusic,132,146,"ExtensionOfPrevious,InformationProviding,NeutralResponse",18,18,"
I think there are several arguments why RTSP 2.0 should be published
even if there is no response to question for implementing RTSP 2.0.

1. That the future consumers of RTSP 2.0 specification may not even know
they needed it at this point

2. That leaving in place without warning a broken specification like
RTSP 1.0 is bad considering that we have a specification that has less
issues. So why not publish it? If IESG are worried about the effect of
obsoleting RTSP 1.0, then lets discuss that issue. Not stopping
publication of RTSP 2.0.

3. There are features in use out on the network in RTSP 1.0 that are
primarily specified in RTSP 2.0. The fact that we in IETF couldn't keep
the version number hasn't stopped industry forums to use the specified
extensions and deploy them within RTSP 1.0.
",<528DE688.6010402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-21 11:55:04
2342,MMusic,132,149,Social,,-1,Hello,<528E8FFF.3030405@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2013-11-22 09:58:07
2343,MMusic,132,182,"NeutralResponse,InformationProviding,ProposeAction",,-1,"
I would support publishing this spec. Draft ITU-T H.248.66 makes
reference to the RTSP2.0 work. It has been held up for a couple of years
waiting for the RTSP2.0 draft to be published. It would be good to put
this to bed.",<528E8FFF.3030405@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2013-11-22 09:58:07
2344,MMusic,132,195,"NeutralResponse,InformationProviding,NeutralResponse",18,18,In short: Yes.,<5293D9B9.4000502@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-11-25 18:14:01
2345,MMusic,132,255,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",18,18,"
RTSP 2.0 provides a number of clarificiations, error fixes and updates
to RTSP 1.0, which at this point is over 15 years old (see Appendix I
for a list of those changes), and while RTSP 2.0 is not backwards
compatible with RTSP 1.0 (in some cases due to underspecification of
RTSP 1.0), many of the clarifications may prove helpful to implementers
of RTSP 1.0, even if they don't migrate.

RTSP 2.0 also includes new functionality such as IPv6 and a companion
document to assist with NAT traversal, which are just 2 examples of
features needed in today's environment.

On a non-technical note, the WG agreed to do this work and the work has
essentially completed at this point, with a significant amount of effort
by the authors, incl. updates to address several in-depth reviews more
recently. We usually do not apply a subjective value-judgement to
whether a document should be published this late in the game (unless
it's potentially harmful), and again, in lieu of the maturity level and
effort that has been put into this document, it would not be reasonable
to start doing that here.
",<5293D9B9.4000502@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-11-25 18:14:01
2346,MMusic,132,257,"NeutralResponse,InformationProviding,ProposeAction",18,18,"Clearly RTSP does not have the traction it used to have with HTTP
adaptive bit-rate seemingly being all the rage these days. However, a
couple of points to consider here:
1) If it doesn't get published, it won't get deployed.
2) Some of the clarifications/updates provided by the RTSP 2.0 spec are
of use to RTSP 1.0 implementations as well and hence may prove helpful
with resolving existing bugs (I've personally experienced this with
other protocols)
3) While the people on this list may or may not indicate their plans
around deployment, RTSP is a fairly well-known protocol with a large
body of potential implementers beyond those subscribed to this mailing
list. My personal experience with other protocols shows that more people
look at these things than you may think (outside the WG).
",<5293D9B9.4000502@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-11-25 18:14:01
2347,MMusic,132,258,"ExtensionOfPrevious,InformationProviding,Thanking",18,18,"
I don't see any downside to publishing the spec, but based on the above,
there are several good reasons to publishing it and hence I'm in favor
of doing so.

Thanks

-- Flemming
",<5293D9B9.4000502@cisco.com>,fandreas@cisco.com,0.0,1,4,2013-11-25 18:14:01
2348,MMusic,133,0,Social,,-1,"Hi all,",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2349,MMusic,133,41,"InformationProviding,InformationProviding",,-1,"
draft-ietf-mmusic-rfc2326bis has currently an overall page count of
214 pages
(http://www.ietf.org/internet-drafts/draft-ietf-mmusic-
rfc2326bis-15.txt)
and I doubt that many people have read the draft in the past as a
whole... ;-)",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2350,MMusic,133,42,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
After considering which part of the draft could shorten or moved to a
different draft, I have have ended up with this as my personal
conclusion:",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2351,MMusic,133,43,"InformationProviding,ExtensionOfPrevious,ProposeAction",,-1,"
Appendix B ""Media Transport Alternatives"" and Appendix C ""Use of SDP
for RTSP..."" could be moved in separate drafts, as both are not
necessarily part of RTSP itself, even though there somewhat required
for operating RTSP.  However, this ""required for operating RTSP""
holds true in some environments, but not in all. For instance, in DVB
network RTP is probably not used, but MPEG-2 TS. Same for SDP, as
some might use it, some might not.",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2352,MMusic,133,44,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",,-1,"
Appendix B could be moved to a draft ""Using RTSP with RTP as media
transport"" and Appendix C ""SDP usage in RTSP"" (titles are just
suggestions!)",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2353,MMusic,133,45,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
This would reduce the size of the draft, but, even more important,
would clearly separate between the RTSP protocol and further
protocols required by some architecture to build media delivery
platforms.",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2354,MMusic,133,46,"Question,Question",,-1,"
Any thoughts, suggestions, objections?",<E15B37C1-0020-4670-84EA-AB94509C2C15@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-10-05 15:36:51
2355,MMusic,133,85,"ClarificationElicitation,InformationProviding,ClarificationElicitation",43,43,"
Do you mean TS over RTP, or TS over plain UDP?

I know uses of both, though I think the second one should really be heavily
discouraged. Apparently, it screws up completely whenever there is packet
re-ordering.
",<200710051700.51590.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2007-10-05 17:00:51
2356,MMusic,133,86,"Question,InformationProviding,Agreement,NeutralResponse",43,43,"
I agree that the spec is way too long, but removing essential parts may just
make matters worse. At the end of the day, it makes the entire thing even
longer, that's why... I mean, what's the use of an RTSP stack without RTP
(especially when raw TS over UDP is so broken).
",<200710051700.51590.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2007-10-05 17:00:51
2357,MMusic,133,87,"ProposeAction,Disagreement,ExtensionOfPrevious",43,43,"
I would have thought of moving all the proxying stuff to a separate document,
à la MSRP, perhaps.
",<200710051700.51590.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2007-10-05 17:00:51
2358,MMusic,133,166,"InformationProviding,ProposeAction,InformationProviding",,-1,"Hi,

I think we should be careful of splitting of to much normative functions
into other documents. I think one of the more important things is to
make it more readable. I think the main problem is the initial sections.
I also think there is some informative text that could be moved into
some separate purely informative document. But I wonder if that really
can be moved in way that will make sense. I think we will need to look
into this more.
",<4709E821.7010604@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-08 10:19:45
2359,MMusic,133,168,"InformationProviding,Answer,NeutralResponse,Answer",85,85,"
I don't think this matter as RTSP is intended to possible to use with
any media transport. However, that media transport must specify the
equivalent to Appendix B. But TS over RTP falls under the RTP usage, so
I think Martin meant MPEG-2 TS over UDP.
",<4709E821.7010604@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-08 10:19:45
2360,MMusic,133,170,"InformationProviding,Answer,NeutralResponse",86,86,"
Well, this is actually a pluggable part. And I think this will make it
clearer that there is the signalling and then one or more media
transports being negotiated. But if this is a real benefit or not I
wouldn't say. The end result will be that there will be more pages to
read in total.
",<4709E821.7010604@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-08 10:19:45
2361,MMusic,133,172,"InformationProviding,Disagreement,ProposeAction,Disagreement",87,87,"
I far from convinced that this is the right move. However, we probably
should look into this. The important is that we then must succeed to
only move functionality that really are valid for the proxy only. In
cases the client or server must be aware of the proxy, these functions
must be specified in the base spec. I don't know how easy this is.
",<4709E821.7010604@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-10-08 10:19:45
2362,MMusic,134,58,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2363,MMusic,134,59,ExtensionOfPrevious,,-1,"
Title		: Real Time Streaming Protocol (RTSP)
Author(s)	: H. Schulzrinne
Filename	: draft-ietf-mmusic-rfc2326bis-02.txt,.ps,.pdf
Pages		: 5
Date		: 2002-11-4",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2364,MMusic,134,60,ExtensionOfPrevious,,-1,"
This memorandum is a revision of RFC 2326, which is currently a Pro-
posed Standard.
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for control over the delivery of data with real-time proper-
ties. RTSP provides an extensible framework to enable controlled, on-
demand delivery of real-time data, such as audio and video. Sources
of data can include both live data feeds and stored clips. This pro-
tocol is intended to control multiple data delivery sessions, provide
a means for choosing delivery channels such as UDP, multicast UDP and
TCP, and provide a means for choosing delivery mechanisms based upon
RTP (RFC 1889).",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2365,MMusic,134,61,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-02.txt",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2366,MMusic,134,62,ExtensionOfPrevious,,-1,"
To remove yourself from the IETF Announcement list, send a message to
ietf-announce-request with the word unsubscribe in the body of the message.",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2367,MMusic,134,63,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP. Login with the username
""anonymous"" and a password of your e-mail address. After logging in,
type ""cd internet-drafts"" and then
""get draft-ietf-mmusic-rfc2326bis-02.txt"".",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2368,MMusic,134,64,ExtensionOfPrevious,,-1,"
A list of Internet-Drafts directories can be found in
http://www.ietf.org/shadow.html
or ftp://ftp.ietf.org/ietf/1shadow-sites.txt",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2369,MMusic,134,65,ExtensionOfPrevious,,-1,"
Internet-Drafts can also be obtained by e-mail.",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2370,MMusic,134,66,ExtensionOfPrevious,,-1,"
Send a message to:
mailserv@ietf.org.
In the body type:
""FILE /internet-drafts/draft-ietf-mmusic-rfc2326bis-02.txt"".",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2371,MMusic,134,67,ExtensionOfPrevious,,-1,"
NOTE:	The mail server at ietf.org can return the document in
MIME-encoded form by using the ""mpack"" utility.  To use this
feature, insert the command ""ENCODING mime"" before the ""FILE""
command.  To decode the response(s), you will need ""munpack"" or
a MIME-compliant mail reader.  Different MIME-compliant mail readers
exhibit different behavior, especially when dealing with
""multipart"" MIME messages (i.e. documents which have been split
up into multiple messages), so check your local documentation on
how to manipulate these messages.",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2372,MMusic,134,68,ExtensionOfPrevious,,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<200211051110.GAA11143@ietf.org>,Internet-Drafts@ietf.org,0.0,,,2002-11-05 06:10:20
2373,MMusic,135,32,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2374,MMusic,135,33,"InformationProviding,ExtensionOfPrevious",,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-21.txt
Pages           : 283
Date            : 2009-06-19",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2375,MMusic,135,34,"InformationProviding,ExtensionOfPrevious",,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2376,MMusic,135,35,"InformationProviding,ExtensionOfPrevious",,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2377,MMusic,135,36,"InformationProviding,ExtensionOfPrevious",,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-21.txt",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2378,MMusic,135,37,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2379,MMusic,135,38,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20090619133001.9387C3A69C5@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2009-06-19 06:30:01
2380,MMusic,135,48,ExtensionOfPrevious,,-1,>(Page18) When the server is notifying the client about the end of the,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2381,MMusic,135,55,ExtensionOfPrevious,,-1,>(Page18) The PLAY_NOTIFY request includes information about the last,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2382,MMusic,135,62,ExtensionOfPrevious,,-1,>(Page19) For video is possible to manipulate the number of frames that,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2383,MMusic,135,83,ExtensionOfPrevious,,-1,>(Page20) Speed affects how much of,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2384,MMusic,135,87,ExtensionOfPrevious,,-1,>(Page25),<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2385,MMusic,135,88,"InformationProviding,ExtensionOfPrevious",,-1,transport.  A message is either a Request or a Response.,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2386,MMusic,135,101,ExtensionOfPrevious,,-1,>(Page141) The server SHALL,<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2387,MMusic,135,111,ExtensionOfPrevious,,-1,>(Page250),<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2388,MMusic,135,173,"InformationProviding,ProposeAction,InformationProviding",,-1,"Hi,

It seems that the biggest change is 'DVD Player remote control' because
I always introduced people RTSP as a TV remote control protocol.

And I would like to share some my comments, originally written for my
better understanding, if you don't mind.
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2389,MMusic,135,174,"InformationProviding,ExtensionOfPrevious",,-1,"media delivery requested using PLAY, it sends a PLAY_NOTIFY request to
the client.
[jh]The right intention looks ""When the server wants to notify the
client about the end of the media delivery, it can send a
PLAY_NOTIFY...""
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2390,MMusic,135,175,"Question,InformationProviding,Question,ExtensionOfPrevious",,-1,"RTP sequence numbers for each stream, and thus enables correct handling
of the buffer drainage at the end.
[jh] How about this? ""The PLAY_NOTIFY request includes the last RTP
sequence number for each stream to help the player to empty the buffer
smoothly.""
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2391,MMusic,135,176,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"is displayed per second, but...
[jh] This part could be enhanced like below. Correct me if I am wrong.
Some 'this' are ambiguous to me.

""For video, it is possible to manipulate the framerate on the fly,
although the randering capabilities are often limited to certain frame
rates. And the allowed contents bitrate also limits the modification of
the framerate. Therefore, basically fast forward feature could be
implemented in this regards in which some subset of the frames from the
original content could be picked up. However, the result of this way
would be different from the video encoding methods.

Due to the media characteristics, possible scale ratios is commonly
limited. To signal right scale ratio information, RTSP has a way of
indicating the supported Scale ratios for the content. To support
aggregated or dynamic content, where the scale may change during the
session and this change is dependent on the location within the content,
a mechanism for updating the media properties and the currently used
scale factor exists.""
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2392,MMusic,135,177,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"[jh] I think this parts overally should be re-reviewed. Or I would
revisit here again later.
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2393,MMusic,135,178,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
Message Body:  The information transferred as the payload of a
message.  A message body consists of meta-information in the
(snip)
[jh] the expression, ""either a request or a response"" should be in the
message body. It helps RTSP implementers to consider message body even
in the request which is not common in basic operation. Therefore, rather
the original sentence in draft20 looks better. And I think ""The
information transferred as the payload of a request or response."" could
be rephrased to ""The contents of the message without the message header
in either RTSP request or response message.""
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2394,MMusic,135,179,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"respond if the session is in playing state with the Range header
filled in with the current playback point and with the corresponding
RTP-Info values.
[jh] Original one looks more clear. It would be enhanced like below,
though.
""The server SHALL respond if the session is in playing state. Then, that
response MUST have RTP-Info value which is corresponding to the given
Range value.""
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2395,MMusic,135,180,"InformationProviding,ExtensionOfPrevious",,-1,"S->C: PLAY_NOTIFY rtsp://example.com/fizzle RTSP/2.0
CSeq: 45
Notify-Reason: end-of-stream
Request-Status: cseq=4 status=200 reason=""OK""
Range: npt=-15
RTP-Info:url=""rtsp://example.com/fizzle/audiotrack""
ssrc=0D12F123:seq=49;rtptime=39200
Session: abcdefgh

C->S: RTSP/2.0 200 OK
CSeq: 854
User-Agent: PhonyClient/1.2
[jh] CSeq looks mismatched.
",<FE6A9D3F2979884280CE0F5F5185517B8AF308@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-09 18:35:10
2396,MMusic,135,350,"InformationProviding,ProposeAction,StateDecision,Thanking,NeutralResponse,Thanking",,-1,"Hi,

Thanks for your comments. See inline for each individual item. The
changes made will be able in the 22 version.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2397,MMusic,135,352,"Agreement,StateDecision,Agreement",174,174,"
Yes, I changed this to:

When the server want to notify the client about the completion of the
media delivery, it sends a PLAY_NOTIFY request to the client.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2398,MMusic,135,354,"Answer,Agreement,StateDecision,Agreement",175,175,"
Yes, reworded it somewhat:

The PLAY_NOTIFY request includes information about the stream end,
including the last RTP sequence number for each stream, thus enabling
the client to empty the buffer smoothly.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2399,MMusic,135,356,"Question,InformationProviding,Question,NeutralResponse",176,176,"
I want to keep this reasonably non-specific when it comes to the codec.
Is this better?

For video is possible to manipulate the frame rate, although the
rendering capabilities are often limited to certain frame rates. Also
the allowed bit-rates in decoding, the structured used in the encoding
and its dependency between frames and other capabilities of the
rendering device limits the possible manipulations.

Due to the media restrictions, the possible scale values are commonly
restricted to a limited set of possible scale ratios. To enable the
clients to select from the possible scale values, RTSP can signal the
supported Scale ratios for the content. To support aggregated or dynamic
content, where this may change during the ongoing session and dependent
on the location within the content, a mechanism for updating the media
properties and the current used scale factor exist.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2400,MMusic,135,358,"InformationProviding,NeutralResponse,NeutralResponse",177,177,"
Well, it is a lot of new text. When it comes to this I do need feedback
what is problematic with the text. Writing about speed and scale is
problematic.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2401,MMusic,135,360,"InformationProviding,Disagreement,NeutralResponse",178,178,"
I have clarified that this is either a request or a response. But your
suggested phrasing is a the invert that isn't fully true as there can be
other parts in a message. I try to write what it is.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2402,MMusic,135,363,"Question,InformationProviding,Question,NeutralResponse",179,179,"
Okay, is this clearer?

The RTP-Info header and the Range header MAY be included in a
GET_PARAMETER request from client to server without any values to
request the current playback point and corresponding.RTP synchronization
information. When the RTP-Info header is included in a Request also the
Range header MUST be included (Note, Range header only MAY be used). The
server respons SHALL include both the Range header and the RTP-Info
header. If the session is in playing state, then the value of the Range
header SHALL be filled in with the current playback point and with the
corresponding RTP-Info values. If the server is another state, no values
are included in the RTP-Info header.
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2403,MMusic,135,365,"StateDecision,Thanking,Agreement",180,180,"
Fixed.

Thanks for the comments
",<4A5B597E.2080700@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-07-13 17:57:50
2404,MMusic,135,548,"InformationProviding,Agreement,Thanking,Agreement,Thanking",,-1,"Hi Magnus,
Thanks for your prompt response. It looks good.",<FE6A9D3F2979884280CE0F5F5185517B8AF367@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-07-14 11:08:30
2405,MMusic,137,0,Social,,-1,Hello again!,<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2406,MMusic,137,168,"InformationProviding,InformationProviding,ContextSetting",,-1,"
In here I list my findings of my first pass of the syntax review. As always,
I'm optimistic to find extra time for another pass.",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2407,MMusic,137,169,"ExtensionOfPrevious,InformationProviding",,-1,"
I) Syntax modifications",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2408,MMusic,137,170,"ExtensionOfPrevious,InformationProviding",,-1,"
1. accept-param:
The syntax does not enforce using the q parameter as 'delimeter' between
media-type-range and accept-range parameters; HTTP does this more explicitly
in 14.1
Suggestion:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2409,MMusic,137,171,"ProposeAction,InformationProviding",,-1,"
accept-range      =  media-type-range [ SEMI accept-params ]
accept-params     =  ""q"" EQUAL qvalue *( SEMI generic-param )",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2410,MMusic,137,172,"ExtensionOfPrevious,InformationProviding",,-1,"
this then also affects other definitions that rely on current accept-param:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2411,MMusic,137,173,"ProposeAction,InformationProviding",,-1,"
encoding          =  codings [ SEMI accept-params ]
language          =  language-range [ SEMI accept-params ]",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2412,MMusic,137,174,"ExtensionOfPrevious,Question,InformationProviding",,-1,"
...although this then requires the q parameter to be first for the encoding
and language definitions as well. Bad / Not Bad?",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2413,MMusic,137,175,"InformationProviding,InformationProviding",,-1,"
2. language-range (for Accept-Ranges):
It could reference the language-tag definition (one page below), suggestion:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2414,MMusic,137,176,"ProposeAction,InformationProviding",,-1,"
language-range    =  language-tag / ""*""",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2415,MMusic,137,177,"InformationProviding,ProposeAction,InformationProviding",,-1,"
3. Proxy-Require and Proxy-Supported:
They can both reference the feature-tag-list below, suggestion:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2416,MMusic,137,178,"ExtensionOfPrevious,ProposeAction,InformationProviding",,-1,"
Proxy-Require        =  ""Proxy-Require"" HCOLON feature-tag-list
Proxy-Supported      =  ""Proxy-Supported"" HCOLON feature-tag-list",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2417,MMusic,137,179,"Question,InformationProviding,InformationProviding,Question",,-1,"
4. Retry-After:
a) 16.40 allows this header to specify seconds or a date, the syntax only
allows delta-seconds.
b) What is the comment for? Maintenance description?
c) Usage of duration retry-param is not described in 16.40 nor anywhere else",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2418,MMusic,137,180,"ExtensionOfPrevious,InformationProviding",,-1,"
Suggestion (assuming no further description text is added):",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2419,MMusic,137,181,"ExtensionOfPrevious,ProposeAction,InformationProviding",,-1,"
Retry-After          = ""Retry-After"" HCOLON ( RTSP-date / delta-seconds )",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2420,MMusic,137,182,"InformationProviding,InformationProviding,ProposeAction",,-1,"
5. channel (for transport parameter)
I suggest a comment like at ttl:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2421,MMusic,137,183,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",,-1,"
channel              = 1*3DIGIT ; 0 to 255",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2422,MMusic,137,184,"InformationProviding,InformationProviding,ProposeAction",,-1,"
6. User-Agent
I guess the syntax should be identical to the one of Server; the extra '0'
for the * list is unnecessary.",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2423,MMusic,137,185,"InformationProviding,InformationProviding,ContextSetting,UnderstandingNegative",,-1,"
II) Things I might have not properly understood:",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2424,MMusic,137,186,"Question,Question,InformationProviding",,-1,"
1. Accept-Language:
The header allows to be empty. If this is the case, does this mean all
languages have a q value of 1 or does the last sentence in 16.4 imply NO
language is acceptable: ""If an Accept-Language header is present, then all
languages which are assigned a quality factor greater than 0 are acceptable.""
I guess it of course means all languages are equally acceptable, especially
with the default q value of 1 -- yet, does this mean for all explicitly given
languages or all the server knows of which are not explicitly given?",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2425,MMusic,137,187,"Question,Question,InformationProviding",,-1,"
2. Allow:
This header may also be empty. How can I reach a valid resource that does not
produce 404, but 405 and allows no request to be performed?",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2426,MMusic,137,188,"Question,Question,InformationProviding",,-1,"
3. Content-Type:
May be given in SIP-like short form ""c"" -- This is the only header to allow
this according to the syntax.
Why?",<70FB7A734037F44399441D45A72DE90D12CA81@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-10-03 11:34:08
2427,MMusic,137,351,"Thanking,InformationProviding,ProposeAction,Thanking",,-1,"Thanks for your review Christian,

Please see comments and proposed ways forwards inline.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2428,MMusic,137,353,"Answer,InformationProviding,Answer,ProposeAction",174,174,"
There will still be possibility for ambiguity here, but I guess that is
the simplest. q can always be added and reduces the possible conflict
between media type parameters and accept-parameters to a single token,
namely q.

I would propose follow your suggestion as it also are in-line with what
HTTP does.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2429,MMusic,137,355,"ClarificationElicitation,Agreement,ClarificationElicitation,Agreement",176,176,"
Are you meaning Accept-Languages instead of Accept-Ranges here?

In that case I do agree with you.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2430,MMusic,137,357,"Agreement,Agreement",178,178,"
Agreed.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2431,MMusic,137,359,"Agreement,InformationProviding,Answer,Agreement",179,179,"
Yes, clearly broken.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2432,MMusic,137,360,"NeutralResponse,InformationProviding,Answer,UnderstandingNegative",179,179,"
Actually I don't know.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2433,MMusic,137,361,"NeutralResponse,InformationProviding,Agreement,UnderstandingNegative",179,179,"
Yes, I don't know.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2434,MMusic,137,363,"Agreement,InformationProviding,Agreement",181,181,"
Find this suggestion good.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2435,MMusic,137,365,"Agreement,Agreement",183,183,"
Good suggestion.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2436,MMusic,137,367,"Agreement,Agreement",184,184,"
Yes, that is true.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2437,MMusic,137,369,"ClarificationElicitation,NeutralResponse,Question,InformationProviding,Answer",186,186,"
My interpretation of the text is that an empty header would mean that no
language is acceptable.

Do you think this should be clarified in the text?
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2438,MMusic,137,371,"Agreement,Agreement,ProposeAction,Answer",187,187,"
I agree that an Allow header that is empty are of no help. This is
clearly a corner-case. The question is how to resolve this issue.

We can disallow non-empty as it doesn't make sense. If you have a
request for a resource that no method is allow then I would think it is
a broken resource and thus another error message.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2439,MMusic,137,373,"Agreement,InformationProviding,Answer,Agreement,ProposeAction",188,188,"
I agree that this should be removed. We aren't using short forms in
RTSP, thus I would suggest that we remove the short form.
",<4AEDAD6B.3090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-01 16:46:51
2440,MMusic,137,451,Social,,-1,"Hello!
",<70FB7A734037F44399441D45A72DE90D04E27A99@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-11-02 09:16:51
2441,MMusic,137,453,"NeutralResponse,InformationProviding,Answer",355,355,"
Yes, I mixed them up :)
",<70FB7A734037F44399441D45A72DE90D04E27A99@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-11-02 09:16:51
2442,MMusic,137,455,"Question,Answer,Question,InformationProviding,Answer,ProposeAction",369,369,"
If no language is acceptable, how should the server form a response? As 16.4.
notes, the language applies to the presentation description and reason
phrases - What reason phrase to give if no language is acceptable?

Or is the loophole in here the part ""[...] restricts the set of natural
languages that are _preferred_ as a response to the request."" (16.4) - Then I
would interpret an empty Accept-Language header as if it was not sent (I, the
requester, have no language preference - it is up to you, responder). In that
case I'd disallow an empty header as not sending it has the same effect.
Disallowing an empty header closes this corner-case and no description text
must be modified.
",<70FB7A734037F44399441D45A72DE90D04E27A99@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-11-02 09:16:51
2443,MMusic,137,457,"Agreement,InformationProviding,Agreement",371,371,"
Yes. (Although I think you meant to write 'disallow empty' :)
",<70FB7A734037F44399441D45A72DE90D04E27A99@VIECLEX01.frequentis.frq>,Christian.Haas@frequentis.com,0.0,0,28,2009-11-02 09:16:51
2444,MMusic,137,523,"Agreement,InformationProviding,Answer,Agreement",455,455,"
Yes, that is probably easiest.
",<4AEED66E.9000003@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-02 13:54:06
2445,MMusic,137,525,"Agreement,Agreement",457,457,"
Yes!
",<4AEED66E.9000003@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-11-02 13:54:06
2446,MMusic,138,0,Social,,-1,"Hi,",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2447,MMusic,138,34,"InformationProviding,ContextSetting,InformationProviding",,-1,"
I have submitted an updated version of the RTSP specification. As usual
I started to late with this work. What I managed to do was the following:",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2448,MMusic,138,35,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",,-1,"
1. Integrate the text I received from John Lazzaro on using independent
TCP connections for RTP transport (contrans).",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2449,MMusic,138,36,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",,-1,"
2. Tried to clarity the DDoS protection for RTSP in the security
consideration section.",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2450,MMusic,138,37,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",,-1,"
3. Updated the transport specifications to match the syntax and how the
complete combination strings should be registered with IANA.",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2451,MMusic,138,38,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",,-1,"
4. Implemented the proposal for allowing the client to pipeline the PLAY
request to any non-initial SETUP requests to gain a RTT.",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2452,MMusic,138,39,"InformationProviding,ExtensionOfPrevious",,-1,"
Which means I didn't clean up the open issues list that remained after
the Dallas meeting.",<449FF5CE.8030402@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-06-26 16:57:18
2453,MMusic,140,0,Social,,-1,"Hi,",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2454,MMusic,140,43,"InformationProviding,InformationProviding",,-1,"
We have managed to produce an updated version of the RTSP specification.
Until it becomes announced it can be fetched here:",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2455,MMusic,140,44,"InformationProviding,ContextSetting,ExtensionOfPrevious",,-1,"
http://rtsp.org/2002/drafts/draft-ietf-mmusic-rfc2326bis-02.txt
http://rtsp.org/2002/drafts/draft-ietf-mmusic-rfc2326bis-02.ps
http://rtsp.org/2002/drafts/draft-ietf-mmusic-rfc2326bis-02.pdf",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2456,MMusic,140,45,"InformationProviding,ExtensionOfPrevious",,-1,"
The PDF or PS versions are probable more easy to read and with better
change bars.",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2457,MMusic,140,46,"InformationProviding,ExtensionOfPrevious",,-1,"
There are several important changes, which I will enumerate here, but
also see the changes section of the draft.
-  Removal of queued play
-  Redirect updated, range header, usage and the 3xx methods.
-  IANA section updated with more registries and x-headers removed.
-  IPv6 Support
-  Method PLAY, PAUSE and OPTIONS has get significant more rules to
clarify functionality.
-  Keep alive better explained.",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2458,MMusic,140,47,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
There will be some agenda time for discussions in Atlanta. Please send
me and the list things that you desire to discuss. There will also most
probably be a bar discussion regarding the future work. So if you are
interested in participating please send me a mail.",<3DC279E0.8050504@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-01 13:56:00
2459,MMusic,141,32,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2460,MMusic,141,33,"InformationProviding,ExtensionOfPrevious",,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : H. Schulzrinne, et al.
Filename        : draft-ietf-mmusic-rfc2326bis-19.txt
Pages           : 249
Date            : 2008-11-03",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2461,MMusic,141,34,"InformationProviding,ExtensionOfPrevious",,-1,"
This memorandum defines RTSP version 2.0 which is a revision of the
Proposed Standard RTSP version 1.0 which is defined in RFC 2326.",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2462,MMusic,141,35,"InformationProviding,ExtensionOfPrevious",,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for control over the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2463,MMusic,141,36,"InformationProviding,ExtensionOfPrevious",,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-19.txt",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2464,MMusic,141,37,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2465,MMusic,141,38,"InformationProviding,ExtensionOfPrevious",,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20081103183001.959BE3A6BE7@core3.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2008-11-03 10:30:01
2466,MMusic,141,40,Social,,-1,"Hi,",<491004B1.90900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-04 09:15:45
2467,MMusic,141,72,"InformationProviding,ProposeAction,InformationProviding",,-1,"
This version tries to address a number of issues logged in the tracker.
A number of the changes are suggested for your review. I also raised a
number of them in separate emails for discussion. Please discuss and
review so that we can ensure that we have the appropriate solution.",<491004B1.90900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-04 09:15:45
2468,MMusic,141,73,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
This version does not yet address all issues. There are still a few
larger tasks that haven't been addressed in this version. Martin and I
continues to work on these and still try to reach the goal of having a
version without outstanding issues in December so that we can start
performing final review cycles.",<491004B1.90900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-04 09:15:45
2469,MMusic,141,74,"InformationProviding,ExtensionOfPrevious",,-1,"
The side by side diff:
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rfc2326bis/draft-ietf-mmusic-rfc2326bis-19-from-18.diff.html",<491004B1.90900@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-11-04 09:15:45
2470,MMusic,141,140,"Question,InformationProviding,Disagreement,ProposeAction,UnderstandingNegative,Question,InformationProviding",36,36,"
| 2.2.  RTSP's Relationship to HTTP
|    *  Both an RTSP server and client can issue requests.

I am not questioning the need for this. But it might be worth to mention
somewhere that RTSP agents MUST be ready to handle an incoming requests even
when they are ""waiting"" for a response to one of their own requests. Without
this, we might get into a race condition failure scenario.

Also, RTSP agents MUST be ready to dequeue incoming (chunks of) requests
whenever they are in the middle of sending a request in the other direction.
Otherwise, they could get into a complete deadlock if a full request is
bigger than the TCP receive buffer.

| 13.4.1.  General Usage
| (...) Range: npt=10-15, npt=20-25, npt=30-

I never really understood the need for multiple ranges. It's impossible to
support this with a user-grade interface. And for advanced uses, I don't see
the advantage over using multiple PLAY requests (I do see the big
inconvenience that it's a burden for server vendors to implement, and in fact
our RTSP server never supported this and will continue to ignore such
requests).

| 16.19.  CSeq

I wonder why we have it at all. I assume I must be missing something. It made
sense for rtspu, but now? It is quite trivial to implement for clients and
servers, but not for proxies.

| D.1.6  Range of Presentation
|  (...) In case of
|  different length the range attribute MUST be given at media level
|  for all media, and SHOULD NOT be given at session level.

This will for sure cause interoperability problems if it's ever used. The
basic video player for A/V streams won't know what to cope with that.

| D.1.8.  Connection Information
| (...) for type ""IP6"", this value SHALL be ""0:0:0:0:0:0:0:0"", i.e. the
| unspecified address according to RFC 4291

The canonical notation for the unspecified IPv6 address is ""::"". Then again,
it might be better to not put an explicit quoted value. The value matters,
not its notation.

| Appendix J.  Acknowledgements
| (...) Mela Martti

Hist name is Martti Mela.
",<200811082058.47399.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-11-08 20:58:47
2471,MMusic,141,258,"InformationProviding,Answer,NeutralResponse",140,140,"
I think this text is belonging in section 10 on connections. Proposed
text for Section 10.2 after the paragraph about Servers sending requests.

""The client and server sending requests can be asynchronous events. To
avoid issues both client and server MUST be able to send and receive
requests simultaneously.""
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2472,MMusic,141,260,"InformationProviding,StateDecision,NeutralResponse",140,140,"
I will split this into its own thread.
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2473,MMusic,141,262,"InformationProviding,ContextSetting,NeutralResponse",140,140,"
As section 10 says:

Certain RTSP headers, such as the CSeq header (Section 16.19), which
may appear to be relevant only to connectionless transport scenarios
are still retained and must be implemented according to the
specification.  In the case of CSeq, it is quite useful for matching
responses to requests if the requests are pipelined (see Section 12).
It is also useful in proxies for keeping track of the different
requests when aggregating several client requests on a single TCP
connection.
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2474,MMusic,141,264,"Question,InformationProviding,ProposeAction,ClarificationElicitation",140,140,"
So what is your suggestion?

I have seen streams that hasn't have had audio all the way and that
ending slightly before the video. I think you need to handle those cases
in a graceful way. We already clarified that if you have this case in an
aggregated session you need to support requests with range values for
any point where there exist media.
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2475,MMusic,141,266,"InformationProviding,ProposeAction,NeutralResponse",140,140,"
Yes, that might be, but how many will be completely clear on this. I can
add a clarification that this is equivalent to ""::"".
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2476,MMusic,141,268,"InformationProviding,StateDecision,Agreement",140,140,"
Fixed
",<4933DC7F.9090802@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-01 13:45:51
2477,MMusic,141,314,"Question,InformationProviding,Disagreement,Question,NeutralResponse",262,262,"
But is it doing anything useful?  HTTP proxies function perfectly
well without any equivalent.  The rules for RTSP pipelining are the
same as non-pipelined requests: that responses must be delivered in
the same order as requests, so there is nothing that the CSeq field
adds.

I think there is a strong case to be made that CSeq only ever made
sense for unreliable transports, and there is no value that it adds
for reliable transports.  While it does not do much harm, it really
seems to be unnecessary.
",<25BD926B-8974-4560-BF37-B78663D7D226@cs.stanford.edu>,pallas@cs.stanford.edu,0.0,0,35,2008-12-01 12:18:51
2478,MMusic,141,373,"InformationProviding,Answer,Agreement,ProposeAction,Agreement",314,314,"
I agree that the header is not necessary for the functioning of the
protocol. I think the main argument for keeping it is debugging and
handling error cases, like lost message boundaries requiring
resynchronization of the message flow. Please do remember that TCP is
not guaranteed free from errors.
",<4934F983.6030305@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-02 10:01:55
2479,MMusic,141,413,"InformationProviding,Disagreement,NeutralResponse",373,373,"
If message boundaries are ""broken"", only one of the fragment will contain
CSeq, so it's hardly of any help.
",<200812071849.41182.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-12-07 18:49:40
2480,MMusic,141,414,"InformationProviding,Disagreement,UnderstandingNegative,Disagreement",373,373,"
I don't understand this argument at all. If a TCP session suffers packet loss
(whether it's recovered or not) or re-ordering, the applications layer will
NOT see it, so CSeq does not help in any meaningful way. HTTP does not have
CSeq, yet we have no problem debugging it.

As for packet captures, we have the TCP sequence number already. Wireshark has
long since learnt how to re-assemble TCP.
",<200812071849.41182.rem@videolan.org>,rem@videolan.org,0.0,0,1,2008-12-07 18:49:40
2481,MMusic,141,417,Social,,-1,Hi!,<493CDA10.4040008@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:25:52
2482,MMusic,141,483,"InformationProviding,InformationProviding",,-1,"
I'm just skimming through the spec and didn't find any reference to some
functionality I hope that is not forbidden and requires the usage of
reference numbers (i.e. CSeq):",<493CDA10.4040008@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:25:52
2483,MMusic,141,484,"InformationProviding,ExtensionOfPrevious",,-1,"
In our case of a RTSP server, a 'client' will have one TCP connection
that controls several RTSP sessions; Without such reference numbers,
this client would have to serialize all requests and wait for each
response until it may proceed with any next request. When 20 sessions
need to be created and for some reason the 10th resource needs some time
to be set up, having a reference number this one doesn't affect the
others since the responses can come back in any order and are properly
assigned to the original requests.
In some of our cases having the client open up a dedicated TCP
connection per RTSP session is not an option (the client being a small
embedded host). By the way, this would then also nullify the reason for
having session identifiers at all.",<493CDA10.4040008@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:25:52
2484,MMusic,141,485,"InformationProviding,ExtensionOfPrevious",,-1,"
I may have missed the point of your discussion whether a CSeq is useful
or not [with only one session], but I don't see how to handle several
sessions between one client and one server without.",<493CDA10.4040008@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:25:52
2485,MMusic,141,488,Social,,-1,"Hi Christian,",<547F018265F92642B577B986577D671C4FC49C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-12-08 09:29:53
2486,MMusic,141,589,"InformationProviding,ProposeAction,NeutralResponse",,-1,"
The sessionId might be helpful for multiple sessions (Section 4.3.  Session Identifiers). To pipeline multiple requests you can use the pipelining (Section 12.  Pipelining Support).",<547F018265F92642B577B986577D671C4FC49C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-12-08 09:29:53
2487,MMusic,141,621,"InformationProviding,NeutralResponse,NeutralResponse",589,589,"It might help for session setup, but in my view, matching responses to
the original requests gets only more complex:
- for pipelining, the receiver *) must match via the pipelined-request
id (which is just another reference id)
- for established sessions, it must match via session id
- for any 'ping' request, it probably must default by guessing since the
two above don't match

in contrast to

- forward the received response to the instance that used this CSeq
number regardless of what it is and why it was sent
",<493CDE3E.30909@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:43:42
2488,MMusic,141,622,"InformationProviding,ExtensionOfPrevious",589,589,"
*) This receiver I'm referring to is the gatekeeper between the x state
machines (sessions, keep alive timer, possibly the interleaved
(de-)multiplexer) and the one control connection. I'd like to have it as
simple as possible; It assigns CSeq numbers for outgoing requests and
matches the response again.

ch
mmusic mailing list
mmusic@ietf.org
https://www.ietf.org/mailman/listinfo/mmusic",<493CDE3E.30909@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 09:43:42
2489,MMusic,141,696,"InformationProviding,ProposeAction,NeutralResponse",484,484,"
Requests always need to be serialized when using TCP, since we have only
one ""channel"". You can pipeline outgoing requests without waiting for the
response to the previous one.
",<200812081131.16963.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 11:31:16
2490,MMusic,141,698,"InformationProviding,Agreement,Disagreement,Agreement,NeutralResponse",484,484,"
The current spec requires that responses come in the same order as requests
(section 12):

(...) For RTSP where the relative order of requests will
matter it is important to maintain the order of the requests.
Because of this the the responding entity SHALL process the incoming
requests in their sending order.  The sending order can be determined
by the CSeq header and its sequence number.  For TCP the delivery
order will be the same as the sending order.  The processing of the
request SHALL also have been finished before processing the next
request from the same entity.  The responses MUST be sent in the
order the requests was processed.

I agree that CSeq would be useful, and even necessary, if response were not
ordered. But they _are_ ordered, and hence CSeq is _useless_.

If you want a reference number, you can maintain a counter of request sent,
and a counter of response received, and match them. As it happens, these
counters will be equal to CSeq, except that you don't need to exchange them
over the wire.

I would be very much against allowing disordered response, as it introduces
horrible race condition in the protocol state machine: client and server must
agree on the order of processing the requests.
",<200812081131.16963.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 11:31:16
2491,MMusic,141,700,"InformationProviding,NeutralResponse,NeutralResponse",484,484,"
Connection pooling does not require CSeq to work. And anyway, session
identifiers are needed to switch control connection, for instance during a
hand-over.
",<200812081131.16963.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 11:31:16
2492,MMusic,141,702,"InformationProviding,NeutralResponse,NeutralResponse",485,485,"
CSeq equals the number of responses received this far. Hence sending it over
the wire provide ABSOLUTE ZERO informations that is not already available
otherwise. To put it another way, the entropy of CSeq is nul - it's pure
waste.
",<200812081131.16963.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 11:31:16
2493,MMusic,141,712,"InformationProviding,NeutralResponse,NeutralResponse",696,696,But only regarding one session.,<493CF369.1030600@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 11:14:01
2494,MMusic,141,797,"ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse",698,698,"
...is ""the same entity"" meaning the client or the state machine that
handles one session?
If it is the client, then setting up 20 sessions with each requiring 5
seconds on the server to be set up will have the 20th prepared after
20*5 seconds. And only after that time, the first session will be
available for some further control again.
",<493CF369.1030600@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 11:14:01
2495,MMusic,141,799,"InformationProviding,Agreement,Agreement,Disagreement",698,698,"I agree with you that requests /regarding one RTSP session/ need to be
in strict order, but I don't see a reason to impose this order down to
the control connection. All I want and need is to control several
sessions in parallel (and I don't only mean SETUP, all other methods as
well) -- those regarding one session need to be ordered of course
(serialized, always awaiting the response of the previous).
",<493CF369.1030600@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 11:14:01
2496,MMusic,141,801,"Question,InformationProviding,Question,NeutralResponse",700,700,"I understand that for pooling CSeq isn't required, but it makes life
(implementation) a bit easier, as described in the other mail.
Personally, I wouldn't have that much problems without a CSeq (as I'm
the server implementor), but I guess that some clients [of mine] might
resort to abuse the first Timestamp field (which the server needs to
mirror, like the CSeq).
Assuming parallel control of sessions is allowed, reading message traces
is a bit easier with simple sequence numbers than with complex session
identifier. Though I have to admit, this is a mood point.

But apart from the form of referencing requests/responses to sessions,
what about SET_PARAMETER and GET_PARAMETER, which are not required to be
bound to a session and might only operate on given resources 'globally'?
I'd also like to be able to control two or more different resources in
parallel, having one operation not to wait for the completion of an
operation on another resource. Without CSeq nor a Session, how can these
responses be matched to the original request?
If these transactions need to be strictly ordered as well, then RTSP is
going to be very unpractical for two agents communicating about more
than one resources/sessions.
",<493CF369.1030600@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 11:14:01
2497,MMusic,141,877,"InformationProviding,NeutralResponse,NeutralResponse",712,712,"
Err... I mean, obviously a single TCP connection can only be in the middle of
transmitting one request at a time, so you need some kind of serialization
anyway. This is totally independent from session scopes.
",<200812081319.37601.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 13:19:37
2498,MMusic,141,879,"InformationProviding,Answer,Answer",797,797,"
When using TCP, I understand an ""entity"" as one end of a TCP connection.
Othewrise the third quoted sentence would make no sense.
",<200812081319.37601.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 13:19:37
2499,MMusic,141,881,"InformationProviding,ProposeAction,Agreement",797,797,"
Yes. As with every TCP-based protocol. Ordering is a _feature_ of TCP.

If we were to allow un-ordered responses, *ALL* RTSP clients would have to
support it: more state to keep, more implementation effort, more IOP problem
and confusion (as half of the implementors will support re-ordering anyway).

If you don't want ordering and head-of-line blocking you can use SCTP or open
multiple TCP sessions.
",<200812081319.37601.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 13:19:37
2500,MMusic,141,883,"InformationProviding,NeutralResponse,Disagreement",799,799,"
I _do_ see a reason: not having to reimplement re-ordering at the application
layer on top of a protocol that does provide re-ordering anyway.
",<200812081319.37601.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 13:19:37
2501,MMusic,141,885,"Question,InformationProviding,Question",801,801,"
So POP3, IMAP, HTTP, and every other IETF TCP-based protocol are impractical?

When Web browsers want to avoid HoL blocking, they open multiple connections
in parallel. And if the system is too constrained to keep state for
concurrent TCP sessions, then why the heck would it be capable of maintaining
the exact same state one layer up the stack?!
",<200812081319.37601.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 13:19:37
2502,MMusic,141,942,"InformationProviding,Answer,ProposeAction,UnderstandingNegative,InformationProviding,NeutralResponse,ContextSetting",885,885,"Ok, I think either of us is getting the other one on the wrong foot here
- this went into some direction I was not aiming for. I want to go back
a few steps and describe what it's about for me.
I am in no way contesting the problem of recreating the sequence about
transmission and reception of messages and I'm aware of the features
that a TCP connection has.

In my case I have one server with two resources A and B (which have
nothing to do with each other) and one client that wants to access them
- also independently from each other. Yet for all it is defined that one
resource may have only one action active at a time (We agree here). I
would furthermore expect the system to be capable that the client can
access both resources simultaneously: While the response to request A1
is pending for resource A, the request B1 can be sent regarding B, but a
request A2 would have to wait until A1 is completed of course.
For simplicity I now only focus on transport via TCP to have a strict
ordering of message transmission and reception settled:
As you described, having the client open two dedicated TCP connections
(one regarding A, one regarding B) could be one solution (both resources
are accessed simultaneously).
Yet the constrain I want to add is that the client can only use one TCP
connection for all (control) communication. I do see the possibility to
implement this pooling by using a combination of pipelining and the
session identifier, but what I do not understand (and perhaps I got you
wrong there) is why the B1 request /also/ would have to wait until the
response of A1 arrived - they still have nothing to do with each other.

The knot in my mind I'm having is why it is allowed to access two
resources simultaneously (and independently) using two dedicated
connections, but not via one connection...

If this were allowed, a response would need some sort of identification
(reference) by which the sender knows to what original request it was
sent (The response to B1 might be earlier than for A1). For me it is not
about recreating the order of transmissions, but matching the responses
to the original requests - for now I would have used CSeq for this,
since Session is not always present.
",<493D146E.3060505@frequentis.com>,christian.haas@frequentis.com,0.0,0,29,2008-12-08 13:34:54
2503,MMusic,141,1000,"InformationProviding,NeutralResponse,NeutralResponse",942,942,"
You don't have to wait to send the B1 _request_. However, the B1 _response_
will not come until the A1 request has been processed and the A1 _response_
sent and received:

These are valid:
C->S: A1 request
C->S: B1 request
S->C: A1 response
S->C: B1 response

C->S: A1 request
S->C: A1 response
C->S: B1 request
S->C: B1 response

This is NOT valid:
C->S: A1 request
C->S: B1 request
S->C: B1 response
S->C: A1 response
",<200812081453.50940.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 14:53:50
2504,MMusic,141,1002,"InformationProviding,NeutralResponse,NeutralResponse",942,942,"
Nobody said this was forbidden. The draft even recommends reusing connections
for independent sessions (to spare server connections).
",<200812081453.50940.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 14:53:50
2505,MMusic,141,1004,"InformationProviding,NeutralResponse,NeutralResponse",942,942,"
The sender knows how to match responses to requests because it knows in which
order requests were sent, and it can assume that responses are in that same
order.
",<200812081453.50940.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-12-08 14:53:50
2506,MMusic,141,1007,InformationProviding,,-1,"Christian,",<493D36EA.808@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 16:02:02
2507,MMusic,141,1109,"InformationProviding,InformationProviding",,-1,"
If I understand you correctly you have a proxy or a client that wants to
establish multiple RTSP sessions over the same TCP connection. When
sending requests for session A the server can't send a response to a
request to session B even if that can be processed faster that the
request to session A.",<493D36EA.808@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 16:02:02
2508,MMusic,141,1110,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
In that case I think one should consider as Rémi says to use multiple
TCP connections.",<493D36EA.808@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 16:02:02
2509,MMusic,141,1111,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
And the protocol do allow the requests to be processed in parallel as
long as one checks what the previous ones and determines that it is not
related, for example not acting on the same RTSP session, or a stateless
request. But the responses needs to be sent in the correct order. So I
do understand that for busy clients/proxies this becomes a problem.",<493D36EA.808@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 16:02:02
2510,MMusic,141,1112,"InformationProviding,Agreement,ExtensionOfPrevious",,-1,"
But I don't know what to do it other than write reasonable
recommendations. I agree with Rémi that changing the processing rules so
that they use session id and pipeline ids for queues and then use CSEQ
to allow response out of order between the queues is make everyones
implementations more difficult.",<493D36EA.808@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 16:02:02
2511,MMusic,141,1160,"InformationProviding,ProposeAction,Disagreement",414,414,"
No, I mean bit-errors, character blanking or other TCP payload
modification errors creeping through the Internet checksum. That can
corrupt message boundaries and result in that the server responds two
requests as one or make the client interpret a single message as being
shorter and that there are additional ones. After such an error has been
introduced into your connection it takes some care to recover. I would
claim that cseq has some benefits in that.
",<493D3408.8060502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 15:49:44
2512,MMusic,141,1162,"InformationProviding,ProposeAction,Disagreement",414,414,"
That wasn't the issue. If you do one sided or in the middle logging and
save the messages as they are sent and later responses received the
request and response will not be nicely ordered in the log file. Thus
you need to parse larger structures to determine what response belongs
to which request. Not that it is impossible without it is only simpler.
",<493D3408.8060502@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-12-08 15:49:44
2513,MMusic,143,80,InformationProviding,,-1,"Corrected RTSP ID pointer
",<76AC5FEF83F1E64491446437EA81A61F7CD4D3201C@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-10 16:19:00
2514,MMusic,143,82,InformationProviding,,-1,"
http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-23
",<76AC5FEF83F1E64491446437EA81A61F7CD4D3201C@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-10 16:19:00
2515,MMusic,143,85,Social,,-1,"Hi,",<101C6067BEC68246B0C3F6843BCCC1E306F08F0DF0@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2010-03-11 11:19:59
2516,MMusic,143,188,"ProposeAction,Question,InformationProviding",,-1,"
Please could we discuss the draft http://tools.ietf.org/html/draft-hutton-mmusic-icemicrolite.",<101C6067BEC68246B0C3F6843BCCC1E306F08F0DF0@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2010-03-11 11:19:59
2517,MMusic,143,189,"ProposeAction,ExtensionOfPrevious",,-1,"
This should be discussed as a possible alternative approach to http://tools.ietf.org/html/draft-boucadair-mmusic-altc",<101C6067BEC68246B0C3F6843BCCC1E306F08F0DF0@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2010-03-11 11:19:59
2518,MMusic,143,192,Social,,-1,"Hi Andy,",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206E@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:26:45
2519,MMusic,143,216,"InformationProviding,StateDecision,Thanking,Answer,Thanking,NeutralResponse",188,-1,"
Yes, thanks for the request.
Given the altc draft from M. Boucadair et al is on the agenda, we will add yours right after that.",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206E@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:26:45
2520,MMusic,143,217,InformationProviding,,-1,"
Jean-François",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206E@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:26:45
2521,MMusic,143,220,"InformationProviding,InformationProviding",,-1,"For the HTML version and links to the IDs to read before the meeting, see http://www.ietf.org/proceedings/10mar/agenda/mmusic.html",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206F@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:28:33
2522,MMusic,143,270,"InformationProviding,InformationProviding",,-1,"
--- Multiparty Multimedia Session Control (MMUSIC) Working Group
--- Agenda for IETF#77 MMUSIC WG Meeting
--- Last Updated: March 12, 2010 (DRAFT Agenda version 3)",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206F@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:28:33
2523,MMusic,143,271,InformationProviding,,-1,"
TUESDAY, March 23, 2010
1520-1720 Afternoon Session II
Room: California D",<76AC5FEF83F1E64491446437EA81A61F7CD4D3206F@srvxchg>,jf.mule@cablelabs.com,0.0,0,3,2010-03-11 04:28:33
2524,MMusic,145,16,"ProposeAction,InformationProviding",,-1,"Section 17.2.3
needquote-url = url //That contains ; or ,",<403611D8.6090803@neomagic.com>,mpurohit@neomagic.com,0.0,0,46,2004-02-20 19:25:36
2525,MMusic,145,17,"ProposeAction,InformationProviding",,-1,"
RTP-Info Header also contains ""="" as a delimiter hence,
NeedQuote-URL should also mention ""="" as it is part of the definition of
URL in RFC2396.",<403611D8.6090803@neomagic.com>,mpurohit@neomagic.com,0.0,0,46,2004-02-20 19:25:36
2526,MMusic,145,18,"ProposeAction,InformationProviding",,-1,"
needquote-url = url //That contains ; or , or =",<403611D8.6090803@neomagic.com>,mpurohit@neomagic.com,0.0,0,46,2004-02-20 19:25:36
2527,MMusic,145,21,Social,,-1,"Hi Mukul,",<40361CA8.4020804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-20 15:41:44
2528,MMusic,145,75,"Disagreement,InformationProviding,Disagreement,Thanking",17,-1,"
Thanks for reviewing. However I don't think that a SAFE URL need to
exclude ""="". The reason is that the URL in RTP-Info header starts after
the ""url="" part and must end with a "";"". Thus the exclusion of "","" is
actually not needed in the RTP-Info usage, unless someone makes a syntax
violation. However as also using this as a common delimiter I think it
is prudent to include it also in the exception.",<40361CA8.4020804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-02-20 15:41:44
2529,MMusic,146,24,InformationProviding,,-1,"
During last week's RTSP teleconference, we had a discussion on how to
distinguish the updated RTSP (i.e., the ongoing work
around draft-ietf-mmusic-rfc2326bis-03.txt, see
http://rtsp.org/2003/drafts/draft03/draft-ietf-mmusic-rfc2326bis-03.pdf).",<72263E8E8622D611975C0002B32C19D84A79F3@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-04-24 18:39:02
2530,MMusic,146,25,ExtensionOfPrevious,,-1,"
There is enough change on the table that we feel version number should be
increased to avoid confusion when RTSP server and client might be
implementing the old (rfc2326) and the new RTSP spec (will be a new RFC).",<72263E8E8622D611975C0002B32C19D84A79F3@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-04-24 18:39:02
2531,MMusic,146,26,Question,,-1,"
Should we increase the minor version to say RTSP/1.1, or should we up the
major version (to say RTSP/2.0)?",<72263E8E8622D611975C0002B32C19D84A79F3@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-04-24 18:39:02
2532,MMusic,146,27,ExtensionOfPrevious,,-1,"
Your comments are welcome.",<72263E8E8622D611975C0002B32C19D84A79F3@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-04-24 18:39:02
2533,MMusic,147,0,InformationProviding,,-1,This is to start a 4-week Working Group Last Call for,<4F8EBB4E.7080804@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-04-18 15:02:06
2534,MMusic,147,18,ExtensionOfPrevious,,-1,"
draft-ietf-mmusic-rfc2326bis-29.txt",<4F8EBB4E.7080804@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-04-18 15:02:06
2535,MMusic,147,19,ExtensionOfPrevious,,-1,"
The WGLC ends on May 16th, 2012. Notice that this is a special 4-week
WGLC due to the length of the document.",<4F8EBB4E.7080804@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-04-18 15:02:06
2536,MMusic,147,20,ExtensionOfPrevious,,-1,"
We would especially like reviewers to focus on the changes since the last
WGLC, which was for version -23.",<4F8EBB4E.7080804@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-04-18 15:02:06
2537,MMusic,147,21,ExtensionOfPrevious,,-1,"
Please reply to this e-mail that includes the authors and the mailing list.",<4F8EBB4E.7080804@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-04-18 15:02:06
2538,MMusic,147,59,NeutralResponse,21,21,"
Hi,

As an author I can post the link of the Diff between 23 and now:

https://tools.ietf.org/rfcdiff?url1=draft-ietf-mmusic-rfc2326bis-23&difftype=--html&submit=Go!&url2=draft-ietf-mmusic-rfc2326bis-29

This is quite a substantiall amount of changes. Unfortunately the
section reordering makes it difficult to spot changes in some sub-sections.
",<4F8FD679.9050304@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-19 11:10:17
2539,MMusic,147,112,NeutralResponse,,-1,"Hi,

I have read the latest draft and think it is good enough for publication.

BR, Roy

-----邮件原件-----
发件人: mmusic-bounces@ietf.org [mailto:mmusic-bounces@ietf.org] 代表 Magnus Westerlund
发送时间: 2012年4月19日 17:10
收件人: mmusic@ietf.org
主题: Re: [MMUSIC] WGLC of draft-ietf-mmusic-rfc2326bis-29.txt
",<E1BDDFCD18CF9748BAB4B7FAF2D532D91E0C52BE@SZXEML511-MBS.china.huawei.com>,yuepeiyu@huawei.com,0.0,0,54,2012-04-25 02:24:48
2540,MMusic,147,170,"InformationProviding,NeutralResponse",,-1,"Hi,

I have to add a WG last call comment on my own document. This comes from
a discussion on the AVTCORE ECN for RTP document with Pete Resnick
regarding ABNF extension definitions and the qdtext definition of UTF-8.

Fist of all it doesn't provide any escaping of strings including "" and
secondly its definition of UTF-8 and additional characters are in error.
",<4F99701E.1020806@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:56:14
2541,MMusic,147,172,ExtensionOfPrevious,,-1,"First of all, I don't think you should be including %x80-FF not in the
context of UTF-8. As you said, if you want binary content (or random
octets), you can always BASE64 the thing. This should be for strings,
and that means either US-ASCII or UTF-8 and nothing else.

I think you should incorporate definitions from 5234 (DQUOTE) and 3629
(UTF8-1, UTF8-2, UTF8-3, and UTF8-4) and simply make this:

quoted-string = ( DQUOTE *qdtext DQUOTE )
qdtext = %x20-21 / %x23-7E / UTF8-NONASCII
UTF8-NONASCII = UTF8-1 / UTF8-2 / UTF8-3 / UTF8-4

If you want to add the quoted-pair escaping mechanism, the simplest
would be:

quoted-string = ( DQUOTE *qdtext DQUOTE )
qdtext = %x20-21 / %x23-5B / %x5D-7E / quoted-pair / UTF8-NONASCII
; No DQUOTE and no ""\""
quoted-pair = ""\\"" / ( ""\"" DQUOTE )
UTF8-NONASCII = UTF8-1 / UTF8-2 / UTF8-3 / UTF8-4
",<4F99701E.1020806@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:56:14
2542,MMusic,147,205,NeutralResponse,21,21,"
An additional change to semantics for the URI is that the ""authority"",
and query and fragment should be considered to be moved into this
specification. The reason is that it becomes unclear how the RFC3986
rules sub-rules effect the same name rules in the ID.
",<4FA13005.1090202@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:00:53
2543,MMusic,147,236,NeutralResponse,21,21,"
We have now received feedback on both the URI and text/parameters media
type that needs some adjustment of the text.
",<4FA7987F.4060906@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-07 11:40:15
2544,MMusic,147,278,InformationProviding,,-1,"The WGLC of draft-ietf-mmusic-rfc2326bis-29.txt is over. Thanks to all
who provided comments, either as ""I read the document and I have no
comments"" or as a set of comments.

From my recollection of events, there was a comment related to the ABNF
extension definitions and the qdtext definition of UTF-8. There was also
another comment triggered by the URI scheme review list. The full
discussion took place in the URI review list. Here is a link to the
initial mail:

http://www.ietf.org/mail-archive/web/uri-review/current/msg01567.html

With this, I expect the authors to address the received comments in a new
version of the document, once all the comments are fully discussed and
agreed.

/Miguel
",<4FB9FEE9.5000702@ericsson.com>,Miguel.A.Garcia@ericsson.com,0.0,0,2,2012-05-21 10:38:01
2545,MMusic,148,3,ExtensionOfPrevious,,-1,On Tuesday it will start at 9.00 and end at latest at 17.00.,<20080411163001.59B213A6E78@core3.amsl.com>,ietf-secretariat@ietf.org,0.0,,,2008-04-11 09:30:01
2546,MMusic,148,49,InformationProviding,,-1,"The IETF MMUSIC WG is holding an Interim meeting on the topic of RTSP
the 19th and 20th of May 2008 in Stockholm, Sweden. The meeting will
start at lunch time 12.00 and continue until 18.00 on Monday the 19th.",<20080411163001.59B213A6E78@core3.amsl.com>,ietf-secretariat@ietf.org,0.0,,,2008-04-11 09:30:01
2547,MMusic,148,50,ExtensionOfPrevious,,-1,"
The purpose of the meeting is the following: First, to discuss the open
issues that at that time exists on the RTSP 2.0 core specification.
Secondly, to discuss any liaison response from other standards
developing organizations using RTSP. Especially their desired extensions
to RTSP and their impact on the RTSP 2.0 core specification. We
especially encourage persons from such organizations to participate in
this meeting. Third, to discuss issues and ways to progress already
existing MMUSIC WG item extensions to RTSP. Fourth, to discuss any RTSP
extensions proposed to become MMUSIC WG items. The main goal is to help
ensure the timely completion of the RTSP 2.0 core specification while
ensuring that the potential user's requirements have been considered and
the necessary extension mechanisms are in place.

The RTSP 2.0 core specification editors intends to submit an updated
version of the draft in good time (2-3 weeks) prior to the meeting to
allow everyone to prepare. At that time a more detailed agenda will also
be published taking requests for topics and the incoming liaisons into
account.

Participants are required to register prior to the event to ensure that
the facilities can accommodate the participants. The last day of
registration is the 5th of May. Registration shall be sent to
magnus.westerlund@ericsson.com with the subject line ""MMUSIC RTSP
interim meeting"" indicating the participant's name and also any specific
agenda requests. The meeting will most likely be held out in Kista (20
min subway ride from downtown Stockholm).

Any questions on this event can be directed to the MMUSIC WG chairs
Joerg Ott (jo@acm.org) and Jean-Francois Mule (jf.mule@cablelabs.com) or
the meeting organizer Magnus Westerlund
(magnus.westerlund@ericsson.com).

References:
Current WG documents:
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rfc2326bis/
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rtsp-nat/
http://tools.ietf.org/wg/mmusic/draft-ietf-mmusic-rtsp-nat-evaluation/

RTSP Core issue tracker:
http://sourceforge.net/projects/rtspspec
IETF-Announce mailing list
IETF-Announce@ietf.org
https://www.ietf.org/mailman/listinfo/ietf-announce",<20080411163001.59B213A6E78@core3.amsl.com>,ietf-secretariat@ietf.org,0.0,,,2008-04-11 09:30:01
2548,MMusic,149,33,InformationProviding,,-1,"
RTSP 2.0 (real-time streaming protocol) draft proposed what I think is a
quite novel idea of allowing the usage of TLS despite the need for
proxying the connection. This allows the user to receive and approve the
certificate of the next hop TLS connection the proxy is establishing on
behalf of the client. Of course this requires trust in the proxy, but
seems to be applicable in a number of environments, where the only
alternative may be to not use TLS at all. For example through company
firewalls that require auditing.",<4417F0DE.3020901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 11:47:58
2549,MMusic,149,34,ExtensionOfPrevious,,-1,"
To help ensuring the correct specification and that we haven't created
any security holes beyond the one of the trust model we desire your
review of this proposal. It is documented in section 18.3 of the
following draft, but please look at 18.2 also:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-12.txt",<4417F0DE.3020901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 11:47:58
2550,MMusic,149,35,ExtensionOfPrevious,,-1,"
All type of feedback is appreciated.",<4417F0DE.3020901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 11:47:58
2551,MMusic,149,36,Thanking,,-1,"
Thanks",<4417F0DE.3020901@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2006-03-15 11:47:58
2552,MMusic,150,47,InformationProviding,,-1,"The IESG has approved the following document:
- 'Real Time Streaming Protocol 2.0 (RTSP)'
(draft-ietf-mmusic-rfc2326bis-40.txt) as Proposed Standard",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2553,MMusic,150,48,ExtensionOfPrevious,,-1,"
This document is the product of the Multiparty Multimedia Session Control
Working Group.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2554,MMusic,150,49,ExtensionOfPrevious,,-1,"
The IESG contact persons are Gonzalo Camarillo and Richard Barnes.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2555,MMusic,150,50,ExtensionOfPrevious,,-1,"
A URL of this Internet Draft is:
http://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2556,MMusic,150,51,ExtensionOfPrevious,,-1,"
Technical Summary",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2557,MMusic,150,52,ExtensionOfPrevious,,-1,"
The document defines RTSP version 2.0 which obsoletes RTSP version 1.0 defined in RFC 2326.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2558,MMusic,150,53,ExtensionOfPrevious,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level protocol for setup and control of the delivery of data with real-time properties.  RTSP provides an extensible framework to enable controlled, on-demand delivery of real-time data, such as audio and video.  Sources of data can include both live data feeds and stored clips.  This protocol is intended to control multiple data delivery sessions, provide a means for choosing delivery channels such as UDP, multicast UDP and TCP, and provide a means for choosing delivery mechanisms based upon RTP (RFC 3550).",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2559,MMusic,150,54,ExtensionOfPrevious,,-1,"
Working Group Summary",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2560,MMusic,150,55,ExtensionOfPrevious,,-1,"
The document has been work in progress for an extended period of time dating back to 2002. Earlier versions saw decent WG participation however the later versions have primarily been driven by the document authors with limited overall discussion in the group, especially towards the end of the process. There are no known issues or major discussion points, and there has been no indication of lack of consensus in the WG.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2561,MMusic,150,56,ExtensionOfPrevious,,-1,"
Document Quality",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2562,MMusic,150,57,ExtensionOfPrevious,,-1,"
The document has been reviewed in detail several times after WGLC and in preparation for the publication request and the authors have made several updates as a result of those. The document is considered to be of high quality at this point.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2563,MMusic,150,58,ExtensionOfPrevious,,-1,"
There is one known implementation of the specification, and many of the extensions compared to RTSP 1.0 have been implemented separately as well.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2564,MMusic,150,59,ExtensionOfPrevious,,-1,"
A Media type review was done for ""text/parameters"". The review thread can be found at: http://www.ietf.org/mail-archive/web/ietf-types/current/msg01656.html",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2565,MMusic,150,60,ExtensionOfPrevious,,-1,"
Personnel
Document Shepherd: Flemming Andreasen
Responsible AD: Gonzalo Camarillo",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2566,MMusic,150,61,ExtensionOfPrevious,,-1,"
RFC Editor's Note:",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2567,MMusic,150,62,ExtensionOfPrevious,,-1,"
Section 2 of this document and its subsections provide ""an informative overview
of the different mechanisms in the RTSP 2.0 protocol, to give the reader a high
level understanding"".  As such, it's very important that it be clear and well
written.  Some reviewers have found the English to be difficult.  Please take
an especially critical pen to this section, making sure that the grammar and
usage are correct, and that the language is clear.",<20140211155808.1141.55716.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-02-11 07:58:08
2568,MMusic,155,28,InformationProviding,,-1,"
During my edits for the new draft-ietf-mmusic-rfc2326bis version I ran in this text in the first paragraph of Section 13.3.  SETUP",<5F6519BF2DE0404D99B7C75607FF76FF53DBBA@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-02-22 15:00:39
2569,MMusic,155,29,ExtensionOfPrevious,,-1,"
The SETUP request for an URI specifies the transport mechanism to be
used for the streamed media.  The SETUP method may be used in three
different cases; Create an RTSP session, add a media to a session,
and change the transport parameters of already set up media stream.
When in PLAY state, using SETUP to create or add media to a session
when in PLAY state is unspecified.  Otherwise SETUP can be used in",<5F6519BF2DE0404D99B7C75607FF76FF53DBBA@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-02-22 15:00:39
2570,MMusic,155,30,ExtensionOfPrevious,,-1,"
I don't get the real meaning of the last sentence above (When in...). It does look at bit weird to me...",<5F6519BF2DE0404D99B7C75607FF76FF53DBBA@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-02-22 15:00:39
2571,MMusic,155,31,Question,,-1,"
Can anybody help with that sentence?",<5F6519BF2DE0404D99B7C75607FF76FF53DBBA@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-02-22 15:00:39
2572,MMusic,155,67,Answer,31,31,"
I guess ""[w]hen in PLAY state"" should be only once. Also you cannot create a
session if the same session is in PLAY state (implying it already exists). So
perhaps it should be something as: ""Using SETUP to add media to an existing
session, when the session is in PLAY state, is unspecified.""

In other words, SETUP can be used to change transport parameter of a media of
a PLAYing session, but need not work to add a media to a PLAYing session.
",<200802221621.45439.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-02-22 16:21:45
2573,MMusic,155,135,"Agreement,Thanking",,-1,"
Thanks for the wording. It has been fixed.",<5F6519BF2DE0404D99B7C75607FF76FF53DC55@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-02-25 09:48:35
2574,MMusic,155,181,Answer,31,31,"
Yes. The purpose was to specify that the operation of adding a media
stream when in PLAY state is not specified in such a way that you can
successfully do it in an interoperable way. Thus it was unspecified.

The issue is that when adding a media stream to a playing session you
need to get synchronization information. There is no support specified
for that.
",<47BEE1CE.20407@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-02-22 15:53:02
2575,MMusic,155,274,Question,,-1,"Hi Magnus,
Still it is not clear to me. Can I use the following interpretation?",<FE6A9D3F2979884280CE0F5F5185517B5FF096@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2008-02-23 07:21:12
2576,MMusic,155,275,ContextSetting,,-1,"
... The SETUP method may be used in three
different cases; create an RTSP session, add a media to a session,
and change the transport parameters of existing media stream.
In PLAY state, creating a session and adding a media to it are
unspecified. (In INIT and READY state, however, above both cases
are possible. In other words, SETUP can be used only for changing
transport parameters in PLAY state.(1)) The main reason is that
adding a media stream to the existing session in PLAY state requires
synchronization. However, it is unspecified. (2)",<FE6A9D3F2979884280CE0F5F5185517B5FF096@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2008-02-23 07:21:12
2577,MMusic,155,276,ExtensionOfPrevious,,-1,"
My question to (1) and (2):
To (1): We don't need to add sentence (1) because the first sentence
clearly defined 3 cases and description after it is about exception in
PLAY state.
To (2): Creating session using SETUP to the existing session(in PLAY
state) means just making another one, not related to 'existing or
already set up session'. That's why Magnus did not mention this case...
To (2): As for synchronization, it would be no problem if PLAY with
Range is sent after SETUP for adding stream. However, if there is a rule
like 'In one aggregated session, all streams should have the same
state', then the above case breaks this rule because it became 'some
streams are in PLAY state, while new stream in READY. I think this is
the actual reason.
(But I can't find such a rule from draft; however, I can understand this
meaning behind.)",<FE6A9D3F2979884280CE0F5F5185517B5FF096@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2008-02-23 07:21:12
2578,MMusic,155,391,NeutralResponse,,343,"
Well, the intention was that it would be possible to define this in the
future if someone can resolve the issues. I can agree that one shouldn't
implement any SETUP functionality in play state other than parameter
changes until one has defined how it should work. That is what would
create an interoperability issue. A future extension can always be
resolved, even with a 501 response indicating that functionlity isn't
supported.

But sure, tightening the language in this regard is fine.
",<47C2BA8E.2010101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2008-02-25 13:54:38
2579,MMusic,155,469,NeutralResponse,391,391,"
I have put it in the tracker and will come up with some wording in a while.
Tracker id 1906850  and link:
https://sourceforge.net/tracker/index.php?func=detail&aid=1906850&group_id=23194&atid=377744
",<5F6519BF2DE0404D99B7C75607FF76FF53E344@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 10:34:39
2580,MMusic,155,510,NeutralResponse,,343,"
As far as I understand, this means that server are free to do whatever they
want if this happens (start streaming without proper sync, kill the entire
session, return an error, etc...). Therefore any sane client MUST NOT try to
use it; I would agree that forbidding clients from using this explicitly is a
good idea.

Not sure we need to say anything on the server side, as this is
a ""theoretically impossible"" case.
",<200802260933.37898.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-02-26 09:33:37
2581,MMusic,155,512,"Answer,Question",,343,"
Yes.

And then, if someone ever wants to add this functionality, (s)he'd have to
specify a feature for it, so clients can detect server support, right?
",<200802260933.37898.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2008-02-26 09:33:37
2582,MMusic,155,559,NeutralResponse,510,510,"
The serve can dump an error if a client tries it. So this is seems to be ok.
",<5F6519BF2DE0404D99B7C75607FF76FF53E347@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 10:36:51
2583,MMusic,155,561,Agreement,512,512,"
Right.
",<5F6519BF2DE0404D99B7C75607FF76FF53E347@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 10:36:51
2584,MMusic,159,0,InformationProviding,,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.,<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2585,MMusic,159,34,ExtensionOfPrevious,,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-28.txt
Pages           : 297
Date            : 2011-10-28",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2586,MMusic,159,35,ExtensionOfPrevious,,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 which is defined in RFC 2326.",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2587,MMusic,159,36,ExtensionOfPrevious,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2588,MMusic,159,37,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-28.txt",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2589,MMusic,159,38,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2590,MMusic,159,39,ExtensionOfPrevious,,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-28.txt",<20111028122729.14066.44352.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-28 05:27:29
2591,MMusic,161,0,Social,,-1,"Hi,",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2592,MMusic,161,37,"InformationProviding,InformationProviding,ContextSetting",,-1,"
We have now submitted an updated version of the RTSP 1.1 draft. Until it
becomes availalbe through IETF you can find it here:",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2593,MMusic,161,38,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
http://standards.ericsson.net/westerlund/draft-ietf-mmusic-rfc2326bis-10.txt",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2594,MMusic,161,39,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",38,-1,"
You can also get a side by side DIFF here:
Warning this is an 1.7 mb large file.
http://standards.ericsson.net/westerlund/diff-rtsp-core-09-10.html",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2595,MMusic,161,40,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",38,-1,"
The major changes in this version are:",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2596,MMusic,161,41,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",40,-1,"
- Making into RTSP 1.1
- Removing PING and implementing the agreed keep-alive resolution
- Added a chapter on proxies
- Clarfications around changing transport parameters.
- Changed syntax for RTP-Info",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2597,MMusic,161,42,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",41,-1,"
This version resolves most of the open issues. However a few does stil
remain. I also expect review will find a number of smaller issues.
Please review and send comments to the MMUSIC mailing list.",<42DBA1A7.7020308@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-07-18 14:33:43
2598,MMusic,163,63,"InformationProviding,ContextSetting,InformationProviding",,-1,"Unfortunately I have more information which I have found to be
contradictory and possibly erratum.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2599,MMusic,163,64,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",63,-1,"
Quite Succinctly,",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2600,MMusic,163,65,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",,-1,"
10.7 <https://tools.ietf.org/html/rfc2326#section-10.7> TEARDOWN",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2601,MMusic,163,66,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",65,-1,"
The TEARDOWN request stops the stream delivery for the given URI,
freeing the resources associated with it. If the URI is the
presentation URI for this presentation, any RTSP session identifier
associated with the session is no longer valid. Unless all transport
parameters are defined by the session description, a SETUP request
has to be issued before the session can be played again.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2602,MMusic,163,67,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",65,-1,"
However earlier in the document.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2603,MMusic,163,68,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",67,-1,"
10.4 <https://tools.ietf.org/html/rfc2326#section-10.4> SETUP",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2604,MMusic,163,69,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",68,-1,"
The server generates session identifiers in response to SETUP
requests. If a SETUP request to a server includes a session
identifier, the server MUST bundle this setup request into the",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2605,MMusic,163,70,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",69,-1,"
existing session or return error ""459 Aggregate Operation Not
Allowed"" (see Section 11.3.10
<https://tools.ietf.org/html/rfc2326#section-11.3.10>).",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2606,MMusic,163,71,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",70,-1,"
If a users obtains a session Id related to an aggregate controlled
media and only one of the sub sessions received a ""TEARDOWN"" then the
RFC makes the server incorrectly remove the SessionId which is still
being used for the other sub-sessions.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2607,MMusic,163,72,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",71,-1,"
The draft doesn't do any better in making this clearer IMHO.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2608,MMusic,163,73,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ExtensionOfPrevious",72,-1,"
Please advise,",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2609,MMusic,163,74,"InformationSeeking,ExtensionOfPrevious,ProposeAction,StateDecision,ExtensionOfPrevious",73,-1,"
I will also probably be filling more errata unless I can be directed
on how to properly convey the information without filling it.",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2610,MMusic,163,75,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",74,-1,"
I hope all else is well as I STILL haven't heard back from anyone
regarding both the clarifications I made. (Which is pretty ridiculous,
it's been over 2 years I have been asking these questions almost)",<CACFvNHVFUe7jHEK00ja3Vppi5GYeKptOuVPi97HrYU3DdiyLCA@mail.gmail.com>,juliusfriedman@gmail.com,0.0,0,52,2015-01-18 14:33:30
2611,MMusic,163,151,NeutralResponse,71,71,"media and only one of the sub sessions received a ""TEARDOWN"" then the
RFC makes the server incorrectly remove the SessionId which is still
being used for the other sub-sessions.",<54CA37B0.6060306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-29 14:37:52
2612,MMusic,163,152,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Social,NeutralResponse",72,72,"
What I can see
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ in
Section 13.7.1 is clear on this. If you are disagreeing that this issue
is resolved. Please be explicit in what way it isn't resolved.
",<54CA37B0.6060306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2015-01-29 14:37:52
2613,MMusic,164,0,Social,,-1,"Hi,",<3EE74157.40101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-11 16:48:55
2614,MMusic,164,24,"InformationProviding,ContextSetting,InformationProviding",,-1,"
I am happy to announce that we RTSP authors has become one more. We
welcome Aravind Narasimhan as a co-author of the
draft-ietf-mmusic-rfc2326bis-??.",<3EE74157.40101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-11 16:48:55
2615,MMusic,164,25,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",24,-1,"
We also are positive that a new version of the RTSP specification will
be available before the Vienna IETF meeting.",<3EE74157.40101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-06-11 16:48:55
2616,MMusic,165,0,Social,,-1,Hi Magnus:,<758B5A159B385447B4F950DE72D7D7AD678C2F@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2005-01-23 22:01:55
2617,MMusic,165,111,"InformationProviding,ContextSetting",,-1,"
A belated reply is inlined.",<758B5A159B385447B4F950DE72D7D7AD678C2F@srsdmail01.PVNS.COM>,zeng@pvnetsolutions.com,0.0,0,17,2005-01-23 22:01:55
2618,MMusic,166,16,"InformationProviding,ContextSetting",,-1,>2. There was only one typo re item 14 below (and you said you found it).,<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2619,MMusic,166,19,"NeutralResponse,InformationProviding",16,-1,Ok.,<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2620,MMusic,166,554,"Social,Social",,-1,"Hi Thomas,
",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2621,MMusic,166,555,"NeutralResponse,ContextSetting,StateDecision",,-1,">Magnus:
>I finally have found some time to respond to your email from Dec 16., albeit
>briefly:
>1. I have logged a bug (672160) against item 7 below.",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2622,MMusic,166,556,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",555,-1,"
I think that RTCP reporting from client to server shall be supported as
default even on a interleaved TCP channel, so this needs to be clarified.
",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2623,MMusic,166,557,"Question,ContextSetting",,-1,">3. Regarding item 17 below (about Server sending TEARDOWN to Client
>and also optionally END_OF_STREAM),  are you in favor of our proposals
>(meaning
>allowing TEARDOWN on S->C and also add END_OF_STREAM?",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2624,MMusic,166,558,"InformationSeeking,InformationProviding,Answer,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",557,-1,"I think we should do our best to keep a consistent usage of the methods
and also avoid multiple ways of doing the same. In this case I think
using REDIRECT would be the preferred way, although an address is
missing to where to redirect to. This seems just to be a special case of
REDIRECT that  needs to be explained.

Regarding END_OF_STREAM, I think such a protocol extension can be added
and also be quite useful. I would envisage a that it would simple be
sent to report the last packet in a stream for the current playing
context. Similar to what RTP-Info does at stream start.

If you would like such functionality please write a draft on it that
works as an extension to RTSP.
",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2625,MMusic,166,559,"StateDecision,Social",,-1,">We will send you more comments/additions once we have come up with draft
>text for other issues (e.g., items 1 and 18 below).
>See you tomorrow on the telecom.",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2626,MMusic,166,560,"NeutralResponse,InformationProviding",559,-1,"
Good,
",<3E2E52DA.3070400@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-01-22 09:14:18
2627,MMusic,167,19,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"In section 3.6 ""Normal Play Time"" of RFC 2326 in the grammar for
npt-range you can find this line:
npt-hhmmss      =  npt-hh "":"" npt-mm "":"" npt-ss [ ""."" *DIGIT ]",<B7989DEC7B60254BBC6EF5DE01E31263419C48@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-09 11:53:52
2628,MMusic,167,20,"InformationProviding,ExtensionOfPrevious,InformationProviding",19,-1,"
Likewise this line can be found in section 3.5 of
draft-ietf-mmusic-rfc2326bis-05.txt.",<B7989DEC7B60254BBC6EF5DE01E31263419C48@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-09 11:53:52
2629,MMusic,167,21,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,UnderstandingNegative,InformationProviding,ProposeAction,UnderstandingNegative",20,-1,"
What bothers me is the part that says [ ""."" *DIGIT ]. I don't really
under stand the point in allowing zero digits in the optional fraction
part of NPT. The same can be seen in the grammar for npt-sec in the line
above in both documents. I would think that writing [ ""."" 1*DIGIT ]
would make more sense, or if there is a reason making it more clear.",<B7989DEC7B60254BBC6EF5DE01E31263419C48@mail.com.dtu.dk>,s973687@com.dtu.dk,0.0,0,63,2003-12-09 11:53:52
2630,MMusic,167,24,"Social,Social",,-1,"Hi Philip,",<3FD5BB0B.3030005@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-12-09 13:07:39
2631,MMusic,167,74,"InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction,StateDecision,InformationProviding,Agreement,Disagreement",21,-1,"
We have discussed this grammar. I understand and agree that if we were
specifying RTSP for the first time, I would definitely vote for changing
it. However today I would not like to change it as it would change what
is allowed by the grammar. Thus having this change has impact on
backwards compatibility.",<3FD5BB0B.3030005@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-12-09 13:07:39
2632,MMusic,170,0,"Social,Social",,-1,Hi,<20051103142340.29691.qmail@web52413.mail.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-11-03 06:23:40
2633,MMusic,170,15,"InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
I would like to ask a doubt from the RFC 2326(RTSP).
It says that for aggregate control the particular stream may not actually generate a packet for the Range time value returned or implied. Thus, there is no guarantee that the packet with the sequence number indicated by seq actually has the timestamp indicated by rtptime.
Why would it be so
?If the server is able to determine the RTP timestamp that would be in synch in the RTSP play response why not use the send the packet with the same RTP time stamp?
If anyone could explain it would be of great help..",<20051103142340.29691.qmail@web52413.mail.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-11-03 06:23:40
2634,MMusic,170,16,"Social,Thanking,Thanking",,-1,"
Thanks and Regards
Shobana V",<20051103142340.29691.qmail@web52413.mail.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-11-03 06:23:40
2635,MMusic,170,17,InformationProviding,,-1,"
Yahoo! FareChase - Search multiple travel sites in one click.",<20051103142340.29691.qmail@web52413.mail.yahoo.com>,vshobs@yahoo.com,0.0,0,54,2005-11-03 06:23:40
2636,MMusic,170,57,"InformationProviding,ContextSetting,StateDecision,Social,InformationProviding,NeutralResponse",15,-1,"Hi,

This almost belong more on the MMUSIC list. However your particular
question is sufficiently related to AVT to be answered here.
",<436A28B8.3030804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-11-03 16:11:52
2637,MMusic,170,59,"InformationProviding,Answer,ContextSetting,ProposeAction,InformationProviding,Answer,ProposeAction",15,15,"
The reasons that there may not be packet for the same time instant in
both video and audio. The range + RTP-Info header provides a
synchronization point. To avoid needing to specify two range <-> TS
pairs as RTCP does. RTSP compresses this to provide the corresponding TS
values for one specific point in the range. That allows the receiving
client to calculate the range value for any received RTP TS.

You should also check sections 14.38 and Appendix B in the updated RTSP
spec that should provide more explanation on this:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-11.txt
",<436A28B8.3030804@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2005-11-03 16:11:52
2638,MMusic,171,0,"Social,Social",,-1,"Hi all,",<5F6519BF2DE0404D99B7C75607FF76FF53E3AE@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 14:16:55
2639,MMusic,171,24,"InformationProviding,ContextSetting,InformationProviding",,-1,"
You might have seen the updated version of draft-ietf-mmusic-rfc2326bis-17
(http://tools.ietf.org/id/draft-ietf-mmusic-rfc2326bis).",<5F6519BF2DE0404D99B7C75607FF76FF53E3AE@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 14:16:55
2640,MMusic,171,25,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",24,-1,"
This version basically just received some editorial face lifting (fixed spelling, moved sections). Nevertheless, there are enough open items to be solved in the issue tracker.",<5F6519BF2DE0404D99B7C75607FF76FF53E3AE@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 14:16:55
2641,MMusic,171,26,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",25,-1,"
The issue tracker is available here:
https://sourceforge.net/tracker/?group_id=23194",<5F6519BF2DE0404D99B7C75607FF76FF53E3AE@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 14:16:55
2642,MMusic,171,27,"ExtensionOfPrevious,StateDecision,InformationProviding",26,-1,"
I will post unsolved items to the mmusic list and discuss them.",<5F6519BF2DE0404D99B7C75607FF76FF53E3AE@mx1.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2008-03-04 14:16:55
2643,MMusic,173,13,"Question,InformationProviding,Question,InformationProviding,ContextSetting,ProposeAction",,-1,"I am currently taking a look at RFC 2326: Real Time Streaming Protocol. The
design of RTSP/1.0 is pretty close to that of HTTP/1.0, with very similar
security and privacy considerations, but RTSP did not evolve as quickly as
HTTP. In particular, I cannot find a profile for running RTSP over SSL or
TLS in the RFC series. Is that defined elsewhere?",<01e601cf74bd$bdf51430$39df3c90$@huitema.net>,huitema@huitema.net,0.0,0,1,2014-05-20 23:27:27
2644,MMusic,173,14,"Question,InformationProviding,Question,InformationProviding,ExtensionOfPrevious",13,-1,"
Also, RTSP was widely used in the 90s. Is that still the case?",<01e601cf74bd$bdf51430$39df3c90$@huitema.net>,huitema@huitema.net,0.0,0,1,2014-05-20 23:27:27
2645,MMusic,173,24,"InformationProviding,Answer,ProposeAction,InformationProviding,Answer,ProposeAction",13,-1,"
You could take a look at RFC 4567. It does not specify TLS or SSL; it defines a key exchange for SDP and RTSP.",<D4192F6C-3B06-461F-8608-DC602BDE468A@cisco.com>,fred@cisco.com,0.0,1,0,2014-05-21 06:39:48
2646,MMusic,173,51,"Social,Social",,-1,"Hi Christian,

Am 21.05.2014 um 08:27 schrieb Christian Huitema <huitema@huitema.net>:
",<DB17078D-76BD-4EC6-AB33-2ACF5B6ACF07@gmail.com>,mls.ietf@gmail.com,1.0,0,3,2014-05-21 09:24:41
2647,MMusic,173,52,"InformationProviding,Answer,InformationProviding,Answer",13,13,"
I don’t think so, but there is an updated version of RTSP 1.0 which is RTSP 2.0 and this is in the RFC editor’s queue (https://ietf.org/doc/draft-ietf-mmusic-rfc2326bis/). RTSP 2.0 has support for TLS, actually it is MTI.
",<DB17078D-76BD-4EC6-AB33-2ACF5B6ACF07@gmail.com>,mls.ietf@gmail.com,1.0,0,3,2014-05-21 09:24:41
2648,MMusic,173,53,"InformationProviding,Answer,InformationProviding,Answer","13,14",23,"
It is still in closed environments, such as cable networks, but much less on the public Internet.

Pure HTTP and Dynamic Adaptive Streaming over HTTP (DASH) is what is used across  the public Internet for video streaming by today.
",<DB17078D-76BD-4EC6-AB33-2ACF5B6ACF07@gmail.com>,mls.ietf@gmail.com,1.0,0,3,2014-05-21 09:24:41
2649,MMusic,173,91,"InformationProviding,Answer,Answer,ContextSetting",13,13,"
I recall commenting on RTSP and TLS when we did IESG review of that.
Main comment I had (that I recall;-) was there's no equivalent of
HTTP CONNECT.

S.
",<537C5C19.6060908@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2014-05-21 08:56:09
2650,MMusic,175,0,"Social,Social",,-1,"Hi,",<9BB92CB59918E1418A06FD4E3269FABE2AB64C64@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-12-03 00:06:43
2651,MMusic,175,10,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
I have reviewed this document as part of the security directorate's ongoing effort to review all IETF documents being processed by the IESG.  These comments were written primarily for the benefit of the security area directors.  Document editors and WG chairs should treat these comments just like any other last call comments.",<9BB92CB59918E1418A06FD4E3269FABE2AB64C64@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-12-03 00:06:43
2652,MMusic,175,11,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",10,-1,"
This is a re-review as I initially reviewed version -35.  I noted there that this is a very long document and I was only able to review certain sections of that document.  The subsequent revisions have not shortened this document any.  Rather than attempt a new review, I checked the diffs from the version that I had previously reviewed up to this version.",<9BB92CB59918E1418A06FD4E3269FABE2AB64C64@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-12-03 00:06:43
2653,MMusic,175,12,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",11,-1,"
Again, I find the document to be very comprehensive and well written.  I can find no apparent security issues with this document.",<9BB92CB59918E1418A06FD4E3269FABE2AB64C64@xmb-rcd-x06.cisco.com>,clonvick@cisco.com,0.0,0,6,2013-12-03 00:06:43
2654,MMusic,179,0,"Social,InformationProviding",,-1,"Dear Dr. Henning Schulzrinne, Anup Rao, Rob Lanphier, Magnus Westerlund, Martin Stiemerling:",<20140430193757.7102.12512.idtracker@ietfa.amsl.com>,ietf-ipr@ietf.org,0.0,,,2014-04-30 12:37:57
2655,MMusic,179,11,"InformationProviding,ContextSetting,InformationProviding",,-1,"
An IPR disclosure that pertains to your Internet-Draft entitled ""Real Time
Streaming Protocol 2.0 (RTSP)"" (draft-ietf-mmusic-rfc2326bis) was submitted to
the IETF Secretariat on 2014-04-28 and has been posted on the ""IETF Page of
Intellectual Property Rights Disclosures""
(https://datatracker.ietf.org/ipr/2348/). The title of the IPR disclosure is
""Huawei Technologies Co.,Ltd's Statement about IPR related to draft-ietf-mmusic-
rfc2326bis-40."""");",<20140430193757.7102.12512.idtracker@ietfa.amsl.com>,ietf-ipr@ietf.org,0.0,,,2014-04-30 12:37:57
2656,MMusic,180,0,InformationProviding,,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF.,<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2657,MMusic,180,34,InformationProviding,,-1,"
Title           : Real Time Streaming Protocol 2.0 (RTSP)
Author(s)       : Henning Schulzrinne
Anup Rao
Rob Lanphier
Magnus Westerlund
Martin Stiemerling
Filename        : draft-ietf-mmusic-rfc2326bis-29.txt
Pages           : 300
Date            : 2012-03-12",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2658,MMusic,180,35,InformationProviding,,-1,"
This memorandum defines RTSP version 2.0 which obsoletes RTSP version
1.0 defined in RFC 2326.",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2659,MMusic,180,36,InformationProviding,,-1,"
The Real Time Streaming Protocol, or RTSP, is an application-level
protocol for setup and control of the delivery of data with real-time
properties.  RTSP provides an extensible framework to enable
controlled, on-demand delivery of real-time data, such as audio and
video.  Sources of data can include both live data feeds and stored
clips.  This protocol is intended to control multiple data delivery
sessions, provide a means for choosing delivery channels such as UDP,
multicast UDP and TCP, and provide a means for choosing delivery
mechanisms based upon RTP (RFC 3550).",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2660,MMusic,180,37,InformationProviding,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-29.txt",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2661,MMusic,180,38,InformationProviding,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2662,MMusic,180,39,InformationProviding,,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-29.txt",<20120312124826.6736.25476.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-03-12 05:48:26
2663,MMusic,180,41,"Social,Social",,-1,"Dear all,",<4F5E5128.9080001@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-03-12 20:40:24
2664,MMusic,180,101,"InformationProviding,StateDecision,InformationProviding",,-1,"
There is finally an updated RTSP 2.0 draft which incorporates all
comments we have received during the WGLC.",<4F5E5128.9080001@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-03-12 20:40:24
2665,MMusic,180,102,"Thanking,ExtensionOfPrevious,ContextSetting,Thanking",101,-1,"
Thanks to the reviewers and especially to Flemming for his very
extensive review.",<4F5E5128.9080001@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-03-12 20:40:24
2666,MMusic,180,103,"ProposeAction,ExtensionOfPrevious,ProposeAction,Social",102,-1,"
Please review the changes.",<4F5E5128.9080001@neclab.eu>,martin.stiemerling@neclab.eu,0.0,0,5,2012-03-12 20:40:24
2667,MMusic,182,0,"InformationProviding,ContextSetting",,-1,Section B.1.1 AVP contains the string,<9F1223587A755D47805AECAB7ECAF5D908C831@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2004-02-19 13:26:10
2668,MMusic,182,36,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",0,-1,"
""dest_addresses""",<9F1223587A755D47805AECAB7ECAF5D908C831@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2004-02-19 13:26:10
2669,MMusic,182,37,"InformationProviding,ExtensionOfPrevious,ContextSetting",36,-1,"
Instead of",<9F1223587A755D47805AECAB7ECAF5D908C831@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2004-02-19 13:26:10
2670,MMusic,182,38,"ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious",37,-1,"
""dest addr""",<9F1223587A755D47805AECAB7ECAF5D908C831@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2004-02-19 13:26:10
2671,MMusic,182,41,"StateDecision,Thanking,StateDecision,Thanking",38,-1,Thanks for reviewing both of you. I will fix these erros.,<40428E72.6010800@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2004-03-01 02:14:26
2672,MMusic,184,29,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction",,-1,"> The new version of draft-ietf-mmusic-rfc2326bis is just an XML-lized version
> of draft-ietf-mmusic-rfc2326bis-14.txt.
> draft-ietf-mmusic-rfc2326bis-14.txt was using tex sources
> and the first step was to convert the old draft sources to the newer xml
> format used by xml2rfc.
> Magnus and me have done a check of this version, but it would be good if
> other people could also take a look, whether the -14 and -15 are the same in
> terms of contents of the draft.",<4d0605c20706271154q54476ffk10aef075944cb50f@mail.gmail.com>,pallas@cs.stanford.edu,0.0,0,35,2007-06-27 11:54:24
2673,MMusic,184,30,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse,ContextSetting",29,-1,"
I couldn't spot any content differences, so I'm glad to know there
weren't supposed to be any.  On the formatting front, there are a
couple of places where references are rendered oddly, as in

The URI scheme ""rtsp"" requires that commands are issued via a
reliable protocol (within the Internet, TCP), while the scheme
""rtsps"" identifies a reliable transport using secure transport (TLS
[RFC4346], see Section (Section 18).

There are also some places where SET_PARAMETER and GET_PARAMETER are
missing the underscore.  I'm not sure if that's new.

joe

mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<4d0605c20706271154q54476ffk10aef075944cb50f@mail.gmail.com>,pallas@cs.stanford.edu,0.0,0,35,2007-06-27 11:54:24
2674,MMusic,184,62,"InformationProviding,StateDecision,Thanking,InformationProviding,NeutralResponse,StateDecision,Thanking",30,30,"
That is likely to be new. In the LATEX these methods where done using an
alias as the underscore has meaning there and need escaping. This is
fixed now in our source.

I will let Martin handle the references.

Thanks for the review
",<468370F2.5090601@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2007-06-28 10:27:30
2675,MMusic,184,113,"InformationProviding,Social",,-1,"Hi,

Am 27.06.2007 um 20:54 schrieb Joseph Pallas:
",<4A6C5FA3-B33E-42CF-BF74-611AAD66C613@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-07-03 14:51:55
2676,MMusic,184,115,"InformationProviding,ProposeAction,Thanking,NeutralResponse,StateDecision,Thanking",30,30,"
Ok, I will check the references.

Thanks a lot!
",<4A6C5FA3-B33E-42CF-BF74-611AAD66C613@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-07-03 14:51:55
2677,MMusic,188,0,"Social,Social",,-1,"Hi,",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2678,MMusic,188,99,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
In my AUTH48 review I found one issue around Accept header and
GET_PARAMETER and SET_PARAMETER that I think the WG needs to know of and
provide input on.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2679,MMusic,188,100,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",99,-1,"
So lets start with what Accept says:",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2680,MMusic,188,101,"ExtensionOfPrevious,ContextSetting,InformationProviding",100,-1,"
18.1.  Accept",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2681,MMusic,188,102,"ExtensionOfPrevious,ContextSetting,InformationProviding",101,-1,"
The Accept request-header field can be used to specify certain
presentation description and parameter media types [RFC6838] that are
acceptable for the response to DESCRIBE and GET_PARAMETER requests.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2682,MMusic,188,103,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding,ContextSetting",102,-1,"
My first reflection was what about SET_PARAMETER? And then I review what
SET and GET parameter actually says. The issue is that as when one want
to use message body in GET and SET one can't do it without including the
message body in the request. Thus Accept's pattern does not work. Accept
works fine for DESCRIBE, where one requests a resource and the response
message body must be one which the requesting agent supports. For how we
defined SET and GET_PARAMETER the requesting agent needs to know that
the responding entity supports the format. This makes me conclude that
Accept header can't be used with GET_PARAMETER or SET_PARAMETER.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2683,MMusic,188,104,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",103,-1,"
Thus, I think the easiest way forward is simply to remove the existing
indications that Accept header can be used with either.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2684,MMusic,188,105,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction",104,-1,"
Please provide feedback in the next two weeks (no later than 20th of
September).",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2685,MMusic,188,106,InformationProviding,,-1,"
/Magnus",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2686,MMusic,188,107,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
Below you find relevant Excepts from the spec:",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2687,MMusic,188,108,"ExtensionOfPrevious,ContextSetting,InformationProviding",107,-1,"
GET_PARAMETER says:",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2688,MMusic,188,109,"ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",108,-1,"
The other way is to specify a message body that lists the
parameter(s) that are desired to be retrieved.  The Content-Type
header (Section 18.19) is used to specify which format the message
body has.  If the receiver of the request does not support the media
type used for the message body, it SHALL respond using the error code
415 (Unsupported Media Type).  The responder to a GET_PARAMETER
request MUST use the media type of the request for the response.  For
additional considerations regarding message body negotiation, see
Section 9.3.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2689,MMusic,188,110,"ExtensionOfPrevious,ContextSetting,InformationProviding",109,-1,"
RTSP agents implementing support for responding to GET_PARAMETER
requests SHALL implement the ""text/parameters"" format (Appendix F).
This to ensure that at least one known format for parameters is
implemented and, thus, prevent parameter format negotiation failure.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2690,MMusic,188,111,"ExtensionOfPrevious,ContextSetting,InformationProviding",107,-1,"
SET_PARAMETER says:",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2691,MMusic,188,112,"ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",111,-1,"
When using a message body to list the parameter(s) desired to be set,
the Content-Type header (Section 18.19) is used to specify which
format the message body has.  If the receiver of the request is not
supporting the media type used for the message body, it SHALL respond
using the error code 415 (Unsupported Media Type).  For additional
considerations regarding message body negotiation, see Section 9.3.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2692,MMusic,188,113,"ExtensionOfPrevious,ContextSetting,InformationProviding",112,-1,"
RTSP agents implementing support for responding to SET_PARAMETER
requests SHALL implement the text/parameters format (Appendix F).
This is to ensure that at least one known format for parameters is
implemented and, thus, prevent parameter format negotiation failure.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2693,MMusic,188,114,"ExtensionOfPrevious,ContextSetting,InformationProviding",107,-1,"
9.3.  Message Body Format Negotiation",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2694,MMusic,188,115,"ExtensionOfPrevious,ContextSetting,InformationProviding",114,-1,"
The content format of the message body is provided using the Content-
Type header (Section 18.19).  To enable the responder of a request to
determine which media type it should use, the requester may include
the Accept header (Section 18.1) in a request to identify supported
media types or media type ranges suitable to the response.  In case
the responder is not supporting any of the specified formats, then
the request response will be a 406 (Not Acceptable) error code.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2695,MMusic,188,116,"ExtensionOfPrevious,ContextSetting,InformationProviding",115,-1,"
The media types that may be used on requests with message bodies need
to be determined through the use of feature-tags, specification
requirement, or trial and error.  Trial and error works because when
the responder does not support the media type of the message body, it
will respond with a 415 (Unsupported Media Type).",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2696,MMusic,188,117,"ExtensionOfPrevious,ContextSetting,InformationProviding",116,-1,"
The formats supported and their negotiation is done individually on a
per method and direction (request or response body) direction.
Requirements on supporting particular media types for use as message
bodies in requests and response SHALL also be specified on a per-
method and per-direction basis.",<d138e6c3-8d7f-c78c-8b9e-a03c304a3101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 13:59:16
2697,MMusic,188,229,"InformationProviding,ContextSetting,Social,InformationProviding",99,-1,"Hi,

This is for RTSP 2.0:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/

/Magnus
",<7924d830-68fb-af33-13e0-cd6c7d5e01fd@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2016-09-06 14:42:18
2698,MMusic,188,353,"InformationProviding,ContextSetting,StateDecision,InformationProviding",99,-1,"Adding Alissa, since she still holds the AD token for this one (we
grandfathered it when I became responsible for MMUSIC).
",<E3B60B3E-A84C-4A2E-A29B-53072FD37EEF@nostrum.com>,ben@nostrum.com,0.0,0,0,2016-09-06 10:32:17
2699,MMusic,189,58,InformationProviding,,-1,"Review instructions and related resources are at:
http://tools.ietf.org/area/sec/trac/wiki/SecDirReview",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2700,MMusic,189,59,InformationProviding,,-1,"
Jeffrey Hutzelman is next in the rotation.",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2701,MMusic,189,60,InformationProviding,,-1,"
For telechat 2013-11-21",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2702,MMusic,189,61,InformationProviding,,-1,"
Reviewer                 LC end     Draft
Chris Lonvick          TR2013-10-25 draft-ietf-mmusic-rfc2326bis-38
Sandy Murphy           T 2013-10-31 draft-ietf-netext-pd-pmip-12
Joe Salowey            TR2013-09-23 draft-ietf-sidr-bgpsec-threats-07
Yaron Sheffer          TR2013-08-16 draft-ietf-tls-oob-pubkey-10
David Waltermire       T 2013-09-30 draft-ietf-opsec-ip-options-filtering-05",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2703,MMusic,189,62,InformationProviding,,-1,"
For telechat 2013-12-05",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2704,MMusic,189,63,InformationProviding,,-1,"
Shawn Emery            T 2013-11-26 draft-ietf-cdni-requirements-12
Tobias Gondrom         T 2013-11-25 draft-ietf-json-rfc4627bis-07",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2705,MMusic,189,64,InformationProviding,,-1,"
For telechat 2013-12-19",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2706,MMusic,189,65,InformationProviding,,-1,"
Dave Cridland          T 2013-11-04 draft-ietf-httpbis-p5-range-25
Dorothy Gellert        T 2013-12-06 draft-bundesbank-eurosystem-namespace-02
Matt Lepinski          T 2013-11-04 draft-ietf-httpbis-p2-semantics-25
Klaas Wierenga         TR2013-11-04 draft-ietf-httpbis-p4-conditional-25",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2707,MMusic,189,66,InformationProviding,,-1,"
Last calls and special requests:",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2708,MMusic,189,67,InformationProviding,,-1,"
Derek Atkins             2013-11-27 draft-ietf-xrblock-rtcp-xr-qoe-12
Rob Austein              2013-11-27 draft-turner-application-cms-media-type-07
Dave Cridland          E 2013-11-21 draft-dunbar-armd-arp-nd-scaling-practices-07
Dave Cridland            2013-11-28 draft-leiba-smime-type-registry-02
Donald Eastlake          2013-11-19 draft-ietf-soc-load-control-event-package-10
Steve Hanna            E 2013-11-28 draft-ietf-pcp-nat64-prefix64-04
Dan Harkins              2013-11-26 draft-ietf-trill-oam-framework-03
David Harrington         2013-11-28 draft-ietf-6man-ug-05
Sam Hartman              2013-12-02 draft-ietf-bfd-on-lags-02
Paul Hoffman           E 2013-11-28 draft-ietf-v6ops-balanced-ipv6-security-00
Jeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05
Julien Laganier        E 2013-11-21 draft-ietf-avtcore-rtp-security-options-09
Julien Laganier        E 2013-11-21 draft-ietf-websec-key-pinning-08
Julien Laganier          2013-11-06 draft-ietf-forces-ceha-09
Alexey Melnikov        E 2013-11-21 draft-ietf-payload-rtp-howto-09
Vincent Roca             2013-04-26 draft-ietf-6man-stable-privacy-addresses-14
Joe Salowey              2013-11-27 draft-ietf-clue-telepresence-requirements-06
Yaron Sheffer            2013-11-27 draft-ietf-idr-extcomm-iana-01
Ondrej Sury              2013-11-18 draft-ietf-l2vpn-etree-reqt-05
Tina TSOU                2013-11-27 draft-ietf-l2vpn-evpn-req-05
Carl Wallace             2013-11-27 draft-ietf-mmusic-sdp-g723-g729-04
Brian Weis               2013-11-26 draft-ietf-ospf-rfc6506bis-02
Klaas Wierenga           2013-11-27 draft-ietf-pwe3-dynamic-ms-pw-19
Tom Yu                   2013-11-27 draft-ietf-sidr-rpki-rtr-impl-04
Glen Zorn                2013-08-30 draft-kaplan-insipid-session-id-03
Glen Zorn                2013-11-27 draft-turner-ct-keypackage-receipt-n-error-algs-03
kivinen@iki.fi",<21134.1909.980928.245465@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-11-21 15:15:33
2709,MMusic,191,0,"Social,Social",,-1,Greetings MMUSIC,<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2710,MMusic,191,67,"InformationProviding,ContextSetting,InformationProviding",,-1,"
As you may know, draft-ietf-mmusic-rfc2326bis-40 is currently in the RFC
Editor's queue. It has been sitting there for 589 (!) days due to a
normative reference to draft-avtcore-rtp-circuit-breakers. The ITU-T has
a dependency on RTSP 2.0 which has prevented prevented them from
publishing one of their specifications for a year and a half at this
point. The RTSP 2.0 authors, chairs and ADs (incl. Transport) have
discussed this situation and are proposing to change the reference to
draft-avtcore-rtp-circuit-breakers to being informative rather than
normative.The plan is to change it back to normative after
circuit-breakers gets published at some future point in time.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2711,MMusic,191,68,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",67,-1,"
The resulting text changes are provided below as well.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2712,MMusic,191,69,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction",68,-1,"
If anybody has any objections to this, please let us know no later than
Thursday, October 1, 2015.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2713,MMusic,191,70,"Thanking,Thanking",,-1,"
Thanks",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2714,MMusic,191,71,InformationProviding,,-1,"
Ari & Flemming (MMUSIC chairs)",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2715,MMusic,191,72,"ExtensionOfPrevious,ContextSetting,InformationProviding",68,-1,"
Proposed change:",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2716,MMusic,191,73,"ExtensionOfPrevious,ContextSetting,InformationProviding",72,-1,"
OLD
C.1.6.3.  Bit-rate adaption",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2717,MMusic,191,74,"ExtensionOfPrevious,ContextSetting,InformationProviding",73,-1,"
RTCP Receiver reports and any additional feedback from the client
MUST be used to adapt the bit-rate used over the transport for all
cases when RTP is sent over UDP.  An RTP sender without reserved
resources MUST NOT use more than its fair share of the available
resources.  This can be determined by comparing on short to medium
term (some seconds) the used bit-rate and adapt it so that the RTP
sender sends at a bit-rate comparable to what a TCP sender would
achieve on average over the same path.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2718,MMusic,191,75,"ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",74,-1,"
To ensure that the implementation's adaptation mechanism has a well
defined outer envelope, all implementations using a non-congestion
controlled unicast transport protocol, like UDP, MUST implement
Multimedia Congestion Control: Circuit Breakers for Unicast RTP
Sessions [I-D.ietf-avtcore-rtp-circuit-breakers].",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2719,MMusic,191,76,"ExtensionOfPrevious,ContextSetting,InformationProviding",,-1,"
NEW
C.1.6.3.  Bit-rate adaptation",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2720,MMusic,191,77,"ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",76,-1,"
RTCP Receiver reports and any additional feedback from the client
MUST be used to adapt the bit-rate used over the transport for all
cases when RTP is sent over UDP.  An RTP sender without reserved
resources MUST NOT use more than its fair share of the available
resources.  This can be determined by comparing on short to medium
term (some seconds) the used bit-rate and adapt it so that the RTP
sender sends at a bit-rate comparable to what a TCP sender would
achieve on average over the same path.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2721,MMusic,191,78,"ExtensionOfPrevious,ContextSetting,InformationProviding",77,-1,"
To ensure that the implementation's adaptation mechanism has a well
defined outer envelope, all implementations using a non-congestion
controlled unicast transport protocol, like UDP, MUST implement
congestion control.  A baseline safety against persistent congestion
is ""Multimedia Congestion Control: Circuit Breakers for Unicast RTP
Sessions"" [I-D.ietf-avtcore-rtp-circuit-breakers].  There is also
ongoing work on standard specifications for RTP/RTCP congestion
control in the IETF in the RMCAT WG.  Implementers are strongly
encouraged adopt the latest usable work.",<5604980C.2080808@cisco.com>,fandreas@cisco.com,0.0,1,4,2015-09-24 20:40:44
2722,MMusic,191,98,"InformationProviding,NeutralResponse,InformationProviding,Agreement",67,67,"
I am very fine with this. The effectiveness of RTP circuit breakers has
not been demonstrated in practice and they cause a number of
interoperability issues with current RTP implementations.
",<56053B09.40603@jive.com>,sperreault@jive.com,0.0,1,0,2015-09-25 08:16:09
2723,MMusic,193,0,"Social,Social",,-1,"Hi all,",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2724,MMusic,193,39,"ContextSetting,InformationProviding",,-1,"
Just to clarify the intended use of the Date header field.",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2725,MMusic,193,40,"ExtensionOfPrevious,ContextSetting,InformationProviding",39,-1,"
draft-ietf-mmusic-rfc2326bis-19.txt says this in Section 16.20. ""Date"":",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2726,MMusic,193,41,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",40,-1,"
See [H14.18].  An RTSP message containing a body MUST include a Date
header if the sending host has a clock.  Servers SHOULD include a
Date header in all other RTSP messages.",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2727,MMusic,193,42,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",41,-1,"
When adding the text out of [H14.18] to RFC2326bis we end up with this,
as the text ""Servers SHOULD include a Date header in all other RTSP
messages."" contradicts the text in RFC 2616:",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2728,MMusic,193,43,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",42,-1,"
Origin servers MUST include a Date header field in all responses,
except in these cases:",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2729,MMusic,193,44,"ExtensionOfPrevious,ContextSetting,InformationProviding",43,-1,"
1.  If the response status code is 100 (Continue) or 101 (Switching
Protocols), the response MAY include a Date header field, at the
server's option.",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2730,MMusic,193,45,"ExtensionOfPrevious,ContextSetting,InformationProviding",43,-1,"
2.  If the response status code conveys a server error, e.g. 500
(Internal Server Error) or 503 (Service Unavailable), and it is
inconvenient or impossible to generate a valid Date.",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2731,MMusic,193,46,"ExtensionOfPrevious,ContextSetting,InformationProviding",43,-1,"
3.  If the server does not have a clock that can provide a reasonable
approximation of the current time, its responses MUST NOT include
a Date header field.  In this case, the rules in section 14.18.1
MUST be followed.",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2732,MMusic,193,47,"InformationSeeking,ProposeAction,InformationProviding",42,-1,"
Any guidance is welcome :)",<547F018265F92642B577B986577D671C70016C@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-02-26 14:06:03
2733,MMusic,193,66,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,NeutralResponse",39,39,"
If the server has no accurate clock, it simply cannot fill the date field
(with meaningful informations at least). I guess dates are mostly useful for
caching, which is possibly not very relevant for RTSP.

At least, you surely cannot do media-level synchronization with that date,
since the inaccuracy will likely be too high for such purpose.
",<200902261548.39890.remi.denis-courmont@nokia.com>,remi.denis-courmont@nokia.com,0.0,0,1,2009-02-26 15:48:39
2734,MMusic,193,102,"InformationProviding,Agreement,ProposeAction,Social,InformationProviding,ProposeAction",42,-1,"Hi Martin,
Yes. It looks like contradiction at the text of
draft-ietf-mmusic-rfc2326bis-19.txt. You might simply remove 2326bis'
and remake new text...",<FE6A9D3F2979884280CE0F5F5185517B871CA4@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-02-27 18:53:54
2735,MMusic,193,103,"ExtensionOfPrevious,ContextSetting,InformationProviding",102,-1,"
1.  If the response status code is 100 (Continue) or 101 (Switching
Protocols), the response MAY include a Date header field, at the
server's option.
[jh] 100 came from HTTP but still meaningful even in RTSP.",<FE6A9D3F2979884280CE0F5F5185517B871CA4@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-02-27 18:53:54
2736,MMusic,193,104,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",103,-1,"
2.  If the response status code conveys a server error, e.g. 500
(Internal Server Error) or 503 (Service Unavailable), and it is
inconvenient or impossible to generate a valid Date.
[jh] yes. The purpose of Date header is 1) cache, 2) logging, 3) a
reference of the management of system for different locations or
countries. But not the all case we can make Date. One use case would be
the disconnection between server and realtime encoder. Still we can make
a date which could be very useful for the analysis of the problem.",<FE6A9D3F2979884280CE0F5F5185517B871CA4@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-02-27 18:53:54
2737,MMusic,193,105,"InformationSeeking,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,StateDecision,Question,InformationProviding",104,-1,"
3.  If the server does not have a clock that can provide a reasonable
approximation of the current time, its responses MUST NOT include
a Date header field.  In this case, the rules in section 14.18.1
MUST be followed.
[jh] RTSP allows client sends Request. Then, this is not limited just to
Server, but also to client. But is there anyone who saw so-called 'no
clock server or client'? In case of HTTP, it might be. But in RTSP
server? We use timestamp in RTP or whatever we call 'streaming media',
don't we? If it is not the case for RTSP, we are happy with simple text
with above only two cases.",<FE6A9D3F2979884280CE0F5F5185517B871CA4@kor1corpmail01.mediator.com>,jaehwan@vidiator.com,0.0,0,26,2009-02-27 18:53:54
2738,MMusic,193,181,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",47,47,"
Hi,

RTSP still maintains the methods for caching or asking if content is up
to date that are based on date. That is why Date is mandated for
messages with bodies. And that goes both ways between client and server.

Secondly date is good for debugging that is why it should be included in
all other messages. But of course if you don't have a clock then it is
no point in including it.

I would also like to point out that the RTSP text that overrides the
HTTP one is intended to be saying the same thing. I would keep the RTSP
specific text as it removes a few HTTP specifics that doesn't mean
anything for RTSP.

Changes are basically:

1. Mandate Date for both server and clients if they contain body content
that may use the up-to-date methods.

a. With the exception if the clock is missing, i.e. case 3 in HTTP

2. Recommend the inclusion instead of saying MAY for other messages. As
RTSP has more messages without content this more generalized explanation
is more applicable then the exceptions in 1 and 2 from HTTP.
",<49AD4EC6.5010909@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-03-03 16:37:42
2739,MMusic,193,291,"InformationProviding,ContextSetting,StateDecision,InformationProviding,StateDecision",181,-1,"Fixed in the draft.
Text is in the CVS:
http://rtspspec.cvs.sourceforge.net/viewvc/rtspspec/draft-ietf-mmusic-rfc2326bis/draft-ietf-mmusic-rfc2326bis.xml?revision=1.166&view=markup",<547F018265F92642B577B986577D671C700664@VENUS.office>,Stiemerling@nw.neclab.eu,0.0,0,4,2009-03-04 11:30:27
2740,MMusic,194,0,"Social,Social",,-1,"Hi all,",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2741,MMusic,194,111,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The new version of draft-ietf-mmusic-rfc2326bis is just an XML-lized
version of draft-ietf-mmusic-rfc2326bis-14.txt.",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2742,MMusic,194,112,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",111,-1,"
draft-ietf-mmusic-rfc2326bis-14.txt was using tex sources and the
first step was to convert the old draft sources to the newer xml
format used by xml2rfc.",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2743,MMusic,194,113,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",112,-1,"
Magnus and me have done a check of this version, but it would be good
if other people could also take a look, whether the -14 and -15 are
the same in terms of contents of the draft.",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2744,MMusic,194,114,"InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",113,-1,"
The formatting is definitely looking different and some tables are
not that nicely formatted yet. If somebody has experience with larger
tables (requiring the full page width) it would be nice if he or she
contacts me directly.",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2745,MMusic,194,115,"InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,InformationProviding,ProposeAction",114,-1,"
How we are going to proceed: As the draft is now in the new format,
it is time to get to technical issues to solve. I think Magnus and me
will drive the discussion on the list in the next days and weeks.",<62AFA1BE-91CA-4FFA-9349-7D09D3C7F47B@netlab.nec.de>,stiemerling@netlab.nec.de,0.0,0,4,2007-06-27 10:12:33
2746,MMusic,196,0,"Social,Social",,-1,"Hi all,",<6F5FB8313FE82C4EA10DA4DA40B90949C9F4BC@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2003-09-05 15:47:53
2747,MMusic,196,15,"Question,Question,ClarificationElicitation",,-1,"
in the case the RTSP server allows the client to use a TCP
persistent connection for reuest/response message transactions,
this connection will be persistent until the TEARDOWN of the session?
In other words, only the TEARDOWN of the session can close
the persistent connection?",<6F5FB8313FE82C4EA10DA4DA40B90949C9F4BC@swing.cefriel.it>,balatti@cefriel.it,0.0,0,50,2003-09-05 15:47:53
2748,MMusic,196,18,"Social,Social",,-1,"Hi Enrico,",<3F589851.1080101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-09-05 16:06:09
2749,MMusic,196,79,"InformationProviding,Answer,InformationProviding,Answer",15,-1,"
The expected behaviour for a server is to allow for non-persistent TCP
connections. This meaning that a client can connect send one or more
RTSP request and receive the responses. Then it can close the TCP
connection and to later re-establish it. A server should not close a TCP
connection unless it time-out. This time-out should be having the same
duration as the RTSP session time-out. The non-persistent connections
provide better fault tolerance if the TCP connection is lost due to lost
NAT bindings or similar network problems.",<3F589851.1080101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-09-05 16:06:09
2750,MMusic,196,80,"InformationProviding,Answer,InformationProviding,ExtensionOfPrevious","15,79",-1,"
A client it recommended to keep the TCP connection up during the whole
session to allow for server initiated requests. A erroneous behaviour
that exist in some servers is to remove the RTSP session if the TCP
connection is closed. This is one further reason to keep the TCP
connection open.",<3F589851.1080101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-09-05 16:06:09
2751,MMusic,196,81,"InformationProviding,InformationProviding,ExtensionOfPrevious",80,-1,"
In other words there are no requirement from the client side to keep the
TCP connection up until after the TEARDOWN.",<3F589851.1080101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-09-05 16:06:09
2752,MMusic,196,82,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",81,-1,"
All this are under clarification in the work to update the RTSP
specification, see section 9.3 in draft-ietf-mmusic-rfc2326bis-04.txt.",<3F589851.1080101@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-09-05 16:06:09
2753,MMusic,198,0,"Social,Social",,-1,"Hello,",<176645.57385.qm@web59203.mail.re1.yahoo.com>,gstdbg@yahoo.com,0.0,0,58,2007-02-05 05:14:12
2754,MMusic,198,35,"InformationSeeking,ContextSetting,Question,InformationProviding",,-1,"
I am currently working on an RTSP/RTP implementation,
and I wonder what a streaming server is meant to do
with RTP timestamps after an RTSP PAUSE followed
(after a few seconds, for example), by a PLAY.",<176645.57385.qm@web59203.mail.re1.yahoo.com>,gstdbg@yahoo.com,0.0,0,58,2007-02-05 05:14:12
2755,MMusic,198,36,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",35,-1,"
There are 2 possibilities for the first RTP packet
after the PLAY:
- Its timestamp is the last RTP packet's timestamp +
duration of the last RTP packet
- Or: the previous value + duration in ""real time""
between PAUSE and PLAY",<176645.57385.qm@web59203.mail.re1.yahoo.com>,gstdbg@yahoo.com,0.0,0,58,2007-02-05 05:14:12
2756,MMusic,198,37,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",36,-1,"
I tried to find some information on the internet, and
apparently the second option is more likely. The
problem is that I can't find any RFC or other standard
documents elaborating on this situation...",<176645.57385.qm@web59203.mail.re1.yahoo.com>,gstdbg@yahoo.com,0.0,0,58,2007-02-05 05:14:12
2757,MMusic,198,38,"InformationSeeking,ExtensionOfPrevious,ProposeAction,Thanking,Thanking",37,-1,"
Thank you very much for your help!",<176645.57385.qm@web59203.mail.re1.yahoo.com>,gstdbg@yahoo.com,0.0,0,58,2007-02-05 05:14:12
2758,MMusic,198,72,"InformationProviding,NeutralResponse,InformationProviding,Answer","36,37",37,"
The second option is correct. RFC 3550 section 5.1.
",<78D9A3F2-B102-4ED5-843D-F2E7B1853EA0@csperkins.org>,csp@csperkins.org,0.0,0,2,2007-02-05 13:59:16
2759,MMusic,198,84,"InformationProviding,InformationProviding",72,-1,"This is also documented in the annex ""B.2.4 Handling RTP Timestamps
after PAUSE"" of draft-ietf-mmusic-rfc2326bis-14.",<458913680702050836m14b65f59p646de02336e64743@mail.gmail.com>,xavier.marjou@orange-ftgroup.com,0.0,0,5,2007-02-05 17:36:33
2760,MMusic,201,21,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"On draft-ietf-avt-srtp-not-mandatory:
I have reviewed this draft in preparation for IETF Last Call and IESG
processing.  Clearly, this is not the best moment in history to be making
this sort of argument, given the increased focus on .  However, I think
this document makes the case pretty clearly.  It helps to have
draft-ietf-avtcore-rtp-security-options as a positive statement to go
alongside this document.",<CAL02cgRRvx8puZoDRHv39Am+2oHy44iion_x77WfiqW0hEPgxw@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-02 17:12:27
2761,MMusic,201,22,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",21,-1,"
On draft-ietf-avtcore-rtp-security-options:
I have reviewed this draft in preparation for IETF Last Call and IESG
processing.  One question to discuss briefly before IETF LC:  My major
concern is that it seems like there's a lot of old stuff in here.  Has the
WG considered explicitly marking each of the mechanisms with some sort of
recommendation level?  I would like to avoid having someone choose SDES in
a case where they could use DTLS-SRTP, for example.",<CAL02cgRRvx8puZoDRHv39Am+2oHy44iion_x77WfiqW0hEPgxw@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-02 17:12:27
2762,MMusic,201,23,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",22,-1,"
If the authors could follow up on that one point, we should be able to get
these both into LC soon.",<CAL02cgRRvx8puZoDRHv39Am+2oHy44iion_x77WfiqW0hEPgxw@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-02 17:12:27
2763,MMusic,201,57,"InformationProviding,Disagreement,InformationProviding,NeutralResponse",21,21,"
Note that the srtp-not-mandatory draft is explicitly not saying ""strong security is not mandatory"", rather it's saying that ""strong security is mandatory, but the appropriate way of providing it depends on the context, and SRTP is not always the answer"".
",<C9DBB09E-139A-456C-B79B-062AAFA60502@csperkins.org>,csp@csperkins.org,0.0,0,2,2013-11-03 08:00:57
2764,MMusic,201,59,"InformationProviding,Answer,InformationProviding,Answer,Agreement,ProposeAction",22,22,"
Such recommendations would be very helpful, but depend on the scenario. Section 5 gives some pointers, but really we need security architecture drafts for particular use cases of RTP (like the WebRTC security arch, for example).
",<C9DBB09E-139A-456C-B79B-062AAFA60502@csperkins.org>,csp@csperkins.org,0.0,0,2,2013-11-03 08:00:57
2765,MMusic,201,147,"InformationProviding,Agreement,InformationProviding,Agreement",57,57,"
I agree.  It helps though, to be able to say ""SRTP is not always the answer
... but something in this set of things should be.""
",<CAL02cgRXKvZCzdUu8Chp2J-Y1YnEoWv3A+kUNawrkHwnHq11qQ@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-03 10:18:08
2766,MMusic,201,149,"InformationProviding,Agreement,NeutralResponse,ProposeAction,Question,InformationProviding,Agreement,ProposeAction",59,59,"
I agree that if you're going to make detailed recommendations, you need
more specifics.  It seems like you could provide some general guidance
though.  Could we something like the following?
-- Arrange the mechanisms in the document in an ordered list
-- ""If more than one mechanism would work for your application, use the
higher-pref one""
-- Throw certain things in a NOT RECOMMENDED bucket, like ZRTP and the
legacy stuff in S3.2

Part of the advice should also be a reference to BCP 107 [1], ""Guidelines
for Cryptographic Key Management"".  Namely, things that provide automated
key management should be preferred over things that don't.

--Richard

[1] <http://tools.ietf.org/html/bcp107>
",<CAL02cgRXKvZCzdUu8Chp2J-Y1YnEoWv3A+kUNawrkHwnHq11qQ@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-03 10:18:08
2767,MMusic,201,152,"Social,Social",,-1,"Hi Richard,",<014501ced8c4$278636e0$7692a4a0$@gmail.com>,ron.even.tlv@gmail.com,0.0,0,3,2013-11-03 20:40:18
2768,MMusic,201,283,"InformationProviding,Disagreement,InformationProviding,Answer",149,-1,"
I think that the purpose of the security option is as the name says to list
the options and not recommend anything leaving it to the specific deployment
like RTCweb to make recommendation. In this case if we try to recommend
order it may just cause further discussion about the order and priority
which is what we wanted to avoid in this work in the first place",<014501ced8c4$278636e0$7692a4a0$@gmail.com>,ron.even.tlv@gmail.com,0.0,0,3,2013-11-03 20:40:18
2769,MMusic,201,439,"InformationProviding,NeutralResponse,ProposeAction,Question,InformationProviding,ProposeAction",283,-1,"Can we seriously not come up with some general principles here?  There are
already some in the document, e.g., in the IPsec section.

-- In general, SRTP-based solutions are preferable to things that tunnel
RTP over something else, because tunnel solutions have additional
vulnerabilities.
-- In general, mechanisms that provide automated key management are
preferable to things that don't [BCP107]

And it seems like we should clearly deprecate the legacy RTP mechanism
(S3.2), and clearly indicate that new IETF protocols should use DTLS-SRTP
instead of ZRTP (in cases where both are applicable).
",<CAL02cgSEguBA3L8qBtQ0Y=ehzJYx+9TnqYzQ63Mmz4kqoioGbA@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-05 09:17:14
2770,MMusic,201,536,"ContextSetting,Social,ProposeAction",,-1,"Richard and WG,

See inline
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2771,MMusic,201,538,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",147,147,"
I think you need to say, hopefully something in this set should be. It
is not certain that we actually have the security mechanism required for
a particular application context.
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2772,MMusic,201,540,"InformationProviding,Disagreement,InformationProviding,Answer,Disagreement",149,149,"
First of all this is an informational document, it was not written as a
recommendation document. It is a survey with some general guidelines.
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2773,MMusic,201,541,"Question,NeutralResponse,Question",149,149,"
According to which application context should that list be arranged for?
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2774,MMusic,201,543,"InformationProviding,Disagreement,NeutralResponse,InformationProviding,NeutralResponse",149,149,"
The issue is that one mechanism is more suitable in the context of
multicast but, maybe another is more suitable in another application
context. And there are relative ordering will vary.
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2775,MMusic,201,545,"InformationProviding,Disagreement,Question,InformationProviding,ContextSetting",149,149,"
Section 3.2 says:

This
method can provide confidentiality but, as discussed in Section 9 of
[RFC3550], it has extremely weak security properties and is not to be
used.

Isn't this clear enough? I don't want to use RFC 2119 language in an
Informational document that is a description, and not a recommendation
document.

For ZRTP what are your grounds for issuing the NOT RECOMMENDED. I think
we accurately describes its status.",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2776,MMusic,201,547,"InformationProviding,Agreement,InformationProviding,StateDecision",149,149,"
Yes, this we can add to section 4. Securing RTP Applications.
",<527B0567.5090706@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-06 19:13:43
2777,MMusic,201,550,"Social,Social",,-1,"Hi Colin,",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2778,MMusic,201,648,"InformationProviding,NeutralResponse,InformationProviding",59,-1,"
I came across this document before and I was really wondering whether
this is the best story the IETF can come up with.",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2779,MMusic,201,649,"InformationProviding,Disagreement,InformationProviding",59,-1,"
The argument that RTP is used in a number of different environments, as
a basis for not offering a solid security story is rather weak. The same
could be said about many other protocols the IETF develops, even about
TLS itself.",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2780,MMusic,201,650,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",649,-1,"
Have a look at TLS to see an alternative path that one could go instead.
It mandates a certain ciphersuite and adds the following qualification:",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2781,MMusic,201,651,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",650,-1,"
Mandatory Cipher Suites",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2782,MMusic,201,652,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",651,-1,"
In the absence of an application profile standard specifying
otherwise, a TLS-compliant application MUST implement the cipher
suite TLS_RSA_WITH_AES_128_CBC_SHA (see Appendix A.5 for the
definition).",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2783,MMusic,201,653,"InformationProviding,ExtensionOfPrevious,InformationProviding",650,-1,"
If there are deployments or standardization organizations believe that
they do not require security (because it just runs within their own
""secure"" network* or because it requires a different solution solution,
like the 3GPP that allows lawful intercept) then that is not a good
reason for the IETF not mandating something.",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2784,MMusic,201,654,"InformationProviding,Disagreement,InformationProviding",652,-1,"
I am wondering what motivated you write the document in this specific
style. I believe I understand the motivation for Magnus.",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2785,MMusic,201,655,"Social,Social",,-1,"
Ciao",<5278AF67.1000704@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-11-05 09:42:15
2786,MMusic,201,658,"Social,InformationProviding",,-1,"Hannes,",<4CCEDF41-F28D-4F67-95B1-AE7E6765B61E@csperkins.org>,csp@csperkins.org,0.0,0,2,2013-11-05 08:01:41
2787,MMusic,201,760,"InformationProviding,Disagreement,ProposeAction,InformationProviding,ProposeAction,UnderstandingNegative",649,-1,"
The goal of the draft is not to justify a lack of strong security. It is to explain why SRTP is not an appropriate mechanism for providing strong security for all use cases of RTP, and highlight that some scenarios need alternative strong security mechanisms. The rtp-security-options draft talks about what those options might be. If there are sections in the draft that don't make that clear, please let me know, and we can try to improve the text.",<4CCEDF41-F28D-4F67-95B1-AE7E6765B61E@csperkins.org>,csp@csperkins.org,0.0,0,2,2013-11-05 08:01:41
2788,MMusic,201,761,"InformationProviding,Disagreement,InformationProviding,NeutralResponse","651,654",-1,"
The draft says nothing about the cipher suites to be used. Both SRTP and the other security options mandate strong cipher suites, and there are no proposals to change that.",<4CCEDF41-F28D-4F67-95B1-AE7E6765B61E@csperkins.org>,csp@csperkins.org,0.0,0,2,2013-11-05 08:01:41
2789,MMusic,201,809,"InformationProviding,Disagreement,InformationProviding,Disagreement",649,649,"
I strongly disagree with that. TLS is a solution you choose to apply or
not. If your RTP application is a multicast one, then we can't do
DTLS-SRTP, because it is can't function in such an environment. Similar
observations can be made about a number of different deployment cases.
",<527935DF.3070801@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-05 10:15:59
2790,MMusic,201,811,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",654,654,"
My motivation for writing SRTP-not-mandatory document was as WG chair to
not have to argue with the Security ADs each time an RTP document passed
the IESG about the security sections. If you are doing an RTP extensions
you need to discuss what that implies security wise and what security
requirements it has. However, it is not the appropriate place to mandate
a particular solution and key-management.

What have been missing in IETF is to write the different ""This is what
you shall do, given that your RTP application class is foo"". There is
clearly a need for such a document for SIP established sessions. But I
don't volunteer to write it.

If you look at draft-ietf-mmusic-rfc2326bis, that actually normatively
require anyone supporting RTP with RTSP 2.0 to implement SRTP and MIKEY
based keying because that makes sense for RTSP.
",<527935DF.3070801@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-05 10:15:59
2791,MMusic,201,814,"Social,InformationProviding",,-1,"Richard and WG,",<52824556.8020809@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-12 16:12:22
2792,MMusic,201,865,"InformationProviding,NeutralResponse,InformationProviding,StateDecision",23,-1,"
We have updated the RTP Security Options document. This adds three
guidance sub-sections regarding automated key-management, tunnels vs
end-to-end security and plain text key considerations.",<52824556.8020809@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-12 16:12:22
2793,MMusic,201,866,"InformationProviding,ExtensionOfPrevious,InformationProviding",865,-1,"
I also fixes a missing reference. All visible in the diff:
http://www.ietf.org/rfcdiff?url2=draft-ietf-avtcore-rtp-security-options-09",<52824556.8020809@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-12 16:12:22
2794,MMusic,201,867,"ExtensionOfPrevious,ProposeAction,ProposeAction",866,-1,"
I hope everyone can take a look at these changes and react if they are
wrong or non-acceptable.",<52824556.8020809@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2013-11-12 16:12:22
2795,MMusic,201,934,"InformationProviding,NeutralResponse,ProposeAction,Thanking,InformationProviding,Agreement,ProposeAction,Thanking",867,-1,"Hey Magnus,

That looks much better.  Thanks for the text.  I will put this out to LC
along with -srtp-not-mandatory.

--Richard
",<CAL02cgRCFmUJkfj--bCCPWeRzNX0woSG9i89ugqmmEOzmXRuew@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2013-11-22 16:59:40
2796,MMusic,202,10,"InformationProviding,InformationProviding",,-1,"In Table 4 (Section 8.1.1: Status Code and Reason Phrase), the 451
response (""Parameter Not Understood"") is listed as being applicable
to the ""SET_PARAMETER"" command only.  However, elsewhere in the text,
it is described as being applicable to the ""GET_PARAMETER"" command
also.",<f06240801c9595ff9c75f@[66.80.62.44]>,finlayson@live555.com,0.0,0,6,2011-01-16 18:59:15
2797,MMusic,203,350,"InformationProviding,ContextSetting,Social,InformationProviding,ProposeAction",,-1,"Hi Thomas,

I will try to respond to your comments. I hope that people manage to
read this very long mail. If responding please trim away all unnecessary
text.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2798,MMusic,203,352,"InformationProviding,ProposeAction,Answer,InformationProviding,ProposeAction",,-1,"
The requirements are related to implementation not usage. In fact I
would believe that sending of OPTIONS on the client side may only be
Recommended.
=> So this section should be fixed to clarify the that the requirements
are regarding implementation. It should also be consider to change
OPTIONS, Sd to recommended.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2799,MMusic,203,354,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",,-1,"The reason for this change is that it removes all automatic state
changes that does not result in session deletion. Having automatic state
changes is a big problem for the state consistency between client and
server. One existing problem with the old state machine is that a client
could send a PLAY request and not know what the result of it would be.
The request could either be queued or played out directly. This may be
acceptable if one would only be interested in basic on-demand play
functionality. However to have this protocol be robust to extensions
this change is needed. One needs to know what behavior one shall expect
when sending a request.

Regarding the interoperability issue. This is currently the most evident
issue. However I don't regards it as extremely problematic. A client has
at least managed to play the stream once. There are other issues that
exist when we know that different implementations are not compatible.
One example is the behavior at the end of the stream. Some server sets
the current play out point to 0.0 when reaching the end of a media clip
will others do not. A client will not be able to be interoperable with
both servers. In this case however a simple fix exist and that is to
always include a range header. However a client not knowing this will
not be interoperable.

So far this interoperability problem has been regarded as minor compared
to the need to fix the underlying problem. A new version number would
not fix the underlying problem which is that RTSP 1.0 has major
interoperability problems due to specification shortcomings. My working
hypothesis is that we will try to fix RTSP 1.0 so that it works. Any
change resulting in interoperability problems need to be documented as I
have done in this case. (We should perhaps gather them in a special
chapter). Then if the end we can't fix the protocol without totally
breaking the interoperability then we will have to accept a new version
number. We will not fix this protocol without hurting some of the
deployed implementations at least to some extent. My goal is to let
things be minor.

In the updated version the correct reponse to a PLAY request in playing
state is: ""455 Method Not Valid in This State"".
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2800,MMusic,203,356,"InformationProviding,Agreement,ProposeAction,InformationProviding,Agreement,ProposeAction",,-1,"
Yes, I agree that we should have security feature like authentication in
the core spec or an extension spec of RTSP. The big problem is that this
is basically at the same maturity level as specifying some new
functionality. So we need someone to start writing on this. If you are
interested in this you are very welcome to volunteer to write this.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2801,MMusic,203,358,"InformationProviding,Answer,InformationProviding,ProposeAction",,-1,"
A simple type I would say, the sentence is out of date and not in line
with the BNF definition. I resolve this by checking in a version with
out the sentence ""Linear white space must be URL-escaped."" I guess that
resolves this issue.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2802,MMusic,203,360,"InformationProviding,Answer,InformationProviding",,-1,"Yes, they can be. The BNF allows for example the following ranges
clock=-20021216T164500Z, or npt=now-00:30:00. However the now-now+30 is
not valid. In the case of live sessions the most reasonable seems to be
to use the UTC format (clock) to specify a wall clock time when the
session ends. In that case a simple start time open ended is sufficient.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2803,MMusic,203,362,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",,-1,"
I think this is as resolved as it ever will be. The client is strongly
recommended to have persistent connections. If not keeping the
connection open and the server would like to do redirect/announce etc.
the client, the server will simply let the request fail. In this case
this failure will result in that the sever ends the session when it has
to. This is the incentive for a client to keep a connection alive. Of
course this must be clearly documented.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2804,MMusic,203,364,"InformationProviding,Answer,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",,-1,"
This is a new bug, would you please register it at source forge:
http://rtspspec.sourceforge.net.
Please log in before registering a bug.

However my opinion is that this channel should allow for sending RTCP
traffic also to the server. It seems simple to assume symmetry of the
identifiers. Please give your view of how this is simplest and best solved.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2805,MMusic,203,366,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",,-1,"
Please provide more details of what you think is missing. In most case I
assume that there is no need for the client to know the reason behind a
redirect as long as the correct behavior is indicated.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2806,MMusic,203,368,"InformationProviding,Answer,InformationProviding,ProposeAction",,-1,"
In cases you don't do media aggregation the use of ANNOUNCE and PING are
motivated. Of course, you can in that case see it as the presentation
URL and media-url is the same. The use of DESCRIBE I can't motivate
other way that the difference between a presentation and a media URL are
not always clear. One example of usage could be a non aggregated session
that becomes redirected. In that case the media should not be directed
to the whole presentation rather the media. If the client checks the
media description to verify that it is in fact the same media and not a
another configuration it is motivated.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2807,MMusic,203,370,"InformationProviding,Answer,InformationProviding,ProposeAction",,-1,"
The ""Date"" header MUST be sent with any request or response containing a
body. Which means that for a server only the DESCRIBE response really
MUST contain a Date header. However it good to include it also in other
request for logging, debugging purposes. For the messages with body it
is for proxy reasons so that one can judge how old the content in the
proxy is. In the case of Date it is evident that the requirement is to
have a wall time clock, i.e. capable of producing time in GMT/UTC.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2808,MMusic,203,372,"InformationProviding,Answer,Question,InformationProviding",,-1,"
There seem to be a very good reason for this. Can you really guarantee
that any thing will work and accessible for all time in the future. By
specifying the expire time one year into the future you give it a very
long life time but still bounded.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2809,MMusic,203,374,"InformationProviding,Answer,InformationProviding",,-1,"
Looking at the specification, it seems that it is assumed to be a part
of the core functionality of the protocol that is required to be supported.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2810,MMusic,203,375,"Agreement,InformationProviding,Answer",,-1,"
Yes, It certainly is
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2811,MMusic,203,377,"Question,InformationProviding,Answer,Disagreement,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"No, it does not. Not with the described mechanism of resolving this. By
requiring a client to check if the sever supports the new parameters
interoperability can be ensured. So the use of this parameter requires
that the client to include the supported header in a request prior to
the SETUP to determine if feature tag ""play.basic"" is supported by the
server. If support is signaled then the client MAY include the
client_rtcp_port. If a server receives a SETUP request with
client_rtcp_port parameter it shall include its own RTCP port in
server_rtcp_port.

I find one typo, the item name was client in the description. What was
the other one?

One big problem with the transport header is that it doesn't support
extensions. This I think must be corrected. If extensions are required
to be understood feature tags in the Require header should be used.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2812,MMusic,203,379,"InformationProviding,Answer,InformationProviding,ProposeAction",,-1,"
TEARDOWN is not different from other request. It is only a clarification
to some implementations that do close the TCP connection as a response
to the TEARDOWN request. It should be the client that initiate closing
of the TCP connection. However the server may close the TCP connection
after a time-out interval without traffic.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2813,MMusic,203,381,"Question,InformationProviding,Disagreement,NeutralResponse,Question,InformationProviding",,-1,"
I think I understand the motivation behind your request. However I don't
think such a restriction is possible in the current look of the RTSP
standard. The scenario when such a restriction is hard to enforce is: A
large number of clients are sitting behind the same proxy. The proxy
multiplex all the clients it handles into a single TCP connection. How
does the server distinguish that it is talking with many different
clients and not a single one behind the proxy?
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2814,MMusic,203,383,"InformationProviding,Disagreement,NeutralResponse,InformationProviding,ProposeAction",,-1,"
Okay, TEARDOWN in S->C may be motivated when a server needs to get rid
of all its clients and has no alternative server to REDIRECT to. However
to make this useful compared to just deleting the sessions and refusing
any connections a channel for extra information about the reason is
needed. This could be included in the body but also SIPs warning may be
appropriate.

However the END_OF_STREAM had other purposes as it was to indicate that
all media of the current request had been sent.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2815,MMusic,203,385,"InformationProviding,Agreement,NeutralResponse,ProposeAction,InformationProviding,Agreement,ProposeAction",,-1,"
This text is added to clarify that the usage of close that is evident in
some implementations today are not correct. In my view a TCP connection
should not be closed from server end unless its inactive for at least
one RTSP time-out period. It may also be kept open for longer as the
RTSP session is kept alive with RTCP messages. However I can agree that
another formulation of this may be more appropriate. I see that there
exist problems like DOS attacks by setting up many TCP connections, etc.
that would require the server to start closing connections. Please
propose how you would like it to be written.
",<3DFDF163.5000109@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-12-16 16:29:39
2816,MMusic,204,0,"Social,Social",,-1,"Hi,",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2817,MMusic,204,41,"InformationProviding,ContextSetting,InformationProviding",,-1,"
In Section 10.5 it says",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2818,MMusic,204,42,"InformationProviding,ExtensionOfPrevious,InformationProviding",41,-1,"
"" RTCP:  If RTP is used for media transport RTCP SHOULD be used.""",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2819,MMusic,204,43,"Question,InformationProviding,ExtensionOfPrevious,Question",42,-1,"
Is there a case where RTCP is not used. RTCP is not optional according to
RFC 3550. Why is this a SHOULD and not a MUST",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2820,MMusic,204,44,"InformationProviding,ContextSetting",,-1,"
Also in section C.1.2 I saw the following text:",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2821,MMusic,204,45,"InformationProviding,ExtensionOfPrevious,InformationProviding",44,-1,"
o  The RTCP/UDP packets from the server to the client MUST be sent to
the address and port given by the second address and port pair of
the ""dest_addr"" parameter.  If no second pair is specified RTCP
MUST NOT be sent.",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2822,MMusic,204,46,"InformationProviding,ExtensionOfPrevious,InformationProviding",44,-1,"
o  The RTCP/UDP packets from the client to the server MUST be sent to
the address and port given by the second address and port pair of
the ""src_addr"" parameter.  If no second pair is given RTCP MUST
NOT be sent.",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2823,MMusic,204,47,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",46,-1,"
Does this mean that you suggest sending RTP without RTCP. I would expect the
same behavior as SDP m-line where if RTCP port is not specified it will be
the RTP port+1 or the same if RTP/RTCP mux are used.",<4c0cb649.5cebd80a.296c.7731@mx.google.com>,ron.even.tlv@gmail.com,0.0,0,3,2010-06-07 12:03:01
2824,MMusic,204,127,"Social,Social",,-1,"Hi Roni, all,
",<547F018265F92642B577B986577D671C0152C6BF@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 14:14:40
2825,MMusic,204,129,"InformationProviding,Answer,Question,InformationProviding,Answer",43,43,"
Is it not optional in terms of implementation or deployment? I couldn't see a statement in RFC 3550 that it is mandatory to use, while browsing RFC 3550.

(I do not have the intention to initiate a fight about whether RTCP should be used at all or not!)

On the other hand, the statement suggest to use RTCP, but who can actually force people to use RTCP?

That is the reason for ""RTCP SHOULD be used"".

Which is inline with the definition of ""SHOULD"" according to RFC 2119:
""3. SHOULD
This word, or the adjective ""RECOMMENDED"", mean that there may exist valid reasons in particular circumstances to ignore a particular item, but the full implications must be understood and carefully weighed before choosing a different course.""
",<547F018265F92642B577B986577D671C0152C6BF@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 14:14:40
2826,MMusic,204,131,"InformationProviding,Answer,Disagreement,InformationProviding,NeutralResponse","42,47",42,"
This is not suggesting sending RTP without RTCP.

However, RTSP 2.0 gives clear guidance to implementers and operational staff how situations are handled in RTSP if RTCP is not used (for whatever reason).
",<547F018265F92642B577B986577D671C0152C6BF@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 14:14:40
2827,MMusic,205,61,"InformationProviding,ProposeAction",,-1,"There is quite a lot of rereviews for the 2013-11-21 telechat, mostly
because I was too busy to verify if your review comments were taken
into account in the new versions of the drafts. So now you need to do
it yourself :-)",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2828,MMusic,205,62,InformationProviding,,-1,"
Review instructions and related resources are at:
http://tools.ietf.org/area/sec/trac/wiki/SecDirReview",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2829,MMusic,205,63,InformationProviding,,-1,"
Dave Cridland is next in the rotation.",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2830,MMusic,205,64,InformationProviding,,-1,"
For telechat 2013-11-21",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2831,MMusic,205,65,InformationProviding,,-1,"
Reviewer                 LC end     Draft
Chris Lonvick          TR2013-10-25 draft-ietf-mmusic-rfc2326bis-38
Yoav Nir               T 2013-11-01 draft-ietf-nfsv4-labreqs-04
Radia Perlman          TR2013-08-18 draft-ietf-karp-ops-model-09
Vincent Roca           T 2013-09-24 draft-ietf-mmusic-duplication-grouping-03
Joe Salowey            TR2013-09-23 draft-ietf-sidr-bgpsec-threats-07
Tina TSOU              TR2013-09-27 draft-ietf-ecrit-unauthenticated-access-08
Tom Yu                 T 2013-10-01 draft-ietf-sidr-origin-ops-22",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2832,MMusic,205,66,InformationProviding,,-1,"
Last calls and special requests:",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2833,MMusic,205,67,InformationProviding,,-1,"
Derek Atkins             2013-11-27 draft-ietf-xrblock-rtcp-xr-qoe-12
Rob Austein              2013-11-27 draft-turner-application-cms-media-type-07
Dave Cridland            2013-11-04 draft-ietf-httpbis-p5-range-24
Dave Cridland            -          draft-dunbar-armd-arp-nd-scaling-practices-07
Phillip Hallam-Baker     2013-10-16 draft-ietf-ccamp-gmpls-ospf-g709v3-10
Jeffrey Hutzelman        -          draft-ietf-drinks-spp-protocol-over-soap-05
Leif Johansson           2013-11-04 draft-sin-sdnrg-sdn-approach-04
Simon Josefsson          2013-11-04 draft-trammell-ipfix-tcpcontrolbits-revision-04",<21106.18850.838893.155206@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2013-10-31 14:14:26
2834,MMusic,206,100,"Social,Social",,-1,"Hi Matthew,",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2835,MMusic,206,237,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse,ProposeAction",,-1,"
I can do one simplification for you. When we are discussing an End of
stream or play request we are doing this in the context of the updated
specification. However I do see that there is probably need to make some
short considerations on how this will interoperate with RFC 2326
implementation.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2836,MMusic,206,238,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",237,-1,"
However if you are not familiar with the currently ongoing work on
updating RTSP you can start with looking at the latest draft version.
However I will already now make it clear that the draft is not
publication ready. We authors are hoping to get a version out before
christmas that actual incorporates all decided fixes to the protocol.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2837,MMusic,206,239,"InformationProviding,InformationProviding",,-1,"
http://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-05.txt",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2838,MMusic,206,240,"InformationProviding,InformationProviding,ContextSetting",,-1,"
The current RTSP is a protocol stripping away all functionality that was
not implemented in RFC 2326. So the following functionality has been
removed:",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2839,MMusic,206,241,"InformationProviding,InformationProviding,ExtensionOfPrevious",240,-1,"
- Queued play
- Record and Announce methods.
- Use of non-aggregated play and pause control in Aggregated sessions.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2840,MMusic,206,242,"InformationProviding,InformationProviding,ExtensionOfPrevious",240,-1,"
More information about this work can be seen on:
http://rtsp.org
http://rtspspec.sourceforge.net",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2841,MMusic,206,243,"InformationProviding,InformationProviding",,-1,"
In regards to the end of media/play request fulfilled signalling this
does not change much. However your arguments about separating initial
and any queued play is probably not a argument we would give much
attention to.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2842,MMusic,206,244,"InformationProviding,InformationProviding,ContextSetting",,-1,"
This allows me to bring up a discussion on why this signalling is need.
Reasons I see:",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2843,MMusic,206,245,"InformationProviding,InformationProviding,ExtensionOfPrevious",244,-1,"
- For living signalling without a predestined end of the session. In
this case it seems the main goal is to inform the client that session
has ended. Possibly a user readable reason is desirable to be given,
Like ""Tonight's jam session has now ended, come back next Tuesday for
more interesting music!"". The timing of this is that the message should
be possible to give as soon as the last media has been played out.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2844,MMusic,206,246,"InformationProviding,InformationProviding,ExtensionOfPrevious",244,-1,"
- To allow the transport handler in the client to know what the last
packet it will receive to prevent unsecurity about buffering handling,
retransmission. Thus it is desired to know before the last packet is
received that it will be the last one. This is true independently of the
session type.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2845,MMusic,206,247,"InformationProviding,InformationProviding,ExtensionOfPrevious",244,-1,"
- To inform the client about that the play request has been fulfilled
and all media streams will be delivered when the given packets has been
received. However for media streams that has a determined length and for
PLAY requests with closed ranges this information is derivable to a high
degree. The exact sequence number can't be determined, however the RTP
timestamp for the end of the request can be determined.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2846,MMusic,206,248,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",244,-1,"
- Something new which we haven't discussed so far is: Error information.
If the server fails to fulfil the request during the playout. Using a
server->client message the server can inform the client that the
delivery has failed, why, and at which point in the media stream.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2847,MMusic,206,249,"Question,Question",,-1,"
Are there any more reasons for having something like this?",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2848,MMusic,206,250,"InformationProviding,InformationProviding,ProposeAction",,-1,"
I would also like to make people aware that depending on what usage are
the most important the preferred choice of delivery is different.",<3F9E9E4F.5020607@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2003-10-28 17:50:23
2849,MMusic,207,58,"Agreement,NeutralResponse,Agreement",,-1,"Yes, I agree with your summary.",<3DDD06A8.4020003@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-21 17:15:36
2850,MMusic,207,74,"ProposeAction,Social,InformationProviding,ProposeAction",,-1,"Hi Olivier,

I will try to give you some answers.
",<3DDD06A8.4020003@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-21 17:15:36
2851,MMusic,207,76,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",,-1,"
If the server offers media description that results in that the client
resolves the session level control URL to one with a trailing slash the
server must accept that URL. So the server shall not expect or require
the ""rtsp://server/xx/yy"" but rather ""rtsp://server/xx/yy/"".
",<3DDD06A8.4020003@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-21 17:15:36
2852,MMusic,207,78,"InformationProviding,NeutralResponse,InformationProviding",,-1,"There is an error in this section. This media is not offered under
aggregated control. That you detect from the lack of session level
control attribute in the SDP. As it is going to be controlled with
non-aggregated control the media URL is going to be used in the PLAY
request. So the PLAY request shall contain the following URL:
""rtsp://foo.com/test.wav/streamid=0"".

As a general note most of the example in RFC 2326 are in fact in error.
They are missing headers they should contain, URLs are wrong, etc.
",<3DDD06A8.4020003@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-21 17:15:36
2853,MMusic,207,80,"InformationProviding,ExtensionOfPrevious,InformationProviding,StateDecision",58,-1,"
All examples in the RTSP draft will be revised as soon as we have
resolved the major part of the open issues. However so far no effort has
been performed in the draft-ietf-mmusic-rfc2326bis-02.txt to correct the
examples.
",<3DDD06A8.4020003@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2002-11-21 17:15:36
2854,MMusic,208,75,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"A draft agenda is attached. Comments, corrections and additions to the
chairs please.",<CEED90B3-2CE0-11D9-9AD6-000A957FC5F2@csperkins.org>,csp@csperkins.org,0.0,0,2,2004-11-02 15:06:44
2855,MMusic,210,19,"Social,InformationProviding,Social",,-1,"Hi,
(as author, not as AD)",<4ABA0714.80300@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-09-23 13:31:32
2856,MMusic,210,20,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
This document currently under WG last call in MMUSIC WG contains
registration requests for 3 URIs (See section 22.14). Can you please
provide a review by the end of the WG last call on the 19th of October.",<4ABA0714.80300@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-09-23 13:31:32
2857,MMusic,210,21,"Thanking,Thanking",,-1,"
Thanks",<4ABA0714.80300@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2009-09-23 13:31:32
2858,MMusic,211,0,"Social,Social",,-1,"Hi,",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2859,MMusic,211,159,"InformationProviding,InformationProviding",,-1,"
There is currently an ongoing WG last call on RTSP 2.0.
The WGLC ends on May 16th, 2012.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2860,MMusic,211,160,"InformationProviding,InformationProviding",,-1,"
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2861,MMusic,211,161,"InformationProviding,InformationProviding",,-1,"
22.14.  URI Schemes",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2862,MMusic,211,162,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
This specification defines two URI schemes (""rtsp"" and ""rtsps"") and
reserves a third one (""rtspu"").  These URI schemes are defined in
existing registries which are not created by RTSP.  Registrations are
following RFC 4395[RFC4395].",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2863,MMusic,211,163,"InformationProviding,InformationProviding",,-1,"
22.14.1.  The rtsp URI Scheme",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2864,MMusic,211,164,"InformationProviding,InformationProviding",,-1,"
URI scheme name:  rtsp",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2865,MMusic,211,165,"InformationProviding,InformationProviding",,-1,"
Status:  Permanent",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2866,MMusic,211,166,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
URI scheme syntax:  See Section 20.2.1 of RFC XXXX.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2867,MMusic,211,167,"InformationProviding,InformationProviding",,-1,"
URI scheme semantics:  The rtsp scheme is used to indicate resources
accessible through the usage of the Real-time Streaming
Protocol (RTSP).  RTSP allows different operations on the
resource identified by the URI, but the primary purpose is the
streaming delivery of the resource to a client.  However, the
operations that are currently defined are: DESCRIBE,
GET_PARAMETER, OPTIONS, PLAY, PLAY_NOTIFY, PAUSE, SETUP,
SET_PARAMETER, and TEARDOWN.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2868,MMusic,211,168,"InformationProviding,InformationProviding",,-1,"
Encoding considerations:  IRIs in this scheme are defined and needs
to be encoded as RTSP URIs when used within the RTSP protocol.
That encoding is done according to RFC 3987.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2869,MMusic,211,169,"InformationProviding,InformationProviding",,-1,"
Applications/protocols that use this URI scheme name:  RTSP 1.0 (RFC
2326), RTSP 2.0 (RFC XXXX)",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2870,MMusic,211,170,"InformationProviding,InformationProviding",,-1,"
Schulzrinne, et al.    Expires September 13, 2012             [Page 222]",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2871,MMusic,211,171,"InformationProviding,InformationProviding",,-1,"
Internet-Draft   Real Time Streaming Protocol 2.0 (RTSP)      March 2012",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2872,MMusic,211,172,"InformationProviding,InformationProviding",,-1,"
Interoperability considerations:  The change in URI syntax performed
between RTSP 1.0 and 2.0 can create interoperability issues.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2873,MMusic,211,173,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Security considerations:  All the security threats identified in
Section 7 of RFC 3986 applies also to this scheme.  They need
to be reviewed and considered in any implementation utilizing
this scheme.",<4F99665D.8060404@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-04-26 17:14:37
2874,MMusic,211,176,"Social,Social",,-1,"Howdy,",<CA+9kkMAvr6eXHzB_HMVgGqBHpUpeuh-mrWRP6-Ap0w3SZLvV-Q@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-04-27 07:40:39
2875,MMusic,211,357,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ContextSetting",,-1,"
The registrations below note that there were changes in URI syntax.  I
could not find a summary of
them in 2326bis; can you provide a pointer?",<CA+9kkMAvr6eXHzB_HMVgGqBHpUpeuh-mrWRP6-Ap0w3SZLvV-Q@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-04-27 07:40:39
2876,MMusic,211,358,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
rtsp was already registered in the URI Schemes registry as permanent;
significant changes to the syntax
would probably require minting a new scheme to avoid the
interoperability problems you note below.",<CA+9kkMAvr6eXHzB_HMVgGqBHpUpeuh-mrWRP6-Ap0w3SZLvV-Q@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-04-27 07:40:39
2877,MMusic,211,526,"Social,Thanking,Thanking",,-1,"Hi Ted,

Thanks for the review.
",<4FA13522.6020103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:22:42
2878,MMusic,211,528,"InformationProviding,Answer,InformationProviding,Answer,ContextSetting",357,357,"
The changes section in the I-D says the following that applies to the URI.

*  Added a fragment part to the RTSP URI.  This seemed to be
indicated by the note below the definition, however, it was not
part of the ABNF.

Which is clearly not the whole story. Thus I have also checked the
Syntax differences between the two specs.

RFC2326 defines the URI as:

rtsp_URL  =   ( ""rtsp:"" | ""rtspu:"" )
""//"" host [ "":"" port ] [ abs_path ]
host      =   <A legal Internet host domain name of IP address
(in dotted decimal form), as defined by Section 2.1
of RFC 1123>
port      =   *DIGIT

abs_path is defined in [H3.2.1].
",<4FA13522.6020103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:22:42
2879,MMusic,211,529,"InformationProviding,ExtensionOfPrevious,InformationProviding","357,528",357,"
abs_path       = ""/"" rel_path
rel_path       = [ path ] [ "";"" params ] [ ""?"" query ]

path           = fsegment *( ""/"" segment )
fsegment       = 1*pchar
segment        = *pchar

params         = param *( "";"" param )
param          = *( pchar | ""/"" )

scheme         = 1*( ALPHA | DIGIT | ""+"" | ""-"" | ""."" )
net_loc        = *( pchar | "";"" | ""?"" )

query          = *( uchar | reserved )
fragment       = *( uchar | reserved )

pchar          = uchar | "":"" | ""@"" | ""&"" | ""="" | ""+""
uchar          = unreserved | escape
unreserved     = ALPHA | DIGIT | safe | extra | national

escape         = ""%"" HEX HEX
reserved       = "";"" | ""/"" | ""?"" | "":"" | ""@"" | ""&"" | ""="" | ""+""
extra          = ""!"" | ""*"" | ""'"" | ""("" | "")"" | "",""
safe           = ""$"" | ""-"" | ""_"" | "".""
unsafe         = CTL | SP | <""> | ""#"" | ""%"" | ""<"" | "">""
national       = <any OCTET excluding ALPHA, DIGIT,
reserved, extra, safe, and unsafe>
",<4FA13522.6020103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:22:42
2880,MMusic,211,530,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting","357,529",357,"
While draft-ietf-mmusic-rfc2326bis-29 defines it as:

RTSP-URI       =  schemes "":"" URI-rest
RTSP-REQ-URI   =  schemes "":"" URI-req-rest
RTSP-URI-Ref   =  RTSP-URI / RTSP-Relative
RTSP-REQ-Ref   =  RTSP-REQ-URI / RTSP-REQ-Rel
schemes        =  ""rtsp"" / ""rtsps"" / scheme
scheme         =  < As defined in RFC 3986>
URI-rest       =  hier-part [ ""?"" query ] [ ""#"" fragment ]
URI-req-rest   =  hier-part [ ""?"" query ]
; Note fragment part not allowed in requests
hier-part      =  ""//"" authority path-abempty

RTSP-Relative  =  relative-part [ ""?"" query ] [ ""#"" fragment ]
RTSP-REQ-Rel   =  relative-part [ ""?"" query ]
relative-part  =  ""//"" authority path-abempty
/ path-absolute
/ path-noscheme
/ path-empty

authority      =  < As defined in RFC 3986>
query          =  < As defined in RFC 3986>
fragment       =  < As defined in RFC 3986>

path           =  path-abempty    ; begins with ""/"" or is empty
/ path-absolute ; begins with ""/"" but not ""//""
/ path-noscheme ; begins with a non-colon segment
/ path-rootless ; begins with a segment
/ path-empty    ; zero characters

path-abempty   =  *( ""/"" segment )
path-absolute  =  ""/"" [ segment-nz *( ""/"" segment ) ]
path-noscheme  =  segment-nz-nc *( ""/"" segment )
path-rootless  =  segment-nz *( ""/"" segment )
path-empty     =  0<pchar>

segment        =  *pchar ["";"" *pchar]
segment-nz     =  ( 1*pchar ["";"" *pchar]) / ("";"" *pchar)
segment-nz-nc  =  ( 1*pchar-nc ["";"" *pchar-nc]) / ("";"" *pchar-nc)
; non-zero-length segment without any colon "":""

UPALPHA         =  %x41-5A ; any US-ASCII uppercase letter ""A""..""Z""
LOALPHA         =  %x61-7A ;any US-ASCII lowercase letter ""a""..""z""
ALPHA           =  UPALPHA / LOALPHA
DIGIT           =  %x30-39 ; any US-ASCII digit ""0""..""9""
safe            =  ""$"" / ""-"" / ""_"" / ""."" / ""+""
extra           =  ""!"" / ""*"" / ""'"" / ""("" / "")"" / "",""
unreserved      =  ALPHA / DIGIT / safe / extra
pct-encoded    =  < As defined in RFC 3987>

pchar          =  unreserved / pct-encoded / sub-delims / "":"" / ""@""
pchar-nc       =  unreserved / pct-encoded / sub-delims / ""@""

sub-delims     =  ""!"" / ""$"" / ""&"" / ""'"" / ""("" / "")""

So actual changes for the rtsp scheme I have found are:

- Fragments added with syntax. As the previous change comments says
there are discussion of URI fragments in RFC2326 but no syntax defined.
However, fragments are not allowed in request URIs.

- Support for IPV6 literal in host part and future IP literals through
RFC 3986 defined mechanism.

- It defines a relative format to use in RTSP protocol elements that is
not required to start with ""/"". This was not allowed in RFC2326 due to
the syntax definition.

There might be more but I have reviewed the syntax fairly careful. But

In addition the URI related changes the ID does are:

- Defining the syntax for the rtsps scheme which is in use but not defined.

- Register the rtspu scheme defined in RFC 2326 but not registered.
",<4FA13522.6020103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:22:42
2881,MMusic,211,532,"InformationProviding,Agreement,NeutralResponse,ProposeAction,InformationProviding,Agreement,ProposeAction",358,358,"
I agree that if we would have significant changes it would be
problematic. At the same time introducing a new scheme for rtsp would
also have been problematic. I consider the above changes to be minor and
to extend the functionality of the old definition, not change what has
existed since RFC 2326. The new extended functionality can cause failure
if you try to use these. Thus the documentation of these changes needs
to be improved. I will take it as WG last call comment.
",<4FA13522.6020103@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-02 15:22:42
2882,MMusic,211,535,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"Please note that the URI/IRI registration guidelines (4395bis) have a proposed ""fix"":",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2883,MMusic,211,731,"InformationProviding,ExtensionOfPrevious,InformationProviding",535,-1,"
http://wiki.tools.ietf.org/wg/iri/trac/ticket/125",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2884,MMusic,211,732,"ContextSetting,InformationProviding",,-1,"
to add the sentence:",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2885,MMusic,211,733,"InformationProviding,ExtensionOfPrevious,InformationProviding",732,-1,"
""However, the registration defines <scheme> and the syntax and semantics of <fragment>  depends only on the media type of the representation accessed. New scheme definitions MUST NOT define syntax or semantics of fragment identifiers; that is, registration specifications should define the syntax of <scheme-specific-part> and its meaning for each <scheme> defined.""",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2886,MMusic,211,734,"InformationProviding,ExtensionOfPrevious,InformationProviding",733,-1,"
That is, the recommendation is that scheme registrations do *not* specify the syntax or meaning of fragment identifiers.",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2887,MMusic,211,735,"InformationProviding,InformationProviding",,-1,"
So ""Added a fragment part to the RTSP URI.  "" might not be considered an improvement.",<C68CB012D9182D408CED7B884F441D4D194AD547DE@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-07 16:27:53
2888,MMusic,211,783,"Question,InformationProviding,NeutralResponse,ProposeAction,Social,Question,ClarificationElicitation,InformationProviding",735,735,"
Larry,

Can you please clarify something for me. What I have done is that I have
made it clear in the URI syntax that the fragment ABNF construct from
RFC 3986 MAY occur in an valid rtsp URI syntax. Are you saying that this
is not the right thing to do? How could I then indicate the appropriate
syntax  when the fragment identifier occur with the URI scheme being
defined? Can't I even say that fragments is not allowed for a scheme?
This appear to be the case if one would implicitly define the fragment
in an URI scheme.
",<4FA8EB2E.8070609@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-08 11:45:18
2889,MMusic,211,811,"InformationProviding,Answer,Disagreement,InformationProviding,Answer",783,783,"
It's pointless, as a URI scheme definition can't override RFC 3986, and
parsing of scheme name and fragment are already defined by RFC 3986.

Optimally, a new scheme definition just defines the scheme-specific part.
",<4FA8F231.90407@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 12:15:13
2890,MMusic,211,813,"Answer,Disagreement,Answer",783,783,"
No.
",<4FA8F231.90407@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 12:15:13
2891,MMusic,211,815,"Answer,Agreement,InformationProviding",783,783,"
Exactly :-)
",<4FA8F231.90407@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 12:15:13
2892,MMusic,211,879,"Question,InformationProviding,Disagreement,Question,InformationProviding,Disagreement,ProposeAction","811,815",815,"
But, then what I have done isn't wrong either as I haven't override the
rules for fragment, only made it clear how they interface with the URI
definition. From my perspective I can remove the fragment syntax
definition, but I would instead at least explicitly call out that
fragments may occur following RFC 3986 syntax. Personally I don't see
that as being better.

Secondly, when we are on this topic. Can someone answer how you
determine the media type for an rtsp URI? RTSP URI points to resources
that can provide controlled playback of the resource using any number of
media types in form of RTP payloads formats depending on what is
suitable for the resource. In fact from issuing an PLAY request on an
audio only resource you still can receive a media stream where the
format it is encoded my actually change during the playback operation.

To be clear I don't plan to define a fragment handling format for RTSP
URIs, but there has been discussion in the past the desire has been to
do something that is media format agnostic. The goal has been to have an
uri where you basically say: Play this resource from 5 min 10 seconds
until 9 min 37 seconds. The proposal is in this 2005 draft.
http://tools.ietf.org/html/draft-pfeiffer-temporal-fragments-03

But, if the above really isn't possible the question of fragments for
RTSP is really mote and is just a waste of time to discuss.
",<4FA907F7.3000306@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-05-08 13:48:07
2893,MMusic,211,944,"InformationProviding,NeutralResponse,InformationProviding,Agreement",879,879,"
+0.5.

I agree that what the spec does isn't wrong; it's just a bit misleading
in that it implies that a URI scheme definition has *any* authority over
the fragment identifier.
",<4FA90E28.2040405@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 14:14:32
2894,MMusic,211,946,"InformationProviding,NeutralResponse,InformationProviding,ContextSetting",879,879,"
As Larry just mentioned: <http://www.w3.org/TR/media-frags/>
",<4FA90E28.2040405@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 14:14:32
2895,MMusic,211,965,"InformationProviding,Disagreement,InformationProviding,Disagreement",813,813,"
I'm not sure I agree with this.  If a registration is intended to
create an identifier that has no associated resource (and thus no
media type), it could say that fragments are not permitted.  This is a
restatement of something that can be inferred from 3986, but I think
it's a useful thing to reinforce.
",<CA+9kkMCOatpOO2P5c0PxSt=CKfUCG2pOaKYNkP-e-80ianps1Q@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-05-08 10:11:22
2896,MMusic,211,998,"InformationProviding,NeutralResponse,InformationProviding",965,-1,"Note that the URNbis working group has been discussing fragment identifiers for URNs.
If you say a URN is merely a URI using the ""urn:"" scheme, then perhaps whether
URNs allow fragment identifiers should be out of scope for the URNbis working group.",<C68CB012D9182D408CED7B884F441D4D194AE353E9@nambxv01a.corp.adobe.com>,masinter@adobe.com,0.0,0,5,2012-05-08 10:14:06
2897,MMusic,211,1026,"InformationProviding,NeutralResponse,Question,InformationProviding",965,965,"
A URI has an associated resource *by definition*.

The interesting question is whether there's a way to retrieve a sequence
of octets describing it...
",<4FA95C23.3030802@gmx.de>,julian.reschke@gmx.de,0.0,0,0,2012-05-08 19:47:15
2898,MMusic,211,1059,"InformationProviding,NeutralResponse,InformationProviding,NeutralResponse",1026,1026,"
Well, perhaps a less theoretical distinction would be whether or not
what a URI is associated can have a media type.  A media type for
mailto:ted.ietf@gmail.com is
not really sensible; a fragment for that identifier is thus not sensible.
",<CA+9kkMBzae-tcMSjidwLF5kD5_FD1soNDGOgWA+jLLH0QYVLfA@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-05-08 10:55:57
2899,MMusic,211,1082,"InformationProviding,Disagreement,InformationProviding,Disagreement",1059,1059,"
No, fragments have nothing to do with the definition of schemes.
They occasionally have something to do with how schemes are used,
such as

mailto:ted.ietf@gmail.com#subject

could be used, for example, to refer to either the owner of that mailbox
or to opening an email entry form with ""ted.ietf@gmail.com"" pre-filled
in the To field and the active cursor placed in an input field named
subject.  We don't know its true definition, if any, until someone
builds a system that happens to use the identifier in that fashion.

....Roy",<F83F17D2-8E61-4F43-A183-8EC457291A59@gbiv.com>,fielding@gbiv.com,0.0,0,4,2012-05-08 11:36:24
2900,MMusic,211,1108,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",1082,1082,"
In the context of registration, I personally believe that a definition
of how a scheme is expected to be used is sensible.  In that context,
stating whether or not you'd expect to see fragments in the given
usage would be appropriate, provided it doesn't contradict the core
spec.  At a base level, the core spec says that fragments allow you to
identify secondary resources related to the main resource; if that's
not expected because of the semantics of the scheme, I think it's
useful to say so.
",<CA+9kkMBe69VFLWjf8jG_J1yXPG6Gc7CsGp=xTqDwrooGZ1fxQg@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-05-08 13:56:21
2901,MMusic,211,1181,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ContextSetting,ProposeAction",1082,1082,"
This is what both http://tools.ietf.org/html/rfc6068 (""The 'mailto' URI
Scheme"") and http://tools.ietf.org/html/draft-duerst-eai-mailto-03 (an
update to include EAI) currently say on this topic:

Note that this specification, like any URI scheme specification, does
not define syntax or meaning of a fragment identifier (see [STD66]),
because these depend on the type of a retrieved representation.  In
the currently known usage scenarios, a 'mailto' URI cannot be used to
retrieve such representations.  Therefore, fragment identifiers are
meaningless, SHOULD NOT be used on 'mailto' URIs, and SHOULD be
ignored upon resolution.  The character ""#"" in <hfvalue>s MUST be
escaped as %23.

This seems to be fully in line with the discussion up to here, including
Roy's comment above, but if anybody thinks it needs to be changed,
please send some new proposed wording.

Taking the above text, and adopting it for the rtsp situation, might
lead to something like:

Note that this specification, like any URI scheme specification, does
not define syntax or meaning of a fragment identifier (see [STD66]),
because these depend on the type of a retrieved representation.  For
'rtsp', 'rtsps', and 'rtspu' URIs, care has to be taken that a
fragment identifier designates equivalent subresources across the
media types that can be returned when resolving the URI.
",<4FA9CB84.8030609@it.aoyama.ac.jp>,duerst@it.aoyama.ac.jp,0.0,0,1,2012-05-09 10:42:28
2902,MMusic,211,1182,"Agreement,InformationProviding,ProposeAction,InformationProviding,Agreement,ProposeAction","1082,783",1082,"
In terms of syntax, I think that as things stand, Magnus has a point.
Scheme definition specs that use rules in the way this is done in
http://tools.ietf.org/html/rfc6068#section-2, i.e. without adding an
optional fragment part, are technically wrong. On the other hand, specs
such as the XMPP URI/IRI spec, which includes #(i)fragment (see
http://tools.ietf.org/html/rfc5122#page-6), are technically correct.

The fact that e.g. the mailto: spec gets this wrong seems to be a
leftover of the change from RFC 2396, where fragments were not
considered to be part of an URI, but together with an URI formed what
was called an URI reference (see
http://tools.ietf.org/html/rfc2396#appendix-A), and RFC 3986
(http://tools.ietf.org/html/rfc3986#appendix-A), where URIs
syntactically included fragment identifiers. This was the right change
for a lot of reasons, but as we are finding out now somehow seems to
leave URI scheme designers in a tough place because syntactically, they
should mention the fragment, but semantically, they better wouldn't.

I think we need to look at some more URI/IRI registrations from this
point of view to see what's best for RFC 4395bis.
",<4FA9CB84.8030609@it.aoyama.ac.jp>,duerst@it.aoyama.ac.jp,0.0,0,1,2012-05-09 10:42:28
2903,MMusic,211,1225,"InformationProviding,Disagreement,ProposeAction,InformationProviding,Disagreement,ProposeAction",1181,1181,"
The second to last sentence is wrong.  That spec cannot make
normative requirements about something that is out of scope;
any fragment is completely outside the scope of a URI scheme
specification.  Just remove the ""Therefore, ... resolution.""
sentence -- it serves no useful purpose.

....Roy",<2591522F-75D2-4AE7-A4F9-02528B91433D@gbiv.com>,fielding@gbiv.com,0.0,0,4,2012-05-08 21:28:56
2904,MMusic,211,1289,"Question,InformationProviding,NeutralResponse,Question,InformationProviding",1082,1082,"
Would you still object if it simply said ""Therefor fragment
identifiers are meaningless in current email contexts.""?  I think this
remains useful and it eliminates the normative language.
",<CA+9kkMA_aRticFB+G9m-4K05uy9wrFu4OTzq1dZYp=MTmQL9tQ@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2012-05-09 07:21:28
2905,MMusic,211,1328,"InformationProviding,Answer,UnderstandingNegative,InformationProviding,UnderstandingNegative",1289,1289,"
I wouldn't object, but I personally don't like talking about
""current contexts"" in a spec that will live for decades.
I don't see why it matters -- if it is meaningless, nobody
will use them; if they use them, they won't be meaningless.

....Roy",<3E660409-CFC3-4491-923C-070939F72B17@gbiv.com>,fielding@gbiv.com,0.0,0,4,2012-05-10 10:44:21
2906,MMusic,211,1370,"InformationProviding,Agreement,ProposeAction,Question,InformationProviding,Agreement",1328,1328,"
I agree that ""current contexts"" is the wrong wording. What about
something like:
""Therefore, at the time of publication of this document, fragment
identifiers are meaningless in current email contexts.""
",<4FACAE4F.1040707@it.aoyama.ac.jp>,duerst@it.aoyama.ac.jp,0.0,0,1,2012-05-11 15:14:39
2907,MMusic,212,218,"InformationProviding,InformationProviding",,-1,"INTERNET ENGINEERING STEERING GROUP (IESG)
Summarized Agenda for the 2013-12-05 IESG Teleconference",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2908,MMusic,212,219,"InformationProviding,InformationProviding",,-1,"
This agenda was generated at 2013-11-28 14:18:53 PST
Up-to-date web version of this agenda can be found at:
http://datatracker.ietf.org/iesg/agenda/",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2909,MMusic,212,220,"ContextSetting,InformationProviding",,-1,"
1. Administrivia",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2910,MMusic,212,221,"InformationProviding,InformationProviding",220,-1,"
1.1 Roll Call
1.2 Bash the Agenda
1.3 Approval of the Minutes of Past Telechats
1.4 List of Remaining Action Items from Last Telechat",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2911,MMusic,212,222,"ContextSetting,InformationProviding,ContextSetting",,-1,"
OUTSTANDING TASKS",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2912,MMusic,212,223,"InformationProviding,InformationProviding",222,-1,"
Last updated: November 22, 2013",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2913,MMusic,212,224,"InformationProviding,ExtensionOfPrevious,InformationProviding",222,-1,"
o Jari Arkko to draft a call for nominations for the IESG appointment
to the IAOC for 2014.",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2914,MMusic,212,225,"InformationProviding,ExtensionOfPrevious,InformationProviding",222,-1,"
o Ted Lemon to write a note to ICANN indicating that the IESG is
considering allocating Special-use Top-Level Domain Names for Peer-
to-Peer Applications and requesting feedback.",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2915,MMusic,212,226,"InformationProviding,ExtensionOfPrevious,InformationProviding",223,-1,"
o Ted Lemon to write up a document describing how the IESG should
figure out whether to do early allocations for special-use TLDs, and
present it to the IESG for discussion.",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2916,MMusic,212,227,"ContextSetting,InformationProviding",,-1,"
2. Protocol Actions
2.1 WG Submissions
2.1.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2917,MMusic,212,228,"InformationProviding,ExtensionOfPrevious,InformationProviding",227,-1,"
o draft-ietf-soc-load-control-event-package-11  - IETF stream
A Session Initiation Protocol (SIP) Load Control Event Package
(Proposed Standard)
Note: Volker Hilt (volker.hilt@alcatel-lucent.com) is the document
shepherd.
Token: Richard Barnes
IANA Review: IANA - Review Needed
Consensus: Unknown",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2918,MMusic,212,229,"InformationProviding,ExtensionOfPrevious,InformationProviding",227,-1,"
o draft-ietf-forces-ceha-09  - IETF stream
ForCES Intra-NE High Availability (Proposed Standard)
Token: Adrian Farrel
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2919,MMusic,212,230,"InformationProviding,ExtensionOfPrevious,InformationProviding",227,-1,"
o draft-ietf-ipfix-mediation-protocol-08  - IETF stream
Operation of the IP Flow Information Export (IPFIX) Protocol on
IPFIX Mediators (Proposed Standard)
Token: Joel Jaeggli
IANA Review: Version Changed - Review Needed
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2920,MMusic,212,231,"InformationProviding,ExtensionOfPrevious,InformationProviding",227,-1,"
o draft-ietf-json-rfc4627bis-07  - IETF stream
The JSON Data Interchange Format (Proposed Standard)
Token: Pete Resnick
IANA Review: IANA - Not OK
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2921,MMusic,212,232,InformationProviding,,-1,"
o draft-ietf-ospf-rfc6506bis-03  - IETF stream
Supporting Authentication Trailer for OSPFv3 (Proposed Standard)
Token: Stewart Bryant
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2922,MMusic,212,233,"ContextSetting,InformationProviding",,-1,"
2.1.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2923,MMusic,212,234,"InformationProviding,ExtensionOfPrevious,InformationProviding",233,-1,"
o draft-ietf-mmusic-rfc2326bis-38  - IETF stream
Real Time Streaming Protocol 2.0 (RTSP) (Proposed Standard)
Note: Document Shepherd: Flemming Andreasen (fandreas@cisco.com)
Token: Gonzalo Camarillo
IANA Review: IANA OK - Actions Needed
Consensus: Yes
Was deferred by Joel Jaeggli on 2013-11-20",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2924,MMusic,212,235,"ContextSetting,InformationProviding",,-1,"
2.2 Individual Submissions
2.2.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2925,MMusic,212,236,"InformationProviding,ExtensionOfPrevious,InformationProviding",235,-1,"
o draft-leiba-smime-type-registry-02  - IETF stream
Creation of a registry for smime-type parameter values (Proposed
Standard)
Token: Sean Turner
IANA Review: IANA OK - Actions Needed
Consensus: Unknown",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2926,MMusic,212,237,"ContextSetting,InformationProviding",,-1,"
2.2.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2927,MMusic,212,238,"InformationProviding,ExtensionOfPrevious,InformationProviding",237,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2928,MMusic,212,239,"ContextSetting,InformationProviding",,-1,"
2.3 Status Changes
2.3.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2929,MMusic,212,240,"InformationProviding,ExtensionOfPrevious,InformationProviding",239,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2930,MMusic,212,241,InformationProviding,,-1,"
2.3.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2931,MMusic,212,242,InformationProviding,,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2932,MMusic,212,243,"ContextSetting,InformationProviding",,-1,"
3. Document Actions
3.1 WG Submissions
3.1.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2933,MMusic,212,244,"InformationProviding,ExtensionOfPrevious,InformationProviding",243,-1,"
o draft-ietf-cdni-requirements-13  - IETF stream
Content Distribution Network Interconnection (CDNI) Requirements
(Informational)
Token: Spencer Dawkins
IANA Review: IANA OK - No Actions Needed
Consensus: Unknown",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2934,MMusic,212,245,"InformationProviding,ExtensionOfPrevious,InformationProviding",243,-1,"
o draft-ietf-trill-oam-framework-03  - IETF stream
TRILL OAM Framework (Informational)
Token: Ted Lemon
IANA Review: IANA OK - No Actions Needed
Consensus: Unknown",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2935,MMusic,212,246,"InformationProviding,ExtensionOfPrevious,InformationProviding",243,-1,"
o draft-ietf-multimob-handover-optimization-06  - IETF stream
PMIPv6 multicast handover optimization by the Subscription
Information Acquisition through the LMA (SIAL) (Experimental)
Token: Brian Haberman
IANA Review: IANA OK - Actions Needed
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2936,MMusic,212,247,"InformationProviding,ExtensionOfPrevious,InformationProviding",243,-1,"
o draft-ietf-l2vpn-etree-reqt-05  - IETF stream
Requirements for Metro Ethernet Forum (MEF) Ethernet-Tree (E-Tree)
Support in L2VPN (Informational)
Token: Stewart Bryant
IANA Review: IANA OK - No Actions Needed
Consensus: Yes",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2937,MMusic,212,248,"ContextSetting,ContextSetting",,-1,"
3.1.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2938,MMusic,212,249,"InformationProviding,ExtensionOfPrevious,InformationProviding",248,-1,"
o draft-ietf-geopriv-res-gw-lis-discovery-07  - IETF stream
Location Information Server (LIS) Discovery using IP address and
Reverse DNS (Informational)
Note: Alissa Cooper (acooper@cdt.org) is the document shepherd.
Token: Richard Barnes
IANA Review: IANA OK - No Actions Needed
Consensus: Unknown",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2939,MMusic,212,250,"InformationProviding,ContextSetting,InformationProviding",248,-1,"
o draft-ietf-karp-ops-model-09  - IETF stream
Operations Model for Router Keying (Informational)
Token: Stewart Bryant
IANA Review: IANA OK - No Actions Needed
Consensus: Yes
Was deferred by Benoit Claise on 2013-11-21",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2940,MMusic,212,251,"ContextSetting,InformationProviding",,-1,"
3.2 Individual Submissions Via AD
3.2.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2941,MMusic,212,252,"InformationProviding,ExtensionOfPrevious,InformationProviding",251,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2942,MMusic,212,253,"ContextSetting,ContextSetting",,-1,"
3.2.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2943,MMusic,212,254,"InformationProviding,ExtensionOfPrevious,InformationProviding",253,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2944,MMusic,212,255,"ContextSetting,ContextSetting",,-1,"
3.3 Status Changes
3.3.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2945,MMusic,212,256,"InformationProviding,ExtensionOfPrevious,InformationProviding",255,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2946,MMusic,212,257,"ContextSetting,ContextSetting",,-1,"
3.3.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2947,MMusic,212,258,"InformationProviding,ExtensionOfPrevious,InformationProviding",257,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2948,MMusic,212,259,"ContextSetting,ContextSetting",,-1,"
3.4 IRTF and Independent Submission Stream Documents
3.4.1 New Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2949,MMusic,212,260,"InformationProviding,ContextSetting,InformationProviding",259,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2950,MMusic,212,261,"ContextSetting,ContextSetting",,-1,"
3.4.2 Returning Items",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2951,MMusic,212,262,"InformationProviding,ExtensionOfPrevious,InformationProviding",261,-1,"
o conflict-review-gieben-auth-denial-of-existence-dns-00
IETF conflict review for draft-gieben-auth-denial-of-existence-dns
draft-gieben-auth-denial-of-existence-dns-05
Authenticated Denial of Existence in the DNS (ISE: Informational)
Token: Ted Lemon",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2952,MMusic,212,263,"ContextSetting,ContextSetting",,-1,"
3.4.3 For Action",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2953,MMusic,212,264,"InformationProviding,ExtensionOfPrevious,InformationProviding",263,-1,"
o conflict-review-wkumari-dnsop-defense-collision-mitigate-00
IETF conflict review for
draft-wkumari-dnsop-defense-collision-mitigate
draft-wkumari-dnsop-defense-collision-mitigate-03
A method for mitigating namespace collisions (ISE: Informational)
Token: Jari Arkko",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2954,MMusic,212,265,"ContextSetting,InformationProviding",,-1,"
4. Working Group Actions
4.1 WG Creation
4.1.1 Proposed for IETF Review",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2955,MMusic,212,266,"InformationProviding,ExtensionOfPrevious,InformationProviding",265,-1,"
NONE",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2956,MMusic,212,267,"ContextSetting,ContextSetting",,-1,"
4.1.2 Proposed for Approval",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2957,MMusic,212,268,"InformationProviding,ExtensionOfPrevious,InformationProviding",267,-1,"
o Extensible Provisioning Protocol Extensions (eppext)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2958,MMusic,212,269,"InformationProviding,ExtensionOfPrevious,InformationProviding",267,-1,"
o Using TLS in Applications (uta)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2959,MMusic,212,270,"ContextSetting,ContextSetting",,-1,"
4.2 WG Rechartering
4.2.1 Under Evaluation for IETF Review",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2960,MMusic,212,271,"InformationProviding,ExtensionOfPrevious,InformationProviding",270,-1,"
o Multiple Interfaces (mif)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2961,MMusic,212,272,"ContextSetting,ContextSetting",,-1,"
4.2.2 Proposed for Approval",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2962,MMusic,212,273,"InformationProviding,ExtensionOfPrevious,InformationProviding",272,-1,"
o Emergency Context Resolution with Internet Technologies (ecrit)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2963,MMusic,212,274,"InformationProviding,ExtensionOfPrevious,InformationProviding",272,-1,"
o Content Delivery Networks Interconnection (cdni)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2964,MMusic,212,275,"ContextSetting,InformationProviding",,-1,"
5. IAB News We Can Use",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2965,MMusic,212,276,"ContextSetting,InformationProviding",,-1,"
6. Management Issues",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2966,MMusic,212,277,"InformationProviding,ExtensionOfPrevious,InformationProviding",276,-1,"
6.1 New Addition to the IPFIX Experts (Benoit Claise)",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2967,MMusic,212,278,"ContextSetting,InformationProviding",,-1,"
7. Working Group News",<20131128221955.8173.22113.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2013-11-28 14:19:55
2968,MMusic,214,0,"Social,Social",,-1,"Hi,",<3E64C18E.8040104@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:09:02
2969,MMusic,214,30,"InformationProviding,ProposeAction,StateDecision,InformationProviding,ProposeAction,Apologising",,-1,"
Rob and I manage to submit a new version of the RTSP updated draft. Most
of the given comments has found its way into the version. However due to
lack of time I am not sure I managed to edit all the comments given on
this draft. So please let me ask forgiveness already now. Please send
any comments on the draft to the list. I am also sorry that the draft
has managed to get even thicker. It is now 138 pages in the text version.",<3E64C18E.8040104@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:09:02
2970,MMusic,214,31,"InformationProviding,ProposeAction,ContextSetting",,-1,"
To fetch it before being announce, see:",<3E64C18E.8040104@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:09:02
2971,MMusic,214,32,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",,-1,"
http://rtsp.org/2003/drafts/draft03/draft-ietf-mmusic-rfc2326bis-03.txt
http://rtsp.org/2003/drafts/draft03/draft-ietf-mmusic-rfc2326bis-03.ps
http://rtsp.org/2003/drafts/draft03/draft-ietf-mmusic-rfc2326bis-03.pdf",<3E64C18E.8040104@era.ericsson.se>,magnus.westerlund@era.ericsson.se,0.0,0,5,2003-03-04 16:09:02
2972,MMusic,215,0,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,PacketVideo has the following collective comments:,<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2973,MMusic,215,138,"Question,InformationProviding,ExtensionOfPrevious,UnderstandingNegative,Question,InformationProviding",0,-1,"
1.  Section 10, method Definitions, in the table, it indicates in the Client
Req column that OPTIONS is Required for Send - this doesn't make sense to me
- what does it mean that the client is required to send OPTIONS?  When?",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2974,MMusic,215,139,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",0,-1,"
2.  How can they not bump the Version number (say from 1.0 to 1.1) when they
are allowing non-interoperable changes from 2326?  For example, from section
10.5 - PLAY:",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2975,MMusic,215,140,"InformationProviding,ExtensionOfPrevious,InformationProviding",139,-1,"
""   After playing the desired range, the presentation is NOT automati-    |
cally paused, media deliver simple stops. A PAUSE request MUST be     |
issued before another PLAY request can issued. Note: This is one      |
change resulting in a non-operability with RFC 2326 implementations.  |
A client not issuing a PAUSE request before a new PLAY will be stuck  |
in PLAYING state. A client desiring to play the media from the begin- |
ning MUST send a PLAY request with a Range header pointing at the     |
beginning, e.g. npt=0-.     """,<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2976,MMusic,215,141,"Question,InformationProviding,ExtensionOfPrevious,Question",140,-1,"
What's the point of being ""stuck"" in playing state?  If *EVERY* client has
issue the PAUSE request
before being able to do something useful, why not just assume they all did
and stick with the
current behavior of returning to the READY state?  What is the behavior if
the client issues a PLAY
before a PAUSE?",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2977,MMusic,215,142,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,InformationProviding,ProposeAction",0,-1,"
3. One of the big gaps in the previous spec was how to use Basic and Digest
Authentication in the context of RTSP.  This draft does not give any more
clarification.  Do you send the authentication headers in all requests?
Only until a valid session ID has been established?  Just the DESCRIBE?  In
all SETUPs?  Details like these need to be worked out and an example
wouldn't hurt either.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2978,MMusic,215,143,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",0,-1,"
4. In section 3.3, ""Session identifiers are opaque strings of arbitrary
length. Linear white space must be URL-escaped.""  Why allow spaces?  And URL
escaping results in the '%' characters.  The BNF they use to detail the
session ID does NOT allow for spaces or the '%' character:",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2979,MMusic,215,144,"InformationProviding,ExtensionOfPrevious,InformationProviding",143,-1,"
session-id  =  8*( ALPHA / DIGIT / safe )",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2980,MMusic,215,145,"InformationProviding,ExtensionOfPrevious,InformationProviding",143,-1,"
ALPHA           =  UPALPHA / LOALPHA
UPALPHA         =  <any US-ASCII uppercase letter ""A""..""Z"">
LOALPHA         =  <any US-ASCII lowercase letter ""a""..""z"">
DIGIT           =  <any US-ASCII digit ""0""..""9"">
safe            =  ""$"" / ""-"" / ""_"" / ""."" / ""+""",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2981,MMusic,215,146,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ProposeAction",0,-1,"
5. Can the open-ended start time be used for live presentations?  For
example, can ""-30"" mean play from now til 30 seconds form now?  How about
""now-30"" or ""now-now+30"" to indicate streaming from the current point in the
live stream, but only streaming for 30 seconds.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2982,MMusic,215,147,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",0,-1,"
6. Need to resolve the problem of supporting the REDIRECT request and
non-persistent connections.  If you are using non-persistent connections,
there is no way for a server to send a REDIRECT request to the client.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2983,MMusic,215,148,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",0,-1,"
7. In the section on RTP interleaved over the RTSP channel, there was no
mention of the client sending RTCP RR back to the server.  Are these still
present?  They did specify the sender reports from the server to client, but
that's it.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2984,MMusic,215,149,"InformationProviding,ExtensionOfPrevious,ProposeAction,UnderstandingNegative,ProposeAction,UnderstandingNegative",0,-1,"
8.   The description of the redirection responses needs work.  It's not
clear how they see the use of load balancing, etc.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2985,MMusic,215,150,"Question,InformationProviding,Disagreement,ExtensionOfPrevious,Question,Disagreement",0,-1,"
9. Table 3, page 51:  Why are DESCRIBE, ANNOUNCE, and PING supported for a
request on the media URL?  I understand them to work on the presentation
URL, but I don't think that they are appropriate to work on the media-level
control URLs.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2986,MMusic,215,151,"Question,InformationProviding,ExtensionOfPrevious,Question",0,-1,"
10. Section 12.18, why MUST the server send the ""Date"" header?  And what is
the determining factor to say a sending host has a clock?  How could a
server send RTP data without a clock?",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2987,MMusic,215,152,"Question,InformationProviding,ExtensionOfPrevious,Question",0,-1,"
11. Section 12.19, page 63, Why can't they define a separate string value to
indicate that the description ""Never Expires"" instead of using a date/time
that is one year in the future?",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2988,MMusic,215,153,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",0,-1,"
12. Section 12.29, must a server understand the ""time"" parameter in the
range header in a request?  And what error should it respond if it doesn't
support the time parameter?  There is no way to inform the client that it
does/doesn't support this parameter.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2989,MMusic,215,154,"InformationProviding,ExtensionOfPrevious,InformationProviding",0,-1,"
13. Section 12.38, the first line of the ""Supported"" example looks garbled.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2990,MMusic,215,155,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",0,-1,"
14. The introduction of the ""client_rtcp_port"" and ""server_rtcp_port"" REALLY
breaks backwards compatibility.  The RTSP version number MUST be bumped!
And there is a typo in that section/example where ""client_rtcp_port"" is used
twice - one in place of the server port.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2991,MMusic,215,156,"Question,InformationProviding,ExtensionOfPrevious,UnderstandingNegative,Question,InformationProviding,UnderstandingNegative",0,-1,"
15. In section 9.3 it states that the server MUST NOT close the connection
directly after responding to the TEARDOWN request for the whole session.
Are they trying to state
that the server should wait to ensure that the response arrives at the
client?  I don't understand
how this is case is different than the handling of any other RTSP response.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2992,MMusic,215,157,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",0,-1,"
16. Section 9.3 also states ""A persistent connection MAY be used for all
transactions between the server and client,       including messages to
multiple RTSP sessions.""  It would be a good idea to point out the server
MAY impose limits on the number of simulataneous sessions a client is
allowed to create/control.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2993,MMusic,215,158,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",0,-1,"
17. In table 2 of section 10, the TEARDOWN message should also be required
to be handled in the
Server->Client direction.  There are cases where the server needs to drop
the client
(e.g., load shedding) and it is better if it can inform the client that this",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2994,MMusic,215,159,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",158,-1,"
is happening.  A few IETFs ago someone was proposing ""END_OF_STREAM"" as a
new RTSP request from Server to client. But TEARDOWN from server to client
could be more appropriate.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2995,MMusic,215,160,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",0,-1,"
18. Section 12.10:  The section on the server closing the connection should
be softened:",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2996,MMusic,215,161,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",160,-1,"
12.10 Connection",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2997,MMusic,215,162,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",161,-1,"
See [H14.10]. The use of the connection option ""close"" in RTSP mes-   |
sages SHOULD be limited to error messages when the server is unable   |
to recover and therefore see it necessary to close the connection.    |
The reason is that the client shall have the choice of continue using |
a connection indefinitely as long as it sends valid messages.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2998,MMusic,215,163,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",162,-1,"
The standard shouldn't mandate server policies on the use of resources.  The
server should have the option
of closing connections (perhaps without dropping the RTSP session) if
demanded by resource constraints or
usage policies.",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
2999,MMusic,215,164,"InformationProviding,InformationProviding",,-1,"
mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<72263E8E8622D611975C0002B32C19D84A7691@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2002-12-12 17:26:19
3000,MMusic,219,15,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction,UnderstandingNegative",,-1,"I find the definition of Message Body in Section 3.2 of
draft-ietf-mmusic-rfc2326bis very confusing. The message body in RFC 822/2822
and in SIP is the part after the empty line. What I suggest is to have two
definitions:",<BLU0-SMTP70052C72A2AFDFF2E429E2D8D60@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-06-08 10:29:08
3001,MMusic,219,16,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",15,-1,"
Message Body: the part of the message, if any, that follows the empty line
terminating the message header. See also ""Qualified Message Body"".",<BLU0-SMTP70052C72A2AFDFF2E429E2D8D60@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-06-08 10:29:08
3002,MMusic,219,17,"InformationProviding,ExtensionOfPrevious,InformationProviding",15,-1,"
Qualified Message Body: the combination of the message body (as defined above)
and the message-body header fields within the message header. The message-body
header fields provide meta-information about the message body.",<BLU0-SMTP70052C72A2AFDFF2E429E2D8D60@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-06-08 10:29:08
3003,MMusic,219,18,"Question,ProposeAction,Question",,-1,"
Comments?",<BLU0-SMTP70052C72A2AFDFF2E429E2D8D60@phx.gbl>,tom111.taylor@bell.net,0.0,0,1,2010-06-08 10:29:08
3004,MMusic,219,20,"Social,Social",15,-1,"Hi Tom,",<547F018265F92642B577B986577D671C0152C6C3@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 14:18:42
3005,MMusic,219,58,"InformationProviding,Answer,Agreement,InformationProviding,ProposeAction",18,-1,"
Section 3.2 gives solely the human readable definition but does not touch the semantics and syntax. However, it may be a good idea to add your proposed ""Message Body"" text to Section 3.2.",<547F018265F92642B577B986577D671C0152C6C3@VENUS.office>,Martin.Stiemerling@neclab.eu,0.0,0,4,2010-06-29 14:18:42
3006,MMusic,222,0,"Social,Social",,-1,Greetings,<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3007,MMusic,222,92,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
This email is to initiate a consensus call on the changes the authors
propose in Auth48 for RTSP 2.0
(https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/). The
consensus call is only on the proposed changes. The deadline for
feedback is October 26, 2016. If you have objections to the changes
please raise them on the MMUSIC mailing list.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3008,MMusic,222,93,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
Below is a list (courtesy of Magnus) of the significant changes since
the last draft version that was approved by IESG. There are many more
editorial changes. For that purpose you are provided with two diffs.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3009,MMusic,222,94,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",93,-1,"
The first diff is containing all the changes significant and editorial
that the authors have proposed. This base version for this diff is the
version of RFC7826-to-be that the RFC-editor provided at the start of
the AUTH48:",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3010,MMusic,222,95,"InformationProviding,ExtensionOfPrevious,InformationProviding",94,-1,"
https://www.rfc-editor.org/authors/rfc7826-lastdiff.html",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3011,MMusic,222,96,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",93,-1,"
The second diff is to enable you two see all changes in RFC7826-to-be
compared to the last draft version. This is thus both the RFC-editor's
changes and the authors' changes combined compared to -40 draft version.
This version is even more cluttered, but can provide the full context of
the changes when RFC-editor editing and the authors changes interact.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3012,MMusic,222,97,"InformationProviding,ExtensionOfPrevious,InformationProviding",96,-1,"
https://www.rfc-editor.org/authors/rfc7826-diff.html",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3013,MMusic,222,98,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
The following are seen as significant changes, i.e. changes in RFC 2119
terms, changes of normative references, changes potentially affecting
behavior, are the following:",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3014,MMusic,222,99,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 3.2: Definition of Live (significantly reformulated even if
intention is the same)",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3015,MMusic,222,100,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- General: Updated the previous RFC 2616 HTTP/1.1 references to
RFC7230-7235.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3016,MMusic,222,101,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 8: New MAY: ""Responses using the response code class 1xx is
the only class for which there MAY be sent one or more responses prior
to the final response message.""",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3017,MMusic,222,102,"InformationProviding,ContextSetting",98,-1,"
- Section 10.5: New MUST: ""RTSP servers MUST support the SET_PARAMETER
method, so that clients can always use this mechanism.""",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3018,MMusic,222,103,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 13.5.1: New MAY: The sender of a
PLAY_NOTIFY MAY issue an updated PLAY_NOTIFY, in the case of a
PLAY_NOTIFY sent with wrong information.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3019,MMusic,222,104,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 13.9: New MUST: If
the Session header is present in a request, the value of a parameter
MUST be retrieved in the specified session context.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3020,MMusic,222,105,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 13.9: New MUST: The responder to a SET_PARAMETER request MUST
use the media type of the request for the response.  For additional
considerations regarding message body negotiation, see Section 9.3.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3021,MMusic,222,106,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",98,-1,"
- Section 17.3.3: New MUST: The Location header MUST be included in the
response.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3022,MMusic,222,107,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 17.3.6: New MUST: The requested resource MUST be accessed
through the proxy given by the Location header that MUST be included.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3023,MMusic,222,108,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 17.4.2, 17.4.8, 18.7, 18.8, 18.34, 18.35, 18.36, 18.58, 19.1,
19.1.1: Changed the normative definition of the HTTP authentication
mechanism from RFC 2617 to RFC 7235, RFC 7615, RFC 7616, RFC 7617.
Resulting in reformulation in a number of places.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3024,MMusic,222,109,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 18.42: A new recommendation about CSeq numbers to avoid
ambigouties in the Request-Status header.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3025,MMusic,222,110,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 18.44: New MAY: A response using 413 (Request
Message Body Too Large) when the restriction is temporary MAY also
include the Retry-After header.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3026,MMusic,222,111,"InformationProviding,ContextSetting,InformationProviding",98,-1,"
- Section 18.57: Significant clarification on how Via in RTSP works,
which is like HTTP, not like the via header in SIP.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3027,MMusic,222,112,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 19.1: New MUST NOT: The WWW-Authenticate
(Section 18.58), Authorization (Section 18.8), and Authentication-
Info (Section 18.7) headers are end-to-end and MUST NOT be modified
by proxies.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3028,MMusic,222,113,"InformationProviding,ExtensionOfPrevious,InformationProviding",98,-1,"
- Section 20.2.3: Referencing ABNF for content of Authorization related
headers information from RFC 7615 and 7235. See auth-param-list,
challenge-list and credentials constructs.",<73e2dc63-1712-525b-7e98-08607a56939f@cisco.com>,fandreas@cisco.com,0.0,1,4,2016-10-12 18:39:06
3029,MMusic,223,0,"Social,Social",,-1,"Hi,",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3030,MMusic,223,62,"InformationProviding,InformationProviding",,-1,"
I was running ID-nits (2.12.13)  on RTSP 2.0 draft version 29:
https://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3031,MMusic,223,63,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
And I run into the issues below of reported unused references which in
fact are present in the document. However, they are present in
appendixes after the reference list.",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3032,MMusic,223,64,"Question,Question",,-1,"
Any potential for getting this fixed?",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3033,MMusic,223,65,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC4567' is defined on line 10113, but no explicit
reference was found in the text
'[RFC4567]  Arkko, J., Lindholm, F., Naslund, M., Norrman, K., and
E....'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3034,MMusic,223,66,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC4571' is defined on line 10118, but no explicit
reference was found in the text
'[RFC4571]  Lazzaro, J., ""Framing Real-time Transport Protocol
(RTP)...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3035,MMusic,223,67,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC2663' is defined on line 10205, but no explicit
reference was found in the text
'[RFC2663]  Srisuresh, P. and M. Holdrege, ""IP Network Address
Transl...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3036,MMusic,223,68,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC2974' is defined on line 10212, but no explicit
reference was found in the text
'[RFC2974]  Handley, M., Perkins, C., and E. Whelan, ""Session
Announc...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3037,MMusic,223,69,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC3261' is defined on line 10215, but no explicit
reference was found in the text
'[RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G.,
Johnston,...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3038,MMusic,223,70,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'RFC5583' is defined on line 10232, but no explicit
reference was found in the text
'[RFC5583]  Schierl, T. and S. Wenger, ""Signaling Media Decoding
Depe...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3039,MMusic,223,71,"InformationProviding,ContextSetting,InformationProviding",63,-1,"
== Unused Reference: 'RFC5888' is defined on line 10236, but no explicit
reference was found in the text
'[RFC5888]  Camarillo, G. and H. Schulzrinne, ""The Session
Descriptio...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3040,MMusic,223,72,"InformationProviding,ExtensionOfPrevious,InformationProviding",63,-1,"
== Unused Reference: 'Stevens98' is defined on line 10243, but no explicit
reference was found in the text
'[Stevens98] Stevens, W., ""Unix Networking Programming - Volume 1,
se...'",<4F5DF15F.4040100@ericsson.com>,magnus.westerlund@ericsson.com,1.0,0,0,2012-03-12 13:51:43
3041,MMusic,224,0,"Social,Social",,-1,"Hey Folks,",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3042,MMusic,224,73,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
I have come up with the proposed wording for the resolution of bug
513737 (http://rtsp.org/bug513737).  First let me cite the resolution
that was reached in conference call on March 5th:",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3043,MMusic,224,74,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",73,-1,"
Resolution: go with alternative #1 from bug report (1. Keep the old
setting and states as if the second SETUP never happend.)",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3044,MMusic,224,75,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
Here my attempt to clarify the wording in the spec according to the
resolution of the concall:",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3045,MMusic,224,76,"InformationProviding,InformationProviding,ExtensionOfPrevious",75,-1,"
Wording from draft-ietf-mmusic-rfc2326bis-03.txt",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3046,MMusic,224,77,"InformationProviding,ContextSetting",,-1,"
11.3 SETUP",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3047,MMusic,224,78,"InformationProviding,InformationProviding,ExtensionOfPrevious",77,-1,"
The SETUP request for a URI specifies the transport mechanism to be
used for the streamed media. A client can issue a SETUP request for a
stream that is already set up or playing in the session to change
transport parameters, which a server MAY allow. If it does not allow
this, it MUST respond with error 455 (Method Not Valid In This
State).",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3048,MMusic,224,79,"InformationProviding,InformationProviding,ExtensionOfPrevious",78,-1,"
A server MAY allow a client to do SETUP while in playing state to add
additional media streams. If not supported the server shall responde
with error 455 (Method Not Allowed In This State). If supported the
added media shall then start to play in sync with the already playing
media. To be able to sync the media with the already playing streams
the SETUP response MUST include a RTP-Info header with the timestamp
value, and a Range header with the corresponding normal play time. To
indicate support for this optional feature the feature-tag:
""setup.playing"" is defined.",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3049,MMusic,224,80,"InformationProviding,ContextSetting,ContextSetting",,-1,"
New proposed wording:",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3050,MMusic,224,81,"InformationProviding,ContextSetting",,-1,"
11.3 SETUP",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3051,MMusic,224,82,"InformationProviding,InformationProviding,ExtensionOfPrevious",81,-1,"
The SETUP request for a URI specifies the transport mechanism to be
used for the streamed media. A client can issue a SETUP request for a
stream that is already set up or playing in the session to change
transport parameters, which a server MAY allow. If it does not allow
this, it MUST respond with error 455 (Method Not Valid In This
State).",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3052,MMusic,224,83,"InformationProviding,InformationProviding,ExtensionOfPrevious",82,-1,"
A server MAY allow a client to do SETUP while in playing state to add
additional media streams. If not supported, the server shall respond    |
with error 455 (Method Not Valid in This State). If supported the       |
added media shall then start to play in sync with the already playing
media. To be able to sync the media with the already playing streams
the SETUP response MUST include a RTP-Info header with the timestamp
value, and a Range header with the corresponding normal play time. To
indicate support for this optional feature the feature-tag:
""setup.playing"" is defined.",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3053,MMusic,224,84,InformationProviding,,-1,"
If a SETUP request on a session fails for any reason, the session       |
state, as well as transport and other parameters for associated         |
streams will remain unchanged from their values as if the SETUP         |
request had never been received by the server.                          |",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3054,MMusic,224,85,"ProposeAction,ProposeAction",,-1,"
Please send your comments.",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3055,MMusic,224,86,"Thanking,Thanking",,-1,"
Thanks",<3EAD45C9.2090809@sun.com>,aravind.narasimhan@sun.com,0.0,0,50,2003-04-28 11:16:25
3056,MMusic,226,0,"InformationProviding,InformationProviding",,-1,Multiparty Multimedia Session Control (MMUSIC) Working Group Minutes,<1BE849EC-50CB-4D4F-AE5E-D4D3ADFEDE90@csperkins.org>,csp@csperkins.org,0.0,0,2,2005-08-24 10:49:50
3057,MMusic,228,0,"Social,InformationProviding",,-1,Magnus:,<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3058,MMusic,228,390,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
I finally have found some time to respond to your email from Dec 16., albeit
briefly:",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3059,MMusic,228,391,"InformationProviding,ExtensionOfPrevious,InformationProviding,StateDecision",390,-1,"
1. I have logged a bug (672160) against item 7 below.",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3060,MMusic,228,392,"InformationProviding,ExtensionOfPrevious,InformationProviding",390,-1,"
2. There was only one typo re item 14 below (and you said you found it).",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3061,MMusic,228,393,"Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding",391,-1,"
3. Regarding item 17 below (about Server sending TEARDOWN to Client
and also optionally END_OF_STREAM),  are you in favor of our proposals
(meaning
allowing TEARDOWN on S->C and also add END_OF_STREAM?",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3062,MMusic,228,394,"InformationProviding,ProposeAction,InformationProviding,StateDecision",,-1,"
We will send you more comments/additions once we have come up with draft
text for other issues (e.g., items 1 and 18 below).",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3063,MMusic,228,395,"InformationProviding,Social,InformationProviding",,-1,"
See you tomorrow on the telecom.",<72263E8E8622D611975C0002B32C19D84A7724@MISTY>,zeng@PacketVideo.COM,0.0,0,22,2003-01-21 16:37:55
3064,MMusic,229,14,"InformationProviding,InformationProviding",,-1,"Section 3.2 of ""draft-ietf-mmusic-rfc2326bis-04.txt"" (the latest RTSP spec)
notes that the ""host"" part of a RTSP URL is ""As defined by RFC 2732"".",<4.3.1.1.20030803150631.00b74730@laptop-localhost>,finlayson@live.com,0.0,0,3,2003-08-03 15:11:12
3065,MMusic,229,15,"InformationProviding,InformationProviding,ExtensionOfPrevious",14,-1,"
However, RFC 2732 is ""Format for Literal IPv6 Addresses in URL's"", which
probably isn't really what you want here (or, at least, is only part of
what you want...)",<4.3.1.1.20030803150631.00b74730@laptop-localhost>,finlayson@live.com,0.0,0,3,2003-08-03 15:11:12
3066,MMusic,229,16,"InformationProviding,Social",,-1,"
Ross.",<4.3.1.1.20030803150631.00b74730@laptop-localhost>,finlayson@live.com,0.0,0,3,2003-08-03 15:11:12
3067,MMusic,229,17,"InformationProviding,InformationProviding",,-1,"
mmusic mailing list
mmusic@ietf.org
https://www1.ietf.org/mailman/listinfo/mmusic",<4.3.1.1.20030803150631.00b74730@laptop-localhost>,finlayson@live.com,0.0,0,3,2003-08-03 15:11:12
3068,RtcWEB,1,41,InformationProviding,,-1,"
Brian Weis is next in the rotation.",<21365.3123.251839.541320@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-15 21:49:23
3069,RtcWEB,1,43,InformationProviding,,-1,"
Reviewer                 LC end     Draft
Leif Johansson         T 2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-12
Stephen Kent           TR2014-04-24 draft-ietf-l2vpn-vpls-inter-domain-redundancy-06
Ben Laurie             T 2014-04-25 draft-ietf-rtcweb-use-cases-and-requirements-14
Russ Mundy             T 2014-05-06 draft-ietf-mpls-extended-admin-group-06
Sandy Murphy           T 2014-05-02 draft-ietf-ipsecme-esp-ah-reqts-08
Eric Osterweil         T 2014-05-12 draft-ietf-ippm-2330-update-04",<21365.3123.251839.541320@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-15 21:49:23
3070,RtcWEB,1,45,InformationProviding,,-1,"
Tobias Gondrom         T 2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-08
Magnus Nystrom         T 2014-05-16 draft-pal-eidr-urn-02",<21365.3123.251839.541320@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-15 21:49:23
3071,RtcWEB,1,46,InformationProviding,,-1,"
Last calls and special requests:",<21365.3123.251839.541320@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-15 21:49:23
3072,RtcWEB,1,47,ExtensionOfPrevious,,-1,"
Sam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11
Jeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-06
Julien Laganier        E 2013-11-21 draft-ietf-websec-key-pinning-13
Julien Laganier          2014-04-29 draft-ietf-dhc-dhcpv4-over-dhcpv6-07
Russ Mundy               2014-03-24 draft-mahalingam-dutt-dcops-vxlan-09
Sandy Murphy             2013-12-17 draft-ietf-netmod-iana-timezones-03
Joe Salowey              2014-05-29 draft-moonesamy-sshfp-ed25519-01
Yaron Sheffer            2014-05-21 draft-ietf-mpls-ldp-hello-crypto-auth-05
Zach Shelby              2014-06-06 draft-housley-implementer-obligations-02
Melinda Shore            2014-05-26 draft-ietf-dnsop-delegation-trust-maintainance-13
Ondrej Sury              2014-05-28 draft-ietf-ipfix-text-adt-05
Takeshi Takahashi        2014-05-28 draft-ietf-mmusic-latching-05
Tina TSOU                2014-05-26 draft-ietf-pce-pcep-inter-domain-p2mp-procedures-06
David Waltermire         2014-06-10 draft-salgueiro-dispatch-websocket-sipclf-01
Brian Weis             E 2014-01-16 draft-ietf-radext-dynamic-discovery-11
kivinen@iki.fi",<21365.3123.251839.541320@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-15 21:49:23
3073,RtcWEB,2,39,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3074,RtcWEB,2,40,ExtensionOfPrevious,,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Authors         : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-16.txt
Pages           : 34
Date            : 2015-01-23",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3075,RtcWEB,2,41,ExtensionOfPrevious,,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Requirements on the browser functionality are derived from the use-
cases.",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3076,RtcWEB,2,42,ExtensionOfPrevious,,-1,"
This document was developed in an initial phase of the work with
rather minor updates at later stages.  It has not really served as a
tool in deciding features or scope for the WGs efforts so far.  It is
being published to record the early conclusions of the working group.
It will not be used as a set of rigid guidelines that specifications
and implementations will be held to in the future.",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3077,RtcWEB,2,43,ExtensionOfPrevious,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3078,RtcWEB,2,44,ExtensionOfPrevious,,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-16",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3079,RtcWEB,2,45,ExtensionOfPrevious,,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-16",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3080,RtcWEB,2,46,ExtensionOfPrevious,,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3081,RtcWEB,2,47,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20150123085733.5995.26420.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-23 00:57:33
3082,RtcWEB,3,10,Question,,-1,"
Real-time media over TCP has some inherent challenges -- is this
something we're planning to discuss here? We did RTP over TCP (+ HTTP
CONNECT) in the past and ended up using multiple connections along
with application-layer redundancy. I'm wondering whether we'll be able
to do the same when moving to WebRTC",<CAGTXFp92jSzQz05uHngzscz88n=fT_JPbEvQRxgeUUqPVRQUyQ@mail.gmail.com>,victor.pascual.avila@gmail.com,0.0,1,5,2013-08-30 12:12:10
3083,RtcWEB,3,30,Answer,10,10,"
If you really want to go there, I suggest you take a good hard look at
either SCTP or TCP Minion (draft-iyengar-minion-concept-01.txt).

The RTCWeb stack already uses SCTP over DTLS over UDP.

In either case, I don't think performance of RTP over reliable transport
is a firewall-related issue.",<52244DD7.1020900@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-09-02 10:35:35
3084,RtcWEB,3,55,"Question,NeutralResponse",,-1,"If the issue is firewall restrictions on UDP, then the data channel is not likely to be a workable option. The question for me is how far we need to go to solve this (e.g. RFC 6062? 6544?). The scenario where both sides are behind UDP blocking firewalls is not common, but it does occur.
",<BLU405-EAS183E36A927CA42270B6936D93300@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-02 11:17:10
3085,RtcWEB,3,99,NeutralResponse,55,55,"
I was thinking more about ""what can you do to avoid TCP's bad behaviour
for real-time traffic, and still be in a connection-oriented,
congestion-controlled environment"". Multiple TCP connections seems like
a suboptimal design, given the existence of other solutions like Minion
or SCTP.

If both sides have TURN over TCP (or TURN over HTTP) enabled, and their
respective TURN servers can talk UDP to each other, communication will
occur, I think. I don't think we need to add TCP candidates for the TURN
case in order to bypass firewalls.

We might want to do so for the benefit of the pure peer-to-peer case,
but I'm not sure it's a case that's important enough to make 6062 (TURN
TCP allocations) or 6544 (ICE TCP allocations, no TURN server) into
MUSTs for RTCWEB.
",<522590EE.7070508@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-09-03 09:34:06
3086,RtcWEB,3,156,Answer,99,99,"
DCCP is connection-oriented, message-oriented and unreliable (thus like UDP) with congestion control.  It should be pretty ideal for the list of constraints in your email.  DCCP can be tunneled over UDP if the network path or OS don't handle DCCP, see RFC6773.

And of course there is RMCAT, which is attempting to solely add congestion control without the other stuff that was added by DCCP.
",<C632A223-A55A-47F4-B083-9BDC447DA959@cisco.com>,dwing@cisco.com,0.0,0,0,2013-09-03 10:25:15
3087,RtcWEB,3,157,NeutralResponse,99,99,"
Sure.  But those technologies weren't on the table when Victor did interactive audio/video over TCP, I'm sure.  Much like they weren't on the table when HTTP started doing multiple TCP connections back in the early days of Netscape.
",<C632A223-A55A-47F4-B083-9BDC447DA959@cisco.com>,dwing@cisco.com,0.0,0,0,2013-09-03 10:25:15
3088,RtcWEB,3,159,Agreement,99,99,"
I agree.  Additionally, before anyone ventures too far down that path it would be useful to understand how well the expected RTCWeb endpoints could do peer-to-peer TCP connections.  Reliable peer-to-peer TCP needs TCP simultaneous open needs to work well on both hosts, per the research by Saikat Guha and Paul Francis http://conferences.sigcomm.org/imc/2005/papers/imc05efiles/guha/guha.pdf.  In that research, they found Windows XP SP1 doesn't do simultaneous open well, but Windows XP with SP2 and SP3 and Linux worked okay.  I have not seen similar research for Android, OS X, or Windows 7 or Windows 8.

-d
",<C632A223-A55A-47F4-B083-9BDC447DA959@cisco.com>,dwing@cisco.com,0.0,0,0,2013-09-03 10:25:15
3089,RtcWEB,3,179,NeutralResponse,157,157,"
Victor didn't provide a date, so I was thinking ""recently"" - SCTP is 10
years old at this point.
Minion is newer than that, of course.",<52262657.3080208@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-09-03 20:11:35
3090,RtcWEB,3,181,Agreement,159,159,"Indeed; that article seemed to indicate that the brand of NAT you bought
was a decisive factor - it would be interesting to see if the state of
the art has become more or less symmetric-TCP hostile in the intervening
8 years.",<52262657.3080208@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-09-03 20:11:35
3091,RtcWEB,3,203,NeutralResponse,179,179,"
SCTP has been around a long time as a protocol but for a variety of reasons has seen no deployment on the Internet to date, including no availability in the mainstream OSs which is everyone's interest.  SCTP-over-UDP was only recently defined and its user-mode release was only 12 or 18 months ago or so.
",<A2C315DB-1882-4BD1-A8C0-E8AF7DEA48F4@cisco.com>,dwing@cisco.com,0.0,0,0,2013-09-03 13:17:05
3092,RtcWEB,3,293,"InformationProviding,NeutralResponse",,-1,"
RTP over TCP is unavoidable in case of RTCWeb media traffic has to traverse
through UDP blocking firewalls. TCP candidates with ICE (RFC 6544) may fail
due to the current OS implementation wherein TCP simultaneous Open will not
work.",<00ca01cec387$f881cae0$e98560a0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-07 23:36:32
3093,RtcWEB,3,294,ExtensionOfPrevious,,-1,"
I have concern w.r.t TURN server as it introduces one extra network element
for RTCWeb session establishment. The current argument favoring for TURN
server is that RTP over TCP is required only till TURN server whereas the
media traffic between TURN server and the destination is UDP. In couple of
WebRTC deployment in Service provider network and Enterprise network, TURN
server will exist near to the destination and the WebRTC media traffic in
the internet is ""RTP over TCP"". I guess that Victor scenario falls under the
same category. In these deployment, RTP over TCP has advantage over TURN
over TCP as the extra element shall be avoided.",<00ca01cec387$f881cae0$e98560a0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-07 23:36:32
3094,RtcWEB,3,295,ExtensionOfPrevious,,-1,"
Also, SCTP over DTLS over UDP will not work in case of RTCWeb media traffic
has to traverse through UDP blocking firewalls. So, there is a need of SCTP
over DTLS over TCP or multipath TCP kind of transport to meet this
requirement which needs separate discussion.",<00ca01cec387$f881cae0$e98560a0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-07 23:36:32
3095,RtcWEB,3,299,NeutralResponse,,-1,"As you point out, in most cases ICE-TCP will not avoid use of TURN, so we are only talking about a modest efficiency gain for ICE-TCP and RTP over TCP, but a substantial increase in complexity.",<BLU406-EAS274696C3D9DFE505F96B8E393130@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-10-07 11:32:44
3096,RtcWEB,3,396,ExtensionOfPrevious,,-1,"
Running SCTP over TCP is undesirable because the congestion control in SCTP and TCP will interact poorly with each other.",<BLU406-EAS274696C3D9DFE505F96B8E393130@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-10-07 11:32:44
3097,RtcWEB,3,509,NeutralResponse,396,396,"
And, even if a full SCTP stack is run over a full TCP stack, that will work but I agree won't work well.  But working is better than not working in situations where UDP is blocked.

To work well, we might look at SCTP Minion (draft-iyengar-minion-concept, which disables TCP's congestion control in lieu of SCTP's congestion control) is one answer to those conflicting congestion controls.

-d
",<2924C1EA-613D-4B05-BD24-4CFD1411386E@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-07 13:08:31
3098,RtcWEB,3,638,"Question,NeutralResponse",509,509,"This would either require changing the TCP stack in the kernel or using a
userland TCP stack without CC, which would require using a raw socket for
sending, for receiving some other strategy, both would require root privileges...
Or am I missing something?
",<28C05866-180F-41B2-8466-502F57FF1DF1@lurchi.franken.de>,Michael.Tuexen@lurchi.franken.de,0.0,0,3,2013-10-07 22:14:19
3099,RtcWEB,3,776,Agreement,638,638,"
Yes, start with something that works but is not optimal (SCTP over TCP) and expect/hope that one of the future paths are better:  OS vendors provide native SCTP support and networks support native SCTP, UDP is permitted by networks (allowing SCTP-over-UDP to work without competing CC), or OS vendors support SCTP Minion (which also avoids competing CC).

-d
",<AFD4485E-B51C-4ADF-A89D-FDF50AB96894@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-07 13:34:23
3100,RtcWEB,3,793,NeutralResponse,299,396,>>> Running SCTP over TCP is undesirable because the congestion control,<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3101,RtcWEB,3,794,ExtensionOfPrevious,396,396,in SCTP and TCP will interact poorly with each other.,<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3102,RtcWEB,3,796,NeutralResponse,396,509,">> And, even if a full SCTP stack is run over a full TCP stack, that",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3103,RtcWEB,3,800,NeutralResponse,509,509,">> To work well, we might look at SCTP Minion",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3104,RtcWEB,3,807,ExtensionOfPrevious,638,638,privileges...,<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3105,RtcWEB,3,808,Question,638,638,> Or am I missing something?,<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3106,RtcWEB,3,830,NeutralResponse,299,299,"so we are only talking about a modest efficiency gain for ICE-TCP and
RTP over TCP, but a substantial increase in complexity.",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3107,RtcWEB,3,831,ExtensionOfPrevious,509,509,"will work but I agree won't work well.  But working is better than not
working in situations where UDP is blocked.",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3108,RtcWEB,3,832,ExtensionOfPrevious,509,509,"(draft-iyengar-minion-concept, which disables TCP's congestion control
in lieu of SCTP's congestion control) is one answer to those conflicting
congestion controls.",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3109,RtcWEB,3,833,NeutralResponse,509,638,"> This would either require changing the TCP stack in the kernel or using a
> userland TCP stack without CC, which would require using a raw socket for
> sending, for receiving some other strategy, both would require root",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3110,RtcWEB,3,834,NeutralResponse,638,638,"
If I remember the minion overview correctly, it will in fact work on an
unmodified TCP stack, but if there are ioctls available to get frames
out of order, it can work a good deal better.

But you should get Iengar himself to talk about it if it's of interest.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJSU4V/AAoJEIjUFboxkRizAkQH/ixIr8I/pd/hb9FCdvJv9IaT
3Rgp/nYIQdaEUOdZNjdTFuoSU9ruhQ5G+Wd8PouDwS+8hdy8Dry/AOYbNxHrRjdO
4lvyLslOIwksOjMmkJ198RFzQTzvNjsCJQaDhmf/kMaZ0r1KF3lDjWXCzOPRetLs
fy+5nuzzuLrInG4rqkMX2nX4J5endXYxUoX8BOclDjm33YfxPw0/bJHQNE0Iq9Oi
mmw1zf8fzTze/ilqlEpFHv9T/CWGCQGoKinzUbWscOUZNpzPGnur/9pqfQTgMkL/
QWQcKuy2T7QxzIwMF9vz7xHfJvzDxD8fS9Fy1t65LScqFBnppR0qQrlxhYvnu+I=
=W/ti
-----END PGP SIGNATURE-----",<5253857F.6010802@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:09:35
3111,RtcWEB,3,898,Answer,834,834,"His point is that you can work with an unchanged stack, but don't
get any benefit. The point in the above is to use a TCP without CC,
which requires an end-host change. So it is not so easy to get rid
of the TCP CC when using a kernel TCP stack.
",<AC0ADD1C-C99C-4B62-BE0E-D52A2C7093A9@lurchi.franken.de>,Michael.Tuexen@lurchi.franken.de,0.0,0,3,2013-10-08 14:38:48
3112,RtcWEB,3,973,NeutralResponse,898,898,"
The application sees SCTP -- that must have some benefit.

-d
",<16DC7356-9D5F-4C87-A828-19B407DCCB27@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-08 08:04:03
3113,RtcWEB,3,1128,NeutralResponse,,-1,"
I understand that two WebRTC endpoint are behind firewall scenario wherein
TURN server is unavoidable. Most of the SP & Enterprise deployment wherein
one of the endpoint is not surely going to be behind UDP blocking Firewall,
mandating TURN server as a mechanism is overkill. As ICE is mandated in
WebRTC, supporting ICE-TCP should not be such a complex activity.",<004201cec44f$381a47f0$a84ed7d0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-08 23:22:46
3114,RtcWEB,3,1129,Thanking,,-1,"
Thanks
Partha",<004201cec44f$381a47f0$a84ed7d0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-08 23:22:46
3115,RtcWEB,3,1150,Question,1128,1128,"
A firewall that blocks UDP but allows incoming TCP is not very common,
is it?

Or did I miss something?
",<52544E0E.5080405@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-10-08 20:25:18
3116,RtcWEB,3,1215,NeutralResponse,,-1,"
I have seen only two requirements in
draft-ietf-rtcweb-use-cases-and-requirements-11, NAT/FW that blocks UDP and
FW that only allows http. The relevant draft snippet is attached as a note
of this mail. I'm discussing about NAT/FW that blocks UDP requirement. In
case you foresee that the requirement is not detailed now, we need to sort
out the requirement first before discussion the solutions.",<003b01cec511$27e1abe0$77a503a0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-09 22:31:06
3117,RtcWEB,3,1301,NeutralResponse,,-1,"
I think the clarification is that it is not possible to initiate TCP connections from the ""outside"" of any NAT or most of the firewalls. So even if the FW does not block TCP per se, it only allows TCP connections to be opened from the ""inside"".",<E44893DD4E290745BB608EB23FDDB7620A0D672F@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-09 17:29:54
3118,RtcWEB,3,1302,ExtensionOfPrevious,,-1,"
I believe ICE-TCP will typically work only in cases where at least one of the endpoints is NOT behind a NAT or FW. In cases where both endpoints are behind firewalls completely blocking all UDP, the only option is to use a relay (TURN) with endpoint initiated TCP connections. ICE allows us to optimize connectivity in special cases, but I think we need also to make the worst case scenarios to work. For that reason I don't see that ICE-TCP could replace TURN as a requirement for every browser to implement. In some specific deployments it may be that TURN does not get used much or at all, but browsers are used everywhere.",<E44893DD4E290745BB608EB23FDDB7620A0D672F@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-09 17:29:54
3119,RtcWEB,3,1420,"Question,Agreement",,-1,"
I agree that ICE-TCP should not replace TURN as a requirement for every browser to implement. If we need support ICE-TCP , should we support TURN-TCP too? I do not think ICE-TCP will be more useful without TURN-TCP in the scenario where both browsers is under the NAT /FW which block UDP.",<9E34D50A21D1D1489134B4D770CE039768081AC9@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-10 01:52:36
3120,RtcWEB,3,1421,"Question,NeutralResponse",,-1,"
I believe the user 1->TCP->TURN server 1->UDP->TURN server 2->TCP->user 2, which Harald wrote before is workable. It is easy to tunnel the data internally if we need use the same server, right?",<9E34D50A21D1D1489134B4D770CE039768081AC9@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-10 01:52:36
3121,RtcWEB,3,1606,NeutralResponse,,-1,"
As I mentioned below, ICE-TCP is not replacement for TURN but ICE-TCP helps
for the browser-to-browser media flow without middle box (TURN Server).
Also, please note that both browsers behind UDP blocked firewall is not the
worst case scenario for WebRTC firewall requirements. The actual worst case
scenario is that both browsers are behind HTTP only firewalls and in this
scenario, both TURN server and ICE-TCP will not work. There is a need of one
more solution.",<004e01cec5df$cf8daaf0$6ea900d0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-10 23:10:17
3122,RtcWEB,3,1607,ExtensionOfPrevious,,-1,"
AFAIK, HTTP allowing firewall is not happen by mis-configuration but it is
policy of the given network. It is more appropriate to pass the media over
HTTP based mechanism rather than finding the workarounds. The advantage with
Media over HTTP is that HTTP friendly firewall shall filter out media from
HTTP traffic if required. IMO, Media over HTTP based mechanism has to be
used for HTTP only firewall (Sec 3.2.3 of
draft-ietf-rtcweb-use-cases-and-requirements) requirement and ICE-TCP shall
be used for (Sec 3.2.3 of draft-ietf-rtcweb-use-cases-and-requirements)
requirement.",<004e01cec5df$cf8daaf0$6ea900d0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-10 23:10:17
3123,RtcWEB,3,1608,Thanking,,-1,"
Thanks
Partha",<004e01cec5df$cf8daaf0$6ea900d0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-10 23:10:17
3124,RtcWEB,3,1628,NeutralResponse,1607,1607,"[xin] And media over websocket should be a option. The sub-protocol attribute in websokcet could also provide the firewall friendly information, so the firewall could decide to filter out the media or not.",<9E34D50A21D1D1489134B4D770CE039768081D1B@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-11 03:57:39
3125,RtcWEB,3,1804,ExtensionOfPrevious,1607,1607,"
IMO, Media over HTTP based mechanism has to be",<9E34D50A21D1D1489134B4D770CE039768081D1B@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-11 03:57:39
3126,RtcWEB,3,1805,ExtensionOfPrevious,1607,1215,">used for HTTP only firewall (Sec 3.2.3 of
>draft-ietf-rtcweb-use-cases-and-requirements) requirement and ICE-TCP shall
>be used for (Sec 3.2.3 of draft-ietf-rtcweb-use-cases-and-requirements)
>requirement.",<9E34D50A21D1D1489134B4D770CE039768081D1B@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-11 03:57:39
3127,RtcWEB,3,1806,ExtensionOfPrevious,1215,1215,"
[Xin] I think you means ICE-TCP shall be used for (*Sec 3.2.2* of draft-ietf-rtcweb-use-cases-and-requirements) requirement.:)
",<9E34D50A21D1D1489134B4D770CE039768081D1B@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-10-11 03:57:39
3128,RtcWEB,3,2067,NeutralResponse,,1628,"> advantage
> >with
> >Media over HTTP is that HTTP friendly firewall shall filter out media
> from
> >HTTP traffic if required.
> [xin] And media over websocket should be a option. The sub-protocol
> attribute in websokcet could also provide the firewall friendly
> information, so the firewall could decide to filter out the media or
> not.",<00cc01cec90b$75faff90$61f0feb0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:00:22
3129,RtcWEB,3,2068,"Agreement,Thanking",1628,1628,"
Agreed. I'll write DTLS-SRTP over WebSocket draft for more clarity.

Please read inline.

Thanks
Partha
",<00cc01cec90b$75faff90$61f0feb0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:00:22
3130,RtcWEB,3,2070,Thanking,1806,1806,"
<Partha> Thanks for the indicating the cut&paste issue :-(. Your thinking is
correct. </Partha>
",<00cc01cec90b$75faff90$61f0feb0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:00:22
3131,RtcWEB,3,2120,Agreement,1606,1606,"
Agree. And we need to consider that BOTH endpoints may be behind such firewalls.
",<E44893DD4E290745BB608EB23FDDB7620A0E2DC6@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-11 12:21:37
3132,RtcWEB,3,2122,"Question,InformationProviding",1215,1215,"
So, what is the overall set of traversal / connectivity / address gathering mechanisms the browser should support that you are advocating? Mine is:

1.) UDP host candidates (native interface) - MUST
2.)UDP server-reflexive candidates (STUN) - MUST
3.) UDP relay candidates via UDP (TURN) - MUST
4.) UDP relay candidates via TCP (TURN) - MUST
5.) UDP relay candidates via some HTTP/TLS compatible transport (TURN) - MUST/SHOULD
(TLS via HTTP CONNET or TURN over WebSockets have been proposed.)
6.) TCP based candidates (ICE-TCP) - MAY/SHOULD

I believe 1.), 2.) and 3.) we all have consensus on, probably even on 4.). What we are discussing on this list is whether and how to do 5.), and how important 6.) is.

My opinion is that 5.) becomes necessary due to the HTTP-limited environments you mention above. So the communication needs to be compliant with HTTP and its upgrade mechanisms. 6.) I see as an optimization to 4.) in cases where you can't do UDP but can establish outgoing TCP connections and the other peer can actually receive them. But that optimization does not hold very often, since most of the time browsers are in networks where they can't receive TCP connections from the ""outside world"". So that's why I see it as MAY or SHOULD. You may argue that often browsers may talk to gateways or central points that are reachable by TCP, and in those scenarios ICE-TCP might make sense.

Markus",<E44893DD4E290745BB608EB23FDDB7620A0E2DC6@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-11 12:21:37
3133,RtcWEB,3,2162,Agreement,2122,2122,"
Totally agree with the nice summary above and agree that 5) is necessary we have use cases in draft-ietf-rtcweb-use-cases-and-requirements that say we do. We need some mechanism that is HTTP compatible and we have these two options available and to me there is very little difference between them it is just a matter of whether the use of the additional websockets layers give us any benefit. I am not convinced that 6) is needed but might be some corner cases it satisfies.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF17BEFB3E@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-10-14 14:42:11
3134,RtcWEB,3,2164,Agreement,,-1,Agree on Markus's summary. I am also not convinced on #6 being a MUST because so far there hasn't been a compelling use case.,<BLU402-EAS357ECBFC621A567B9D3A7B4931A0@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-10-14 08:08:40
3135,RtcWEB,3,2209,Agreement,,-1,"+1,",<525C148F.8070502@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-10-14 17:58:07
3136,RtcWEB,3,2263,NeutralResponse,,-1,"
IMO 6) will only have some benefits in the case one of the endpoint been
a gateway, but you would still have to deal with 5), so you won't avoid
needing a TURN server (in any of its flavors ;)",<525C148F.8070502@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-10-14 17:58:07
3137,RtcWEB,3,2373,NeutralResponse,,-1,"
My point is that the direct media connection has to be given priority over
TURN based mechanism. In case of ICE-TCP, there is a possibility for the
direction connection between two browsers involved in the WebRTC session and
should be given priority over TURN based mechanism. So, 6) TCP based
candidates (ICE-TCP) - MUST",<00d401cec90e$d688d5a0$839a80e0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:24:37
3138,RtcWEB,3,2374,ExtensionOfPrevious,,-1,"
There is an assumption in the discussion that the incoming TCP traffic is
not allowed through firewall. In case it is the problem to be solved, RTCWeb
usecase and requirement has to be updated. I noticed in
draft-ietf-rtcweb-use-cases-and-requirements-12 (published today) that there
is no such requirement. I'll write the mail in RTCWeb WG to get the clarity
on the requirement in case the firewall forbidding incoming TCP traffic is a
matter of missing text in the requirement.",<00d401cec90e$d688d5a0$839a80e0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:24:37
3139,RtcWEB,3,2375,Thanking,,-1,"
Thanks
Partha",<00d401cec90e$d688d5a0$839a80e0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-15 00:24:37
3140,RtcWEB,3,2410,NeutralResponse,,-1,"
In practice I doubt you find many situations where UDP is completely blocked but incoming TCP connections from anywhere are allowed. I'm not sure the use cases and requirements document really claims that to be the case, but I agree it is somewhat ambiguous. That means that while direct TCP connection would be better than TCP based relay, its success rate would be very small. I suppose we agree that UDP based relay would still be better than direct TCP for real-time media.",<E44893DD4E290745BB608EB23FDDB7620A0E7172@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-14 19:06:15
3141,RtcWEB,3,2464,"Question,NeutralResponse",2410,2410,"
Doesn't that depend on where the relay is?

UDP relayed across the world might not be preferable to TCP direct to a
point down the street.

But in practice I suppose the relay will be conveniently located
relative to one of the two endpoints.
",<525C655B.6020802@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2013-10-14 17:42:51
3142,RtcWEB,3,2528,NeutralResponse,2464,2464,"
I think that is a separate problem.  Smart ICE candidate prioritization would choose the ""best candidate"" (for some value of ""best candidate"").  The ICE connectivity check round-trip time is an oft-cited example of a reasonable metric (although it doesn't measure bandwidth and packet loss is considered by some to mislead [but if a path is lossy it may indeed be a very undesirable path]).  Geolocation of the TURN IP address versus my own IP address could also influence ICE candidate prioritization or candidate selection.

-d
",<0AE4085A-CE50-4813-B03C-9A5FB86277BD@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-14 17:04:43
3143,RtcWEB,3,2620,ClarificationElicitation,159,159,"
I don't think I understand who is running a geolocation algorithm in this
scenario.  Can you elaborate?
",<CA+9kkMDofv4+nhAWhxVBT6dFy55uyCVCx=EEsatWiU=WvAhKKA@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-10-14 17:08:41
3144,RtcWEB,3,2705,Answer,2620,2620,"
The RTCWEB host.  For example, it could ask a geolocation service how many miles away the TURN server's IP address is from itself.  I'm not saying this is better than just doing a STUN transaction with that same TURN server; I just wanted another way to influence ICE candidate selection.

-d
",<557505AD-86DB-41D5-9ED7-71223D4937A9@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-14 17:52:50
3145,RtcWEB,3,2756,Agreement,2410,2410,"
Agreed.

But if both ends are trying to communicate with each other, their communications will appear as a TCP simultaneous-open.  That could (in fact, ""should"") work across a firewall because the firewall will see an outbound SYN to a host/port after which it will see an inbound SYN from that same host/port.

-d
",<A51F486D-3BC0-4090-80CD-B4A15AC3EE69@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-14 17:01:26
3146,RtcWEB,3,2837,Disagreement,2756,2756,"
But firewall TCP inspection causes the inbound SYN from the same host/port to be dropped (Firewalls typically do not permit TCP simultaneous-open). Even with NAT as per the survey results in ICE TCP (http://tools.ietf.org/html/rfc6544#appendix-A) TCP simultaneous-open worked only in roughly 45% of the cases.

-Tiru.
",<913383AAA69FF945B8F946018B75898A2000EB57@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2013-10-15 06:02:34
3147,RtcWEB,3,2926,NeutralResponse,2837,2837,"
If avoiding TURN improves the user experience, and IT policy says TCP is allowed, I expect firewall vendors would make sure TCP simultaneous open works.

-d
",<8F31D947-AB62-431A-875D-FCBAA2D38290@cisco.com>,dwing@cisco.com,0.0,0,0,2013-10-15 09:15:57
3148,RtcWEB,3,2965,NeutralResponse,2926,2926,"If something improves the user experience if it is possible to do it,
but the basic functionality works without it, and it's unclear whether
the special circumstances under which it's going to improve the user
experience in fact exist in the field, I think that's perfect for a MAY
implement.",<525E806B.5060401@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-16 14:02:51
3149,RtcWEB,3,3045,Agreement,,-1,"
I agree that ICE-TCP qualifies for ""MAY"" requirement in case both browsers
are behind firewall. ICE-TCP is good for usecase wherein only one of the
browsers is behind firewall. Existing WebRTC usecase namely FedEx call is
good example for only one browser behind firewall wherein IVR is not going
to be behind UDP blocking firewall. In those usecases, ICE-TCP candidates
has merits over TURN relay candidates. IMO, ICE-TCP MUST be considered.",<000801cecdae$f6713160$e3539420$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-20 21:40:53
3150,RtcWEB,3,3046,ExtensionOfPrevious,,-1,"
The current WebRTC FW usecase is (accidentially) inline with one of the
browser behind firewall scenario as mentioned in sec 3.3.2.1 of
draft-ietf-rtcweb-use-cases-and-requirements-12:",<000801cecdae$f6713160$e3539420$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-20 21:40:53
3151,RtcWEB,3,3047,ExtensionOfPrevious,,-1,"
""The difference is that one of the users is behind a NAT that blocks UDP
traffic.""",<000801cecdae$f6713160$e3539420$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-20 21:40:53
3152,RtcWEB,3,3048,Thanking,,-1,"
Thanks
Partha",<000801cecdae$f6713160$e3539420$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-10-20 21:40:53
3153,RtcWEB,3,3147,NeutralResponse,,-1,"FWIW: we use ICE-TCP to connect to a conferencing server, instead of
TURN-TCP, to avoid the extra TURN hop and the whole TURN credentials
business. It's an optimization for sure, but a useful one.

I don't think ICE-TCP will be all that useful for P2P connectivity in the
near future. The scenarios that require ICE-TCP are the exact ones where
simultaneous open will probably be impossible.
",<CAOJ7v-3W7Kj_Bn7pTPs+=-wPZRSvC1DzAHB9=2cnK8JiAoK3ug@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-11-08 15:32:41
3154,RtcWEB,3,3255,NeutralResponse,,-1,"Hi Justin,

It’s great to hear that at least one browser will be able to do ICE-TCP. It is an optimization, but definitely a useful one for certain central server and gateway situations. I have heard also from other service/gateway providers that they want to avoid the TURN-TCP “hop” for the same reasons you state. After listening to them, I’d say ICE-TCP ought to be rather a “SHOULD” instead of “MAY” in the RTCWeb NAT traversal framework.

I suppose that when real-time media runs over TCP, it is in general best to avoid bundling, but to run the different medias over separate TCP connections. That way a single lost packet only affects the rate of one of the medias instead of the aggregate.

I wonder if you already have a plan in Chrome if and how to deal with HTTP (and TLS) restricted firewalls. Are you OK with the idea of connecting to a TURN server with HTTP CONNECT, or do you see some issues with that?

Markus
",<E44893DD4E290745BB608EB23FDDB7620A10CA55@008-AM1MPN1-041.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-11-08 23:58:24
3155,RtcWEB,3,3257,NeutralResponse,,-1,"
FWIW: we use ICE-TCP to connect to a conferencing server, instead of TURN-TCP, to avoid the extra TURN hop and the whole TURN credentials business. It's an optimization for sure, but a useful one.

I don't think ICE-TCP will be all that useful for P2P connectivity in the near future. The scenarios that require ICE-TCP are the exact ones where simultaneous open will probably be impossible.
",<E44893DD4E290745BB608EB23FDDB7620A10CA55@008-AM1MPN1-041.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-11-08 23:58:24
3156,RtcWEB,3,3258,"Agreement,Thanking",,-1,"
I agree that ICE-TCP qualifies for ""MAY"" requirement in case both browsers
are behind firewall. ICE-TCP is good for usecase wherein only one of the
browsers is behind firewall. Existing WebRTC usecase namely FedEx call is
good example for only one browser behind firewall wherein IVR is not going
to be behind UDP blocking firewall. In those usecases, ICE-TCP candidates
has merits over TURN relay candidates. IMO, ICE-TCP MUST be considered.

The current WebRTC FW usecase is (accidentially) inline with one of the
browser behind firewall scenario as mentioned in sec 3.3.2.1 of
draft-ietf-rtcweb-use-cases-and-requirements-12:

""The difference is that one of the users is behind a NAT that blocks UDP
traffic.""
Thanks
Partha
",<E44893DD4E290745BB608EB23FDDB7620A10CA55@008-AM1MPN1-041.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-11-08 23:58:24
3157,RtcWEB,3,3427,Agreement,3255,3255,"
Sounds good.
",<CAOJ7v-3E8a9ayfbvk1tN6pqBn-U1tjQ=id1MtYaESB1BnH+sGQ@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-11-08 17:56:34
3158,RtcWEB,3,3429,NeutralResponse,3255,3255,"That is an interesting idea, but I think it is probably difficult to make
work because the BUNDLE decision happens separately from ICE candidate pair
selection.

I think what we really want is some sort of multi-TCP transport, where we
can open several simultaneous TCP connections and rotate between them. Or
maybe a Minion TCP-based approach. These would have their own issues, but
be conceptually simpler.
",<CAOJ7v-3E8a9ayfbvk1tN6pqBn-U1tjQ=id1MtYaESB1BnH+sGQ@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-11-08 17:56:34
3159,RtcWEB,3,3431,NeutralResponse,3255,3255,"
We already use HTTP CONNECT with ICE-TCP, TURN-TCP, and TURN-TLS. It works.
",<CAOJ7v-3E8a9ayfbvk1tN6pqBn-U1tjQ=id1MtYaESB1BnH+sGQ@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-11-08 17:56:34
3160,RtcWEB,3,3607,NeutralResponse,,-1,"
It is good to know that conference server usecase as well for ICE-TCP usage. I think that it is better to request for adding conference/IVR Server/Gateway with firewall usecases explicitly in the RTCWeb usecase & requirement document in case there is no other objection in this mail thread.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3161,RtcWEB,3,3608,Thanking,,-1,"
Thanks

Partha
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3162,RtcWEB,3,3611,NeutralResponse,,-1,"
It’s great to hear that at least one browser will be able to do ICE-TCP. It is an optimization, but definitely a useful one for certain central server and gateway situations. I have heard also from other service/gateway providers that they want to avoid the TURN-TCP “hop” for the same reasons you state. After listening to them, I’d say ICE-TCP ought to be rather a “SHOULD” instead of “MAY” in the RTCWeb NAT traversal framework.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3163,RtcWEB,3,3612,Agreement,,-1,"
Sounds good.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3164,RtcWEB,3,3613,NeutralResponse,,-1,"
I suppose that when real-time media runs over TCP, it is in general best to avoid bundling, but to run the different medias over separate TCP connections. That way a single lost packet only affects the rate of one of the medias instead of the aggregate.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3165,RtcWEB,3,3614,ExtensionOfPrevious,,-1,"
That is an interesting idea, but I think it is probably difficult to make work because the BUNDLE decision happens separately from ICE candidate pair selection.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3166,RtcWEB,3,3615,ExtensionOfPrevious,,-1,"
I think what we really want is some sort of multi-TCP transport, where we can open several simultaneous TCP connections and rotate between them. Or maybe a Minion TCP-based approach. These would have their own issues, but be conceptually simpler.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3167,RtcWEB,3,3616,"Question,ExtensionOfPrevious",,-1,"
I wonder if you already have a plan in Chrome if and how to deal with HTTP (and TLS) restricted firewalls. Are you OK with the idea of connecting to a TURN server with HTTP CONNECT, or do you see some issues with that?
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3168,RtcWEB,3,3617,NeutralResponse,,-1,"
We already use HTTP CONNECT with ICE-TCP, TURN-TCP, and TURN-TLS. It works.
",<008801cedd31$e0031f00$a0095d00$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-11-09 15:25:44
3169,RtcWEB,3,3870,NeutralResponse,3607,3607,"
Section 3.4.3 ""Video conferencing system with central server"" seems to
already cover this case.

In particular (from -12):

Note: This use-case adds requirements on ..... ability to traverse very
restrictive FWs.
",<527EB59F.5060108@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-09 23:22:23
3170,RtcWEB,3,3872,NeutralResponse,3607,3259,"
Surveillance is pervasive. Go Dark.",<527EB59F.5060108@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-09 23:22:23
3171,RtcWEB,3,4071,NeutralResponse,,-1,"Hi Harald,

Even though there is a note  in Sec 3.4.3.1  for ability to traverse very restrictive FWs, there is no additional requirement because of this usecase. I attached the exact note and relevant requirement in the mail for easy reference. Also, there is no additional requirement as part of Sec 3.4.1 (Telephony terminal) or Sec 3.4.2 (WebEx call) w.r.t to traverse very restrictive FW. I’m requesting for adding the explicit additional requirement in Sec 3.4.3.1 or  Sec 3.4.2.2 or Sec 3.4.3.3 to provide the better clarity between ICE-TCP based solution and TURN based solution. The requirement shall be in the line of:
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3172,RtcWEB,3,4072,"ExtensionOfPrevious,Thanking",,-1,"
“The browser should be able to send streams and data to a peer in the presence of NATs and FWs that block UDP traffic and incoming TCP connection.”

I have mailed these requirement change as part of http://www.ietf.org/mail-archive/web/rtcweb/current/msg09101.html in IETF RTCWeb WG. The requirement difference in this mail and archive is that “should” is mentioned here whereas “must” was mentioned earlier. Also update the existing NAT/FW requirement is to state both browser behind firewall scenario as follows:

“The browser must be able to send streams and data to a peer in the presence of NATs and FWs that block UDP traffic and incoming TCP connection in both browser side as well as in the peer side” (TURN only works)

Thanks
Partha

Note: Sec 3.4.3.1 note -
This use-case adds requirements on support for fast stream
switches F7, on encryption of media and on ability to traverse very
restrictive FWs.  There exist several solutions that enable the
server to forward one high resolution and several low resolution
video streams: a) each browser could send a high resolution, but
scalable stream, and the server could send just the base layer for
the low resolution streams, b) each browser could in a simulcast
fashion send one high resolution and one low resolution stream, and
the server just selects or c) each browser sends just a high
resolution stream, the server transcodes into low resolution streams
as required.
3.4.3.2<http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12#section-3.4.3.2>.  Additional Requirements
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3173,RtcWEB,3,4075,NeutralResponse,,-1,"
It is good to know that conference server usecase as well for ICE-TCP usage. I think that it is better to request for adding conference/IVR Server/Gateway with firewall usecases explicitly in the RTCWeb usecase & requirement document in case there is no other objection in this mail thread.

Section 3.4.3 ""Video conferencing system with central server"" seems to already cover this case.

In particular (from -12):

Note: This use-case adds requirements on ..... ability to traverse very
restrictive FWs.
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3174,RtcWEB,3,4076,Thanking,,-1,"
Thanks
Partha
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3175,RtcWEB,3,4078,"NeutralResponse,Thanking,Question",,-1,"
It’s great to hear that at least one browser will be able to do ICE-TCP. It is an optimization, but definitely a useful one for certain central server and gateway situations. I have heard also from other service/gateway providers that they want to avoid the TURN-TCP “hop” for the same reasons you state. After listening to them, I’d say ICE-TCP ought to be rather a “SHOULD” instead of “MAY” in the RTCWeb NAT traversal framework.

Sounds good.

I suppose that when real-time media runs over TCP, it is in general best to avoid bundling, but to run the different medias over separate TCP connections. That way a single lost packet only affects the rate of one of the medias instead of the aggregate.

That is an interesting idea, but I think it is probably difficult to make work because the BUNDLE decision happens separately from ICE candidate pair selection.

I think what we really want is some sort of multi-TCP transport, where we can open several simultaneous TCP connections and rotate between them. Or maybe a Minion TCP-based approach. These would have their own issues, but be conceptually simpler.

I wonder if you already have a plan in Chrome if and how to deal with HTTP (and TLS) restricted firewalls. Are you OK with the idea of connecting to a TURN server with HTTP CONNECT, or do you see some issues with that?

We already use HTTP CONNECT with ICE-TCP, TURN-TCP, and TURN-TLS. It works.

Markus
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3176,RtcWEB,3,4080,Answer,,-1,"
FWIW: we use ICE-TCP to connect to a conferencing server, instead of TURN-TCP, to avoid the extra TURN hop and the whole TURN credentials business. It's an optimization for sure, but a useful one.

I don't think ICE-TCP will be all that useful for P2P connectivity in the near future. The scenarios that require ICE-TCP are the exact ones where simultaneous open will probably be impossible.
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3177,RtcWEB,3,4081,Agreement,,-1,"
I agree that ICE-TCP qualifies for ""MAY"" requirement in case both browsers
are behind firewall. ICE-TCP is good for usecase wherein only one of the
browsers is behind firewall. Existing WebRTC usecase namely FedEx call is
good example for only one browser behind firewall wherein IVR is not going
to be behind UDP blocking firewall. In those usecases, ICE-TCP candidates
has merits over TURN relay candidates. IMO, ICE-TCP MUST be considered.

The current WebRTC FW usecase is (accidentially) inline with one of the
browser behind firewall scenario as mentioned in sec 3.3.2.1 of
draft-ietf-rtcweb-use-cases-and-requirements-12:

""The difference is that one of the users is behind a NAT that blocks UDP
traffic.""
Thanks
Partha
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C62108@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-10 17:31:18
3178,RtcWEB,3,4473,Agreement,4071,4071,"
You're right - this note was a leftover when the requirements in section
3.1 were factored out to be ""applicable to all scenarios"".

The relevant point in 3.1 is:

o  Clients can be on firewalled networks with no UDP allowed
",<527FE4C6.7070903@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-10 20:55:50
3179,RtcWEB,3,4474,Question,4071,4071,"
So are you saying that we should add a requirement in 3.1 to say

* Clients can be on firewalled network with no UDP or incoming TCP allowed
",<527FE4C6.7070903@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-10 20:55:50
3180,RtcWEB,3,4723,NeutralResponse,,-1,"Hi Harald,

Please read inline.

Thanks
Partah
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3181,RtcWEB,3,4725,NeutralResponse,,-1,"
Even though there is a note  in Sec 3.4.3.1  for ability to traverse very restrictive FWs, there is no additional requirement because of this usecase. I attached the exact note and relevant requirement in the mail for easy reference.

You're right - this note was a leftover when the requirements in section 3.1 were factored out to be ""applicable to all scenarios"".

The relevant point in 3.1 is:

o  Clients can be on firewalled networks with no UDP allowed
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3182,RtcWEB,3,4726,Question,,-1,"
So are you saying that we should add a requirement in 3.1 to say

* Clients can be on firewalled network with no UDP or incoming TCP allowed

<Partha>  In sec 3.1, the requirement has to be updated as below for more clarity
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3183,RtcWEB,3,4727,NeutralResponse,,-1,"
1)       Clients can be on firewalled network with no UDP allowed and no incoming TCP allowed (ICE-TCP solution)

2)       Both clients in the session can be on firewalled network with no UDP allowed and no incoming TCP allowed

Also, firewall related requirement in the draft has to be updated as per the above.

</Partha>

Also, there is no additional requirement as part of Sec 3.4.1 (Telephony terminal) or Sec 3.4.2 (WebEx call) w.r.t to traverse very restrictive FW. I’m requesting for adding the explicit additional requirement in Sec 3.4.3.1 or  Sec 3.4.2.2 or Sec 3.4.3.3 to provide the better clarity between ICE-TCP based solution and TURN based solution. The requirement shall be in the line of:
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3184,RtcWEB,3,4728,NeutralResponse,,-1,"
“The browser should be able to send streams and data to a peer in the presence of NATs and FWs that block UDP traffic and incoming TCP connection.”

I have mailed these requirement change as part of http://www.ietf.org/mail-archive/web/rtcweb/current/msg09101.html in IETF RTCWeb WG. The requirement difference in this mail and archive is that “should” is mentioned here whereas “must” was mentioned earlier. Also update the existing NAT/FW requirement is to state both browser behind firewall scenario as follows:

“The browser must be able to send streams and data to a peer in the presence of NATs and FWs that block UDP traffic and incoming TCP connection in both browser side as well as in the peer side” (TURN only works)

Thanks
Partha

Note: Sec 3.4.3.1 note -
This use-case adds requirements on support for fast stream
switches F7, on encryption of media and on ability to traverse very
restrictive FWs.  There exist several solutions that enable the
server to forward one high resolution and several low resolution
video streams: a) each browser could send a high resolution, but
scalable stream, and the server could send just the base layer for
the low resolution streams, b) each browser could in a simulcast
fashion send one high resolution and one low resolution stream, and
the server just selects or c) each browser sends just a high
resolution stream, the server transcodes into low resolution streams
as required.
3.4.3.2<http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12#section-3.4.3.2>.  Additional Requirements
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3185,RtcWEB,3,4729,ExtensionOfPrevious,,-1,"
F17

A17

Browser requirement:
F17     The browser must be able to mix several
audio streams.

F7      The browser must support insertion of reference frames
in outgoing media streams when requested by a peer.
",<40AFDF4AF1909E4CB42B6D91CE6C419D19C63181@SGSIMBX006.nsn-intra.net>,parthasarathi.ravindran@nsn.com,0.0,0,4,2013-11-12 18:30:04
3186,RtcWEB,3,4876,"Question,InformationProviding",,-1,"Justin,

One more clarification:
[Markus] I wonder if you already have a plan in Chrome if and how to deal with HTTP (and TLS) restricted firewalls. Are you OK with the idea of connecting to a TURN server with HTTP CONNECT, or do you see some issues with that?
[Justin] We already use HTTP CONNECT with ICE-TCP, TURN-TCP, and TURN-TLS. It works.

[Markus] So you use HTTP CONNECT to open the TCP connections for ICE-TCP too? And in this way you will basically never need to use TURN for the conference server or gateway type of case where the other peer is reachable by TCP? That would be cool. Now we would have to get this standardized somehow or just convince other browsers to do the same, as the standards path seems tricky and lengthy. Could you tell how you decide if HTTP CONNECT is needed or not? Do you do some connectivity tests in the background and cache the result, or do you do it for each RTCPeerConnection? Or do you just follow the HTTP proxy configuration rules and apply them to ICE-TCP and TURN?

Markus
",<E44893DD4E290745BB608EB23FDDB7620A117700@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-11-14 11:39:12
3187,RtcWEB,3,4881,Agreement,,-1,"
I agree that ICE-TCP qualifies for ""MAY"" requirement in case both browsers
are behind firewall. ICE-TCP is good for usecase wherein only one of the
browsers is behind firewall. Existing WebRTC usecase namely FedEx call is
good example for only one browser behind firewall wherein IVR is not going
to be behind UDP blocking firewall. In those usecases, ICE-TCP candidates
has merits over TURN relay candidates. IMO, ICE-TCP MUST be considered.

The current WebRTC FW usecase is (accidentially) inline with one of the
browser behind firewall scenario as mentioned in sec 3.3.2.1 of
draft-ietf-rtcweb-use-cases-and-requirements-12:

""The difference is that one of the users is behind a NAT that blocks UDP
traffic.""
Thanks
Partha
",<E44893DD4E290745BB608EB23FDDB7620A117700@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-11-14 11:39:12
3188,RtcWEB,3,5117,Agreement,4876,4876,"
Yes, HTTP CONNECT is used for ICE-TCP.

I forget the details, but I think right now we just obey the proxy
configuration for TCP, but also try direct UDP. There could be cases where
direct TCP could work as well, but given that that's not an optimal outcome
anyway, I don't think that is hooked up.
",<CAOJ7v-1CZyMAQ2W_kdQp5+r3JBjLSn7XAzy32i9ff9KPyWcm_A@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-11-14 15:00:22
3189,RtcWEB,3,5141,NeutralResponse,294,294,"
Don't forget the (likely) case where the destination is also reached
through a TURN server, so that the path is

user 1->TCP->TURN server 1->UDP->TURN server 2->TCP->user 2

For extra irony, the two clients may be using the same TURN service, so
that the UDP hop is an intra-datacenter or even intra-machine hop :-)",<52538AC4.5060500@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-10-08 06:32:04
3190,RtcWEB,3,5159,NeutralResponse,5141,5141,"
If that happens, its time to seek out a new TURN server vendor.
A good one should be able to figure this out and optimize it.
",<52557D47.3050402@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2013-10-09 11:59:03
3191,RtcWEB,3,5188,NeutralResponse,5159,5159,"
I think it can happen even if the vendor and the service provider do all they can. For instance if both endpoints are behind a UDP blocking firewall and can only open TCP connections. So unless the endpoints support TCP-based ICE candidates, I think they need to connect to their respective TURN relays and only via them they can reach each other's TURN-allocated UDP candidates. So the transport will be split into 3 hops: TCP - UDP - TCP, where the UDP part can be potentially very short.

Or is there some way to optimize from that? If I've understood correctly, ICE-TCP with TURN-allocated TCP ports would allow using just a single relay in the above scenario. It would be thus be better in case if the relays used by the endpoints were NOT in the same DC.

Markus",<E44893DD4E290745BB608EB23FDDB7620A0D6767@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-10-09 17:38:55
3192,RtcWEB,3,5220,NeutralResponse,5188,5188,"
My point was that if both use the *same* TURN server, then it should be
smart enough to avoid establishing a UDP connection to itself.
",<5255A936.5000504@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2013-10-09 15:06:30
3193,RtcWEB,3,5241,Question,,-1,"Can you describe the usage scenario? Is this about media traversal of highly restrictive firewalls? (E.g. HTTP-only)?
",<BLU403-EAS1892673E94E650BC6E7798C93300@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-02 11:06:20
3194,RtcWEB,4,0,InformationProviding,,-1,A comment on the WebRTC use-case draft related to media sources...,<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3195,RtcWEB,4,30,ExtensionOfPrevious,,-1,"
Requirement F1 says local mic/cameras can be used as media sources.",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3196,RtcWEB,4,31,ExtensionOfPrevious,,-1,"
""F1      The browser must be able to use microphones and
cameras as input devices to generate streams.""",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3197,RtcWEB,4,32,ExtensionOfPrevious,,-1,"
I've been told that a media source can also be an incoming media stream
from a peer, for example, where Browser-B relays media received from
Browser-A to Browser-C, like thisŠ",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3198,RtcWEB,4,33,ExtensionOfPrevious,,-1,"
| A |--->| B |--->| C |",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3199,RtcWEB,4,34,ExtensionOfPrevious,,-1,"
Likewise with the data channel ‹ a WebRTC browser should be able to relay
data-channel data from one browser to another.",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3200,RtcWEB,4,35,ExtensionOfPrevious,,-1,"
I think this is a useful capability, but I don't see it stated anywhere in
the use-case document.",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3201,RtcWEB,4,36,ExtensionOfPrevious,,-1,"
I suggest we add a requirement covering this. Here's some proposed text...",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3202,RtcWEB,4,37,ExtensionOfPrevious,,-1,"
""Fx The browser must be able to relay incoming media or data streams
to a peer.""",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3203,RtcWEB,4,38,Thanking,,-1,"
Thanks",<CE291702.39859%d.hancock@cablelabs.com>,D.Hancock@CableLabs.com,0.0,0,18,2013-08-08 16:57:33
3204,RtcWEB,5,187,InformationProviding,,-1,"I am posting this to both CLUE and RTCWEB. I am not sure which (if
either) WG would want to adopt it, but I think both should see it. If
this gains traction, I
will make sure both WG are kept abreast of developments.",<CAJNg7VL4TL+gcw1e9vRkKHntswrYar30h-4VACqEMkYivMbxeQ@mail.gmail.com>,marshall.eubanks@gmail.com,0.0,0,0,2012-04-13 14:14:24
3205,RtcWEB,5,393,"Question,Thanking",,189,"
Marshall,

Thanks for posting this. In Case 1 you say: 'Such ""Clueless""
conferencing sessions are not in scope for this text.' Yet you go on and
detail it. What is your thinking here?
",<4F88718B.7050104@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2012-04-13 14:33:47
3206,RtcWEB,5,636,Disagreement,393,393,"
No, I distinguish (or am trying to distinguish) between

- clueless 1 screen sessions, where the clueless end has no idea of
what's really going on and

-CLUEfull 1 screen sessions, where the browser end does have an idea
of what's going on and might, for
example, display the name of the speaker and negotiate display options
just like a regular telepresence unit. (Note,
by the way, that there are one screen telepresence units on the
market. I would argue that whatever they do with CLUE, ideally we
would want a 1 screen CLUEfull browser to do.)

- The use of thumbnails (really, a special case of multiple screens)
is likely to be common in 1 screen CLUE and not present in normal
videoconferencing.

Also, a CLUEfull 1 screen session may have to switch rapidly, even
between formats,  and surely that is not part of the usual
videoconferencing session.

Now, we may decide that all of that can be negotiated elsewhere, using
existing tools. If so, so be it, and let's get that documented in a
draft.
",<CAJNg7VLK+7zwYjtQX-4Dc=Ki5W0ZXjUzuu4QE0Tc4u_33=j6+g@mail.gmail.com>,marshall.eubanks@gmail.com,0.0,0,0,2012-04-13 15:06:30
3207,RtcWEB,6,116,InformationProviding,,-1,"Real time sessions with video and audio are often accompanied with some
form of text communication.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3208,RtcWEB,6,117,ExtensionOfPrevious,,-1,"
It is mentioned in a couple of places in RTCWEB related specifications,
but I see a need to get the specifications of how text should be handled
up to the level of specification of the other media.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3209,RtcWEB,6,118,ExtensionOfPrevious,,-1,"
The real-time requirements are slightly lower on text communication than
on video and audio, so I realize that it can be carried by mechanisms
already available in the web browser environment. But even if that will
be the case, it needs to be considered and described, because text
communication is part of the real-time communication concepts that
RTCWEB belongs to.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3210,RtcWEB,6,119,ExtensionOfPrevious,,-1,"
I know three kinds of text communication:",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3211,RtcWEB,6,120,ExtensionOfPrevious,,-1,"
Real-time text:",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3212,RtcWEB,6,121,ExtensionOfPrevious,,-1,"
Real-time text is text transmitted while it is being typed or
created.*The recipient can read the sender's text as it is written,
without waiting.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3213,RtcWEB,6,122,ExtensionOfPrevious,,-1,"
*Text messaging:",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3214,RtcWEB,6,123,ExtensionOfPrevious,,-1,"
Text messaging is text collected to complete messages and sent as a
whole when completed by specific user action.***The recipient can read
the sender's text *soon after it is transmitted.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3215,RtcWEB,6,124,ExtensionOfPrevious,,-1,"
Timed text:",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3216,RtcWEB,6,125,ExtensionOfPrevious,,-1,"
Timed text is text sent together with with information about the
intended timing of the display, often related to another medium, such as
audio or video. The recipient can read the text presented timely to
events in the other media.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3217,RtcWEB,6,126,ExtensionOfPrevious,,-1,"
Real-time text for conversational use has the timing requirement that
end-to-end latency shall not be more than 2 seconds for usable text, and
one second for good usability. This is clearly lower than the
requirements on audio and video that traditionally is 400 ms for usable
end-to-end latency.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3218,RtcWEB,6,127,ExtensionOfPrevious,,-1,"
Real-time text is briefly mentioned in a requirement in
draft-ietf-rtcweb-data-channel
http://tools.ietf.org/html/draft-ietf-rtcweb-data-channel-02",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3219,RtcWEB,6,128,ExtensionOfPrevious,,-1,"
All three text communication forms are mentioned in
http://tools.ietf.org/id/draft-aboba-rtcweb-ecrit-00.txt",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3220,RtcWEB,6,129,ExtensionOfPrevious,,-1,"
I am most eager to see the use of real-time text specified in relation
to RTCWEB, but it might be good to touch all three types.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3221,RtcWEB,6,130,ExtensionOfPrevious,,-1,"
I suggest that it starts with requirements and use cases in
http://tools.ietf.org/wg/rtcweb/draft-ietf-rtcweb-use-cases-and-requirements/",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3222,RtcWEB,6,131,ExtensionOfPrevious,,-1,"
I propose to add real-time text to use case 4.2.1 so that it reads:",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3223,RtcWEB,6,132,ExtensionOfPrevious,,-1,"
4.2.1. Simple Video Communication Service",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3224,RtcWEB,6,133,ExtensionOfPrevious,,-1,"
with audio and real-time text",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3225,RtcWEB,6,134,ExtensionOfPrevious,,-1,"
4.2.1.1. Description",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3226,RtcWEB,6,135,ExtensionOfPrevious,,-1,"
Two or more users have loaded a video communication web application
into their browsers, provided by the same service provider, and
logged into the service it provides.  The web service publishes
information about user login status by pushing updates to the web
application in the browsers.  When one online user selects a peer
online user, a 1-1 video communication session between the browsers
of the two peers is initiated.  The invited user might accept or
reject the session.Audio and real-time text is also available
during the session.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3227,RtcWEB,6,136,ExtensionOfPrevious,,-1,"
During session establishment a self-view is displayed, and once the
session has been established the video sent from the remote peer is
displayed in addition to the self-view.  During the session, each
user can select to remove and re-insert the self-view as often as
desired.  Each user can also change the sizes of his/her two video
displays during the session.Audio from each user is presented to
the other user. While one user types in the real-time text area, it
is nearly immediately presented to the other user.  Each user can
also pause sending of media (audio, video, or both) and mute incoming
media",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3228,RtcWEB,6,137,ExtensionOfPrevious,,-1,"
An alternative is to add a small additional section in 4.2",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3229,RtcWEB,6,138,ExtensionOfPrevious,,-1,"
4.2.x. Simple Video Communication Service with real-time text",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3230,RtcWEB,6,139,ExtensionOfPrevious,,-1,"
4.2.x.1. Description",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3231,RtcWEB,6,140,ExtensionOfPrevious,,-1,"
This use-case has the audio and video communication of the Simple
Video Communication Service use-case (Section 4.2.1  <http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-09#section-4.2.1>).",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3232,RtcWEB,6,141,ExtensionOfPrevious,,-1,"
But in addition to this, the users can send and receive real-time text.
While one user types in the real-time text area, it
is nearly immediately presented to the other user.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3233,RtcWEB,6,142,ExtensionOfPrevious,,-1,"
A couple of requirements then need to be added in the A and F ranges in
5.2 and 5.3, but I want to start with this initial proposal.",<50A0BC04.6090200@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 10:06:12
3234,RtcWEB,6,279,NeutralResponse,,-1,"I would prefer this to be added as a separate specification, rather than
done at this time.
The reason being that this should be relatively easy to add on top of
the data channel functionality, but will definitely take some time to
specify, so should not be on the critical path for this round of
specifications.",<50A0E85E.4020201@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-11-12 13:15:26
3235,RtcWEB,6,446,Disagreement,,-1,"I think the opposite. Inclusion of real-time text from the beginning is
crucial for successful deployment of RTCWEB.
It is so often a reason appears in a voice or video call to also convey
something by text, that it would be a mistake to launch something
without it.",<50A0EF72.8080309@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 13:45:38
3236,RtcWEB,6,447,ExtensionOfPrevious,,-1,"
It is not at all sure that the best alternative is to use the data
channel for this purpose. The currently only standarized way to do
real-time text is through RTP. It would be even easier than doing it in
the data channel, to specify use of RTP for this purpose.",<50A0EF72.8080309@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 13:45:38
3237,RtcWEB,6,448,ExtensionOfPrevious,,-1,"
Then, interoperability with other environments, and use for emergency
services is also easily achieved.",<50A0EF72.8080309@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 13:45:38
3238,RtcWEB,6,449,ExtensionOfPrevious,,-1,"
It is so simple and can be specified rapidly, while the gaps in other
central RTCWEB specifications are filled.",<50A0EF72.8080309@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 13:45:38
3239,RtcWEB,6,633,NeutralResponse,,-1,"To me it seems that real-time text use can be solved using the data
channel (with the accompanying W3C API).",<50A0F340.3050809@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2012-11-12 14:01:52
3240,RtcWEB,6,634,ExtensionOfPrevious,,-1,"
I'm not sure anything needs to be standardized (except if there are
legal requirements meaning we must).",<50A0F340.3050809@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2012-11-12 14:01:52
3241,RtcWEB,6,833,Agreement,,-1,"I think that Stefan is right.  In the case of peer-to-peer communication, we are leaving the signaling up to the two end-points, and we can certainly expect them to figure out what to do with text (over the data channel) as well.  In the case of communication with a legacy device (i.e., one that expects to send or receive text), it will be up to the webRTC endpoint to adapt to the device's text API.  I don't see why we would need to specify anything in either case.

If it eventually turns out that a) there are common peer-to-peer use cases involving text and b) it takes a lot of complicated JS coding to get them to work, then we can add API-level support in a future specification.  But the new API surface wouldn't enable anything that couldn't already be done over the data channel.

- Jim
",<E17CAD772E76C742B645BD4DC602CD8106F48831@NAHALD.us.int.genesyslab.com>,Jim.Barnett@genesyslab.com,0.0,0,9,2012-11-12 06:04:28
3242,RtcWEB,6,835,NeutralResponse,,-1,"
To me it seems that real-time text use can be solved using the data channel (with the accompanying W3C API).

I'm not sure anything needs to be standardized (except if there are legal requirements meaning we must).

Stefan
",<E17CAD772E76C742B645BD4DC602CD8106F48831@NAHALD.us.int.genesyslab.com>,Jim.Barnett@genesyslab.com,0.0,0,9,2012-11-12 06:04:28
3243,RtcWEB,6,1063,"Question,Disagreement",,-1,"I do not see the logic here.
You propose that real-time text shall be left to the peers to agree on.
Why are you then specifying audio and video, when such agreements can be
left to the peers?",<50A105D7.2000901@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 15:21:11
3244,RtcWEB,6,1064,"Question,ExtensionOfPrevious",,-1,"
Or the opposite:
What makes the text codec in need of less standardization than audio and
video?
It is the same need, both sides must know how to code and decode the
medium, some presentation characteristics, and on what transport to send
it and how it is identified when sending so that the other end will use
the proper decoder.",<50A105D7.2000901@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 15:21:11
3245,RtcWEB,6,1065,"Question,ExtensionOfPrevious",,-1,"
What is the difference?",<50A105D7.2000901@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 15:21:11
3246,RtcWEB,6,1066,"Question,ExtensionOfPrevious",,-1,"
And why use the data channel that says that it is for non-media.
Real-time text is a conversational medium.
( This can of course easily be amended by opening the data channel also
for media by some changed wording in the spec, I agree that real-time
text could be transported over that channel if you see any preference
for that over the RTP transport. )",<50A105D7.2000901@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 15:21:11
3247,RtcWEB,6,1090,Answer,1063,1063,"
Because, as it looks right now, among other reasons, it is not really
feasible to handle all media processing (video coding, RTP
encapsulation, jitter management, decoding, rate adaptation, ...) in JS
right now. So we need to specify the exact formats so implementations
interop.

My analogy would be that we leave it up to the application do decide how
it uses the ""raw"" media streams/tracks (playing out, recording, mixing,
....) in the same way as we leave it to the application how it uses the
""raw"" data channel (RT-text, send an image, game date, ...).

Another difference is that the app creates the text (perhaps as a result
of user typing) to be sent over the data channel, while devices such as
cameras and microphones creates the audio and video.",<50A109F4.6010208@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2012-11-12 15:38:44
3248,RtcWEB,6,1139,NeutralResponse,1090,1090,"
This is a very good explanation of what makes real-time text different
(no processor-intensive codecs, no specialized access to hardware like
cameras and microphones), but you didn't quite drive it all the way to
its logical conclusion.

Actually, I'd like to throw in one more characteristic of real-time
text: it is not as sensitive to latency as voice and video. This means
that relaying it through a web server is eminently possible.

The key ramification of these three facts, taken together, is that _real
time text is possible today_, without any of the WebRTC extensions.
Trivial evidence of this is the existence of web tools like etherpad and
typewith.me.

I'm not saying that we should ignore the work necessary to make
real-time text go directly browser-to-browser. I *am* agreeing with
earlier comments that it should be a lower priority. Such an effort
would be adding a second, supplemental way of sending text in real-time.
I'd like to see work put into getting the first and only way of sending
audio and sending video finished before we start allocating resources
towards specifying additional means of doing something that is already
possible.

/a",<50A1171C.2020005@nostrum.com>,adam@nostrum.com,0.0,0,1,2012-11-12 09:34:52
3249,RtcWEB,6,1158,"NeutralResponse,ProposeAction",,-1,"Wild*ssed counter proposal: getting the signaling and API right with a codec
that does not require too much codec-level negotiation, arguments about
quality, or arguments about intellectual property, seems like an incredibly
reasonable first step to delivering something that people can use, instead
of writing books about.",<e43f6dc8-ad54-4a04-9e0a-9a29e44c7267@blur>,eburger@standardstrack.com,0.0,0,0,2012-11-12 10:43:19
3250,RtcWEB,6,1159,ExtensionOfPrevious,,-1,"
If we cannot get RTT to work, we will never get VP8 to work.",<e43f6dc8-ad54-4a04-9e0a-9a29e44c7267@blur>,eburger@standardstrack.com,0.0,0,0,2012-11-12 10:43:19
3251,RtcWEB,6,1160,Thanking,,-1,"
Sent from my mobile device. Thanks be to lemonade!
http://www.standardstrack.com/ietf/lemonade/",<e43f6dc8-ad54-4a04-9e0a-9a29e44c7267@blur>,eburger@standardstrack.com,0.0,0,0,2012-11-12 10:43:19
3252,RtcWEB,6,1175,NeutralResponse,1158,1158,"
I look forward to the UTF-8 versus UTF-16 battle. :)

/a",<50A14CB9.8020706@nostrum.com>,adam@nostrum.com,0.0,0,1,2012-11-12 13:23:37
3253,RtcWEB,6,1192,NeutralResponse,1175,1175,"
The IETF is very strongly UTF-8. The W3C is very strongly UTF-8 on the
wire, but of course UTF-16 in JavaScript. So these battles are over.
",<50A1FD99.3030501@it.aoyama.ac.jp>,duerst@it.aoyama.ac.jp,0.0,0,1,2012-11-13 16:58:17
3254,RtcWEB,6,1213,NeutralResponse,1192,1192,"
Yeah, the smiley face was supposed to convey that the the comment was
meant as tongue-in-cheek.

/a",<50A27672.9050801@nostrum.com>,adam@nostrum.com,0.0,0,1,2012-11-13 10:33:54
3255,RtcWEB,6,1245,NeutralResponse,833,833,"
This may help you: at Atlanta, I gave an (impromptu) discussion on
DataChannels in rtcweb.  One thing I proposed adding to the existing
implementation is a separate ""protocol"" field, similar to WebSockets.
Most uses of DataChannels will be for application-specific protocols
between two instances of the same app.  However, since we have
heterogeneous applications that may end up talking to each other, having
one open a DataChannel with label ""Chat"" doesn't help (in the
hetereogeneous case) if the two apps don't know what protocol the data
in the ""Chat"" channel is.

So with a protocol field, you can specify that the ""Chat"" channel is a
specific chat protocol, and if both sides implement it, then you're
set.  A Text/Chat protocol (and maybe a file transfer protocol) seem
like an idea set to specify as an example.  Wherever possible, I'd
prefer to specify them as ""Foo over a DataChannel
(reliable/unreliable)"", to avoid re-implementing the wheel and easing
implementation.
",<50A1219E.9020509@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-11-12 11:19:42
3256,RtcWEB,6,1249,Agreement,,-1,+1,<50A1483B.5050700@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:04:27
3257,RtcWEB,6,1508,NeutralResponse,279,279,"T.140 is a codec in the  RTP flow and is implemented in Asterisk and a couple of Video SIP phones.
I see no reason to move it to the data channel, that would limit interoperability.

Much easier - and faster - to implement in the RTP subsystem as it is already covered by SDP offer/answer.

/O
",<DF70D2B1-A20A-43BC-B20A-EFD1BD8B1A0B@edvina.net>,oej@edvina.net,0.0,0,2,2012-11-13 09:55:24
3258,RtcWEB,6,1530,NeutralResponse,1508,1508,"Anything is possible, if someone is willing to do it.",<50A218FF.9050104@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-11-13 10:55:11
3259,RtcWEB,6,1540,"Question,ExtensionOfPrevious",1508,1508,"
Olle and Gunnar, can you undertake to write a complete specification for
how to use T.140 with RTCWEB, including how it should fit in with the
API specification, and whether or not it supports the needs that Gunnar
has claimed for text services?

I don't understand T.140 - so I can't do the work. Someone who wants it
should.",<50A218FF.9050104@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-11-13 10:55:11
3260,RtcWEB,6,1542,"NeutralResponse,Answer",,-1,I am of course willing to contribute.,<50A21ED3.2060002@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 11:20:03
3261,RtcWEB,6,1644,"Answer,NeutralResponse",,-1,"I have proposals for adding real-time text to the use cases document.
I hope it is OK with a word file with changemarks to show the change
proposals. (attached )",<50A81ED2.9010604@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 00:33:38
3262,RtcWEB,6,1645,ExtensionOfPrevious,,-1,"
The new medium is proposed to be added straight into current use cases.",<50A81ED2.9010604@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 00:33:38
3263,RtcWEB,6,1728,Question,1644,1644,"
That's really pretty hard to use. Can you provide some sort of text diff
instead?

-Ekr
",<CABcZeBNYj2ptAnxLJ5zDOZtDr3gvRtr=ZJ1xeyA3iqKThHJqzQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2012-11-17 15:46:19
3264,RtcWEB,6,1824,Answer,1728,1728,"How about the attached version as a start.
You can do a diff against the -09 version.

The main changes are in
-The definitions
-Use case simple video
-Use case multi-part video
-Use case multi-part video conference
-Requirements F39 - F42
-Requirement A27
-Many requirement lists in use cases.

/Gunnar",<50A890D4.800@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 08:40:04
3265,RtcWEB,6,1827,NeutralResponse,,-1,A diff would have been better but I'll look into the proposal.,<B1164502-806C-4A79-A68A-BC51A64F7772@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 09:00:39
3266,RtcWEB,6,1925,ExtensionOfPrevious,,-1,"
One note though- You have added the real time text into the basic video chat example. The way this was structured was to move from basic-atomic- use cases, adding complexity such as more/other media&data streams in separate use cases.",<B1164502-806C-4A79-A68A-BC51A64F7772@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 09:00:39
3267,RtcWEB,6,1926,"Question,ExtensionOfPrevious",,-1,"
I would like to stick to that approach. Any thoughts about that.",<B1164502-806C-4A79-A68A-BC51A64F7772@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 09:00:39
3268,RtcWEB,6,1947,Answer,1925,1925,"
Yes, I prepared also the ""sequential"" variant,  just adding the
real-time text in a short clause among the other atomic additions.

But I realized the risk for it to be seen as an addition for special
cases, rather than one of the three important natural components of
human conversation. You talk, you show, you write to each other. Both
face-to-face and remotely.

So, I preferred the upfront integrated variant, and sent that to the group.

/Gunnar",<50A8C7C3.3020201@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 12:34:27
3269,RtcWEB,6,1949,NeutralResponse,,-1,"What is ""most natural"" can be discussed and we could add a lot of stuff to capture that, :-), but real time text chat for the hearing impaired is a relevant use case in its own right as is a video and text chat case.",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3270,RtcWEB,6,1981,ExtensionOfPrevious,,-1,"
Having audio, video and text chat is not the most basic use case- audio only, video only or text chat only is. Hence, single stream cases are basic. Perhaps not most natural, but still essential use cases to secure.",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3271,RtcWEB,6,1982,ExtensionOfPrevious,,-1,"
Concerning what most important or natural, the use case draft is not governing that. The draft was mainly intended for providing a common set of different kinds of architecture, including supporting the spilt into API related requirements and protocol requirements, which is useful when trying to coordinate the w3c API work and that of IETF.",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3272,RtcWEB,6,1983,"ExtensionOfPrevious,ContextSetting",,-1,"
For instance the objective of making an API that is easy to use for the ordinary web developer who just want to enrich his web page with an 1-1 audio or video chat component is one reason for having the ""atomic"" use case approach. Another is when we move towards test spec time in the w3c, where many test cases will be very basic, :-).",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3273,RtcWEB,6,1984,ExtensionOfPrevious,,-1,"
So I would still like to keep this approach, adding the cases You describe where appropriate, be that in the existing use case or as new ones.",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3274,RtcWEB,6,1985,Question,,-1,"
Would You like me to have a go at it, drafting a proposal?",<1A04203A-8314-4D07-A710-8518B11C0776@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:13:29
3275,RtcWEB,6,2026,Answer,,-1,"Yes, please have a go on it.
You can use my initial effort on the atomic variant as a base. Attached.",<50A8D730.4050707@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 13:40:16
3276,RtcWEB,6,2029,Agreement,,-1,Ok.,<58950721-DA4B-4007-95D4-151C0C7B712A@ericsson.com>,goran.ap.eriksson@ericsson.com,1.0,0,15,2012-11-18 12:43:43
3277,RtcWEB,6,2203,NeutralResponse,,-1,"For SDP, changes in line with the example below are proposed to get
real-time text included in draft-nandakumar-rtcweb-sdp",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3278,RtcWEB,6,2204,ExtensionOfPrevious,,-1,"
5.  WebRTC Session Description Examples",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3279,RtcWEB,6,2205,ExtensionOfPrevious,,-1,"
A typical web based real-time multimedia communication session can be
characterized as below:",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3280,RtcWEB,6,2206,ExtensionOfPrevious,,-1,"
It has zero or more Media
streams with  any combination of Audio, Video and Real-time text
MAY contain zero or more non-media data streams
All the streams are secured with DTLS/SRTP
ICE processing for NAT Traversal
Sessions over IPv4-only, IPv6-only, dual-stack based clients.
5.1.  Secure Two-Way Audio,Video,Real-time text  and Data with RTCP Feedback",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3281,RtcWEB,6,2207,ExtensionOfPrevious,,-1,"
This use-case allows two users to participate in a two-way
communication session securely on their WebRTC enabled Web browsers.",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3282,RtcWEB,6,2208,ExtensionOfPrevious,,-1,"
title WebRTC Session - 2-Way Secure Audio,Video,RTT with RTCP Feedback
Alice->Bob: Offer(Audio:G.711,Opus,iLBC Video:H.264,VP8  RTT:T.140)
Bob->Alice: Answer(Audio:Opus,DTMF Video:H.264  RTT:T.140)
Alice->Bob: Two-way Opus Audio, H.264 Video,  T.140 Real-time text
note right of Alice
Session also suports RTP/RTCP Mux, RTCP feedback (nack,pli)
end note",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3283,RtcWEB,6,2209,ExtensionOfPrevious,,-1,"
More specifically, this use-case demonstrates following aspects of a
WebRTC session
SRTP with DTLS based encryption
RTP and RTCP Muxing
RTCP based feedback and reduced size support
ICE processing for NAT Traversal
Audio Codec Offered :  PCMU, Opus, iLBC
Audio Codec Answered :  Opus
Video Codecs Offered:  H.264, VP8
Video Codecs Answered:  H.264
Real-time text Offered: T.140
Real-time text Answered: T.140
Data Channel Support
The tables (4.1 and 4.2) below capture in detail, the initial SDP
Offer and Answer messages exchanged.",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3284,RtcWEB,6,2210,ExtensionOfPrevious,,-1,"
| SDP Contents                             | RFC#/Notes             |
/------Add the following after video SDP and before SCTP SDP-----/",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3285,RtcWEB,6,2211,ExtensionOfPrevious,,-1,"
| m=text 60109 RTP/SAVPF 105 104           | [RFC4566]              |
| c= IN IP4 24.23.204.141                  | [RFC4566]              |
| a=rtpmap:105 RED/1000                    | [RFC4102]              |
| a=rtpmap:104 T140/1000                   | [RFC4103]              |
| a=fmtp:105 104/104/104                   | [RFC4103]              |
| a=sendrecv                               | [RFC3264] - Alice can  |
|                                          | send and recv rtt      |
| a=rtcp-mux                               | [RFC5761] - Alice can  |
|                                          | perform RTP/RTCP       |
|                                          | Muxing on port 54609   |
| a=candidate:0 1 UDP 2113667327           | [RFC5245] - Host ICE   |
| 192.168.1.4 60109 typ host               | Candidate              |
| a=candidate:1 1 UDP 694302207            | [RFC5245] - Server     |
| 24.23.204.141 60109 typ srflx raddr      | Reflexive ICE          |
| 192.168.1.4 rport 60109                  | Candidate for the      |
|                                          | above host candidate   |
| a=candidate:0 2 UDP 2113667326           | [RFC5245] - Second     |
| 192.168.1.4 61778 typ host               | Host Candidate         |
| a=candidate:1 2 UDP 1694302206           | [RFC5245] -Server      |
| 24.23.204.141 61778 typ srflx raddr      | Reflexive Candidate    |
| 192.168.1.4 rport 61778                  | for the Second Host    |
|                                          | Candidate              |
| a=rtcp-fb:105 nack                       | [RFC5104] - Indicates  |
|                                          | NACK RTCP feedback     |
|                                          | support                |
/-------End of addition for real-time text---------------------/",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3286,RtcWEB,6,2212,ExtensionOfPrevious,,-1,"
Table 1: 4.1 SDP Offer",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3287,RtcWEB,6,2213,ExtensionOfPrevious,,-1,"
And similarly for the SDP answer and the other examples.",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3288,RtcWEB,6,2214,ExtensionOfPrevious,,-1,"
If that is the accepted principle, we can go ahead and propose the complete changes.",<50A8B676.2070501@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 11:20:38
3289,RtcWEB,6,2313,"NeutralResponse,ProposeAction",,-1,"After a rapid browse, this is my view of what needs to be done to
specify real-time text in RTCWEB and WebRTC.",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3290,RtcWEB,6,2314,ExtensionOfPrevious,,-1,"
1. draft-ietf-rtcweb-overview
Make definition of Media to include real-time text
Define the short form rtt
Add rtt to descriptions in e.g. sections 2.1 and 2.2
non-critical",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3291,RtcWEB,6,2315,ExtensionOfPrevious,,-1,"
2. draft-ietf-rtcweb-use-cases-and-requirements
add a couple of rtt use cases
add requirements for rtt
add api requirements for rtt
important, initiated",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3292,RtcWEB,6,2316,ExtensionOfPrevious,,-1,"
3. draft-nandakumar-rtcweb-sdp
add codec description for rtt
add sdp for rtt for the use cases
important, initiated",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3293,RtcWEB,6,2317,ExtensionOfPrevious,,-1,"
4. draft-x-rtcweb-rtt
rtt specifics for rtt codec and rtp usage
( take inspiration from draft-ietf-rtcweb-audio )
new needed draft - not initiated",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3294,RtcWEB,6,2318,ExtensionOfPrevious,,-1,"
5. draft-ietf-rtcweb-jsep
add rtt to API MediaHints  clause 6.1.1
add rtt to examples in chapter 7.
important",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3295,RtcWEB,6,2319,ExtensionOfPrevious,,-1,"
6. draft-ietf-rtcweb-rtpusage
mention rtt
add rtt to mixer discussion
non-critical",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3296,RtcWEB,6,2320,ExtensionOfPrevious,,-1,"
7. draft-thomson-rtcweb-api-req
mention rtt
non-critical",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3297,RtcWEB,6,2321,ExtensionOfPrevious,,-1,"
8. draft-aboba-rtcweb-ecrit
adjust rtt discussion for emergency calls to current status
non critical",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3298,RtcWEB,6,2322,ExtensionOfPrevious,,-1,"
9. w3c.webrtc
add rtt API, e.g. to Network Stream API
important, urgent",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3299,RtcWEB,6,2323,ExtensionOfPrevious,,-1,"
10. w3c getusermedia
add rtt to GetUserMedia API
important, urgent",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3300,RtcWEB,6,2324,Question,,-1,"
Any more?
Any less?",<50A93D16.6010503@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-18 20:55:02
3301,RtcWEB,6,2351,NeutralResponse,2317,2317,"This is the one that will have to make the compelling case that we know
what we're talking about.
So far, I'm not compelled - but as I said before, I don't understand
T.140 or the case for picking that particular solution over the 5-6
other solutions proposed in this discussion.

(I sure hope we're not going to revisit the RFC 4103 / RFC 4351
discussion; I don't know what it was, but I recognize the tracks of
battles when I see them. Gunnar is an author on both documents, so I
assume he can explain if needed.)
",<50A986D9.5000705@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-11-19 02:09:45
3302,RtcWEB,6,2369,InformationProviding,,-1,"
""This is the one that will have to make the compelling case that we
know what we're talking about.""",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3303,RtcWEB,6,2370,ExtensionOfPrevious,,-1,"
[BA] To understand what we're talking about, some uses cases would be helpful, in order to understand which of the following requirements apply:",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3304,RtcWEB,6,2371,ProposeAction,,-1,"
1. Need to interoperate with existing RTT implementations (e.g. XEP-0301 or RFC 4103).
2. Need to support ""real-time text"" capabilities as defined in M376 or the Access Board requirements 2.0 (both still in draft).
3. Need to support ""lip sync"" between audio/video/text (as opposed to simply replication of inter-character spacing).",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3305,RtcWEB,6,2372,NeutralResponse,,-1,"
Requirement #1 can be supported in a JS library with an appropriate gateway (e.g. BOSH/Websockets for XEP-0301, an SCTP to RTP gateway for RFC 4103) without any support in the browser.",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3306,RtcWEB,6,2373,ExtensionOfPrevious,,-1,"
Requirement #2 can be supported via the data channel without a standard, or by extracting parts of a standard (e.g. XEP-0301 RTT support)",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3307,RtcWEB,6,2374,NeutralResponse,,-1,"
Requirement #3 may require native support, but a clarification of the use case would be helpful.  For example, in realtime conference with captioning, there is a time lag, so ""lip syncing"" of text to the audio/video (as is possible in RFC 4103) may not in practice perform that much better than replication of inter-character spacing as is supported in XEP-0301, though it would be considerably more complex to implement.",<BLU002-W64803543E573BBFA76CF3A93560@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-11-18 23:48:29
3308,RtcWEB,6,2432,"Agreement,NeutralResponse",,281,"
Yes, now after the overview of what would be needed in RTCWEB and WebRTC
to include RTT I agree that starting with ""draft-x-rtcweb-rtt"" would be
good for clarifying requirements and alternatives and draw conclusions.

For your info, all real-time text methods in IP environments transmit
time-sampled text, with sample time of 300 -700 ms.

1. RFC 4103 uses RTP, with redundancy to get reliability, and declares
the stream in SDP as text medium. T.140 is the text codec, just saying
that text shall be transmitted by UTF-8 and specifying some control
codes. There are two payload types combined RED for simple RFC 2198 type
redundancy and T140 for the text itself. The recommended sample time is
300 ms. This is in use in SIP applications and also specified in
emergency service specifications.

2. RFC4351 also uses RTP in a very similar way to send RTT. But it has
SDP declaration as audio and is transmitted multiplexed with audio
codecs in a similar way as RFC 4733. The main use was intended to be for
reliable transport of legacy real-time text through IP between VoIP
gateways, where the extra ports needed for a separate text RTP stream
through separate ports would possibly be expensive. RFC4351 was given
Historic status already from its approval in order to discourage from
any other use. Transmission is UTF-8-coded.

3. XEP-0301 is a draft XMPP extension, that transmits time sampled text
in XMPP Messages, but not as Body, but as RTT XML elements, so it can be
sent and presented as a gradually built up message, and then replaced by
the message when completed. The recommended sample time is 700 ms, and
in order to avoid jerky impression, the presentation of keystrokes are
timed within these transmission intervals. Transmission is UTF-8.
",<50A9F3B0.90604@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-19 09:54:08
3309,RtcWEB,6,2484,"NeutralResponse,Apologising",2432,2432,"
I'd state (from this very short description) that XEP is a better match
for web and webapps (and WebRTC), though XML is not necessarily an ideal
encoding format for JS apps.  But if interoperability with existing
T.140-based infrastructure is important (and realize gateways will be
involved!), then something easily transformed into RFC 4103/4351 might
be preferred (if XEP can't be).  (But this does not necessarily mean
transmission over RTP is a *requirement* between a rtcweb UA and the
gateway.)  (Cue Hadriel's normal statement about gateways not always
having access to the media channels.... ;-) Though he hasn't spoken
about DataChannel gatewaying; it may make his head explode - sorry Hadriel.)
",<50AA33C8.4060903@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-11-19 08:27:36
3310,RtcWEB,6,2544,"Question,NeutralResponse",2322,2322,"
W3C-ish stuff:
This one would be complex, and probably shouldn't be in getUserMedia
(though it could).  A more equivalent API would be mediastream =
video_element.captureStreamUntilEnded() - create a MediaStream from a
video (or audio) element; you could do something like that.

To implement this, there needs to be a DOM element to capture it via.
The main options would be an <input> element or a media element.  But
the are more issues, especially with a media element as a source, and
serious UI issues if specified in them.

A better question would be ""What's the minimal (and most generic) API
that covers the use cases, and do these abilites already exist?""

I'll make an assertion: existing facilities for access to keystroke data
(and certainly for text display) are sufficient, and the only API
*needed* (and which covers all sorts of other use cases) would be the
ability to insert/receive text data from a MediaStream from JS.  E.g
textstream = <whatever>; textstream.insert(key) (or keys).  And the same
in the other direction: textstream.ondata(function(keys, time) { do
whatever with the keys });  I'd assert for text in a MediaStream that's
a far more natural JS API - and so happens to also be very close to the
API of a simple keystream over WebSocket or DataChannel.

Another thing to note is that WebSockets and DataChannels are virtually
identical (on purpose), so any work to standardize text chat over
DataChannels would apply equally well to chat over WebSockets, which
would have lots of real-world applications.

This assumes that a MediaStream is the correct transfer mechanism (and
correct API at the W3 level), which is definitely something I'd agree to
at this point.  I also wouldn't rule it out (I see some arguments in
favor, as well as against) - but this needs to occur in
public-webrtc@w3, and would do so before going too far down the path
here assuming a MediaStream is the mechanism.

For this part of the conversation, I strongly suggest it occur on
public-webrtc, so reply there please.
",<50AA2FC6.6090409@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-11-19 08:10:30
3311,RtcWEB,6,2562,Question,,-1,"
In this case, would that mean that when I type something and then want
to correct it, backspaces would be transmitted, too?  If so, I doubt it
is useful.   The second case, with the user having control over sending
of the message, is much better.
",<50A147FF.2000003@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:03:27
3312,RtcWEB,6,2564,Answer,,-1,"Yes, backspaces are transmitted.",<50A14E2A.5030205@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 20:29:46
3313,RtcWEB,6,2617,ExtensionOfPrevious,,-1,"
I can assure that it is useful.",<50A14E2A.5030205@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 20:29:46
3314,RtcWEB,6,2618,ExtensionOfPrevious,,-1,"
And it needs not to be compared to messaging. It is intended for real
conversational use of text, without the artificially created pauses for
composing complete messages occurring in messaging. Just let the text go
as you type it, with slight delay for time-sampling as for audio and video.
It provides a rapid and smooth way to have the conversing parties
synchronized in thoughts.",<50A14E2A.5030205@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 20:29:46
3315,RtcWEB,6,2619,ExtensionOfPrevious,,-1,"
There is of course still scope for traditional messaging even if I am
more interested to see the real-time text implemented together with the
other real-time media in RTCWEB. And there is even work on the way to
introduce correction in already sent messages in traditional messaging.
It is in XMPP XEP-0308. http://xmpp.org/extensions/xep-0308.html    Also
that is useful, and reduces stress, frustration and extra typing. It is
usually when you have just completed and sent your message that you
discover the mistake and want to correct it.",<50A14E2A.5030205@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 20:29:46
3316,RtcWEB,6,2707,Thanking,,-1,"Thanks for a quick reply!  (Meanwhile, I was assured by Keith Drage that
this feature is needed by deaf--something I  was not aware of, so I need
to catch up on learning.  I imagine this would be used in speech-to-text
conversion and transmission.)",<50A15325.1010504@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:51:01
3317,RtcWEB,6,2708,NeutralResponse,,-1,"
Of course, thanks to my advanced age, I remember the Unix ""Write""
application that did just that.  My bad experience with it was that 22
years ago I used that very application to communicate with my big boss,
and I wrote  something without counting to 1,000.  I should have
counted:  The backspaces did not help...",<50A15325.1010504@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:51:01
3318,RtcWEB,6,2709,ExtensionOfPrevious,,-1,"
So I walked to Dennis Ritchie's office, told him what happened, and
suggested that ""Write"" ought to display messages only when Return is
hit. Surprisingly, he immediately agreed with me, but System 5 was
already out of his immediate control.  He promised to follow-up through
the Unix Consortium, but soon that entity disappeared from our radar
screen.  Inferno and Plan 9 though transmitted only full messages.",<50A15325.1010504@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:51:01
3319,RtcWEB,6,2710,ExtensionOfPrevious,,-1,"
This is what prompted my question.",<50A15325.1010504@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:51:01
3320,RtcWEB,6,2711,ExtensionOfPrevious,,-1,"
Now it has been answered!",<50A15325.1010504@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2012-11-12 14:51:01
3321,RtcWEB,6,2818,"NeutralResponse,Thanking",,-1,"Igor,
Thanks for the explanation.
And I am striving for the communicating users to get back the rights to
display their mistakes ;-)",<50A15681.1060102@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 21:05:21
3322,RtcWEB,6,2889,NeutralResponse,2708,2708,"
Write(1) is one-way, talk(1) is two-way, but with real-time view of
typing like Write.
",<50A15BA8.2080403@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-11-12 15:27:20
3323,RtcWEB,6,2891,Agreement,2708,2708,"
I agree with Jim here - we-the-rtcweb-working-group do not have to spec
out the solution to a specific country's legislative VRS/text
requirements here, but should provide a mechanism for someone providing
a service using these protocols to comply with (most) of those standards
around the world.  We can't follow all such legal requirements, as they
are myriad and ever-changing, which is why good, generic transports and
programmability are an excellent answer to the issue, especially as a
start, and encourage people building responses to those requirements to
do so in a standard way (preferably through a standards body, even an
appropriate IETF working group).

For example, the current VRS spec requires implementation of H.323 and
ENUM... (and H.263 for video).

I'll note that other country-specific telecom-regulation-requirements
fall into this bucket as well, which I have no wish to bake into the
core spec.
",<50A15BA8.2080403@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-11-12 15:27:20
3324,RtcWEB,6,3003,NeutralResponse,,-1,"I am not talking about this for any specific requirements of a country.
And not specfically from the accessibility point of view, even if it is
included in the picture.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3325,RtcWEB,6,3004,ExtensionOfPrevious,,-1,"
All have a need for text communication occasionally or often in a call
with voice or video.
And the less wait time it causes, the more popular it will be.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3326,RtcWEB,6,3005,ExtensionOfPrevious,,-1,"
Same with the standards it uses. The more wide spread and interoperable
it is, the more happy users it will get.
And we can be proactive. Making a global solution usable for all should
satisfy also the accessibility side better than any national solution.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3327,RtcWEB,6,3006,ExtensionOfPrevious,,-1,"
After the discussions today, I can see four solutions. It might be good
to take them all a bit further to check pros and cons:",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3328,RtcWEB,6,3007,ExtensionOfPrevious,,-1,"
1. RFC 4103/T.140 in RTP/AVPF and SDP exchange in the same way as for video.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3329,RtcWEB,6,3008,ExtensionOfPrevious,,-1,"
2. T.140 and something RFC4103-like in RTCWEB data channel and a
specific protocol id.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3330,RtcWEB,6,3009,ExtensionOfPrevious,,-1,"
3. XMPP XEP-0301 negotiated with SDP as an expired draft proposes, and
transmitted by JS",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3331,RtcWEB,6,3010,ExtensionOfPrevious,,-1,"
4. XMPP XEP-0301 transmitted by JS / Websockets and negotiated in XMPP,
and just specified to be used for this purpose.",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3332,RtcWEB,6,3011,ExtensionOfPrevious,,-1,"
All 4 are variants fulfilling the use case extending the video telephony
use case that I proposed to be extended by audio and real-time text.  (
audio might have been there, but very vaguely described )",<50A17774.9050004@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-12 23:25:56
3333,RtcWEB,6,3164,NeutralResponse,,-1,"I'd like to enter WebVTT or more generically the TextTrackCue API of HTML
into this discussion as a format for specifying timed text snippets - in
particular for captions/subtitles, but also generally for any timed text
requirements. They are being supported by all browsers, so should be
relevant to WebRTC.",<CAHp8n2=Qub-43hkQ_6EW+8juQpFvE9TMyhd0tSf=QpfWA85bJA@mail.gmail.com>,silviapfeiffer1@gmail.com,0.0,0,20,2012-11-13 10:30:51
3334,RtcWEB,6,3165,ExtensionOfPrevious,,-1,"
The way I can see this being used is that you can look at a TextTrackCue as
a ""frame"" of text with time stamps that can be transferred as a text entity
over something like XMPP.",<CAHp8n2=Qub-43hkQ_6EW+8juQpFvE9TMyhd0tSf=QpfWA85bJA@mail.gmail.com>,silviapfeiffer1@gmail.com,0.0,0,20,2012-11-13 10:30:51
3335,RtcWEB,6,3166,ExtensionOfPrevious,,-1,"
In fact, Apple's HLS [1] is using WebVTT to transport captions.",<CAHp8n2=Qub-43hkQ_6EW+8juQpFvE9TMyhd0tSf=QpfWA85bJA@mail.gmail.com>,silviapfeiffer1@gmail.com,0.0,0,20,2012-11-13 10:30:51
3336,RtcWEB,6,3167,ExtensionOfPrevious,,-1,"
If we're starting to talk about baseline formats for timed text/data in
WebRTC, WebVTT sounds like a pretty good candidate to me. Combined with a
protocol that includes backspace and other live text editing features, I
think it can provide for the transfer of richer text and not just plain
text.",<CAHp8n2=Qub-43hkQ_6EW+8juQpFvE9TMyhd0tSf=QpfWA85bJA@mail.gmail.com>,silviapfeiffer1@gmail.com,0.0,0,20,2012-11-13 10:30:51
3337,RtcWEB,7,0,InformationProviding,,-1,I am thinking that https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 should include a requirement that a WebRTC Browser MUST support the TURN server discovery as described in https://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00.,<9F33F40F6F2CD847824537F3C4E37DDF1E63FB08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-15 14:42:27
3338,RtcWEB,7,6,Disagreement,,-1,I do not believe that this is an appropriate requirement,<CABcZeBOpX0vM9NJeKY5e+S13oKrLW3Td53qcxRkCHa2=nv=EGg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-12-15 07:44:53
3339,RtcWEB,7,45,ClarificationElicitation,6,6,"
Care to say why?
",<CANO7kWBY1MTU1A2fWo0E5Y6TQ1o+vWSz22pnWz6+5s7SFQcP-g@mail.gmail.com>,sperreault@jive.com,0.0,1,0,2014-12-15 10:49:19
3340,RtcWEB,7,48,ExtensionOfPrevious,,-1,+1 Also wondering why it is not appropriate?,<9F33F40F6F2CD847824537F3C4E37DDF1E63FD67@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-15 15:56:26
3341,RtcWEB,7,75,NeutralResponse,,-1,"
F20 in the requirements draft states:",<9F33F40F6F2CD847824537F3C4E37DDF1E63FD67@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-15 15:56:26
3342,RtcWEB,7,76,ExtensionOfPrevious,,-1,"
F20     The browser must support the use of STUN and TURN
servers that are supplied by entities other than
the web application (i.e. the network provider).",<9F33F40F6F2CD847824537F3C4E37DDF1E63FD67@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-15 15:56:26
3343,RtcWEB,7,77,ExtensionOfPrevious,,-1,"
So I was thinking the need for specifying the discovery method would not be controversial.",<9F33F40F6F2CD847824537F3C4E37DDF1E63FD67@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-15 15:56:26
3344,RtcWEB,7,151,Answer,,-1,"I think making it a requirement is probably premature until we have a WG
document that explains what should happen when you discover one of these
network-provided TURN servers. Once
https://tools.ietf.org/html/draft-schwartz-rtcweb-return-04 is accepted as
a WG doc, we can add a requirement for support for RETURN and server
discovery.",<CAOJ7v-1NnS1QOF-Ujv7a=qCnXrQ0htd0b4TFUDaKgwik9Rd=-Q@mail.gmail.com>,juberti@google.com,0.0,0,5,2014-12-15 14:43:32
3345,RtcWEB,7,152,ExtensionOfPrevious,,-1,"
Unclear whether it needs to be MUST-strength until we get some
implementation feedback though.",<CAOJ7v-1NnS1QOF-Ujv7a=qCnXrQ0htd0b4TFUDaKgwik9Rd=-Q@mail.gmail.com>,juberti@google.com,0.0,0,5,2014-12-15 14:43:32
3346,RtcWEB,7,176,NeutralResponse,152,152,"
-transports already states "" WebRTC browsers MUST support configuration of STUN and TURN servers, both from browser configuration and from an application"".

So it looks like we already have a requirement but no explanation of what should happen when both are available.

Looks like we need to adopt draft-schwartz-rtcweb-return and explain this stuff. I would certainly support that and put some effort into getting this done.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF1E643D2C@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-17 16:19:45
3347,RtcWEB,7,210,NeutralResponse,176,176,"
The last times we've talked about this, people have imagined configuring
this via the same mechanism as configuring HTTP proxies (nonstandard
script at a nonstandard URL).

Autodiscovery may be preferable, but it's not clear that it removes the
need for the script-like things.
",<5491B831.70704@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2014-12-17 18:06:57
3348,RtcWEB,7,255,NeutralResponse,210,210,"
If there is, gathering that requirement seems important.  Mark Nottingham was beginning an effort around WPAD standardization (or something that resembled it).  CC'ing him in case there is useful status on that front.

-d
",<F1DDC0E1-8B87-45D9-ACDD-7A53F34A79E2@cisco.com>,dwing@cisco.com,0.0,0,0,2014-12-17 13:58:58
3349,RtcWEB,7,258,NeutralResponse,,-1,"I’d say that there’s some level of implementer interest in standardising / documenting proxy.pac, but — so far — inadequate resources; I don’t see *any* interest in WPAD standardization, as it’s viewed as actively bad.",<E1B969F2-318A-4514-8899-44D595F63F30@mnot.net>,mnot@mnot.net,0.0,0,1,2014-12-24 16:54:47
3350,RtcWEB,7,409,"Agreement,NeutralResponse",,-1,"The actual requirement (as indicated in S 3.3.5.1 of
https://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15#page-8)
is for an enterprise to be able to force the use of a enterprise-controlled
TURN server. Here, enterprise policy surely can allow for all traffic to be
forced through said TURN server, just as it can be done for HTTP/HTTPS
proxies today.

I agree that the ISP TURN server case is different, and merits additional
discussion. So while we can argue about exactly how autodiscovery should
work (e.g. .pac or
https://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00), we
should be able to agree on how things should work once a local TURN server
is found (i.e. https://tools.ietf.org/html/draft-schwartz-rtcweb-return-04

This would allow the above scenario to be satisfied when the TURN proxy
configuration is set through enterprise policy, and would be a substantial
improvement over the current state of affairs (e.g. where many enterprises
force all WebRTC traffic to TCP or through a HTTPS proxy)
",<CAOJ7v-0Tu_xc6fdETnnN7y87jho538c8O23aP6VfJbYq1kJAaw@mail.gmail.com>,juberti@google.com,0.0,0,5,2015-01-07 20:15:11
3351,RtcWEB,7,412,Agreement,,-1,I agree we surely do need to need to cater for the case when a local TURN server is discovered or configured by the user/admin and specify how the WebRTC browser behaves in that scenario.  We have always had that requirement specified as Justin pointed out.,<9F33F40F6F2CD847824537F3C4E37DDF1E665417@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-01-08 15:57:01
3352,RtcWEB,7,495,Agreement,,-1,"
I support moving forward with draft-schwartz-rtcweb-return as it covers that use case.",<9F33F40F6F2CD847824537F3C4E37DDF1E665417@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-01-08 15:57:01
3353,RtcWEB,7,496,NeutralResponse,,-1,"
The actual discovery mechanism is I assume something to discuss in TRAM.",<9F33F40F6F2CD847824537F3C4E37DDF1E665417@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-01-08 15:57:01
3354,RtcWEB,7,541,NeutralResponse,77,77,"
Note that draft-ietf-tram-turn-server-discovery only discovers TURN servers.  If we need to discover STUN servers, too -- and I think we do -- we need that document to expand its scope or a second document.

I recently attended a talk where Matt Peterson presented Burning Man's network.  That network assigns RFC6598 addresses to each Burning Man ""camp"", and their ISP provides CGN'd addresses to Burning Man.  Each camp operates its own WiFi network, and we can all reasonably assume they are using typical consumer or SMB NAPT devices for those networks (e.g., D-Link, Linksys, Ubiquity, etc.).  To avoid tromboning camp-to-camp WebRTC traffic to their ISP's CGN, they would benefit from a STUN and a TURN server within the Burning Man network.  His presentation can be found at https://www.nanog.org/meetings/nanog62/agenda (PDF and video).

-d
",<FAA9B38F-1AB8-4E2C-AB02-2525402B4890@cisco.com>,dwing@cisco.com,0.0,0,0,2014-12-15 17:23:43
3355,RtcWEB,7,614,Question,,-1,"Given that TURN servers can be used for STUN, is there a need to
autodiscover STUN-only servers?",<CAOJ7v-3xxVa05kA0SYVYQO324AwLWGUo8f_u534fN_-De0AV4A@mail.gmail.com>,juberti@google.com,0.0,0,5,2014-12-16 09:40:18
3356,RtcWEB,7,677,"Question,Answer",614,614,"
I am not aware of spec encouraging such implementations, and I don't know if everyone implementing WebRTC clients is going to be aware that TURN servers can provide useful information about the mapped IP address.  Perhaps it just needs a few sentences in an appropriate spec?

-d
",<DA5613E8-DAAB-41DC-9A16-4C3D567A607B@cisco.com>,dwing@cisco.com,0.0,0,0,2014-12-16 11:16:55
3357,RtcWEB,7,770,ProposeAction,,-1,"Seems like something that should go into -transports (i.e. that WebRTC
clients SHOULD obtain a srflx address from the TURN server, in addition to
any provided STUN servers).",<CAOJ7v-0ZJt9ykV66A4dbttJ5HVhANW29cG+bbjvdmtvwEmS--g@mail.gmail.com>,juberti@google.com,0.0,0,5,2014-12-16 16:56:13
3358,RtcWEB,7,782,Answer,677,677,The information is buried deep down in the TURN RFC 5766 Section 6.2. It states that the allocation success response contains a XOR-MAPPED-ADDRESS attribute. (No use of SHOULD or MUST).,<D922D989-5BE8-492B-8C16-0DBD55DCC27A@cisco.com>,palmarti@cisco.com,0.0,0,14,2014-12-17 11:37:23
3359,RtcWEB,7,860,ExtensionOfPrevious,677,677,"
It also have a nice note:
""NOTE: The XOR-MAPPED-ADDRESS attribute is included in the response
as a convenience to the client.  TURN itself does not make use of
this value, but clients running ICE can often need this value and
can thus avoid having to do an extra Binding transaction with some
STUN server to learn it.”

Stating the above in some overview document will help people deploying WebRTC understand the requirements. The text in the TUNR RFC will probably only be read by TURN developers.

More importantly what is missing is text stating that deployed WebRTC turn servers should also send appropriate responses to Binding Requests; in other words act as a STUN server. Not sure about the appropriate spec, but it can go into TURNbis or some WebRTC overview document.

Pål-Erik
",<D922D989-5BE8-492B-8C16-0DBD55DCC27A@cisco.com>,palmarti@cisco.com,0.0,0,14,2014-12-17 11:37:23
3360,RtcWEB,7,877,NeutralResponse,541,541,"
We could say in https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 that WebRTC endpoints SHOULD make use of the address returned from a TURN server rather than doing a separate STUN binding.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF1E643CFD@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-17 16:11:31
3361,RtcWEB,7,879,"Question,NeutralResponse",,-1,"It seems that in the mobile case and many residential cases, doing that draft would allow a service provider to force all the traffic through a TURN server of the service providers choosing. Am I reading this correctly because I am pretty sure I would not be in favor of that.",<6946D534-CBE7-4D1A-8C26-4D2FE07136D1@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-18 17:23:37
3362,RtcWEB,7,895,InformationProviding,,-1,"https://tools.ietf.org/id/draft-ietf-tram-turn-server-discovery-00.txt makes the claim that it is needed for ""WebRTC usage"" and in fact claims that it is needed by WebRTC ""immediately"".",<9F33F40F6F2CD847824537F3C4E37DDF1E645482@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-18 18:39:18
3363,RtcWEB,7,936,NeutralResponse,,-1,"
I was just pointing out that if this is the case then it should be referenced from a RTCWEB draft.",<9F33F40F6F2CD847824537F3C4E37DDF1E645482@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-18 18:39:18
3364,RtcWEB,7,937,ExtensionOfPrevious,,-1,"
If you think the discovery mechanism is not suitable for WebRTC usage then please make that comment to the TRAM WG list.",<9F33F40F6F2CD847824537F3C4E37DDF1E645482@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-18 18:39:18
3365,RtcWEB,7,982,NeutralResponse,,-1,"So, I think it's important that we have some way to encourage deployment
of TURN servers both in the ISPs, and as part of firewalls (both
residential and enterprise). By putting TURN in paths that are already
going to bear the traffic in question, the overall cost associated with
calls goes down, and call quality (latency, loss) improves.",<54933BA3.9040209@nostrum.com>,adam@nostrum.com,0.0,0,1,2014-12-18 14:40:03
3366,RtcWEB,7,983,ExtensionOfPrevious,,-1,"
I'm sympathetic to the position that we don't want to give these
entities specific hooks to force specific servers to be inserted into
the flow. We need to find a balance here: something that allows the
relevant entities to deploy and advertise such servers; something that
allows WebRTC applications to discover and use them; and something that
puts the ultimate decision in the hands of the users. Off the top of my
head, adding a browser API that allows applications to  to retrieve
these servers and elect to use them if it wants to would serve part of
the purpose; giving users a means by which they can instruct the browser
not to return such a list would serve the remainder.",<54933BA3.9040209@nostrum.com>,adam@nostrum.com,0.0,0,1,2014-12-18 14:40:03
3367,RtcWEB,7,984,ExtensionOfPrevious,,-1,"
But that's all kind of orthogonal to the IETF issues: if we're going to
do *anything* in this space, we need the discovery mechanisms.",<54933BA3.9040209@nostrum.com>,adam@nostrum.com,0.0,0,1,2014-12-18 14:40:03
3368,RtcWEB,7,988,InformationProviding,,-1,The priority order that makes most sense to me is:,<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3369,RtcWEB,7,1065,ExtensionOfPrevious,,-1,"
1. user override
2. app override
3. auto discovery
4. app fallback
5. user fallback",<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3370,RtcWEB,7,1066,ExtensionOfPrevious,,-1,"
If any override is configured by the user or app, do not perform auto
discovery, stop here.",<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3371,RtcWEB,7,1067,ExtensionOfPrevious,,-1,"
If auto discovery fails, use a fallback configured by the app or user.",<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3372,RtcWEB,7,1068,ExtensionOfPrevious,,-1,"
There is a big difference between an override and a fallback, so both seem
necessary.",<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3373,RtcWEB,7,1069,ExtensionOfPrevious,,-1,"
Obviously, we need some mechanism for 3 as Adam said, in case it needs to
be invoked.",<D0B8A9B6.40F29%mzanaty@cisco.com>,mzanaty@cisco.com,0.0,0,6,2014-12-18 21:19:37
3374,RtcWEB,7,1169,Agreement,,-1,+1 to Adam and Mo's comments which make a lot of sense to me.,<9F33F40F6F2CD847824537F3C4E37DDF1E645DA3@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-19 10:15:09
3375,RtcWEB,7,1275,"Question,Agreement",,-1,"
I agree we need to enable the use of TURN servers which provide the best user experience so enabling the use of TURN servers close to the clients makes sense.  At the same time there are some security considerations which we can provide some guidance on so would it make sense to do the following?",<9F33F40F6F2CD847824537F3C4E37DDF1E645DA3@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-19 10:15:09
3376,RtcWEB,7,1276,ProposeAction,,-1,"
1. Add a reference to draft-ietf-tram-turn-server-discovery in -transports- and make it a SHOULD/MAY/MUST implement (I prefer MUST but I know others probably don't).",<9F33F40F6F2CD847824537F3C4E37DDF1E645DA3@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-19 10:15:09
3377,RtcWEB,7,1277,ProposeAction,,-1,"
2. Add some text either inline or in the security considerations about the concerns and the need for user/app override.",<9F33F40F6F2CD847824537F3C4E37DDF1E645DA3@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-19 10:15:09
3378,RtcWEB,7,1278,NeutralResponse,,-1,"
By the way I am not sure we need the app override if we consider draft-schwartz-rtcweb-return part of the solution.",<9F33F40F6F2CD847824537F3C4E37DDF1E645DA3@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-12-19 10:15:09
3379,RtcWEB,7,1412,NeutralResponse,,-1,"To reiterate, the TRAM draft doesn't specify what WebRTC should actually do
with the discovered TURN server(s).  RETURN (
https://datatracker.ietf.org/doc/draft-schwartz-rtcweb-return/) attempts to
fill in the details, and also resolve questions about priority of different
settings, etc.

Comments on the RETURN draft are appreciated, of couse.
",<CAHbrMsCG6PxfCZTeXv9guOvWmV=Miqg1O6p6LgXOdSyneoKqTw@mail.gmail.com>,bemasc@webrtc.org,0.0,0,15,2014-12-19 10:25:33
3380,RtcWEB,7,1416,NeutralResponse,,-1,Few cents ..,<CAMRcRGSpzNLn-PW+i9PYwfznv6fW_CpS6Ubf3c9Xqwdzh6xrmg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2014-12-19 22:28:19
3381,RtcWEB,7,1578,Agreement,,-1,"
I tend to agree with Cullen's sentiment since as a end user I don't want to
end up with service provider lock-in when using a TURN server.",<CAMRcRGSpzNLn-PW+i9PYwfznv6fW_CpS6Ubf3c9Xqwdzh6xrmg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2014-12-19 22:28:19
3382,RtcWEB,7,1579,NeutralResponse,,-1,"
Such lock-ins might not be a bad option but It need not be enforced by
design.",<CAMRcRGSpzNLn-PW+i9PYwfznv6fW_CpS6Ubf3c9Xqwdzh6xrmg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2014-12-19 22:28:19
3383,RtcWEB,7,1580,NeutralResponse,,-1,"
OTOH  I am not sure how effective will be a typical not-so-technical
end-user's decision making in choosing one turn server over the other.",<CAMRcRGSpzNLn-PW+i9PYwfznv6fW_CpS6Ubf3c9Xqwdzh6xrmg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2014-12-19 22:28:19
3384,RtcWEB,7,1581,NeutralResponse,,-1,"
But having flexibility is not a bad idea , thus i feel the spec needs to
just say the plausible options but mandating with MUST might not be what we
need here.",<CAMRcRGSpzNLn-PW+i9PYwfznv6fW_CpS6Ubf3c9Xqwdzh6xrmg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2014-12-19 22:28:19
3385,RtcWEB,7,1604,NeutralResponse,1581,1581,"
I think you're falling into the trap of not distinguishing between ""MUST
implement"" and ""MUST use"".

I'm not necessarily arguing that this is a ""MUST implement"" requirement
on browsers[1], but if we're going to figure out what makes sense, we
need to think about this properly.

/a

[1] I'd love to see this kind of discovery deployed universally, since I
believe it contributes to the long-term success of WebRTC, but I'd like
to hear other people's arguments for/against doing so before taking a
concrete position.",<54945B03.409@nostrum.com>,adam@nostrum.com,0.0,0,1,2014-12-19 11:06:11
3386,RtcWEB,7,1606,Agreement,,-1,"Adam, I think you are I are mostly saying the same thing. Things like there need to be incentives to deploy, the browser should tell the applications about available servers, and so on ...",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3387,RtcWEB,7,1646,ExtensionOfPrevious,,-1,"
There are probably a bunch of ways to do this - for example all the arguments being made about TURN server same equally true of HTTP socks servers yet my SP can't force all my traffic via a HTTP proxy of it's choosing. So I don't think claiming the privacy problems  is orthogonal to the the IETF issues is really OK. The privacy issues are pretty important. As you suggest, I'm OK with browser tells applications about servers that are available but I would not be keen on browser automatically choosing to use those. That creates the type of incentives that it's fine for the SP to block traffic that does not go through the approved (and inherently quality reducing) TURN server.",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3388,RtcWEB,7,1647,ExtensionOfPrevious,,-1,"
It's also important to have solutions that makes business sense. Running TURN server is often sort of expensive from the bandwidth point of view so typically the TURN servers have a relation with the actual application to enable them - it's not just that someone is going to provide TURN servers for  for all webrtc applications in all networks. It's going to be a bit more complicated than that and that in helps drive some of the requirements for this. A way where applications can discover TURN servers that they are authorized to use if far more appealing to me.",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3389,RtcWEB,7,1648,ExtensionOfPrevious,,-1,"
The privacy implications and bandwidth usage implications are very different for STUN and TURN and thus I think the appropriate discovery mechanics for them are likely different. At least the requirements for the mechanisms are different even if there is one mechanism that meets all the requirements.",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3390,RtcWEB,7,1649,ExtensionOfPrevious,,-1,"
As tempting as is sounds to leave the selection up to the user, I don't think that will work. I think it needs to be up to the application running on the browser with perhaps the possibility to be overridden by user.",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3391,RtcWEB,7,1650,ExtensionOfPrevious,,-1,"
There is a lot of ways to do discovery  and some of them are already supported so I think we should figure out what we want then work on which of various discovery approaches help with that.",<86247826-DF91-43AE-90C2-C1D07F4BB676@cisco.com>,fluffy@cisco.com,0.0,0,0,2014-12-19 20:28:41
3392,RtcWEB,8,27,ProposeAction,,-1,"
I would suggest that some section for general requirements that aren't
use case specific is created and at least one such requirement is added.",<4E801CFE.4030504@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-09-26 08:34:38
3393,RtcWEB,8,28,ExtensionOfPrevious,,-1,"
The requirement is the need to support IPv4 only, IPv6 only and
dual-stack deployments as required by our charter. I think this should
be added into the use-case and requirement document for two reasons.
First, that is located next to the other requirements, secondly because
W3C has decided to use our document also, I think it is important that
such a general requirement both on protocols and any address field in
the API handling both address families are covered.",<4E801CFE.4030504@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-09-26 08:34:38
3394,RtcWEB,8,46,Agreement,28,28,I support adding those requirements.,<4E804C96.1090701@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-09-26 11:57:42
3395,RtcWEB,8,102,ExtensionOfPrevious,28,28,"
I think that it can also be instantiated within the specific use cases,
such as:
- Point to point call: One endpoint on IPv4, the other endpoint on IPv6
- Multipoint call (with and without central server): One user on IPv4,
one user on IPv6

This is a limitation of the use-case-based model; it gets messy to
shoehorn all the ""permutations"" of situations into a single set of use
cases, without the list of use cases growing impossibly long or the use
cases' description expanding into incomprehensibility.

On balance, I think having a ""considerations applicable to all
scenarios"" section saying:

- Clients can be on IPv4-only
- Clients can be on IPv6-only
- Clients can be on dual-stack
- Clients can be on wideband (10s of Mbits/sec)
- Clients can be on narrowband (10s to 100s of Kbits/sec)
- Clients can be on variable-media-quality networks (wireless)
- Clients can be on congested networks
- Clients can be on firewalled networks with no UDP allowed
- Clients can be on networks with cone NAT
- Clients can be on networks with symmetric NAT

might be a good way to go forward.

A particular query on v4/v6 interoperation: Should we make it a
requirement that dual-stack to IPv4 always use the IPv4 native path
rather than a gateway functionality (and the converse for IPv6), or
should we just be silent about it?
I think it may affect some tuning of the ICE address selection
algorithm, in particular if we encounter 6to4 addresses. There might be
RFCs we can cite already.
",<4E804C96.1090701@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-09-26 11:57:42
3396,RtcWEB,8,200,NeutralResponse,,-1,"
I have some difficulties right now to judge what should be in and what
should be out (in terms of use cases). I think some more consensus calls
might be needed, but I need guidance from the chairs.",<4E806F99.1080104@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-09-26 14:27:05
3397,RtcWEB,8,201,ExtensionOfPrevious,,-1,"
Then there are some pieces that are discussed that are not really new
use cases, but things that could be added existing ones or as a separate
section. I keep a list of these at the *W3C* webrtc WiKi (because that
is convenient to me, and to show that there are two stakeholders!):
<http://www.w3.org/2011/04/webrtc/wiki/Main_Page#Use_cases_and_requirements>",<4E806F99.1080104@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-09-26 14:27:05
3398,RtcWEB,8,202,ProposeAction,,-1,"
Please give me a heads up of the things I have missed to put in that list.",<4E806F99.1080104@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-09-26 14:27:05
3399,RtcWEB,8,205,NeutralResponse,,-1,"I like the idea of a general considerations section applicable to all use cases, and I think this proposed list would be a good start.",<B5287021-4E94-4730-954E-2F718AFC532A@genband.com>,jim.mceachern@genband.com,0.0,0,19,2011-09-27 13:53:57
3400,RtcWEB,8,316,Agreement,28,28,"
+1
Cb
",<CAD6AjGQ55=rZ3+zM0BXaAKyPvqefhKtA9_07N-TwdA8dUEp5Ow@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2011-09-26 07:31:16
3401,RtcWEB,8,334,Agreement,28,28,I agree,<4E8175C8.2010902@ericsson.com>,salvatore.loreto@ericsson.com,0.0,0,2,2011-09-27 10:05:44
3402,RtcWEB,9,35,InformationProviding,,-1,"
Catherine Meadows is next in the rotation.",<21327.47842.897728.985569@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-17 14:28:34
3403,RtcWEB,9,36,ExtensionOfPrevious,,-1,"
For telechat 2014-04-24",<21327.47842.897728.985569@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-17 14:28:34
3404,RtcWEB,9,37,ExtensionOfPrevious,,-1,"
Reviewer                 LC end     Draft
Dan Harkins            T 2014-04-08 draft-ietf-idr-aigp-17
Charlie Kaufman        T 2014-04-23 draft-ietf-precis-framework-15",<21327.47842.897728.985569@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-17 14:28:34
3405,RtcWEB,9,38,ExtensionOfPrevious,,-1,"
Last calls and special requests:",<21327.47842.897728.985569@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-17 14:28:34
3406,RtcWEB,9,39,ExtensionOfPrevious,,-1,"
Tobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07
Phillip Hallam-Baker     2014-04-01 draft-ietf-trill-esadi-07
Sam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11
Jeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05
Jeffrey Hutzelman        2014-04-09 draft-ietf-mpls-psc-updates-03
Leif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11
Scott Kelly              2014-04-18 draft-kivinen-ipsecme-ikev2-rfc5996bis-02",<21327.47842.897728.985569@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-17 14:28:34
3407,RtcWEB,10,43,InformationProviding,,-1,"
Below is an initial draft agenda for the upcoming meeting.   Since we have
not yet reached the draft deadline (which is the 15th), there may be new
drafts or updates that result in changes.  We did already receive requests
for NAT/Firewall traversal discussion, and the chairs will be working with
the document authors to get them considered in the appropriate groups.",<CA+9kkMBuCTdFsUMtmuBz6BnrSJMpHywEZU+x+m8ARnGprvzDzA@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-07-11 09:51:06
3408,RtcWEB,10,44,ExtensionOfPrevious,,-1,"
As folks have probably noticed, we are meeting Thursday and Friday, after
the MMUSIC sessions are complete (they are Tuesday and Wednesday). This
should allow us to discuss the results on our first day.",<CA+9kkMBuCTdFsUMtmuBz6BnrSJMpHywEZU+x+m8ARnGprvzDzA@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-07-11 09:51:06
3409,RtcWEB,10,45,ProposeAction,,-1,"
Please send feedback or change proposals to the list.",<CA+9kkMBuCTdFsUMtmuBz6BnrSJMpHywEZU+x+m8ARnGprvzDzA@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-07-11 09:51:06
3410,RtcWEB,10,113,Apologising,,-1,"
I am sorry I must have missed your call for presentations.",<CAPvvaa+dyYmvsareEy1a9+7ketEFjNarsnRLXkpT_YHPTYni2w@mail.gmail.com>,emcho@jitsi.org,0.0,0,4,2013-07-11 19:35:34
3411,RtcWEB,10,114,Question,,-1,"
In you last mail on the subject you mentioned that we will be discussing No
Plan in Berlin together with plans A and B. Could we please add this to the
agenda?",<CAPvvaa+dyYmvsareEy1a9+7ketEFjNarsnRLXkpT_YHPTYni2w@mail.gmail.com>,emcho@jitsi.org,0.0,0,4,2013-07-11 19:35:34
3412,RtcWEB,10,132,Answer,,116,"
No. We believe that conversation needs to happen in the W3C WebRTC WG. I expect to see a message from W3C chairs on this at some point.",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D31FD@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 19:04:52
3413,RtcWEB,10,143,Question,132,132,"
I'm a little nervous about this.  Where does the decision on the
separation of responsibilities (API vs. SDP) get made?",<CABkgnnU9r9OT+XW=Ewf=25yBJGCEZxCVnu_r1D=Eu=f9wrV4Kg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 12:37:49
3414,RtcWEB,10,159,Answer,143,143,"
Jointly by the chairs of RTCWEB and WebRTC, based on
<http://www.w3.org/2011/04/webrtc-charter.html> and
<http://tools.ietf.org/wg/rtcweb/charters>, one would presume.

/a",<51DF0BA6.8040609@nostrum.com>,adam@nostrum.com,0.0,0,1,2013-07-11 14:46:46
3415,RtcWEB,10,168,NeutralResponse,159,159,"
To be perfectly clear, that's precisely what makes me nervous.",<CABkgnnWDDAgODjQa9+noMULOOjbkuMYCpbNWCf6QLV_WLjDVgw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 13:18:15
3416,RtcWEB,10,185,Agreement,168,168,"
[MB] Me too. [/MB]",<CAHBDyN5xHG3hXsWFpcXXpujyzcQweFDa-bzOOv-0uheXyH-gYA@mail.gmail.com>,mary.ietf.barnes@gmail.com,0.0,0,0,2013-07-11 19:06:29
3417,RtcWEB,10,206,NeutralResponse,185,185,"
One might read this to imply that this was chair decision about the scope, but in this case, I don't think the chairs have very much to do with if the no-plan draft happens to be in scope of this WG or not.  As the authors explained it, it is purely an API change with no changes to anything on the wire. Everyone in this WG seems to agree on where API works happens and I have not heard any disagreement on that. Of course that not surprising that there is not disagreement on this as the charters of WebRTC and RTCWeb seem relatively clear on this.

On the decision of what to put on a draft agenda before the -00 deadline, of course Ted and I take responsibility for the current draft agenda.",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D4AA8@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-12 00:55:44
3418,RtcWEB,10,231,"Question,NeutralResponse",,-1,"I can see some implied outcomes for some of the items.  Would it help
to list some (aspirational) goals.
",<CABkgnnXOa44ZkZj-g6r7Qdk8dwm6m81yT4U=Q23-hE1Q7Hn22w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 11:08:08
3419,RtcWEB,10,233,Question,,-1,"
Are the chairs confident that this topic can be resolved in this time?
We managed to fritter a similar amount of time away without
conclusion in the past.  I can see how you plan to accommodate
overruns, but that just opens the possibility more time-wasting.  How
do we ensure that this discussion actually concludes?
",<CABkgnnXOa44ZkZj-g6r7Qdk8dwm6m81yT4U=Q23-hE1Q7Hn22w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 11:08:08
3420,RtcWEB,10,235,Question,,-1,"
How are you planning to prepare for this?  Do you have presenter
candidates lined up?
",<CABkgnnXOa44ZkZj-g6r7Qdk8dwm6m81yT4U=Q23-hE1Q7Hn22w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 11:08:08
3421,RtcWEB,10,236,Question,,-1,"
I'm curious how you intend to spend this time.",<CABkgnnXOa44ZkZj-g6r7Qdk8dwm6m81yT4U=Q23-hE1Q7Hn22w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 11:08:08
3422,RtcWEB,10,281,Question,,233,"> I can see some implied outcomes for some of the items.  Would it help
> to list some (aspirational) goals.
> On 11 July 2013 09:51, Ted Hardie <ted.ietf@gmail.com> wrote:
>> Should SDES be part of  WebRTC security practice and, if so, how?
>> Presentations: 30 minutes
>> Discussion:  40 minutes
> Are the chairs confident that this topic can be resolved in this time?
> We managed to fritter a similar amount of time away without
> conclusion in the past.  I can see how you plan to accommodate
> overruns, but that just opens the possibility more time-wasting.  How
> do we ensure that this discussion actually concludes?",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D2F28@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 18:24:49
3423,RtcWEB,10,282,Question,233,233,"
Thought on how to make that happen? Time needed ?
",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D2F28@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 18:24:49
3424,RtcWEB,10,283,Question,233,235,">> Post-Plan A/Plan B MMUSIC discussion of impact to RTCWEB documents
>> Presentation: 30 minutes
> How are you planning to prepare for this?  Do you have presenter
> candidates lined up?",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D2F28@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 18:24:49
3425,RtcWEB,10,284,NeutralResponse,235,235,"
This is a very draft agenda - part of the issues is we are not even at the -00 draft deadline yet so I expect that by next week we should be able to figure out more details. We have scheduled the MMUSIC meetings before the RTCWeb meetings in Berlin so at some level, some of this may change after the MMUSIC meetings happen. Anyways, expect more details after we get to read all the drafts and expect us to be a bit dynamic on this given what happens in the MMUSIC meeting.
",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D2F28@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 18:24:49
3426,RtcWEB,10,286,Answer,236,236,"
We would like to inform folks of a few things happening in other WG (TURN, NAT, BEHAVE etc) but we would also like to have a discussion about what it takes to get to ""Done"" for the first iteration of all this stuff. We need to get WG feedback on what work is left and what needs to be prioritized.
",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D2F28@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-11 18:24:49
3427,RtcWEB,10,347,"NeutralResponse,Answer",282,282,"
There are two aspects of this that I, personally, want to see resolved
before I'm happy that we can conclude on this:
- a story for the gateway-to-other-stuff scenarios (where other-stuff
is mostly just all-the-existing-stuff)
- a story for conference scenarios

The first two could conclude that we need to re-encrypt at these
points, but that would require some justification.  Or we could
conclude that we need SDES, or maybe that DTLS-SRTP+EKT is the right
answer.

I'm stretching my recall capacity, but I recall promises from several
people to present on various aspects.  If those presentations cover
the ground well enough, then we can go into a discussion
well-prepared.  Time needed will then depend on the time that each
presenter needs.

If we can get to the point where the space is well-enough understood,
we should be able to conclude.  That does require a modest amount of
time for each participant to make an impassioned plea at the mic.  And
pontification takes time.

We may need to consider the alternative decision making process here.
",<CABkgnnXHxH8Wpk4LLbb9XEBuKY1Ft21_rs7xj0unNy9FPzzn1A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 12:03:23
3428,RtcWEB,10,349,Answer,284,284,"
You'd best have some candidates lined up to produce some discussion
material in short order.
",<CABkgnnXHxH8Wpk4LLbb9XEBuKY1Ft21_rs7xj0unNy9FPzzn1A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 12:03:23
3429,RtcWEB,10,351,NeutralResponse,286,286,"
Thanks.  That helps.  That might be too short a time for that list.",<CABkgnnXHxH8Wpk4LLbb9XEBuKY1Ft21_rs7xj0unNy9FPzzn1A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-07-11 12:03:23
3430,RtcWEB,10,373,NeutralResponse,233,233,"
I can't guarantee that we'll conclude of course, but I'm hopeful we will get to a hum/vote one way or the other.  In my presentation I plan to propose a compromise, for example.  I think those against SDES will be ok with the compromise, but I'm not sure about those who want SDES.

-hadriel",<F9556428-B6B8-407D-9D62-9A1CC04D4253@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-12 20:00:13
3431,RtcWEB,10,401,InformationProviding,,-1,"Howdy,
Someone's asked me to explain the compromise I plan on presenting in Berlin now, so we have more time to argue over it or chew on it.  The reason I was going to wait is because I wanted to explain how I got to the point of thinking such a compromise would make sense.  So I'll try to do that in this email, which will make this email long.  Nothin' much I can do about that.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3432,RtcWEB,10,402,ExtensionOfPrevious,,-1,"
Obviously this is all my personal opinion, not that of my employer, and not a statement claiming to be objective fact, etc.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3433,RtcWEB,10,403,ExtensionOfPrevious,,-1,"
Background:
I think many people would agree that SDES has some benefits compared to DTLS for those of us wishing to interface to the SIP world.  Some of those benefits are commercial/cost factors, some are more tangible like reducing early media clipping.  Whether you agree with such benefits or not, so long as WebRTC could support SDES in a sufficiently-secure manner, there'd be less concern over having it.  Most of the arguments against SDES have been directed at whether it could in fact be ""sufficiently secure"".  Personally I find most of the arguments against it being secure enough to be essentially FUD, and/or also apply to DTLS-SRTP.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3434,RtcWEB,10,404,ExtensionOfPrevious,,-1,"
On the flip-side, I think the commercial/cost factor for SDES is not a strong cause, because I believe the market will bear whatever the extra cost may be. (I wasn't sure of this 2 years ago when this all started, but I'm fairly confident of it now)  And I think having only DTLS-SRTP as MTI would have a marketing benefit for WebRTC as a technology, which I value highly.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3435,RtcWEB,10,405,ExtensionOfPrevious,,-1,"
Given those personal feelings, I didn't much care either way, so long as a decision was made - although I still preferred having SDES to avoid the early media clipping problem.  So when I was going to present on this topic back in the Vancouver meeting, my last slide basically said: ""If we support SDES and it turns out later we were wrong, we can always rescind it"".  This was based on the notion that browsers get updated all the time, especially for security issues.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3436,RtcWEB,10,406,ExtensionOfPrevious,,-1,"
But later it occurred to me that's actually the Achilles' heel of supporting SDES in WebRTC, for those of us wanting to gateway this stuff to SIP.  Imagine if it turns out we were wrong, and some expected-or-unexpected vulnerability is exploited against some large WebRTC service provider, and makes the news/slashdot.  Browser vendors would instantly have new code removing SDES support, and browsers in devices would be updated virtually overnight - some users may take a long time to upgrade their specific browsers on their specific devices - but many of them would do so within days.  That would be untenable for a WebRTC service provider.  Even the smaller Enterprises take a long time to upgrade code on their servers, so even for them changing their gateways to suddenly support DTLS-SRTP would be unrealistic.  Imagine what it would be for larger providers, who might even have to deploy more servers to handle the sudden additional overhead of DTLS-SRTP.  Meanwhile a growing percentage of their users can no longer use the service.  That's bad mojo.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3437,RtcWEB,10,407,ExtensionOfPrevious,,-1,"
The things that a WebRTC-to-SIP service provider can control, and arguably the much larger use-case for this stuff to begin with, are not really true ""browsers"" anyway - they're web-based-framework device Apps, provided by the service provider to begin with.  I.e., the apps they build using web application framework things like PhoneGap/Cordova, Appcelerator Titanium, etc.  I mean using a real Browser is nice for ad-hoc stuff, like being able to click on a ""talk to a rep"" button on a website, or a webex/meetecho type thing; but for real communication ""service"", whether it be as a subscriber of a traditional carrier, or Skype, or an employee of an Enterprise, or a call-center attendant, or whatever - for those most people would never want to have to open a browser just to receive/make calls.  They'd give you an app to use instead.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3438,RtcWEB,10,408,ExtensionOfPrevious,,-1,"
So it's the app use-case that would benefit the most from SDES, especially for issues like media clipping.  And the app use-case doesn't have the security concerns nor concerns for unforeseen overnight updates.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3439,RtcWEB,10,409,ExtensionOfPrevious,,-1,"
The Compromise:
So given that background, I was planning to propose that the security doc keep DTLS-SRTP as the only MTI mechanism for browsers, BUT to add a statement that web-based application frameworks SHOULD also support SDES. (with text about why and how, etc.)",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3440,RtcWEB,10,410,ExtensionOfPrevious,,-1,"
I don't think this is too controversial, because web-based frameworks are never beholden to following browser behavior anyway - they're used to build a native application, and native applications have a very different security/threat model in practice.  They're written for a specific purpose, and installed by users from known sources for that known purpose.  Technically, afaik, nothing we do in RTCWEB WG or W3C's WEBRTC group have any requirements/mandates for native applications anyway - an app maker would just ignore something they don't think applies to them - but I think web-based frameworks do generally try to follow W3C models for Javascript APIs, and will likely read the IETF RFCs for the media-layer stuff too.  So I think having this SHOULD statement would be beneficial.",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3441,RtcWEB,10,411,ExtensionOfPrevious,,-1,"
Or if the WG prefers, we could even write a separate doc on what a web-based framework maker should consider supporting/not-supporting. (I can imagine a few other things they might want to offer that a browser can't)",<B2DF729D-B313-4D3E-9C06-DA00AF7A14FF@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-13 14:07:17
3442,RtcWEB,10,423,NeutralResponse,,-1,"Hadriel --
I think you've brought up a critical point, which is very worth keeping in mind throughout the discussions in IETF RTCWEB.  That is that WebRTC is really two distinct innovations -- one, a profile of ""RAI 2.0"" functionality, defining a core set of RTP functionality developed over the last decade (e.g. end-to-end security, adaptive HD codecs, AVPF, etc.), and the other, a set of Javascript APIs for Web browsers defined by the W3C.   IMHO,  the ""RAI 2.0"" aspect is likely to prove more important (and long-lived) than the W3C WEBRTC API aspect.
Since the ""RAI 2.0"" profile developed by the IETF RTCWEB WG is likely to live on way beyond the useful life of the W3C WEBRTC APIs, it is critical that the protocol profiles not be distorted so as to cater to API concerns that will be difficult to justify, let alone remember, a decade from now.   If the damage brought about by an SDP-based API could be restricted solely to Web browsers without reflecting itself in expected ""on the wire"" behavior, I would care a lot less about it.  After all, the Internet knows how to deal with bad designs -  it just ""treats them as damage and routes around them"".    So to the extent that IETF RTCWEB can contain the SDP API swamp we'll all be better off -- and the swamp will be that much easier to drain down the road once it becomes clear to all that nobody really wants to live in that part of town anyway.
As you state, the vast majority of customers I talk to are interested primarily in the ""RAI 2.0"" aspects of WebRTC, and only secondarily, if at all, in the W3C JS APIs.  Given the displacement of feature phones by smartphones, the growth in availability of wireless data as well as the increasing availability of connectivity that can support interactive video (all areas of very rapid growth over the next few years), the focus of realtime communications app developers I talk to is not on browser, but on the development of native applications.  And unless HTML5-based approaches such as Firefox OS gain traction, that focus is likely to remain.
Given this, the most frequent request I hear is for a usable mobile SDK that can offer protocol compatibility with WebRTC implementations on browsers.  To succeed, that mobile SDK had better not look anything like the W3C WEBRTC API, and it also better support extensibility.  In reality, all that the IETF RTCWEB profile defines is the core set of functionality -- that set of features that MUST be supported to enable interoperability.  However, there is a lot more that a developer might want to have available for their particular application.  That might include a codec (such as AMR-NB) or a security variant such as SDES/SRTP.   Since as you note many developers aren't going to be using the W3C WEBRTC APIs anyway, whether those additional functions are supported in the W3C APIs is largely irrelevant - and so are discussions about whether this or that additional feature needs to be a ""SHOULD"" or a ""MAY"".",<BLU169-W1221AE43EFBADA8B862E43993650@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-07-13 14:02:29
3443,RtcWEB,10,469,NeutralResponse,,-1,"Very interesting discussion and important thread. I have a comment on JS
API's.
",<CALFWOz4dY8gQANnq1o5rxuJibbrn0=DKy77ju8xayyUO6gpNZA@mail.gmail.com>,rishi@turtleyogi.com,0.0,0,53,2013-07-14 22:33:29
3444,RtcWEB,10,471,NeutralResponse,423,423,"WebRTC JS API's has the potential to make video/audio based web apps the
first class citizens of internet. Focus on interop at the media plane and
signaling plane is important. But it is critical to focus and bring better
JS API's to browser and browser frameworks. I am startup and many customers
I talk to are asking for video web apps on Internet explorer which
unfortunately is lacking as compared to Chrome and Firefox (both of which
are available on mobile too).
",<CALFWOz4dY8gQANnq1o5rxuJibbrn0=DKy77ju8xayyUO6gpNZA@mail.gmail.com>,rishi@turtleyogi.com,0.0,0,53,2013-07-14 22:33:29
3445,RtcWEB,10,595,NeutralResponse,423,423,"
Chrome's implementation of WebRTC, which can be found at webrtc.org, has a
mobile SDK that can be used to build mobile apps (Android and iOS, at
least).  Some well-known and popular RTC mobile apps are in large part
built on that code and can interop to a degree with browsers.  So in some
sense, you already have what you want.

The big problem is that the high-level API offered by that SDK exactly
matches the one in the browser, which means it's the gross SDP-based one.
And none of the mobile apps I know, beyond an example app, use that API,
or have plans to, precisely because it's gross.  Instead, as far as I know,
they dig deeper into the code and avoid that part. (why jam everything
through SDP if you don't have to?).

I think the optimal scenario for us to target is to define a good API that
is the same between mobile and web browsers.  I think that would help
developers the most.  Making such a ""web and mobile"" API is probably out of
scope for any WG, but I think that if we defined a good (non SDP-based) API
for the browser, it could easily be exposed as a native SDK (just like it
is now), but be much less gross and more usable.

I don't know if such a thing (a good API for both mobile and web) can
realistically ever happen, but in the meantime, you can at least pick up
the code at webrtc.org and make a mobile app.  It's open source, too, so if
you want to make a better API than what's there, go ahead and write one :).
",<CAJrXDUHiroZg8rNeTTjz6J2a6__hDW7+3a5NDr3A88PSjfdo_Q@mail.gmail.com>,pthatcher@google.com,0.0,0,10,2013-07-15 05:46:34
3446,RtcWEB,10,596,ExtensionOfPrevious,423,423,"
In reality, all that the IETF RTCWEB profile defines is the core set of",<CAJrXDUHiroZg8rNeTTjz6J2a6__hDW7+3a5NDr3A88PSjfdo_Q@mail.gmail.com>,pthatcher@google.com,0.0,0,10,2013-07-15 05:46:34
3447,RtcWEB,10,597,ExtensionOfPrevious,423,423,"> functionality -- that set of features that MUST be supported to enable
> interoperability.  However, there is a lot more that a developer might want
> to have available for their particular application.  That might include a
> codec (such as AMR-NB) or a security variant such as SDES/SRTP.   Since as
> you note many developers aren't going to be using the W3C WEBRTC APIs
> anyway, whether those additional functions are supported in the W3C APIs is
> largely irrelevant - and so are discussions about whether this or that
> additional feature needs to be a ""SHOULD"" or a ""MAY"".",<CAJrXDUHiroZg8rNeTTjz6J2a6__hDW7+3a5NDr3A88PSjfdo_Q@mail.gmail.com>,pthatcher@google.com,0.0,0,10,2013-07-15 05:46:34
3448,RtcWEB,10,598,ExtensionOfPrevious,423,423,"
FYI, the code at webrtc.org supports SDES/SRTP, and while it doesn't have
support for AMR-NB (as far as I know), it does have a system for adding new
codecs, so you could theoretically take an implementation of AMR-NB and
compile it in yourself to make a mobile app.  It may not be very easy, but
it is possible.
",<CAJrXDUHiroZg8rNeTTjz6J2a6__hDW7+3a5NDr3A88PSjfdo_Q@mail.gmail.com>,pthatcher@google.com,0.0,0,10,2013-07-15 05:46:34
3449,RtcWEB,10,718,NeutralResponse,404,404,"
There is a significant cost factor in scenarios where a large percentage of sessions have to be interworked and whether the market will bear this or not it is certainly a cost that it would be good to avoid.
",<9F33F40F6F2CD847824537F3C4E37DDF1164963D@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-16 13:22:30
3450,RtcWEB,10,720,NeutralResponse,409,409,"
I don't think we can or should say that SDES SHOULD be implemented by one type of framework but not another we just need to say something consistent for all. I agree with most of what is stated in the reasoning above and given that there is a strong commercial incentive for SDES support I think keeping DTLS-SRTP as the MTI and making SDES a SHOULD would be a good compromise.
",<9F33F40F6F2CD847824537F3C4E37DDF1164963D@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-16 13:22:30
3451,RtcWEB,10,741,"Agreement,NeutralResponse",720,720,"I also agree with most of what Hadriel stated in his long mail;
however I don't like the idea we start to make difference between what
kind of webrtc you can do
with a browser and what you can do on a web-based application framework
(btw I also share the Andrew concern about the fact that we can/should
say what to do or not to do
in each type of framework)

/Salvatore",<51E55357.7020300@ericsson.com>,salvatore.loreto@ericsson.com,0.0,0,2,2013-07-16 16:06:15
3452,RtcWEB,10,867,Disagreement,402,402,"
Likewise, in this reply where, though I like you, I don't like your proposal.
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3453,RtcWEB,10,869,NeutralResponse,403,403,"
I believe that once the entire system is considered, any system that allows EKT shares the same security properties as one that allows SDES, and one that does not allow EKT requires a decrypt/re-encrypt phase at the gateway that is costly.
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3454,RtcWEB,10,871,NeutralResponse,404,404,"
The market might bear the extra cost, but it doesn't mean that it isn't extra cost (and extra environmental damage through the extra energy consumed).
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3455,RtcWEB,10,873,NeutralResponse,406,406,"
I can't imagine such a scenario that couldn't also happen with DTLS-SRTP, especially DTLS-SRTP + EKT.

Plus there's lots of counterexamples where major sites have been compromised in ways that could have been fixed browser-side, and yet browsers didn't bother to update.

And finally, what makes you think that the browser vendors would do something like that if the service really was popular? I guess if Google and Mozilla wanted everyone using Skype to switch to Internet Explorer they could pull such a stunt, but why? (In a hypothetical future where IE has webrtc support and Skype supports webrtc-equipped browsers as a platform for calling, of course)
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3456,RtcWEB,10,875,Disagreement,406,406,"
I argue that it'd never happen.
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3457,RtcWEB,10,877,NeutralResponse,408,408,"
And will probably support SDES.
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3458,RtcWEB,10,879,Disagreement,409,409,"
Disagree. That leads immediately to half (approximately) of the browser ecosystem not supporting SDES. That increases my cost for no true security benefit to anyone.
",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3459,RtcWEB,10,881,NeutralResponse,411,411,"
They might be able to turn ICE off, even!

Matthew Kaufman",<AE1A6B5FD507DC4FB3C5166F3A05A484213E3C35@TK5EX14MBXC265.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2013-07-17 20:48:55
3460,RtcWEB,10,1079,Agreement,881,881,"
Amen.  I think ICE will be the first barrier to initiating communications
with legacy equipment anyways... Anybody that can get past the ICE step
will then be allowed to deal with the problems of the mandatorily included
encryption mechanisms as a next step.

I don't know if there is very much ""legacy"" equipment that will be able to
interop with WebRTC media sessions without some sort of translation.
",<CAHZ_z=yqWc=8vdPGh7GFGib-GsDuby8XBCAm_YfvbxYkK0jb4g@mail.gmail.com>,creslin@digium.com,0.0,0,28,2013-07-17 16:43:28
3461,RtcWEB,10,1136,NeutralResponse,873,873,"
Yes, I considered that as well - but if there's only one key-exchange mechanism, and it's the one used between browsers and everyone, then even the browser vendors wouldn't want to update the browsers in such a way that it's removed overnight.  They'd be braking media interop even between browsers.

For example, assume we only have DTLS-SRTP as MTI and some security vulnerability is discovered for it, which some new thing called ""ETLS-SRTP"" fixes.  They couldn't just remove DTLS-SRTP in favor of ETLS-SRTP overnight; they'd have to support both for some transition period - a period only constrained by the rate at which most browsers get updated.  After that it could be disabled by default and require the user to enable, or pop up some warning thingy to approve; and ultimately removed altogether someday.

But with SDES, we're basically asking the browsers to implement something they don't need to implement for browser-to-browser uses. (in fact, we'd define it in such a way that SDES wouldn't be used for browser-to-browser cases)  Unless some major service like Skype uses SDES, browsers vendors have no real market force keeping them supporting it.  The ones involved in this WG have already said they don't consider the WebRTC-SIP use case very important in the grand scheme of things.
",<9D968BA6-CF33-418F-890C-D2595A2F88E4@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-18 12:24:22
3462,RtcWEB,10,1137,NeutralResponse,873,873,"
Some browsers won't update, for sure - but that's the problem with these things: it's a lowest-common-denominator model, because having media work is not an optional feature.  If you want to support all (major) browsers, you need to do what all of them can do.  You'd have to support DTLS-SRTP somehow, if even one of the major browser vendors only do DTLS-SRTP.

Sure you can save some cost by tracking how many people use what browsers, and deploying for the ratio of DTLS-SRTP vs. SDES you expect, etc.  And that will work for some operators of WebRTC sites/gateways (though not all).  But it still detracts from the arguments I and others have been making about what the benefits of having SDES would be.
",<9D968BA6-CF33-418F-890C-D2595A2F88E4@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-18 12:24:22
3463,RtcWEB,10,1138,NeutralResponse,873,873,"
If there's a really popular service using SDES, like let's say Skype, I would expect the browser vendors to keep SDES support optional with a configuration thingy; or to keep it by default but only until Skype switched away from SDES.[1]  And I bet Skype would switch away quickly, if a security vulnerability made the press/slashdot.

My point wasn't that it would literally happen in 24 hours - it was more that such a change is uncontrollable by all the operators of WebRTC sites/gateways.  Skype might be big enough to keep browsers from removing SDES, but that just moves the problem around: now all the other WebRTC sites/gateways have to change to using DTLS-SRTP when Skype changes.  Either way, they can't control their own destiny.
",<9D968BA6-CF33-418F-890C-D2595A2F88E4@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-18 12:24:22
3464,RtcWEB,10,1140,Agreement,881,881,"
Yup.  That would be #2 on the list of things an app should be able to do, right after using SDES. (or maybe the priority should even be swapped)

-hadriel
[1] having said that, there have been cases where the market power of a browser overcame the market power of a really popular service - like Apple's iOS-based Safari's lack of Flash support, with respect to YouTube service.",<9D968BA6-CF33-418F-890C-D2595A2F88E4@oracle.com>,hadriel.kaplan@oracle.com,0.0,0,1,2013-07-18 12:24:22
3465,RtcWEB,10,1296,"Agreement,NeutralResponse",,-1,"
I agree with Hadriel that DTLS-SRTP as MTI has market benefit but still I'm
not seeing much difference in terms of end-user security. I was supporting
DTLS-SRTP earlier as MTI as WebRTC signaling may takes place in HTTP. In
reality, HTTPS is expected by webrtc operator as they are worried about Web
signaling Security (on-path attack). In case of HTTPS based WebRTC signaling
traffic is used, I'm not seeing any difference between DTLS-SRTP & SDES
because it is possible to intercept the traffic by web provider (signaling
server) in case the web provider is intended to do so as mentioned in Sec
5.7.1. of draft-ietf-rtcweb-security-arch-07. Dr.Evil website shall design
as follows:",<016a01ce84b9$911ee3e0$b35caba0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-07-20 01:22:52
3466,RtcWEB,10,1298,"NeutralResponse,ProposeAction",,-1,"
Back to back media gateway (B2BMGW) has the capability to terminate and
originate DTLS-SRTP webrtc media traffic without informing browser. Please
look into http://www.webrtc2sip.org/ for how easy to design such B2BMGW.",<016a01ce84b9$911ee3e0$b35caba0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-07-20 01:22:52
3467,RtcWEB,10,1299,NeutralResponse,,-1,"
The identity is not mandatory in WebRTC. Webrtc session request using HTTPS
URL like https://apprtc.appspot.com/?r=80112689 works well and it has good
web application like conference link. So, there is no much difference
between DTLS-SRTP & SDES-SRTP in case of no identity scenario. Even if the
identity is mandated using Idp, Dr.Evil provider shall mandate authoritative
Idp as (@drevil.com) which helps to intercept the media in B2BMGW. I could
not understand why Dr.Evil web provider will provide the mechanism for
establishing webrtc session using third party identity provider. As of now,
I'm not very clear how webrtc security trust model with DTLS-SRTP really
benefit browser user in terms of security whereas SDES-SRTP compromise the
security.",<016a01ce84b9$911ee3e0$b35caba0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-07-20 01:22:52
3468,RtcWEB,10,1300,ExtensionOfPrevious,,-1,"
I see the difference between SDES-SRTP & DTLS-SRTP in case HTTP origin. So
apart of Hadriel compromise plan, some of the SDES compromise plan could be",<016a01ce84b9$911ee3e0$b35caba0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-07-20 01:22:52
3469,RtcWEB,10,1301,ProposeAction,,-1,"
1) forbid HTTP origin when SDES is requested by API
2) forbid HTTP origin entirely and allow SDES-SRTP as one of the security
key mechanism. Let application selects its preferred security key mechanism.",<016a01ce84b9$911ee3e0$b35caba0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2013-07-20 01:22:52
3470,RtcWEB,10,1344,"Question,NeutralResponse",,-1,"I'm a bit confused about your proposal.

From a RTCWeb WG point of view, it seems that the key question is what are we suggesting that things that implement WebRTC (including browsers) do? Are you proposing that SDES in browsers be optional, mandatory, or not allowed?
",<2BC3A8BA-C550-4889-A8B5-28D937A8EB42@iii.ca>,fluffy@iii.ca,0.0,0,0,2013-07-27 15:59:47
3471,RtcWEB,10,1347,NeutralResponse,,-1,Regarding the FW traversal discussion then I still think we need a discussion in the RTCWEB WG and I hope to persuade the chairs that this is the case.,<9F33F40F6F2CD847824537F3C4E37DDF116406C8@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 09:01:05
3472,RtcWEB,10,1399,ExtensionOfPrevious,,-1,"
We have requirements in the use case draft and charter items that need solutions and this is a real issue impacting RTCWeb trials today.",<9F33F40F6F2CD847824537F3C4E37DDF116406C8@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 09:01:05
3473,RtcWEB,10,1461,Question,,-1,"Can you get specific about exactly what you want to discuss? The current solution ins the specs uses ICE, STUN, TURN and works thorough many firewalls but not all. What change would you like to see?

On Jul 12, 2013, at 2:01 AM, ""Hutton, Andrew"" <andrew.hutton@siemens-enterprise.com>",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D6B20@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-12 15:09:05
3474,RtcWEB,10,1464,NeutralResponse,,-1,What we want to discuss is a solution to the HTTP (Proxy) only FW use case as described in http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-11#section-3.2.3. This is not solved by the current specs.,<9F33F40F6F2CD847824537F3C4E37DDF1164151F@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 15:17:49
3475,RtcWEB,10,1556,ExtensionOfPrevious,,-1,"
The draft http://tools.ietf.org/html/draft-hutton-rtcweb-nat-firewall-considerations-01 proposes a solution based on using HTTP Connect and some other related browser best practice requirements but also discusses alternatives.",<9F33F40F6F2CD847824537F3C4E37DDF1164151F@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 15:17:49
3476,RtcWEB,10,1557,ExtensionOfPrevious,,-1,"
We want to discuss solving this use case and hopefully get this draft adopted.",<9F33F40F6F2CD847824537F3C4E37DDF1164151F@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 15:17:49
3477,RtcWEB,10,1669,"Question,NeutralResponse",,-1,"So section 3.3.1 of draft-hutton-rtcweb-nat-firewall-considerations provides a brief sketch of an extension to TURN clients to use a HTTP proxy.

I would be shocked to see anyone in this WG tell you not to do that, it's been discussed many times in the past. But in the end this WG will either say we like it, take it to BEHAVE, or it will say we hate it in which case as and individual draft you will still probably take it to BEHAVE. You probably want to keep an eye on HTTP2 stuff and implications to this too.

We had not much list discussion on this draft. We have an agenda very full of WG items that are very controversial. We could put it at the end of the agenda with ""time permitting"" but to be honest, I sort of doubt we would get to it. Is there some question you think you want feedback from this group on that we could start on this list or something?

I'm just trying to be realistic about the outcomes of this draft - we could discuss it in RTCWeb for 3 meetings before proposing a  TURN extension in behave but in the end I suspect we could just short circuit all that.
",<C5E08FE080ACFD4DAE31E4BDBF944EB1135D6FD3@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-07-12 15:30:36
3478,RtcWEB,10,1672,ClarificationElicitation,,-1,I totally don't follow this argument.,<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3479,RtcWEB,10,1846,NeutralResponse,,-1,"
What we need is for RTCWEB browsers to behave in a standardized way in environments where there is a FW requiring the flow to come from a HTTP Proxy. Defining this is clearly within the scope of RTCWEB and if we move the work to BEHAVE we still need a RTCWEB specification to say what rtcweb implementations are required to implement.",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3480,RtcWEB,10,1847,ExtensionOfPrevious,,-1,"
The charter states the wg will.",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3481,RtcWEB,10,1848,ExtensionOfPrevious,,-1,"
""Define the solution - protocols and API requirements - for firewall and NAT traversal"".",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3482,RtcWEB,10,1849,ExtensionOfPrevious,,-1,"
It also states:",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3483,RtcWEB,10,1850,ExtensionOfPrevious,,-1,"
""This work will be done primarily by using already defined protocols or functionalities. If there is identification of missing protocols or functionalities, such work can be requested to be done in another working group with a suitable charter or by requests for chartering it in this WG or another WG"".",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3484,RtcWEB,10,1851,ExtensionOfPrevious,,-1,"
We have not so far identified any missing protocol or functionality so why do you ask the work to be moved to a different group?",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3485,RtcWEB,10,1852,ExtensionOfPrevious,,-1,"
With regard to the full agenda I for one think we can find time for this rather than again circling through the endless discussion on some of the other topics. I am not sure also why we need 40 mins to discuss the use case updates time would be better spent finding solutions for the existing use cases.",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3486,RtcWEB,10,1853,ExtensionOfPrevious,,-1,"
If you think that nobody will object then surely we can get this over very quickly.",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3487,RtcWEB,10,1854,ExtensionOfPrevious,,-1,"
Agree there has not been enough discussion on the draft but I have received only positive feedback including some comments off list.",<9F33F40F6F2CD847824537F3C4E37DDF11641905@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-12 16:44:14
3488,RtcWEB,10,1923,Question,,-1,"
I was wondering if we could add ""RTCWeb SDP Examples"" draft to the Agenda
that shows several SDP examples for the most common WebRTC Use-cases.",<CAMRcRGSS6Zpbo=HdroF+WvHg44c16vHjCqq_mpaRjd3_UaFaWg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2013-07-15 13:46:21
3489,RtcWEB,10,1924,NeutralResponse,,-1,"
The draft location is :
http://tools.ietf.org/html/draft-nandakumar-rtcweb-sdp-02",<CAMRcRGSS6Zpbo=HdroF+WvHg44c16vHjCqq_mpaRjd3_UaFaWg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2013-07-15 13:46:21
3490,RtcWEB,10,1925,Thanking,,-1,"
Thanks",<CAMRcRGSS6Zpbo=HdroF+WvHg44c16vHjCqq_mpaRjd3_UaFaWg@mail.gmail.com>,suhasietf@gmail.com,0.0,0,6,2013-07-15 13:46:21
3491,RtcWEB,11,14,InformationProviding,,-1,"RFC5389(STUN) section 10 provides 2 ways to do authentication and
integrity check while RFC 5766 only supports long-term credential.
My question is how to integrate the long-term credential with SSO,
for example, SAML mechanism?",<CAEXiFzbj4BWKDd04k+vwE7AxZmrpAC6+FMxuTD=H5BtzHEhqgQ@mail.gmail.com>,oeichenwei@gmail.com,0.0,0,75,2012-10-31 15:06:49
3492,RtcWEB,11,15,"Question,ExtensionOfPrevious",,-1,"
2 typical user cases in my mind are:
1. Deploy TURN in enterprise just like HTTP proxy, in such a case,
it would be better to authenticate with enterprise Active Directory;
2. Deploy TURN as a cloud service, the service providers would
always have their own unified authentication server.
Are these 2 user cases typical for TURN?",<CAEXiFzbj4BWKDd04k+vwE7AxZmrpAC6+FMxuTD=H5BtzHEhqgQ@mail.gmail.com>,oeichenwei@gmail.com,0.0,0,75,2012-10-31 15:06:49
3493,RtcWEB,11,46,NeutralResponse,,-1,"
In enterprise deployments for webrtc calls TURN server is required to audit all media sessions from inside the company premises to any external peer (http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-09). Hence this will be a important scenario to consider for Enterprise deployments. PANA (RFC 5191) can be used to solve the problem for both STUN/TURN servers deployed in Enterprise premises. Using PANA for other protocols like PCP is already being discussed in PCP WG.
",<913383AAA69FF945B8F946018B75898A1484849E@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2012-11-13 04:51:38
3494,RtcWEB,11,52,Thanking,,-1,"Thanks Tiru,",<CAEXiFzZ8gO__i_Fr7gaMsF39NEGAdzRznSzcPwRLG75OM_QZyg@mail.gmail.com>,oeichenwei@gmail.com,0.0,0,75,2012-11-16 16:56:41
3495,RtcWEB,11,119,"Question,NeutralResponse",,-1,"
I take a look at the PANA, it didn't clear my confusion.
My real headache is TURN needs to generate long-term credential attribute,
it requires a username and password, how to choose the username?
In enterprise, I have a domain account with realm -- that is my windows
credential. I would like user to use that credential, but the TURN server
is most likely to be deployed in DMZ, AD-DS is always in internal network,
so how can TURN get the username and password to verify my TURN
authentication attribute?",<CAEXiFzZ8gO__i_Fr7gaMsF39NEGAdzRznSzcPwRLG75OM_QZyg@mail.gmail.com>,oeichenwei@gmail.com,0.0,0,75,2012-11-16 16:56:41
3496,RtcWEB,14,0,InformationProviding,,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.,<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3497,RtcWEB,14,28,ExtensionOfPrevious,,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-08.txt
Pages           : 27
Date            : 2012-06-04",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3498,RtcWEB,14,29,ExtensionOfPrevious,,-1,"
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream and data exchange services provided
by the browser.",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3499,RtcWEB,14,30,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-08.txt",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3500,RtcWEB,14,31,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3501,RtcWEB,14,32,ExtensionOfPrevious,,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-08.txt",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3502,RtcWEB,14,33,ExtensionOfPrevious,,-1,"
The IETF datatracker page for this Internet-Draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/",<20120604154239.14951.40382.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-04 08:42:39
3503,RtcWEB,15,63,InformationProviding,,-1,"
We have submitted draft-hutton-rtcweb-nat-firewall-considerations-02 in which we have tried to take account of the feedback we have received over the last couple of months.",<9F33F40F6F2CD847824537F3C4E37DDF17BCF3A5@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-20 17:06:58
3504,RtcWEB,15,64,ExtensionOfPrevious,,-1,"
Please review and send comments to this list I really hope we can make some progress towards adopting this now.",<9F33F40F6F2CD847824537F3C4E37DDF17BCF3A5@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-20 17:06:58
3505,RtcWEB,15,167,"Thanking,Question",,-1,"Thanks.  The new version is quite a bit more clear.   A question about
Section 2.3:

Open issue: Although
[draft-ietf-rtcweb-use-cases-and-requirements] considers only a
restriction to HTTP(S) similar consideration apply to other ports as
well.
or port ranges.  A change to req F37 to ""The browser must be able
to send streams and data to a peer in the presence of FWs that
only allows traffic via a HTTP Proxy."" has been agreed and will be
in the next update does this solve the issue.

[BA] I found the above somewhat hard to parse.  Is this referring to an
issue with this document, or with the use-case document?
",<BLU405-EAS33058EE9080AE279C6FD50D93220@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-20 10:42:26
3506,RtcWEB,15,302,"Agreement,NeutralResponse",,-1,"
I agree this is confusing I think it is meant to refer to the use-case document in which the requirement F37 needs to be changed to cater for the case when a HTTP Proxy is deployed and the firewall allows traffic from the proxy. I believe we have already agreed that change to the use-case draft.",<9F33F40F6F2CD847824537F3C4E37DDF17BCF5E1@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-20 18:11:53
3507,RtcWEB,15,413,Question,,-1,"
Why are you leaving out of scope the case when the WebRTC service is not
deployed by the corporate organization and/or the HTTP proxy has DPI
validation?",<523CCD06.3030902@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 00:32:38
3508,RtcWEB,15,414,NeutralResponse,,-1,"
When WebRTC is deployed by the corporate IT department one can assume
that the corporate IT configures the corporate NATs, Firewalls, DPI
units, TURN servers accordingly.  If so desired by the organization
WebRTC media streams can then be established to WebRTC peers outside
of the organization subject to the applied policies.  In order to
cater for NAT/FWs with address and port dependent mapping
characteristics [RFC4787  <http://tools.ietf.org/html/rfc4787>], the peers will introduce a TURN server
[RFC5766  <http://tools.ietf.org/html/rfc5766>] in the public internet as a media relay.  Such a TURN
server could be deployed by the organization wanting to assert policy
on WebRTC traffic.",<523CCD06.3030902@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 00:32:38
3509,RtcWEB,15,415,ExtensionOfPrevious,,-1,"
This section considers a scenario where all HTTP(S) traffic is routed
via an HTTP proxy.  We assume that the HTTP proxy is tranparent and
just tunnels traffic after e.g. enforcing an acceptable use policy
with respect to domains that are allowed to be reached.  We don't
consider cases where the HTTP proxy is used to deploy HTTP traffic
validation.  This includes DPI validation that the traffic is, in
fact, HTTP or HTTPS-looking or a HTTP proxy that breaks into the TLS
exchange and looks for HTTP in the traffic.",<523CCD06.3030902@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 00:32:38
3510,RtcWEB,15,416,ExtensionOfPrevious,,-1,"
In my point of view that is not fullfilling WebRTC requirement:",<523CCD06.3030902@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 00:32:38
3511,RtcWEB,15,417,ExtensionOfPrevious,,-1,"
F37     The browser must be able to send streams and
data to a peer in the presence of FWs that only
allows http(s) traffic.",<523CCD06.3030902@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 00:32:38
3512,RtcWEB,15,434,Answer,413,-1,"
[BA ]  My reading of the document is that it is attempting to respect the restrictions set by the firewall administrator.   If UDP and TCP to ports other than 80/443 is denied, and in addition DPI is deployed, then you often will only have a subset of HTTP functionality available to speak to port 80 and maybe a subset of TLS which you can speak to port 443.",<BLU169-W136A55AC013DA147313576D93220@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-20 15:48:30
3513,RtcWEB,15,435,ExtensionOfPrevious,,-1,"
This can significantly restrict the choices available.  In my experience, customers denying UDP in/out and only allowing TCP destined to selected ports (e.g. 80/443) as well as deploying DPI validation typically will not allow HTTP CONNECT (or even WebSockets).",<BLU169-W136A55AC013DA147313576D93220@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-20 15:48:30
3514,RtcWEB,15,436,ExtensionOfPrevious,,-1,"
We are sometimes successful in making TURN allocation requests over TCP to port 80 or over TLS to port 443 in these scenarios, but TURN over TCP/TLS requests to other ports can fail.  Similarly, one should not expect TURN over WebSockets to work in these kind of installations; the DPI box probably hasn't been updated to handle WebSockets, or if it was, is configured to prevent WebSocket use.",<BLU169-W136A55AC013DA147313576D93220@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-20 15:48:30
3515,RtcWEB,15,481,NeutralResponse,434,434,"
I am not against providing firewall administrators with tools for
applying corporate policies to outbound connections, in fact I am all
for it. But in my point of view, if the web part of my service is
allowed by the company policies (either because it is no black listed,
or it is whitelisted) then the webrtc part should work also.
",<523CD42E.8070102@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 01:03:10
3516,RtcWEB,15,483,NeutralResponse,436,436,"
Most of webrtc services I have seen so far are using websockets for
signaling already, so if websockets are not supported by the firewall
you have bigger problem.
Also, if TURN over TLS on port 443 works (i.e. no DPI in place), secure
websockets works. So in 100% cases that TURN over TLS works, TURN over
websocket works too. The other way round is not true.
",<523CD42E.8070102@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 01:03:10
3517,RtcWEB,15,493,NeutralResponse,,-1,"Sergio said:
""Also, if TURN over TLS on port 443 works (i.e. no DPI in place),
secure websockets works.""
[BA] I have seen DPI boxes that look at the TLS to make sure it is *really* TLS, but if it passes muster (which it might not if you're using extensions or something new like TLS 1.2) then they'll let you through.  So I wouldn't assume that DPI == no TLS.  And yes, if they do let TLS through, then you can do TURN over TLS or secure websockets just as well.
""So in 100% cases that TURN over TLS works,
TURN over (secure) websockets works too.""
[BA] Agree they would both traverse that firewall equally well, but TURN over (secure) websockets only works if the TURN server supports it, which most won't.   This makes mandating TURN over Webosckets support in the browser a hard sell.",<BLU169-W82036280852F26ED26283C93230@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-20 17:58:04
3518,RtcWEB,15,513,NeutralResponse,493,493,"
We are already working on providing a working prototype of TURN over
websocket that will show how easy would be to add it to both browser and
server. In fact, on first phase, we will not change the TURN server at
all but use a websockify proxy https://github.com/kanaka/websockify to
the WS to TCP conversion.
",<523D4F17.2040202@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-21 09:47:35
3519,RtcWEB,15,551,NeutralResponse,,-1,"I just don't see any advantage in the TURN over Websockets approach over the HTTP Connect initiated tunnel which works without any new protocol and therefore works with existing TURN servers.

Andy
",<9F33F40F6F2CD847824537F3C4E37DDF17BD01A8@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-21 22:48:08
3520,RtcWEB,15,554,NeutralResponse,493,493,"
We are already working on providing a working prototype of TURN over
websocket that will show how easy would be to add it to both browser and
server. In fact, on first phase, we will not change the TURN server at
all but use a websockify proxy https://github.com/kanaka/websockify to
the WS to TCP conversion.
",<9F33F40F6F2CD847824537F3C4E37DDF17BD01A8@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-21 22:48:08
3521,RtcWEB,15,625,NeutralResponse,,-1,"HTTP Connect, indeed, may allow a similar functionality. But it will
require two things: a proxy configuration in the browsers, and an HTTP
Proxy set by enterprise IT department. That may be a challenge for a new
WebRTC project in an enterprise environment.",<CALDtMrL5pT3MfbQufCphEKq0-pXj+JcfwW__wzG3T6wZ=TuWhg@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-21 17:57:01
3522,RtcWEB,15,626,ExtensionOfPrevious,,-1,"
This draft allows transparent connection and operation, unlike the HTTP
proxy case.",<CALDtMrL5pT3MfbQufCphEKq0-pXj+JcfwW__wzG3T6wZ=TuWhg@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-21 17:57:01
3523,RtcWEB,15,627,ExtensionOfPrevious,,-1,"
There are tools (websockify) which make possible to use this draft with the
existing TURN servers. Putting the burden on the TURN server provider and
maintainer is easier in most cases than negotiating new IT requirements
with the enterprise IT managers.",<CALDtMrL5pT3MfbQufCphEKq0-pXj+JcfwW__wzG3T6wZ=TuWhg@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-21 17:57:01
3524,RtcWEB,15,628,ExtensionOfPrevious,,-1,"
Of course, advanced TURN servers may include it as part of the TURN server
implementation.",<CALDtMrL5pT3MfbQufCphEKq0-pXj+JcfwW__wzG3T6wZ=TuWhg@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-21 17:57:01
3525,RtcWEB,15,707,NeutralResponse,,-1,"... I was, of course, referring to the ""TURN over websockets"" draft, as
""this draft"".
",<CALDtMrLCKXDgeqj-G7r4Ak2Rc1ivDZMNrV+18M_W4EqyKUP4iQ@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-21 18:02:49
3526,RtcWEB,15,748,NeutralResponse,625,625,"
[AndyH] - The case of an enterprise WebRTC project taking place under the control of the enterprise IT department although within scope is not the prime reason for wanting the HTTP Connect mechanism.  There are various options for this use case and the important thing is that the browser behavior is standardized and understood by the IT department.

Probably more important at least for early deployments is making sure that a WebRTC service external to the enterprise is accessible when there is no IT department or when the IT department is not WebRTC aware and just wants it to work.  The power of WebRTC is that it brings new type of media to the web and it just has to work by default with additional controls possible if the network administrator wants to use them. If an enterprise already has a Web/HTTP Proxy deployed and a firewall configured to allow web traffic to flow via the proxy then this should also work when accessing WebRTC services. This has nothing to do with an enterprise deploying WebRTC for its own use.
",<9F33F40F6F2CD847824537F3C4E37DDF17BD08EA@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-22 20:57:18
3527,RtcWEB,15,750,NeutralResponse,627,627,"
[AndyH] As I tried to explain above the use case of prime importance is getting WebRTC to work with existing infrastructure and without requiring an enterprise to deploy stuff just because an enterprise user wants to use a WebRTC service maybe on a single use basis such communicating with a suppliers call centre.
",<9F33F40F6F2CD847824537F3C4E37DDF17BD08EA@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-22 20:57:18
3528,RtcWEB,15,807,NeutralResponse,748,748,"
An enterprise may have no HTTP proxy configured by default for the users
but still the enterprise may have some strict firewall rules. I know such
enterprises. Those enterprise projects will benefit from the
TURN-over-websockets protocol.

Each large enterprise IT has a complex history and complex web of policies.
If a new standard provides new capabilities and useful possible scenarios,
without imposing strict rules on IT departments, then I guess that would be
a right thing.
",<CALDtMrLcUrxseyiaPc_0AWJw3HPdaBuAS+xpviT2q=y4zmdNgw@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-22 22:36:34
3529,RtcWEB,15,809,NeutralResponse,750,750,"
I personally do not see anything wrong or criminal in a single use basis.

My understanding is that TURN-over-websockets allows WebRTC deployment
with minimal or no changes in the infrastructure. As I said before, not all
large companies are using HTTP proxy for user browsers.",<CALDtMrLcUrxseyiaPc_0AWJw3HPdaBuAS+xpviT2q=y4zmdNgw@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-22 22:36:34
3530,RtcWEB,15,832,NeutralResponse,807,807,"
I think this is actually a pretty serious problem, but Elvis,
as they say, has left the building.  The IETF RAI area has
standardized protocols for avoiding the enforcement of local
access policies.  The earlier work on STUN and TURN was to
allow operation across NAT, which is (arguably) not a policy
mechanism, but you all seem to want to extend it to allow
operation across firewalls *which by policy do not permit
the traffic in question*.  It's probably too late to do much
about it but I hope that you're having lots of conversations
with lots of enterprises whose firewalls you're planning on
forcing your way through, to make sure that they're on board
with this.
",<523FD5FD.8030601@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-22 21:47:41
3531,RtcWEB,15,863,NeutralResponse,832,832,"Melinda, you are assuming that the policies are a precise accurate
instrument that can be used to set the exact network access rules.

They are not. The reality is that the modern state of network policies is
rather behind the real-world requirements.

I suppose that a real solution would be an ""enterprise TURN server"" that is
located in the DMZ, and that routes all the TURN-related traffic and the IT
department will handle the policies on the TURN server: user database,
quotas, black and white IP lists, etc. The enterprise IT department is
always free to set such a TURN server. That would merge the two worlds,
perfectly. If they do not want to get into TURN server setup, but there is
a requirement for TURN operations, then there are these new draft specs for
""external"" TURN servers.

I've been thinking and working on an ""enterprise TURN server"" for a while
and I think that eventually the companies will start setting them.",<CALDtMrK=9D3qXXK6EeWF4RDk26GHPDgkYfQzdJpD33JNK_MeRw@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-22 23:41:35
3532,RtcWEB,15,887,NeutralResponse,863,863,"
My comfort level with telling people who run networks
that their network access management policies and technologies
are behind the times and because we know better then they
do about these things it's fine if we punch holes in their
firewalls without asking is not very high, to be honest.

At any rate I do think it's worth understanding (yes, I
used the ""u"" word) that you're using technologies that were
intended to address NAT problems for firewall traversal
and that there are some security issues that need closer
scrutiny, particularly the specifics of how you protect
against abuse by attackers.
",<523FE3E7.3060101@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-22 22:47:03
3533,RtcWEB,15,913,Disagreement,887,887,"
This is all not about comfort.
",<CALDtMrLwkg_POMnt5cDGt6XvGcS9gAA4jgBRBYQeKnF7xuEDzw@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-23 00:01:16
3534,RtcWEB,15,915,NeutralResponse,887,887,"
I do not think that anybody would be arguing with this rather obvious
observation.",<CALDtMrLwkg_POMnt5cDGt6XvGcS9gAA4jgBRBYQeKnF7xuEDzw@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-23 00:01:16
3535,RtcWEB,15,948,NeutralResponse,913,913,"
There is not much value in standardizing technologies which
are not going to be deployed, nor is there value in telling
the people who run networks that they're morons and the IETF
knows better than they do how they should be managing their
access policies.
",<523FEA61.6050105@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-22 23:14:41
3536,RtcWEB,15,950,NeutralResponse,915,915,"
It's hard to tell.  One thing that can help a lot is to
actually write the security considerations section of your
documents, rather than filling it in with a ""TBD.""  Seems to
be a common problem with rtcweb documents, and not at all
reassuring.
",<523FEA61.6050105@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-22 23:14:41
3537,RtcWEB,15,979,Agreement,863,863,"
I agree it is hard to determine what the policy is based on the actual firewall etc. rules. For instance if all UDP is blocked may not necessarily mean that the high level policy is that VoIP is not allowed. Or, on the other hand, if outbound HTTPS to port 443 is open, it does not necessarily mean that the policy is to allow whatever apps to tunnel whatever traffic that way.
",<E44893DD4E290745BB608EB23FDDB7620A0C0969@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-09-23 09:35:01
3538,RtcWEB,15,981,Agreement,887,887,"
While I'm in general supportive to the proposals in draft-hutton-, I also agree we need to consider the network admin's perspective as well.

There will be networks and administrators that explicitly want to restrict WebRTC. I think one part of the WebRTC firewall traversal ""solution"" needs to be an explanation HOW they can do it.

Markus",<E44893DD4E290745BB608EB23FDDB7620A0C0969@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-09-23 09:35:01
3539,RtcWEB,15,1018,NeutralResponse,981,981,"[xin] I think Markus pointed out an important things. We should discuss about it more to decide if these works is necessary. If media or data of VOIP through http or websocket channel is new thing for firewall, It is better to clarify it , because our target is give a web-fallback channel for a web application.",<9E34D50A21D1D1489134B4D770CE039768080325@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-09-23 10:39:44
3540,RtcWEB,15,1031,Agreement,979,979,"[xin] yes, we should not focus on the firewall administrator policy, which is hard and should not be judged by us. If the IT admin wants, they always have methods to block webrtc data no matter by http connect or https or turn over websocket.
Considering webrtc is a web application. A normal or fall-back media or data channel based on web should be considered, it is one benefit of *web*rtc. I think this is the key point we should discuss more. Websocket is a bidirection channel for web, which is wildly used as webrtc signaling channel. It is also really more convenient to carry webrtc data in it as a bidirection channel. I believe it will be better to consider more far for future.
About the change to turn server. It is better to add the function to turn server but add a websocket to tcp proxy(websockify) before turn server also work for existed deployment. We are working on this, and will give a simple prototype to validate it.",<9E34D50A21D1D1489134B4D770CE039768080325@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-09-23 10:39:44
3541,RtcWEB,15,1035,Agreement,,-1,+1,<52401B30.1030604@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 12:42:56
3542,RtcWEB,15,1054,Agreement,981,981,"
I agree with this it is something we need to discuss and elaborate on in the draft.

The motivation behind the draft is to standardize the browser behavior in a way that there is a good chance of WebRTC media traversing firewalls by default but also to make it clear how browsers behave so that policy can be enforced when needed.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF17BD0F31@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-23 11:21:45
3543,RtcWEB,15,1110,Agreement,979,979,"
Good point. The current technique Firewalls in Enterprise use are ""block UDP by default"" and also perform SIP inspection (ALG). Firewall pin-holes are opened/closed for UDP media streams based on SIP ALG.

-Tiru.
",<913383AAA69FF945B8F946018B75898A1907D1B8@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2013-09-23 13:09:56
3544,RtcWEB,15,1127,Agreement,981,981,"
That seems reasonable to me - the network administrator really
needs to be able to say ""no"" to certain kinds of traffic,
including WebRTC traffic.  I'm not sure that it's possible
to allow more finely-grained policy, which might be desirable,
but this is a start and something to discuss with people who
actually run networks.
",<52406723.8030203@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-23 08:06:59
3545,RtcWEB,15,1193,NeutralResponse,832,832,"
Hi Melinda,

The fact is that there is already an agreed requirement in WebRTC that
supports it:

F37     The browser must be able to send streams and
data to a peer in the presence of FWs that only
allows http(s) traffic.
",<5240025C.6080807@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 10:57:00
3546,RtcWEB,15,1194,"ExtensionOfPrevious,Question",832,832,"
And while we could discuss about it, this would not be the correct
mailing list to do it.

Given said that, I agree with your view that WebRTC should not force its
way through
corporate firewalls, punching  open holes and sneaking TURN inside TLS
to bypass the
enterprise policies.

The TURN over websocket proposal tries to address that issue by playing
""nice"" with
corporate firewalls, by encapsulating the WebRTC media into  legit and
valid HTTP
traffic.

This will allow IT administrator to allow/block and apply same corporate
policies to
WebRTC media as they would do with any web content. Without having to
deploy
any new infrastructure and with the same administrative interfaces as
they have
today.

Regarding the security section that you mention in a later email, I
agree with you again
and it is a chapter we would have to address in next versions of the
draft. Would you
be willing to collaborate in writing it by listing which kind of issues
would you like to be
covered in there?
",<5240025C.6080807@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 10:57:00
3547,RtcWEB,15,1213,Answer,1194,1194,"
Yes, definitely.  The state of security considerations
text is something that should be considered a priority.
FWIW I don't think that protecting pinhole-punching
technologies from being subverted by attackers is easy.
",<52406815.9060507@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-09-23 08:11:01
3548,RtcWEB,15,1255,Agreement,1213,1213,"
That's great !
",<CALDtMrKBitv3ucGV=UaFj5itCMcMCnh=xj0sT+=SAhy8jhOBwA@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-23 13:28:51
3549,RtcWEB,15,1257,NeutralResponse,1213,1213,"
This is a grey area of the technology and addressing some areas of concerns
would be very helpful.

The difficulties are objective and natural because the whole field of NAT
technology (and the fact that NAT deployment and firewall deployment are
related) is somewhat of imperfect nature.
",<CALDtMrKBitv3ucGV=UaFj5itCMcMCnh=xj0sT+=SAhy8jhOBwA@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-09-23 13:28:51
3550,RtcWEB,15,1296,NeutralResponse,748,748,"
If there are various options already available, I would like them to get
listed in the draft.
",<52400989.5010904@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:27:37
3551,RtcWEB,15,1297,NeutralResponse,748,748,"
I am all for ""if an enterprise already has a Web/HTTP Proxy deployed and
a firewall configured to allow web traffic to flow via the proxy then
this should also work when accessing WebRTC services"", but my real life
experience is that it doesn't.
",<52400989.5010904@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:27:37
3552,RtcWEB,15,1299,NeutralResponse,750,750,"
I agree with you also in this and TURN over websockets does not require
any deployment inside corporations in order to make it work.
",<52400989.5010904@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:27:37
3553,RtcWEB,15,1310,Question,551,551,"
How about transparent proxying?
",<52400320.2070404@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:00:16
3554,RtcWEB,15,1334,"ClarificationElicitation,NeutralResponse",1310,1310,"
Can you elaborate on this?

I think in either case the proxy sees possibly one transaction. In TURN over HTTP CONNECT established TLS connection, the proxy sees the HTTP CONNECT transaction and it's destination URI. If it's just ""transparently"" proxying, things will work, which is what we want. On the other hand, if there is some explicit policy, the proxy can also apply it - for instance if the destination domain is now allowed. I'm not sure if the TURN over WS has any advantages in this regard.

The disadvantage is that TURN over WS would require a change to TURN servers. I know you have argued that it is a very trivial change and I believe you, but nevertheless all existing servers would need to be upgraded and that's the problem.

Markus",<E44893DD4E290745BB608EB23FDDB7620A0C0990@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-09-23 09:45:46
3555,RtcWEB,15,1364,Answer,1334,1334,"I was meaning that if a transparent proxy is in place you won't be able
to do directly the HTTP connect request.
",<52401E1A.6040707@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 12:55:22
3556,RtcWEB,15,1365,"Agreement,NeutralResponse",1334,1334,"While I agree, this issue has not been a show-stopper for adopting new
technologies in WebRTC ;) . Also, there are already other proposals
(like HTTP REST apis for TURN servers) that would require changes to the
existing TURN server deployments.

Anyway, in our first prototype, we would try to demonstrate how TURN
over websockets could be used with an un-modified  TURN server via a
websockify proxy.
",<52401E1A.6040707@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 12:55:22
3557,RtcWEB,15,1419,NeutralResponse,,-1,"
Going back over some old mails with a view to restarting this discussion and updating my draft.",<9F33F40F6F2CD847824537F3C4E37DDF17C8FA6E@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-01-02 14:56:01
3558,RtcWEB,15,1420,Question,,-1,"
With regard to the transparent proxy could you explain why there is an advantage to using the RTP over websockets approach as compared to the HTTP CONNECT mechanism as currently described in draft-hutton-rtcweb-nat-firewall-considerations.",<9F33F40F6F2CD847824537F3C4E37DDF17C8FA6E@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2014-01-02 14:56:01
3559,RtcWEB,15,1423,NeutralResponse,,-1,We don't believe that discussing issues around DPI inspection is within scope or desirable and we are not trying to work around it.  However all scenarios that involve accessing WebRTC services from behind a firewall are within scope whether it is a service deployed by an enterprise or not.,<9F33F40F6F2CD847824537F3C4E37DDF17BD0178@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-21 22:40:35
3560,RtcWEB,15,1548,ExtensionOfPrevious,,-1,"
Regarding requirement F37 I already raised an issue with this some time ago and a change will be made in the next update to the use case draft. The issue is that this should not refer to a firewall ""that only allows HTTP(S) traffic"" but should include the case of HTTP Proxy being deployed and the fw allowing traffic from the proxy even if it is not HTTP(S). Once this change gets in to the use case draft I think we are aligned with it.",<9F33F40F6F2CD847824537F3C4E37DDF17BD0178@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-21 22:40:35
3561,RtcWEB,15,1576,Question,1423,1423,"
Why?
",<524002E8.8080506@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 10:59:20
3562,RtcWEB,15,1578,Question,1548,1548,"
Why are you changing the requirement and cutting the scope so it matches
your proposed solution? Shouldn't it be the other way round?
",<524002E8.8080506@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 10:59:20
3563,RtcWEB,15,1627,Answer,1576,1576,"
We don't have any use cases relating to this and I think it is a subject we are unlikely to agree on or standardize in the IETF.
",<9F33F40F6F2CD847824537F3C4E37DDF17BD0F7B@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-23 11:33:33
3564,RtcWEB,15,1629,Answer,1578,1578,"
Because I think the requirement is wrong and too specific so I see the change as widening the scope. The current text also implies a RTP over HTTP solution which has already been discussed and did not get support.
",<9F33F40F6F2CD847824537F3C4E37DDF17BD0F7B@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-23 11:33:33
3565,RtcWEB,15,1653,NeutralResponse,1627,1627,"
I believe it would be better not to remove it from the problem
statement, keep it as a valid scenario and consider it when evaluating
the possible solutions.
I am not saying that the final agreed solution should work with DPI
(although I really  would prefer it does), but at least we should be
able to get a complete picture on which scenarios are meant to work with
WebRTC and which ones are not.
",<52402AAE.5080908@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 13:49:02
3566,RtcWEB,16,0,InformationProviding,,-1,A new version has be uploaded.,<4E8B05F9.2090804@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-04 15:11:21
3567,RtcWEB,16,63,ExtensionOfPrevious,,-1,"
From the change log:",<4E8B05F9.2090804@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-04 15:11:21
3568,RtcWEB,16,64,ExtensionOfPrevious,,-1,"
Changes from draft-ietf-rtcweb-use-cases-and-requirements-05",<4E8B05F9.2090804@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-04 15:11:21
3569,RtcWEB,16,65,ExtensionOfPrevious,,-1,"
o  Added use-case ""global service provider"", derived reqs associated
with several STUN/TURN servers
o  Added use-case ""enterprise aspects"", derived req associated with
enabling the network provider to supply STUN and TURN servers
o  The requirements from the above are ICE specific and labeled
accordingly
o  Separated the requirements phrased like ""processing such as pan,
mix and render"" for audio to be specific reqs on spatialization,
level measurement, level adjustment and mixing (discussed on the
lists in
http://www.ietf.org/mail-archive/web/rtcweb/current/msg01648.html
and http://lists.w3.org/Archives/Public/public-webrtc/2011Sep/
0102.html)
o  Added use-case on sharing as decided in
http://www.ietf.org/mail-archive/web/rtcweb/current/msg01700.html,
derived reqs F30 and A21
o  Added the list of common considerations proposed in mail
http://www.ietf.org/mail-archive/web/rtcweb/current/msg01562.html
to the Introduction of the use-case section",<4E8B05F9.2090804@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-04 15:11:21
3570,RtcWEB,16,66,ExtensionOfPrevious,,-1,"
As always, comments and feedback is most welcome.",<4E8B05F9.2090804@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-04 15:11:21
3571,RtcWEB,17,43,InformationProviding,,-1,"
As raised in the WG meeting last week we plan to submit new milestones.
These is to make the time line a bit more realistic to actually be meet.
They also try to adjust to the picked document structure.",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3572,RtcWEB,17,44,ExtensionOfPrevious,,-1,"
Here they are:
Oct 2011 Send Use Cases (draft-ietf-rtcweb-use-cases-and-requirements),
Overview (draft-ietf-rtcweb-overview), Security and Privacy Documents
(I-D) to W3C",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3573,RtcWEB,17,45,ExtensionOfPrevious,,-1,"
Dec 2011 Send Use Cases (draft-ietf-rtcweb-use-cases-and-requirements)
document to IESG for publication as Informational",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3574,RtcWEB,17,46,ExtensionOfPrevious,,-1,"
Apr 2012 Send W3C input on what requirements the current solution has on
API(s)",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3575,RtcWEB,17,47,ExtensionOfPrevious,,-1,"
May 2012 Send Overview (draft-ietf-rtcweb-overview), Security and
Privacy Model documents to IESG for publication as Informational",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3576,RtcWEB,17,48,ExtensionOfPrevious,,-1,"
May 2012 Send Signalling and Negotiation, and NAT Traversal to IESG for
publication as Proposed Standard",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3577,RtcWEB,17,49,ExtensionOfPrevious,,-1,"
Jun 2012 Send Media Transport, Media Processing, and Codecs to IESG for
publication as Proposed Standard",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3578,RtcWEB,17,50,ExtensionOfPrevious,,-1,"
Jun 2012 Send Datagram Transport for non-media data to IESG for
publication as Proposed Standard",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3579,RtcWEB,17,51,ExtensionOfPrevious,,-1,"
These will soon be submitted for official publication. If you have any
issues please raise them on the list and we can discuss them.",<4E37EAAB.3020708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-08-02 14:16:43
3580,RtcWEB,17,121,ClarificationElicitation,,-1,"
The current RTCWeb overview, usecase & requirement document does not have architecture diagrams. Please clarify which one of the RTCWeb WG item below will cover RTCWeb architecture.",<A11921905DA1564D9BCF64A6430A62390608E48C@XMB-BGL-411.cisco.com>,partr@cisco.com,0.0,0,5,2011-08-03 17:42:44
3581,RtcWEB,17,122,Thanking,,-1,"
Thanks
Partha",<A11921905DA1564D9BCF64A6430A62390608E48C@XMB-BGL-411.cisco.com>,partr@cisco.com,0.0,0,5,2011-08-03 17:42:44
3582,RtcWEB,17,207,"Question,NeutralResponse",121,121,"If draft-ietf-rtcweb-overview does not describe the architecture in
sufficient detail, it needs updating. It is the document in the document
hierarchy that should have this role.

Some parts of it are not explicit because no consensus has been
forthcoming, others because I have not understood yet what people need
to hear.

What do you think it should say?",<4E3FDCCB.1060700@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-08 14:55:39
3583,RtcWEB,17,210,NeutralResponse,,-1,"As one of the webrtc chairs I have the generic comment that the sooner information is available the better. In particular, webrtc is planning a f2f meeting at the W3C TPAC (Oct 31 and Nov 1). To get the most out of that meeting it would be good if the Use Cases and Sec/Priv documents are available, and if there can be some advance info on what reqs the ""current solution"" has on the API(s) by then.",<BBF498F2D030E84AB1179E24D1AC41D616C389F16F@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 10:07:35
3584,RtcWEB,18,147,NeutralResponse,,-1,"
In the early phases of the use-case draft we did not use the words
""ICE"", ""STUN"" or ""TURN"" - things were stated more technology neutral.

But at some stage it was pretty clear that ICE was the solution the WG
was going for; and at the same time many wanted to have ICE specific
requirements (such as ""The browser must be able to use several STUN and
TURN servers"") included.

So we made the change and started talking about ICE, STUN and TURN in
the document (but note that in the description it is still said
""Assuming that ICE will be used"").

I am not super happy about having the requirements depend on choosing a
certain solution, but at the same time I think that ICE is a corner
stone so for me it is livable to have in the document.
",<1447FA0C20ED5147A1AA0EF02890A64B1CF32B82@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-01-23 10:17:33
3585,RtcWEB,18,370,"NeutralResponse,Thanking",,-1,"
Thanks a lot for providing the background. We are in the same page w.r.t
ICE. My concern is w.r.t TURN word usage only. It will be great in case
""TURN"" is replaced with ""Firewall traversal"" in the below mentioned snippet
of the draft.",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3586,RtcWEB,18,371,ExtensionOfPrevious,,-1,"
<snip>
Sec 3.3.4.1
the service provider would like to be able to provide several STUN and TURN
servers (via the app) to the browser;",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3587,RtcWEB,18,372,ExtensionOfPrevious,,-1,"
Sec 3.3.5.1
It must be possible to configure the browsers used in the enterprise with
network specific STUN and TURN servers.",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3588,RtcWEB,18,373,ExtensionOfPrevious,,-1,"
The RTCWEB functionality will need to utilize both network specific STUN and
TURN resources and STUN and TURN servers provisioned by the web application.",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3589,RtcWEB,18,374,ExtensionOfPrevious,,-1,"
Sec 4.2",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3590,RtcWEB,18,375,ExtensionOfPrevious,,-1,"
F31     The browser must be able to use several STUN
and TURN servers
F32     There browser must support that STUN and TURN
servers to use are supplied by other entities
than via the web application (i.e. the network
provider).",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3591,RtcWEB,18,376,ExtensionOfPrevious,,-1,"
Appendix A",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3592,RtcWEB,18,377,ExtensionOfPrevious,,-1,"
A22     The Web API must provide means for the application to specify
several STUN and/or TURN servers to use.
</snip>",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3593,RtcWEB,18,378,ProposeAction,,-1,"
Also, Could you plese add the statement in the line of that ""Firewall
traversal mechanism in this document shall be TURN, ICE-TCP, TURN over
WebSocket, PCP"" to provide more clarity.",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3594,RtcWEB,18,379,Thanking,,-1,"
Thanks
Partha",<004501cf18a1$913c4080$b3b4c180$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 06:43:51
3595,RtcWEB,18,433,Disagreement,378,378,"
FWIW, I would completely disagree with that change. It makes no sense to me.
",<52E27630.3030300@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2014-01-24 09:18:24
3596,RtcWEB,18,517,Disagreement,,-1,"
I could not understand how does it make sense for you to refer ""TURN"" in the
requirement whereas it implies ""PCP"" or ""ICE-TCP"" or ""TURN over WebSocket""
in the solution.",<001c01cf1920$a00c9220$e025b660$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 21:53:28
3597,RtcWEB,18,518,Thanking,,-1,"
Thanks
Partha",<001c01cf1920$a00c9220$e025b660$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 21:53:28
3598,RtcWEB,18,543,NeutralResponse,517,517,"
I understand the text you're suggesting to mean that WebRTC clients
would be required support at least one in the set { TURN, ICE-TCP, TURN
over WebSocket, PCP }. This would be broken. A client that chooses to
support, for example, only PCP would be ridiculously broken. All clients
MUST support TURN as a base traversal mechanism. Other mechanisms are
icing on the cake.

I'm fairly sure this is not what you were suggesting though, since that
would be so obviously broken. That's why I said that your suggestion
makes no sense to me.
",<52E2952A.2010503@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2014-01-24 11:30:34
3599,RtcWEB,18,593,NeutralResponse,,-1,"
Please note that when non-IETFers read this requirement document, they come
to the conclusion that IETF RTCWeb WG recommends TURN and not other
mechanisms. I'm saying that requirement document should not be used as the
mechanism to eliminate the other alternatives when there is a discussion
going-on in PNTAW alias. So, I'm asking for the change.",<002001cf1927$b502eb00$1f08c100$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 22:44:10
3600,RtcWEB,18,594,ExtensionOfPrevious,,-1,"
Let us discuss in PNTAW alias which Firewall/NAT mechanisms have to be used
by WebRTC client, WebRTC gateway/server (Sec 4.3 of
draft-ietf-rtcweb-use-cases-and-requirements-12) and not as part of the
requirement draft.",<002001cf1927$b502eb00$1f08c100$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 22:44:10
3601,RtcWEB,18,595,Thanking,,-1,"
Thanks
Partha",<002001cf1927$b502eb00$1f08c100$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-24 22:44:10
3602,RtcWEB,18,617,Agreement,593,593,"
I would totally agree with that sentiment, although I don't see your
proposed text change reflecting it accurately. How about simply:

""Note that TURN support being mandatory does not preclude a WebRTC
endpoint from supporting additional traversal mechanisms.""
",<52E2AE42.5060903@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2014-01-24 13:17:38
3603,RtcWEB,18,658,Agreement,617,617,"
+1 for the above text.
",<CAD6AjGRAtBx6kCEskgmY2WZ2Rz+=-7e-8jTQEP1CCAt-X=J3fg@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2014-01-24 16:52:19
3604,RtcWEB,18,738,"NeutralResponse,Thanking",,-1,"
Thanks for your understanding about my firewall/NAT related problem
statement in this draft.",<001701cf19ec$f99791b0$ecc6b510$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-25 22:16:14
3605,RtcWEB,18,739,NeutralResponse,,-1,"
I have proposed the firewall/NAT related text by which the specific
mechanism is not highlighted in the requirement document as there is no WG
consensus for any of the mechanism including TURN. It is possible to argue
hypothetically in PNTAW alias that PCP is the only mechanism required in
WebRTC endpoint.   Also, Im more interested in WebRTC gateway/server (Sec
4.3. of draft-ietf-rtcweb-use-cases-and-requirements-12) requirements
wherein it is not required to support TURN and the related mail thread is
http://www.ietf.org/mail-archive/web/pntaw/current/msg00181.html.",<001701cf19ec$f99791b0$ecc6b510$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-25 22:16:14
3606,RtcWEB,18,740,ExtensionOfPrevious,,-1,"
IMO, my proposed text without mentioning any firewall/NAT mechanism in the
requirement document helps to move forward without depend on the solution
discussion in PNTAW alias.",<001701cf19ec$f99791b0$ecc6b510$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-25 22:16:14
3607,RtcWEB,18,741,Thanking,,-1,"
Thanks",<001701cf19ec$f99791b0$ecc6b510$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-25 22:16:14
3608,RtcWEB,18,874,NeutralResponse,,-1,"
I don't see any support for the changes you proposes in this discussion.
What I see some support for is to add a statement making clear that
there might be additional NAT/Firewall traversal mechanisms than
STUN/TURN. Simon proposed:",<52E8C9D4.30205@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-29 10:28:52
3609,RtcWEB,18,875,ExtensionOfPrevious,,-1,"
""Note that TURN support being mandatory does not preclude a WebRTC
endpoint from supporting additional traversal mechanisms.""",<52E8C9D4.30205@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-29 10:28:52
3610,RtcWEB,18,876,ExtensionOfPrevious,,-1,"
However, looking at the document as it is currently written, I am
uncertain where this would be added. The first mention of TURN is in
Section 3.3.4.1, and that section is focused on the global service
provider perspective and the need for location based provisioning of
NAT/Firewall traversal server resources.",<52E8C9D4.30205@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-29 10:28:52
3611,RtcWEB,18,877,ExtensionOfPrevious,,-1,"
I think it can be added to Section 3.3.5.1 without being misplaced, but
it would be given a slightly narrower scope.",<52E8C9D4.30205@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-29 10:28:52
3612,RtcWEB,18,878,ExtensionOfPrevious,,-1,"
I any of you want to be more explicit where this should be included,
please be. If you are not forthcoming I will request the authors to add
this in what they consider sensible position.",<52E8C9D4.30205@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-29 10:28:52
3613,RtcWEB,18,1057,NeutralResponse,,-1,"
I can live with Simon text in case it is documented in Sec 4.2  as",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3614,RtcWEB,18,1058,ExtensionOfPrevious,,-1,"
F31     The browser must be able to use several STUN
and TURN servers. Note that TURN support being mandatory
does not preclude the browser from supporting
additional traversal mechanisms.
F32     There browser must support that STUN and TURN
servers to use are supplied by other entities
than via the web application (i.e. the network
provider). Note that TURN support being mandatory
does not preclude the browser from supporting
additional traversal mechanisms.",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3615,RtcWEB,18,1059,ExtensionOfPrevious,,-1,"
and also Appendix A:",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3616,RtcWEB,18,1060,ExtensionOfPrevious,,-1,"
A22     The Web API must provide means for the
application to specify several STUN and/or
TURN servers to use. Note that TURN support being mandatory
does not preclude a Web API from supporting
additional traversal mechanisms.",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3617,RtcWEB,18,1061,ExtensionOfPrevious,,-1,"
Please let me know in case you have any issue in the above text.",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3618,RtcWEB,18,1062,ExtensionOfPrevious,,-1,"
BTW, just for the record, draft-ietf-rtcweb-use-cases-and-requirements-12
does not specify the list of traversal mechanism requirements for WebRTC
Gateway/Server.",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3619,RtcWEB,18,1063,Thanking,,-1,"
Thanks
Partha",<00a001cf1e23$7a168aa0$6e439fe0$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-01-31 06:56:26
3620,RtcWEB,18,1274,NeutralResponse,,-1,"
Personal opinion:",<52EB6672.5090704@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-31 10:01:38
3621,RtcWEB,18,1275,ExtensionOfPrevious,,-1,"
I think the below places the text in the wrong context. The note is in
my mind relevant in the context of the general NAT/FW traversal
requirements, not the one discussing need to support multiple NAT/FW
traversal servers. Thus, I think Section 3.3.2 and thus requirement F29.
Or potentially regarding Requirement F2. Is more appropriate places to
include this.",<52EB6672.5090704@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-31 10:01:38
3622,RtcWEB,18,1557,NeutralResponse,,1514,"
Regarding F29 and F2, that is the benefit of having solution neutral
requirements. Thus, these requirements are not blocking or hindering you
from proposing additional solutions or implementation requirements when
it comes to NAT/FW traversal. Thus, these requirements applies to UDP
blocking IPv6 firewalls as well as other types.
",<52F8C75C.4090708@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-02-10 13:34:36
3623,RtcWEB,18,1662,Question,,-1,"Where can I find: "" ""PCP"" or ""ICE-TCP"" or ""TURN over WebSocket"" in the
solution. "" ?
(Haven't followed for a while.)

/Karl
",<0b4201cf1921$dbcc2cc0$93648640$@stahl>,karl.stahl@intertex.se,0.0,0,18,2014-01-24 17:32:22
3624,RtcWEB,18,1663,NeutralResponse,,-1,"
-----Ursprungligt meddelande-----
Från: rtcweb [mailto:rtcweb-bounces@ietf.org] För Parthasarathi R
Skickat: den 24 januari 2014 17:23
Till: 'Simon Perreault'; rtcweb@ietf.org
Ämne: Re: [rtcweb] Query/Comment on
draft-ietf-rtcweb-use-cases-and-requirements-12

Simon,

I could not understand how does it make sense for you to refer ""TURN"" in the
requirement whereas it implies ""PCP"" or ""ICE-TCP"" or ""TURN over WebSocket""
in the solution.

Thanks
Partha
",<0b4201cf1921$dbcc2cc0$93648640$@stahl>,karl.stahl@intertex.se,0.0,0,18,2014-01-24 17:32:22
3625,RtcWEB,19,9,InformationProviding,,-1,"
We've submitted a new version (-10) of the use-case and requirements draft.",<7594FB04B1934943A5C02806D1A2204B06D051@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2012-12-19 12:39:22
3626,RtcWEB,19,10,ExtensionOfPrevious,,-1,"
The only difference from the previous version is a minor editorial change (""video communication session"" -> ""audiovisual communication session"").",<7594FB04B1934943A5C02806D1A2204B06D051@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2012-12-19 12:39:22
3627,RtcWEB,21,115,"InformationProviding,ContextSetting,ProposeAction,InformationProviding",,-1,"
Below you will find a proposal for updating the WGs milestones. This
include creating two new milestones and deleting one. Regarding the
dates, they are though targets, and might not be reached. But to reach
our end of year goal for the core documents we see a need to push hard.
You can also see the order in which we believe the work can be completed
in.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3628,RtcWEB,21,116,"InformationSeeking,ExtensionOfPrevious,ProposeAction,Social,ExtensionOfPrevious,ProposeAction",115,-1,"
Please provide any feedback on these milestones by 6th of February.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3629,RtcWEB,21,117,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",116,-1,"
So each milestone we have i listed below with its current date and the
proposed new one.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3630,RtcWEB,21,118,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Oct 2012
New: March 2014
Send Security and Privacy Problem Statement (draft-ietf-
rtcweb-security) to IESG for publication as Informational
draft-ietf-rtcweb-security",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3631,RtcWEB,21,119,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
Old: Oct 2012
New: Feb 2014
Complete Overview (and hold for dependency resolution)
(draft-ietf-rtcweb-overview)
draft-ietf-rtcweb-overview",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3632,RtcWEB,21,120,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: New milestone
New: Dec 2014
Send Overview (after dependencies are ready) to IESG for publication as
Applicability Statement
draft-ietf-rtcweb-overview
Note: This is a new milestone created to show when we believe the
overview truly can be published, i.e. at the end of the set of core
documents.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3633,RtcWEB,21,121,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Oct 2012
New: Jan 2014
Send Use Cases document (draft-ietf-rtcweb-use-cases-and- requirements)
to IESG for publication as Informational
draft-ietf-rtcweb-use-cases-and-requirements",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3634,RtcWEB,21,122,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Jan 2013
New: April 2014
Send Media Transport (draft-ietf-rtcweb-rtp-usage) to IESG for
publication as Proposed Standard
draft-ietf-rtcweb-rtp-usage",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3635,RtcWEB,21,123,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Jan 2013
New: Jun 2014
Send Security Solution (draft-ietf-rtcweb-security-arch) to IESG for
publication as Proposed Standard
draft-ietf-rtcweb-security-arch",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3636,RtcWEB,21,124,"InformationProviding,ContextSetting,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Jan 2013
New: Sep 2014
Send Signalling Negotiation and NAT Traversal (draft-ietf-rtcweb-jsep)
to IESG for publication as Proposed Standard
draft-ietf-rtcweb-jsep",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3637,RtcWEB,21,125,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
Old: Jan 2013
New: April 2014
Audio Processing and Audio Codecs (draft-ietf-rtcweb-audio) to IESG for
publication as Proposed Standard
draft-ietf-rtcweb-audio",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3638,RtcWEB,21,126,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
Jan 2013
New: Dec 2014
Video Processing and Video Codecs (draft-ietf-rtcweb-video) to IESG for
publication as Proposed Standard Video Processing and Video Codecs
(draft-ietf-rtcweb-video) to IESG for publication as Proposed Standard",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3639,RtcWEB,21,127,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",126,-1,"
Comment: Needs editing to remove double listing. I still think we will
need to produce this document.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3640,RtcWEB,21,128,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,StateDecision,ExtensionOfPrevious",117,-1,"
Old: May 2013
New: Delete
Send Quality of Service markings of RTCWeb packets (draft-
ietf-rtcweb-qos) to IESG for publication as Proposed Standard
Note: We will delete this milestone for now. If there is need
for an RTCWEB document, we will resurrect it. We expect TSVWG to adopt
their part of this soon.",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3641,RtcWEB,21,129,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: Mar 2014
New: Sep 2014
Send STUN Usage for Consent Freshness to IESG for publication as
proposed standard
draft-ietf-rtcweb-stun-consent-freshness",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3642,RtcWEB,21,130,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: May 2103
New: May 2014
Send Data Stream Transport for non-media data (draft-ietf-
rtcweb-data-channel) to IESG for publication as Proposed Standard
draft-ietf-rtcweb-data-channel draft-ietf-rtcweb-data-protocol",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3643,RtcWEB,21,131,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",117,-1,"
Old: New milestone
New: Sep 2014
Send Specification of Transport Protocols and their NAT Traversal to
IESG for publication as Proposed Standard
draft-ietf-rtcweb-transports",<52E0DE9A.1090405@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 10:19:22
3644,RtcWEB,21,156,"ContextSetting,NeutralResponse",116,-1,"Mostly, this looks realistic.

One place where I'm more optimistic:
",<52E0E8DD.6060106@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2014-01-23 11:03:09
3645,RtcWEB,21,157,"InformationProviding,ExtensionOfPrevious",156,131,"On 01/23/2014 10:19 AM, Magnus Westerlund wrote:
> Old: New milestone
> New: Sep 2014
> Send Specification of Transport Protocols and their NAT Traversal to
> IESG for publication as Proposed Standard
> draft-ietf-rtcweb-transports",<52E0E8DD.6060106@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2014-01-23 11:03:09
3646,RtcWEB,21,158,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","117,131",131,"
Given that there has been fairly small controversies here, I feel that
this should be doable in the same timeframe as rtp-usage - that is, April.

If the chairs' decision is that the normative parts of -firewalls- needs
to go into -transport-, I would aim this for September.

Note: There is no mention of -firewalls- in the milestones suggested.
What's the chairs' thinking on this?
",<52E0E8DD.6060106@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2014-01-23 11:03:09
3647,RtcWEB,21,214,"InformationSeeking,Question,InformationProviding,Agreement,ContextSetting,ProposeAction,Question,Agreement",158,158,"
That would be great. I am a bit hesitant to put to many documents into
this time-frame. In addition I wonder if we are certain that we have
ensure that all pieces that are required to be part of this document are
known already in April. I am mostly thinking of the ongoing discussions
around NAT traversal protocols. However, if you like to have a shorter
target date, what about June? That should allow both RTP parts, the data
channel parts and this NAT/FW traversal protocol stuff to settled with
no big open ends.
",<52E0EB9F.7000907@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 11:14:55
3648,RtcWEB,21,216,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Apologising,NeutralResponse,Apologising",158,158,"
Sorry, this I realize is one editing I should have done, but forgot to
do before sending this out to the WG. I was considering to clarify that
it specifies the protocols used for NAT/FW traversal. But after
discussion the chairs did come to conclusion to keep the milestone
simple. Thus the proposal for milestone text should be:

Send Specification of Transport Protocols to IESG for publication
as Proposed Standard
",<52E0EB9F.7000907@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-23 11:14:55
3649,RtcWEB,22,0,Social,,-1,"Hi all,",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3650,RtcWEB,22,46,"InformationProviding,InformationProviding,ContextSetting",,-1,"
We've submitted a new draft to meet the requirement #F38 stated in
(http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-10)",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3651,RtcWEB,22,47,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",46,-1,"
This draft lists XRBlock metrics that should be added to the IANA
registry of WebRTC's
statistics API (http://tools.ietf.org/html/draft-alvestrand-rtcweb-stats-registry-00).
We would like the WG to discuss if these metrics along with the ones in
the stats-registry are sufficient to meet req #F38.",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3652,RtcWEB,22,48,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",46,-1,"
This document is a proposal made out of the earlier draft discussing
XR Metrics, http://tools.ietf.org/html/draft-huang-xrblock-rtcweb-rtcp-xr-metrics-01.",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3653,RtcWEB,22,49,"ExtensionOfPrevious,InformationProviding",47,-1,"
A new version of I-D, draft-singh-xrblock-webrtc-additional-stats-00.txt
has been successfully submitted by Varun Singh and posted to the
IETF repository.",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3654,RtcWEB,22,50,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",49,-1,"
Filename: draft-singh-xrblock-webrtc-additional-stats
Revision: 00
Title: Additional RTP Control Protocol (RTCP) Extended Report (XR)
Metrics for WebRTC Statistics API
Creation date: 2013-10-10
Group: Individual Submission
Number of pages: 7
URL:
http://www.ietf.org/internet-drafts/draft-singh-xrblock-webrtc-additional-stats-00.txt
Status:
http://datatracker.ietf.org/doc/draft-singh-xrblock-webrtc-additional-stats
Htmlized:
http://tools.ietf.org/html/draft-singh-xrblock-webrtc-additional-stats-00",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3655,RtcWEB,22,51,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",50,-1,"
Abstract:
This document describes a list additional identifiers used in
WebRTC's Javascript statistics API.  These identifiers are a set of
RTCP XR metrics related to the transport of multimedia flows.",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3656,RtcWEB,22,52,"ExtensionOfPrevious,InformationProviding,ProposeAction,Social",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<CAEbPqrw6Ypc=Rtgx9_CGC21tfha3RSHxthPuPww8hmMhCo-F6A@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-10-10 11:37:47
3657,RtcWEB,22,108,"Question,InformationSeeking,Question",47,-1,"What the progress of RTCweb Web API is?
How this work get in line with Web API work?",<B8F9A780D330094D99AF023C5877DABA43C33669@nkgeml501-mbs.china.huawei.com>,bill.wu@huawei.com,0.0,0,5,2013-11-02 21:41:11
3658,RtcWEB,22,111,Social,,-1,"Hi Qin,",<CAEbPqrx9SzY_xQtwoU9rCu4ywVQRS-J6HgPx=U-jA80JHcHe_w@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-11-03 04:07:03
3659,RtcWEB,22,193,"Answer,InformationProviding,Answer,ContextSetting",108,-1,"
Format and structure of the StatsAPI has recently been discussed on
the W3C mailing list, the current proposal is documented by Harald at
[1]. I believe the proposal in [1] is still work in progress because
it is currently missing some essential RTCP stats (e.g., fractional
loss, cumulative loss count, and RTT) which are however documented to
be added IANA's stats registry [2]. I've sent an email of the mailing
list [3] pointing to the additional statistics proposal and hopeful
that it generates discussion on the mailing list or during this week.",<CAEbPqrx9SzY_xQtwoU9rCu4ywVQRS-J6HgPx=U-jA80JHcHe_w@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-11-03 04:07:03
3660,RtcWEB,22,194,ExtensionOfPrevious,,-1,"
The additional-stats document [4] intends to add to the identifiers
proposed in [3]. Suggestions and discussions on if the identifiers
currently documented in [4] make sense is deeply appreciated.",<CAEbPqrx9SzY_xQtwoU9rCu4ywVQRS-J6HgPx=U-jA80JHcHe_w@mail.gmail.com>,vsingh.ietf@gmail.com,0.0,0,10,2013-11-03 04:07:03
3661,RtcWEB,23,0,"InformationProviding,ContextSetting,ProposeAction",,-1,We would like to start a working group last call of draft-ietf-rtcweb-use-cases-and-requirements-11.,<C5E08FE080ACFD4DAE31E4BDBF944EB11667BBA0@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-09-04 16:23:41
3662,RtcWEB,23,7,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",0,-1,"
Please send comments by the end of the day on September 21.",<C5E08FE080ACFD4DAE31E4BDBF944EB11667BBA0@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-09-04 16:23:41
3663,RtcWEB,23,8,"Thanking,Thanking",,-1,"
Thank you,",<C5E08FE080ACFD4DAE31E4BDBF944EB11667BBA0@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-09-04 16:23:41
3664,RtcWEB,23,11,Social,,-1,"Hi,",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3665,RtcWEB,23,351,"InformationProviding,InformationProviding,ContextSetting",7,-1,"
I have reviewed the Use Case and Requirements draft (v11) in the WG last
call. I have the following comments on this document. I have found a
number of issues that I definitely needs to be fixed prior to any
publication request.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3666,RtcWEB,23,352,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",351,-1,"
1. First of all I like to bring up a document structure problem. When
reviewing this it is difficult to follow what requirements that are
added for the different use cases. I would propose that each Use Case or
general section that describe something that causes new requirements
that hasn't been listed yet in the document to define the Requirement
there. Something like this:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3667,RtcWEB,23,353,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",352,-1,"
3.2.2.1.  Description",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3668,RtcWEB,23,354,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",353,-1,"
This use-case is almost identical to the Simple Video Communication
Service use-case (Section 3.2.1).  The difference is that one of the
users is behind a NAT that blocks UDP traffic.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3669,RtcWEB,23,355,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",352,-1,"
3.2.2.2.  Derived Requirements",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3670,RtcWEB,23,356,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",355,-1,"
F1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3671,RtcWEB,23,357,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",355,-1,"
A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3672,RtcWEB,23,358,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",355,-1,"
New Requirement:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3673,RtcWEB,23,359,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",358,-1,"
F29     The browser must be able to send streams and
data to a peer in the presence of NATs that
block UDP traffic.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3674,RtcWEB,23,360,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",359,-1,"
This makes the incremental use cases much more understandable in how
they add requirements.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3675,RtcWEB,23,361,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",360,-1,"
This I think will also affect Section 3.1 which will need to include the
requirement definitions created by these general considerations.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3676,RtcWEB,23,362,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",361,-1,"
However, I do suggest that you leave the collection of all requirements
in place for easy reference.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3677,RtcWEB,23,363,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
2. Section 1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3678,RtcWEB,23,364,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",363,-1,"
The document focuses on requirements related to real-time media
streams and data exchange.  Requirements related to privacy,
signalling between the browser and web server etc. are currently not
considered.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3679,RtcWEB,23,365,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",364,-1,"
I think this needs to be rewritten. The draft actually do consider a
number of high level security and privacy concerns.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3680,RtcWEB,23,366,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
3. Section 2:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3681,RtcWEB,23,367,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",366,-1,"
If you have no definitions, do remove the section, rather then leaving
it TBD.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3682,RtcWEB,23,368,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
4. Section 3.1",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3683,RtcWEB,23,369,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",368,-1,"
o  Clients can be on wideband (10s of Mbits/sec)",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3684,RtcWEB,23,370,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",368,-1,"
o  Clients can be on narrowband (10s to 100s of Kbits/sec)",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3685,RtcWEB,23,371,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",370,-1,"
Due to the usage of the terms wideband and narrowband I think you need
to be more explicit about what is actually referred to here. My
assumption is network throughput capability. And in these cases maybe
expressing this explicitly is a better choice.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3686,RtcWEB,23,372,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
5. Section 3.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3687,RtcWEB,23,373,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",372,-1,"
o  Clients can be on networks with any type (as described in RFC4787)
of NAT.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3688,RtcWEB,23,374,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",373,-1,"
I think ""any type"" is unclear here, as there are no types defined in
that RFC unless you are trying to express the difference between basic
NAT and NAPT, which I don't believe you are. I think you should use
something like this:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3689,RtcWEB,23,375,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",374,-1,"
o  Clients can be on networks with a NAT using any type of Mapping
and Filtering behaviors (as described in RFC4787).",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3690,RtcWEB,23,376,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
6. Section 3.2.1.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3691,RtcWEB,23,377,"InformationProviding,ExtensionOfPrevious",376,-1,"
It is essential that the communication cannot be wiretapped
[RFC2804].",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3692,RtcWEB,23,378,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",377,-1,"
This sentence returns a number of times in this document. I think it is
a general security requirement that applies to probably all of the use
cases. If there is one use case that don't need to enable protection
against this, then please be explicit about that.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3693,RtcWEB,23,379,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",378,-1,"
My Suggestion is to move this into the general considerations section.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3694,RtcWEB,23,380,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
7. Section 3.2.1.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3695,RtcWEB,23,381,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",380,-1,"
In addition, it is required that browsers enable the media and data
security keys to be cryptographically bound to the user identity.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3696,RtcWEB,23,382,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",381,-1,"
I think this sentence is actually subtly wrong in a couple of ways.
First of all it talks about ""the identity"", where I think it should be
talking about ""a identity"". This can both the human users identity, but
also a role identity, like Police Officer.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3697,RtcWEB,23,383,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",382,-1,"
Secondly, binding it to  the security keys without putting requirements
on the keying and key-exchange mechanism to prevent man in the middles
empties this requirement. I would recommend that you reformulate this to
a high level requirement without going into mechanism. For example:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3698,RtcWEB,23,384,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",383,-1,"
In addition, it is required that browsers enables binding an identity of
the user's choice to his end of the secured communication and that such
mechanism prevent man in the middle attacks.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3699,RtcWEB,23,385,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
8. Section 3.2.1.1",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3700,RtcWEB,23,386,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",385,-1,"
One user has an unreliable Internet connection.  It sometimes loses
packets, and sometimes goes down completely.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3701,RtcWEB,23,387,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",386,-1,"
I guess the requirement here is to handle this in a graceful way from
media transport and rendering perspective. The packet loss is also
unclear as I don't know if the intention is to capture spurious packet
losses due to the link media, or congestion losses. I think some
expansion of this is needed.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3702,RtcWEB,23,388,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
9. Section 3.2.1.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3703,RtcWEB,23,389,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",388,-1,"
One user is located behind a Network Address Translator (NAT).",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3704,RtcWEB,23,390,"ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction",389,-1,"
What is the point being stressed here that isn't covered by the general
consideration in 3.1 that says:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3705,RtcWEB,23,391,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",390,-1,"
o  Clients can be on networks with any type (as described in RFC4787)
of NAT.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3706,RtcWEB,23,392,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
Section 3.2.2.2:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3707,RtcWEB,23,393,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",392,-1,"
3.2.2.2.  Derived Requirements",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3708,RtcWEB,23,394,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",393,-1,"
F1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28, F29",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3709,RtcWEB,23,395,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",393,-1,"
A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3710,RtcWEB,23,396,"ExtensionOfPrevious,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",395,-1,"
How come this list of Derived Requirements are shorter than for the
parent use case which has the following list:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3711,RtcWEB,23,397,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",396,-1,"
3.2.1.2.  Derived Requirements",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3712,RtcWEB,23,398,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",397,-1,"
F1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28, F35, F36, F38, F39",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3713,RtcWEB,23,399,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",397,-1,"
A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A25, A26",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3714,RtcWEB,23,400,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",396,-1,"
If each use case is listing all the requirement then it needs to be
consistently done and actually list all that applies. If there are
requirements from the parent that doesn't apply that may even be worth
explicitly mentioning.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3715,RtcWEB,23,401,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",400,-1,"
This comments applies to all use cases as there appears to be general
inconsistencies.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3716,RtcWEB,23,402,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
10. Section 3.2.3.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3717,RtcWEB,23,403,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",402,-1,"
3.2.3.1.  Description",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3718,RtcWEB,23,404,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",403,-1,"
This use-case is almost identical to the Simple Video Communication
Service use-case (Section 3.2.1).  The difference is that one of the
users is behind a FW that only allows http traffic.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3719,RtcWEB,23,405,"ExtensionOfPrevious,Question,Question,ExtensionOfPrevious,ContextSetting",404,-1,"
If a firewall only allows HTTP traffic, then can we really assume that
the firewall administrator per default will accept WebRTC Media and Data
traffic?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3720,RtcWEB,23,406,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",405,-1,"
I am far from certain of this, and think on a requirement level needs to
express a situation where the firewall administrator allows WebRTC
across its FW, or at least can easily configure a rule to block it. Thus
resulting in that any solution for this needs to be easily identifiable
and possible to block.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3721,RtcWEB,23,407,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",406,-1,"
See also PNTAW@ietf.org mailing list.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3722,RtcWEB,23,408,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
11. Section 3.2.8.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3723,RtcWEB,23,409,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",408,-1,"
But in addition to this, one of the users can share what is being
displayed on her/his screen with a peer.  The user can choose to
share the entire screen, part of the screen (part selected by the
user) or what a selected applicaton displays with the peer.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3724,RtcWEB,23,410,"Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction",409,-1,"
Does this needs mentioning of additional high level security requirements?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3725,RtcWEB,23,411,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
12. Section 3.2.10.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3726,RtcWEB,23,412,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",411,-1,"
The service providers are interconnected by some means, but exchange
no more information about the users than what can be carried using
SIP.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3727,RtcWEB,23,413,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",413,-1,"
NOTE: More profiling of what this means may be needed.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3728,RtcWEB,23,414,"Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction",413,-1,"
The Note, can it be removed, or do we need additional text in this document?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3729,RtcWEB,23,415,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
13. Section 3.2.10.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3730,RtcWEB,23,416,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",415,-1,"
The same issues with connectivity apply.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3731,RtcWEB,23,417,"Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,UnderstandingNegative",416,-1,"
I don't understand this comment. What is it intended to refer to?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3732,RtcWEB,23,418,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
14. Section 3.2.11.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3733,RtcWEB,23,419,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",418,-1,"
Before the game starts, and during game breaks, the talent scout and
the manager have a 1-1 audiovisual communication session.  Only the
rear facing camera of the mobile phone is used.  On the display of
the mobile phone, the video of the club manager is shown with a
picture-in-picture thumbnail of the rear facing camera (self-view).
On the display of the desktop, the video of the talent scout is shown
with a picture-in-picture thumbnail of the desktop camera (self-
view).",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3734,RtcWEB,23,420,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",419,-1,"
I get a bit confused with what is the front and rear of my smart phone.
I would consider the display side the front side, and the rear the other
big side of my block shaped mobile phone. I suggest using other terms.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3735,RtcWEB,23,421,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
15. Section 3.2.14.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3736,RtcWEB,23,422,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",421,-1,"
Discussion: This use-case was briefly discussed at the Quebec webrtc
meeting and it got support.  So far the only concrete requirement
(A17) derived is that the application must be able to ask the browser
to treat the audio signal as audio (in contrast to speech).  However,
the use case should be further analysed to determine other
requirements (could be e.g. on delay mic->speaker, level control of
audio signals, etc.).",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3737,RtcWEB,23,423,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",422,-1,"
I think this Discussion points needs to be dealt with before we can
publish this document. I would consider the question if this needs more
analysis a open issue.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3738,RtcWEB,23,424,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
16. Section 3.3.2.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3739,RtcWEB,23,425,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",424,-1,"
Alice uses her web browser with a service that allows her to call
PSTN numbers.  Alice calls 1-800-gofedex.  Alice should be able to
hear the initial prompts from the fedex IVR and when the IVR says
press 1, there should be a way for Alice to navigate the IVR.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3740,RtcWEB,23,426,"Question,ExtensionOfPrevious,ProposeAction,Social",425,-1,"
Can you please expand IVR.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3741,RtcWEB,23,427,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",351,-1,"
17. Section 3.3.3.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3742,RtcWEB,23,428,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",427,-1,"
The organization has an internal network set up with an aggressive
firewall handling access to the Internet.  If users cannot physically
access the internal network, they can establish a Virtual Private
Network (VPN).",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3743,RtcWEB,23,429,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",428,-1,"
I think the requirements or limitations the above paragraph try to
express is not clear. There is some missing assumptions of location of
server related to clients that is not covered. Thus it is not clear what
requirements this results in.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3744,RtcWEB,23,430,"Question,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social",429,-1,"
Can you please expand this to something that is understandable.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3745,RtcWEB,23,431,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
18. Section 3.3.3.1:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3746,RtcWEB,23,432,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",431,-1,"
This use-case adds requirements on support for fast stream
switches F7, on encryption of media and on ability to traverse very
restrictive FWs.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3747,RtcWEB,23,433,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",432,-1,"
Regarding the restricted FWs, my comment 10) applies to also this comment.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3748,RtcWEB,23,434,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
19. Section 4.2:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3749,RtcWEB,23,435,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",434,-1,"
F14     The browser must be able to measure the level",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3750,RtcWEB,23,436,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",434,-1,"
F15     The browser must be able to change the level
in audio streams.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3751,RtcWEB,23,437,"Question,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social",436,-1,"
Can you please make explicit what type level you think should be
measured or changed, energy, ""voice activity""?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3752,RtcWEB,23,438,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
20. Section 4.2",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3753,RtcWEB,23,439,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",438,-1,"
F19     Streams and data must be able to pass through
limited middleboxes.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3754,RtcWEB,23,440,"ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious",439,-1,"
What type of limitations are you considering in this requirement?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3755,RtcWEB,23,441,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
21. Section 4.2",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3756,RtcWEB,23,442,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",441,-1,"
I note that F30, and F36 may be affected by earlier comments on the
underlying reason for these requirements and need additional text or
clarifications.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3757,RtcWEB,23,443,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",351,-1,"
22. Section 4.2:
F37     The browser must be able to send streams and
data to a peer in the presence of FWs that only
allows http(s) traffic.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3758,RtcWEB,23,444,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",443,-1,"
I think this requirement should have a caveat along the lines: when FW
policy allos WebRTC traffic.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3759,RtcWEB,23,445,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
23. Section 5:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3760,RtcWEB,23,446,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",445,-1,"
Change the TBD to a statement that there are no IANA actions in this
document.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3761,RtcWEB,23,447,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
24. Section 6.2:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3762,RtcWEB,23,448,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",447,-1,"
These security considerations are really security requirements on the
browser or the API. I don't know if would be better to move them to
relevant use case sections, or leave them in place.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3763,RtcWEB,23,449,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",351,-1,"
25. Section 7:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3764,RtcWEB,23,450,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",449,-1,"
13.  Enable company coop without being able to decipher http://
www.ietf.org/mail-archive/web/rtcweb/current/msg04461.html",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3765,RtcWEB,23,451,"Question,ClarificationElicitation,ExtensionOfPrevious",450,-1,"
What is ""coop"" in the above?",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3766,RtcWEB,23,452,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction,Social",351,-1,"
26. Please run a spell checker on the document prior to submitting the
update.",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3767,RtcWEB,23,453,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",351,-1,"
27. Ensure that the ID nits issues are not real issues:",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3768,RtcWEB,23,454,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",453,-1,"
== Line 667 has weird spacing: '...resence  of NA...'",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3769,RtcWEB,23,455,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",453,-1,"
== Line 785 has weird spacing: '...of that  strea...'",<5238446D.8050700@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-09-17 14:00:45
3770,RtcWEB,23,475,"NeutralResponse,Agreement,ProposeAction",365,365,"[BA] I do think the document covers the security and privacy concerns (modulo some issues I had with the ""wiretapping"" definition).  So I think we can eliminate that last sentence entirely.",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3771,RtcWEB,23,526,"Answer,InformationSeeking,Answer,ProposeAction",414,414,[BA] The NOTE tells me that we're not even really sure why this section is there.  So perhaps we should figure out what it adds above and beyond the gateway use case.,<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3772,RtcWEB,23,527,"Agreement,Agreement,ContextSetting",351,-1,"I agree with Magnus's comments in large part.  A few notes:
",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3773,RtcWEB,23,529,"Agreement,Agreement,ContextSetting,ProposeAction",352,-1,"
[BA] +1 on this.  I found myself flipping back and forth between the requirements definition and the use cases to try to understand what the incremental functionality was and sometimes it was less than obvious why a requirement (such as ""no wiretapping"") was dropped from the basic use case.  To me, it makes more sense to lay out basic use cases, and then to focus on incremental requirement additions based on that.",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3774,RtcWEB,23,532,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction","365,378",365,"
[BA] There is a use case (""distributed music band"") that omits the requirement, but that omission didn't make sense to me.  Personally, I would elevate this to a universal requirement in the base use case, and all other cases.",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3775,RtcWEB,23,534,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",387,387,"
[BA] To me, connectivity loss and packet loss are somewhat different issues.  Connectivity loss leads to addition of requirements relating to keep-alives and/or consent (e.g. if the peer drops off the Internet, the consent mechanism will detect it eventually and stop sending).   Packet loss leads to requirements relating to concealment, FEC and/or RTX.  So lumping them together doesn't make sense to me.  > 3.2.2.2.  Derived Requirements",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3776,RtcWEB,23,536,"Agreement,Agreement,ContextSetting,ProposeAction",396,396,"
[BA] Yes, that didn't make sense to me either.  Better to stick with the requirements of the base case and add to them as necessary for more advanced cases.  If something is deleted, I think the document needs to explain why, but in this case the deletions didn't make sense to me.",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3777,RtcWEB,23,538,"Answer,InformationProviding,Answer,ProposeAction",405,405,"
[BA]  Data traffic sent as SCTP/DTLS/UDP will *not* work in this case.  Websockets might, but then I think you need to clarify whether ""HTTP only"" includes websockets (in my experience, in most cases it won't).",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3778,RtcWEB,23,540,"Answer,InformationProviding,Answer,ProposeAction",410,410,"
[BA]  The requirements may need to be *very* high level (e.g. ""without introducing other vulnerabilities""), because this is a tricky area that may end up requiring significant work.",<BLU169-W73DEE63AC5F9BF0BA7663793270@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-09-17 14:32:11
3779,RtcWEB,23,574,"NeutralResponse,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction,StateDecision",406,406,"
Stefan already stated that this use case will be changed to take account of my comments in http://www.ietf.org/mail-archive/web/rtcweb/current/msg08264.html. So the ""only allows HTTP traffic"" is going to be removed and changed to describe the use case when the firewall requires traffic to flow via a HTTP Proxy.

We also have a use case when a network specific TURN server is deployed (3.2.5.1).

In both cases I agree that a network administrator must have a way to block webrtc but there are various ways of achieving this including just configuring the browser not to do webrtc, normal HTTP black/white lists, and also I can imagine solutions based on putting something in the HTTP Connect sent to the proxy so the proxy can block it.

So I agree that it must be possible to block webrtc traffic but we need to careful not to specify the solution in the use case.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF17BCF581@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-09-20 17:57:38
3780,RtcWEB,23,674,"Question,NeutralResponse,InformationSeeking,Question,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",574,-1,"I want to point out that all methods suggested for RTP media through
firewalls that do not allow UDP traffic, by using ""always open"" https port
443 (or http port 80) result in tunneling RTP media over TCP. That gives
with severe quality problems from TCP retransmissions of dropped media
packet packets. Do we really want that for WebRTC?

A quality wise better solution is already pointed out in use case 3.2.5.1
mentioned below:
""An enterprise that uses a RTCWEB based web application for communication
desires to audit all RTCWEB based application session used from inside the
company towards any external peer. To be able to do this they deploy a TURN
server that straddle the boundary
between the internal network and the external""

I suggest the following is added to that use case:
""Such TURN server allows a media path, separated from the usually data
crowded enterprise Internet access, offering superior quality. This is a
better way to enable WebRTC on a network behind a restrictive firewall not
allowing UDP traffic, instead of tunneling RTP through always open http or
https ports resulting in RTP media over TCP  with severe quality problems
from TCP retransmissions of dropped packets.

Such network administrator provided auditing TURN server would also put the
right party in control  The network administrator decides what is allowed
on his network.""

Why should a network administrator that wants to block webrtc media, have to
do more than just closing his firewall for UDP, like below suggested
""configuring the browser not to do webrtc, normal HTTP black/white lists,
and solutions based on putting something in the HTTP Connect sent to the
proxy so the proxy can block it""?

Another thing in the second half of the same use case 3.2.5.1:
Are NAT/firewalls inside the enterprise network assumed? If not, I think the
second half can be deleted.

"" In cases where employees are using RTCWEB applications provided by an
external service provider they still want to have the traffic to stay
inside their internal network and in addition not load the straddling
TURN server, ""

ICE establishes a direct connection in this case, not using any TURN server
at all, doesnt it? This is then not a problem.

/Karl

-----Ursprungligt meddelande-----
Från: rtcweb-bounces@ietf.org [mailto:rtcweb-bounces@ietf.org] För Hutton,
Andrew
Skickat: den 20 september 2013 19:58
Till: Magnus Westerlund; Cullen Jennings (fluffy); rtcweb@ietf.org;
draft-ietf-rtcweb-use-cases-and-requirements@tools.ietf.org
Ämne: Re: [rtcweb] WGLC of draft-ietf-rtcweb-use-cases-and-requirements-11

On: 17 September 2013 13:01 Magnus Westerlund Wrote:",<07a601ceb64e$5caaba00$16002e00$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-21 00:11:30
3781,RtcWEB,23,676,Answer,406,406,"
Stefan already stated that this use case will be changed to take account of
my comments in
http://www.ietf.org/mail-archive/web/rtcweb/current/msg08264.html. So the
""only allows HTTP traffic"" is going to be removed and changed to describe
the use case when the firewall requires traffic to flow via a HTTP Proxy.

We also have a use case when a network specific TURN server is deployed
(3.2.5.1).

In both cases I agree that a network administrator must have a way to block
webrtc but there are various ways of achieving this including just
configuring the browser not to do webrtc, normal HTTP black/white lists, and
also I can imagine solutions based on putting something in the HTTP Connect
sent to the proxy so the proxy can block it.

So I agree that it must be possible to block webrtc traffic but we need to
careful not to specify the solution in the use case.

Andy
",<07a601ceb64e$5caaba00$16002e00$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-21 00:11:30
3782,RtcWEB,23,679,"Agreement,Agreement",351,-1,+1,<52400640.4010606@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:13:36
3783,RtcWEB,23,701,"Question,Question",,-1,"
Shouldn't we add it as a requirement also?",<52400640.4010606@gmail.com>,sergio.garcia.murillo@gmail.com,0.0,0,11,2013-09-23 11:13:36
3784,RtcWEB,23,806,"NeutralResponse,InformationProviding",,-1,"For NAT/Firewall traversal WebRTC uses ICE, where the browser today gets the
TURN server address from the web application, or gets it configured by a LAN
admin via an admin policy template.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3785,RtcWEB,23,807,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",806,-1,"
However, there is a need (motivations below) for the TURN server address to
be provided via DHCP (and maybe RA - Router Advertisement - for IPv6, and
the OTT channel in mobiles have their own method Ive been told). Simply
put, just as you often get your IP-address, DNS address, etc. automatically
from the network access, you should also get the TURN server address.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3786,RtcWEB,23,808,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",807,-1,"
I suggest the following is added to the end of use case (which today is
about multiple TURN servers)
3.2.4.  Simple Video Communication Service, global service provider
3.2.4.1.  Description
""A network service provider must be able to automatically supply a TURN
server addresses to the browser when accessing a network. The address may
come via DHCP or a similar mechanism (maybe RA - Router Advertisement - for
IPv6, an addition to the IPCP protocol like RFC1877 for PPPoE, or whatever
method the mobile OTT channels use). The mechanism should be similar to
automatically getting the IP-address, DNS address, etc.. and need extensions
to current recommendations/standards.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3787,RtcWEB,23,809,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",808,-1,"
There are several reasons for a network service provider to supply a TURN
server as part of his offered access:
- to keep media paths short, specifically not sending media outside its own
network to some distant application provided TURN server
- to support mobility, i.e. you may want to move from a LAN with a
configured TURN server to accessing via WiFi or 3G/4G OTT channels
- to offer a media path with better quality (than best effort data traffic).
Getting WebRTC-ready access and we look forward to telepresence for
everyone.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3788,RtcWEB,23,810,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",809,-1,"
An enterprise network that want to keep a restrictive firewall not allowing
UDP traffic, could provide a real-time path using a TURN server paralleling
the firewall, instead of tunneling RTP through always open http or https
ports resulting in RTP media over TCP  with severe quality problems from
TCP retransmissions of dropped packets. The TURN server address is most
easily provided in the same way as the IP address and DNS address. (That
would also put the right party in control  The network provider decides
what is allowed on his network.)",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3789,RtcWEB,23,811,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",810,-1,"
This browser should select which available TURN server address to use in the
following priority order, where ICE could be used to try several:",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3790,RtcWEB,23,812,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",811,-1,"
1) TURN server address configured in the browser by the user (special cases,
normally not used)
2) TURN server address configured by the network administrator via an admin
policy template
3) TURN server address supplied by DHCP or similar automatic network method
4) TURN server address being supplied by the web application""",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3791,RtcWEB,23,813,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",812,-1,"
Two new requirements can be extracted:
F40     The browser must support retrieving TURN server addresses via
DHCP or a similar mechanism (maybe RA - Router Advertisement - for IPv6, an
addition to the IPCP protocol like RFC1877 for PPPoE, or whatever method the
mobile OTT channels use). The mechanism should be similar to automatically
getting the IP-address, DNS address, etc..
F42     This browser should select which available TURN server address to
use in the following priority order, where ICE could be used to try several:",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3792,RtcWEB,23,814,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",812,-1,"
1) TURN server address configured in the browser by the user (special cases,
normally not used)
2) TURN server address configured by the network administrator via an admin
policy template
3) TURN server address supplied by DHCP or similar automatic network method
4) TURN server address being supplied by the web application",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3793,RtcWEB,23,815,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",814,-1,"
I suppose this also will add to:
5.  IANA Considerations
TBD",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3794,RtcWEB,23,818,InformationProviding,,-1,"
We would like to start a working group last call of
draft-ietf-rtcweb-use-cases-and-requirements-11.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3795,RtcWEB,23,819,"ExtensionOfPrevious,ProposeAction",,-1,"
Please send comments by the end of the day on September 21.",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3796,RtcWEB,23,820,Thanking,,-1,"
Thank you,",<079001ceb618$2f551ae0$8dff50a0$@stahl>,karl.stahl@intertex.se,0.0,0,18,2013-09-20 17:43:42
3797,RtcWEB,24,158,"ExtensionOfPrevious,ContextSetting",186,-1,> 6.  Security Considerations,<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3798,RtcWEB,24,186,"InformationProviding,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"I am the assigned Gen-ART reviewer for this draft. For background on
Gen-ART, please see the FAQ at
< http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.

Please wait for direction from your document shepherd
or AD before posting a new version of the draft.

Document: draft-ietf-rtcweb-use-cases-and-requirements-14.txt
Reviewer: Brian Carpenter
Review Date: 2014-04-21
IETF LC End Date: 2014-04-25
IESG Telechat date: 2014-05-15

Summary:  In good shape but still needs work.

Comment:

This is the same as my LC review since there is no new version yet.
(Also see http://www.ietf.org/mail-archive/web/gen-art/current/msg10092.html)

In case there are W3C people reading this review, let me clarify that Gen-ART reviews
are by generalists who are often encountering a topic for the first time. I haven't
classified the issues into ""major"" and ""minor"" but some of them really do need
attention before the document advances. There are also some nits noted at the end.

Issues:
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3799,RtcWEB,24,187,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,">   The following considerations are applicable to all use cases:
>   o  Clients can be on IPv4-only
>   o  Clients can be on IPv6-only
>   o  Clients can be on dual-stack",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3800,RtcWEB,24,188,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction",187,-1,"
It isn't clear whether this is intended to include the case where an
IPv4-only client communicates with an IPv6-only node (or vice versa).

It also isn't clear about cases in which a mobile client's connectivity
changes dynamically during a session (e.g. from IPv4 to IPv6). This is
partly clarified later by F17, but only partly.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3801,RtcWEB,24,189,"InformationProviding,ExtensionOfPrevious",186,-1,">   o  Clients can be on networks with a NAT using any type of Mapping
>      and Filtering behaviors (as described in RFC4787).",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3802,RtcWEB,24,190,"Question,NeutralResponse,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",189,-1,"
That document is scoped for UDP only. Is that sufficient? As I understand the
RTCWEB transport drafts, it is aiming at connection-oriented transport.
(How many NATs support SCTP, for example?)
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3803,RtcWEB,24,191,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,"> 3.2.  Common requirements
>   The requirements retrived from the Simple Video Communication Service
>   use-case (Section 3.3.1) by default apply to all other use-cases, and
>   are considred common.  For each individual use-case, only the
>   additional requirements are listed.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3804,RtcWEB,24,192,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction",191,-1,"
In fact you duplicate the additional requirements in each use case where they
occur. That seems like overkill. Also there's at least one mix-up as a result,
noted below.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3805,RtcWEB,24,193,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,"> 3.3.1.2.  Common Requirements
>  F3      Transmitted streams and data must be rate
>          controlled (meaning that the browser must, regardless
>          of application behavior, reduce send rate when
>          there is congestion).",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3806,RtcWEB,24,194,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",193,-1,"
I think that needs to be broken into two more atomic requirements.
Something like

F3.1    There must be a mechanism by which the transport layer
can signal the occurrence of congestion to the browser.

F3.2    Transmitted streams and data must be rate
controlled (meaning that the browser must, regardless
of application behavior, reduce send rate while
there is congestion).

The change from ""when"" to ""while"" is intentional, since the browser
should allow the rate to increase when there is no congestion.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3807,RtcWEB,24,195,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,">   F11     It must be possible to protect streams and data
>           from wiretapping [RFC2804].",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3808,RtcWEB,24,196,"NeutralResponse,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",195,-1,"
I don't see the relevance of the reference (of which I am a co-author),
which mainly states that the IETF won't consider requirements *for* wiretapping.
I'm sure you can find a reference that says encryption is a Good Thing.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3809,RtcWEB,24,197,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,">   F14     The browser must make it possible to set up a
>           call between two parties without one party
>           learning the other party's host IP address.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3810,RtcWEB,24,198,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",197,-1,"
It is not clear how to interpret that. I assume it's supposed to be a
restatement of the earlier comment:
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3811,RtcWEB,24,199,"InformationProviding,ExtensionOfPrevious",198,-1,">   The application gives the users the opportunity to stop it from
>   exposing the host IP address to the application of the other user.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3812,RtcWEB,24,200,"NeutralResponse,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,UnderstandingNegative",198,-1,"
But -- assuming the implementation model is peer-to-peer communication
between the two hosts, rather than client1-server-client2 communication --
I'm afraid I don't see how F14 can be guaranteed, since the peers must be
aware of each others' IP address. Even if the browser and app hide the
remote address, a little Wiresharking will reveal it immediately.
There's not much point stating a requirement that cannot be met.

I realised at this point in the document that you need to be very
explicit about whether communication is indeed intended to be peer-to-peer
or via the server. And assuming it is meant to be peer-to-peer, what
is the model for the rendez-vous between the peers? What requirements do
you need to solve the resulting referral problem?
(http://tools.ietf.org/html/draft-carpenter-referral-ps-02)

This topic belongs in the Common Requirements.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3813,RtcWEB,24,201,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,"> 3.3.7.1.  Description
>   The user in the previous use case that starts a trip is behind a
>   common residential router that supports prioritization of traffic.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3814,RtcWEB,24,202,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",201,-1,"
Please talk about differentiated services (RFC 2474 etc.). IP doesn't
have simple priority. That's exactly why the DART WG was just formed.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3815,RtcWEB,24,203,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,"> 3.3.7.2.  Additional Requirements
>   REQ-ID      DESCRIPTION
>   F17     The communication session must survive across a
>           change of the network interface used by the
>           session
>   F22     The browser must be able to receive streams and
>           data from multiple peers concurrently.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3816,RtcWEB,24,204,"Question,Disagreement,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction",203,-1,"
This seems completely messed up. The reader expects requirements for
QoS at this point. Isn't this ""F22"" really F24?
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3817,RtcWEB,24,205,"InformationProviding,ExtensionOfPrevious,ContextSetting",186,-1,"> 3.3.10.2.  Additional Requirements
>   REQ-ID      DESCRIPTION
>   F22     The browser should be able to take advantage
>           of available capabilities (supplied by network
>           nodes) to prioritize voice, video and data
>           appropriately.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3818,RtcWEB,24,206,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",205,-1,"
Again, please cite differentiated services rather than prioritization.
Also, you now have two different F22s. This one seems to fit 3.3.7.2 better.

Below, you also have two F25s. And other duplicates. Wasn't the idea
just to add *new* requirements when they arose? As F22 shows, the
duplication is error-prone.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3819,RtcWEB,24,207,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",158,-1,"
I am really surprised that there isn't a sub-section on Privacy
Considerations. RFC 6973 describes the various types of threat and they
seem specially relevant here.

Nits:
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3820,RtcWEB,24,208,"InformationProviding,ExtensionOfPrevious,ContextSetting",207,-1,"> 2.  Conventions
>   The key words ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"",
>   ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this
>   document are to be interpreted as described in BCP 14, RFC 2119
>   [RFC2119].",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3821,RtcWEB,24,209,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction",208,-1,"
The change log says you removed this. Also there is no change log
since version 10.

RFC 4787 is mentioned but not listed as an Informative Reference.
",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3822,RtcWEB,24,210,"InformationProviding,ExtensionOfPrevious",207,-1,">    A17, A23
>    A13, A14, A15, A16",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3823,RtcWEB,24,211,"Question,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",210,-1,"
What are these lines that occur in a few places?

RFC 2804 and RFC 5479 are Informational documents so cannot reasonably be
Normative References.",<536FD84C.8000604@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 08:06:36
3824,RtcWEB,24,378,"Question,Thanking,InformationSeeking,ProposeAction,Social,Thanking",186,-1,"Brian:

Thank your for your detailed review.

Authors:

Any responses? (I personally think at least the first comment deserves a change in the document.)
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3825,RtcWEB,24,380,"NeutralResponse,InformationProviding,ContextSetting,ProposeAction",188,188,"
I'd suggest expanding the last bullet of Section 3.1 to include various translation designs that might be involved in Ipv4-IPv6 connectivity. Eg.,

OLD:
o  Clients can be on networks with a NAT using any type of Mapping
and Filtering behaviors (as described in RFC4787).
NEW:
o  Clients can be on networks with a NAT or IPv4-IPv6 translation devices using any type of Mapping
and Filtering behaviors (as described in RFC4787).
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3826,RtcWEB,24,382,"Answer,InformationProviding,Answer",190,190,"
I thought that any SCTP would be encapsulated within UDP fro that reason.
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3827,RtcWEB,24,384,"Agreement,Agreement,ProposeAction",194,194,"
I agree with the when=>while change, good catch. Not sure personally if the breakdown to smaller requirements is necessary.
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3828,RtcWEB,24,386,"Agreement,InformationProviding,Agreement,ProposeAction",196,196,"
Agreed. I do not think this is a blocking comment, but I too would like to see a difference reference.
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3829,RtcWEB,24,388,"Agreement,Agreement,ProposeAction",202,202,"
I agree that DS would be a more appropriate term, but I don't think the document should otherwise expand too much on that space, IMO.
",<80CD595B-BC89-4629-A033-17887DA6BC8D@piuha.net>,jari.arkko@piuha.net,0.0,0,0,2014-05-15 16:31:29
3830,RtcWEB,25,34,"InformationProviding,InformationProviding,ContextSetting",,-1,"
We would like to adopt a WG document with the purpose for describing use
cases for the RTCWEB work. This document would be targeted as
publication as an Inforamtional RFC eventually.",<4DFB09AC.1090001@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-17 10:00:44
3831,RtcWEB,25,35,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",34,-1,"
The candidate document for this is:
Web Real-Time Communication Use-cases and Requirements
https://datatracker.ietf.org/doc/draft-holmberg-rtcweb-ucreqs/",<4DFB09AC.1090001@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-17 10:00:44
3832,RtcWEB,25,36,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",35,-1,"
Based on our interim last week it was clear that there are some use
cases that clearly needs development. However, the WG chairs believe
that future development of the document can be done as WG item.",<4DFB09AC.1090001@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-17 10:00:44
3833,RtcWEB,25,37,"ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",36,-1,"
WG participants please indicate if you agree in adopting this document
as a basis, or if not, what the short comings you would like to see
addressed prior to adoption. Once more, the document will be continued
to be developed under the WG control and this is far from any final
version.",<4DFB09AC.1090001@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-17 10:00:44
3834,RtcWEB,25,38,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",37,-1,"
Please provide your view no later than Friday the 24th.",<4DFB09AC.1090001@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-17 10:00:44
3835,RtcWEB,25,54,"Agreement,Agreement",35,35,"
Agreed",<4DFB3AA1.7020004@jesup.org>,randell1@jesup.org,0.0,0,6,2011-06-17 07:29:37
3836,RtcWEB,25,114,"NeutralResponse,InformationProviding,ContextSetting,ProposeAction",37,-1,"I think the document is a good starting point, although, I personally would
prefer that the mapping would should the use cases that were used to derive
the requirements versus the requirements that are derived from the use case.
Otherise, you have to   search through the use cases to see the one from
which the requirement was derived. Or perhaps having the mapping both
directions.",<BANLkTin07tRyCTmjqQk-veP7GkVsKJ+vXQ@mail.gmail.com>,mary.ietf.barnes@gmail.com,0.0,0,0,2011-06-17 06:59:29
3837,RtcWEB,25,115,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction",114,-1,"
Also, I would suggest some reformatting so that new use cases can be easily
added - i.e., it doesn't look like the list is a result of the
<list>...</list> xml formatting. If that's not the case, I still don't like
this dashy list style.",<BANLkTin07tRyCTmjqQk-veP7GkVsKJ+vXQ@mail.gmail.com>,mary.ietf.barnes@gmail.com,0.0,0,0,2011-06-17 06:59:29
3838,RtcWEB,25,184,Social,,-1,"Hi Mary,
",<7F2072F1E0DE894DA4B517B93C6A0585194E3E74C5@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-06-17 14:26:15
3839,RtcWEB,25,186,"NeutralResponse,ProposeAction",114,114,"
We can fix that.
",<7F2072F1E0DE894DA4B517B93C6A0585194E3E74C5@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-06-17 14:26:15
3840,RtcWEB,25,188,"NeutralResponse,ProposeAction,Thanking",115,115,"
We can fix that too.

Thanks!
",<7F2072F1E0DE894DA4B517B93C6A0585194E3E74C5@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-06-17 14:26:15
3841,RtcWEB,25,191,"Agreement,Agreement",36,-1,Agreed.,<08339F35-9029-4629-897A-6CDC11C0610F@oracle.com>,anil.srivastava@oracle.com,0.0,0,52,2011-06-17 06:33:15
3842,RtcWEB,25,238,"Agreement,Agreement",36,-1,I agree with adopting the document as a WG starting point.,<4DFF02E3.20407@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-06-20 10:20:51
3843,RtcWEB,25,287,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",238,-1,"
Naturally, I expect multiple use cases to be added (and perhaps even
some use cases marked up with ""RTCWEB can't do this"") before we're finished.",<4DFF02E3.20407@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-06-20 10:20:51
3844,RtcWEB,25,290,"Agreement,Agreement",287,-1,+1,<4DFF0532.8090903@ericsson.com>,salvatore.loreto@ericsson.com,0.0,0,2,2011-06-20 11:30:42
3845,RtcWEB,25,348,"Agreement,Agreement",36,-1,I also agree with adopting this document and will contribute to the development of the use cases.,<101C6067BEC68246B0C3F6843BCCC1E30C22A5FF77@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2011-06-20 19:11:02
3846,RtcWEB,25,496,"InformationProviding,InformationProviding,ContextSetting,StateDecision",38,-1,"
I have reviewed the input from the WG participants, and there has all
been in support for adopting this document as WG item. So hereby I
declare https://datatracker.ietf.org/doc/draft-holmberg-rtcweb-ucreqs/ a
WG document. At this point the WG chairs request no changes in the
document editor team.",<4E05F59D.90703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-25 16:50:05
3847,RtcWEB,25,497,ExtensionOfPrevious,,-1,"
In addition there has been input on how to improve the document which we
request the editors to take into account.",<4E05F59D.90703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-25 16:50:05
3848,RtcWEB,25,498,ExtensionOfPrevious,,-1,"
Editors, please submit the document as
draft-ietf-rtcweb-use-cases-and-requirements-00.txt.",<4E05F59D.90703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2011-06-25 16:50:05
3849,RtcWEB,26,0,Social,,-1,"Howdy,",<CA+9kkMAbe9cnkBz6GkKLG6VjbTnMp-Lvd8o=VLb+_7mDjNKNww@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2015-01-08 10:54:11
3850,RtcWEB,26,10,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,InformationProviding,Apologising",,-1,"
During the Honolulu meeting, the chairs agreed to ask for some on-list
discussion of this draft prior to discussing adoption.  During the holidays
we dropped the ball on that, for which our apologies.   At this point,
though, we'd like to see some discussion of the draft--in particular on its
scope and how it fits into the landscape of work we need to complete",<CA+9kkMAbe9cnkBz6GkKLG6VjbTnMp-Lvd8o=VLb+_7mDjNKNww@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2015-01-08 10:54:11
3851,RtcWEB,26,49,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",10,-1,"For what it's worth, regarding scope, my perspective is that the document
does not create any new protocol extensions or API points.  Its only
purpose is to lay out in detail the expected interaction between
externally-provided TURN servers (like those found by TRAM autodiscovery)
and WebRTC, which is currently extremely under-specified.  Specifically, it
explains that externally-provided TURN servers are _proxies_, not just
additional TURN servers like those listed in the RTCPeerConnection
constructor arguments.  Treating these servers as proxies (in the
particular manner specified) allows us to preserve (and enhance) some
important performance, connectivity, and privacy properties of WebRTC.

This document only imposes requirements (of any strength) on WebRTC
implementations that intend to implement a mechanism for using TURN servers
that were not indicated by the application.  It does not demand that all
browsers add support for such a mechanism, and it does not specify a
preference for any particular TURN configuration mechanism.
",<CAHbrMsD3KnE+thwvUTp4r=6oqv=QEdQWr-Ev4-4cwD3OuFkHnw@mail.gmail.com>,bemasc@webrtc.org,0.0,0,15,2015-01-08 14:34:44
3852,RtcWEB,26,115,"InformationProviding,Agreement,ContextSetting,NeutralResponse",49,-1,"Right. To be absolutely clear, this draft explains how RTCWEB
implementations can satisfy the requirement F20 from Section 3.3.5 of
https://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15#section-3.3.5.1.
We've discussed the need for this for some time, but the RETURN draft is
the first proposal for how to actually address it.

REQ-ID      DESCRIPTION
F20     The browser must support the use of STUN and TURN
servers that are supplied by entities other than
the web application (i.e. the network provider).
",<CAOJ7v-1j=K-T18TC-ZvegMkR-4hzks4p0Vg1e7OiFTQ98akhzw@mail.gmail.com>,juberti@google.com,0.0,0,5,2015-01-08 13:06:17
3853,RtcWEB,26,119,"InformationProviding,NeutralResponse,ProposeAction,Agreement",115,-1,I think we should do this it is needed and as Justin said it satisfies a requirement (F20) we gave ourselves from the beginning.,<9F33F40F6F2CD847824537F3C4E37DDF1E67BDEE@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-01-19 17:27:12
3854,RtcWEB,26,196,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",119,-1,"
I don't see it as something that is mandatory to implement but more of an optimization that is needed to work well in some environments so I would not considered this to be on the critical path but unless somebody proposes an alternative solution to requirement F20 then this should be adopted and done as soon as possible.",<9F33F40F6F2CD847824537F3C4E37DDF1E67BDEE@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-01-19 17:27:12
3855,RtcWEB,27,266,"NeutralResponse,InformationProviding,ContextSetting",,-1,"
F19 was removed to the -12 version when the following text was removed
from the use-case ""Video conferencing system with central server"":
",<1447FA0C20ED5147A1AA0EF02890A64B1CF542F2@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-10 10:56:37
3856,RtcWEB,27,267,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",266,-1,"
""The organization has an internal network set up with an aggressive
firewall handling access to the Internet.  If users cannot physically
access the internal network, they can establish a Virtual Private
Network (VPN).""
",<1447FA0C20ED5147A1AA0EF02890A64B1CF542F2@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-10 10:56:37
3857,RtcWEB,28,103,"InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding",,-1,"Hi, the next suggestion would allow media serial/parallel forking
scenarios when interoperating with a SIP network. It is just a
*suggestion*.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3858,RtcWEB,28,104,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",103,-1,"
Assumtions",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3859,RtcWEB,28,105,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",104,-1,"
- WebRTC specs don't allow sharing a local PeerConnection for sending
and receiving media to/from more than a single remote peer.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3860,RtcWEB,28,106,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",104,-1,"
- The remote pure SIP peers implement ICE+SRTP and can interoperate
with a WebRTC client in the media plane without requiring media
gateways.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3861,RtcWEB,28,107,"ContextSetting,ExtensionOfPrevious",,-1,"
The problem",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3862,RtcWEB,28,108,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",107,-1,"
Let's assume a WebRTC client implementing SIP at JavaScript level
(although there could be a signaling gateway).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3863,RtcWEB,28,109,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",108,-1,"
- The WebRTC client makes an outgoing call which arrives to a SIP
proxy and forking occurs (serial or parallel).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3864,RtcWEB,28,110,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",108,-1,"
- The WebRTC client receives more than a single SIP 183 response with
different To-tags and different SDPs (so they are different remote SIP
peers).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3865,RtcWEB,28,111,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",108,-1,"
- And/or the WebRTC client receives a 200 OK with a Totag and SDP
different than the one received in the previous 183.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3866,RtcWEB,28,112,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",109,-1,"
In this case, given the first assumption above, the WebRTC client must
choose a single remote SIP peer and can just send and receive media to
the chosen peer (limitation 1).
If the SIP 200 OK arriving to the WebRTC client belongs to a remote
peer different than the chosen one, the WebRTC client cannot reuse the
already open local PeerConnection since it was created passing it a
different remote SDP (limitation 2).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3867,RtcWEB,28,113,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",112,-1,"
Solution",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3868,RtcWEB,28,114,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- The WebRTC client sends the call and receives a 183 with Totag
""AAAA"" and SDP ""SDP_A"" from SIP_PEER_A.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3869,RtcWEB,28,115,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- It creates a PeerConnection passing it ""SDP_A"", sends like a ROAP
Answer to the peer and media flow starts between client and
SIP_PEER_A.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3870,RtcWEB,28,116,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- Later (or very soon) another 183 with Totag ""BBBB"" and SDP ""SDP_B""
arrives to the WebRTC client from SIP_PEER_B.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3871,RtcWEB,28,117,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- The client creates a *new* PeerConnection *without* passing it
""SDP_B"" and sends a SIP UPDATE with the associated ROAP Offer to
SIP_PEER_B.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3872,RtcWEB,28,118,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- If SIP_PEER_B implements SIP UPDATE it will reply a 200 OK with a
new ""SDP_B2"" (it could be the same as ""SDP_B"").",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3873,RtcWEB,28,119,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- The client then passes ""SDP_B2"" to the second PeerConnection and
media flow starts between client and SIP_PEER_A.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3874,RtcWEB,28,120,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- Later a SIP 200 OK with Totag ""CCCC"" and SDP ""SDP_C"" arrives to the
client from SIP_PEER_C.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3875,RtcWEB,28,121,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- The client creates a *new* PeerConnection *without* passing it
""SDP_C"" and sends a SIP re-INVITE with the associated ROAP Offer to
SIP_PEER_C.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3876,RtcWEB,28,122,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- SIP_PEER_C will reply a 200 OK with a new ""SDP_C2"" (it could be the
same as ""SDP_C"").",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3877,RtcWEB,28,123,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",113,-1,"
- The client then passes ""SDP_C2"" to the third PeerConnection and
media flow starts between client and SIP_PEER_C. At the same time the
client destroys the first and second PeerConnections.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3878,RtcWEB,28,124,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",113,-1,"
And we are done. Limitation solved. Of course if SIP_PEER_B does not
implement UPDATE we have a problem, but RFC 3311 (SIP UPDATE Method)
is a standard since 2002, come on!",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3879,RtcWEB,28,125,"ContextSetting,ExtensionOfPrevious",,-1,"
Conclusion",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3880,RtcWEB,28,126,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ExtensionOfPrevious",125,-1,"
SIP media forking can be implemented in JavaScript without mandating
special requirements in WebRTC for interoperating with ""legacy"" SIP
(why do we call ""legacy"" to SIP???). And we just need  tu use existing
SIP mechanisms.",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3881,RtcWEB,28,127,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",126,-1,"
No signaling gateway is required (of course !!) nor a media gateway
(if second bullet in ""Assumtions"" section above is satisfied).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3882,RtcWEB,28,128,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",127,-1,"
We all are happy (but those who have in mind a market selling
WebRTC-SIP gateway boxes and want that the specs satisfy their
business model).",<CALiegfkikmpi55ePUo=AQCQvorv4_6v2ByTCdL=V_=umcCEpUA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-29 19:29:20
3883,RtcWEB,28,238,"InformationSeeking,ClarificationElicitation,Question",121,-1,"I assume that part of the solution here is that the new PeerConnection's
reuse the same candidates as the first one created?",<4EAD2199.6050305@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-10-30 11:06:17
3884,RtcWEB,28,256,"InformationProviding,Answer,ProposeAction,Answer",238,238,"
Well, if that would be possible then my solution is not needed at all :)

My solution is a ""workaround"" for the case in which WebRTC does not
allow reusing the same local candidates. In my suggestion I create N
*independent* PeerConnection instances.
",<CALiegfmA66ReX22SjHeLvF119nA0hVNtMr3GBj1Ma-3JSVJVfA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 11:20:00
3885,RtcWEB,28,259,Social,,-1,"Hi,",<7F2072F1E0DE894DA4B517B93C6A05852235717390@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 16:58:09
3886,RtcWEB,28,388,"Disagreement,Disagreement",121,-1,"
I don't like the idea of having to send UPDATE/re-INVITE for every new early dialog.",<7F2072F1E0DE894DA4B517B93C6A05852235717390@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 16:58:09
3887,RtcWEB,28,389,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",388,-1,"
In addition, I am not even sure it would work with ICE. Remember that ICE allows the UAS to send an ""answer"" unreliably (the unreliabe 18x is re-transmitted a few times), but since it's not a real answer, the UAC is not allowed to send an UDPATE.",<7F2072F1E0DE894DA4B517B93C6A05852235717390@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 16:58:09
3888,RtcWEB,28,390,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",389,-1,"
In my opinion a better solution is to create a new PeerConnection for every new early dialog, which uses the *same* address/candidate parameters as the ""parent"" PeerConnection. In such case there is no need to send an UPDATE.",<7F2072F1E0DE894DA4B517B93C6A05852235717390@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 16:58:09
3889,RtcWEB,28,420,"InformationProviding,ContextSetting,Social,NeutralResponse",388,388,"
Hi Christer, it was just a suggestion, I'm not traying to mandating or
standarizing nothing :)
",<CALiegf=t=9YSbZ1fmCQs0BrV79TPAkXB5XEsONRA4KP_um4DtA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 20:12:22
3890,RtcWEB,28,421,"InformationProviding,Disagreement,Disagreement",389,389,"
I don't agree. If the UAC receives a 180 it means that the 180 has
been received (regardless it was unreliable), so UPDATE is possible.
",<CALiegf=t=9YSbZ1fmCQs0BrV79TPAkXB5XEsONRA4KP_um4DtA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 20:12:22
3891,RtcWEB,28,422,"InformationProviding,Agreement,ContextSetting,NeutralResponse",390,390,"
Sure! but my suggestion was based on the assumption that WebRTC won't
allow reusing the same local address/candidates in two different
PeerConnection's.
",<CALiegf=t=9YSbZ1fmCQs0BrV79TPAkXB5XEsONRA4KP_um4DtA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 20:12:22
3892,RtcWEB,28,463,Social,,-1,"Hi,
",<7F2072F1E0DE894DA4B517B93C6A058522357895FA@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 20:24:17
3893,RtcWEB,28,465,"Disagreement,Social,NeutralResponse",420,420,"
And I didn't like the suggestion :)
",<7F2072F1E0DE894DA4B517B93C6A058522357895FA@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 20:24:17
3894,RtcWEB,28,467,"InformationProviding,NeutralResponse,ContextSetting,Social,NeutralResponse",421,421,"
Ok, small correction: you are not allowed to send a new offer before you have received the previous answer in a reliably sent response :)
",<7F2072F1E0DE894DA4B517B93C6A058522357895FA@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 20:24:17
3895,RtcWEB,28,493,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",467,467,"
Ok, PRACK (RFC 3262) dates from 2002, so just add ""Require: 100rel"" in
the INVITE and you are done. Of course, if the remote SIP peer does
not implement PRACK I am sure it won't implement ICE and SRTP, so
interoperability with a WebRTC client is not possible anyway.

Anyhow, let's remember that the purpose of WebRTC is not the
interoperability with old SIP phones which implement nothing but plain
SIP and plain RTP. So I don't expect that WebRTC will allow reusing
the same local candidates in a new PeerConnection just to allow SIP
media forking.
",<CALiegfnDsP8Y19tUKifdG8vJ552ivY+1f6+e8JEQCyrFoZF9KQ@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 20:41:31
3896,RtcWEB,28,529,Social,,-1,"Hi,
",<7F2072F1E0DE894DA4B517B93C6A058522357895FC@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 21:11:18
3897,RtcWEB,28,531,"Question,InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse",493,493,"
Dude, where were you when they wrote RFC 5245? The reason they specified the re-transmission of un-reliable 18x responses was so that ICE entities would NOT have to support PRACK :)

Having said that, *today* PRACK support may be more common (75%, according to the SIPit report) than back in those days, and if in addition SRTP mandates PRACK support there might not be a real-life problem.
",<7F2072F1E0DE894DA4B517B93C6A058522357895FC@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 21:11:18
3898,RtcWEB,28,533,"InformationProviding,Agreement,ProposeAction,Social,Agreement",493,493,"
I agreed.

And, my main concern is not whether endpoints will support PRACK, but having to send new offers just because of forking.

Of course, nobody prevents you from doing that, if you want :)
",<7F2072F1E0DE894DA4B517B93C6A058522357895FC@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 21:11:18
3899,RtcWEB,28,534,"Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse",493,493,"
Well, that's what we have to figure out.

And, just for the record: based on what do you make that assumption?
",<7F2072F1E0DE894DA4B517B93C6A058522357895FC@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 21:11:18
3900,RtcWEB,28,610,"InformationProviding,Agreement,NeutralResponse",531,531,"
Sure, but WebRTC is not SIP and must not be designed just in order to
interoperate with SIP.
",<CALiegfmwF+O49HVNjKFfJ30hZx4Sfvv55FaN6Y4PnN3x8dv1QA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 21:32:43
3901,RtcWEB,28,611,"InformationProviding,Agreement,ContextSetting,Social,NeutralResponse",531,531,"
Oh, I didn't know that SRTP mandates PRACK, then we are done :)
",<CALiegfmwF+O49HVNjKFfJ30hZx4Sfvv55FaN6Y4PnN3x8dv1QA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 21:32:43
3902,RtcWEB,28,613,"ClarificationElicitation,NeutralResponse,ContextSetting,Question",533,533,"
Of course I prefer not having to use that but, should WebRTC modify
PeerConnection specs just for allowing SIP media forking?
",<CALiegfmwF+O49HVNjKFfJ30hZx4Sfvv55FaN6Y4PnN3x8dv1QA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 21:32:43
3903,RtcWEB,28,615,"InformationSeeking,Agreement,ProposeAction,Question",534,534,"
I would also like to know what non-SIP folks think about this.
",<CALiegfmwF+O49HVNjKFfJ30hZx4Sfvv55FaN6Y4PnN3x8dv1QA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 21:32:43
3904,RtcWEB,28,616,"Question,InformationProviding,Answer,ContextSetting,ProposeAction,Answer",534,534,"
Ok: in order to allow SIP media forking, WebRTC should allow reusing
the same local candidates in a new PeerConnection (or making a single
PeerConnection capable of sending and receiving RTP to/from more than
a single remote peer).

Remember that WebRTC does not mandate a protocol in-the-wire, so a
developer could make a new/custom protocol in which for each ""early
response containing media"" it creates a new PeerConnection. However
that does not fit well with SIP. But this is just a SIP issue, not a
WebRTC issue.

Should PeerConnection become more complex just for those willing to
implement SIP (or something that can be mapped to SIP) in WebRTC and
interoperate with SIP?

I insist: this limitation *just* affects to SIP (due to SIP nature in
which a UAC MUST be able to send/receive RTP to different peers using
the same local address). Any other protocol implemented on top of
WebRTC could avoid this limitation with a proper design. So should
WebRTC be conditionated by SIP protocol requirements? I don't think
so, regardless the number of SIP folks participating in this WG (I
still think WebRTC is something for the Web).

So this is the reason of my assumption.
",<CALiegfmwF+O49HVNjKFfJ30hZx4Sfvv55FaN6Y4PnN3x8dv1QA@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-30 21:32:43
3905,RtcWEB,28,656,Social,,-1,"Hi,
",<7F2072F1E0DE894DA4B517B93C6A058522357895FE@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 22:39:24
3906,RtcWEB,28,658,"InformationProviding,Disagreement,Disagreement",611,611,"
I don't think SRTP as such mandates PRACK. But, whatever media negotiations, that require reliably sent SDP, you want to do during the early dialog require PRACK.
",<7F2072F1E0DE894DA4B517B93C6A058522357895FE@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 22:39:24
3907,RtcWEB,28,660,"InformationProviding,Answer,ContextSetting,ProposeAction,StateDecision,NeutralResponse",613,613,"
WebRTC is not going to modify anything. AFAIK, we will ask W3C to do it, based on our wishes and requirements.

However, it would only be needed if we decide to support parallel forking. If we choose to only require support of serial forking, you may not have to create new PeerConnections - if you can modify the remote media parameters of the existing one.

As I've said before, I am personally fine with supporting serial forking, but if we can get parallel forking ""for free"" that's of course good.
",<7F2072F1E0DE894DA4B517B93C6A058522357895FE@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 22:39:24
3908,RtcWEB,28,662,"InformationProviding,NeutralResponse,NeutralResponse",615,615,"
First I think the SIP folks shall agree on what THEY want. Then we'll see whether/how it's possible to achieve, and what others think.
",<7F2072F1E0DE894DA4B517B93C6A058522357895FE@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-30 22:39:24
3909,RtcWEB,28,670,"InformationProviding,Disagreement,ContextSetting,ProposeAction,NeutralResponse",390,390,"
Hmm we should talk about this - I have a hard time seeing how that is going to work. I was working on the assumption that  PeerConnection could deal with more than one offer/answer pair at a time. Given the current WebRTC API and something like ROAP - it seems like that should just work.",<3BBCA56E-CA6E-4585-8EBB-ED6EDFED789F@cisco.com>,fluffy@cisco.com,0.0,0,0,2011-10-30 12:41:24
3910,RtcWEB,28,687,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",670,670,"I think having a single PeerConnection object send media to multiple
peers at the same time breaks the model we've been working from.

It may be reasonable to give a PeerConnection the ability to switch from
one remote peer to another remote peer (to support 180-like things), but
I don't think it's reasonable to have it connected to multiple remote peers.

So if we support real forking, we'll have to create multiple
PeerConnections to do that.",<4EADF511.2040403@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-10-30 18:08:33
3911,RtcWEB,28,737,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",687,687,"
AFAIK there are three alternatives here:
",<CALiegfmH7PDDrK60mWhwY=DhUDwvH-pZHdTXrpndWLE1PcGOcw@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 10:21:30
3912,RtcWEB,28,738,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","687,737",687,"
1) PeerConnection can just communicate with a single peer.

2) PeerConnection can just communicate with a single peer but the per
can be replaced later (so still we reuse the same local candidates,
but ICE+SRTP must be ""restarted"". This solves serial forking.

3) PeerConnection can communicate with multiple peers at the same
time. This solves serial and parallel forking.
",<CALiegfmH7PDDrK60mWhwY=DhUDwvH-pZHdTXrpndWLE1PcGOcw@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 10:21:30
3913,RtcWEB,28,739,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","687,738",687,"
In my opinion:

- Option 1) is very limited.

- Option 2) is a MUST.

- Option 3) would be great but it introduces some complexity. Imagine
there is parallel forking and the WebRTC client recives 3 SDP's from 3
different peers, and passes all of them to the same PeerConnection. At
same point a remote peer stops sending media so we get a callback
""peerStopsSendingMedia()"" in out PeerConnection. Does it mean that we
can close the PeerConnection? not, because we must check whether there
are other active peers yet (and there are in this case). So this
introduces complexity at JavaScript level. The question is: is this
complexity not so hard? can it be limited by some parameter when
creating a PeerConnection? I imagine soemthing like:

new PeerConnection( capabilities=[], allow_multiple_peers=false/true)
",<CALiegfmH7PDDrK60mWhwY=DhUDwvH-pZHdTXrpndWLE1PcGOcw@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 10:21:30
3914,RtcWEB,28,800,Social,,-1,"Hi,
",<7F2072F1E0DE894DA4B517B93C6A058522356F2414@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 11:01:39
3915,RtcWEB,28,802,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",739,739,"
I am not sure whether option 3) uses a single PeerConnection, but one alternative is that we use multiple PC objects, but they all share the local parameters and candidates.

Personally I think option 2) would be ok for most cases, and enough to support in ""phase 1"".

And, IF someone really wants to support parallel forking, there is always the possibility to create new PC objects, send offers associated with them etc.
",<7F2072F1E0DE894DA4B517B93C6A058522356F2414@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 11:01:39
3916,RtcWEB,28,870,"ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse",802,802,"
Maybe I'm wrong, but AFAIK the local candidates are generated when
creating a PeerConnection object. This is: you create a PC object and
internally it gets the candidates, so you cannot create a second PC
and use the same local candidates. Am I wrong?
",<CALiegfnuHs=xwzAE_qt37Xt1r8EKHP=O0JQw=biL0VqYY5CJ4Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 11:24:31
3917,RtcWEB,28,871,"InformationProviding,Agreement,Agreement",802,802,"
I also agree. Also, many SIP phones just render a single media stream
even when media parallel forking occurs, and switch to the definitive
SDP when the 200 arrives, so IMHO this is not a great limitation for
WebRTC.
",<CALiegfnuHs=xwzAE_qt37Xt1r8EKHP=O0JQw=biL0VqYY5CJ4Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 11:24:31
3918,RtcWEB,28,872,"Agreement,Agreement",802,802,"
Right.
",<CALiegfnuHs=xwzAE_qt37Xt1r8EKHP=O0JQw=biL0VqYY5CJ4Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 11:24:31
3919,RtcWEB,28,907,Social,,-1,"Hi,
",<7F2072F1E0DE894DA4B517B93C6A058522356F23DD@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 10:40:19
3920,RtcWEB,28,909,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",687,687,"
We could create new PeerConnections objects for every early dialog, but the idea was that the new object could use the same local parameter (IP address:port, candidates etc) as the ""parent"" object, so that one does not need to send a new offer.

However, for serial forking we would only need a single PeerConnection object, assuming we could switch the remote parameter.

So, again, I think we should first agree on WHAT we want, and then we can start thinking on HOW to get it.
",<7F2072F1E0DE894DA4B517B93C6A058522356F23DD@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 10:40:19
3921,RtcWEB,28,912,Social,,-1,"Harald,",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3922,RtcWEB,28,963,"ContextSetting,NeutralResponse",687,-1,"
As per F11 & F12 of draft-ietf-rtcweb-use-cases-and-requirements-06 ,",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3923,RtcWEB,28,964,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",963,-1,"
""F11             The browser MUST be able to transmit streams to
several peers concurrently.",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3924,RtcWEB,28,965,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",963,-1,"
F12             The browser MUST be able to receive streams from
multiple peers concurrently.""",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3925,RtcWEB,28,966,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social,ExtensionOfPrevious",965,-1,"
The above browser requirement makes me to guess that it is possible to support SIP parallel forking sort of services in case proper JS APIs are provided (May be current form of peerconnection does not). Please let me know your opinion on this.",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3926,RtcWEB,28,967,"Thanking,Thanking",,-1,"
Thanks
Partha",<387F9047F55E8C42850AD6B3A7A03C6CB8C4@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:21:08
3927,RtcWEB,28,996,"InformationProviding,Answer,ProposeAction,ExtensionOfPrevious",966,966,"
The above requirements don't say that a *single* PeerConnection MUST
be able to send and receive streams to/from several peers
concurrently. It just says that the *browser* MUST be able, and a way
to achieve that is by creating multiple concurrent PeerConnection
objects.
",<CALiegf=iV=d9b8TNRrv9dh-gUDMzFBdRbsaUhLHdrXBG55ieGg@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 13:25:52
3928,RtcWEB,28,999,Social,,-1,"Hi,",<7F2072F1E0DE894DA4B517B93C6A058522356F25B3@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 13:37:58
3929,RtcWEB,28,1053,"Answer,ProposeAction,NeutralResponse",966,-1,"
I would suggest that, instead of talking about a single PeerConnection, we talk about using the same local IP parameters and candicates for multiple remote endpoints. It could be a single PC, or it could be multiple ""cloned"" PCs.",<7F2072F1E0DE894DA4B517B93C6A058522356F25B3@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 13:37:58
3930,RtcWEB,28,1054,"ExtensionOfPrevious,ProposeAction,Social,ExtensionOfPrevious",1053,-1,"
Again, let's first decide whether we need it - then we can start thinking of how to get it :)",<7F2072F1E0DE894DA4B517B93C6A058522356F25B3@ESESSCMS0356.eemea.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2011-10-31 13:37:58
3931,RtcWEB,28,1057,Social,,-1,"Hi Christer,",<387F9047F55E8C42850AD6B3A7A03C6CB914@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:51:22
3932,RtcWEB,28,1131,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement",1053,-1,"
I agree with you. By reading ROAP draft, I got the feel that it is possible to connect to multiple peer from single local offer and also, it is possible to update multiple peers during each offer/answer exchange.  It is slightly upper version of SIP parallel forking wherein multiple dialogs are created in terms of SIP due to forking and update each dialogs using RE-INVITE for media change. I like this usecase as this infrastructure helps for building complex media services in browser.",<387F9047F55E8C42850AD6B3A7A03C6CB914@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:51:22
3933,RtcWEB,28,1132,"Thanking,Thanking",,-1,"
Thanks
Partha",<387F9047F55E8C42850AD6B3A7A03C6CB914@inba-mail01.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-10-31 12:51:22
3934,RtcWEB,28,1162,"InformationSeeking,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,Question",1053,1053,"
Hi Christer, as I replied you in other mail this needs to be clarified:

When are local candidates generated? when creating a new
PeerConnection object? or when creating a new ROAP Offer/Answer
object?

In the first case case you cannot reuse the same local candidates in a
new PeerConnection. In the second case you can do it (if we assume
that first we create a ROAP Offer, it creates local candidates and we
pass the ROAP object to a new PeerConnection) then it would be
possible just if the API allows that.
",<CALiegfkKTaej0xgDufNgfnHkULx9DPosvQXJ=bDiAcLhu6DK+g@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 15:03:15
3935,RtcWEB,28,1163,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1054,1054,"
Assuming the second case above I vote for the API to allow passing an
already used local candidates into a new PeerConnection so we cover
all the media forking cases.
",<CALiegfkKTaej0xgDufNgfnHkULx9DPosvQXJ=bDiAcLhu6DK+g@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 15:03:15
3936,RtcWEB,28,1178,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",670,670,"
[BA] We have an issue with the API spec if that it is possible for people to come to very different conclusions about whether this and other things
""should just work"".   BTW, this was *not* my reading of the spec -- it seems to me that there are inherent assumptions about the state machines,
ICE and other aspects that would restrict a PeerConnection to one offer/answer pair at a time.",<BLU152-W553C788B9E9AAF618DA7D393D60@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2011-10-31 05:57:59
3937,RtcWEB,28,1212,ContextSetting,,-1,"
[snipped example implementation scenario]
",<362C36E9-3C44-4CA1-9D87-58BD3356462D@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-10-31 17:10:56
3938,RtcWEB,28,1214,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",126,126,"
Right, as I said before, we don't actually have to implement ROAP forking in the browser, because the JS+Server code can be clever enough to do it, even to SIP.

The question is if we should implement it in the browser anyway, to make things work better for the scenarios where they do go to SIP.

We know that even an interworking-function can ""hide"" the forking, because they do that right now for SIP-H.323; but we also know that doing so is error-prone and causes media-clipping.

So if it's not too difficult/complicated to implement, handling it natively in the browser is likely to yield the best user experience.  And the nice thing is that if the browsers get it wrong, or the WebApp doesn't want to do it, the JS+Server can still fix it or make it not happen.
",<362C36E9-3C44-4CA1-9D87-58BD3356462D@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-10-31 17:10:56
3939,RtcWEB,28,1216,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",128,128,"
I hope you don't think I'm arguing for things for the purpose of selling WebRTC-SIP gateways.  I'm trying very hard to list all the things a WebRTC domain must do if it wants to *avoid* gateways.
[Not because my company doesn't plan on selling WebRTC-SIP gateways - but because people should use gateways/SBCs when they need to for security/control/etc., but not simply to interoperate.]

-hadriel",<362C36E9-3C44-4CA1-9D87-58BD3356462D@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-10-31 17:10:56
3940,RtcWEB,28,1265,"Agreement,ProposeAction,Agreement",1214,1214,"
I agree. In case it does not add a great complexity at API level it
would be great if we can reuse same local candidates in more than a
single PeerConnection.
",<CALiegfmehzfd2CmrmnvbqeF1-LA7XB5UDg+p2yxOJ+_9-M=b7Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 18:27:21
3941,RtcWEB,28,1267,"NeutralResponse,ProposeAction,NeutralResponse",1216,1216,"
Not at all, of course. You try to make WebRTC design open so any
developer can implement whatever he wants without being constrained to
specific and mandatory in-the-wire protocol or message format.
",<CALiegfmehzfd2CmrmnvbqeF1-LA7XB5UDg+p2yxOJ+_9-M=b7Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 18:27:21
3942,RtcWEB,28,1268,"InformationProviding,Agreement,Social,NeutralResponse",1216,1216,"
Yes, it's clear in the draft ;)
",<CALiegfmehzfd2CmrmnvbqeF1-LA7XB5UDg+p2yxOJ+_9-M=b7Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 18:27:21
3943,RtcWEB,28,1269,"Agreement,Agreement",1216,1216,"
Agreed.
",<CALiegfmehzfd2CmrmnvbqeF1-LA7XB5UDg+p2yxOJ+_9-M=b7Q@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2011-10-31 18:27:21
3944,RtcWEB,29,10,"InformationProviding,ExtensionOfPrevious,ContextSetting",57,-1,Date:       March 2015,<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3945,RtcWEB,29,56,"InformationProviding,InformationProviding,ContextSetting",,-1,"A new Request for Comments is now available in online RFC libraries.
",<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3946,RtcWEB,29,57,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",56,-1,"
RFC 7478

Title:      Web Real-Time Communication Use Cases
and Requirements
Author:     C. Holmberg, S. Hakansson, G. Eriksson
Status:     Informational
Stream:     IETF",<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3947,RtcWEB,29,58,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",10,-1,"Mailbox:    christer.holmberg@ericsson.com,
stefan.lk.hakansson@ericsson.com,
goran.ap.eriksson@ericsson.com
Pages:      28
Characters: 64824
Updates/Obsoletes/SeeAlso:   None

I-D Tag:    draft-ietf-rtcweb-use-cases-and-requirements-16.txt

URL:        https://www.rfc-editor.org/info/rfc7478

This document describes web-based real-time communication use cases.
Requirements on the browser functionality are derived from the use
cases.

This document was developed in an initial phase of the work with
rather minor updates at later stages.  It has not really served as a
tool in deciding features or scope for the WG's efforts so far.  It
is being published to record the early conclusions of the WG.  It
will not be used as a set of rigid guidelines that specifications and
implementations will be held to in the future.

This document is a product of the Real-Time Communication in WEB-browsers Working Group of the IETF.
",<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3948,RtcWEB,29,59,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",58,-1,"
INFORMATIONAL: This memo provides information for the Internet community.
It does not specify an Internet standard of any kind. Distribution of
this memo is unlimited.

This announcement is sent to the IETF-Announce and rfc-dist lists.
To subscribe or unsubscribe, see
https://www.ietf.org/mailman/listinfo/ietf-announce
https://mailman.rfc-editor.org/mailman/listinfo/rfc-dist

For searching the RFC series, see https://www.rfc-editor.org/search
For downloading RFCs, see https://www.rfc-editor.org/rfc.html

Requests for special distribution should be addressed to either the
author of the RFC in question, or to rfc-editor@rfc-editor.org.  Unless
specifically noted otherwise on the RFC itself, all RFCs are for
unlimited distribution.
",<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3949,RtcWEB,29,60,ExtensionOfPrevious,,-1,"
The RFC Editor Team
Association Management Solutions, LLC",<20150313201117.08851180205@rfc-editor.org>,rfc-editor@rfc-editor.org,0.0,0,0,2015-03-13 13:11:17
3950,RtcWEB,30,45,"InformationProviding,ContextSetting,InformationProviding",,-1,"Review instructions and related resources are at:
http://tools.ietf.org/area/sec/trac/wiki/SecDirReview",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3951,RtcWEB,30,46,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",45,-1,"
Hilarie Orman is next in the rotation.",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3952,RtcWEB,30,47,"ContextSetting,ExtensionOfPrevious",,-1,"
For telechat 2014-04-24",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3953,RtcWEB,30,48,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",,-1,"
Reviewer                 LC end     Draft
Dan Harkins            T 2014-04-08 draft-ietf-idr-aigp-17",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3954,RtcWEB,30,49,"ContextSetting,ExtensionOfPrevious",,-1,"
For telechat 2014-05-15",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3955,RtcWEB,30,50,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",49,-1,"
Phillip Hallam-Baker   T 2014-04-01 draft-ietf-trill-esadi-07
Jeffrey Hutzelman      T 2014-04-09 draft-ietf-mpls-psc-updates-05",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3956,RtcWEB,30,51,"ContextSetting,ExtensionOfPrevious",,-1,"
For telechat 2014-05-29",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3957,RtcWEB,30,52,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",51,-1,"
Magnus Nystrom         T 2014-05-16 draft-pal-eidr-urn-01",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3958,RtcWEB,30,53,"ContextSetting,ExtensionOfPrevious",,-1,"
Last calls and special requests:",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3959,RtcWEB,30,54,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",53,-1,"
Tobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07
Sam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11
Jeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-06
Leif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11",<21336.51335.189902.521625@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-04-24 11:17:11
3960,RtcWEB,31,45,"InformationProviding,ContextSetting,ProposeAction,InformationProviding",,-1,"Lots of people have documents to be reviewed for next weeks telechat
(including me). Lets try to get those reviews done as soon as
possible...",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3961,RtcWEB,31,46,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",45,-1,"
Review instructions and related resources are at:
http://tools.ietf.org/area/sec/trac/wiki/SecDirReview",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3962,RtcWEB,31,47,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",46,-1,"
Zach Shelby is next in the rotation.",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3963,RtcWEB,31,48,"ContextSetting,ExtensionOfPrevious",,-1,"
For telechat 2014-05-15",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3964,RtcWEB,31,49,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",48,-1,"
Reviewer                 LC end     Draft
Leif Johansson         T 2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-12
Stephen Kent           TR2014-04-24 draft-ietf-l2vpn-vpls-inter-domain-redundancy-06
Tero Kivinen           T 2014-04-28 draft-ietf-bfd-mib-19
Ben Laurie             T 2014-04-25 draft-ietf-rtcweb-use-cases-and-requirements-14
Matt Lepinski          T 2014-04-25 draft-ietf-salud-alert-info-urns-12
Alexey Melnikov        T 2014-05-07 draft-ietf-appsawg-uri-get-off-my-lawn-04
Russ Mundy             T 2014-05-06 draft-ietf-mpls-extended-admin-group-06
Sandy Murphy           T 2014-05-02 draft-ietf-ipsecme-esp-ah-reqts-07
Eric Osterweil         T 2014-05-12 draft-ietf-ippm-2330-update-04
Vincent Roca           T 2014-04-09 draft-ietf-mpls-psc-updates-05",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3965,RtcWEB,31,50,"ContextSetting,ExtensionOfPrevious",,-1,"
For telechat 2014-05-29",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3966,RtcWEB,31,51,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",50,-1,"
Magnus Nystrom         T 2014-05-16 draft-pal-eidr-urn-01",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3967,RtcWEB,31,52,"ContextSetting,ExtensionOfPrevious",,-1,"
Last calls and special requests:",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3968,RtcWEB,31,53,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",52,-1,"
Tobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07
Sam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11
Jeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-06
Julien Laganier        E 2013-11-21 draft-ietf-websec-key-pinning-12
Julien Laganier          2014-04-29 draft-ietf-dhc-dhcpv4-over-dhcpv6-07
Russ Mundy               2014-03-24 draft-mahalingam-dutt-dcops-vxlan-09
Sandy Murphy             2013-12-17 draft-ietf-netmod-iana-timezones-03
Hilarie Orman            2014-05-14 draft-ietf-cuss-sip-uui-isdn-08
Radia Perlman            2014-05-12 draft-ietf-mpls-ldp-ip-pw-capability-07
Vincent Roca             2014-02-25 draft-ietf-sidr-policy-qualifiers-01
Joe Salowey              2014-05-29 draft-moonesamy-sshfp-ed25519-01
Yaron Sheffer            2014-05-21 draft-ietf-mpls-ldp-hello-crypto-auth-05
Brian Weis             E 2014-01-16 draft-ietf-radext-dynamic-discovery-11
kivinen@iki.fi",<21355.20241.875759.443267@fireball.kivinen.iki.fi>,kivinen@iki.fi,0.0,0,3,2014-05-08 12:32:01
3969,RtcWEB,31,66,"InformationProviding,Thanking,NeutralResponse,Thanking",45,45,"
And thanks in advance to those of you who do get them done,
it really does help.
",<536BB915.6090708@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2014-05-08 18:04:21
3970,RtcWEB,32,31,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3971,RtcWEB,32,32,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",31,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-09.txt
Pages           : 28
Date            : 2012-06-27",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3972,RtcWEB,32,33,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",32,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream and data exchange services provided
by the browser.",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3973,RtcWEB,32,34,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",31,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3974,RtcWEB,32,35,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",34,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-09",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3975,RtcWEB,32,36,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",35,-1,"
A diff from previous version is available at:
http://tools.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-09",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3976,RtcWEB,32,37,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20120627123325.12103.88728.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-06-27 05:33:25
3977,RtcWEB,33,0,"InformationProviding,InformationProviding,ContextSetting",,-1,#1: RFC 4734 citation,<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3978,RtcWEB,33,32,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",0,-1,"
Section 3 states:",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3979,RtcWEB,33,33,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",32,-1,"
WebRTC clients are REQUIRED to implement the following audio codecs.",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3980,RtcWEB,33,34,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
o  Opus [RFC6716], with any ptime value up to 120 ms",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3981,RtcWEB,33,35,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
o  G.711 PCMA and PCMU with one channel, a rate of 8000 Hz and a
ptime of 20 - see section 4.5.14 of [RFC3551]",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3982,RtcWEB,33,36,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
o  Telephone Event - [RFC4734]",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3983,RtcWEB,33,37,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",0,-1,"
[BA] I believe the citation should be to ""RTP Payload for DTMF Digits,
Telephony Tones, and Telephony Signals"" [RFC4733], not to ""Definition of
Events for Modem, Fax, and Text Telephony Signals"" [RFC4734].",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3984,RtcWEB,33,38,"ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social",37,-1,"
If the desire is in fact to mandate support for RFC 4734, please explain
why it is necessary for browsers to include support for digital encoding
of modem and fax signals.",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3985,RtcWEB,33,39,"ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
Reporter:  bernard_aboba@…     |      Owner:  jmvalin@…
Type:  defect              |     Status:  new
Priority:  critical            |  Milestone:  milestone1
Component:  audio               |    Version:  1.0
Severity:  Active WG Document  |   Keywords:",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3986,RtcWEB,33,40,"ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
Ticket URL: <http://trac.tools.ietf.org/wg/rtcweb/trac/ticket/1>
rtcweb <http://tools.ietf.org/rtcweb/>",<066.ee8d274029b0215df9ff464ea44b5fe7@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-22 22:36:14
3987,RtcWEB,33,71,"NeutralResponse,NeutralResponse",38,38,"
I'm certain the intent was RFC 4733.
",<50869D99.50602@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-10-23 09:37:29
3988,RtcWEB,33,86,"Question,InformationSeeking,Question,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction",36,36,"
Could somebody give some points about why DTMFs over media are
required in WWW? Isn't DTMF mechanism OLD enough to incorporate it
into WebRTC?

Autoanswer: interoperability with legacy telephony world.
",<CALiegfkSohug3__vra9R=1vMfSX46_tDvFOuJOsxjUFE54eXYQ@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2012-10-30 14:06:33
3989,RtcWEB,33,103,"Answer,InformationProviding,Answer,ProposeAction",86,86,"
The issue is that because the DTMF is on the RTP media stream (and not the signaling channel) then for any interworking with legacy telephony equipment, radio systems, or other things that use DTMF it is necessary for the sending browser to do the insertion of DTMF.
",<AE1A6B5FD507DC4FB3C5166F3A05A484160FCE69@tk5ex14mbxc272.redmond.corp.microsoft.com>,matthew.kaufman@skype.net,0.0,0,4,2012-10-30 13:19:29
3990,RtcWEB,33,134,"NeutralResponse,ContextSetting,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",86,86,"Autoanswer (and you should know this by heart now, it's been said so
many times):

Use case 4.3.2 from draft-ietf-rtcweb-use-cases-and-requirements-09:

4.3.2.  Fedex Call

4.3.2.1.  Description

Alice uses her web browser with a service something like Skype to be
able to phone PSTN numbers.  Alice calls 1-800-gofedex.  Alice should
be able to hear the initial prompts from the fedex IVR and when the
IVR says press 1, there should be a way for Alice to navigate the
IVR.

If you want to argue for having that use case deleted from the
requirements, start a debate on that topic. If you have an alternative
solution, state that in the positive as what should go into the -audio-
draft instead of RFC 4734.",<50914270.9020907@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-10-31 16:23:28
3991,RtcWEB,33,188,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Social",134,134,"
Well, as we all assume that media gateways are requried for
interoperability with other VoIP networks, I assume it would be not so hard
that the gateway receives the ""DTMF's"" via WWW means (HTTP, WebSocket...)
and generates RTP DTMF's in the legacy leg.

Anyhow I expect that it's not so hard to implement RTP DTMF's in a media
stack, but I would not like to hear about ""my PBX's does not detect
Chrome's DTMF's"". :)
",<CALiegfmX_F5HgNoZ107ru9UjAF1JbUy2mNc-Gv5v7v6YJt=tWQ@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2012-10-31 18:12:43
3992,RtcWEB,33,212,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting",188,188,"
We had an extensive discussion few months back on why RFC 4733 tones are
required. The main reason is time synchronization of audio and DTMF. If you
have an application which does something like ""record your name and press
pound"", and DTMF is delivered over a separate path, you end up with name
either truncated or padded with silence. In any case, I believe, there was
a group consensus that RFC 4733 DTMF tones will be supported.",<CAD5OKxvetats9segKq9vyfWYMar3i4qn6Eu=H-_UeB4kGudFew@mail.gmail.com>,roman@telurix.com,0.0,0,5,2012-10-31 13:41:46
3993,RtcWEB,33,233,"NeutralResponse,InformationProviding,Agreement",,-1,"Right. But somehow RFC 4734 was cited instead.
",<BLU404-EAS228C319892A84D1B3C4E9BE93610@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-10-31 10:48:43
3994,RtcWEB,33,267,"NeutralResponse,InformationProviding,ProposeAction",37,-1,"RFC 4734 relates to modem and fax events, not DTMF. citation should have been to 4733.
",<BLU404-EAS2955CB697C62926832898FD93610@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-10-31 10:20:46
3995,RtcWEB,33,289,ContextSetting,,-1,"
Comment (by fluffy@…):",<081.61527caf7d7dffe6b85335dd1594219d@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-30 13:54:07
3996,RtcWEB,33,290,"InformationProviding,InformationProviding,ExtensionOfPrevious",289,-1,"
This is a bug on draft-ietf-rtcweb-audio-00.txt",<081.61527caf7d7dffe6b85335dd1594219d@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-30 13:54:07
3997,RtcWEB,33,291,ExtensionOfPrevious,,-1,"
Reporter:  bernard_aboba@…     |       Owner:  jmvalin@…
Type:  defect              |      Status:  new
Priority:  critical            |   Milestone:  milestone1
Component:  audio               |     Version:  1.0
Severity:  Active WG Document  |  Resolution:
Keywords:                      |",<081.61527caf7d7dffe6b85335dd1594219d@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-30 13:54:07
3998,RtcWEB,33,292,ExtensionOfPrevious,,-1,"
Ticket URL: <http://trac.tools.ietf.org/wg/rtcweb/trac/ticket/1#comment:1>
rtcweb <http://tools.ietf.org/rtcweb/>",<081.61527caf7d7dffe6b85335dd1594219d@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2012-10-30 13:54:07
3999,RtcWEB,33,314,"InformationProviding,InformationProviding,ContextSetting",,-1,"
Changes (by bernard_aboba@hotmail.com):",<081.f9d3d894aeab3daff9cc8ae4feb3b600@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2013-02-16 21:31:03
4000,RtcWEB,33,315,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",314,-1,"
* status:  new => closed
* resolution:   => fixed",<081.f9d3d894aeab3daff9cc8ae4feb3b600@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2013-02-16 21:31:03
4001,RtcWEB,33,316,ExtensionOfPrevious,,-1,"
Reporter:  bernard_aboba@hotmail.com  |       Owner:  jmvalin@jmvalin.ca
Type:  defect                     |      Status:  closed
Priority:  critical                   |   Milestone:  milestone1
Component:  audio                      |     Version:  1.0
Severity:  Active WG Document         |  Resolution:  fixed
Keywords:                             |",<081.f9d3d894aeab3daff9cc8ae4feb3b600@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2013-02-16 21:31:03
4002,RtcWEB,33,317,ExtensionOfPrevious,,-1,"
Ticket URL: <http://trac.tools.ietf.org/wg/rtcweb/trac/ticket/1#comment:2>
rtcweb <http://tools.ietf.org/rtcweb/>",<081.f9d3d894aeab3daff9cc8ae4feb3b600@trac.tools.ietf.org>,trac+rtcweb@trac.tools.ietf.org,0.0,,,2013-02-16 21:31:03
4003,RtcWEB,34,153,"ContextSetting,Social",,-1,"Hi Partha,

Inline
",<913383AAA69FF945B8F946018B75898A2428FC2B@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2014-01-23 05:35:21
4004,RtcWEB,34,154,"InformationProviding,Agreement,ContextSetting",,-1,"> -----Original Message-----
> From: Parthasarathi R [mailto:partha@parthasarathi.co.in]
> Sent: Thursday, January 23, 2014 5:03 AM
> To: Tirumaleswar Reddy (tireddy); 'Magnus Westerlund'; 'Chenxin (Xin)';
> 'Hutton, Andrew'; 'Christer Holmberg'; rtcweb@ietf.org
> Subject: RE: [rtcweb] Query/Comment on draft-ietf-rtcweb-use-cases-and-
> requirements-12
> Hi Thiru,
> I agree with you that PCP is yet another alternative. It is not clear to me from
> your mail whether you are fine with the word ""TURN"" in the requirement
> draft to refer PCP as a solution in the later stage.
> It is confusing to me when I'm discussing about WebRTC FW proposal to
> others as they assume that it is ""TURN"" as per requirement draft.",<913383AAA69FF945B8F946018B75898A2428FC2B@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2014-01-23 05:35:21
4005,RtcWEB,34,155,"InformationProviding,NeutralResponse,ContextSetting",154,-1,"
I don't see any specific mention in the requirements section that TURN is the only way to solve the WebRTC FW traversal problem.

-Tiru.
",<913383AAA69FF945B8F946018B75898A2428FC2B@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2014-01-23 05:35:21
4006,RtcWEB,35,53,"Question,InformationProviding,ContextSetting,ProposeAction,InformationProviding",,-1,"I've taken a look at the unresolved normative references in all of the current RTCWEB WG work items.  Here are some comments.
Overall comment
Several of the documents (draft-ietf-rtcweb-rtp-usage, draft-ietf-rtcweb-security) have a normative reference to draft-ietf-rtcweb-overview, while others do not (draft-ietf-rtcweb-audio, draft-ietf-rtcweb-data-channel, draft-ietf-rtcweb-data-protocol, draft-ietf-rtcweb-security-arch).  While it probably makes sense for some documents to reference an overview of WebRTC, the overview document also functions as an overview of work relating to WebRTC, so that it has 9 unresolved normative dependencies.  The effect of a normative reference to the overview document is therefore to delay publication until all of the overview normative dependencies are resolved.  I am therefore wondering whether the normative references to the overview document are really necessary, or whether the dependencies shouldn't just go one way (e.g. from the overview to the other docs).
draft-ietf-rtcweb-data-channel
Two unresolved normative references in this document are to individual submissions:  [I-D.stewart-tsvwg-sctp-ndata], [I-D.jesup-rtcweb-data-protocol] (now an RTCWEB WG work item).   The reference to  [I-D.tuexen-tsvwg-sctp-prpolicies] is informative, even though the document refers to it as a MUST implement in Section 6.1.  Was there any progress at IETF 87 on getting the individual submissions adopted as WG work items?
draft-ietf-rtcweb-audio
The normative reference to    [I-D.ekr-security-considerations-for-rtc-web] appears to refer to a 2011 individual submission, rather than the RTCWEB WG Security Considerations document.  The reference is in Section 8, Security Considerations, which states:
The codec requirements have no additional security considerations
other than those captured in
[I-D.ekr-security-considerations-for-rtc-web].
Looking at draft-ietf-rtcweb-security I don't see much in the way of security considerations relating to codecs.  This leads me to wonder whether this reference shouldn't be non-normative, or even whether it could be removed.
draft-ietf-rtcweb-rtp-usage
This document has a normative reference to  [I-D.westerlund-avtcore-transport-multiplexing].  Since that document hasn't been accepted as a WG work item (and Section 4.4 indicates that there is no consensus to use a shim-based approach), I am wondering if that reference should instead be non-normative (or be removed entirely).  Here is what the text in Section 4.4 says:
It is also possible to use a shim-based approach to run multiple RTP
sessions on a single transport-layer flow.  This gives advantages in
some gateway scenarios, and makes it easy to distinguish groups of
RTP media streams that might need distinct processing.  One way of
doing this is described in
[I-D.westerlund-avtcore-transport-multiplexing].  At the time of this
writing, there is no consensus to use a shim-based approach in WebRTC
implementations.
There is also a normative reference to [I-D.ietf-mmusic-sdp-bundle-negotiation].  Since signaling is out-of-scope of WebRTC, I wonder whether this normative reference, which comes from Section 4.4, is appropriate.  Here is what the text says:
If such RTP session set-up is to be used, this MUST be negotiated during
the signalling phase [I-D.ietf-mmusic-sdp-bundle-negotiation].",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4007,RtcWEB,35,54,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",53,-1,"
draft-ietf-rtcweb-security-arch
This document has a normative reference to [I-D.muthu-behave-consent-freshness], which as I understand it is not going to be a BEHAVE WG work item.  Does it make sense to pull text from the consent-freshness document into another RTCWEB WG work item?
draft-ietf-rtcweb-overview
This document has 9 unresolved normative dependencies.  Of these, [I-D.nandakumar-rtcweb-stun-uri] and [I-D.tuexen-tsvwg-sctp-dtls-encaps] are to individual submissions.   The latter is now a WG work item (draft-ietf-tsvwg-sctp-dtls-encaps).  As I recall, at IETF 87 we discussed getting AD sponsorship for the stun-uri document, right?
draft-ietf-rtcweb-qos
This document has one unresolved normative reference, to draft-ietf-mmusic-traffic-class-for-sdp.  That document has no unresolved normative dependencies.",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4008,RtcWEB,35,55,"InformationProviding,ExtensionOfPrevious,ContextSetting,Social,ExtensionOfPrevious",53,-1,"
draft-ietf-rtcweb-use-cases-and-requirements
This document has no unresolved normative references.   Yeah!",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4009,RtcWEB,35,56,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",53,-1,"
draft-ietf-rtcweb-jsep",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4010,RtcWEB,35,57,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",56,-1,"
This document has 4 unresolved normative dependencies: [I-D.alvestrand-mmusic-msid] (now draft-ietf-mmusic-msid), [I-D.holmberg-mmusic-sdp-bundle-negotiation] (now draft-ietf-mmusic-sdp-bundle), [I-D.jennings-rtcweb-signaling] and [I-D.nandakumar-rtcweb-sdp].   It is also referenced by several documents.  Are all these references necessary?",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4011,RtcWEB,35,58,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",53,-1,"
draft-ietf-rtcweb-data-protocol",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4012,RtcWEB,35,59,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",58,-1,"
This document has two unresolved normative references, but both appear appropriate.",<BLU169-W11426A149ADD0123A6BEF4C93460@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-15 14:03:53
4013,RtcWEB,35,61,"InformationProviding,ContextSetting,NeutralResponse",54,-1,"On I-D.muthu-behave-consent-freshness, we are currently discussing with the related chairs to find a home for it..",<E721D8C6A2E1544DB2DEBC313AF54DE224207685@xmb-rcd-x02.cisco.com>,mperumal@cisco.com,0.0,0,2,2013-08-16 02:07:20
4014,RtcWEB,35,237,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",53,53,"In my opinion, the normal case should be that references to -overview
are informative, not normative. Documents should be published when
they're ready.

Most likely, the proper form is something like ""This document specifies
a protocol intended for use within the WebRTC effort, but is not
restricted to that context. An overview of the WebRTC effort is given in
[OVERVIEW]"".

Or something like that.",<521095EB.7070500@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-08-18 11:37:47
4015,RtcWEB,35,301,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",237,-1,"
[BA]  Looking over the both RTP usage and security documents, it seems
reasonable to convert the normative references to informative in both cases",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4016,RtcWEB,35,302,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",301,-1,"
Looking at the RTP usage document, there is no normative language that
points to -overview and in fact -overview is only mentioned twice:",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4017,RtcWEB,35,303,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",302,-1,"
Section 1",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4018,RtcWEB,35,304,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",303,-1,"
The WebRTC overview [I-D.ietf-rtcweb-overview
<http://tools.ietf.org/html/draft-ietf-rtcweb-rtp-usage-07#ref-I-D.ietf-rtcw
eb-overview> ] outlines the complete
WebRTC framework, of which this memo is a part.",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4019,RtcWEB,35,305,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",304,-1,"
[BA] While -overview does reference RTP usage, and the RTP usage document is
certainly an important part of WebRTC, I don't think this implies a
normative reference to -overview.  After all, almost everything in the RTP
usage document can (and probably has been) implemented outside of WebRTC.",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4020,RtcWEB,35,306,"ContextSetting,ExtensionOfPrevious",302,-1,"
Section 3",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4021,RtcWEB,35,307,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",306,-1,"
Other terms are used according to their definitions from the RTP
Specification [RFC3550 <http://tools.ietf.org/html/rfc3550> ] and WebRTC
overview
[I-D.ietf-rtcweb-overview
<http://tools.ietf.org/html/draft-ietf-rtcweb-rtp-usage-07#ref-I-D.ietf-rtcw
eb-overview> ] documents.",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4022,RtcWEB,35,308,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",307,-1,"
[BA] This sentence doesn't point to specific terms defined in Section 2.4 of
-overview that are needed for understanding the RTP usage document, but if
there are some, those could be added to the RTP usage document, rather than
requiring a normative reference.",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4023,RtcWEB,35,309,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",301,-1,"
The security document only has a single reference to -overview:",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4024,RtcWEB,35,310,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",309,-1,"
Section 1",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4025,RtcWEB,35,311,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",310,-1,"
The Real-Time Communications on the Web (RTCWEB) working group is
tasked with standardizing protocols for real-time communications
between Web browsers, generally called ""WebRTC""",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4026,RtcWEB,35,312,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",311,-1,"
[I-D.ietf-rtcweb-overview
<http://tools.ietf.org/html/draft-ietf-rtcweb-security-05#ref-I-D.ietf-rtcwe
b-overview> ].",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4027,RtcWEB,35,313,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",311,-1,"
[BA] Since the security documents has its own introductory material, and
doesn't reference terminology or other aspects of -overview other than the
above, an informative reference seems like it should be fine.",<BLU405-EAS78D22C3CB8963FB18951F293410@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-08-18 14:58:53
4028,RtcWEB,35,333,"Agreement,Agreement",237,237,"
+1",<C5E08FE080ACFD4DAE31E4BDBF944EB1149202DF@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-08-22 18:22:03
4029,RtcWEB,35,348,"Answer,NeutralResponse,ProposeAction,StateDecision,Thanking,NeutralResponse,Thanking",57,57,"
Thanks for reviewing this. I'll work with Justin to sort this out in next version. I suspect they all need to point at the correct document and that the jennings-rtcweb-signaling can be removed.",<C5E08FE080ACFD4DAE31E4BDBF944EB1149203A1@xmb-aln-x02.cisco.com>,fluffy@cisco.com,0.0,0,0,2013-08-22 18:31:45
4030,RtcWEB,36,0,"InformationProviding,ContextSetting",,-1,I finally had a chance to read over,<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4031,RtcWEB,36,121,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",,-1,"
http://tools.ietf.org/html/draft-ietf-rmcat-cc-requirements-01",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4032,RtcWEB,36,122,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",0,-1,"
and also work at reproducing some of the difficulties present in the
current implementation of chrome in light of the two papers presented
at the last ietf on google congestion control. I went through tons of
tests and packet captures that pretty much reproduced the legion of
problems documented in",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4033,RtcWEB,36,123,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",122,-1,"
https://speakerdeck.com/vr000m/evaluating-googles-congestion-control-for-webrtc
and the other paper presented at ietf...",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4034,RtcWEB,36,124,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",122,-1,"
and also fed webrtc traffic through the fq_codel and pie queue
management systems (with pretty good results). I have tons of captures
from each experiment if anyone wants them.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4035,RtcWEB,36,125,"ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,Apologising",0,-1,"
So, I have some comments on this requirements document. (I'm new to
paying attention on rmcat, so a few of my questions are probably
answered by some document I haven't read yet. Steers appreciated. for
all I know I'm on the wrong mailing lists too. Sorry)",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4036,RtcWEB,36,126,"ExtensionOfPrevious,InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",125,-1,"
In particular, the flows I was looking at multiplexed voice and video
on the same 5 tuple. I am curious as to the justification for this, as
voice (without silence suppression) is isochronous and video is not.
(is silence suppression used in webrtc?)",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4037,RtcWEB,36,127,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",126,-1,"
To me, multiplexing these two very different flows on the same ports
is not a good idea except under extreme port pressure, and not useful
in ipv6 or in non-natted environments at all. Even in a natted
environment, saving a single port is a false savings as (for example)
dns lookups punch dozens of holes through nat on a regular basis.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4038,RtcWEB,36,128,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",127,-1,"
Requiring that in most or all cases these two flow types be on unique
5 tuples would give smarter queue management techniques on routers
(like sfq, or sqf (deployed at FT), or fq_codel (deployed at
free.fr)), a fighting chance. In particular it gives voice much higher
probability for drop-and-delay free behavior, and analyzing the delta
in drops and delay between a separate voice tuple and video tuple
could provide insight as to the congestion in the system.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4039,RtcWEB,36,129,"Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",128,-1,"
In current implementations, is it possible to force flows onto
different tuples? What are the other flaws in suggesting or requiring
a different tuple?",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4040,RtcWEB,36,130,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",129,-1,"
(note I'm not suggesting bulk data traffic get unique 5 tuples per flow)",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4041,RtcWEB,36,131,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",125,-1,"
Some comments on section 3",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4042,RtcWEB,36,132,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
A.  If possible, it should also share information and adaptation
with other non-RTP flows between the same endpoints, such as
a WebRTC data channel",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4043,RtcWEB,36,133,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",132,-1,"
I might argue that looking at the traffic on the whole browser would
be good. The browser deprioritizing background web page loads while a
webrtc session is active would be useful in the presence of
congestion.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4044,RtcWEB,36,134,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
B.  The most correlated bandwidth usage would be with other
flows on the same 5-tuple, but there may be use in
coordinating measurement and control of the local link(s).",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4045,RtcWEB,36,135,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",134,-1,"
As I note above you can get more congestion information from a pair of
flows than one.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4046,RtcWEB,36,136,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
C.  Use of information about previous flows, especially on the
same 5-tuple, may be useful input to the algorithm,
especially to startup performance of a new flow.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4047,RtcWEB,36,137,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",136,-1,"
A 4 tuple may also provide insight, or even two (ip to ip)",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4048,RtcWEB,36,138,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
4B.  When additional input signals such as ECN are available,
they should be utilized if possible.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4049,RtcWEB,36,139,"Question,ExtensionOfPrevious,InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",138,-1,"
I would not mind seeing an implementation that negotiated ECN, but it
is out of scope on this document. Is it discussed elsewhere, or
implemented elsewhere? Is an ipv6 version of webrtc implemented
anywhere? I am under the impression it can be made to work in
freeswitch...",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4050,RtcWEB,36,140,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
6.   Flows managed by this algorithm and flows competed against at a
bottleneck may have different DSCP markings depending on the
type of traffic.  A particular bottleneck or section of the
network path may or may not honor these markings.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4051,RtcWEB,36,141,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",140,-1,"
And in fact, may not preserve them. It would be good to be aware
if they are being preserved in both directions and mark appropriately,
and also to probe if packets with particular classifications are being
dropped
or treated weirdly. This includes detecting for e2e ECN awareness.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4052,RtcWEB,36,142,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
A.  In WebRTC, a division of packets into 4 classes is
envisioned in order of priority: faster-than-audio, audio,
video, best-effort, and bulk-transfer.  Typically the flows
managed by this algorithm would be audio or video in that
heirarchy, and feedback flows would be faster-than-audio.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4053,RtcWEB,36,143,"Question,InformationSeeking,Question,ClarificationElicitation,ExtensionOfPrevious,ProposeAction",142,-1,"
faster-than-audio? RTCP Signalling? what?",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4054,RtcWEB,36,144,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",143,-1,"
I still have to think about RTCP signalling as it's very hard to pick
out of the data I have, if it's even in there.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4055,RtcWEB,36,145,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",131,-1,"
10.  The algorithm should quickly adapt to initial network conditions
at the start of a flow.  This should occur both if the initial
bandwidth is above or below the bottleneck bandwidth.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4056,RtcWEB,36,146,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",145,-1,"
The algorithm I looked over has particularly bad behavior on taking
back bandwidth after it has been used up by another flow, taking many
seconds to ramp up. I like the idea of periodically probing to ratchet
up to a higher rate, with a slow-start-like burst (a higher resolution
frame sent in parallel with lower rate data).  But in terms of the
requirements, adding a",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4057,RtcWEB,36,147,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",146,-1,"
The algorithm should quickly recover from a loss in bandwidth,
recovering voice first, if possible.",<CAA93jw7FDddn2n23fm=rdUsDyGakNfyLkJDgNjoC43fSc4GnSA@mail.gmail.com>,dave.taht@gmail.com,0.0,0,5,2013-12-29 16:02:08
4058,RtcWEB,36,282,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",128,128,"
that's why we want to couple the congestion controllers in such cases. no need for queuing to regulate fairness, you do it in the sender!
",<F3C1E5A6-CB9A-4343-9CD1-F9714338A6DC@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2013-12-30 17:59:52
4059,RtcWEB,36,301,"Answer,InformationProviding,Answer,ContextSetting,ProposeAction",129,129,"
There are quite a few ways to achieve this, depending on your
configuration.  All will require some fair amount of SDP cracking.

If you have browsers at both ends, try creating two RTCPeerConnection
objects on each, and treat one pair as audio and the other video.  You
can do this by telling the answerer that audio (or video) is not
wanted in the offer (set port zero for the unwanted component).
offer.sdp.replace(/m=audio \d+ /, 'm=audio 0 ') should be done before
sending the offer out (I don't know whether you can pass this to
setLocalDescription safely, so I wouldn't).",<CABkgnnUR1ARiMRTKwieQmNz3qg=RiagF=zdo6LYf02pQaz+7nQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-12-31 17:47:27
4060,RtcWEB,36,325,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",301,301,"
I think it would be simpler to pass OfferToReceiveAudio=false to
createOffer on one and OfferToReceiveVideo=false to createOffer on the
other.

If that's a good idea. (I pursued this thread in rmcat)",<52C3B57C.9070808@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2014-01-01 07:28:12
4061,RtcWEB,37,32,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4062,RtcWEB,37,33,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",32,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Authors         : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-14.txt
Pages           : 31
Date            : 2014-02-12",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4063,RtcWEB,37,34,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",33,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Requirements on the browser functionality are derived from the use-
cases.",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4064,RtcWEB,37,35,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",32,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4065,RtcWEB,37,36,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",35,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-14",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4066,RtcWEB,37,37,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",36,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-14",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4067,RtcWEB,37,38,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",37,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4068,RtcWEB,37,39,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",37,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20140212173007.1383.99485.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-02-12 09:30:07
4069,RtcWEB,37,41,"InformationProviding,ContextSetting",32,-1,New for this version:,<1447FA0C20ED5147A1AA0EF02890A64B1CF5699E@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-12 17:33:48
4070,RtcWEB,37,95,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",41,-1,"
* The requirements are spelled out as they are derived in each use-case
* The requirements are put in categories
* Updated the note about that other mechanisms than ICE/STUN/TURN are allowed for nat/fw traversal",<1447FA0C20ED5147A1AA0EF02890A64B1CF5699E@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-12 17:33:48
4071,RtcWEB,37,96,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",95,-1,"
I'm not sure if there is anything more that needs to be fixed.",<1447FA0C20ED5147A1AA0EF02890A64B1CF5699E@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-12 17:33:48
4072,RtcWEB,37,126,"NeutralResponse,Thanking,InformationProviding,ContextSetting,StateDecision,Social,Thanking",96,96,"Thanks, I think especially the first is helping readability significant.

I intended to publication request this next week (On the 20th of Feb)
unless a consensus appear to emerge around the change Partha requested
or some significant issue is raised.

Cheers

Magnus Westerlund

Services, Media and Network features, Ericsson Research EAB/TXM
Ericsson AB                 | Phone  +46 10 7148287
Färögatan 6                 | Mobile +46 73 0949079
SE-164 80 Stockholm, Sweden | mailto: magnus.westerlund@ericsson.com",<52FC8660.3030901@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-02-13 09:46:24
4073,RtcWEB,38,51,"InformationProviding,ExtensionOfPrevious,ProposeAction",62,-1,>From a W3C perspective it could also make sense to add a recording use case (as it seems that other W3C WGs rely on webrtc to provide an API for recording).,<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4074,RtcWEB,38,60,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Apologising,InformationProviding,Apologising",,-1,"All,

sorry for cross-posting.

As one of the editors for the use case doc, I would like to summarize the use case discussion a bit. A and B below is my understanding of the status regarding use cases after attending the webrtc meeting Sat July 23rd and the first rtcweb session of IETF 81, and after trying to digest the mail lists. C discusses how we could move forward, D where we should discuss and finally E my opinion as an individual.

Input/feedback is appreciated.

A. Existing (old) use cases
The use cases listed in http://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/ where not questioned, all survived. However, the document type should be changed.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4075,RtcWEB,38,61,"InformationSeeking,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,ExtensionOfPrevious",60,-1,"
B. New use cases
I noted (as not immediately dismissed) the following proposals:

1. Distributed music band, discussed at the webrtc meeting
2. Use cases regarding different situations when being invited to a “session”, e.g. browser open, browser open but another tab active, browser open but active in session, browser closed, …. (Matthew Kaufman); discussed at webrtc meeting
3. Different TURN provider scenarios (Cullen Jennings); discussed at the webrtc meeting
4. More challenging NAT case (Matthew Kaufman); UDP blocked http://www.ietf.org/mail-archive/web/rtcweb/current/msg00468.html
5. E911 (Paul Beaumont) http://www.ietf.org/mail-archive/web/rtcweb/current/msg00525.html
6. Local Recording (John Ewell) at webrtc meeting
7. Remote recording (John)  http://www.ietf.org/mail-archive/web/rtcweb/current/msg00472.html
8. Emergency access for disabled (Bernard Aboba) http://www.ietf.org/mail-archive/web/rtcweb/current/msg00478.html
9. Clue use cases (Roni Even) http://tools.ietf.org/html/draft-ietf-clue-telepresence-use-cases-01
10. Rohan red cross (Cullen Jennings); proposed a bit earlier http://www.ietf.org/mail-archive/web/rtcweb/current/msg00323.html

Probably I have missed a few.

C. Way forward
The proper way forward would probably be to have people draft text describing these use cases and derive requirements they add, and then have a discussion on whether they should be included for version one of the standard or not.

In some cases the description exists already (Rohan red cross, emergency access for disabled, clue use cases) but not requirements.

Are there volunteers (maybe the ones proposing them)?

D. Where to discuss
This mail is sent to both public-webrtc at w3.org and to rtcweb at ietf.org. We have discussed that there should be only one use case document that is common for the webrtc and the rtcweb WGs, possibly the current ietf use case doc (http://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/). Does this mean that it would be OK to discuss use cases on the rtcweb list only, or should we cross post?

Some of the proposed new use cases (2, 6) have relatively little bearing on IETF IMO; they are more W3C related, perhaps they should be documented and discussed in a webrtc context only.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4076,RtcWEB,38,62,"ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",61,-1,"
E. Opinion as individual
My personal opinion is that we at this stage should focus on the basic use cases, and solve those in a good way. To me that would mean that we should add 3 (to allow different providers) and 4 (if you can’t connect no use case can be supported). I think that these use cases can be added as twists of/extensions to the first use case (Simple Video Communication Service).

In my view it also means that we should add text and requirements for 2 to make sure that the communication capabilites we are adding to the browser is usable in everyday scenarios. Presumable this would lead requirements (e.g. background execution capability) that are transferred to other W3C WGs - not to requirements in the webrtc/rtcweb space.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4077,RtcWEB,38,63,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",51,-1,"
The rest of the new proposed use cases, IMO, could be looked into in a second stage when we've established the basics.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4078,RtcWEB,38,64,"InformationSeeking,Question,ProposeAction,Question",,-1,"
Comments?
",<BBF498F2D030E84AB1179E24D1AC41D616C389F16D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-04 09:57:32
4079,RtcWEB,38,177,"Question,InformationProviding,ProposeAction,Question,NeutralResponse",61,61,"
Would this cover all ""voicemail"" and ""videomail"" cases?  I.e. having a client
accept connections in the background if the call is not answered, optionally
play a message, and record incoming audio/video, and allow the remote user to
interact with it.  Also remote playback of messages.  If not (and if it's not
covered by the current document, we need to add this usecase.

Note that there are two variants: one local (local client handles it, which
has more security issues around camera access and pre-approval), and one for
remote recording (after some time with no answer or if not ""registered"" call
is forwarded to a message server that answers it).  Note that there are
security identity issues here (key chains, etc).
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4080,RtcWEB,38,179,"NeutralResponse,ContextSetting,NeutralResponse",61,61,"
I'd add:
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4081,RtcWEB,38,180,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","179,61",61,"
11. Remote assistance (ala VNC or RDP) - User is helping another user on
their computer with either view-only or view-with-control, either of just
the browser of the the entire screen.  Computer audio is optionally sent
as well.  They are optionally talking and/or viewing each other while this
is occurring.  They may be transferring files over a reliable data
connection during this session.
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4082,RtcWEB,38,181,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question","180,61",61,"
Commentary: How often have you talked to your father/mother/brother/etc
and tried to debug their computer problems remotely?  And getting them to
install a specific remote-assistance package, and to use it, and get it to
work through firewalls, can be very painful.  (There are other uses of this
ability to copilot as well, including classroom instruction, distance learning,
etc.)  This use-case enables someone to build a JS app to provide this
functionality.  (Note that for the W3 and browser vendors there will be
significant security issues to resolve.)  I think this is actually a fairly
important use-case.
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4083,RtcWEB,38,182,"ExtensionOfPrevious,ContextSetting,ProposeAction,NeutralResponse","181,61",61,"
Additional resulting requirements:

* Need to be able to select a ""video"" source other than a camera (window or
screen) (W3 issue)

* Need to be able to send multiple video and audio streams from different
sources (probably already covered, mostly W3 issue)

* Need to be able to use a reliable data connection (for mouse/keyboard/etc
control, plus file transfer)
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4084,RtcWEB,38,183,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","179,61",61,"
12. Security camera/baby monitor usage - use a persistent or temporary
connection to provide basic security camera operation, including switching
cameras or mics, or with the ability to remotely request review of recent
data recorded.  Should be able to switch to 2-way audio and/or video remotely.
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4085,RtcWEB,38,184,"Question,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","183,61",61,"
Additional requirements:

* Need to be able to select a ""video"" source other than a camera (file)
(W3 issue)

* Remote control of camera/mic selection and enabling (W3 issue) - may
require reliable data connection

* May need control from JS over codecs used, at least voice vs audio, etc,
and max video framerate/resolution/bandwidth (W3 issue largely?)
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4086,RtcWEB,38,186,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",63,63,"
I'd very much want to include the ""remote assistance"" case, and I think the
voicemail cases could be very important in overall acceptance and utility, especially
given the issues over whether someone's machine is running and accepting calls.

Security cam/baby-monitor is less important, but highlights some controls that
we may want to expose to the JS over maximum bitrate/framerate/resolution/etc,
and of course a slew of security issues for W3 to think about.
",<4E3AB4D4.4070308@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:03:48
4087,RtcWEB,38,227,ContextSetting,180,-1,"Responding to myself:
",<4E3ABCA6.30706@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:37:10
4088,RtcWEB,38,229,"InformationProviding,ContextSetting,NeutralResponse","180,181",181,"
Other uses this use-case covers:

Meetecho - ability to use as a video source a window on your computer (i.e.
presentation), while also optionally exchanging or sending audio and/or video,
and optionally having a (reliable) data channel for side-chat ala the meetecho
chat window.  Note that this is most useful if the window can be any window, not
just the browser.

Very useful for business/sales presentations as well (could help avoid a whole
bunch of travel by sales engineers and the like).

I don't believe this would add any new requirements.
",<4E3ABCA6.30706@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-04 11:37:10
4089,RtcWEB,38,269,"Answer,ProposeAction,Thanking,NeutralResponse,Thanking",177,-1,"Thanks Randell.
In my opinion, both local and remote ""voicemail"" and videomail"" use cases will be helpful.",<1312669149.15555.YahooMailNeo@web162014.mail.bf1.yahoo.com>,sohel_khan777@yahoo.com,0.0,0,31,2011-08-06 15:19:09
4090,RtcWEB,38,272,"ContextSetting,Apologising,Apologising",177,-1,Sorry for lateness catching up on this thread.,<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4091,RtcWEB,38,485,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",177,-1,"
I did indeed propose recording use cases. I see that Randell has applied that to mail (voicemail / videomail) use cases. I would like to try to provide some separation here.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4092,RtcWEB,38,486,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",485,-1,"
The recording use cases I had in mind were cases where audio/video are captured/rendered locally (through camera/mic/display/speaker) and IN ADDITION are recorded, either locally or remotely. I tend to think of voicemail/videomail as being a replacement for local capture/rendering, or to put it another way, the storage device acts as the capture/rendering device. So in the voicemail/videomail case, recording is INSTEAD OF conventional capture/rendering.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4093,RtcWEB,38,487,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",486,-1,"
Voicemail/videomail can be local or remote. In the remote case, the inbound call is diverted to a remote mailbox device. This is a signalling plane matter, and outside the scope of RTC-Web, I believe.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4094,RtcWEB,38,488,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",487,-1,"
So the interesting case is local voicemail/videomail. It simply means that a mailboxes or files replace the conventional capture rendering devices. So received audio and video can be sent to files, and files can be used as the source of prompts or other information to be fed back to a caller. The basic requirement seems to be to use files as sources and sinks of media sent/received over RTP. One additional requirement is some means by which the caller can control the mailbox - this is conventionally done by DTMF or voice recognition - in fact these are the only methods available when a call comes from PSTN. So this could also lead to a requirement for receiving DTMF.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4095,RtcWEB,38,489,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",488,-1,"
Local recording, on the other hand, means that media captured from local devices and sent via RTP and media received via RTP and rendered at local devices are also copied to local files.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4096,RtcWEB,38,490,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",489,-1,"
Remote recording means that media captured from local devices and sent via RTP and media received via RTP and rendered at local devices are also sent via RTP to a remote recording device.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4097,RtcWEB,38,491,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",490,-1,"
Basically, all these use cases, if we choose to progress them, have a general impact on requirements - some sort of flexibility in terms of where media is sourced and sunk, including the ability to use a file as a source/sink and the ability to have multiple sinks. It seems that a well chosen API architecture could accommodate these, but leaving these requirements until later might mean that the chosen API architecture is not sufficiently flexible to accommodate these requirements later. DTMF reception, if we decide we need it, would be a separate requirement.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4098,RtcWEB,38,492,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",491,-1,"
So I would welcome feedback on which of these use cases are interesting (I have already heard some support for recording use cases), and I could propose text if necessary.",<A444A0F8084434499206E78C106220CA09BDB6A238@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 09:34:01
4099,RtcWEB,38,727,"InformationProviding,ContextSetting,NeutralResponse",492,-1,"
I was just uploading an updated version of the use case doc when receiving this, so it is not taken into account in that version.",<BBF498F2D030E84AB1179E24D1AC41D616C389F239@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 10:08:59
4100,RtcWEB,38,964,"Agreement,NeutralResponse",492,-1,"
this was a good way sort things up.",<BBF498F2D030E84AB1179E24D1AC41D616C389F242@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 11:49:56
4101,RtcWEB,38,965,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",964,-1,"
I my view we should definitely support local recording of streams (regardless of if they are generated by local devices or received via RTP), and this could be done in parallel to rendering them or not (up to the app).",<BBF498F2D030E84AB1179E24D1AC41D616C389F242@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 11:49:56
4102,RtcWEB,38,966,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",965,-1,"
The recorded media should also be possible to render locally (be the source for a video element).",<BBF498F2D030E84AB1179E24D1AC41D616C389F242@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 11:49:56
4103,RtcWEB,38,967,"InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,Question,ExtensionOfPrevious",966,-1,"
I'm less sure about that the recorded media should also be an RTP source - couldn't you just as well send the file over and then play it at the remote end?",<BBF498F2D030E84AB1179E24D1AC41D616C389F242@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 11:49:56
4104,RtcWEB,38,993,"InformationProviding,Answer,Answer",967,967,"[JRE] Yes, the file could be streamed across, but there are folks who want it to get across more or less in real time, e.g., where the recorder is performing real-time analytics, perhaps in a contact centre. This is the basis for the work done in the IETF SIPREC WG. The same considerations that require RTP browser-to-browser for RTC-Web also dictate RTP as the transport for sending media to a recorder.",<A444A0F8084434499206E78C106220CA09BDB6A34F@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 14:20:06
4105,RtcWEB,38,1275,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","967,993",967,"
In terms of what impact this would have on the solution, perhaps it would have very little impact. Perhaps it could be treated as two separate sessions:
- one that exchanges audio/video between capture/rendering devices and the remote entity and copies to a local file; and
- one that takes audio/video from the local file and sends it to a remote recorder.
The main requirement then is to be able to read from the local file at the same time as writing to the local file.

John
",<A444A0F8084434499206E78C106220CA09BDB6A34F@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 14:20:06
4106,RtcWEB,38,1283,"ClarificationElicitation,ProposeAction,UnderstandingNegative,Question",993,993,"[Stefan] If you want to do stuff remotely in real time, could you not just avoid recording locally? Regardless of if the analysis is to happen on a locally generated stream, or on a stream received via RTP, that stream can be streamed to the analysing server (via a p2p-connection), right? (Probably I am missing something).",<BBF498F2D030E84AB1179E24D1AC41D616C389F245@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 14:33:35
4107,RtcWEB,38,1322,"InformationProviding,Answer,Answer",1283,-1,"
No, I am not suggesting both local recording and remote recording at the same time. Sometimes local recording will be required, sometimes remote recording.",<A444A0F8084434499206E78C106220CA09BDB6A397@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 15:25:35
4108,RtcWEB,38,1323,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",1322,-1,"
However, I did suggest (in other text in my previous message) that one possible solution might be to record locally and use a second RTC-Web session to transmit from the local file to the remote recorder. What I failed to say was that in this case the local file would be a temporary repository - just a buffer between the two sessions.",<A444A0F8084434499206E78C106220CA09BDB6A397@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 15:25:35
4109,RtcWEB,38,1328,"InformationProviding,Agreement,ProposeAction,NeutralResponse",1323,1323,"This makes sense. Also, if you look at the API proposals available, it would be quite easy to forward (in real time) a stream being received to another entity. There is no explicit recording, a stream being received (via RTP) is just streamed to another entity (via a separate RTC-Web session). I think this would solve this case.",<BBF498F2D030E84AB1179E24D1AC41D616C389F24A@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 16:55:40
4110,RtcWEB,38,1362,"InformationProviding,NeutralResponse,NeutralResponse",1328,-1,"
In case recording similar to SIPREC, it is little bit more than spanning two media (RTP stream) alone because recording has to include some context data about recording apart from the media stream.",<2E239D6FCD033C4BAF15F386A979BF510640D0@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-19 22:48:36
4111,RtcWEB,38,1363,"Thanking,Thanking",,-1,"
Thanks
Partha",<2E239D6FCD033C4BAF15F386A979BF510640D0@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-19 22:48:36
4112,RtcWEB,38,1407,"Thanking,Thanking",1362,-1,"
thanks for updating me.",<BBF498F2D030E84AB1179E24D1AC41D616C389F24D@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 19:46:52
4113,RtcWEB,38,1465,"InformationSeeking,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1362,-1,"
You are talking here about the metadata, I think. I assume the web page / JavaScript has to deal with that - not the browser.",<A444A0F8084434499206E78C106220CA0B00FDABAD@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-22 08:28:31
4114,RtcWEB,38,1539,"InformationProviding,Agreement,Agreement",1465,-1,"
I agree with you. JavaScript API should have the provision to pass the metadata.",<2E239D6FCD033C4BAF15F386A979BF51064106@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-22 12:12:25
4115,RtcWEB,38,1540,"Thanking,Thanking",,-1,"
Thanks
Partha",<2E239D6FCD033C4BAF15F386A979BF51064106@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-22 12:12:25
4116,RtcWEB,38,1543,Social,,-1,Hi,<1F2A2C70609D9E41844A2126145FC09801F1550D@HKGMBOXPRD22.polycom.com>,Ranjit.Avasarala@Polycom.com,0.0,0,7,2011-08-22 14:52:09
4117,RtcWEB,38,1630,"InformationProviding,ProposeAction,NeutralResponse",1539,-1,"
We could use websockets protocol to pass metadata information.",<1F2A2C70609D9E41844A2126145FC09801F1550D@HKGMBOXPRD22.polycom.com>,Ranjit.Avasarala@Polycom.com,0.0,0,7,2011-08-22 14:52:09
4118,RtcWEB,38,1633,Social,,-1,"Hi Ranjit,",<2E239D6FCD033C4BAF15F386A979BF51064117@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-22 13:46:27
4119,RtcWEB,38,1737,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1630,-1,"
I have mentioned as JavaScript API because there is no specific dependency on browser. Let us discuss about the exact mechanism later. Currently, let us have common understanding whether recording usecase has to be added in RTCWeb or not.",<2E239D6FCD033C4BAF15F386A979BF51064117@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-22 13:46:27
4120,RtcWEB,38,1738,"Thanking,Thanking",,-1,"
Thanks
Partha",<2E239D6FCD033C4BAF15F386A979BF51064117@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-22 13:46:27
4121,RtcWEB,38,1741,Social,,-1,Hi Partha,<1F2A2C70609D9E41844A2126145FC09801F1555B@HKGMBOXPRD22.polycom.com>,Ranjit.Avasarala@Polycom.com,0.0,0,7,2011-08-22 18:17:22
4122,RtcWEB,38,1859,"InformationProviding,NeutralResponse,ProposeAction,Agreement",1737,-1,"
I agree with Paul that we could use the recording mechanism discussed in siprec mailing list could be added here as webbrowser would essentially be a SIP UA which could initiate and terminate SIP sessions.",<1F2A2C70609D9E41844A2126145FC09801F1555B@HKGMBOXPRD22.polycom.com>,Ranjit.Avasarala@Polycom.com,0.0,0,7,2011-08-22 18:17:22
4123,RtcWEB,38,1866,"InformationSeeking,ContextSetting,ProposeAction,Question",1859,1859,mandatory standard clarification (?):,<4E52391B.6000900@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-22 13:10:19
4124,RtcWEB,38,1991,"InformationProviding,ExtensionOfPrevious,NeutralResponse","1859,1866",1859,"
.. as somewhere in the combination of the Web browser, the Javascript
and the Web server it connects to, there would be something that
performs the functions of a SIP UA which could initiate and terminate
SIP sessions ...",<4E52391B.6000900@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-22 13:10:19
4125,RtcWEB,38,1994,"Agreement,ProposeAction,Agreement",1991,-1,True. One possible model could be integrating SIP stack with webbrowser and send / receive SIP messages over websockets.,<1F2A2C70609D9E41844A2126145FC09801F15573@HKGMBOXPRD22.polycom.com>,Ranjit.Avasarala@Polycom.com,0.0,0,7,2011-08-22 19:24:11
4126,RtcWEB,38,2317,"InformationProviding,Agreement,ProposeAction,NeutralResponse",1991,1991,"
Yes, *something* of this sort - the devil is in the details.

IIUC, its the intent of RTCWEB that the media flow directly between
source and recipient, rather than following the path of the ""signaling"".

(That of course was also the intent of SIP with proxies, but the almost
pervasive use of SBCs has usually forced media to follow the signaling
path.)

In siprec, it is assumed that an entity called the SRC is in the
signaling and media path of the call being recorded, as well as in the
signaling and media path of a session with the recorder.

If we assume that the RTCWEB ""client"" is in the media path, but not in a
sip signaling path, and that the RTCWEB ""server"" is sip-capable but not
in the media path, then we have a structure that doesn't quite fit the
siprec model.

However this could perhaps be made to work with siprec via some
additional functionality in the RTCWEB client and server, and maybe some
tweaks to what is being specified for siprec. The details will depend on
which end is making the decision to do recording. If its the client,
then that client will need a way to ask ""the"" server to establish a
siprec session and to pass metadata. If its the server that makes the
decision, then there needs to be a way for the server to ask the client
to fork media and send it to multiple destinations.

There are of course privacy concerns in this. Whether they are different
in RTCWEB than they are for siprec in general remains to be seen.
",<4E5255D0.90409@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-22 09:12:48
4127,RtcWEB,38,2381,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",2317,2317,"
There are also other practical issues.  In particular with bandwidth: you've
now roughly tripled the bandwidth requirement of the endpoint: it must send
to the other end, AND mirror both outgoing (which it controls) and incoming
(which it doesn't, or only controls very indirectly) to the recording server.
",<4E52B7E9.1000006@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-22 16:11:21
4128,RtcWEB,38,2382,"InformationProviding,ExtensionOfPrevious,ProposeAction,NeutralResponse","2317,2381",2317,"
For cases where you have bandwidth to burn (audio-only calls on broadband)
you might get away with it.  For a video call under any sort of bandwidth
restraint, it would be a huge problem and would seriously degrade quality.
",<4E52B7E9.1000006@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-22 16:11:21
4129,RtcWEB,38,2454,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",2382,2382,"
Re recognize this in siprec. The SRC can be inserted into the signaling
and media path in a variety of ways. Typical sip deployments today have
servers in the path that are often not bandwidth constrained.

RTCWEB seems to be revisiting the deployment topologies. Topologies that
work for recording may also need to be revisited.
",<4E52C02A.900@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-22 16:46:34
4130,RtcWEB,38,2566,"InformationProviding,Agreement,ProposeAction,Agreement",1737,-1,"Agree. And also _which_ recording use case(s) in that case. I think this
is what John was looking for when starting the thread.

My $0.02 says that we need to take some care before adding more and more
usages and reqs - after all the schedules for the WGs are quite aggressive.",<4E523B4B.4070905@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-22 13:19:39
4131,RtcWEB,38,2608,"InformationSeeking,InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse",2566,2566,"Indeed. When thinking about the recording use cases, I could come up
with a few interpretations:

- Record one media stream, as it arrives (the ""voice mailbox"" concept)
- Record a conversation: Outgoing and incoming audio and video in an
1-on-1 or 1-on-N context (typically as permanent records of a meeting or
conversation)
- Record the application screen as presented to the user, together with
the audio tracks as presented to the user's audio device, but don't
bother with incoming audio from the user at all (game recording, for
instance - the ""WoW movie"" kind)

In each instance, recording technology might include recording:

- As one track, somehow mixed, ready for playback
- As multiple tracks recorded separately within a container that
requires special playback devices
- As multiple tracks, recorded separately to separate objects
- As streams sent to some remote recording entity, that may choose
one of the options above

I'd be happier about discussing which ones of these people find it
critical to support before we dive into figuring out how to support them.

Send text!
",<4E526327.7050807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-22 16:09:43
4132,RtcWEB,38,2634,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",2608,2608,"[JRE] This was not what I originally proposed, but emerged during discussion. From my point of view a mailbox is more likely to be centralized, not on a user's device, so the web application can divert calls to a mailbox using signalling means, without any impact on the browser. Some people might want to support a local mailbox, in which case browser support would be needed, but that is second priority, from my perspective.",<A444A0F8084434499206E78C106220CA0B00FDAE68@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-22 16:41:20
4133,RtcWEB,38,2767,"InformationProviding,ProposeAction,UnderstandingNegative,NeutralResponse",1465,1465,"
I don't understand your point John. The javascript is executed by the
browser.

The actual awareness of information that is to become siprec metadata
may well be distributed - some of it in the client/browser, and some of
it in the server. That will somewhat complicate getting it all together.
",<4E525734.80209@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-22 09:18:44
4134,RtcWEB,38,2785,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",2767,229,"[JRE] My point is that in the same way as SIP signalling (at least in some people's minds) is a matter for JS, the inclusion of a metadata body part in that SIP signalling is also a matter for the JS. Of course, if SIP is included in the browser, this is a different matter.",<A444A0F8084434499206E78C106220CA0B00FDAEA5@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-22 17:15:19
4135,RtcWEB,38,3010,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse","2785,61",61,"
OK. Now I get it.

Well, then again this takes on a different cast based on whether, or
not, you think the browser should have a sip stack that is ""driven"" by JS.

If so, then probably the JS will also need to establish the SIP
Recording Session, and send the metadata in the sip signaling.
Presumably that would have to be part of the JS API for dealing with the
sip stack.

OTOH, if you don't think the browser and JS should be doing sip
signaling, then the web server is probably establishing the Recording
Session, and sending the metadata. But the media streams may not flow
through the web server. So in that case, the web server, via the JS that
it provides, will require the capability to provide a forked media
stream that the server can then reference in its SDP for the RS. And
also, the JS will need *some* way to provide to the server the info that
should go into the metadata.

There had better be *some* standards for how to do it or else it will be
a high bar for supporting recording. Perhaps the metadata could be
provided by the JS to the web server using the same XML schema being
defined by siprec, but conveyed differently, using http. But I expect it
will be at least a little more complicated than that.
",<4E5279A5.8010308@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-22 11:45:41
4136,RtcWEB,38,3062,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",3010,3010,"[Partha] This is my understanding. Here, it is possible to complete reuse SIPREC work with minor extensions specific to RTCWeb like codec profile.",<2E239D6FCD033C4BAF15F386A979BF51064183@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-23 00:25:58
4137,RtcWEB,38,3078,"InformationProviding,Agreement,ProposeAction,Agreement",3010,3010,[Partha] I agree with you that two way for passing metadata & media is more complicated which is avoided in SIPREC protocol design.,<2E239D6FCD033C4BAF15F386A979BF51064183@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-23 00:25:58
4138,RtcWEB,38,3173,"ContextSetting,ProposeAction,Social,Thanking,Thanking",,-1,"Please read inline

Thanks
Partha
",<2E239D6FCD033C4BAF15F386A979BF51064183@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-08-23 00:25:58
4139,RtcWEB,38,3206,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1328,1328,"
[AndyH] It might do but I assume this would limit the RTP model that could be used to the endpoint model. We are currently reviewing how the RTP model for a session recording client should look like with the AVT experts (See http://tools.ietf.org/html/draft-eckel-siprec-rtp-rec-01). This might result in some requirements on how the client handles RTCP for example.
",<101C6067BEC68246B0C3F6843BCCC1E31018BF62FD@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2011-08-22 10:32:04
4140,RtcWEB,38,3467,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",967,967,"
I think discussing this in terms of a ""file"" is an over simplification.
While it could be a file, it could also be synthesized, or assembled
from pieces, interactively as a result of received media or signaling.
In such cases you can't just ""send the file"".

Also, sending the file only works if the recipient can always deal with
a file equally to receiving an RTP stream. That seems like a burden to
levy on all possible recipients. For instance, it would mean that
rtcweb:pstn gateways would all require the capability to buffer and
playback audio/video files.

So perhaps what is needed is the concept of a software agent that can
take on the role of a local source/sink of media streams.
",<4E4E6025.7010403@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-19 09:07:49
4141,RtcWEB,38,3476,"Agreement,ProposeAction,NeutralResponse",3467,3467,"Maybe it was an over simplification, but synthesizing/assembling etc. sound a bit overly complex to me, at least in a first version. Just my personal opinion. In any case we would have to specify more precisely what should be possible.",<BBF498F2D030E84AB1179E24D1AC41D616C389F248@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 15:21:30
4142,RtcWEB,38,3813,"InformationProviding,Agreement,ProposeAction,Agreement",3467,-1,"
I agree file might not be the right term. What we need is a way of passing the stream, within the browser, between one session and a second session (in SIPREC terms, between the communication session and the recording session).",<A444A0F8084434499206E78C106220CA09BDB6A39E@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-08-19 15:30:50
4143,RtcWEB,38,3835,"Agreement,Agreement",966,966,Yes.,<4E4EDAEA.60901@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-19 17:51:38
4144,RtcWEB,38,3866,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse",965,965,"
Agreed.   Note that there are legal requirements in various locations around recording
conversations; that's up to the application IMHO -- however we'll want to make sure it's
reasonably easy for the application to do.  While I'm not an expert, recording someone
in many jurisdictions requires periodic beeps, etc.  They'd have to mix it into the outgoing
stream, but it would have to remain there even if the user ""muted"".  I want to make sure
we're providing something that won't be a hassle for the application developers.
",<4E4EDAEA.60901@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-19 17:51:38
4145,RtcWEB,38,3867,"InformationProviding,Answer,ContextSetting,ProposeAction,NeutralResponse",967,967,"
That might not work for cases where the two users are talking through different
providers/apps, and it also would imply a much longer delay in many cases, plus
local storage requirements, etc.   Think a recorded greeting played to callers if
no one answers, for example.

Assuming that recording and playback are of encoded media:

There are issues with recording and playback having to do with error recovery.
For recording an incoming stream, it's less of an issue - you do normal error
recovery, and on playback it would look the same as it would have if the call had
been live.

For sending a pre-recorded stream (greeting, etc): I'd assume it was recorded
without loss.  However, the other side may experience loss in receiving it.
To deal with this, we can a) decode and re-encode the media, allowing us to react
to incoming loss reports, or b) include periodic IDRs or equivalent.  I would
lean to a) (decode&  re-encode), that also handles issues with codec parameters,
codec choice, etc.  So an input would be from a decoded stream.  This may use more
resources than b; the application could (at its discretion) not render incoming media
while playing back.
",<4E4EDAEA.60901@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-19 17:51:38
4146,RtcWEB,38,3952,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",3867,-1,"
Many of the issues you are bringing up are things we have been
addressing in the siprec WG. RTCWEB can either reinvent all that, or we
can find some way to reuse that work. At the moment, siprec assumes that
the agent that is initiating the recording is in the signaling path of a
sip call, and that it is capable of establishing another sip session to
the recorder. Those assumptions would seem to be wrong for RTCWEB.",<4E4EF723.5090409@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2011-08-19 19:52:03
4147,RtcWEB,38,3991,"Question,InformationProviding,ContextSetting,ProposeAction,Question,NeutralResponse",3952,3952,"
RTCWEB doesn't seem to going in the direction of mandating SIP, but
still, I would think that it is reasonable to say something along the
lines of ""the remote recording case is handled by connecting to a
SIPREC-capable recorder"" (with the usual degree of gatewaying help from
our signaling proxies).

That will, of course, require that the SIPREC recorder is capable of
participiating in an RTCWEB session (that is, support ICE and the
mandatory codecs), that the RTCWEB implementation be capable of copying
incoming media streams to an outgoing interface, and that negotiation
can down-negotiate to something that is supported by both call
participants and the recording device. Does SIPREC envision establishing
minimum requirements for codecs and profiles?

Once we can satisfy ourselves that we have all the pieces required to
send media off to a remote API, we should see if we can do something
very similar for sending media off to some kind of local recorder; it
seems less likely that we'll get into trouble with locking ourselves
into a wrong model if we do things in that order.

My $0.02.
",<4E4FD78C.8060608@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-20 17:49:32
4148,RtcWEB,38,4000,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse",3991,3991,[AndyH] - I agree this would just seem to be another example of how the Session Recording Client can be decomposed and is similar to Figure 4 in the SIPREC architecture draft (http://tools.ietf.org/html/draft-ietf-siprec-architecture-02#section-3.1.2) but in the case of RTCWEB the media server is the browser and the application is the web server and of course RTCWEB will not use mediactrl. I have been resisting attempts to add more diagrams to the SIPREC architecture draft to show the multitude of ways the SRC and SRS could be decomposed but maybe RTCWEB is a good reason to do this.,<101C6067BEC68246B0C3F6843BCCC1E31018BF636D@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2011-08-22 11:25:40
4149,RtcWEB,38,4032,"InformationProviding,Answer,Answer",3991,3991,"
[AndyH] - No the SIPREC requirements (http://tools.ietf.org/html/rfc6341) don't include minimum codec requirements.
",<101C6067BEC68246B0C3F6843BCCC1E31018BF636D@MCHP058A.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2011-08-22 11:25:40
4150,RtcWEB,39,27,"ContextSetting,InformationProviding",,-1,"
As discussed previously, here a use case contribution on Autonomic Networking:",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4151,RtcWEB,39,28,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",27,-1,"
http://www.ietf.org/internet-drafts/draft-behringer-autonomic-bootstrap-00.txt",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4152,RtcWEB,39,29,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",27,-1,"
While writing this document, I realised that we need to adapt the use case template further. At least in my use case, the template didn't flow perfectly yet. Here my main points:",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4153,RtcWEB,39,30,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",29,-1,"
1) We should bring out very explicitly why an autonomic (ie, distributed) solution is preferred or required. In my use case I therefore added a section ""Benefits of an Autonomic Solution"". As you can see, it's a very short paragraph, but I think we should be explicit about it. After all, this is what our use cases are all about.",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4154,RtcWEB,39,31,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,StateDecision,ExtensionOfPrevious",29,-1,"
2) The title ""Parameters each device can decide for itself"" doesn't really gel well in my doc. The issue is the word ""decide"". My original proposal was ""Self-knowledge"", which doesn't really capture is fully either. I decided in my version to call this section ""Device Based Self-Knowledge and Decisions"".  I think that captures both thoughts.",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4155,RtcWEB,39,32,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",29,-1,"
3) The separation of parameters (old section 4) and Interactions (old section 5) didn't really work out too well either for my use case. In 4 we say ""parameters needed"" and in 5 ""information needed from neighbour devices"". In my use case the following slightly re-shuffled structure worked better:",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4156,RtcWEB,39,33,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",32,-1,"
1.  Introduction
2.  Problem Statement
3. Benefits of an Autonomic Solution
4.  Intended User and Administrator Experience
5.  Analysis of Parameters and Information Involved
5.1.  Device Based Self-Knowledge and Decisions
5.2.  Interactions with other devices
5.3.  Information needed from Intent
5.4.  Monitoring, diagnostics and reporting
6.  Comparison with current solutions",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4157,RtcWEB,39,34,"InformationSeeking,ExtensionOfPrevious,ProposeAction,Question",33,-1,"
Thoughts?",<3AA7118E69D7CD4BA3ECD5716BAF28DF21089BAC@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-09 13:27:33
4158,RtcWEB,39,36,Social,,-1,"Hi Michael,",<536D3954.9080607@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-10 08:23:48
4159,RtcWEB,39,92,"InformationProviding,ContextSetting,ProposeAction,Thanking,NeutralResponse,Thanking",34,-1,"
Thanks for that. I will find the time to read your draft carefully
rather than replying in the abstract, but I guess we should not be
too rigid about the format anyway - after all, the goal is not the
format, but to understand and extract the requirements. Indeed, as
you have experienced, each use case raises its own topics.",<536D3954.9080607@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-10 08:23:48
4160,RtcWEB,39,93,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",92,-1,"
(I recently reviewed the RTCweb use cases document. Their aproach
is quite relaxed about the description of each use case, but very
systematic in the description of the requirements. See
draft-ietf-rtcweb-use-cases-and-requirements.)",<536D3954.9080607@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-10 08:23:48
4161,RtcWEB,39,94,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,ExtensionOfPrevious",,-1,"
Everybody: we are just starting a discussion with the IETF Area
Directors about a BOF in Toronto based on various AN use cases. More
news later, but now would be a good time to post one or two more use
cases.",<536D3954.9080607@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-10 08:23:48
4162,RtcWEB,39,160,"InformationSeeking,InformationProviding,Answer,ProposeAction,Social,NeutralResponse",34,-1,"Hi everybody,

I find this use case clear and have no objections to
the changes in format compared to the other two. In the end
it's more important (IMHO) to capture the essentials of the use
case than to follow a rigid format, so I think I'd be happy
with use case authors varying the format as long as the main
points are covered. What do other people think?
",<53700417.9070708@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 11:13:27
4163,RtcWEB,39,162,"InformationProviding,Agreement,ProposeAction,Agreement",30,30,"
Yes, although in a sense the high-level benefit is always the same: get
as close as possible to plug-and-play. So we would need to be stating
something more specific than that.
",<53700417.9070708@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 11:13:27
4164,RtcWEB,39,163,"InformationProviding,Agreement,Agreement",31,31,"
Yes, and of course they are closely related. For example a router could
detect that it has 3 interfaces (self knowledge), one of which has another
router already announcing a prefix (discovery), so it can decide that it
needs to request 2 more prefixes.
",<53700417.9070708@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 11:13:27
4165,RtcWEB,39,164,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",32,32,"
I see the point, but it is a bit harder in this document to extract
the list of parameters that might be the object of negotiation
with neighbors. I think that will be important when we try to
extract requirements. Very possibly, the description of the
interactions should preceded the identification of the parameters.
",<53700417.9070708@gmail.com>,brian.e.carpenter@gmail.com,0.0,0,0,2014-05-12 11:13:27
4166,RtcWEB,39,323,"ContextSetting,Social",34,-1,"Dear Michael and NMRG contributors,

comments inline.",<6AEBD89A-2829-4BB5-B87B-9E5570E16304@inria.fr>,olivier.festor@inria.fr,0.0,0,24,2014-05-12 22:14:25
4167,RtcWEB,39,325,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",28,28,"
(2) Security consideration:
""An autonomic approach can used to make a bootstrap process secure. » -> ""An autonomic approach can BE used to make a bootstrap process secure.""
",<6AEBD89A-2829-4BB5-B87B-9E5570E16304@inria.fr>,olivier.festor@inria.fr,0.0,0,24,2014-05-12 22:14:25
4168,RtcWEB,39,327,"InformationProviding,ProposeAction,NeutralResponse",30,30,"
An autonomic system is not limited to self-configuration. The other functions should be explicitly mentioned here as well (protecting, healing, …).
",<6AEBD89A-2829-4BB5-B87B-9E5570E16304@inria.fr>,olivier.festor@inria.fr,0.0,0,24,2014-05-12 22:14:25
4169,RtcWEB,39,328,"Agreement,Agreement",31,31,"
Agreed.
",<6AEBD89A-2829-4BB5-B87B-9E5570E16304@inria.fr>,olivier.festor@inria.fr,0.0,0,24,2014-05-12 22:14:25
4170,RtcWEB,39,329,"InformationSeeking,ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,UnderstandingNegative,NeutralResponse","31,32",31,"
To bootstrap, a device  needs to set a couple of parameters.
-a- some can be found internally (no need to observe anything outside or interact with any 3rd party). The #of interfaces of a router mentioned by Brian in his mail
-b- some can be « learned » by the device from observation of his environment. No need to interact with a 3rd party
-c- some can be learned from interacting with the environment (like testing for duplicate addresses for examples)
-d- some need to be obtained from 3rd party entities (like the cloud service you mention in the autonomic bootstrap.
-e- and sometimes a few need to be pre-provisionned on the devices

The first 2 (a & b) correspond to your 5.1 subsection. -c- corresponds to 5.2. It is unclear to me if -d- are also to be described in 5.2 or elsewhere ?
Where in your proposed structure should -e- appear ?

Monitoring, diagnostics and reporting should not be a subsection of the analysis of parameters & information involved but rather a section on its own.
",<6AEBD89A-2829-4BB5-B87B-9E5570E16304@inria.fr>,olivier.festor@inria.fr,0.0,0,24,2014-05-12 22:14:25
4171,RtcWEB,39,424,"ContextSetting,Thanking,Thanking",323,-1,"Thanks for your mail, Olivier, responses inline...
",<3AA7118E69D7CD4BA3ECD5716BAF28DF2109D853@xmb-rcd-x14.cisco.com>,mbehring@cisco.com,0.0,0,6,2014-05-13 13:24:17
4172,RtcWEB,41,0,Social,,-1,"Hi,",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4173,RtcWEB,41,19,"InformationProviding,InformationProviding,ContextSetting,Apologising",,-1,"
I am new to rtcweb so pl excuse my lack of knowledge.",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4174,RtcWEB,41,20,"ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
1)  Refer
F33     The browser must be able to initiate and
accept a media session where the data needed
for establishment can be carried in SIP.",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4175,RtcWEB,41,21,"ExtensionOfPrevious,Question,InformationSeeking,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction",20,-1,"
In other places in other documents it is stated that browser is
given freedom to do signaling it likes. Then this requirement will
be met with signaling gateway. And there is no work in progress for
that. Whether IETF mandates for browser to understand SIP or not?",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4176,RtcWEB,41,22,"ExtensionOfPrevious,InformationProviding,ContextSetting,ProposeAction",,-1,"
2) It will be better if 1-800-Go-Fedex (Fedex call) is referred as
IVR call and Fedex should be taken out as SKYPE was taken out.",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4177,RtcWEB,41,23,Thanking,,-1,"
Thanks
Samir",<20140418145308.46CB4A039F@smtp.hushmail.com>,srivastava_samir@hush.com,0.0,0,62,2014-04-18 10:53:08
4178,RtcWEB,41,47,Social,,-1,"Hi,
",<7594FB04B1934943A5C02806D1A2204B1D2D16CE@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2014-04-19 19:24:02
4179,RtcWEB,41,49,"Answer,InformationProviding,Answer",21,21,"
Not.

IETF does mandate the browser to understand SDP, though (as part of JSEP).
",<7594FB04B1934943A5C02806D1A2204B1D2D16CE@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2014-04-19 19:24:02
4180,RtcWEB,41,50,"Question,Question,InformationProviding",22,22,"
Which version did you look at? Skype has been removed from the latest version (-14). Fedex is still there, though.
",<7594FB04B1934943A5C02806D1A2204B1D2D16CE@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2014-04-19 19:24:02
4181,RtcWEB,42,31,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4182,RtcWEB,42,32,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",31,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-10.txt
Pages           : 28
Date            : 2012-12-19",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4183,RtcWEB,42,33,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",32,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream and data exchange services provided
by the browser.",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4184,RtcWEB,42,34,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",31,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4185,RtcWEB,42,35,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",34,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-10",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4186,RtcWEB,42,36,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",35,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-10",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4187,RtcWEB,42,37,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",36,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20121219123745.24792.31546.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2012-12-19 04:37:45
4188,RtcWEB,43,0,Social,,-1,"Hello,",<E8F5F2C7B2623641BD9ABF0B622D726D0F68869E@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-04 22:31:50
4189,RtcWEB,43,25,"ContextSetting,ProposeAction,InformationProviding",,-1,"
I would like to request agenda time for:",<E8F5F2C7B2623641BD9ABF0B622D726D0F68869E@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-04 22:31:50
4190,RtcWEB,43,26,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",25,-1,"
draft-marjou-rtcweb-audio-codecs-for-interop-01",<E8F5F2C7B2623641BD9ABF0B622D726D0F68869E@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-04 22:31:50
4191,RtcWEB,43,27,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",26,-1,"
The document  presents use-cases underlining why WebRTC needs AMR-WB,  AMR and G.722 as additional relevant voice codecs to satisfactorily ensure interoperability with existing systems.",<E8F5F2C7B2623641BD9ABF0B622D726D0F68869E@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-04 22:31:50
4192,RtcWEB,43,28,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",27,-1,"
A 10-minute time slot should be sufficient for presentation and discussion.",<E8F5F2C7B2623641BD9ABF0B622D726D0F68869E@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-04 22:31:50
4193,RtcWEB,43,61,"Agreement,Agreement",27,27,"
I agree to that we should discuss the subject of additional codecs.
",<5135DA46.7050909@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-03-05 12:43:02
4194,RtcWEB,43,86,Social,,-1,"Hi,
",<E44893DD4E290745BB608EB23FDDB7623B7EF4@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-06 10:04:10
4195,RtcWEB,43,88,"Agreement,ContextSetting,StateDecision,Agreement",61,61,"
This is a controversial topic, but I agree it would deserve some discussion to try to bring it to a closure.

Markus",<E44893DD4E290745BB608EB23FDDB7623B7EF4@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-06 10:04:10
4196,RtcWEB,43,128,"InformationProviding,Agreement,ProposeAction,Agreement",88,-1,"Yes, draft-marjou-rtcweb-audio-codecs-for-interop-01 provides a proposal for
additional text to be added to draft-ietf-rtcweb-audio-01, which is an
rtcweb milestone supposed to be already completed. So it's not unreasonable
to have some discussion on the topic.",<BLU0-SMTP76DCE1745B6A25BFCC3787D0E40@phx.gbl>,coverdale@sympatico.ca,0.0,0,7,2013-03-06 12:10:23
4197,RtcWEB,43,184,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse",28,-1,"Magnus and I discussed this this morning, and we encourage you to
prepare something.  If the discussion of working group last call items
runs short, we may be able to fit this in at that time or at the end
of day one if its full agenda his finished.  This is not a commitment,
however, so please try and get discussion on the list on the points
from the draft you feel need resolution.",<CA+9kkMA7x18x3rD9PoPx-rA+4uz7ome3LjQ7sOWHDptz0zJX6g@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-03-07 08:18:41
4198,RtcWEB,43,281,"ContextSetting,NeutralResponse",184,-1,"Here is a summary of the draft-marjou-rtcweb-audio-codecs-for-interop-00
presentation that I had prepared for yesterday's session:",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4199,RtcWEB,43,282,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",281,-1,"
- The co-authors want to underline that non-WebRTC voice endpoints usually
use one of the following codecs: AMR, AMR-WB or G.722, which will result in
massive transcoding when there will be communications between WebRTC
endpoints and non-WebRTC endpoints.",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4200,RtcWEB,43,283,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",282,-1,"
- On one side, transcoding is bad for many reasons discussed in the draft
(cost issues, intrinsic quality degradation, degraded interactivity,
fallback from HD to G.711...);",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4201,RtcWEB,43,284,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",283,-1,"
- On the other side, it is recognized that implementing additional codecs
in the browsers can generate additional costs.",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4202,RtcWEB,43,285,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",284,-1,"
- In order to reach a compromise, we would like to add some text in the WG
draft draft-ietf-rtcweb-audio providing incentives for the browser to use
these three codecs: make them mandatory to implement when there is no cost
impact on the browser (e.g. if codec already installed, paid by the device
vendor...).",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4203,RtcWEB,43,286,"InformationSeeking,Question,ExtensionOfPrevious,ProposeAction,Question",285,-1,"
Any opinion on that?",<CAErhfrx24SR5zwH3oHQi_PhFkfQjCmbMuatwEw2kjJ184MiUpw@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 09:14:30
4204,RtcWEB,43,405,"Answer,NeutralResponse",286,-1,"It's hard to imagine a situation in which AMR/AMR-WB will be available
at no cost to the browser, considering royalties involved.",<51407E37.7090307@voxeo.com>,alex@voxeo.com,0.0,0,79,2013-03-13 09:25:11
4205,RtcWEB,43,406,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",405,-1,"
http://www.voiceage.com/amr_faqs.php#11",<51407E37.7090307@voxeo.com>,alex@voxeo.com,0.0,0,79,2013-03-13 09:25:11
4206,RtcWEB,43,407,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",405,-1,"
And if we limit the requirement only to those who have paid ... it's not
really 'mandatory'.",<51407E37.7090307@voxeo.com>,alex@voxeo.com,0.0,0,79,2013-03-13 09:25:11
4207,RtcWEB,43,524,"Question,InformationProviding,NeutralResponse,Question,NeutralResponse",405,-1,"Mobile devices that run on 3GPP networks will already have AMR/AMR-WB codecs. Browsers should be
able to access those codecs on such devices. Does this make the proposal 'optional mandatory'?",<20130313133146.3782721F8CBB@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 09:31:42
4208,RtcWEB,43,527,"ContextSetting,NeutralResponse",286,-1,High level thoughts from a browser implementor:,<514087BA.7000709@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-13 15:05:46
4209,RtcWEB,43,654,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",527,-1,"
- The first target of WebRTC is the browser to browser case. These
codecs do not add any capability to the browser to browser case, because
OPUS is available.",<514087BA.7000709@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-13 15:05:46
4210,RtcWEB,43,655,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",654,-1,"
- In the most common browser distribution models, it is an advantage to
include at least a fallback version of all available features in the
binary, so that the set of features available to the user is constant.
This means that the browser either incurs licensing costs or support
costs (to support the variability of user scenarios).",<514087BA.7000709@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-13 15:05:46
4211,RtcWEB,43,656,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",655,-1,"
- The inclusion of royalty-required codecs severely crimps the
distribution models available for browsers, which makes it even harder
for new browsers to enter the market than it already is, and the WG
charter we agreed on says that we ""prefer non-encumbered codecs"".",<514087BA.7000709@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-13 15:05:46
4212,RtcWEB,43,657,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",656,-1,"
We can discuss the cost of transcoding separately, but the cost to the
browsers of extra codecs, especially royalty-encumbered ones, should not
be underestimated.",<514087BA.7000709@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-13 15:05:46
4213,RtcWEB,43,783,"InformationProviding,NeutralResponse",657,-1,"Section 4.3.1 of  draft-ietf-rtcweb-use-cases-and-requirements-10.txt
has usecases for mobile devices.",<20130313142113.320FB21F87FB@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 10:20:48
4214,RtcWEB,43,784,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",783,-1,"
Here is the exact wording from the WG charter:",<20130313142113.320FB21F87FB@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 10:20:48
4215,RtcWEB,43,785,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",784,-1,"
""..The working group cannot explicitly rule out the possibility of adopting encumbered
technologies; however, the working group will try to avoid encumbered
technologies that require royalties or other encumbrances that would
prevent such technologies from being easy to use in web browsers.""
So the proposal to include support for AMR/AMR-WB is within the scope of the
current work.",<20130313142113.320FB21F87FB@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 10:20:48
4216,RtcWEB,43,792,"InformationProviding,ContextSetting,NeutralResponse",282,282,"I have a large amount of SIP phones on my desk, none which support AMR and/or AMR-WB. I had to pay extra for AMR in a SIP phone for my iPhone.",<DE4BEEA4-B4B0-4342-A160-DAAACB6764DE@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-13 15:37:58
4217,RtcWEB,43,797,"Agreement,ExtensionOfPrevious,NeutralResponse","282,792",282,"
I don't agree with the standpoint that AMR is implemented on a majority of traditional non-WebRTC endpoints.

/O",<DE4BEEA4-B4B0-4342-A160-DAAACB6764DE@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-13 15:37:58
4218,RtcWEB,43,863,Social,,-1,"Hi Xavier,
",<20130313142732.GE12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 00:57:32
4219,RtcWEB,43,865,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",282,282,"
""Massive"" seems a little overstated here.  Any system providing a gateway
service to or between 'low bandwidth' devices is almost surely going to
support more than just WebRTC, and is going to have to transcode for most
or all of them anyway.  Adding an extra burden to WebRTC, especially one
that would only ever apply to some small subset of users, wouldn't appear
to make a significant difference in the requirements for such a system.
",<20130313142732.GE12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 00:57:32
4220,RtcWEB,43,867,"Question,InformationProviding,Question,NeutralResponse",283,283,"
Are you aware of the listening tests presented to the CODEC WG?

In particular the ones that show Opus->AMR and AMR->Opus is not significantly
worse than the intrinsic quality degradation suffered by using AMR alone?

Or that Opus->G.711->AMR is actually better than AMR->G.711->AMR ?
",<20130313142732.GE12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 00:57:32
4221,RtcWEB,43,869,"Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse",285,285,"
Since there is never no cost impact to supporting additional features, that
would imply this is never mandatory ...

In which case why bother half-saying otherwise?

I thought it was already quite clear all along, that people who want to or
have their own good reasons to are free to implement any other codecs they
please - and that they already have, and certainly will continue to do so?
",<20130313142732.GE12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 00:57:32
4222,RtcWEB,43,870,"InformationProviding,Answer,ProposeAction,NeutralResponse",286,286,"
I don't really see much point to handwaving about particular niche codecs
for particular niche uses unless this is going to be some sort of separate
informational document, that is kept up to date with changes in all the
niches that people have an interest in.

That might be useful.  But 'mandating' something that the people who will
do it were going to do it anyway, and the people who were not are still
not going to do, doesn't seem to add any real value here to either users
or implementers.  It won't explain anything to anybody that they don't
already know if it is of any interest to them.
",<20130313142732.GE12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 00:57:32
4223,RtcWEB,43,873,"InformationProviding,NeutralResponse,InformationProviding",865,-1,There are 6.4 billion cellular connections worldwide.,<20130313143808.DB3BD21F8E0C@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 10:37:45
4224,RtcWEB,43,942,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",873,-1,"
http://www.3gpp.org/3GPP-Family-2012-Statistics",<20130313143808.DB3BD21F8E0C@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 10:37:45
4225,RtcWEB,43,961,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",873,-1,"
Following that logic we'd mandate GSM.610 since _all_ of those 6B devices support it.

I'd also like to point out that the ""massive"" transcoding cited already occurs between mobile devices
that support various codecs (GSM, AMR etc) and the PSTN - (g711, g729) and the sky hasn't fallen yet.

Tim.",<D4421FE8-E18E-4248-9051-23C18899B40F@phonefromhere.com>,tim@phonefromhere.com,0.0,0,8,2013-03-13 16:11:08
4226,RtcWEB,43,1013,"InformationProviding,NeutralResponse,ContextSetting,Disagreement",961,961,"
But transcoding to G.711 has simply absolutely nothing to do in terms of impact on gateways costs and capacities !
Transcoding to G.711 almost cost nothing.
For your information: complexity of G.711 is around 0,01 WMPOS when AMR-WB is at 40 WMOPS and OPUS still higher...
So we speak about a factor of more than 1000 in terms  transcoding complexity and related impact on gateways !
And even with respect to AMR, G.722 or AMR-WB, transcoding from/to OPUS will still be more costly

Stéphane

-----Message d'origine-----
De : rtcweb-bounces@ietf.org [mailto:rtcweb-bounces@ietf.org] De la part de Tim Panton
Envoyé : mercredi 13 mars 2013 17:11
À : Bogineni, Kalyani
Cc : rtcweb@ietf.org; MARJOU Xavier OLNC/OLN
Objet : Re: [rtcweb] Agenda time request for draft-marjou-rtcweb-audio-codecs-for-interop-01
",<3769_1363194737_5140B371_3769_3650_1_6ccb4089-ab79-4913-a456-72b68a77f9a0@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 17:12:06
4227,RtcWEB,43,1015,NeutralResponse,961,960,"
Following that logic we'd mandate GSM.610 since _all_ of those 6B devices support it.

I'd also like to point out that the ""massive"" transcoding cited already occurs between mobile devices that support various codecs (GSM, AMR etc) and the PSTN - (g711, g729) and the sky hasn't fallen yet.

Tim.
rtcweb mailing list
rtcweb@ietf.org
https://www.ietf.org/mailman/listinfo/rtcweb
",<3769_1363194737_5140B371_3769_3650_1_6ccb4089-ab79-4913-a456-72b68a77f9a0@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 17:12:06
4228,RtcWEB,43,1036,"InformationProviding,NeutralResponse,NeutralResponse",1013,1013,"
When the PSTN <-> mobile network gateways were first set up the cpus were 1000x slower.
No one seriously considered imposing G711 on the mobile network, because it was unsuitable.

T.",<D8D912E4-513B-453E-9801-CDC01CF7E6CB@phonefromhere.com>,tim@phonefromhere.com,0.0,0,8,2013-03-13 19:35:14
4229,RtcWEB,43,1076,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",961,961,"
Actually, the list of useful legacy codecs should also include Speex,
which is shipped in about 1B Flash-enabled browsers that may not have
WebRTC for some time.
",<5140D43A.2050901@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:32:10
4230,RtcWEB,43,1147,NeutralResponse,869,869,that would imply this is never mandatory ...,<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4231,RtcWEB,43,1182,"InformationProviding,NeutralResponse,NeutralResponse","873,942",942,"
Then it will really be transformational for them to support Opus as a
webrtc requirement. I look forward to all these Opus devices

CB
",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4232,RtcWEB,43,1186,NeutralResponse,865,865,"service to or between 'low bandwidth' devices is almost surely going to
support more than just WebRTC, and is going to have to transcode for most
or all of them anyway.  Adding an extra burden to WebRTC, especially one
that would only ever apply to some small subset of users, wouldn't appear
to make a significant difference in the requirements for such a system.",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4233,RtcWEB,43,1188,Question,867,867,"significantly worse than the intrinsic quality degradation suffered by
using AMR alone?",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4234,RtcWEB,43,1191,Question,869,869,"or have their own good reasons to are free to implement any other codecs
they please - and that they already have, and certainly will continue to do
so?",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4235,RtcWEB,43,1193,Question,870,870,"for particular niche uses unless this is going to be some sort of separate
informational document, that is kept up to date with changes in all the
niches that people have an interest in.",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4236,RtcWEB,43,1194,NeutralResponse,870,870,"do it were going to do it anyway, and the people who were not are still not
going to do, doesn't seem to add any real value here to either users or
implementers.  It won't explain anything to anybody that they don't already
know if it is of any interest to them.",<CAD6AjGQJ_pi5QOKp+ifcGHM1prD2cx9oxcBPxxkZB0VPZYmZNQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-13 11:17:39
4237,RtcWEB,43,1321,"InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse",286,-1,"Hi All,

I thought the suggested text that came from Andrew Allen a couple of months ago was a good compromise.

I repeat it below.
",<9F33F40F6F2CD847824537F3C4E37DDF06899848@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-03-13 18:41:57
4238,RtcWEB,43,1335,"InformationProviding,ProposeAction,NeutralResponse",285,285,"I would like to propose that someone (it's out of scope for this group) make it mandatory
to implement open APIs so that all applications on these devices can use all the
codecs implemented in hardware. That's not the case now.

/O",<7897A33F-F73A-4C39-B4DA-16F014A43C5C@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-13 15:40:34
4239,RtcWEB,43,1352,ProposeAction,285,285,I would like to propose that someone (it's out of scope for this group) make it mandatory to implement open APIs so that all applications on these devices can use all the codecs implemented in hardware. That's not the case now.,<BBF5DDFE515C3946BC18D733B20DAD2338D28848@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:58:19
4240,RtcWEB,43,1362,"InformationProviding,NeutralResponse,Disagreement",1335,-1,"I think this would be completely out of scope of IETF.
",<BBF5DDFE515C3946BC18D733B20DAD2338D28848@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:58:19
4241,RtcWEB,43,1365,ExtensionOfPrevious,285,285,"
/O
rtcweb mailing list
rtcweb@ietf.org
https://www.ietf.org/mailman/listinfo/rtcweb

This transmission (including any attachments) may contain confidential information, privileged material (including material protected by the solicitor-client or other applicable privileges), or constitute non-public information. Any use of this information by anyone other than the intended recipient is prohibited. If you have received this transmission in error, please immediately reply to the sender and delete this information from your system. Use, dissemination, distribution, or reproduction of this transmission by unintended recipients is not authorized and may be unlawful.",<BBF5DDFE515C3946BC18D733B20DAD2338D28848@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:58:19
4242,RtcWEB,43,1400,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement",1362,1362,"
Agree. So assuming that these codecs are available just because some hardware in a device has
a licensed implementation is not a valid assumption for a codec selection as long as we can't
assume that any application on that device has access to it.

/O",<8B7442F6-5393-4C5C-88B6-A680742F60E7@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-13 16:17:47
4243,RtcWEB,43,1456,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement",1400,-1,"
I agree with you which is why a few months ago I proposed the following text that had the ""are available to the browser"" caveat",<BBF5DDFE515C3946BC18D733B20DAD2338D2897F@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 15:23:36
4244,RtcWEB,43,1457,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1456,-1,"
""If other suitable audio codecs are available to the browser to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding""",<BBF5DDFE515C3946BC18D733B20DAD2338D2897F@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 15:23:36
4245,RtcWEB,43,1521,"InformationSeeking,InformationProviding,Agreement,ProposeAction,ExtensionOfPrevious",1457,1457,"
Exactly. I don't think everyone gets the that selecting a small subset as mandatory for WebRTC does NOT exclude all other codecs. Feel
free to add everything you got. Have fun. Let the best mutual codec with the best mutual properties win the session.

/O",<3C89A60B-3171-49B0-A78F-304337DF8D3D@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-13 16:42:36
4246,RtcWEB,43,1535,"InformationProviding,Agreement,ProposeAction,Agreement",1521,1521,"
Olle hit the nail squarely on the head. This is exactly the purpose of
offer/answer negotiation: to find the best intersection of endpoint
capabilities for the desired communication session. I'm bewildered by
the fairly consistent misinterpretation that having an MTI codec somehow
implies that every other codec becomes ""MNTI"".

/a",<5140BC2C.90206@nostrum.com>,adam@nostrum.com,0.0,0,1,2013-03-13 13:49:32
4247,RtcWEB,43,1576,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1535,-1,"Let's not pretend that we got 500 different implementations of WebRTC and
that every one is making one. We got 4 or 5 that potentially matter, with 3
of them currently sharing the same code based for audio. All of the
currently available WebRTC implementations support G.711. Opus, and (most
likely deprecated in near future) ISAC. So far, the feedback I got was that
if codec is not MTI, it will not be implemented by the major browsers. For
instance, G.722 is part of current WebRTC code base, but it is disabled in
compile time from being accessible in the browsers.",<CAD5OKxsHUfSMJge3LsGhxW9=gm31UVEp_4=3+b8bz8O7nkJg5g@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 14:01:57
4248,RtcWEB,43,1577,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",1576,-1,"
So, if I, or anyone else, is implementing a web browser, I can add other
codecs, but this would serve no purpose whatsoever and is irrelevant to
this discussion.",<CAD5OKxsHUfSMJge3LsGhxW9=gm31UVEp_4=3+b8bz8O7nkJg5g@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 14:01:57
4249,RtcWEB,43,1589,"InformationProviding,NeutralResponse,NeutralResponse",1576,1576,"
Our implementation in Firefox doesn't support ISAC.

-r",<5143475A.8070101@thaumas.net>,giles@thaumas.net,0.0,0,11,2013-03-15 12:07:54
4250,RtcWEB,43,1591,"Agreement,Agreement",1535,-1,+1,<BBF5DDFE515C3946BC18D733B20DAD2338D28B68@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 18:11:37
4251,RtcWEB,43,1622,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1591,-1,"
It seems clear to me that other codecs will be included by most if not all RTCweb compliant browsers but which ones should be left up to implementers based on commercial decisions and which ones they include may change over time as codecs become obsoleted by new codecs. The MTIs are the ones that will always be supported to ensure interoperability other codecs will be supported when it makes sense.",<BBF5DDFE515C3946BC18D733B20DAD2338D28B68@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 18:11:37
4252,RtcWEB,43,1653,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1535,1535,"
This seems to be the key point - we aren't dividing codecs into two
buckets, one labelled MUST implement and one labelled MUST NOT
implement.  Codecs outside the MTI set can still be implemented and
will be implemented if it makes sense to the implementer.

Conversely, even if you get an RFC with dozens of ""MUST implement
<favourite codec>"" in it, there won't be any protocol police to
enforce it if implementers decide it doesn't make sense (economic or
otherwise) for them to support those codecs.  There are plenty of
MUSTs in other RFCs that are routinely ignored, after all.
",<CAPms+wSRQqU8SXfz69UEyLDi+o2LRcinRUWfXZ-VmkdcWAcCnw@mail.gmail.com>,michael@voip.co.uk,0.0,0,10,2013-03-13 20:53:45
4253,RtcWEB,43,1679,"InformationProviding,NeutralResponse",865,-1,"WebRTC standard must do the best to avoid transcoding when communications
happen towards ""legacy"" devices.",<CAErhfrwxd_rhXwMiovgknJSEGQJT4=OXhpGUsyNWAvNuNdseyQ@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 11:17:44
4254,RtcWEB,43,1680,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,ContextSetting",1679,-1,"
Another way to illustrate that is an analogy with human languages: suppose
there are two French native speakers and they have to speak English to talk
with each other: this results in additional efforts, decreased quality of
conversation, additional delays... all these details are significant for
the quality of the communication.",<CAErhfrwxd_rhXwMiovgknJSEGQJT4=OXhpGUsyNWAvNuNdseyQ@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 11:17:44
4255,RtcWEB,43,1681,"InformationProviding,ExtensionOfPrevious,ContextSetting,Social,ExtensionOfPrevious",1680,-1,"
(of course there are some exceptions in my analogy: there exists French
native speakers who can also speak English fluently, in particular some
Quebecois folks on the list ;-)",<CAErhfrwxd_rhXwMiovgknJSEGQJT4=OXhpGUsyNWAvNuNdseyQ@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 11:17:44
4256,RtcWEB,43,1682,"Question,Question",867,-1,"
Are you aware of the listening tests presented to the CODEC WG?",<CAErhfrwxd_rhXwMiovgknJSEGQJT4=OXhpGUsyNWAvNuNdseyQ@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2013-03-13 11:17:44
4257,RtcWEB,43,1730,"InformationProviding,NeutralResponse,ProposeAction,Social,NeutralResponse",1679,1679,"
That's a pretty general and well known principle that doesn't need mandating
specially for WebRTC or is in any way unique to it.

So maybe the ""legacy"" devices should just add Opus support then :)

It's not like 4 billion of the 6 billion aren't less than 2 years old, or
are not firmware upgradeable ...

And it's not like (the many) people who are jailbreaking them aren't doing
that for themselves already ...
",<20130313161446.GG12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 02:44:46
4258,RtcWEB,43,1732,"InformationSeeking,Question,InformationProviding,Agreement,ProposeAction,Social,Question,NeutralResponse",1681,1681,"
Right, and the French and English they speak today isn't the same French
and English they spoke in mediaevil times :)

We could equally consider this an incentive for the legacy device makers
to move forward.  That seems like a much better outcome for everyone
than trying to drag the new format backward would bring.

Doesn't it?",<20130313161446.GG12022@audi.shelbyville.oz>,ron@debian.org,0.0,0,8,2013-03-14 02:44:46
4259,RtcWEB,43,1765,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1730,-1,"Normally, when implementing VoIP devices, unless they are intended for some
sort of walled garden, you try to support as many codecs as possible. This
increases your chances of interoperability with other devices and your
product adoption. In case of WebRTC, it would be adopted regardless of what
codecs are supported. The number of enabled devices would be so great that
all the legacy networks will have to adapt. This has some negative
implications to the legacy networks as far as quality and costs are
concerned, but these challenges are not insurmountable. So, taking this
into consideration, I want to place the same questions differently:",<CAD5OKxubq2uLi5gaJ=LMn0VgfcP-vUbV5BS909SLu5A__CU+6w@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 13:12:49
4260,RtcWEB,43,1766,"Question,ExtensionOfPrevious,Question,ExtensionOfPrevious",1765,-1,"
Do web browser implementers currently plan to support any other codecs
except MTI (G.711 and OPUS)?",<CAD5OKxubq2uLi5gaJ=LMn0VgfcP-vUbV5BS909SLu5A__CU+6w@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 13:12:49
4261,RtcWEB,43,1767,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question",1766,-1,"
Is there anything we are going to say here regarding legacy interop that
would make browser manufacturers to change their mind? After all, this
represents additional cost to them with no direct benefit for the use cases
which are most important to them (browser to browser calls).",<CAD5OKxubq2uLi5gaJ=LMn0VgfcP-vUbV5BS909SLu5A__CU+6w@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 13:12:49
4262,RtcWEB,43,1768,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,NeutralResponse",1767,-1,"
For me, the desired outcome would be that browsers, at least for the next
few years, do support a reasonable set of other codecs in addition to MTI,
including G.722, AMR, AMR-WB, and may be Speex, . This would give me an
opportunity to migrate from devices that support legacy codecs to devices
that support Opus. The fact that different browser versions would support
different codec sets (like desktop browsers not supporting AMR) is not a
big issue, at least for me, since we always have G.711 or transcoding to
fall back to. The same goes for browsers fazing some of the legacy codecs
out in the future. The end result would still be better then 100% G.711 or
transcoding.",<CAD5OKxubq2uLi5gaJ=LMn0VgfcP-vUbV5BS909SLu5A__CU+6w@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 13:12:49
4263,RtcWEB,43,1793,"InformationProviding,Agreement,NeutralResponse",1766,-1,"If there is a business case for implementers to support other codecs for improved inteoperability with other networks and devices then they are very likely to do so.
",<BBF5DDFE515C3946BC18D733B20DAD2338D28AC3@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 17:29:33
4264,RtcWEB,43,1795,"Question,NeutralResponse",,-1,"
Normally, when implementing VoIP devices, unless they are intended for some sort of walled garden, you try to support as many codecs as possible. This increases your chances of interoperability with other devices and your product adoption. In case of WebRTC, it would be adopted regardless of what codecs are supported. The number of enabled devices would be so great that all the legacy networks will have to adapt. This has some negative implications to the legacy networks as far as quality and costs are concerned, but these challenges are not insurmountable. So, taking this into consideration, I want to place the same questions differently:

Do web browser implementers currently plan to support any other codecs except MTI (G.711 and OPUS)?

Is there anything we are going to say here regarding legacy interop that would make browser manufacturers to change their mind? After all, this represents additional cost to them with no direct benefit for the use cases which are most important to them (browser to browser calls).

For me, the desired outcome would be that browsers, at least for the next few years, do support a reasonable set of other codecs in addition to MTI, including G.722, AMR, AMR-WB, and may be Speex, . This would give me an opportunity to migrate from devices that support legacy codecs to devices that support Opus. The fact that different browser versions would support different codec sets (like desktop browsers not supporting AMR) is not a big issue, at least for me, since we always have G.711 or transcoding to fall back to. The same goes for browsers fazing some of the legacy codecs out in the future. The end result would still be better then 100% G.711 or transcoding.
Roman Shpount
",<BBF5DDFE515C3946BC18D733B20DAD2338D28AC3@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 17:29:33
4265,RtcWEB,43,1796,"InformationProviding,ProposeAction,Social,ExtensionOfPrevious",1793,-1,"
This transmission (including any attachments) may contain confidential information, privileged material (including material protected by the solicitor-client or other applicable privileges), or constitute non-public information. Any use of this information by anyone other than the intended recipient is prohibited. If you have received this transmission in error, please immediately reply to the sender and delete this information from your system. Use, dissemination, distribution, or reproduction of this transmission by unintended recipients is not authorized and may be unlawful.",<BBF5DDFE515C3946BC18D733B20DAD2338D28AC3@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 17:29:33
4266,RtcWEB,43,1838,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",1793,-1,"The problem is that the business case for the device vendor or end user may not be the business case for the browser vendor.

To be honest this discussion goes round and round in circles, with people trying to say things are out of scope.

What I believe we need is something that encourages creation of APIs for embedded codecs in the devices. Those API's should then be made available within the browser.

This gets even more important when we get to video codecs. I am certainly interested in gateways from RTCWEB endpoints to other SIP based networks. Having to transcode from one video codec to another because of this impasse is a nightmare.

Someone has to break this loop.

Keith
",<949EF20990823C4C85C18D59AA11AD8B013D9D@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-13 17:36:57
4267,RtcWEB,43,1840,NeutralResponse,,-1,"
If there is a business case for implementers to support other codecs for improved inteoperability with other networks and devices then they are very likely to do so.
",<949EF20990823C4C85C18D59AA11AD8B013D9D@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-13 17:36:57
4268,RtcWEB,43,1842,"Question,NeutralResponse",,-1,"
Normally, when implementing VoIP devices, unless they are intended for some sort of walled garden, you try to support as many codecs as possible. This increases your chances of interoperability with other devices and your product adoption. In case of WebRTC, it would be adopted regardless of what codecs are supported. The number of enabled devices would be so great that all the legacy networks will have to adapt. This has some negative implications to the legacy networks as far as quality and costs are concerned, but these challenges are not insurmountable. So, taking this into consideration, I want to place the same questions differently:

Do web browser implementers currently plan to support any other codecs except MTI (G.711 and OPUS)?

Is there anything we are going to say here regarding legacy interop that would make browser manufacturers to change their mind? After all, this represents additional cost to them with no direct benefit for the use cases which are most important to them (browser to browser calls).

For me, the desired outcome would be that browsers, at least for the next few years, do support a reasonable set of other codecs in addition to MTI, including G.722, AMR, AMR-WB, and may be Speex, . This would give me an opportunity to migrate from devices that support legacy codecs to devices that support Opus. The fact that different browser versions would support different codec sets (like desktop browsers not supporting AMR) is not a big issue, at least for me, since we always have G.711 or transcoding to fall back to. The same goes for browsers fazing some of the legacy codecs out in the future. The end result would still be better then 100% G.711 or transcoding.
Roman Shpount

This transmission (including any attachments) may contain confidential information, privileged material (including material protected by the solicitor-client or other applicable privileges), or constitute non-public information. Any use of this information by anyone other than the intended recipient is prohibited. If you have received this transmission in error, please immediately reply to the sender and delete this information from your system. Use, dissemination, distribution, or reproduction of this transmission by unintended recipients is not authorized and may be unlawful.",<949EF20990823C4C85C18D59AA11AD8B013D9D@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-13 17:36:57
4269,RtcWEB,43,1902,"InformationProviding,NeutralResponse,ProposeAction,Disagreement",1838,-1,"
That is out of scope of IETF. What I think you are suggesting amounts to operating system standardisation.",<BBF5DDFE515C3946BC18D733B20DAD2338D28B32@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 18:05:56
4270,RtcWEB,43,1903,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1902,-1,"
If you believe in the market then the business case of the browser implementers and the device vendors should align with the interests of the users (I.e their customers) assuming the costs are not prohibitive.",<BBF5DDFE515C3946BC18D733B20DAD2338D28B32@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 18:05:56
4271,RtcWEB,43,1906,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1902,-1,"And too many people are hiding behind the statement ""we don't own all the problem"" to ensure there will be no solution to the problem.",<949EF20990823C4C85C18D59AA11AD8B014285@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-13 22:03:24
4272,RtcWEB,43,1978,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",1906,-1,"
At the end of the day, the example already given of someone having had to pay for an AMR licence for an i-phone should not exist, because it means there are now two licensed versions of that codec on the i-phone.",<949EF20990823C4C85C18D59AA11AD8B014285@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-13 22:03:24
4273,RtcWEB,43,1981,"InformationProviding,Answer,Disagreement",286,-1,I think this draft is not consistent with the scope stated by the RTCweb chairs in the decision on this topic  back in February,<BBF5DDFE515C3946BC18D733B20DAD2338D2870F@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:30:20
4274,RtcWEB,43,2079,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",1981,-1,"
""Additional Relevant Codecs"". That can contain a list of codecs which are relevant in specific  contexts, along with a short description of the context for each. Specifically there seems to be interest in understanding the  advantages and costs of G.722, AMR, and AMR-WB. We hope that text would broaden understanding of the WebRTC use case contexts.
The current draft goes way beyond that decision in scope and uses MUST and SHOULD strength normative language instead of focusing on identifying the advantages and costs of the specific codecs and the use case contexts of where they are useful.",<BBF5DDFE515C3946BC18D733B20DAD2338D2870F@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:30:20
4275,RtcWEB,43,2080,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",2079,-1,"
I think we should stick to the scope defined by the chairs and remove the normative language and focus on identifying the advantages and costs of the specific codecs and the use case contexts of where they are useful..",<BBF5DDFE515C3946BC18D733B20DAD2338D2870F@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 14:30:20
4276,RtcWEB,43,2216,"InformationProviding,NeutralResponse,NeutralResponse",1981,-1,"draft-marjou-rtcweb-audio-codecs-for-interop-01 is based on the recommendation
and clarification from the Chair regarding the conclusion (included below).",<20130313151439.A3F0621F8606@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-13 11:14:16
4277,RtcWEB,43,2352,Social,,-1,"
Hi,",<5140D259.6010208@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:24:09
4278,RtcWEB,43,2353,"InformationSeeking,InformationProviding,Answer,ProposeAction,Disagreement,NeutralResponse",286,-1,"
I'd really like to understand how the chairs coming to the conclusion
that there was *no consensus* on recommended codecs can result in a
draft that includes 3 MUSTs and 1 SHOULD. This draft effectively makes
3 new codecs MTI for a range of devices. I understand that it's an
individual draft and you can write whatever you like in there, but it
definitely goes against the result of the WG discussion.",<5140D259.6010208@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:24:09
4279,RtcWEB,43,2356,Social,,-1,Hello,<31611_1363203420_5140D55C_31611_11752_1_cb7bfd1e-a4ca-40ba-bbbc-cb23fb3f3edb@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 19:36:52
4280,RtcWEB,43,2522,"InformationProviding,NeutralResponse,Answer",2353,-1,"
Our understanding is that the reason of the ""no consensus"" on additional recommended codecs was the additional costs for browsers.
The proposal is then to make these ""MUST"" fully conditional to the case of no (or very reduced) additional costs, when the codecs are already available on the device and when no additional license fee is required",<31611_1363203420_5140D55C_31611_11752_1_cb7bfd1e-a4ca-40ba-bbbc-cb23fb3f3edb@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 19:36:52
4281,RtcWEB,43,2523,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",2522,-1,"
We could even live with lower level of ""requirements"" with respectively May and Should (instead of Should and shall) but we think that this proposal is a way to take into account both browser manufacturers concerns on browsers costs and telcos concerns on transcoding costs and some other companies share this view.",<31611_1363203420_5140D55C_31611_11752_1_cb7bfd1e-a4ca-40ba-bbbc-cb23fb3f3edb@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 19:36:52
4282,RtcWEB,43,2573,"InformationProviding,Disagreement,ProposeAction,NeutralResponse",2522,2522,"
I think this understanding is wrong, or else there would have been
consensus on recommending G.722. People (including myself) objected on
the basis that SHOULD/RECOMMENDED is too strong for an optional codec.
",<5140D995.5050702@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:55:01
4283,RtcWEB,43,2575,"InformationProviding,ProposeAction,NeutralResponse",2523,2523,"
It should all be MAY unless the WG agrees on making any of these
codecs a SHOULD -- which has not happened yet AFAIK.
",<5140D995.5050702@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:55:01
4284,RtcWEB,43,2578,Social,,-1,"Hi Stephane, Xavier,",<E44893DD4E290745BB608EB23FDDB7623BD723@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-13 21:36:51
4285,RtcWEB,43,2790,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",2522,-1,"
I understand the intent of your proposal. I'm not sure if the IETF is the best venue for you to pursue it, however. Perhaps you as a mobile operator should rather set it as a requirement to your mobile device platforms that they open up the APIs to AMR and AMR-WB and that at least the in-built default browser needs to support it. If there are enough operators setting such requirements directly to the device and platform vendors, it probably has a bigger impact than an IETF RFC. Getting that support for user-installed additional browsers might be more difficult, but most mobile device users stick with the default browser anyway.",<E44893DD4E290745BB608EB23FDDB7623BD723@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-13 21:36:51
4286,RtcWEB,43,2791,"ExtensionOfPrevious,ProposeAction,NeutralResponse",2790,-1,"
The RTCWEB codec document needs to definitely explain this case and the benefits, but the conditional MUSTs or SHOULDs you are proposing are perhaps a bit too complicated. Hmm, perhaps we need to do an _informational_ RFC as something like ""Recommendations for WebRTC on Mobile Devices"" addressing the codec and perhaps other issues, that you could use as a reference in your requirements.",<E44893DD4E290745BB608EB23FDDB7623BD723@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-13 21:36:51
4287,RtcWEB,43,3047,"InformationSeeking,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Social,Thanking,Thanking,Question,NeutralResponse",2790,-1,"Dear Markus

Thanks for your attempt to help !

Of course each Telco can handle this directly with vendors and browsers manufacturers at business level. But I don't'think this need of interoperability with mobile devices is specific to Orange. I think all mobile operators will have the same issue and this is why standardization exist. It's most cost and time efficient to have one common way forward for all the industry.

Then if the issue is that ""conditional MUST/SHOULD are a too complicated requirement. We could also live as a compromise with a formulation that has already been suggested on the reflector:

""If other suitable audio codecs are available to the browser to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding""
If possible with the addition of
This is especially the case for AMR, AMR-WB for interoperability with mobile devices and G.722 for interoperability with fixed DECT CAT-iq devices

Would it have one chance to reach consensus ?

I think this Group should at least make one small step so that the interoperability issue with mobile terminals be not fully ignored in the RTC Web specification considering the huge number of deployed devices. At least something must be written on this ! G.711 which is the only codec in addition to OPUS for interoperability purpose is not a proper answer to this.

Stéphane

-----Message d'origine-----
De : Markus.Isomaki@nokia.com [mailto:Markus.Isomaki@nokia.com]
Envoyé : mercredi 13 mars 2013 22:37
À : PROUST Stephane OLNC/OLPS; jmvalin@mozilla.com; MARJOU Xavier OLNC/OLN
Cc : rtcweb@ietf.org
Objet : RE: [rtcweb] Agenda time request for draft-marjou-rtcweb-audio-codecs-for-interop-01

Hi Stephane, Xavier,

I understand the intent of your proposal. I'm not sure if the IETF is the best venue for you to pursue it, however. Perhaps you as a mobile operator should rather set it as a requirement to your mobile device platforms that they open up the APIs to AMR and AMR-WB and that at least the in-built default browser needs to support it. If there are enough operators setting such requirements directly to the device and platform vendors, it probably has a bigger impact than an IETF RFC. Getting that support for user-installed additional browsers might be more difficult, but most mobile device users stick with the default browser anyway.

The RTCWEB codec document needs to definitely explain this case and the benefits, but the conditional MUSTs or SHOULDs you are proposing are perhaps a bit too complicated. Hmm, perhaps we need to do an _informational_ RFC as something like ""Recommendations for WebRTC on Mobile Devices"" addressing the codec and perhaps other issues, that you could use as a reference in your requirements.

Markus
",<31611_1363212891_5140FA5B_31611_17197_1_35788a76-852d-49ce-8987-d2be2f21fcaf@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 22:14:43
4288,RtcWEB,43,3325,"InformationProviding,Answer,Disagreement,ProposeAction,Disagreement",3047,-1,"No this wouldn't be acceptable to me.

I don't see a reason to push a particular set of Codecs over any other set of codecs supported on the device. If the device supports the codecs and they are available to the browser then we should recommend that they be offered in the negotiation.

The marjou draft can advertise the merits and reasons why they are good codecs to support.
",<BBF5DDFE515C3946BC18D733B20DAD2338D28EA3@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 22:40:57
4289,RtcWEB,43,3332,"InformationProviding,NeutralResponse,NeutralResponse",3325,-1,The reason is simply that AMR and AMR-WB are supported in billions of devices !,<3246_1363214890_5141022A_3246_1976_1_34a49fde-fad7-4a0a-8b01-9d48a5b6eeab@PEXCVZYH01.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-13 22:48:01
4290,RtcWEB,43,3940,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",3332,-1,"I think the if available to the browser text applies to all codecs regardless of whether there are billions or only hundreds of other devices that support a codec.

It shoulld be appreciated that the number of devices supporting a particular codec are snapshots in time and this will likely change - either increasing or decreasing in the future and the specifications we write now should be as future proof as possible and not have a built in best before date.
",<BBF5DDFE515C3946BC18D733B20DAD2338D28EE2@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 23:00:54
4291,RtcWEB,43,3952,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social",3940,1015,"
This transmission (including any attachments) may contain confidential information, privileged material (including material protected by the solicitor-client or other applicable privileges), or constitute non-public information. Any use of this information by anyone other than the intended recipient is prohibited. If you have received this transmission in error, please immediately reply to the sender and delete this information from your system. Use, dissemination, distribution, or reproduction of this transmission by unintended recipients is not authorized and may be unlawful.",<BBF5DDFE515C3946BC18D733B20DAD2338D28EE2@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-13 23:00:54
4292,RtcWEB,43,4343,"Question,InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,Social,Apologising,Question",3332,3332,"
Just curious, why exclude from the list other codecs with similar huge
deployment? I can think of at least:
- - GSM-FR (mobile)
- - Speex (Flash)
- - G.729 (PSTN gateways)
- - iLBC (PSTN gateways)
- - G.726 (DECT)
- - SILK (original non-Opus version in Skype)

(sorry, if I missed someone's favorite codec in this list)

It's not at all clear to me what's so special that makes AMR, AMR-WB
and G.722 different from the other codecs in the list above. Not that
I insist on shipping G.729 :-)

Personally, I'd favor a draft that included a lot more codecs,
describing for each one the benefits of supporting it. Implementers
could then choose which of these they care about for their particular
situation.
",<51415833.1050503@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-14 00:55:15
4293,RtcWEB,43,4734,"InformationProviding,Answer,ProposeAction,Social,Answer",4343,-1,"Hello

The short list is aligned to what is specified in 3GPP (mobile) and CAT-iq (fixed). Check the related service specifications!
The short list (AMR, AMR-WB, G.722) is a minimal subset of codecs to minimize interop issues and transcoding costs for telco services.
It's not a question of what's the favourite codec for a given application. It's interop with billions of mobile phones and with fixed terminals in legacy telephony services.

Stéphane

-----Message d'origine-----
De : Jean-Marc Valin [mailto:jmvalin@mozilla.com]
Envoyé : jeudi 14 mars 2013 05:55
À : PROUST Stephane OLNC/OLPS
Cc : Andrew Allen; Markus.Isomaki@nokia.com; MARJOU Xavier OLNC/OLN; rtcweb@ietf.org
Objet : Re: [rtcweb] Agenda time request for draft-marjou-rtcweb-audio-codecs-for-interop-01

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
",<12711_1363264558_5141C42E_12711_1015_1_44e82a49-a4d3-4020-b26c-df36435f3ac8@PEXCVZYH01.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-14 12:35:45
4294,RtcWEB,43,5142,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement",4734,-1,"I support this statement.

The reason to support AMR, AMR-WB and G722 is to have a minimal set of common audio codecs available to avoid transcoding in the common cases.

-Espen
",<E8F5F2C7B2623641BD9ABF0B622D726D0F6A48EF@xmb-rcd-x11.cisco.com>,espeberg@cisco.com,0.0,0,13,2013-03-14 12:59:46
4295,RtcWEB,43,5562,"InformationProviding,ProposeAction,NeutralResponse",4734,4734,"
The problem is that WebRTC and legacy services live in separate networks: the open Web vs proprietary Telco networks.

WebRTC connecting to a Telco network would have to go through a Gateway.  The PSTN termination providers who run these Gateways support G.711, G.729 and perhaps some other  codecs like iLBC.  They do not, however, support the codecs you are advocating for.

The lack of support for Transcoding-Free Operation by Telcos to the rest of the world has been hurting interop voice quality for a long time, but unfortunately we can't fix that here at the IETF.

We can fit our cars with your costly railroad wheels, but you still wouldn't let us on your tracks.

koen.
",<c686ee114a494e6ca76354227f92423e@DFM-CO1MBX15-04.exchange.corp.microsoft.com>,koen.vos@skype.net,0.0,0,13,2013-03-14 20:32:20
4296,RtcWEB,43,5598,"InformationProviding,Agreement,ContextSetting,Agreement,NeutralResponse",5562,5562,"I would got to agree with you regarding cell phone operators, since we've
been trying to get access to native AMR-WB for years.

On the other hand, this is kind of interesting to hear coming from someone
from Skype, which does not allow connections using SILK from outside of
their own network, which has been hurting interop voice quality for a long
time as well.

Finally, it is possible to connect to almost any hosted PBX provider, as
well as quite a few premise based PBXs, using G.722, as long as their end
points support it.",<CAD5OKxs_RozTRdDTrqMWechLCeN8HTj_Av_rEOfJM8pwxm29dw@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-14 16:41:55
4297,RtcWEB,43,5632,"InformationProviding,Social,NeutralResponse",5598,5598,"
Skype has ever used ""interop with the 100s of millions of our endpoints"" as an argument :)

koen.
",<aa03077fa902416bb7d6c776b95b4749@DFM-CO1MBX15-04.exchange.corp.microsoft.com>,koen.vos@skype.net,0.0,0,13,2013-03-14 20:57:06
4298,RtcWEB,43,5636,"InformationProviding,Agreement,ProposeAction,NeutralResponse",5562,-1,"Koen is right that there are many more obstacles to RTCweb and legacy network interop than just a common codec. First there will need to be RTCweb signaling gateways to interface between the RTCweb signaling and the legacy networks (SIP, H.323 etc) and there will need to be in place mechanisms for peering, federation and address resolution between networks as well as service agreements in place between the players.",<BBF5DDFE515C3946BC18D733B20DAD2338D2B178@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-14 21:09:35
4299,RtcWEB,43,6070,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",5636,-1,"
Until those are resolved supporting codecs used in those networks is pointless.",<BBF5DDFE515C3946BC18D733B20DAD2338D2B178@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-14 21:09:35
4300,RtcWEB,43,6093,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",6070,6070,"
These issues are resolved. See one example here: http://webrtc2sip.org/.
These solutions do suffer from the need to transcode, this is why this
codec discussion has been going on.",<CAD5OKxt8QbBQ0oSmiMt-7HP8kfthA4O-qBrs+NmcKQSCP8-9BA@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-14 17:17:11
4301,RtcWEB,43,6111,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Social,NeutralResponse",6070,6070,"
There are already WebRTC-SIP gateways, as I think you know.  I know of two SBC vendors who are in customer labs with it, for example, and there are probably more.  And yes at least one of them, and probably both, can transcode the audio... though it's by no means free.  I don't know if the business case justifies the cost or not for WebRTC use-cases - it appears to in some cases, not others.

It costs far more than has been discussed on this list though, because we think like engineers and consider the cost as a CAPEX issue; whereas in practice the OPEX costs often dwarf the CAPEX ones.  In some data centers, for example, the local Real-Estate costs dwarf CAPEX too, and using less rack-space can pay for a product in no time. (there's an entire company out there that built its business leveraging this fact, replacing POTS switches with much-higher-density ones purely based on rack-space usage savings)

Anyway... moving on to your other point of federation/peering/etc. - I think the use-case that mobile operators have in mind is fairly obvious, and it clearly doesn't have that problem.  Whether you agree with helping that use-case or not is up to you and the rest of this WG, of course.  I'm just noting that peering isn't an obstacle for it.

-hadriel
p.s. Transcoding video, on the other hand, is untenable for pretty much anyone.  I have never heard of a business-case which justifies it, because it simply doesn't scale.  Except for maybe companies that live on other revenue sources, for whom all of this stuff is a rounding error in their IT budget. ;)",<21233D03-64FD-43D0-863E-18FC55BD0924@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2013-03-14 22:37:29
4302,RtcWEB,43,6113,"InformationProviding,NeutralResponse,NeutralResponse",6111,-1,My response was directed to the current deployment situation and the comment/concern that currently the pre standard RTCweb browser implementations do not support Codecs used in some legacy networks.,<BBF5DDFE515C3946BC18D733B20DAD2338D2B9A1@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 13:55:13
4303,RtcWEB,43,6148,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",6113,-1,"
While the technology may be there and the products even available they are not widely deployed today so currently there is not a business case for browser vendors to include these codecs as today practical interoperability is not possible.",<BBF5DDFE515C3946BC18D733B20DAD2338D2B9A1@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 13:55:13
4304,RtcWEB,43,6149,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",6148,-1,"
Right now browser implementors are focused solely on achieving interoperability between browsers I expect. The additional codecs for legacy interop will I expect come in the future when the infrastructure is deployed to make this possible and if the right business case is there to make it commercially viable.",<BBF5DDFE515C3946BC18D733B20DAD2338D2B9A1@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 13:55:13
4305,RtcWEB,43,6746,"Question,InformationProviding,ProposeAction,Social,Question",6070,-1,"Hi Andrew,
but where will you start and where will you end.
The codec discussion appears now so why not try to solve this now?
And one proposal is to use these codecs and I fully support it.",<580BEA5E3B99744AB1F5BFF5E9A3C67D16E4408A5A@HE111648.emea1.cds.t-internal.com>,R.Jesske@telekom.de,0.0,0,6,2013-03-15 10:44:31
4306,RtcWEB,43,7357,"InformationProviding,Answer,ContextSetting,ProposeAction,NeutralResponse",6746,-1,"
I have proposed that we add the following text to address the interoperability concerns",<BBF5DDFE515C3946BC18D733B20DAD2338D2BB34@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 14:55:54
4307,RtcWEB,43,7358,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",7357,-1,"
""If other suitable audio codecs are available to the browser to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding.""",<BBF5DDFE515C3946BC18D733B20DAD2338D2BB34@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 14:55:54
4308,RtcWEB,43,7359,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",7358,-1,"
The MTI Audio Codecs are defined to ensure a basic level of interoperability and will need to be always supported for that reason. Support for additional audio codecs is an implementation and business case decision and the additional audio codecs that it makes sense to support will change over time (as codecs become obsolete and new ones are developed and deployed. So additional audio codecs should not be specified in the RTCweb RFCs.",<BBF5DDFE515C3946BC18D733B20DAD2338D2BB34@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 14:55:54
4309,RtcWEB,43,8001,"InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse",7359,-1,"Hello

As mentioned earlier, this kind of general statement makes sense and would be acceptable for us only if it gives some minimum guidance on what ""suitable"" means. It means: the codecs that are especially important to be considered because their support would solve the interoperability issue for a huge number of calls and because they can be made available to the browsers on a high number of devices:

""If other suitable audio codecs are available to the browser to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding.""
This is especially the case for AMR and AMR-WB for interoperability with 3GPP mobile devices and G.722 for interoperability with fixed ETSI/DECT CAT-iq devices
",<4507_1363362629_51434345_4507_361_1_6af2514e-a2f2-4248-b7a9-5d0452f3abf7@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-15 15:50:18
4310,RtcWEB,43,8007,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social",7359,1015,"
This transmission (including any attachments) may contain confidential information, privileged material (including material protected by the solicitor-client or other applicable privileges), or constitute non-public information. Any use of this information by anyone other than the intended recipient is prohibited. If you have received this transmission in error, please immediately reply to the sender and delete this information from your system. Use, dissemination, distribution, or reproduction of this transmission by unintended recipients is not authorized and may be unlawful.
",<4507_1363362629_51434345_4507_361_1_6af2514e-a2f2-4248-b7a9-5d0452f3abf7@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-15 15:50:18
4311,RtcWEB,43,8665,"InformationProviding,Answer,Disagreement,ProposeAction,NeutralResponse",8001,-1,"Suitable to me means suitable for the application context i.e if the application is conversational real time audio then all audio codecs suitable for conversational real time audio the browser has the ability to use are recommended to be included in the offer.

I don't agree to mention specific codecs - all codecs that meet the suitability for the application apply and we shouldn't give the impression that its more important to include some codecs than others that are available to the browser to use.
",<BBF5DDFE515C3946BC18D733B20DAD2338D2BC76@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 15:58:23
4312,RtcWEB,43,9352,"InformationSeeking,Question,InformationProviding,ProposeAction,Question,NeutralResponse",8665,8665,"
But Why shouldn't we give that impression ?

Because obviously YES it is more important to support codecs that are implemented in billions of devices and the support of which will improve the quality for millions of customers and reduce the costs in networks than codecs of specific and limited usage.

And since AMR AMR-WB stay the mandatory codecs for 4G VoLTE I don't think the importance of these codecs can ben challenged for the future

Stéphane
",<15570_1363363711_5143477F_15570_5387_1_61f74e36-8baf-42a5-b86d-d947dd4f193f@PEXCVZYH02.corporate.adroot.infra.ftgroup>,stephane.proust@orange.com,0.0,0,14,2013-03-15 16:08:17
4313,RtcWEB,43,10058,"InformationProviding,Answer,ProposeAction,Answer",,-1,"Stephane

I don't think the numbers of devices currently supported is relevant. As has already been pointed out these are snapshots in time. We are writing a standard for the next 20 years at least and 20 years ago GSM would have been one of the codecs that some people would have been advocating as the most important.

I think realistically browsers are not likely to natively support encumbered codecs like AMR regardless whether we recomend it in RTCweb or not, but all mobile devices will support AMR (at least in the near term) and I fully expect those devices will have a browser that has access to the embedded AMR codec which will I think mostly address your use case.

Andrew.
",<BBF5DDFE515C3946BC18D733B20DAD2338D2BD85@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 17:03:28
4314,RtcWEB,43,10880,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",9352,-1,"
Seriously, I think this whole issue is adequately addressed by this
audio draft ticket by Bernard:
http://trac.tools.ietf.org/wg/rtcweb/trac/ticket/12",<51435EED.2060608@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-15 13:48:29
4315,RtcWEB,43,10883,"ContextSetting,ProposeAction,NeutralResponse",8665,-1,Based on the clarification I just made I propose revised text,<BBF5DDFE515C3946BC18D733B20DAD2338D2BCB0@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 16:08:33
4316,RtcWEB,43,11558,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",10883,-1,"
""If other audio codecs suitable for use by the application are available to the browser to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding.""",<BBF5DDFE515C3946BC18D733B20DAD2338D2BCB0@XMB104ADS.rim.net>,aallen@blackberry.com,0.0,0,3,2013-03-15 16:08:33
4317,RtcWEB,43,11562,"ContextSetting,ProposeAction,NeutralResponse",11558,-1,Here is a slight variation with an example for clarifying what 'suitable' means.,<20130315164854.59A9421F841D@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-15 12:46:34
4318,RtcWEB,43,12249,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",11562,-1,"
""If other audio codecs suitable for use by the application are available to the browser (e.g. AMR/AMR-WB for 3GPP devices) to use it is recommended that they are also included in the offer in order to maximize the possibility to establish the session without the need for audio transcoding.""",<20130315164854.59A9421F841D@ietfa.amsl.com>,Kalyani.Bogineni@VerizonWireless.com,0.0,0,20,2013-03-15 12:46:34
4319,RtcWEB,43,12945,"InformationSeeking,Question,ContextSetting,ProposeAction,Question",8001,-1,"Out of curiosity, since you are pushing so hard for AMR/AMR-WB support, how
would one connect to devices on Orange network using these codecs? Is there
currently a way to connect without going through G.711 transcoding?",<CAD5OKxteoWUttfKsT9g8LzGLhDKDVLPXaRx3pVMn5HswwrUBZA@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-15 12:53:40
4320,RtcWEB,43,12948,Social,,-1,"Hi,",<CE8995AB5D178F44A2154F5C9A97CAF4025536C4C13B@HE111541.emea1.cds.t-internal.com>,Bernhard.Feiten@telekom.de,0.0,0,40,2013-03-15 17:59:37
4321,RtcWEB,43,13600,"Agreement,ProposeAction,Agreement",8001,-1,"
+1
I support to have a general statement as given below and I very much support to state which cases and codecs would be important to be supported. This also would make clear to the implementer what relevance and potential the implementation of a certain codec for WebRTC has.",<CE8995AB5D178F44A2154F5C9A97CAF4025536C4C13B@HE111541.emea1.cds.t-internal.com>,Bernhard.Feiten@telekom.de,0.0,0,40,2013-03-15 17:59:37
4322,RtcWEB,43,13615,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement",7358,7358,"
For the record, I find this statement non-objectionable.

/a",<514351DD.7070705@nostrum.com>,adam@nostrum.com,0.0,0,1,2013-03-15 12:52:45
4323,RtcWEB,43,13641,"InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse",5636,5636,"
We had this mostly working at the SIPit in Boston, using the SIP over
Websockets spec. The only reason we weren't actually setting calls up
was that we couldn't find any clients there that supported both ICE and
DTLS-SRTP. What's neat is that this isn't even really ""gatewaying"" in
the way that you mean it -- all you need is a SIP proxy that supports
one more (easy-to-implement) transport protocol.

And once you hit that proxy, all of the peering, federation, and address
resolution solutions developed for SIP apply.

I don't think this points to a need to push AMR into the web browsers,
mind you. To take Justin's earlier point a few steps further: if we're
going on number of shipping units, the mere existence of Chrome and
Firefox's WebRTC implementation means that the number of deployed Opus
codecs far overwhelms the number of deployed AMR codecs. Appeals to the
size of codec deployment would more reasonably reach the conclusion that
Opus should be MTI for the next 3GPP release. ;-)

/a",<51431729.10608@nostrum.com>,adam@nostrum.com,0.0,0,1,2013-03-15 08:42:17
4324,RtcWEB,43,13665,"InformationProviding,ContextSetting,NeutralResponse",13641,-1,"Again, this threads deals with interoperability (i.e. communications
between a WebRTC device and a non-WebRTC device).
Non-WebRTC devices mean nearly all of existing phones in the world; they
are already deployed and there's no way to upgrade them all with OPUS on
them.",<CAErhfrwOEaUYNH-jW0-4HR9+5EnDSim8XDHdsx0xNnUUO35znA@mail.gmail.com>,xavier.marjou@gmail.com,0.0,0,5,2013-03-15 14:51:05
4325,RtcWEB,43,13695,"InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Question,NeutralResponse",13665,13665,"
Given that it's currently impossible to connect to a mobile phone in a legacy network without transcoding, could you tell us a bit about Orange/3GPP's plans to provide the kind of interop you describe?  If those plans  don't exist, how could this thread (or the IETF) be dealing with such interoperability?

koen.
",<80aba69060a14004acfebca95b1ddf7a@DFM-CO1MBX15-04.exchange.corp.microsoft.com>,koen.vos@skype.net,0.0,0,13,2013-03-15 17:34:10
4326,RtcWEB,43,13697,NeutralResponse,13665,13665,"
Again, this threads deals with interoperability (i.e. communications between a WebRTC device and a non-WebRTC device).
Non-WebRTC devices mean nearly all of existing phones in the world; they are already deployed and there's no way to upgrade them all with OPUS on them.

Xavier
",<80aba69060a14004acfebca95b1ddf7a@DFM-CO1MBX15-04.exchange.corp.microsoft.com>,koen.vos@skype.net,0.0,0,13,2013-03-15 17:34:10
4327,RtcWEB,43,13698,NeutralResponse,13665,13665,"
I don't think this points to a need to push AMR into the web browsers, mind you. To take Justin's earlier point a few steps further: if we're going on number of shipping units, the mere existence of Chrome and Firefox's WebRTC implementation means that the number of deployed Opus codecs far overwhelms the number of deployed AMR codecs. Appeals to the size of codec deployment would more reasonably reach the conclusion that Opus should be MTI for the next 3GPP release. ;-)

/a",<80aba69060a14004acfebca95b1ddf7a@DFM-CO1MBX15-04.exchange.corp.microsoft.com>,koen.vos@skype.net,0.0,0,13,2013-03-15 17:34:10
4328,RtcWEB,43,13756,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",13641,13641,"
You are welcome to create the relevant work item in 3GPP SA4 if you think it appropriate.

That of course will not solve the need to transcode with all the phones prior to the release where that work item is adopted.

Keith
",<949EF20990823C4C85C18D59AA11AD8B016D88@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-03-16 02:14:25
4329,RtcWEB,43,13762,"ProposeAction,StateDecision,NeutralResponse",3332,3332,"I think it's time to stop discussing historical numbers, current numbers and future numbers of installed codecs in various devices. We're all impressed, but it doesn't seem to change our position on the MTI codec list.",<B94296F8-EFD8-424D-A09E-B2151427CD7D@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-14 08:51:12
4330,RtcWEB,43,13771,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious","13762,3332",3332,"
This is a very complex matrix and the codec landscape is every changing. That's why the offer/answer exchange is open for future additions. SIP only mandated a very small set of codecs in RFC 3261 over ten years ago. That did not stop the use of AMR, G722, H.264 or other codecs in SIP devices today. I've even seen Opus being used in SIP without updating RFC 3261.

I'm pretty sure I will see quite a lot of offers with both AMR and H264 in WebRTC, as I have met them many times in my SIP life.

It seems that we need to clarify this openness to use any codec in the specification, since it seems to be widely misunderstood.

/O",<B94296F8-EFD8-424D-A09E-B2151427CD7D@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-14 08:51:12
4331,RtcWEB,43,13802,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",13771,13771,"
What this discussion leads to is the need for application authors to be able to dynamically add codecs.
We need an API that supports codec insertion by the hosting web-site.
This would have 2 advantages:
1) sites with specific needs would be able to supply codecs that were licensed per-user
(so MNOs could supply AMR-WB for the duration of a call, even to devices that don't normally support it - e.g. laptops )
(Cisco could supply h264 for a webex session)
2) we future proof the WebRTC API - so when a new codec arrives that is especially good for watching small white dots moving at high speed,
the golf sites can use it.

In essence, extending the API using technology like Google's NaCl to deliver new codec, this decouples the supported  codec selection decision from the browser makers and pushes it up to the Application vendors.

Note, I'm not saying we should do this now. I am saying we should do this as a revision to webRTC - and yes, this discussion probably belongs in w3c land.

Tim.",<C1012AF5-854E-4B7E-BA1E-F258B4B0775A@phonefromhere.com>,tim@phonefromhere.com,0.0,0,8,2013-03-14 11:01:27
4332,RtcWEB,43,13822,"Agreement,ProposeAction,Agreement",3047,1457,"
To me, that sounds reasonable. The document could also reference some
informational RFC (to be written) that list codecs, and under what
circumstances they are suitable.
",<51419F5C.1090002@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-03-14 10:58:52
4333,RtcWEB,43,13846,"InformationProviding,Agreement,ProposeAction,Social,Agreement",13822,13822,"
That informational RFC would count as training material, but that never hurts.

I agree with this - but please change ""audio codecs"" to ""multimedia codecs"" since we now have both audio, video, text and other ""codecs"" under discussion. Also ""the browser"" is too limiting, since this applies to every piece of software using WebRTC, even though browsers have the highest priority.

/O",<5B9BA9A0-9FD8-4A37-9EAC-9BAFEA73DC3B@edvina.net>,oej@edvina.net,0.0,0,2,2013-03-14 11:04:57
4334,RtcWEB,43,13889,"InformationProviding,Agreement,ContextSetting,ProposeAction,NeutralResponse",13846,13846,"
I think the intention was to add this text to draft-ietf-rtcweb-audio-01
which would mean that only audio is in scope. But I agree, the sentence
is equally valid for video.
",<5141A97B.6060200@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-03-14 11:42:03
4335,RtcWEB,43,13891,"Agreement,Agreement",13846,13846,"
I agree to this.
",<5141A97B.6060200@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-03-14 11:42:03
4336,RtcWEB,43,13939,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse",285,285,"
I think this is the main faulty assumption here. ""Royalties already
paid"" does not imply ""free"". There's a real cost here because
supporting AMR, AMR-WB, G.722 and any other codecs added to that list
means that:
1) Someone has to write all the code for actually using these codecs
in their RTP stack.
2) There is no standard interface for accessing these codecs, so a
browser vendor would have to write code for each of these (often
undocumented) interface and *test* it on every device.
3) This code needs to be maintained and fixed for security
vulnerabilities.
4) If there's any issue (e.g. buffer overflow) in the platform
implementation of the codec, there's nothing the browser vendor can do
about it.

Oh, and that cost would be paid by pretty much all browser vendors
because they're all running on at least one platform that supports
each of these codecs.
",<5140D73D.2080209@mozilla.com>,jmvalin@mozilla.com,0.0,0,7,2013-03-13 15:45:01
4337,RtcWEB,43,13980,"InformationSeeking,Question,InformationProviding,ProposeAction,NeutralResponse",13939,13939,"
And that assumes that the codec license signed by the hardware maker permits the use of these 'no-cost' in all the possible ways
the javascript user wants. E.g. is it limited in number of channels ? Is the license symmetrical wrt encoding and decoding ?
Is it available to 3rd party browser makers (eg chrome on blackberry? Or to products derived from the native browser browsers
or that embed browser objects (like cordova/phonegap) ?

T.",<BD920E7C-85FE-4D0A-BF8E-F14A91AA2C41@phonefromhere.com>,tim@phonefromhere.com,0.0,0,8,2013-03-13 20:11:35
4338,RtcWEB,43,13994,"InformationProviding,NeutralResponse,NeutralResponse",13939,-1,"G.722 is currently part of the browser code base and the cost of adding it
is the cost of adding one define. Availability of G.722 on the platform
itself is irrelevant. Cost of supporting it in the future is a different
matter, but it is fairly small and would be comparable to support cost of
G.711.",<CAD5OKxs9dsGn132NfQ-O46+cFWpYFPdudJxmMKJKmniomD3u1g@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 16:44:07
4339,RtcWEB,43,13995,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",13994,-1,"
I would generally agree that in the long run having too many MTI codecs is
too restricting. What I want to see is some sort of commitment from the
browser manufacturers to support codecs beside MTI, especially initially,
until Opus support is more wide spread.",<CAD5OKxs9dsGn132NfQ-O46+cFWpYFPdudJxmMKJKmniomD3u1g@mail.gmail.com>,roman@telurix.com,0.0,0,5,2013-03-13 16:44:07
4340,RtcWEB,46,187,"InformationProviding,ContextSetting,ProposeAction,StateDecision,InformationProviding",,-1,"I am posting this to both CLUE and RTCWEB. I am not sure which (if
either) WG would want to adopt it, but I think both should see it. If
this gains traction, I
will make sure both WG are kept abreast of developments.",<CAJNg7VKEJC-4ob6-q8-8LM8HDM_cm7Z3oinnjc+=1wna4i+CoA@mail.gmail.com>,marshall.eubanks@gmail.com,0.0,0,0,2012-04-13 14:14:57
4341,RtcWEB,46,190,"ClarificationElicitation,ContextSetting,Social,Question",187,-1,"Hi, an easy question... What does it mean CLUE?",<CALiegf==+1dAPyaHgxA88ec2P0MxkT0qBEYSR1_ZQk_AW8U63A@mail.gmail.com>,ibc@aliax.net,0.0,0,3,2012-04-13 22:49:53
4342,RtcWEB,46,192,"InformationProviding,Answer,Answer",190,-1,http://datatracker.ietf.org/wg/clue/charter/,<CAJNg7VLXXbHYaOkErzjWw2m8Do7uX3Zf+9bvoVwJ8s3Dvy-gDQ@mail.gmail.com>,marshall.eubanks@gmail.com,0.0,0,0,2012-04-13 16:59:10
4343,RtcWEB,47,0,"InformationProviding,InformationProviding,ContextSetting",,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.,<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4344,RtcWEB,47,24,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",0,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-02.txt
Pages           : 17
Date            : 2011-08-19",<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4345,RtcWEB,47,25,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",0,-1,"
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream services provided by the browser.",<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4346,RtcWEB,47,26,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",0,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-02.txt",<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4347,RtcWEB,47,27,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",26,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4348,RtcWEB,47,28,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",27,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-02.txt",<20110819080216.20597.23581.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-08-19 01:02:16
4349,RtcWEB,47,32,ContextSetting,,-1,">From the ""Change Log"" Section:",<BBF498F2D030E84AB1179E24D1AC41D616C389F238@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 10:03:56
4350,RtcWEB,47,33,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",32,-1,"""Changes from draft-ietf-rtcweb-ucreqs-01",<BBF498F2D030E84AB1179E24D1AC41D616C389F238@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 10:03:56
4351,RtcWEB,47,85,"InformationProviding,InformationProviding,ContextSetting",26,-1,"We've uploaded an updated version of  draft-ietf-rtcweb-use-cases-and-requirement, trying to take the discussion in Quebec and on email afterwards into account.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F238@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 10:03:56
4352,RtcWEB,47,86,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",33,-1,"
o  Changed Intended status to Information
o  Changed ""Ipr"" to ""trust200902""
o  Added use case ""Simple video communication service, NAT/FW that
blocks UDP"", and derived new req F26
o  Added use case ""Distributed Music Band"" and derived new req A17
o  Added F24 as requirement derived from use case ""Simple video
communication service with inter-operator calling""
o  Added section ""Additional use cases""
o  Added text about ID handling to multiparty with central server use
case
o  Re-phrased A1 slightly""

All feedback is welcome.
",<BBF498F2D030E84AB1179E24D1AC41D616C389F238@ESESSCMS0362.eemea.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-08-19 10:03:56
4353,RtcWEB,48,39,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4354,RtcWEB,48,40,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",39,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Authors         : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-15.txt
Pages           : 33
Date            : 2014-12-17",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4355,RtcWEB,48,41,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",40,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Requirements on the browser functionality are derived from the use-
cases.",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4356,RtcWEB,48,42,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",39,-1,"
This document was developed in an initial phase of the work with
rather minor updates at later stages.  It has not really served as a
tool in deciding features or scope for the WGs efforts so far.  It is
being published to record the early conclusions of the working group.
It will not be used as a set of rigid guidelines that specifications
and implementations will be held to in the future.",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4357,RtcWEB,48,43,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",39,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4358,RtcWEB,48,44,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",43,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4359,RtcWEB,48,45,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",44,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-15",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4360,RtcWEB,48,46,"ExtensionOfPrevious,InformationProviding,ProposeAction,Social",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4361,RtcWEB,48,47,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",45,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20141217123326.17146.9261.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2014-12-17 04:33:26
4362,RtcWEB,50,536,InformationProviding,,-1,"
I've uploaded a new version -13 [1]. I have made changes based on input
from Mary, Magnus and Chenxing+Andy, for details read further down.",<1447FA0C20ED5147A1AA0EF02890A64B1CF4A182@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-06 10:52:43
4363,RtcWEB,50,537,ExtensionOfPrevious,,-1,"
I hope I have caught most things; what remains to my knowledge is:
* Include the requirement text the first time a requirement is derived
* Group (and re-number) the claims",<1447FA0C20ED5147A1AA0EF02890A64B1CF4A182@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-06 10:52:43
4364,RtcWEB,50,538,ExtensionOfPrevious,,-1,"
I am hesitating to do the last thing 'cause of the risk of getting all
internal references into a mess, but one day soon I will feel brave
enough :-)",<1447FA0C20ED5147A1AA0EF02890A64B1CF4A182@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2014-02-06 10:52:43
4365,RtcWEB,50,1147,NeutralResponse,,-1,"Hi Stefan,

Simon proposed the following text after the lengthy mailing discussion:
",<007601cf2423$2d571210$88053630$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-02-07 22:09:27
4366,RtcWEB,50,1149,ExtensionOfPrevious,,-1,"
Whereas Sec 3.3.4.1 updated as

""Note that ICE support being mandatory does not preclude a WebRTC
endpoint from supporting additional traversal mechanisms.""

Apart from this, Tiru
(http://www.ietf.org/mail-archive/web/rtcweb/current/msg11246.html) and
myself (http://www.ietf.org/mail-archive/web/rtcweb/current/msg11241.html)
mentioned in the different mail thread that Sec 3.3.4.1 is not only the
right place to put the above text. Could you please correct the F31, F32
requirement text in the next revision of the draft.

Thanks
Partha
",<007601cf2423$2d571210$88053630$@co.in>,partha@parthasarathi.co.in,0.0,0,4,2014-02-07 22:09:27
4367,RtcWEB,51,0,InformationProviding,,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.,<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4368,RtcWEB,51,24,ExtensionOfPrevious,,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-00.txt
Pages           : 15
Date            : 2011-06-27",<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4369,RtcWEB,51,25,ExtensionOfPrevious,,-1,"
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream services provided by the browser.",<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4370,RtcWEB,51,26,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-00.txt",<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4371,RtcWEB,51,27,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4372,RtcWEB,51,28,ExtensionOfPrevious,,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-00.txt",<20110627093757.9043.40149.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-06-27 02:37:57
4373,RtcWEB,52,0,InformationProviding,,-1,FYI - We submitted this draft today it relates to the requirements in the use case draft for rtcweb to work in the presence of firewalls and http proxies etc.,<9F33F40F6F2CD847824537F3C4E37DDF06894839@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-03-11 16:56:50
4374,RtcWEB,52,53,ExtensionOfPrevious,,-1,"
Look forward to feedback and hope that this can be considered for adoption by the working group.",<9F33F40F6F2CD847824537F3C4E37DDF06894839@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-03-11 16:56:50
4375,RtcWEB,52,133,Question,,-1,"
Why not use Port Control Protocol (PCP) to control Firewalls and NATs
explicitly?",<45A697A8FFD7CF48BCF2BE7E106F06040901B274@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 17:04:17
4376,RtcWEB,52,229,Agreement,133,133,"We can switch to that as soon as 100% of firewalls support it - until
then, we have to be able to rely on other techniques.

That's the deployment problem in a nutshell... I don't understand how
the first firewall gets an advantage from having PCP, given that none of
the apps support it, and I don't understand how the first app gets an
advantage from having PCP, given that no firewalls support it.

If PCP succeeds despite my misgivings, we can certainly revisit the issue.
",<513E146D.4060009@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-11 18:29:17
4377,RtcWEB,52,357,NeutralResponse,229,229,"
I'm sure STUN and TURN servers are not universally deployed ('100%') in
ISP networks either.

But I'm not proposing dropping STUN/TURN in lieu of PCP, but using PCP as
an additional technique. Maybe you misunderstood what I was proposing.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B3A9@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 18:02:57
4378,RtcWEB,52,359,NeutralResponse,229,229,"
I believe it should be considered as a viable option now since it is a
specific protocol to control NATs/Firewalls and Flow-aware devices
required Pv6 CPE requirements document, Broadband Forum and 3GPP specs.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B3A9@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 18:02:57
4379,RtcWEB,52,378,NeutralResponse,357,357,"
STUN and TURN don't require any support from ISPs. Both protocols are used today.
Your co-worker Jonathan Rosenberg worked on these mechanisms and Cisco also supports them ;-)

Ciao",<32A40EF5-E012-49CF-AC73-6F354700B900@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2013-03-11 15:34:25
4380,RtcWEB,52,414,Question,378,378,"
If ISPs want to provide RTCweb like services don't they need STUN and TURN
Servers so that ICE can gather candidates?
",<45A697A8FFD7CF48BCF2BE7E106F06040901B656@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 19:52:41
4381,RtcWEB,52,415,NeutralResponse,378,378,"
Yes, today. But that did not stop design decisions to include these
protocols in ICE at a they time were not deployed at all.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B656@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 19:52:41
4382,RtcWEB,52,417,Agreement,378,378,"
Certainly.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B656@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 19:52:41
4383,RtcWEB,52,435,Answer,414,414,"
An example of freely-accessible non-ISP STUN/TURN service:
http://numb.viagenie.ca
",<513E372C.6060405@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-03-11 15:57:32
4384,RtcWEB,52,461,NeutralResponse,,-1,"I meant an ISP provided service, not a ""hoping over the ISP"" scenario.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B8B9@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 20:01:44
4385,RtcWEB,52,497,Answer,414,414,"
ISPs may want to offer services. But that's independent of their role as
ISPs.
Anyone can offer a STUN or TURN server, and they can be anywhere on the
Internet.

PCP, on the other hand, has to be available on the specific firewall or
NAT box you intend to traverse. If it isn't there, it won't work.",<513E38BD.6070105@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-11 21:04:13
4386,RtcWEB,52,499,"Apologising,NeutralResponse",415,415,"
Sorry, I can't parse that.

ICE was deployed to support applications that needed ICE; there was no
need to deploy more than 1 STUN/TURN server in order to start using STUN
and TURN.",<513E38BD.6070105@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-11 21:04:13
4387,RtcWEB,52,551,NeutralResponse,497,497,"
Yes, but on the other hand you deterministically get an IP address:port or
pinhole (both for incoming and outgoing connections) for a specific
lifetime instead of relying on outbound connections, keep-alives, and
external server.

The point is that if the FW/NAT supports PCP, the solution is certainly
cleaner. Client is always free to fallback to STUN/TURN/indirect ways.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B8D6@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 20:11:35
4388,RtcWEB,52,575,NeutralResponse,357,357,"
It is not required for an ISP to deploy a TURN server the webrtc TURN server is much more likely to be deployed by the web application provider which will instruct the browser to use it when accessing its service.
",<9F33F40F6F2CD847824537F3C4E37DDF06895013@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-03-11 19:58:08
4389,RtcWEB,52,577,NeutralResponse,357,357,"
Understood but would need to understand what the benefits of doing so would be.
",<9F33F40F6F2CD847824537F3C4E37DDF06895013@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-03-11 19:58:08
4390,RtcWEB,52,621,NeutralResponse,575,575,"
The line between Application providers and ISPs is very blurry today.
Application provider can be over the top or it can be the ISP itself.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B8ED@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 20:14:24
4391,RtcWEB,52,623,Agreement,577,577,"
Yes, certainly.

A protocol that allows a host to explicit control FW/NAT mappings/pinholes
(both for incoming and outgoing connections IPv4/IPv6), including
lifetime, knowing when such device restart/reboot, is more deterministic.
Client is always free to use STUN/TURN.
",<45A697A8FFD7CF48BCF2BE7E106F06040901B8ED@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-11 20:14:24
4392,RtcWEB,52,696,NeutralResponse,,-1,"
ICE/STUN/TURN and PCP are not really competitors or alternatives to each other.",<E44893DD4E290745BB608EB23FDDB7623BBBCD@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-12 01:42:05
4393,RtcWEB,52,697,ExtensionOfPrevious,,-1,"
A browser or any other client will anyway need to implement ICE/STUN/TURN to work its way through non-PCP supporting NATs, which will be the majority for a long time even if PCP became succesfull. The benefit of the ICE/STUN/TURN approach is that every organization or individual who deploys NATs or firewalls will not need to deploy STUN and TURN servers, but they can be deployed independently e.g. by the WebRTC service provider.",<E44893DD4E290745BB608EB23FDDB7623BBBCD@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-12 01:42:05
4394,RtcWEB,52,698,ExtensionOfPrevious,,-1,"
However, PCP, even gradually deployed, would still be useful as well. As Reinaldo is saying, it would improve robustness it produces explict NAT mappings with explicit durations. Also, it can serve as an alternative to STUN/TURN in case the browser happens to be behind a PCP-capable NAT/FW. So, PCP can be seen as an optimization and should be used when it is available. PCP can also help clients behind NAT/FW to reduce their keep-alive rate which is applicable to WebRTC as well. However, as depicted in [1], knowing when a client can entirely rely on PCP is not always so easy to detect.",<E44893DD4E290745BB608EB23FDDB7623BBBCD@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-12 01:42:05
4395,RtcWEB,52,699,ExtensionOfPrevious,,-1,"
I hope we will see PCP deployment especially in the mobile/cellular access, but as many people have pointed out, the success rate of this type of protocols has been quite low. So it will be a nice surprise rather than something I would count on if it happens.",<E44893DD4E290745BB608EB23FDDB7623BBBCD@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-12 01:42:05
4396,RtcWEB,52,700,ExtensionOfPrevious,,-1,"
[1] http://datatracker.ietf.org/doc/draft-reddy-pcp-optimize-keepalives/?include_text=1.",<E44893DD4E290745BB608EB23FDDB7623BBBCD@008-AM1MPN1-042.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2013-03-12 01:42:05
4397,RtcWEB,52,788,NeutralResponse,,701,"
I am hopeful e2e connectivity will be provided by IPv6 prior to PCP
reaching critical mass. This more because i am on bullish on v6 than
bearish on PCP.  That said, the more interesting use-case is v4 to v6
via TURN, but i believe that is already covered well ... another
reason ICE is a good fit.

CB",<CAD6AjGSCQME2mqKNawqtBoFvUq_URZ8mTFK94oX=aV8QrVj2tQ@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-11 18:57:02
4398,RtcWEB,52,903,Agreement,,-1,"Agree with you on e2e IPv6 would be ideal. PCP is well suited to control
IPv6 firewalls and it is one of the main use-cases as part of IPV6 CPE
requirements RFC. Unless you think with IPv6 there will no IPv6 firewalls.
",<45A697A8FFD7CF48BCF2BE7E106F06040901BC8F@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-12 02:46:43
4399,RtcWEB,52,951,Answer,698,698,http://datatracker.ietf.org/doc/draft-reddy-pcp-optimize-keepalives/?incl,<CAD6AjGQwv=eS0-grpOmWQu9rL2jU+XBdVHBmvycq8WXHqA224Q@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-11 19:51:31
4400,RtcWEB,52,1030,NeutralResponse,903,903,"
That is my plan. Ipv6 e2e ftw.

CB
",<CAD6AjGQwv=eS0-grpOmWQu9rL2jU+XBdVHBmvycq8WXHqA224Q@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-11 19:51:31
4401,RtcWEB,52,1168,NeutralResponse,903,903,"
That is my plan. Ipv6 e2e ftw.

[TR] Even with IPv6, there is no guarantee that NPTv6 will not be deployed. So PCP/STUN is still required to gather server-reflexive candidates. Even without NPTv6, Firewalls would block UDP flows -  PCP would address that problem. TURN should be only used as last resort if all other techniques fail because it could result in media latency, single point of failure etc.

--Tiru.

CB
",<913383AAA69FF945B8F946018B75898A149315A8@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2013-03-12 03:18:41
4402,RtcWEB,52,1282,Agreement,696,696,"
Good point. http://tools.ietf.org/html/rfc6544#section-5.3 explains to gather candidates also using PCP in addition to using STUN/TURN. ICE connectivity checks
will reveal if PCP Unaware NAT exists or not.
",<913383AAA69FF945B8F946018B75898A1493154C@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2013-03-12 02:48:46
4403,RtcWEB,52,1387,NeutralResponse,,-1,"I think another advantage of PCP is to reduce call setup time in RTCweb.
If a NAT/FW/Middlebox tells us that you have a mapping for 1 hour, during
that hour you can reuse that external IP:port across calls over and over,
or least reuse as your prime ICE candidate.
",<45A697A8FFD7CF48BCF2BE7E106F06040901BCD4@xmb-rcd-x04.cisco.com>,repenno@cisco.com,0.0,0,3,2013-03-12 03:05:19
4404,RtcWEB,52,1416,"Agreement,NeutralResponse",699,699,"
I absolutely agree with this summary about the usefulness and status of PCP.

My concern with RTCWEB at the moment is getting things out the door with
all the features we really need to have, and as few additional features
as possible.

That's why I don't want to add PCP into the mix at this time - once
we're finished with the basic stuff, we can discuss adding support for
new features at our leisure, but making the specs more complex than they
currently are really should be done only when it's a really important
feature that needs adding.
",<513F2FD9.4000308@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-12 14:38:33
4405,RtcWEB,52,1497,Agreement,,-1,"
I also agree with Harald on his proposal that PCP would be considered later.
In addition, I like to add the following:",<8486C8728176924BAF5BDB2F7D7EEDDF49A64948@ucolhp9b.easf.csd.disa.mil>,radhika.r.roy.civ@mail.mil,0.0,0,8,2013-03-12 14:45:39
4406,RtcWEB,52,1498,NeutralResponse,,-1,"
1. Let PCP becomes an RFC.
2. Let there be some use cases/call-flows (as a PCP call-flow IETF draft is
there) using PCP for FW/NAT crossing by RTCWEB, SIP (audio/video)
conferencing, and related real-time applications.",<8486C8728176924BAF5BDB2F7D7EEDDF49A64948@ucolhp9b.easf.csd.disa.mil>,radhika.r.roy.civ@mail.mil,0.0,0,8,2013-03-12 14:45:39
4407,RtcWEB,52,1499,ExtensionOfPrevious,,-1,"
Once above two items are completed, a separate draft using PCP for FW/NAT
crossing by RTCWEB applications can be written as soon as possible including
co-existing with ICE/STUN/TURN complementing each other capabilities.",<8486C8728176924BAF5BDB2F7D7EEDDF49A64948@ucolhp9b.easf.csd.disa.mil>,radhika.r.roy.civ@mail.mil,0.0,0,8,2013-03-12 14:45:39
4408,RtcWEB,52,1541,NeutralResponse,,-1,"|It is not required for an ISP to deploy a TURN server the webrtc TURN server
|is much more likely to be deployed by the web application provider which will
|instruct the browser to use it when accessing its service.",<E721D8C6A2E1544DB2DEBC313AF54DE22403B3DF@xmb-rcd-x02.cisco.com>,mperumal@cisco.com,0.0,0,2,2013-03-12 03:57:55
4409,RtcWEB,52,1542,NeutralResponse,,-1,"
Right, and the application provider could be also an enterprise hosting a TURN server for a number of reasons in addition to NAT/firewall traversal -- media anchoring, monitoring, recording etc. I think TURN servers aren't going away, especially with WebRTC where the session signaling protocol between the browser and the web server could be proprietary (and encrypted), making ALG techniques in NATs/Firewalls/SBCs fail miserably.",<E721D8C6A2E1544DB2DEBC313AF54DE22403B3DF@xmb-rcd-x02.cisco.com>,mperumal@cisco.com,0.0,0,2,2013-03-12 03:57:55
4410,RtcWEB,52,1664,NeutralResponse,229,229,"
I am also pessimistic on PCP being deployed and would rather not
confuse the WebRTC community into thinking PCP is requirement for
WebRTC.  I believe TURN is much better solution.  As mobile network
operator, i feel much more comfortable offering TURN as a solution to
customers than PCP.

CB
",<CAD6AjGSBGY2EEP+yNMZ4sbj6O-XP7hi84PVFMXHdT+nJg8iTzA@mail.gmail.com>,cb.list6@gmail.com,0.0,0,1,2013-03-11 11:07:26
4411,RtcWEB,52,1688,NeutralResponse,229,229,"
Not to contradict with your point, but to pile on it...
Even if 100% of the Firewalls were to support PCP, you'd still want to do STUN/TURN/ICE methinks, because

1) you never know that your local Firewall is the *only* Firewall-ish thing between you and the public Internet or some network reachable by both parties.  This problem already happens with UPnP and NAT-PMP today, and has been noted before in BEHAVE or MMUSIC, I think.

2) There's a big difference between 100% of Firewalls implementing PCP, and it being actually enabled/turned-on in 100% of them.

3) you don't know if the IP path across the Internet works for a given address family - this has been given as the reason STUN/ICE needs to be required for v4/v6 dual-stack implementations, to test reachability across the IPv6 Internet before trying to use it; regardless of NATs/Firewalls.

-hadriel",<C27A425B-8496-46B8-B0E5-639C16F9F59A@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2013-03-12 19:37:38
4412,RtcWEB,52,1771,NeutralResponse,,551,"
we submitted a individual draft that addresses the problem of Firewalls to permit UDP.
http://tools.ietf.org/html/draft-reddy-mmusic-stun-auth-fw-traversal-00

This draft proposes extensions to ICE connectivity checks that can be examined by the firewall to permit outgoing UDP flows across the firewall.

--Tiru.
",<913383AAA69FF945B8F946018B75898A149314E8@xmb-rcd-x10.cisco.com>,tireddy@cisco.com,0.0,0,4,2013-03-12 02:32:48
4413,RtcWEB,53,0,InformationProviding,,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.,<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4414,RtcWEB,53,24,ExtensionOfPrevious,,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt
Pages           : 15
Date            : 2011-07-04",<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4415,RtcWEB,53,25,ExtensionOfPrevious,,-1,"
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream services provided by the browser.",<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4416,RtcWEB,53,26,ExtensionOfPrevious,,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt",<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4417,RtcWEB,53,27,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4418,RtcWEB,53,28,ExtensionOfPrevious,,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt",<20110704113719.18992.44580.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-07-04 04:37:19
4419,RtcWEB,53,30,InformationProviding,,26,>  A URL for this Internet-Draft is:,<4E395997.80803@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-03 10:22:15
4420,RtcWEB,53,31,ExtensionOfPrevious,26,26,http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt,<4E395997.80803@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-03 10:22:15
4421,RtcWEB,53,58,ExtensionOfPrevious,26,26,">4.2.6.  Multiparty video communication
>4.2.6.1.  Description
>    In this use case the simple video communication service is extended
>    by allowing multiparty sessions.  No central server is involved - the
>    browser of each participant sends and receives streams to and from
>    all other session participants.  The web application in the browser
>    of each user is responsible for setting up streams to all receivers.
>    The audio sent by each participant is a mono stream.  However, in
>    order to enhance intelligibility, the web application pans the audio
>    from different participants differently when rendering the audio.
>    This is done automatically, but users can change how the different
>    participants are placed in the (virtual) room.",<4E395997.80803@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-03 10:22:15
4422,RtcWEB,53,59,ExtensionOfPrevious,26,26,"
Note that this covers the request from Arno for peer-to-peer distribution.

Also, I would remove the audio is mono reference.  I see no need to add
that restriction.
",<4E395997.80803@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-03 10:22:15
4423,RtcWEB,53,85,NeutralResponse,59,59,"
Yes. But perhaps we should rephrase requirement F11 to

""The browser MUST be able to transmit streams to
at least one peer""

(peer could be other browser or relay server) to more properly highlight
the problem of insufficient upload in larger
sessions.

CU,",<4E3A4B06.5090007@cs.vu.nl>,arno@cs.vu.nl,0.0,0,25,2011-08-04 09:32:22
4424,RtcWEB,54,50,InformationProviding,,-1,"The agenda below has been uploaded as an initial, draft agenda for the
group.  Comments on the timing and balance are encouraged.",<CA+9kkMALouyyzN4dcGdF92TO2HGcBHbHR6fvHg7QC-x5ndCGjw@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-02-27 09:49:42
4425,RtcWEB,54,127,Question,,-1,"
Does the Data Channel part (or some other part) of the agenda include making a decision on whether it shall be possible to bundle the Data Channel with the RTP media?",<7594FB04B1934943A5C02806D1A2204B10B717@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2013-02-27 20:29:49
4426,RtcWEB,54,128,Question,,-1,"
Or, do we already have consensus that it shall be possible?",<7594FB04B1934943A5C02806D1A2204B10B717@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2013-02-27 20:29:49
4427,RtcWEB,54,129,NeutralResponse,,-1,"
Just to clarify, because I think it is important input for the MMUSIC discussions on the actual mechanism.",<7594FB04B1934943A5C02806D1A2204B10B717@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2013-02-27 20:29:49
4428,RtcWEB,54,132,Answer,,-1,"Since multiplexing of the data channel with RTP media has been shown as a desirable feature of BUNDLE (and most of its variants), I would suggest that this be treated as a significant advantage for BUNDLE (and similarly capable variants) over any proposal without it.  Cullen's ""Plan A"" is preferred over Plan B precisely because it has an incremental muxing advantage.",<03FBA798AC24E3498B74F47FD082A92F36EA7EAB@US70UWXCHMBA04.zam.alcatel-lucent.com>,richard.ejzak@alcatel-lucent.com,0.0,0,13,2013-02-28 23:10:07
4429,RtcWEB,54,347,Answer,,-1,"BUNDLE and data muxing works for both ""Plan A"" and ""Plan B"".

Recall that ""Plan B"" is muxing multiple media sources of the same type over
a single m= line, and BUNDLE then provides muxing of the audio, video, and
data m= lines.
",<CAOJ7v-2zvTc7_Upz6Lr-0iWO7UHuD0mDJXfRXXgxn76sTgV8qw@mail.gmail.com>,juberti@google.com,0.0,0,5,2013-02-28 23:30:15
4430,RtcWEB,54,468,NeutralResponse,347,347,"
My understanding (based on the Boston slides, because I haven't read Cullen's plan draft yet) of ""Plan B"" is that it didn't include BUNDLE - or any other multi-mediatype multiplexing negotiation mechanism - but only multiple SSRCs per m- line.
",<7594FB04B1934943A5C02806D1A2204B10DEBC@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2013-03-01 10:12:17
4431,RtcWEB,54,478,NeutralResponse,468,468,My understanding of Plan B is the same as Justin's.,<5130875A.40304@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-01 11:47:54
4432,RtcWEB,54,484,ExtensionOfPrevious,468,468,"
I remember the statement (or I may have made it) that ""with Plan B,
we're able to live without Bundle (would prefer to have it); with Plan
A, we're absolutely dependent on Bundle, we can't live without it.""",<5130875A.40304@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-01 11:47:54
4433,RtcWEB,54,506,NeutralResponse,484,484,"
If that was the outcome, I'm glad I understood wrong :)
",<7594FB04B1934943A5C02806D1A2204B10E0F0@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,1.0,1,1,2013-03-01 12:38:21
4434,RtcWEB,54,516,NeutralResponse,478,478,"Likewise.  Plan B wouldn't have been the mother of all solutions, but
it would have been enough.",<CABkgnnWRTuodfwkzzQOYo_mxbWrHoYW8o8GVwvj2poEDkmExdw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2013-03-01 08:39:26
4435,RtcWEB,54,532,NeutralResponse,,-1,"(this may be a repeat, but I can't find the other mail)
",<51378121.5010908@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-06 18:47:13
4436,RtcWEB,54,533,ExtensionOfPrevious,,-1,"On 02/27/2013 06:49 PM, Ted Hardie wrote:
> Video Codec                       10:15 to 11:30
> 1. draft-alvestrand-rtcweb-vp8-01 (15 mins)
> 2. draft-burman-rtcweb-h264-proposal-01+draft-dbenham-webrtcvideomti-01+draft-marjou-rtcweb-video-codec-00
> (25 mins)
>        Discussion (30 minutes)
>        Call the question (5 minutes)",<51378121.5010908@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-06 18:47:13
4437,RtcWEB,54,534,ExtensionOfPrevious,,-1,"
Looking at what has to be presented, and the likelyhood of questions, I
think a more reasonable (less optimistic) allocation of time for the VP8
part of this discussion would be 15 minutes for presentations and 15
minutes for clarifying questions.",<51378121.5010908@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-06 18:47:13
4438,RtcWEB,54,563,NeutralResponse,,-1,"Magnus and I discussed this morning, and we will allot this extra time
if the JSEP discussion runs short.",<CA+9kkMByFeWc8nascEjt+AO-zZQ__3coKp3sJb8KpO3AbwcYSQ@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-03-07 08:16:05
4439,RtcWEB,54,581,NeutralResponse,,533,"On reconsidering this timeline, I feel that it is more realistic to
expect 15 mins of presentations for VP8 followed by 15 mins of
clarifying questions (not on the decision to be made, but in order to
make sure everyone has a common understanding of what the VP8
presentations were saying.

We will, however, live with what the chairs decide on time division.",<51372F03.40308@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-03-06 12:56:51
4440,RtcWEB,55,179,Thanking,,-1,"
thanks for catching this!",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4441,RtcWEB,55,180,InformationProviding,,-1,"
F37 currently reads:",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4442,RtcWEB,55,181,ExtensionOfPrevious,,-1,"
""The browser must be able to send streams and data to a peer in the
presence of FWs that only allows http(s) traffic.""",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4443,RtcWEB,55,182,ExtensionOfPrevious,,-1,"
Would a change to:",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4444,RtcWEB,55,183,ExtensionOfPrevious,,-1,"
""The browser must be able to send streams and data to a peer in the
presence of FWs that only allows traffic via a HTTP Proxy.""",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4445,RtcWEB,55,184,Question,,-1,"
be correct?",<1447FA0C20ED5147A1AA0EF02890A64B1C3104E7@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-07-11 06:43:49
4446,RtcWEB,55,188,Agreement,,-1,Sounds good to me.,<9F33F40F6F2CD847824537F3C4E37DDF1163D42C@MCHP04MSX.global-ad.net>,andrew.hutton@siemens-enterprise.com,0.0,0,3,2013-07-11 08:28:26
4447,RtcWEB,56,23,InformationProviding,,-1,"On 2013-09-04 18:23, Cullen Jennings (fluffy) wrote:
> We would like to start a working group last call of draft-ietf-rtcweb-use-cases-and-requirements-11.
> Please send comments by the end of the day on September 21.",<1447FA0C20ED5147A1AA0EF02890A64B1C3848D2@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-09-05 08:45:36
4448,RtcWEB,56,24,ExtensionOfPrevious,,-1,"
In the current version (-11) we've not addressed Andrew Hutton's input
on handling the case with a FW that only allows traffic via a HTTP Proxy
[1].

This should be fixed for the next version.

[11] http://www.ietf.org/mail-archive/web/rtcweb/current/msg08264.html
",<1447FA0C20ED5147A1AA0EF02890A64B1C3848D2@ESESSMB209.ericsson.se>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2013-09-05 08:45:36
4449,RtcWEB,57,30,InformationProviding,,-1,"The IESG has received a request from the Real-Time Communication in
WEB-browsers WG (rtcweb) to consider the following document:
- 'Web Real-Time Communication Use-cases and Requirements'
<draft-ietf-rtcweb-use-cases-and-requirements-14.txt> as Informational
RFC",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4450,RtcWEB,57,31,ExtensionOfPrevious,,-1,"
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2014-04-25. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the
beginning of the Subject line to allow automated sorting.",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4451,RtcWEB,57,32,ExtensionOfPrevious,,-1,"
Abstract",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4452,RtcWEB,57,33,ExtensionOfPrevious,,-1,"
This document describes web based real-time communication use-cases.
Requirements on the browser functionality are derived from the use-
cases.",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4453,RtcWEB,57,34,ExtensionOfPrevious,,-1,"
The file can be obtained via
http://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4454,RtcWEB,57,35,ExtensionOfPrevious,,-1,"
IESG discussion can be tracked via
http://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements/ballot/",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4455,RtcWEB,57,36,ExtensionOfPrevious,,-1,"
No IPR declarations have been submitted directly on this I-D.",<20140411201321.28167.9325.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2014-04-11 13:13:21
4456,RtcWEB,58,32,Apologising,,-1,"
Sorry if I'm asking a dummy question... I'm still somewhat new to
rtcweb, and certainly quite new to this list:",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4457,RtcWEB,58,33,InformationProviding,,-1,"
It seems that the group's idea of data traffic is that this would be
latency-critical traffic, possibly combined with other real-time
communication. Slide 2 of the slideset at
http://trac.tools.ietf.org/wg/rtcweb/trac/attachment/wiki/WikiStart/Non-Media%20Data%20in%20RTCWEB.ppt
says:",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4458,RtcWEB,58,34,"Question,ExtensionOfPrevious",,-1,"
Use cases:
-Dynamic meta data for Conference and other real-time services
-Gaming data with low latency requirements
-Others?",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4459,RtcWEB,58,35,Question,,-1,"
This makes me wonder: once we have rtcweb in place, what stops a web
site developer from just providing a web-based file transfer service
between browsers? And: if that's a possibility, would we even want to
prevent that? (I'd say no)",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4460,RtcWEB,58,36,InformationProviding,,-1,"
Similarly, I can pull files on my Skype to send e.g. photographs to a
person I'm chatting with. I'd imagine that this sort of thing would also
be attractive for rtcweb based applications, and I don't see a reason to
prevent this.",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4461,RtcWEB,58,37,Question,,-1,"
What's different here is that we're in these cases dealing with greedy,
non-latency-critical traffic, and possibly lots of it. Could this even
be a new use case?",<4FD7069C.8080803@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:06:36
4462,RtcWEB,58,51,Answer,37,37,"
There is currently a ""Simple Video Communication Service with file
exchange"" use case (see Section 4.2.8 in
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-08).
Are there additional derived requirements that are needed to support
this use case?",<4FD707AD.1040601@mozilla.com>,tterriberry@mozilla.com,0.0,0,6,2012-06-12 02:11:09
4463,RtcWEB,58,88,"Answer,Apologising",51,51,"First: very sorry for missing this one! I looked at this very draft
again just yesterday, but somehow didn't notice the file transfer bit.
On a side note, when looking through the requirements derived from this
use case now, I got the impression that it would have been more
reader-friendly to write:
""In addition to the Simple Video Communication Service use-case, this
use-case has the following requirements:""  and list just the new ones.

Second: I don't think that there are additional requirements derived
from that, but it can have architectural implications. (i.e. what is
derived is, perhaps, a new property).  =>  ""file transfer"" should then
be a part of the use cases on the list in the slide set I mentioned.
(I'm saying that because the slide asks: ""others?"")

Given that file transfers are ""part of the plan"", I just think it's
important for all of us to understand that there may be a lot of data
traffic too (instead of pictures, people may be sending a movie... or
you could even have a website offering *nothing but* a file transfer
service?! I have a feeling that this could even turn into an unintended
""killer app"" for rtcweb  :-)   ).
",<4FD70E1D.10509@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:38:37
4464,RtcWEB,58,144,NeutralResponse,,-1,"The reason for the initial data use cases was that we wanted to focus on
the stuff that *couldn't* be done by bouncing data off a server;
non-time-sensitive bulk file transfer can certainly be done via a
server, even though that may not be optimal.",<4FD84C66.2030806@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-06-13 10:16:38
4465,RtcWEB,58,145,NeutralResponse,,-1,"
That said, we've always expected that once the data transfer capability
is in place, we'll have plenty of people wanting to use it in
""unexpected"" ways.
The important RTCWEB-specific requirement from the file transfer use
case is probably that IF file transfer is done in a peer-to-peer
fashion, within the RTCWEB context, it MUST be able to run without
degrading the quality of the real time media.",<4FD84C66.2030806@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2012-06-13 10:16:38
4466,RtcWEB,58,170,NeutralResponse,145,145,"
[BA] We need to be careful about the definition of ""degrade"".   If the goal is to support the best video quality
possible (e.g. highest frame rate/quality/resolution supportable on the path), then starting a file transfer on
the same path may require the video to reduce bandwidth usage.  This by itself does not seem problematic.

However, it would be problematic if the file transfer builds a queue that results in unacceptable latency. A
large file transfer over TCP via the server will tend to do this -- but a file transfer handled over the data channel
should not.",<BLU169-W1090692B22AA5FA2EC96DB293F50@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2012-06-13 06:14:49
4467,RtcWEB,58,201,"Agreement,Answer",36,36,"
Correct, support for this is a design goal.
",<4FD709EF.7030001@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-06-12 05:20:47
4468,RtcWEB,58,203,Answer,37,37,"
This is the reason for the priority fields for the DataChannel objects,
to allow the application to set the relative priorities of media
channels and data.  By default, we don't want data channels to starve
media, but to take a share, so are reasonable for ""look at this picture""
cases.  Large i-don'tcare-when transfers should be given somewhat lower
priorities, real (low-bandwidth) realtime data should be given higher.
",<4FD709EF.7030001@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2012-06-12 05:20:47
4469,RtcWEB,58,233,Agreement,203,203,I see; thanks. Sounds good to me.,<4FD70E4D.7010300@ifi.uio.no>,michawe@ifi.uio.no,0.0,0,4,2012-06-12 11:39:25
4470,RtcWEB,59,31,InformationProviding,,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4471,RtcWEB,59,32,ExtensionOfPrevious,,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-12.txt
Pages           : 28
Date            : 2013-10-14",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4472,RtcWEB,59,33,ExtensionOfPrevious,,-1,"
Abstract:
This document describes web based real-time communication use-cases.
Requirements on the browser functionality are derived from use-cases.",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4473,RtcWEB,59,34,ExtensionOfPrevious,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4474,RtcWEB,59,35,ExtensionOfPrevious,,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4475,RtcWEB,59,36,ExtensionOfPrevious,,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-12",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4476,RtcWEB,59,37,ExtensionOfPrevious,,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4477,RtcWEB,59,38,ExtensionOfPrevious,,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20131014092909.21176.66104.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2013-10-14 02:29:09
4478,RtcWEB,60,25,InformationProviding,,-1,"> From: Harald Alvestrand <harald@alvestrand.no>
> RTCWEB has a requirement (or rather: it has assumed that there was a
> solution) for signalling over SDP that SCTP/DTLS/UDP is sent over the
> same port pair as SRTP.",<201302152223.r1FMNCsk1909115@shell01.TheWorld.com>,worley@ariadne.com,0.0,0,0,2013-02-15 17:23:12
4479,RtcWEB,60,26,"ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction",25,-1,"
More exactly, RTCWEB has an assumption that there is a strategy for
sending SCTP/DTLS/UDP over the same port as SRTP, and that we will
figure out how to signal it.  (It appears that sending RTP and RTCP
(or SRTP and SRTP) over the same port is already solved.)

The question is whether this is a *requirement*, and if so, to put it
in the requirements document -- I don't see it in
draft-ietf-rtcweb-use-cases-and-requirements-10.

However what I do see in that draft is:

F29             The browser MUST be able to send streams and
data to a peer in the presence of NATs that
block UDP traffic.

and we seem to be assuming that the carrier protocol for multiplexing
is UDP...

Dale",<201302152223.r1FMNCsk1909115@shell01.TheWorld.com>,worley@ariadne.com,0.0,0,0,2013-02-15 17:23:12
4480,RtcWEB,61,0,Social,,-1,"Hi,",<CAErhfrzSrBkY9=7ktgWm=4i3hy0_NwEb=xFgdm5oVO-a8wpcWg@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2011-11-09 15:31:04
4481,RtcWEB,61,20,"InformationProviding,ContextSetting",,-1,"
In the introduction of draft-ietf-rtcweb-rtp-usage-01, one example of
application is ""on-demand multimedia streaming"". The draft also recommends
tools like RFC4588.",<CAErhfrzSrBkY9=7ktgWm=4i3hy0_NwEb=xFgdm5oVO-a8wpcWg@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2011-11-09 15:31:04
4482,RtcWEB,61,21,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",20,-1,"
Looking at the charter and at the
draft-ietf-rtcweb-use-cases-and-requirements-06 (sections 4.2 and 4.3),
there is no explicit use-case about it. In other-words, there is no
use-case like a user/browser downloads a video file from another browser or
server.
The words ""real-time communication"" and ""communication"" look fuzzy, as it
is not clear if mono-directional streaming is included or not in the scope
of rtcweb communications.",<CAErhfrzSrBkY9=7ktgWm=4i3hy0_NwEb=xFgdm5oVO-a8wpcWg@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2011-11-09 15:31:04
4483,RtcWEB,61,22,"Question,ExtensionOfPrevious,ContextSetting",21,-1,"
So my question is : is the ""on-demand multimedia streaming""
communication use-case in the scope of the WG or not?",<CAErhfrzSrBkY9=7ktgWm=4i3hy0_NwEb=xFgdm5oVO-a8wpcWg@mail.gmail.com>,xavier.marjou@orange.com,0.0,0,5,2011-11-09 15:31:04
4484,RtcWEB,62,54,InformationProviding,,-1,"The requirements and use cases document
draft-ietf-rtcweb-use-cases-and-requirements-09
starts with a use case 4.2.1 ""Simple Video Communication Service"".",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4485,RtcWEB,62,55,"InformationProviding,ExtensionOfPrevious,ProposeAction",54,-1,"
It is not at all obvious from the text that this service provides audio
as well as video. Audio is only mentioned in a couple of paranthesis in
section 4.2.1. I suggest to clearly state in section 4.2.1.1 that audio
is included.",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4486,RtcWEB,62,56,"ExtensionOfPrevious,ContextSetting",54,-1,"
Proposed changed 4.2.1.1",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4487,RtcWEB,62,57,"ExtensionOfPrevious,ProposeAction",56,-1,"
4.2.1. Simple Video Communication Service",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4488,RtcWEB,62,58,"ExtensionOfPrevious,ContextSetting",56,-1,"
4.2.1.1. Description",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4489,RtcWEB,62,59,"InformationProviding,ExtensionOfPrevious",58,-1,"
Two or more users have loaded a video communication web application
into their browsers, provided by the same service provider, and
logged into the service it provides.  The web service publishes
information about user login status by pushing updates to the web
application in the browsers.  When one online user selects a peer
online user, a 1-1 communication session  with video and audio
between the browsers of the two peers is initiated.  The invited
user might accept or reject the session.",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4490,RtcWEB,62,60,"InformationProviding,ExtensionOfPrevious",59,-1,"
During session establishment a self-view is displayed, and once the
session has been established the video sent from the remote peer is
displayed in addition to the self-view.  During the session, each
user can select to remove and re-insert the self-view as often as
desired.  Each user can also change the sizes of his/her two video
displays during the session.  Audio is also exchanged between the
parties.  Each user can also pause sending of media (audio, video,
or both) and mute incoming media.",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4491,RtcWEB,62,61,"InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Social",55,-1,"
Similarly, 4.3.1 Telephony terminal description would need mentioning
that the call provides video and audio communication.
I can only deduct that from requirement F1 that says that the camera is
used, and F5 saying that good audio and video rendering is required.
Nothing in 4.3.1 says what media is provided.  (Was video intended in
this use case?)
Please add.",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4492,RtcWEB,62,62,StateDecision,,-1,"
(I will return separately to the proposals from yesterday to add the
text medium.)",<50A1FA27.9050109@omnitor.se>,gunnar.hellstrom@omnitor.se,0.0,0,5,2012-11-13 08:43:35
4493,RtcWEB,62,134,"StateDecision,Thanking",55,-1,"
thanks. I will update the document.",<50A1FB3A.6010803@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2012-11-13 08:48:10
4494,RtcWEB,63,5,"InformationProviding,StateDecision",,-1,"I have reviewed this document in preparation for IETF LC.  Overall, it
looks good to me; I have requested LC.",<CAL02cgQ3pK7WVKvi2sCOBE9dtNpW3JD7fL1hmia7o4s5HOofAQ@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2014-04-11 13:42:46
4495,RtcWEB,64,6,"InformationProviding,ExtensionOfPrevious,ContextSetting",38,-1,>From a security POV this document is mostly ready: it includes as,<CABrd9STadDa12YywvNOWPeNjHobT=Eahv7qt6OMJi2=JQhu30g@mail.gmail.com>,benl@google.com,0.0,0,3,2014-05-16 11:46:26
4496,RtcWEB,64,7,"ExtensionOfPrevious,ContextSetting",6,-1,common requirements for all use-cases:,<CABrd9STadDa12YywvNOWPeNjHobT=Eahv7qt6OMJi2=JQhu30g@mail.gmail.com>,benl@google.com,0.0,0,3,2014-05-16 11:46:26
4497,RtcWEB,64,38,"InformationProviding,ContextSetting,ProposeAction",,-1,"I have reviewed this document as part of the security directorate's
ongoing effort to review all IETF documents being processed by the
IESG.  These comments were written primarily for the benefit of the
security area directors.  Document editors and WG chairs should treat
these comments just like any other last call comments.
",<CABrd9STadDa12YywvNOWPeNjHobT=Eahv7qt6OMJi2=JQhu30g@mail.gmail.com>,benl@google.com,0.0,0,3,2014-05-16 11:46:26
4498,RtcWEB,64,39,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",7,-1,"
F11     It must be possible to protect streams and data
from wiretapping [RFC2804].

and

F13     The browser must encrypt, authenticate and
integrity protect media and data on a
per-packet basis, and must drop incoming media
and data packets that fail the per-packet
integrity check.  In addition, the browser
must support a mechanism for cryptographically
binding media and data security keys to the
user identity (see R-ID-BINDING in [RFC5479]).

which are nice, _but_ it seems to me that, given that metadata
interception is now the norm, that there should be an additional
requirement that identity data should not be available to attackers
(i.e. that a GPA or a MitM should not be able to determine who the
end-points are from data transmitted in the stream).

I note that RFC 5479 also does not appear to include this requirement.

Also, F11 is perhaps a little weak in that it appears to only require
protection from a GPA, not from a MitM. RFC 5479 is a little unclear
on this point (it discusses active attackers but doesn't specifically
say protocols should defend against them).

Certificate Transparency is hiring! Let me know if you're interested.",<CABrd9STadDa12YywvNOWPeNjHobT=Eahv7qt6OMJi2=JQhu30g@mail.gmail.com>,benl@google.com,0.0,0,3,2014-05-16 11:46:26
4499,RtcWEB,65,12,"ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"Howdy,
With regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever.",<B6527F21-4DE2-46B1-AE2E-891D56461313@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 03:52:20
4500,RtcWEB,65,13,"InformationProviding,ExtensionOfPrevious,ProposeAction",12,-1,"
One way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on.",<B6527F21-4DE2-46B1-AE2E-891D56461313@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 03:52:20
4501,RtcWEB,65,14,"InformationProviding,ExtensionOfPrevious,ContextSetting",12,-1,"
If this was a hammer attack, this doesn't generate any more load on the target than ICE, since ICE would have sent X number of STUN packets for Y time as well, and I'm suggesting the X and Y be the same values for the initial RTP packets during the ""check"" phase.",<B6527F21-4DE2-46B1-AE2E-891D56461313@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 03:52:20
4502,RtcWEB,65,15,"InformationProviding,ExtensionOfPrevious,ProposeAction",14,-1,"
The major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit.",<B6527F21-4DE2-46B1-AE2E-891D56461313@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 03:52:20
4503,RtcWEB,65,16,"InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction",15,-1,"
Does anyone else care about interop-ing with legacy non-RTCWEB voip devices?  I checked draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't see it, so I'm not sure.",<B6527F21-4DE2-46B1-AE2E-891D56461313@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 03:52:20
4504,RtcWEB,65,60,Agreement,12,12,"
Agree that it limits interoperability.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4505,RtcWEB,65,62,"InformationProviding,NeutralResponse,ProposeAction",13,13,"
This is not as safe. There are devices/software that do things upon receipt of RTP packets (like play them out through loudspeakers, or initiate ringing of the softphone), and more important RTP packets are not carefully designed to avoid imitating other types of traffic such as SNMP, whereas STUN packets contain a relatively large header with a magic number that makes them much less likely to be misinterpreted by other protocols.

Additionally the STUN connectivity check used for ICE contains short-term credentials and a transaction ID that is unknown to the signaling layer (or Javascript) that ensure that you are in fact conducting a pairwise negotiation with the far end that you are thinking of. With RTP/RTCP packets alone you can create attacks both from the browser (by sending RTP/RTCP and using something else to spoof enough replies that the test passes) or on the browser (by sending it RTP from somewhere else).

And of course ICE, or something like it, is required anyway for doing NAT traversal.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4506,RtcWEB,65,63,"InformationProviding,NeutralResponse,ProposeAction",14,14,"
Problem is that it isn't just load. Another class of attack is sending packets to things like SNMP servers behind a firewall. No matter how slow the rate, if one of the packets causes bad things to happen then you have a security problem.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4507,RtcWEB,65,64,"Agreement,ProposeAction",15,15,"
Indeed. See above.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4508,RtcWEB,65,65,"InformationProviding,Disagreement,ProposeAction",15,15,"
I don't believe this is the case. There's so many cases where one side sends A+V but the other side sends audio only, and sending HD-video-rate traffic to an unsuspecting endpoint is unacceptable.

This is even worse if we allow arbitrary datagrams with a relatively short header, as these will be even easier to craft into attacks on other protocols if there isn't confirmed consent.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4509,RtcWEB,65,66,"InformationProviding,Answer,ContextSetting,ProposeAction",16,16,"
I care, but I think that the legacy devices are going to need a way to consent. At one of our first meetings prior to forming the WG I came up with additional terminology to describe devices which are legacy and cannot be upgraded vs. devices which are legacy but which can be upgraded sufficiently to add the ICE handshake... we should probably bring that back for convenience.
",<8D6E4E5F-E1E4-47FB-8D8D-F3D9976AC29E@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 07:38:10
4510,RtcWEB,65,98,"ClarificationElicitation,InformationProviding,Agreement,ContextSetting,ProposeAction",62,62,"
No it's not as ""safe"", but it may be safe enough.
With regards to being misinterpreted by others, since the web server javascript cannot define the actual payload of the RTP (correct?), and things like sequence numbers would also be randomly chosen by the browser, so it's not like the javascript can purposefully craft an RTP packet to immitate other protocols.  For example it would be an astronmoical coincidence for any given RTP packet to be parsable as SNMP BER for a given ASN.1 dictionary.
(Also as an aside, if I recall correctly SNMP is actually distinguishable from RTP by the first byte)
",<E48CF4EF-50EE-4C08-BECA-9969B9A58F39@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 11:58:15
4511,RtcWEB,65,99,"InformationProviding,NeutralResponse,ProposeAction",62,62,"
If we used RTCP as part of the check, the reports contain a last received sequence number which would not be known to the javascript.  (it's a hack to be sure, but if we want to handle non-RTCWEB devices, a hack's better than nothing)
",<E48CF4EF-50EE-4C08-BECA-9969B9A58F39@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 11:58:15
4512,RtcWEB,65,100,"InformationProviding,Disagreement",62,62,"
Not when communicating with legacy voip devices and the PSTN.
",<E48CF4EF-50EE-4C08-BECA-9969B9A58F39@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 11:58:15
4513,RtcWEB,65,101,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction",65,65,"
I should probably write it up in a draft to be much more clear, but to the above point that's not an issue.  I'm not suggesting the browser be allowed to do this RTP-based verification for any and all use-cases.  I'm only suggesting it to handle the large population of legacy VoIP devices, including to the PSTN.  Video without audio, or any future data-type streams, would not apply and we don't need to handle them this way and can restrict the browser from allowing it.

-hadriel",<E48CF4EF-50EE-4C08-BECA-9969B9A58F39@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 11:58:15
4514,RtcWEB,65,149,"InformationProviding,Disagreement,ContextSetting,ProposeAction",98,98,"
I disagree. You need both 1) a large number of bits of transaction ID (on the order of the 128 bits provided by STUN), and 2) a shared secret passed out of band between the two ends (for example, the short term credentials used by STUN connectivity checks).

Failing to provide both of the above opens possibilities for attacks that I believe will not be acceptable to browser vendors due to the relative danger of exposing this capability ""behind the firewall.""
",<D2427BCF-0289-4D29-B812-BAE4107A953A@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:29:33
4515,RtcWEB,65,150,"InformationProviding,Answer",98,98,"
If datagrams are also allowed, a remarkable amount of the data being sent can be chosen from the Javascript. The datagram proposals assume that ICE is used to get consent ahead of time.
",<D2427BCF-0289-4D29-B812-BAE4107A953A@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:29:33
4516,RtcWEB,65,152,"InformationProviding,NeutralResponse,ProposeAction",99,99,"
I don't believe this is enough bits, and it lacks the shared secret mechanism.
",<D2427BCF-0289-4D29-B812-BAE4107A953A@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:29:33
4517,RtcWEB,65,154,"InformationProviding,Agreement,ProposeAction",100,100,"
Correct, but my point is that the ICE implementation must exist.
",<D2427BCF-0289-4D29-B812-BAE4107A953A@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:29:33
4518,RtcWEB,65,156,"InformationProviding,NeutralResponse,ProposeAction,Social",101,101,"
Again, I don't think it provides adequate protection to the other devices on the network behind the firewall that the browser is on. But do please write your proposal up in more detail.
",<D2427BCF-0289-4D29-B812-BAE4107A953A@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:29:33
4519,RtcWEB,65,226,"InformationProviding,NeutralResponse,ProposeAction",13,-1,"> -----Original Message-----
> From: rtcweb-bounces@ietf.org
> [mailto:rtcweb-bounces@ietf.org] On Behalf Of Hadriel Kaplan
> Sent: 28 July 2011 08:52
> To: rtcweb@ietf.org
> Subject: [rtcweb] Strawman for how to prevent voice-hammer without ICE
> Howdy,
> With regard to mandating ICE, such that an RTCWEB browser
> cannot send RTP without doing ICE successfully first... is
> that restriction purely to prevent the voice-hammer attacks?
> If so, then it's unfortunate because obviously it would
> seriously reduce interop with non-RTCWEB VoIP devices.  But I
> think there's a way to prevent the hammer attack without
> using ICE, and without requiring legacy VoIP devices to
> change whatsoever.
> One way would be to use the receipt of RTP as an indicator
> the far-end expects to receive it from you.  So have the
> browser generate RTP/RTCP packets, at a relatively slow rate,
> for a short duration (e.g., use the same rate/retransmit
> timers of STUN connectivity checks in ICE).  If the browser
> receives RTP/RTCP packets, then the far-end expected to
> receive them as well and the browser can do normal RTP from then on.
> If this was a hammer attack, this doesn't generate any more
> load on the target than ICE, since ICE would have sent X
> number of STUN packets for Y time as well, and I'm suggesting
> the X and Y be the same values for the initial RTP packets
> during the ""check"" phase.
> The major weakness of this approach is that a malicious
> web-server trying to get your browser to do the voice hammer
> could send RTP to your browser, since it knows the
> address/ports of both sides, codec payload types, etc. (i.e.,
> it can spoof being the attack target to make your browser
> think it's ok to do normal RTP)  But we could probably play
> games with RTCP SR/RR or even just require continued RTP
> receipt to send RTP, in order to mitigate this weakness or
> make it of low value to exploit.
[JRE] The problem with requiring continued RTP receipt (or even ANY RTP receipt) is sessions where RTP is one-way, e.g., when mic muted, camera off. With many asymmetric possibilities coming out of the CLUE work, this could be a problem, although it perhaps goes away if everything is multiplexed onto the same port. It depends whether we can expect all legacy devices to behave in a way that would make this work.

John

John Elwell
Tel: +44 1908 817801 (office and mobile)
Email: john.elwell@siemens-enterprise.com
http://www.siemens-enterprise.com/uk/

Siemens Enterprise Communications Limited.
Registered office: Brickhill Street, Willen Lake, Milton Keynes, MK15 0DJ.
Registered No: 5903714, England.

Siemens Enterprise Communications Limited is a Trademark Licensee of Siemens AG.

> Does anyone else care about interop-ing with legacy
> non-RTCWEB voip devices?  I checked
> draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't
> see it, so I'm not sure.
> -hadriel
> rtcweb mailing list
> rtcweb@ietf.org
> https://www.ietf.org/mailman/listinfo/rtcweb",<A444A0F8084434499206E78C106220CA08F1D75CF6@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-07-28 14:10:17
4520,RtcWEB,65,236,"InformationProviding,Agreement,ContextSetting,ProposeAction",226,226,"
Yes, but they don't turn off RTCP (assuming they do RTCP).  I'm not suggesting that it's a 1:1 mechanism of receipt/send, nor that it even be very dynamic/real-time.  But sure there will be some cases that it won't work.  But that's no worse than the current state of things, since it won't work to begin with for such devices if ICE is mandated.  We can't achieve 100% interop regardless - I'm just trying for as much as possible.

With regards to CLUE, I don't consider their devices ""legacy"".  They'll be upgrading to handle CLUE's final spec, so they can be ""redeemed"".

-hadriel",<464DADBD-EEBE-43C8-8552-EAA40FBB610D@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 10:48:07
4521,RtcWEB,65,277,"Question,InformationProviding,NeutralResponse,ProposeAction",,17,"> -----Original Message-----
> From: Hadriel Kaplan [mailto:HKaplan@acmepacket.com]
> Sent: 28 July 2011 15:48
> To: Elwell, John
> Cc: rtcweb@ietf.org
> Subject: Re: Strawman for how to prevent voice-hammer without ICE
> On Jul 28, 2011, at 8:10 AM, Elwell, John wrote:
> > [JRE] The problem with requiring continued RTP receipt (or
> even ANY RTP receipt) is sessions where RTP is one-way, e.g.,
> when mic muted, camera off. With many asymmetric
> possibilities coming out of the CLUE work, this could be a
> problem, although it perhaps goes away if everything is
> multiplexed onto the same port. It depends whether we can
> expect all legacy devices to behave in a way that would make
> this work.
> Yes, but they don't turn off RTCP (assuming they do RTCP).
> I'm not suggesting that it's a 1:1 mechanism of receipt/send,
> nor that it even be very dynamic/real-time.  But sure there
> will be some cases that it won't work.  But that's no worse
> than the current state of things, since it won't work to
> begin with for such devices if ICE is mandated.  We can't
> achieve 100% interop regardless - I'm just trying for as much
> as possible.
[JRE] This assumes RTP-RTCP multiplexing, which not many current devices support. There are so many things that RTC-Web is proposing to use that are not widely supported on existing devices that some sort of gateway looks inevitable. Eliminating one particular instance of incompatibility might reduce the amount of adaptation the gateway needs to perform, but it looks increasingly unlikely that all adaptation can be eliminated. So is there any real value in trying to eliminate one aspect if others can't be eliminated? Probably yes, but not if it introduces other compromises, e.g., security. I think it is worth exploring this further.

John

> With regards to CLUE, I don't consider their devices
> ""legacy"".  They'll be upgrading to handle CLUE's final spec,
> so they can be ""redeemed"".
> -hadriel",<A444A0F8084434499206E78C106220CA08F1D75E24@MCHP058A.global-ad.net>,john.elwell@siemens-enterprise.com,0.0,0,2,2011-07-28 17:14:42
4522,RtcWEB,65,287,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Apologising",277,277,"
No, I didn't mean to assume multiplexing.  Sorry if it was confusing.  I meant if you're worried about using RTP reception to allow transmission because in some cases RTP isn't sent from the far end for periods of time, then one could use the reception of RTCP on the odd port to allow the sending of RTP on the even.

I was already assuming multiplexing would not likely be used with legacy voip devices, since none of them do it today.

-hadriel",<818C0CB4-CB51-490B-B023-549E5C6F4364@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 11:30:30
4523,RtcWEB,65,289,"InformationProviding,Agreement,ProposeAction",277,-1,"[BA] Agree that it's worth exploring further, if only to document what the security requirements are, and what is required to meet them.  The problem with the gateway argument is that it can be extended too far -- it is one thing to require a gateway for signaling, and quite another to require transcoding of media, for example.  As long as we have legacy interop use cases, and aren't asserting that RTCWEB represents a ""singularity"", then we need to be able to handle them.",<BLU152-W478CD0621720183544BE7693370@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2011-07-29 05:45:23
4524,RtcWEB,65,294,"ContextSetting,ProposeAction",15,-1,Let me suggest a variation on this..,<4E31951E.1080108@jdrosen.net>,jdrosen@jdrosen.net,0.0,0,2,2011-07-28 12:58:06
4525,RtcWEB,65,336,"InformationProviding,ExtensionOfPrevious,ProposeAction",294,-1,"
The rtcweb client can send RTP packet, voice-only, for a brief period of
time (say, 2x the RTCP interval). It waits to receive an RTCP packet.
The RTCP packet should have an RR which reflects back the SSRC sent by
the client, if it does, the rtcweb client continues. If not, it stops
sending.",<4E31951E.1080108@jdrosen.net>,jdrosen@jdrosen.net,0.0,0,2,2011-07-28 12:58:06
4526,RtcWEB,65,337,"InformationProviding,ExtensionOfPrevious,ProposeAction",336,-1,"
The purpose of the RTCP SSRC check is to emulate what the STUN
transaction ID provides; that there is something on the media path which
is expecting this RTP packet. Not as good as STUN which also has the
short term credential, but its something.",<4E31951E.1080108@jdrosen.net>,jdrosen@jdrosen.net,0.0,0,2,2011-07-28 12:58:06
4527,RtcWEB,65,360,"InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction",337,337,"
I had considered using the SSRC before, but I think you're gonna have to let the javascript know the SSRC to handle some SIP/SDP usages (since there's an SSRC attribute for SDP, I assume someone needs it).  No?

-hadriel",<445CB6A5-F1B6-4553-9E95-16F7D4CF8C4D@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 13:07:36
4528,RtcWEB,65,374,"InformationProviding,Disagreement,ProposeAction",337,337,"
Lacks both the short term credential and is not enough bits to protect against attackers who can generate a flurry of forged RTCP packets. See my previous email.
",<92DE2A51-4E57-4B5F-A65A-DAB5C7317D08@skype.net>,matthew.kaufman@skype.net,0.0,0,4,2011-07-28 13:30:37
4529,RtcWEB,65,385,"InformationProviding,NeutralResponse,ProposeAction",15,15,I think this approach is not paranoid enough.,<4E31CB69.7020006@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-07-28 16:49:45
4530,RtcWEB,65,416,"InformationProviding,ExtensionOfPrevious,ProposeAction",385,15,"
The attacker will negotiate a channel claiming that you can reach him on
10.0.0.2 (your server that he wants to voice-hammer), and then send you
the five or so RTP packets you expect with a fake source address of
10.0.0.2.

Then you, having seen exactly the packets that ""authorize"" sending
traffic to 10.0.0.2, will be performing the voice-hammer attack against
the server that the attacker otherwise couldn't reach.

You would have to send RTP packets yourself (which will correctly be
dropped on the floor by 10.0.0.2) until the time at which you can start
wondering about there being no RTCP packets from 10.0.0.2 in order to
have a 2-way handshake - and that only works if the RTCP RR contains
enough stuff the attacker can't predict that he can't just generate the
RTCP too.

(This doesn't work with ICE, because the ICE handshake involves the
recipient replying to your packet with some parameters that can only be
found in the request, not in the negotiation).",<4E31CB69.7020006@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-07-28 16:49:45
4531,RtcWEB,65,444,"InformationProviding,Agreement,ContextSetting,ProposeAction",416,416,"
Yes, that was the weakness of the model as I described in my original email: that the malicious web-server can spoof the RTP from the device being attacked.
And I proposed that instead of it being a single ""authorization"" phase at the beginning of the call, it could even be continuous/periodic.  Of course the web-server could continuously send spoofed RTP to the browser, but at that point it might as well do the attack directly spoofing the browser. (in other words, the malicious website isn't gaining a very useful botnet of attackers, since I assume that's the concern)
",<1109B9FB-5432-4256-8A12-6DBABA048278@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 18:55:46
4532,RtcWEB,65,446,"InformationProviding,Agreement,ProposeAction",416,416,"
Yes I know ICE solves this, but since ICE doesn't exist for legacy VoIP and PSTN, a non-existent solution isn't very useful.

-hadriel",<1109B9FB-5432-4256-8A12-6DBABA048278@acmepacket.com>,HKaplan@acmepacket.com,0.0,0,1,2011-07-28 18:55:46
4533,RtcWEB,66,10,"InformationProviding,ContextSetting",,-1,"New draft of RETURN is up:
http://tools.ietf.org/html/draft-schwartz-rtcweb-return-05",<CAHbrMsA2TdSAL0KefqctG7UG549UG2V9XxFYX6_RbkuGmMSmqw@mail.gmail.com>,bemasc@webrtc.org,0.0,0,15,2015-03-06 10:19:53
4534,RtcWEB,66,11,"InformationProviding,ExtensionOfPrevious",10,-1,"
This draft contains a variety of clarifications and changes of emphasis,
and should hopefully now be easier to read and understand.",<CAHbrMsA2TdSAL0KefqctG7UG549UG2V9XxFYX6_RbkuGmMSmqw@mail.gmail.com>,bemasc@webrtc.org,0.0,0,15,2015-03-06 10:19:53
4535,RtcWEB,66,12,"InformationProviding,ExtensionOfPrevious,Thanking",11,-1,"
Thanks to Alan Johnston and John Yoakum for contributing new figures and
detailed text review for this revision.",<CAHbrMsA2TdSAL0KefqctG7UG549UG2V9XxFYX6_RbkuGmMSmqw@mail.gmail.com>,bemasc@webrtc.org,0.0,0,15,2015-03-06 10:19:53
4536,RtcWEB,66,50,"InformationProviding,ContextSetting,ProposeAction",11,-1,"I think RETURN is essential for WebRTC to work well across enterprise
borders.  We will increasingly see border TURN servers used by enterprises
to manage and control WebRTC usage, most likely as additions to existing
firewalls and SBCs.  Without RETURN, the usage of border TURN servers will
result in loss of functionality in WebRTC applications that use a TURN
server to provide features in addition to simple NAT traversal.  RETURN
should work perfectly to allow both TURN servers to work, while still
allowing end-to-end encrypted and authenticated media flows.

I’m not aware of any other solutions to the enterprise requirements
identified in Section 3.3.5 of
draft-ietf-rtcweb-use-cases-and-requirements.  I think we need to move
forward with this draft in RTCWEB.

- Alan -
",<CAKhHsXGcnyW05HDNqccM+-fCO9aJFLgNSbG=NKUe78y-QK8FVA@mail.gmail.com>,alan.b.johnston@gmail.com,0.0,0,4,2015-03-09 12:39:09
4537,RtcWEB,66,53,"Agreement,ProposeAction",50,-1,I agree with Alan’s assessment and also believe that we should move forward with this draft.,<9F33F40F6F2CD847824537F3C4E37DDF1E6F0F67@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2015-03-10 13:39:26
4538,RtcWEB,66,94,Agreement,53,53,"
+1
",<54FEF43B.50604@jive.com>,sperreault@jive.com,0.0,1,0,2015-03-10 09:40:11
4539,RtcWEB,66,125,"InformationProviding,Agreement,ProposeAction",50,50,"
I agree.  I'll note that RETURN covers the auto-configuration portion of
3.3.5, but browsers (and other WebRTC-compatible devices by implication)
should handle manual configurations as well.  (Just a note, it doesn't
affect the spec or RETURN I believe.)

It must be possible to configure the browsers used in the enterprise
with
network specific STUN and TURN servers.  This should be possible to
achieve by auto-configuration methods.

Randell Jesup -- rjesup a t mozilla d o t com",<54FEF599.5030002@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2015-03-10 09:46:01
4540,RtcWEB,66,186,"InformationProviding,Agreement,ContextSetting,ProposeAction",125,-1,"I agree with all of you that this draft is very important to move forward
with.

As stated under Figure 2 in the draft:
...This TURN server might be used by an enterprise, ISP,
or home network to enable WebRTC media flows that would otherwise be
blocked by the firewall, or to improve quality of service on flows
that pass through this TURN server.

I see this (in combination with auto discovery of the ""Border TURN server"")
as necessary
to finally get a proper solution to the NAT/firewall traversal problem that
has plagued
real-time communication since its occurrence in the IP world.

I hope for quick test implementations in the WebRTC browsers.

/Karl
",<1f1e01d05b92$a4f90380$eeeb0a80$@stahl>,karl.stahl@intertex.se,0.0,0,18,2015-03-11 01:30:58
4541,RtcWEB,67,13,"InformationProviding,ExtensionOfPrevious,ProposeAction",75,-1,I want to protest this - both practically and formally.,<5283DF61.9060807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-13 21:21:53
4542,RtcWEB,67,74,"InformationProviding,ContextSetting",,-1,"This mail concerns both administrative and technical issues, which is
why it is explicitly copied to the ADs of RAI and TSV. I hope I have
managed to keep them separate in the message.

Magnus said in an email yesterday, concerning draft-ietf-rtcweb-qos:
",<5283DF61.9060807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-13 21:21:53
4543,RtcWEB,67,75,"InformationProviding,ExtensionOfPrevious",74,-1,"> Okay, we might not have been public enough on this. It was requested by
> the Transport ADs quite some time ago that doing the QoS document in our
> WG was not appropriate and requested us to direct the document to TSVWG.
> Which was done, and where it hasn't made progress.
> You might have noted that James Polk did comment in the milestone part
> in the monday session of IETF88 about our QoS milestone should be killed.",<5283DF61.9060807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-13 21:21:53
4544,RtcWEB,67,76,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",13,-1,"
To get the formal stuff out of the way first:

Changing the deliverables of the working group *without telling the
working group* is totally inappropriate in an open, consensus-driven
process.
Changing the deliverables of the working group *without telling the
working group why* and *without allowing those reasons to be debated* is
totally inappropriate in an open, consensus-driven process.

I protest against this action.

ACTION REQUEST 1: I request that this decision be declared null and
void, and that the relevant ADs send out a message to RTCWEB (and TSVWG
if appropriate) *PROPOSING* such an action, and giving a reasonable
timeline for when they will make a decision based on mailing list feedback.

In practice:

The draft as it existed before its untimely demise consisted of two things:

- A description of how QoS mechanisms could be useful in the RTCWEB use case
- A description of existing mechanisms that could be appropriate for the
RTCWEB use case

The first one is clearly something that needs RTCWEB consensus. It seems
to have no need for, nor likelyhood of gathering interest enough for, a
TSVWG consensus.

There could be some argument that the second part needs TSVWG consensus,
especially if it was redefining any mechanisms, or it was making choices
between mechanisms where TSVWG had strong opinions about which
mechanisms should be chosen, but had not chosen to document that in any
document on which IETF consensus had been declared (that is to say,
existing RFCs).

My archive shows 36 messages where the title refers to this draft. It
shows no messages declaring that feedback has been incorporated and
calling for new review - something that is usually necessary to get a WG
consensus on any document. The debate hasn't been conclusive, but then,
it hasn't been pushed hard either.

The people who know how RTCWEB works are in this working group. Some of
them may be in TSV, but I think the locus of knowledge for saying what
QoS mechanisms are appropriate for RTCWEB are here, not in TSV.

This results in my second request.

ACTION REQUEST 2: I request that the chairs declare that based on the
debate about the QoS functionality so far, the document should be
resurrected, and will continue to be  worked on in the RTCWEB working
group, bringing in advice from TSVWG as required to make sure the
descriptions of underlying mechanisms, and the choice of such
mechanisms, is correct and appropriate.
",<5283DF61.9060807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-13 21:21:53
4545,RtcWEB,67,77,"InformationProviding,ProposeAction",,-1,"
Surveillance is pervasive. Go Dark.",<5283DF61.9060807@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-13 21:21:53
4546,RtcWEB,67,186,"InformationProviding,ContextSetting",76,-1,"I, speaking at the mic, was merely pointing out that this draft had
moved to TSVWG back in the Atlanta timeframe (though, thinking back,
I think I left the timing piece out of my comment), so it wasn't a
recent decision. I believe this came directly from talks between the
above mentioned ADs.",<201311132211.rADMBaBD011692@rcdn-core2-5.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-13 16:11:36
4547,RtcWEB,67,187,"ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting",76,-1,"
As for RTCweb work being more appropriately inside the RTBweb WG
instead of another group, I'd like to point out that much of the SDP
work related to this WG is in fact being done in MMUSIC. Much of the
RTP work being done by this WG is being done in AVTCORE (or AVTEXT?).
All of the base SCTP work being done by this WG is being done in TSVWG.",<201311132211.rADMBaBD011692@rcdn-core2-5.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-13 16:11:36
4548,RtcWEB,67,188,"ExtensionOfPrevious,ContextSetting",187,-1,"
(this is not an attack, but...)",<201311132211.rADMBaBD011692@rcdn-core2-5.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-13 16:11:36
4549,RtcWEB,67,189,"Question,ExtensionOfPrevious",188,-1,"
...why are you arguing for something as far away down the stack as
DSCP assignments to be done in RTCweb, and not where all other
DiffServ work is being done in the IETF (in TSVWG)? Do you not trust
that TSVWG will do an appropriate just with a DiffServ ID but you
will trust TSVWG with SCTP IDs?",<201311132211.rADMBaBD011692@rcdn-core2-5.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-13 16:11:36
4550,RtcWEB,67,190,"ExtensionOfPrevious,ProposeAction",189,-1,"
Color me confused...",<201311132211.rADMBaBD011692@rcdn-core2-5.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-13 16:11:36
4551,RtcWEB,67,358,"ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting",186,186,"
This only reinforces my procedural comment. The fact that the decision,
and the reasons for it, has been hidden from the group for 8 (?) months
only makes it worse, not better.

When ADs make decisions by talking among themselves, they have a special
duty to make sure those decisions are public and open to the community.
That duty has not been executed in this case.
I don't know who dropped the ball - the ADs or the chairs. But the ball
was definitely dropped.
",<52843288.5000507@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-14 03:16:40
4552,RtcWEB,67,360,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction",187,187,"
I have issues with those too. Especially the speed at which they're
progressing. But those decisions were made and announced in a timely
fashion.

The argument that has been used is that the pieces we need defined
(BUNDLE, MSID, circuit-breakers, RMCAT) have general applicability, and
should therefore be processed by groups that are chartered to define
extensions with general applicability.
",<52843288.5000507@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-14 03:16:40
4553,RtcWEB,67,362,"InformationProviding,Answer,ContextSetting,ProposeAction",189,189,"
My understanding of the QoS draft has always been that it should define
no new codepoints. It should point out the language we need to translate
RTCWEB requirements (""audio should go faster than video, except when the
app says that it should be the other way around"") into already-defined
DSCP code points.

I have not seen anyone arguing for new DSCP codepoints, so I really
wonder what work there is for TSVWG to do.

Again, the arguments may be there, but since they were never exposed to
the mailing list, I cannot evaluate them.
",<52843288.5000507@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-14 03:16:40
4554,RtcWEB,67,364,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",362,189,"
My biggest practical issue with this draft is that it's functionally
dead. I'm getting put in a place where I have to either delay shipping
this feature in product or ship without even the guidance of a live draft.

I want this group to be done. As long as I can't even point to the
document that describes how we do QoS, I have no chance of getting it to
that stage.
",<52843288.5000507@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-14 03:16:40
4555,RtcWEB,67,366,"InformationProviding,ProposeAction",189,189,"
Surveillance is pervasive. Go Dark.",<52843288.5000507@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-11-14 03:16:40
4556,RtcWEB,67,481,"InformationProviding,NeutralResponse,ProposeAction",364,364,"
[BA] The approach of dispersing work among half a dozen WGs isn't working in this case, and in fact hasn't worked particularly well in the past either, because it generates neither urgency nor focus.

At this point, we are probably not much more than a year away from widespread deployment of  running code. So if a critical dependency is not making progress toward a WGLC it is time to hit reset. The reality is that there is no reservoir of undiscovered manpower to get this work done, just interested authors and reviewers who if fed a steady stream of documents without unnecessary distractions and bureaucratic impediments can help us rapidly get to closure.

Our current process is akin to shuttling children from one neglectful foster home to another until we lose track of them and realize to our dismay that something bad has happened. This isn't a plan so much as an accident waiting to happen.
",<BLU403-EAS2689015F100872BC417EF2493F80@phx.gbl>,bernard_aboba@hotmail.com,0.0,0,1,2013-11-13 20:29:19
4557,RtcWEB,67,608,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction",481,-1,"I'm trying to not say much on this whole thread but I wonder if the tsv-ad could provide any more insight around why this was appropriate for TSV.

It's not assigning any new DSCP, it's simply providing pointers to the existing codes defined in documents done by TSV that talk about the DSCP to use for audio, video, and such. I think if folks could help people understand what transport content was, that would help. (and added David as he has been involved with this draft )

Cullen in my individual contributor role.
",<B80D5D7B-EDD6-4965-95C4-09A19E61E721@cisco.com>,fluffy@cisco.com,0.0,0,0,2013-11-14 05:21:13
4558,RtcWEB,67,732,"Agreement,ContextSetting,StateDecision",608,608,"
Probably so, but Martin is on his last week of parental leave - I'll check
with him when he surfaces.
",<CAKKJt-cPzKFXgb1-UYi5bWm+bVzDbqu1k9_OV7bKALnftewOkw@mail.gmail.com>,spencerdawkins.ietf@gmail.com,0.0,1,0,2013-11-14 00:33:00
4559,RtcWEB,67,963,"InformationProviding,ContextSetting",358,358,"
it was mentioned during the chair's review of RTCweb documents during
the Orlando RTCweb meeting. I was there in the front row...
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4560,RtcWEB,67,965,"InformationProviding,Disagreement,ContextSetting",358,358,"
I think this was announced on the list, but was part of a larger
email, and not the main topic (i.e., ""subject"" line)... making
searching for it difficult at best.
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4561,RtcWEB,67,967,"InformationProviding,ContextSetting,ProposeAction",360,360,"
I figured this was part of the problem, and have nothing good to add here.
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4562,RtcWEB,67,969,"InformationProviding,ContextSetting,ProposeAction,Apologising",360,360,"
it was RMCAT (also in Transport) that was the main interaction from
my pov, and I think from the TSVWG chairs pov, as RMCAT's chairs said
to TSVWG (paraphrasing) ""we don't think we're going to need anything
new or existing work wrt DiffServ to solve RMCAT's solution"". This
effective told the TSVWG chairs they could table/postpone/whatever
the DiffServ draft from RTCweb until RMCAT was through deciding which
solution they were going to go with. I think, perhaps, the TSVWG
chairs (me included) thought there was more of a direct link between
RMCAT and RTCweb than there really was. If there was, and we were
talking past each other, then  apologize, as I clearly didn't get that memo.
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4563,RtcWEB,67,971,"InformationProviding,Agreement",362,362,"
It shouldn't and doesn't, it's merely a profile doc for RTCweb (said
as an author and as a TSVWG chair).
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4564,RtcWEB,67,973,Agreement,362,362,"
that's my understanding (of the requirements) too
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4565,RtcWEB,67,974,"InformationProviding,Agreement",362,362,"
nor should they have
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4566,RtcWEB,67,976,"InformationProviding,NeutralResponse,ContextSetting",362,362,"
to make sure that no one specifies anything stupid in the profile.

What RTCweb doesn't know, except for Magnus and Colin, is that TSVWG
is in the process of bis-ing our DiffServ guidelines RFC (4594).
We've reached WG consensus on most of the proposed changes, by the
author/editor has a couple of changes he hasn't reach WG consensus with/on.
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4567,RtcWEB,67,978,"Disagreement,ContextSetting",362,362,"
""never"" is, I think, not true.

I'll give you 'announced along with 50m other things in RTCweb
(buried in the background noise) ...
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4568,RtcWEB,67,980,ProposeAction,364,364,"
see above for the confusion
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4569,RtcWEB,67,982,"Agreement,Social",364,364,"
I can certainly appreciate that
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4570,RtcWEB,67,984,"Social,Agreement",364,364,"
again, I can certainly appreciate that
",<201311141931.rAEJVBn2004230@rcdn-core-3.cisco.com>,jmpolk@cisco.com,0.0,1,1,2013-11-14 13:31:11
4571,RtcWEB,67,1262,"ContextSetting,ProposeAction",364,-1,"We don't need to keep hearing from people how much they want this done -
we need to hear from people who say they'll do this, or speak to people
who understand the issues and get new text to go into this draft.",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4572,RtcWEB,67,1263,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1263,-1,"
The draft was discussed at length in Berlin. Cullen presented to TSVWG -
it received feedback, comments, and a request to address the comments on
the list or in the draft. We followed-up with announcement to RMCAT in
Berlin, and a tiny bit of feedback. Cullen who presented, also Chairs
RMCAT - so surely can't be ""hidden"" from RMCAT?",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4573,RtcWEB,67,1264,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Apologising",1263,-1,"
In TSVWG, there was interest recorded in doing such work, and there's
surely expertise to work on DSCP-related issues. However, I saw no
discussion following Berlin on the list or responses from the authors,
sorry. We did see need for various other things (SCTP-related) by RMCAT,
and promptly adopted and also prioritized these.",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4574,RtcWEB,67,1265,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1264,-1,"
I hoped there would be an updated draft - but there was no presentation
requested and there had been no document update in response to the
comments. IF Cullen had wanted to come back and say more (or anyone
else) they could have done.",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4575,RtcWEB,67,1266,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",1265,-1,"
If people *are* interested - and people keep saying they are - then
please listen to the feedback being given and either update the draft or
propose another draft that addresses the comments. If the comments don't
apply for some reason, then bring up the topic on the list. If the
feedback isn't clear enough to act upon, and it may not be after time,
we can surely help...",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4576,RtcWEB,67,1267,"InformationProviding,ExtensionOfPrevious,ProposeAction",1266,-1,"
We're listening...",<52854A9E.1010506@erg.abdn.ac.uk>,gorry@erg.abdn.ac.uk,0.0,1,3,2013-11-14 22:11:42
4577,RtcWEB,67,1538,"InformationProviding,Agreement,ProposeAction",,-1,"s/RMCAT/RTCWEB/g

Otherwise, +1
",<D324B3F7-4453-4F3D-A89C-48B635A45F32@netapp.com>,lars@netapp.com,0.0,1,0,2013-11-15 08:52:44
4578,RtcWEB,67,1541,Social,,-1,"Hi Harald,",<52848582.1070408@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-14 10:10:42
4579,RtcWEB,67,1625,"InformationProviding,ContextSetting,StateDecision,Thanking",76,-1,"
thanks for your email. I will touch base with the TSV ADs and with Wes
(former TSV AD) and get a status update on this piece of work. It will
take a few days, though (when Martin will be back, as Spencer also
mentioned in this thread). We will keep the group posted.",<52848582.1070408@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-14 10:10:42
4580,RtcWEB,67,1673,"InformationProviding,ContextSetting,ProposeAction,StateDecision",1625,1625,"
I was mostly guilty for advocating that this be moved over, so
no need to bother Martin in order to explain the history.

It was creating some confusion between multiple WGs at the IETF
meeting, particularly with regard to what RMCAT was doing, what
RTCWEB was doing, and how DiffServ actually works.  So we had a
quick discussion about moving it to TSVWG between the available
set of:
- authors
- RTCWEB chairs
- TSVWG chairs
- RAI ADs
- TSV ADs

At the time that it was moved over to TSVWG, I had sent the
TSVWG a description of why:
http://www.ietf.org/mail-archive/web/tsvwg/current/msg11631.html

I agree that this obviously should have also been discussed in
the RTCWEB WG.  If all interested people weren't aware of the
move, then that is bad, and should be corrected now.

As for the current status, the document does not yet address
core issues that have been pointed out.  See, for instance:
http://www.ietf.org/mail-archive/web/tsvwg/current/msg12042.html

People interested should work on this in TSVWG.  There does not
seem to be any reason for RTCWEB to be gated on it, as it has zero
impact on interoperability or the protocol.  Having a normative
reference to it is not correct and is easy to fix.

Wes Eddy
MTI Systems",<5285062F.9070204@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-11-14 12:19:43
4581,RtcWEB,67,1729,"InformationProviding,ContextSetting,ProposeAction,Social",1673,1673,"
Hi Wes,

The issue raised isn't that there is an RTCWEB document gated on it, but
that shipping code does require this to be resolved.  The message you point
to above notes a core issue, which I assume is this:

That said, I think the interesting facet of this document is that
packets within the same flow (defined by 5-tuple of address-port
pairs and protocol number) are receiving different codepoints, and
the implications of that for a CC that may be on top of them need
to be delved into.
",<CA+9kkMBTh06=Zegv0D7315sWMbe=t-2Ow2kEry-x7hMcMcC-Sw@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-11-14 10:38:12
4582,RtcWEB,67,1730,"InformationSeeking,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction",1729,1673,"
I think the authors may not have seen ""interesting facet""
as a clear enough signal that they were blocked on this.
Can you restate this problem to them, so that they understand either
where in the document they should raise the issue or where there is
work they can reference
for incorporation?

You may want to include pointers on why having this situation,

versus multiple flows going between the same end points in

other contexts, is a problem.  I'm kind of concerned as well
that they will take the simple solution (use the most stringent

QoS), which is clear enough from a congestion control perspective

but bad from other perspectives.
",<CA+9kkMBTh06=Zegv0D7315sWMbe=t-2Ow2kEry-x7hMcMcC-Sw@mail.gmail.com>,ted.ietf@gmail.com,0.0,0,1,2013-11-14 10:38:12
4583,RtcWEB,67,1733,Social,,-1,"Hi,",<5285242A.4050103@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-14 21:27:38
4584,RtcWEB,67,1799,"InformationProviding,ContextSetting",,-1,"
[adding Subha, the main author of the draft, to the cc:]",<5285242A.4050103@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-14 21:27:38
4585,RtcWEB,67,1800,"InformationProviding,ExtensionOfPrevious,StateDecision",,-1,"
Subha intends to revise the draft before the end of this month. She will
try and address the comments below from Wes.",<5285242A.4050103@ericsson.com>,Gonzalo.Camarillo@ericsson.com,0.0,0,1,2013-11-14 21:27:38
4586,RtcWEB,67,1803,"ContextSetting,Thanking,Apologising",,-1,Thanks Gonzalo.  I am sorry I am coming in late ...,<AAD74A5C56B6A249AA8C0D3B41F869902040D20B@xmb-aln-x10.cisco.com>,sdhesika@cisco.com,0.0,0,21,2013-11-14 20:54:30
4587,RtcWEB,67,1891,"InformationProviding,ExtensionOfPrevious,ContextSetting",1803,-1,"
- I was asked to move the document from RTCWEB to TSVWG and here is an email I posted to announce that it has moved in TSVWG.
http://www.ietf.org/mail-archive/web/tsvwg/current/msg11609.html
It seems like I did not post a similar thread to RTCWEB.",<AAD74A5C56B6A249AA8C0D3B41F869902040D20B@xmb-aln-x10.cisco.com>,sdhesika@cisco.com,0.0,0,21,2013-11-14 20:54:30
4588,RtcWEB,67,1892,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1891,-1,"
- I am aware that there are concerns regarding the draft due to the bundling of flows.  I did not update the draft for Vancouver because I was looking for the outcome or discussions regarding bundling in RTCWeb.  The update I am looking to provide (but will have discussions with people who have expressed this objection) is that this QoS draft will not get into bundling issues. The application will provide the priority, the suggestion of how to translate them into the DSCP value  or other values will be the focus of the draft.
In the bundling discussion, Dan Drutta, co-author of this draft raised an issue that bundling should take priority into account. That viewpoint will continued to be expressed but outside this draft.",<AAD74A5C56B6A249AA8C0D3B41F869902040D20B@xmb-aln-x10.cisco.com>,sdhesika@cisco.com,0.0,0,21,2013-11-14 20:54:30
4589,RtcWEB,67,1893,"InformationProviding,ExtensionOfPrevious,ContextSetting",1892,-1,"
- The other reason that this draft was not updated is because we were waiting on the priority tags to be defined from the application to the browser. This was done recently in W3C.",<AAD74A5C56B6A249AA8C0D3B41F869902040D20B@xmb-aln-x10.cisco.com>,sdhesika@cisco.com,0.0,0,21,2013-11-14 20:54:30
4590,RtcWEB,67,1894,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,StateDecision",1893,-1,"
So, a new draft will go out by the end of the month. I would very much like to understand why/how this draft has caused a dependency on implementations. I am happy to work with other authors to remove any roadblocks this draft is causing.",<AAD74A5C56B6A249AA8C0D3B41F869902040D20B@xmb-aln-x10.cisco.com>,sdhesika@cisco.com,0.0,0,21,2013-11-14 20:54:30
4591,RtcWEB,67,1948,"InformationProviding,ProposeAction,UnderstandingNegative,Social",1729,1729,"
Hi Ted, it probably doesn't matter if I don't understand, but
it seems dubious to me that any shipping code could be held
up over this.  Codebases don't need to set DSCP in the same
way, plus we've always been told that RTCWEB codebases are
easy to upgrade.  Anyone can ship code setting the DSCPs in
whatever way they want to, and there will be no interop issues.
",<5285302A.2040903@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-11-14 15:18:50
4592,RtcWEB,67,1950,"InformationProviding,Agreement,ContextSetting,ProposeAction",1729,1729,"
Actually, there are others.  It was pointed out on the TSVWG list
that the actual mappings recommended in the document are not going
to work well.  For instance, see:
http://www.ietf.org/mail-archive/web/tsvwg/current/msg12072.html
",<5285302A.2040903@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-11-14 15:18:50
4593,RtcWEB,67,1952,"InformationProviding,ContextSetting,ProposeAction",1730,1730,"
I don't know if they're really ""blocked"" on this though ... I've
just brought it up as a comment.
",<5285302A.2040903@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-11-14 15:18:50
4594,RtcWEB,67,1954,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction",1730,1730,"
IMO, this is a fundamental issue with the recommendation that
differs from the way that DiffServ is implemented and thought
about.  Classifiers operate based on flow-level n-tuple
information generally.  The document pretends that what it's
prescribing is perfectly normal, which I don't think is the case,
and I don't know if it's even something the IETF wants to do.
",<5285302A.2040903@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-11-14 15:18:50
4595,RtcWEB,67,1971,"Agreement,ProposeAction",1954,1954,"
+1

This really needs some deep thinking by the DiffServ folks. (And they don't hang out in RTCWEB.)

Lars",<6149C92B-220E-474B-910F-12FB2063BF11@netapp.com>,lars@netapp.com,0.0,1,0,2013-11-15 08:51:45
4596,RtcWEB,67,2100,"InformationProviding,ContextSetting,Apologising",,-1,"
We apologize for the failure to inform and keep the WG aware of the
discussion and TSV ADs request to move draft-ietf-rtcweb-qos with it's
then content to TSVWG. A request chairs and authors accepted in the end
more than a year ago. This is clearly a failure by us chairs to ensure
sufficient transparency and a venue to timely protest that decision.",<52B31AF0.60107@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-19 17:12:32
4597,RtcWEB,67,2101,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",2100,-1,"
After reviewing this with TSVWG chairs, the non-recused RTCWEB chairs
(Magnus and Ted) do believe that the DSCP aspects require TSVWG action,
and that draft-dhesikan belongs there as a result. If there are aspects
of the QoS approach that are outside draft-dsheikan's current remit,
those might still belong in RTCWEB. We might also be able to pull some
pieces out of draft-dhesikan for local progress, but we can't take the
full document as it stands. Thus nothing prevents the WG from creating a
new QoS related WG document assuming a different scope than the previous
document. If any WG participants see a need for such a document they are
welcome to submit an individual document as a proposal for such a WG
document.",<52B31AF0.60107@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-19 17:12:32
4598,RtcWEB,67,2102,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",76,-1,"
We note you protesting the lack of progress of draft-dhesikan in TSVWG,
and state that as one reason why this document should be in RTCWEB WG.
After reviewing mailing list discussion, meeting minutes and talking to
the TSVWG chairs, it appears that the main reason it hasn't been making
more progress have been the lack of an draft update to resolve the issue
raised in the Berlin TSVWG meeting. We have good hopes that the document
can make fair progress in TSVWG assuming author and RTCWEB participants
make timely contributions to the document.",<52B31AF0.60107@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-19 17:12:32
4599,RtcWEB,67,2103,"Question,ExtensionOfPrevious",2102,-1,"
Harald, does this provide a clear enough way forward or, do you wish to
continue your appeal?",<52B31AF0.60107@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-19 17:12:32
4600,RtcWEB,67,2125,"InformationProviding,ProposeAction",2100,2100,"
A failure in transparency is actually the lesser offense, though lesser
does not mean minor.

The deeper error is that the chairs felt they had authority to make a
decision that really belonged to the working group.

This occurrence seems to be an exemplar of a pattern.

d/",<52B32AE7.1080100@dcrocker.net>,dhc@dcrocker.net,0.0,0,0,2013-12-19 09:20:39
4601,RtcWEB,67,2184,"Question,InformationProviding,ContextSetting,ProposeAction,Social",2125,2125,"
Dave,

I know we wrote decision in our response, and I would like to expand a
bit why. In this particular case the discussion between the TSV and RAI
ADs, the TSVWG and RTCWEB chairs as well as the draft-ietf-rtcweb-qos
authors resulted in an implicit decision. I stated that as being us
chairs taking a decision, that was due to our failure of properly anchor
this in the WG.

What in my mind should have occurred, but didn't in this case, would be
to do the following:

1. Send an email to the WG stating an intention to move the document.
Including the main motivations for the action. Provide a dead-line when
this will be done unless objections have been raised.

2. When the dead-line has been reached, assuming no objections document
it as the decided.

Do you think I as a chair is overstepping my authority if I follow the
above process in these cases where discussion is occurring in a smaller
group and some proposed direction is reached?

I note that in this particular case it could have been the ADs that
could have made the decision. However, as this wasn't communicated as an
AD decision, I will not attempt to hide my responsibility behind such a
line of argumentation.

Merry Christmas
",<52B40A1E.6030308@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-20 10:13:02
4602,RtcWEB,67,2278,"InformationProviding,ContextSetting,ProposeAction",2184,2184,"
Magnus,

(I note that Harald has indicated he's now satisfied with the current
situation.  That moves this exchange farther into the realm of
hypotheticals.  Still, it might be useful.)
",<52B481A9.6010008@dcrocker.net>,dhc@dcrocker.net,0.0,0,0,2013-12-20 09:43:05
4603,RtcWEB,67,2279,"Answer,ContextSetting",2184,2184,"
Simple answer:  What you describe would have been 'legal', but I believe
it also would not have been advisable.
",<52B481A9.6010008@dcrocker.net>,dhc@dcrocker.net,0.0,0,0,2013-12-20 09:43:05
4604,RtcWEB,67,2280,"InformationProviding,ExtensionOfPrevious,ContextSetting",2279,2184,"
Extended answer:

The IETF list today has a thread about the handling of chair and author
assignments.  I posted a note into it that is relevant to rtcweb, given
its history:
",<52B481A9.6010008@dcrocker.net>,dhc@dcrocker.net,0.0,0,0,2013-12-20 09:43:05
4605,RtcWEB,67,2281,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",2280,2184,"
https://www.ietf.org/ibin/c5i?mid=6&rid=49&gid=0&k1=933&k2=75013&tid=1387560859

That was about wg ""structure"".  The question here is about process for
making a decision.

The basic model for IETF wg decision-making is ""default no"".  That is, a
working group needs to amass rough consensus IN FAVOR, in order to
approve a decision.

A common efficiency hack is to assert a default-yes model, for some
decisions.  That's what you propose.

Default-yes works well in a healthy working group that is nicely making
progress.  It relies in high trust of the working group chairs,
participant comfort in being able to raise objections, and good working
group support for discussing objections.

At the beginning of a working group, the primary goal needs to be to
establish a pattern of affirmative consensus.  Folks need to get into
the habit of finding things to actively agree on.  That requires an
active process.  Passive ""no one objected"" agreement often isn't really
agreement.  More importantly, it definitely isn't active support for the
final output.

Active support for the final output is the single-most important goal
for IETF work, since it creates a likelihood of adoption in the field.

That's not what you've got in rtcweb.  Quite the opposite.  Just look at
the wg statistics.  Lots of documents.  1.5 years.  Nothing published.
Blocked on a decision about a component.   I also hear continuing
reports of mutual suspicion amongst participants.

So no, I don't think what you propose would have been a good choice,
even though it might have been legal.

But your ending note about the possibility of an AD decision points to
an even deeper problem:  ADs don't have that authority.

Working groups decide on what documents they adopt, within the
constraints of their charters.  To move a document from one working
group to another requires agreement of both working groups.  AD's do not
have final authority on this.

If you disagree, please show me where that authority is assigned.

d/
",<52B481A9.6010008@dcrocker.net>,dhc@dcrocker.net,0.0,0,0,2013-12-20 09:43:05
4606,RtcWEB,67,2302,"InformationProviding,ProposeAction,StateDecision",2281,2281,"
The document is doing things that are in TSVWG's charter and not
in RTCWEB's charter.  It should not have been adopted in RTCWEB
in the first place.  Moving it out corrected that mistake.
",<52B4BEBD.4060702@mti-systems.com>,wes@mti-systems.com,0.0,1,2,2013-12-20 17:03:41
4607,RtcWEB,67,2305,Agreement,2302,-1,Agreed.,<949EF20990823C4C85C18D59AA11AD8B0FC77A@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-12-23 03:02:20
4608,RtcWEB,67,2341,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",2305,-1,"
Aside from the issue of failure to publicise the chairs actions, which the RTCWEB chairs have acknowledged, I believe the only open issue is to identify whether the transfer of work within the scope of the TSVWG leaves any work that is outside the scope of the TSVWG.",<949EF20990823C4C85C18D59AA11AD8B0FC77A@FR712WXCHMBA11.zeu.alcatel-lucent.com>,keith.drage@alcatel-lucent.com,0.0,1,1,2013-12-23 03:02:20
4609,RtcWEB,67,2345,Social,,-1,"Hello,",<6.2.5.6.2.20131220163235.0b517a38@resistor.net>,sm@resistor.net,0.0,0,0,2013-12-20 16:55:12
4610,RtcWEB,67,2414,"InformationSeeking,Question,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social",2281,2281,"
From the RTCWEB minutes:

The milestones were quickly reviewed, primarily noting that we are late with
everything.  The WG was asked if they think it is a reasonable
goal to finish
all the core documents before the end of 2014.  This will be a challenge and
people need to help by actually reviewing the documents and send comments.

The dependencies was also reviewed.  Authors, consider if our normative
references make sense. Are they really needed?  Waiting on references slows
down publication.  WG please contribute to finish up these references also.""

Currently, the goals and milestones are as follows:

Oct 2012 - Send Security and Privacy Problem Statement
(draft-ietf-rtcweb-security) to IESG for publication as Informational

Oct 2012 - Complete Overview (and hold for dependency resolution)
(draft-ietf-rtcweb-overview)

Oct 2012 - Send Use Cases document
(draft-ietf-rtcweb-use-cases-and-requirements)
to IESG for publication as Informational

Jan 2013 - Send Media Transport (draft-ietf-rtcweb-rtp-usage) to IESG for
publication as Proposed Standard

Jan 2013 - Send Security Solution (draft-ietf-rtcweb-security-arch) to IESG
for publication as Proposed Standard

Jan 2013 - Send Signalling Negotiation and NAT Traversal
(draft-ietf-rtcweb-jsep)
to IESG for publication as Proposed Standard

Jan 2013 - Audio Processing and Audio Codecs
(draft-ietf-rtcweb-audio) to IESG
for publication as Proposed Standard

Jan 2013 - Video Processing and Video Codecs
(draft-ietf-rtcweb-video) to IESG
for publication as Proposed StandardVideo Processing and Video Codecs
(draft-ietf-rtcweb-video) to IESG for publication as Proposed Standard

May 2013 - Send Quality of Service markings of RTCWeb packets
(draft- ietf-rtcweb-qos) to IESG for publication as Proposed Standard

Mar 2014 - Send STUN Usage for Consent Freshness to IESG for publication
as proposed standard

May 2103 - Send Data Stream Transport for non-media data
(draft-ietf- rtcweb-data-channel) to IESG for publication as
Proposed Standard

The ""2103"" could be a typo or RTCWEB could have been chartered for a
100 years. :-)

Could the milestones be updated?  It might help to provide a sense of
what the goals are and to assess whether the goals are being met.
",<6.2.5.6.2.20131220163235.0b517a38@resistor.net>,sm@resistor.net,0.0,0,0,2013-12-20 16:55:12
4611,RtcWEB,67,2438,"Answer,ProposeAction,StateDecision",2414,2414,"
Yes, they will be updated. I will try to get this done with my co-chairs
within the next 2 weeks.
",<52CBD81C.8090905@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 11:34:04
4612,RtcWEB,67,2586,"ContextSetting,ProposeAction",,-1,"Dave,

See inline.
",<52CBEDAF.4030808@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 13:06:07
4613,RtcWEB,67,2588,"InformationProviding,ContextSetting,ProposeAction,StateDecision",2281,2281,"
I would note that my above statement says, what I think should have
happened in this case. The reasons for this was the WG having a document
with large parts of the document outside of our charter. We also had a
proposed home for the work.

I think if you reviewed the WG's communication on the various decisions
that has been made during the WG history I think you will see both
methods been applied depending on our judgment on of the issues. For
example in all cases we expected to be controversial we have gone with
ensure approval. The tricky part I to find a good balance for the truly
no-controversial issues that people would find time wasting to seek
approval for and the ones where people should have their say.

I will keep in mind the need for ensuring approval going forward.
",<52CBEDAF.4030808@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 13:06:07
4614,RtcWEB,67,2590,"InformationProviding,ContextSetting,ProposeAction",2281,2281,"
I would note that this WG is trying to do something that isn't that
common in IETF. We are actually doing what I refer to us umbrella
standardization. Putting a large number of components together into a
system. I at least are not surprised that it has taken this amount of
time to get where we are now. I wished we where further along and that
some high attention topics wouldn't have taken the amount of energy it has.

I would also note that it has been quit an interesting process, which
had made us question the choices made in individual components in a
number of places. I think dealing with these issues of putting things
together and wanting to fix or change things is what contributes to the
delay in producing output.
",<52CBEDAF.4030808@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 13:06:07
4615,RtcWEB,67,2592,"InformationProviding,Disagreement,NeutralResponse",2281,2281,"
Noted, I disagree with you in this particular case due to the reasons
for the request to move it.
",<52CBEDAF.4030808@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 13:06:07
4616,RtcWEB,67,2594,"InformationProviding,Agreement,ContextSetting,ProposeAction",2281,2281,"
I think the ADs have the authority to manage their WGs and point out
charter violations in their area's and other WGs.

I agree that ADs don't have final authority on this. This move is not
violating this either. I hope the call for adoption in TSVWG will start
very soon for the document prompting this discussion and its topics that
falls within TSVWG charter.
",<52CBEDAF.4030808@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2014-01-07 13:06:07
4617,RtcWEB,67,2617,Social,,-1,"Hi,
",<E44893DD4E290745BB608EB23FDDB7620A17C9CC@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2014-01-07 13:07:00
4618,RtcWEB,67,2619,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction",2590,2590,"
I think it is fair to note that RTCWEB's track record in this regard is no worse than any of the SIP-related WG's is TSV or RAI area was when SIP was in its most active phase 10+ years ago. I don't know if there are good examples in other IETF areas where progress has been faster and how that has been achieved. Usually WG's deal with a single core protocol and a few extensions and that is hard enough already.

Markus",<E44893DD4E290745BB608EB23FDDB7620A17C9CC@008-AM1MPN1-043.mgdnok.nokia.com>,Markus.Isomaki@nokia.com,0.0,0,3,2014-01-07 13:07:00
4619,RtcWEB,67,2745,"InformationProviding,Answer,ProposeAction,Thanking",2103,-1,"Thank you, this resolves my practical issues, and the acknowledgement of
the communication & transparency issues seems adequate to help prevent a
repeat of this stall.",<52B3FDE9.1070300@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-12-20 09:20:57
4620,RtcWEB,67,2746,"InformationProviding,ExtensionOfPrevious,ProposeAction",2745,-1,"
I'll also take this as instructions to the group to replace all
references to -rtcweb-qos  with referenes to draft-dsheikan (or its
successors).",<52B3FDE9.1070300@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2013-12-20 09:20:57
4621,RtcWEB,67,2907,"InformationProviding,Agreement,ContextSetting,ProposeAction,Social",2746,2746,"
Yes, as this is the document we currently have. If the WG sees a need
for a document that has another scope, then I believe each author and
the WG will need to consider which of the document is the appropriate
one to reference in their contexts.

Merry Christmas
",<52B40129.8040903@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2013-12-20 09:34:49
4622,RtcWEB,68,0,"InformationProviding,ContextSetting",,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF.,<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4623,RtcWEB,68,24,"InformationProviding,ExtensionOfPrevious,ContextSetting",0,-1,"
Title           : Web Real-Time Communication Use-cases and Requirements
Author(s)       : Christer Holmberg
Stefan Hakansson
Goran AP Eriksson
Filename        : draft-ietf-rtcweb-use-cases-and-requirements-06.txt
Pages           : 24
Date            : 2011-10-04",<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4624,RtcWEB,68,25,"InformationProviding,ExtensionOfPrevious",24,-1,"
This document describes web based real-time communication use-cases.
Based on the use-cases, the document also derives requirements
related to the browser, and the API used by web applications to
request and control media stream services provided by the browser.",<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4625,RtcWEB,68,26,"InformationProviding,ExtensionOfPrevious,ContextSetting",0,-1,"
A URL for this Internet-Draft is:
http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-06.txt",<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4626,RtcWEB,68,27,"InformationProviding,ExtensionOfPrevious,ContextSetting",26,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4627,RtcWEB,68,28,"InformationProviding,ExtensionOfPrevious,ContextSetting",27,-1,"
This Internet-Draft can be retrieved at:
ftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-06.txt",<20111004130605.29904.76836.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2011-10-04 06:06:05
4628,RtcWEB,69,0,"InformationProviding,ContextSetting",,-1,Changing the title for giving the clear context of discussion.,<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4629,RtcWEB,69,113,Social,,-1,"
Peter,",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4630,RtcWEB,69,114,"InformationProviding,Thanking,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,Thanking",,-1,"
Thanks for forwarding info about draft-ietf-hybi-thewebsocketprotocol. I
started this mail thread to know whether RTCWeb1.0 is a unofficial
RFC3261bis for the line side (endpoint to access server) :-) [I really
don't know the better term for the line side]. Endpoint may be desktop,
smart phone (android), laptop, tablet, CPE, etc.,",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4631,RtcWEB,69,115,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,Social",114,-1,"
Till reading this draft, I assumed websocket as a socket layer for HTTP
and it is bad assumption :-(. In short, browser is able to create two
way communication with webserver (which has globally routable address).
Two browser creating websocket with web servers will be able to
communicate with each other. This architecture exactly fits in SIP world
as",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4632,RtcWEB,69,116,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",115,-1,"
SIP UA <---->B2BUA<----->SIP UA",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4633,RtcWEB,69,117,"InformationProviding,ProposeAction,StateDecision,InformationSeeking,InformationProviding,Agreement,ExtensionOfPrevious,ProposeAction,Social",116,-1,"
And resultant as   browser<---> webserver <----> browser. I tend to
agree with you that Websocket looks as a better choice for this simple
web architecture as there is no need of identity exchange here because
webserver knows and authenticated both browsers with the corresponding
identity. In fact, B2BUA with globally routable address will interop
better with any endpoint for that matter. The difference comes into
picture for federation (interop between servers). I'm not very clear
whether websocket is intended for federation as well or not. Most of the
discussion RTCWeb points to use SIP as a federation protocol which may
change later. I'm interested knowing your view here. For this mail, I
assume that SIP as a federation protocol of RTCWeb1.0 and I'm ready to
change if it is the right thing to do :-)",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4634,RtcWEB,69,118,"InformationProviding,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",117,-1,"
I'm asking for the single protocol based on my gateway implementation
experience in signaling protocol like SIP, H.323, and basic of MEGACO,
Q.931 (ISDN) etc., My understanding is that mapping of between tow
protocols leads to get the common set in both protocol and under
utilization of specific protocol functionality. The mapping is not
perfect lot of times and one of the example which I know in IETF product
is RFC 3398. It is not possible in RFC 3398 to proper reverse mapping of
cause code for ISUP in case conversion in first gateway converts ISUP to
SIP, second gateway converts is SIP to ISUP, ISUP cause code value in
second gateway is not same what is received in first gateway and this
leads to lot of interop issue which includes passing of reason SIP
header with Q.931 IE recently as per IETF-80 decision (workaround bug
fix). This is not the only mapping failure which I have seen during the
gateway implementation. So, I prefer to look for the strong reason for
putting multiple protocol (SIP, websocket) as a RTCWeb architecture.",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4635,RtcWEB,69,119,"InformationProviding,ExtensionOfPrevious,ContextSetting",118,-1,"
Apart from this, my understanding is that websocket + REST XML is the",<2E239D6FCD033C4BAF15F386A979BF510F0A19@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-12 12:27:54
4636,RtcWEB,69,165,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",117,117,"
I think that the protocol used for server-to-server federation is a
matter for the service providers and thus is not in scope for RTCWeb.
Some s2s links might use SIP, some might use XMPP/Jingle, etc.
",<4E6E2B5F.7030307@stpeter.im>,stpeter@stpeter.im,0.0,0,0,2011-09-12 09:55:11
4637,RtcWEB,69,223,"InformationProviding,NeutralResponse,Thanking,InformationProviding,ContextSetting,Thanking",165,113,"
Yesterday I thought browser-hints could help with transitions to
federation, especially for RTCWeb-to-SIP:

http://tools.ietf.org/html/draft-nottingham-http-browser-hints-02

Thanks.

--- http://twitter.com/Dzonatas_Sol ---
Web Development, Software Engineering
Ag-Biotech, Virtual Reality, Consultant",<4E6E3DEE.8080200@gmail.com>,dzonatas@gmail.com,0.0,0,5,2011-09-12 10:14:22
4638,RtcWEB,69,230,ExtensionOfPrevious,337,165,</snip>,<2E239D6FCD033C4BAF15F386A979BF510F0AA1@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-13 00:11:47
4639,RtcWEB,69,337,"InformationProviding,NeutralResponse,Social",223,-1,"Peter,

<snip> > I think that the protocol used for server-to-server federation
is a",<2E239D6FCD033C4BAF15F386A979BF510F0AA1@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-13 00:11:47
4640,RtcWEB,69,338,"InformationProviding,InformationProviding,ContextSetting,ProposeAction","165,230",165,"
Sec 4.2.5 of draft-ietf-rtcweb-use-cases-and-requirements-04 includes
the usecase for federation. My assumption is based on this usecases.
Till now, there is no better protocol than SIP exists for this
discussion.
",<2E239D6FCD033C4BAF15F386A979BF510F0AA1@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-13 00:11:47
4641,RtcWEB,69,340,"InformationProviding,Agreement,NeutralResponse,Social,Thanking,InformationProviding,Agreement,ProposeAction,Thanking",165,165,"
I agree with you that signaling interop is not focus of RTCWeb and only
one webserver is solution space then your solution looks like working.
Even then, I prefer single signaling protocol rather than ad-hoc
signaling protocol by each web developer.

Dzonatas,

I lean towards SIP federation because of the maturity of the SIP
protocol. Last 10 years of bug fix in SIP stack makes it more stable now

Thanks
Partha
",<2E239D6FCD033C4BAF15F386A979BF510F0AA1@sonusinmail02.sonusnet.com>,pravindran@sonusnet.com,0.0,0,4,2011-09-13 00:11:47
4642,RtcWEB,69,376,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",340,340,"
Using DNS SRV records, it's easy enough to figure out what protocols are
supported by the peer service with which you want to federate.
",<4E6E7C0B.3040201@stpeter.im>,stpeter@stpeter.im,0.0,0,0,2011-09-12 15:39:23
4643,RtcWEB,69,379,"Social,Social",,-1,Hi All!,<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4644,RtcWEB,69,446,"InformationProviding,ContextSetting,ContextSetting",376,-1,"
Some info on signaling protocol",<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4645,RtcWEB,69,447,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
1. Compositional Control of IP Media,
http://www2.research.att.com/~pamela/cmc.pdf",<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4646,RtcWEB,69,448,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",446,-1,"
2. Understanding SIP Through Model-Checking,
http://www2.research.att.com/~pamela/under2.pdf",<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4647,RtcWEB,69,449,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",447,-1,"
In paper [1], she argued that new protocol is better than SIP. The
comparison includes:
A. Transaction vs idempotent
B. Program complexity
C. Media bundling",<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4648,RtcWEB,69,450,"ProposeAction,Social",449,-1,"
Enjoy reading.",<20110912235106.11944d366mqtw6o0@webmail.it-sudparis.eu>,Shanmugalingam.Sivasothy@telecom-sudparis.eu,0.0,0,40,2011-09-12 23:51:06
4649,RtcWEB,70,0,"InformationProviding,ProposeAction",,-1,"I find it lost in rtcweb mailing list, so I forward it to pntaw list, I think the guys following this group will be interested in this change proposal. I do not like silence too and I hope the usecase and requirement could be published ASAP.",<9E34D50A21D1D1489134B4D770CE0397680AA8B2@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2014-01-22 11:56:12
4650,RtcWEB,70,169,"InformationProviding,ProposeAction",,-1,"
The change proposal is related to the discussion on pntaw. Also ,I hope the words could be more accurate and the requirement could be clearer.",<9E34D50A21D1D1489134B4D770CE0397680AA8B2@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2014-01-22 11:56:12
4651,RtcWEB,70,170,"Question,ProposeAction",,-1,"
So ,any ideas about it?",<9E34D50A21D1D1489134B4D770CE0397680AA8B2@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2014-01-22 11:56:12
4652,RtcWEB,70,171,Question,,-1,"
To Magnus:
What will happen if there is no response?",<9E34D50A21D1D1489134B4D770CE0397680AA8B2@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2014-01-22 11:56:12
4653,RtcWEB,73,0,Question,,-1,Are we done discussing it? What are the next steps?,<528F74EF.6030903@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-22 10:14:55
4654,RtcWEB,73,10,InformationProviding,,-1,"
As a reminder, the current version is here:
https://github.com/petithug/tram-charter/blob/master/charter.txt",<528F74EF.6030903@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-22 10:14:55
4655,RtcWEB,73,22,Answer,0,10,I think the charter looks good.,<4EF14367-E435-43D6-B330-0F16FB832013@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:03:14
4656,RtcWEB,73,49,Social,,-1,"Hi,
",<4EF14367-E435-43D6-B330-0F16FB832013@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:03:14
4657,RtcWEB,73,51,"Question,InformationProviding,NeutralResponse,ProposeAction",10,10,"
Being a new-bee regarding charters I have a few questions and comments.

The first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?

Can we add something around cloud in section three? For example:
“ — that make STUN and TURN more suitable for WebRTC and Cloud like
environments.”

TRAM would also benefit more traditional enterprise deployments. By using the word “cloud” the charter can get some attention from that camp as well.

Consider these comments as nits.

Pål-Erik
",<4EF14367-E435-43D6-B330-0F16FB832013@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:03:14
4658,RtcWEB,73,115,Social,,-1,"Hi Pal,
",<9E34D50A21D1D1489134B4D770CE0397680A17E1@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-11-26 09:08:16
4659,RtcWEB,73,117,"Question,InformationProviding,Answer,ProposeAction",51,51,"
Could you give some detailed requirements and considerations about the ""cloud""?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.
",<9E34D50A21D1D1489134B4D770CE0397680A17E1@SZXEMA504-MBX.china.huawei.com>,hangzhou.chenxin@huawei.com,0.0,0,20,2013-11-26 09:08:16
4660,RtcWEB,73,161,"Answer,NeutralResponse",117,117,"You are right about cloud being a bit fuzzy, and it might not bee a good idea to add buzzwords to the charter.",<0B33EFFA-CBED-4041-9D2C-6625C5CC67C0@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:27:11
4661,RtcWEB,73,197,"InformationProviding,NeutralResponse",117,117,"
My goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more “feature” parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.

This is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.

Pål-Erik
",<0B33EFFA-CBED-4041-9D2C-6625C5CC67C0@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:27:11
4662,RtcWEB,73,311,"InformationProviding,NeutralResponse",197,-1,"I am not sure that we want here anybody for whom WebRTC is a red flag. I am
not sure that we can have a healthy discussion here, then.

I think that WebRTC behind all this TURN evolution. We are not going to
sneak TURN into the enterprise; the enterprise will adopt WebRTC - and this
is how TURN will be included into the enterprise infrastructure. I believe
that this is the only realistic scenario of TURN inclusion into the
enterprise.
",<CALDtMrJqjFgK7mSL6YBoMCM6BNn=VA5dG36CcSGfa-3Pa_R=Ug@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-11-26 01:35:04
4663,RtcWEB,73,315,InformationProviding,,-1,On: 26 November 2013 09:27 Pal Martinsen Wrote:,<9F33F40F6F2CD847824537F3C4E37DDF17C55B08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:13:45
4664,RtcWEB,73,350,"InformationProviding,NeutralResponse",197,197,"
Not sure what is meant by ""more traditional enterprise folks"" but I think the group will get the attention it needs.
",<9F33F40F6F2CD847824537F3C4E37DDF17C55B08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:13:45
4665,RtcWEB,73,352,"InformationProviding,NeutralResponse",197,197,"
Many of the items mentioned here are actually not in the charter (i.e. manageability, mobility, QoS) and I also heard one the ""traditional enterprise folks"" talking about bandwidth management which is also not currently in the charter.  So maybe we need some more work on the charter or maybe what we need is to put together a requirements document and make that the first milestone.
",<9F33F40F6F2CD847824537F3C4E37DDF17C55B08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:13:45
4666,RtcWEB,73,354,"InformationProviding,Agreement,NeutralResponse",197,197,"
I don't know what is meant by ""feature parity between enterprise and RTCWEB"" but I would support a statement in the charter indicating that the work of the group will include adding functionality to TURN to allow the TURN server to enforce policy on WebRTC traffic such as those typically required in an enterprise deployment.
",<9F33F40F6F2CD847824537F3C4E37DDF17C55B08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:13:45
4667,RtcWEB,73,356,NeutralResponse,197,197,"
Such folks should be and deserve to be ignored ;-).
",<9F33F40F6F2CD847824537F3C4E37DDF17C55B08@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:13:45
4668,RtcWEB,73,388,"InformationProviding,NeutralResponse",352,352,"
Creating a working group is not a PR stunt. We have people here who want
to work on real problems. So we write a charter about those problems and
the work that needs to be done. It's as simple as that.

If/when new people come to this group with ""enterprise"" problems,
solution proposals, and the energy to work on it, I'll be happy to
propose a recharter to include the new stuff.

Any charter should always be about stuff we know we can and will fix.
",<5294ADAB.9030402@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-26 09:18:19
4669,RtcWEB,73,391,Social,,-1,"Hi Simon,",<9F33F40F6F2CD847824537F3C4E37DDF17C55B90@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:33:56
4670,RtcWEB,73,441,NeutralResponse,388,-1,"
I was simply pointing out that many of the items Pal seemed to assume the group would cover are not in the charter.",<9F33F40F6F2CD847824537F3C4E37DDF17C55B90@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:33:56
4671,RtcWEB,73,442,"InformationProviding,NeutralResponse",388,-1,"
However creating a charter is never that simple and we are already aware of work that people want to do in this group which is not explicitly mentioned in the charter.",<9F33F40F6F2CD847824537F3C4E37DDF17C55B90@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:33:56
4672,RtcWEB,73,443,"InformationProviding,NeutralResponse",388,-1,"
So when somebody comes to the group with a draft on adding some kind of bandwidth parameter to TURN then I would be preferable for this to be a matter of adding a new milestone rather than rewriting the charter. The charter should not be so closed that it can be used to argue against other ideas being put forward otherwise we will end up with a TRAM2 and a TRAM3 working group.",<9F33F40F6F2CD847824537F3C4E37DDF17C55B90@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 14:33:56
4673,RtcWEB,73,500,"InformationProviding,Answer",51,-1,"If we add word ""porn"" it will attract even more attention.

For many engineers, ""cloud"" is a non-technical term, for managers only. But
this is supposed to be a very technical list.
",<CALDtMr+H2gFHEngvm=N6aEM1=p36965aBgfpSYp=fRZ4dWN_iQ@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-11-26 01:20:37
4674,RtcWEB,73,520,Social,,-1,"Hi,",<2A412C79-7200-4730-837F-F44A2618E8F1@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:33:34
4675,RtcWEB,73,529,Answer,0,10,I think the charter looks good.,<2A412C79-7200-4730-837F-F44A2618E8F1@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:33:34
4676,RtcWEB,73,566,"Agreement,ProposeAction",500,-1,"
If we add word ""porn"" it will attract even more attention.

More attention or deployments?

For many engineers, ""cloud"" is a non-technical term, for managers only. But this is supposed to be a very technical list.

Agree. But it still be nice with some wording to get the more traditional enterprise folks onboard.

Pål-Erik
",<2A412C79-7200-4730-837F-F44A2618E8F1@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:33:34
4677,RtcWEB,73,568,"Question,InformationProviding,NeutralResponse,ProposeAction",10,10,"
Being a new-bee regarding charters I have a few questions and comments.

The first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?

Can we add something around cloud in section three? For example:
“ — that make STUN and TURN more suitable for WebRTC and Cloud like
environments.”

TRAM would also benefit more traditional enterprise deployments. By using the word “cloud” the charter can get some attention from that camp as well.

Consider these comments as nits.

Pål-Erik
",<2A412C79-7200-4730-837F-F44A2618E8F1@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:33:34
4678,RtcWEB,73,570,InformationProviding,10,10,"
tram mailing list
tram@ietf.org<mailto:tram@ietf.org>
https://www.ietf.org/mailman/listinfo/tram

tram mailing list
tram@ietf.org<mailto:tram@ietf.org>
https://www.ietf.org/mailman/listinfo/tram",<2A412C79-7200-4730-837F-F44A2618E8F1@cisco.com>,palmarti@cisco.com,0.0,0,14,2013-11-26 09:33:34
4679,RtcWEB,73,589,NeutralResponse,566,566,"
That's fine, unless it sounds like ""cloud-ready hard disks"" or similar.",<CALDtMrJg+vDPTr_QJsQTdvtKMYqK8PaU7Sbu2czNSTxr3fJJPg@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-11-26 01:39:08
4680,RtcWEB,73,643,ClarificationElicitation,,-1,"Could you clarify whether the ""cloud"" elements are

part of the problem (apps in cloud will find themselves behind restrictive
NATs) or

part of the solution (TURN servers hosted in the cloud) or

an innocent bystander collateral damage (cloud users or suppliers need to do
something)?
",<00C069FD01E0324C9FFCADF539701DB3BBEFDF59@sc9-ex2k10mb1.corp.yaanatech.com>,michael.hammer@yaanatech.com,0.0,0,5,2013-11-26 14:48:52
4681,RtcWEB,73,644,Social,,-1,"
Mike
",<00C069FD01E0324C9FFCADF539701DB3BBEFDF59@sc9-ex2k10mb1.corp.yaanatech.com>,michael.hammer@yaanatech.com,0.0,0,5,2013-11-26 14:48:52
4682,RtcWEB,73,647,"InformationProviding,Answer",643,-1,"
For many engineers, ""cloud"" is a non-technical term, for managers only. But
this is supposed to be a very technical list.
",<00C069FD01E0324C9FFCADF539701DB3BBEFDF59@sc9-ex2k10mb1.corp.yaanatech.com>,michael.hammer@yaanatech.com,0.0,0,5,2013-11-26 14:48:52
4683,RtcWEB,73,648,"InformationProviding,Agreement,ProposeAction",500,-1,"
Agree. But it still be nice with some wording to get the more traditional
enterprise folks onboard.
",<00C069FD01E0324C9FFCADF539701DB3BBEFDF59@sc9-ex2k10mb1.corp.yaanatech.com>,michael.hammer@yaanatech.com,0.0,0,5,2013-11-26 14:48:52
4684,RtcWEB,73,649,NeutralResponse,566,-1,"
That's fine, unless it sounds like ""cloud-ready hard disks"" or similar.",<00C069FD01E0324C9FFCADF539701DB3BBEFDF59@sc9-ex2k10mb1.corp.yaanatech.com>,michael.hammer@yaanatech.com,0.0,0,5,2013-11-26 14:48:52
4685,RtcWEB,73,724,"InformationProviding,NeutralResponse",500,-1,"I'm not speaking as an AD, but I am speaking as a retired IAB member who
was watching a year-long effort to charter something (well, really,
anything) in the cloud space.",<CAKKJt-c45PPy+m29N2E9g74MuzxvKN_xhPWXX112f=qDjhsOhQ@mail.gmail.com>,spencerdawkins.ietf@gmail.com,0.0,1,0,2013-11-26 11:02:23
4686,RtcWEB,73,725,"InformationProviding,ProposeAction",500,-1,"
My suggestion would be to figure out specifically what part of ""cloud"" is
relevant to what you're proposing, and point to something more specific.
For example, the data center parts of ""cloud"" started getting more traction
when they were called out specifically.",<CAKKJt-c45PPy+m29N2E9g74MuzxvKN_xhPWXX112f=qDjhsOhQ@mail.gmail.com>,spencerdawkins.ietf@gmail.com,0.0,1,0,2013-11-26 11:02:23
4687,RtcWEB,73,726,"InformationProviding,NeutralResponse",500,-1,"
The IESG (at that time) wasn't opposed to doing something that would be
helpful for clouds, but they weren't getting proposals for specific
protocol work, and that's pretty much what the IETF does ...",<CAKKJt-c45PPy+m29N2E9g74MuzxvKN_xhPWXX112f=qDjhsOhQ@mail.gmail.com>,spencerdawkins.ietf@gmail.com,0.0,1,0,2013-11-26 11:02:23
4688,RtcWEB,73,813,"InformationProviding,Agreement",726,-1,"Spencer, this is how I view it, too. If we specify a particular part of the
""cloud"" and if we define well what we are going to do about that, then it
will be fine. But then we even do not need the word ""cloud"". I think that
we already have a good-enough defined charter.
",<CALDtMr+OHuMp1saccUxFZ-=G+YvDNT2y5Xz_ZjXEYQhmL0-EQQ@mail.gmail.com>,mom040267@gmail.com,0.0,0,17,2013-11-26 19:11:45
4689,RtcWEB,73,835,"InformationProviding,Answer",51,51,"
I think that if there's interest in enterprise deployments it's
probably a good idea, in terms of getting the charter through
the process, to spell out explicitly which features would
be needed, distinct from a CPE deployment.  I tend to think
that targeting enterprises *right now* would be a mistake,
since they're the ones who tend to have the most rigid policies
around network boundary traversal and those policies are
often driven out of the corporate auditor's department.
I'd let webrtc lead the deployment and have network administrators
discover that they've got a problem.
",<5294B74E.9060107@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-11-26 05:59:26
4690,RtcWEB,73,837,Agreement,835,-1,I agree.,<5673F4ED-61CD-4C3E-A6A4-C51DB96C40AE@cisco.com>,gsalguei@cisco.com,0.0,0,4,2013-11-26 15:59:38
4691,RtcWEB,73,867,InformationProviding,,-1,On: 26 November 2013 14:59 Melinda Shore Wrote:,<9F33F40F6F2CD847824537F3C4E37DDF17C56055@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 16:20:11
4692,RtcWEB,73,889,"ClarificationElicitation,InformationProviding,ProposeAction",835,835,"
What do you mean by ""let webrtc lead the deployment""?

WebRTC specifically includes deployments where the webrtc client is behind firewalls this is explicit in the charter and http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12 which also explicitly mentions restricted enterprise deployments.

Personally I would like to start developing the tools and provide information to help network administrators before they discover they have a problem with webrtc.

Andy",<9F33F40F6F2CD847824537F3C4E37DDF17C56055@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 16:20:11
4693,RtcWEB,73,910,"Question,InformationProviding",889,889,"
Do you need specific reference to enterprise deployments
to do that?  I didn't think so.  In the meantime, if
you go out there and tell people who are dealing with
corporate policies driven out of the auditor's office that
you're going to poke holes in their firewalls using a
mechanism that's not managed under enterprise security
policy, you're going to hit resistance before you even
start.  As you may have noticed.

I'd leave any reference to enterprise networks out of the
charter.
",<5294CC22.90703@gmail.com>,melinda.shore@gmail.com,0.0,1,0,2013-11-26 07:28:18
4694,RtcWEB,73,941,"InformationProviding,Agreement",910,910,"
I agree but we need the charter to broad enough to include putting some policy control in to the TURN server and to be clear I am not talking about firewall policy here. Just some things that have previously been mentioned like bandwidth, QoS, Mobility, and some things we might not have thought of yet.
",<9F33F40F6F2CD847824537F3C4E37DDF17C5612D@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 16:47:44
4695,RtcWEB,73,943,"InformationProviding,Agreement",910,910,"
Also agree this is not about poking holes in firewalls and the work to define how webrtc works properly within an enterprise security policy will evidently not take place in this working group, we still need a home for that.
",<9F33F40F6F2CD847824537F3C4E37DDF17C5612D@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 16:47:44
4696,RtcWEB,73,945,NeutralResponse,910,10,"
I am ok with that.",<9F33F40F6F2CD847824537F3C4E37DDF17C5612D@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 16:47:44
4697,RtcWEB,73,964,"InformationProviding,NeutralResponse,ProposeAction",941,941,"
Please propose actual text changes. The current charter is at

https://github.com/petithug/tram-charter/blob/master/charter.txt

Just say exactly how you would like to see it changed. The RFC Editor
notation ""OLD:... NEW:..."" would be fine.
",<5294D13A.8050508@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-26 11:50:02
4698,RtcWEB,73,967,"InformationProviding,NeutralResponse",964,-1,Actually I was reasonably happy with the charter as it was until it was stated that the current list of deliverables was part of the charter rather than being draft milestones and therefore adding to the list would need a charter update. As I am often told that adding milestones is a whole lot easier than updating the charter text.,<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4699,RtcWEB,73,1025,Question,,-1,"
Is it the case that the list of deliverables is proposed to be part of the charter or are they just draft milestones?",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4700,RtcWEB,73,1027,"InformationProviding,NeutralResponse,ProposeAction",964,-1,"
If I were to propose any change to the actual charter text then maybe I would modify the paragraph below to indicate that the work may also includes other extensions to TURN.",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4701,RtcWEB,73,1028,"InformationProviding,ContextSetting",,-1,"
So change the following:",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4702,RtcWEB,73,1029,"InformationProviding,ExtensionOfPrevious",1028,-1,"
""The goal of the TRAM Working Group is to consolidate the various initiatives
to update TURN and STUN, including the definition of new transport and
authentication mechanisms that make STUN and TURN more suitable for the WebRTC
environment"".",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4703,RtcWEB,73,1030,InformationProviding,,-1,"
To",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4704,RtcWEB,73,1031,"InformationProviding,ExtensionOfPrevious",1030,-1,"
""The goal of the TRAM Working Group is to consolidate the various initiatives
to update TURN and STUN, including the definition of new transport,
authentication mechanisms, and extensions, that make STUN and TURN more suitable for the WebRTC
environment"".",<9F33F40F6F2CD847824537F3C4E37DDF17C56299@MCHP04MSX.global-ad.net>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 17:25:05
4705,RtcWEB,73,1034,Agreement,1031,-1,+1,<5294DFB6.4040108@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2013-11-26 09:51:50
4706,RtcWEB,73,1102,Agreement,1031,-1,+1,<BED85AB7-AAFB-4A4F-B30E-3AD38990FCCA@cisco.com>,gsalguei@cisco.com,0.0,0,4,2013-11-26 17:58:45
4707,RtcWEB,73,1182,Agreement,1031,-1,"
That's a reasonable addition.",<BED85AB7-AAFB-4A4F-B30E-3AD38990FCCA@cisco.com>,gsalguei@cisco.com,0.0,0,4,2013-11-26 17:58:45
4708,RtcWEB,73,1209,"InformationProviding,Agreement",1029,1029,"
Makes sense. Pull request sent to Marc.
",<5294E84A.5040301@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-26 13:28:26
4709,RtcWEB,73,1243,"Question,ProposeAction",1209,-1,"Can someone confirm that the deliverables
",<556F8311-6669-4F9B-AADE-154AB3D7DC91@siemens-enterprise.com>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 19:01:12
4710,RtcWEB,73,1289,"Question,InformationProviding,ProposeAction,Apologising",1243,-1,"So can someone confirm that the deliverables mentioned in the draft charter are actually draft milestones and not part of the charter text itself?

Sorry about last message.

Andy
",<42DE432D-E042-4EE4-A2D1-409342263515@siemens-enterprise.com>,andrew.hutton@unify.com,0.0,0,3,2013-11-26 19:03:35
4711,RtcWEB,73,1303,Answer,1289,1289,"
That's the intent, at least for me.
",<5294F0EC.9060203@viagenie.ca>,simon.perreault@viagenie.ca,0.0,0,0,2013-11-26 14:05:16
4712,RtcWEB,73,1306,"InformationProviding,Answer",1289,-1,They are milestones.  I suspect that before the charter is finalized we'll simply list the milestones and drop their individual summary text.,<026D637A-F8BA-4F10-B975-2092D04FC343@cisco.com>,gsalguei@cisco.com,0.0,0,4,2013-11-26 19:51:02
4713,RtcWEB,73,1410,"InformationProviding,NeutralResponse",943,943,"
I'm still trying to understand if we can reasonably expect to find a
home for that discussion, or if we are being told ""the IETF doesn't talk
about that"".

In any case, I don't especially care to have a discussion of anybody's
security policies. But we might talk about things that will be affected
by, and provide input to, the application of security policies.
",<5294D754.4020305@alum.mit.edu>,pkyzivat@alum.mit.edu,0.0,0,1,2013-11-26 09:16:04
4714,RtcWEB,101,12,InformationProviding,,-1,"
as proposed in the July 26th meeting I'd like to put forward a new use
case: assume a client is involved in a large multiparty session but is
unable (or unwilling) to upload his signals to all participants.",<4E390884.5050909@cs.vu.nl>,arno@cs.vu.nl,0.0,0,25,2011-08-03 10:36:20
4715,RtcWEB,101,13,ExtensionOfPrevious,,-1,"
This suggests forwarding support from the network is required, e.g.
some relay server, multicast, or the future IETF peer-to-peer streaming
protocol (PPSP).",<4E390884.5050909@cs.vu.nl>,arno@cs.vu.nl,0.0,0,25,2011-08-03 10:36:20
4716,RtcWEB,101,43,NeutralResponse,13,13,"
So the use case is:

User is part of a multiparty (3 or greater) session, but for one of
several reasons (such as
available upstream bandwidth)  cannot send media to all other
participants (""mesh"" conferencing).
This requires that another node, either a central network node (such as
a conferencing server)
or another member in the session, relay or mix the user's media to
distribute to the rest of the
members of the session.
",<4E394434.3040802@jesup.org>,randell-ietf@jesup.org,0.0,0,4,2011-08-03 08:51:00
4717,RtcWEB,101,77,Agreement,43,43,"
Yes. Although your wording suggests a single relay node (central or
member) is used. Please leave the option of true peer-to-peer
distribution (or IP multicast) of the signal open.

CU,",<4E394E76.2030302@cs.vu.nl>,arno@cs.vu.nl,0.0,0,25,2011-08-03 15:34:46
4718,RtcWEB,101,119,NeutralResponse,77,77,"In draft-ietf-rtcweb-use-cases-and-requirements-01.txt, the ""central
server"" model is listed in section 4.3.3, ""Video conferencing system
with central server"".

I am strongly opposed to adding use cases (which in turn generate
requirements) to this first iteration of RTCWEB that we do not know how
to fulfil with any currently deployed standard technology, so I would
definitely want to leave the ""peer to peer distribution or IP multicast""
out of the picture for now. It can be added to a working appendix of
""Use cases that have been discussed, but will not be considered as
requirements in this iteration of RTCWEB"".",<4E3FDBF1.3030808@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-08-08 14:52:01
4719,RtcWEB,101,159,NeutralResponse,,-1,"I strongly support the use case, but I was under the impression that
there has been a use case thar required a similar architecture: a
""central"" server (of course, it can be replicated) for accumulating
input and distributing output.",<4E39857E.3040407@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2011-08-03 13:29:34
4720,RtcWEB,101,160,ExtensionOfPrevious,,-1,"
For one thing, the music collaboration use case, I believe, calls for
this architecture.",<4E39857E.3040407@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2011-08-03 13:29:34
4721,RtcWEB,101,161,ExtensionOfPrevious,,-1,"
Perhaps one thing to watch for in the use case write-ups is separation
between a use case and architecture. These are two different things
because one architecture can fit many (and maybe all) use cases.",<4E39857E.3040407@alcatel-lucent.com>,igor.faynberg@alcatel-lucent.com,0.0,0,3,2011-08-03 13:29:34
4722,RtcWEB,101,242,NeutralResponse,161,161,"
As mentioned by Igor, I'm also looking for the architecture document
which provide the insight into RTCWeb deployment possibilities.

draft-rosenberg-rtcweb-framework-00 is one of the RTCWeb document which
is in the similar line.  I'm interested in hearing others opinion on
this.

Thanks
Partha
",<A11921905DA1564D9BCF64A6430A62390608E5C1@XMB-BGL-411.cisco.com>,partr@cisco.com,0.0,0,5,2011-08-04 05:29:53
4723,RtcWEB,103,13,InformationProviding,,-1,"Section 5.2, Browser Requirements
""   A12             The Web API MUST provide means for
informing the web application when high
loss rates occur.""",<CAAJUQMjP1aTk6T_angdjt0v6p1FSQPHzjppe1_SRNKBmoHdNJA@mail.gmail.com>,wolfgang.beck01@googlemail.com,0.0,0,16,2011-11-02 15:33:51
4724,RtcWEB,103,14,ExtensionOfPrevious,,-1,"
Wouldn't it make sense to have a more general API that provides access
to RTP/RTCP performance counters? A smart JS client might analyze the
counters and suggest solutions, like 'fix your fine NAT
configuration'. Providers like to see that data to detect and fix
problems, too.",<CAAJUQMjP1aTk6T_angdjt0v6p1FSQPHzjppe1_SRNKBmoHdNJA@mail.gmail.com>,wolfgang.beck01@googlemail.com,0.0,0,16,2011-11-02 15:33:51
4725,RtcWEB,103,43,NeutralResponse,14,14,"Since this is an application API requirement, this discussion belongs in
the WEBRTC WG, reply-to: set accordingly.

In the discussions at the TPAC this week, it was felt that counters
should be provided for things like packet loss. A regularly scheduled
function that reads the lost-packet counter every few seconds and sends
an alert when it's increasing ""too fast"" would then satisfy this
requirement - a good question may be how quickly it's reasonable for the
application to be informed that such a condition exists; my feeling is
that ""within a few seconds"" is fine, but others may have other opinions.

The editor team has (I believe) taken on the task of coming up with a
first proposal for such a metrics interface.
",<4EB1B450.5040904@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-11-02 14:21:20
4726,RtcWEB,103,69,Agreement,14,14,"
Sounds like a good idea to me, and we reasoned along these lines at the
W3C meeting the other week. I think there is even an action on someone
to draft that API!
",<4EC3D82D.8040902@ericsson.com>,stefan.lk.hakansson@ericsson.com,1.0,0,7,2011-11-16 16:35:09
4727,RtcWEB,103,97,NeutralResponse,69,69,"It's even in the WEBRTC Tracker, assigned to Adam Bergkvist on behalf of
the editing team:

http://www.w3.org/2011/04/webrtc/track/actions/12

All input is welcome - on public-webrtc@w3.org!
",<4EC3E305.6080808@alvestrand.no>,harald@alvestrand.no,0.0,0,1,2011-11-17 00:21:25
4728,TLS 15+,76,37,"InformationProviding,ProposeAction,InformationProviding,ProposeAction,ContextSetting,Question",,-1,"Packet duplication sometimes occur and it has a potential for affecting the ECN counter for what markings that arrive within a connection. Thus, it would be good if the requirements on how a QUIC implementation handle packets that are detected as duplicates.

There also appear that there are current text in the transport draft that makes assumption about handling of duplicate packets:

6.10.4.1.  Detecting a Stateless Reset

A client detects a potential stateless reset when a packet with a
short header either cannot be decrypted or is marked as a duplicate
packet.

The other mention of packet duplication, also pointing to an action that is this:

6.8.3.2.  Handling Address Spoofing by an On-path Attacker

An on-path attacker could cause a spurious connection migration by
copying and forwarding a packet with a spoofed address such that it
arrives before the original packet.  The packet with the spoofed
address will be seen to come from a migrating connection, and the
original packet will be seen as a duplicate and dropped.

These two pieces appear to indicate that packet duplicates should:
1. Be detected by receiver, at least within the window of PN between highest seen and some window into the past.
2. The packet marked as duplicate
3. Duplicate are dropped, but only after having been somewhat processed (see 6.10.4.1).

To my understanding the smallest window a receiver could have for tracking packets, is what is in ACKs that hasn't been ACKed yet. But that could be extremely short into the past, which could be short in time, compared to the expected re-ordering or packet life time in the network. Independently of window size, if a packet would arrive with a PN that is prior to the current window the receiver have, the receiver has discard the state for the packet number, and thus can't determine if it was ACKed or not, and thus needs to be discarded without further processing. Is that correctly assumed.

Thus, it would be good if these assumptions and needed functionality was collected in its own paragraphs somewhere in the specification.
",<quicwg/base-drafts/issues/1405@github.com>,notifications@github.com,0.0,0,4,2018-05-31 01:03:54
4729,TLS 15+,76,38,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405",<quicwg/base-drafts/issues/1405@github.com>,notifications@github.com,0.0,0,4,2018-05-31 01:03:54
4730,TLS 15+,76,40,"InformationProviding,NeutralResponse",37,-1,"I think the logic is that, if the packet number appears to be a duplicate, you don't attempt decryption and treat it as if decryption failed.  Packets where decryption fails get checked as potential Stateless Resets, then discarded.",<quicwg/base-drafts/issues/1405/393607492@github.com>,notifications@github.com,0.0,0,4,2018-05-31 17:19:27
4731,TLS 15+,76,48,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",,-1,"
Of course, if that's not stated explicitly somewhere, it ought to be....",<quicwg/base-drafts/issues/1405/393607492@github.com>,notifications@github.com,0.0,0,4,2018-05-31 17:19:27
4732,TLS 15+,76,49,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393607492",<quicwg/base-drafts/issues/1405/393607492@github.com>,notifications@github.com,0.0,0,4,2018-05-31 17:19:27
4733,TLS 15+,76,51,"InformationProviding,Agreement,NeutralResponse",37,-1,"As to detection of duplicates further back, you're correct that *if* you discard that state, you won't be able to detect duplicate packets.  An implementation that receives a packet older than it can identify then has a choice:  Either it discards the packet, or processes it.  Processing a duplicate packet is merely sub-optimal, not fatal, since each frame inside should also be recognized as superfluous.",<quicwg/base-drafts/issues/1405/393608227@github.com>,notifications@github.com,0.0,0,4,2018-05-31 17:21:42
4734,TLS 15+,76,57,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393608227",<quicwg/base-drafts/issues/1405/393608227@github.com>,notifications@github.com,0.0,0,4,2018-05-31 17:21:42
4735,TLS 15+,76,59,"InformationProviding,Agreement,Agreement,NeutralResponse",37,-1,"Mike is right about discarding duplicate packets, and I thought that text existed, but I can't find it.",<quicwg/base-drafts/issues/1405/393651575@github.com>,notifications@github.com,0.0,0,4,2018-05-31 12:32:57
4736,TLS 15+,76,65,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393651575",<quicwg/base-drafts/issues/1405/393651575@github.com>,notifications@github.com,0.0,0,4,2018-05-31 12:32:57
4737,TLS 15+,76,67,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",37,-1,"We can probably crib something from DTLS.  The usual method is to maintain a bitvector for the last N packets, and to drop anything that appears to be before that vector starts.  The point about stateless reset is a good one, and one I discovered when implementing it.  It's highly likely that a stateless reset will appear to be a duplicate.",<quicwg/base-drafts/issues/1405/393711328@github.com>,notifications@github.com,0.0,0,4,2018-05-31 16:13:39
4738,TLS 15+,76,77,"InformationProviding,ProposeAction,ExtensionOfPrevious",67,-1,"
One thing we need to observe is that we won't be checking that the packet is a true duplicate, only that we've (probably) seen the (apparent) packet number before.",<quicwg/base-drafts/issues/1405/393711328@github.com>,notifications@github.com,0.0,0,4,2018-05-31 16:13:39
4739,TLS 15+,76,78,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",77,-1,"
Another thing here is that packets that are ECN marked, but not authenticated, might be carrying a valid congestion signal, but we drop those too.  Think about the usual background radiation on the Internet that passes through a congested link on its way to you.  I don't think that we need to worry about that though.",<quicwg/base-drafts/issues/1405/393711328@github.com>,notifications@github.com,0.0,0,4,2018-05-31 16:13:39
4740,TLS 15+,76,79,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393711328",<quicwg/base-drafts/issues/1405/393711328@github.com>,notifications@github.com,0.0,0,4,2018-05-31 16:13:39
4741,TLS 15+,76,95,"InformationProviding,Agreement,Disagreement,NeutralResponse,InformationProviding",37,77,"
:+1:

I would like to argue that, the QUIC protocol needs to and will have idempotency against receiving and processing duplicate packets, and that checking for a duplicate should not be a requirement of the protocol.

Regarding the effect to ECN, I tend to think that processing of duplicates at an endpoint is an orthogonal issue to ECN, because both ECN-CE-marked and non-marked packets have the chance of binge dropped or duplicated.

IMO, the requirement in ECN support should be to state that the ECN counters (i.e. ECN(0), ECN(1), ECN-CE) must be updated _prior to_ processing the packet (e.g., decryption, duplicate detection). Then, the sender can get the most information for adjusting the congestion control.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393716871",<quicwg/base-drafts/issues/1405/393716871@github.com>,notifications@github.com,0.0,0,4,2018-05-31 23:47:33
4742,TLS 15+,76,97,"InformationProviding,NeutralResponse",37,-1,The problem with processing ECN before decryption is that you get double-counting if packets are duplicated.  And that happens.  The ECN PR specifically says that you need to detect and discard duplicates to avoid this.,<quicwg/base-drafts/issues/1405/393731522@github.com>,notifications@github.com,0.0,0,4,2018-05-31 18:29:06
4743,TLS 15+,76,107,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","107,97",-1,"
Also, the ECN feedback is based on counting of packets sent vs. those that are acknowledged, so counting ECN-marked chaff would inflate and likely distort the signal.",<quicwg/base-drafts/issues/1405/393731522@github.com>,notifications@github.com,0.0,0,4,2018-05-31 18:29:06
4744,TLS 15+,76,108,"InformationProviding,ProposeAction,ExtensionOfPrevious",107,-1,"
There is probably a way in which processing ECN signals before decryption could improve signal, but I think that's a different design to what has been proposed.",<quicwg/base-drafts/issues/1405/393731522@github.com>,notifications@github.com,0.0,0,4,2018-05-31 18:29:06
4745,TLS 15+,76,109,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393731522",<quicwg/base-drafts/issues/1405/393731522@github.com>,notifications@github.com,0.0,0,4,2018-05-31 18:29:06
4746,TLS 15+,76,131,"InformationProviding,Disagreement,Disagreement",37,97,"
Yes. I am arguing against that statement, because I do not want to see endpoints being required to detect duplicates.
",<quicwg/base-drafts/issues/1405/393743048@github.com>,notifications@github.com,0.0,0,4,2018-05-31 19:52:36
4747,TLS 15+,76,133,"InformationProviding,NeutralResponse,ProposeAction,Agreement,InformationProviding,ProposeAction",37,108,"
Exactly.

My argument is based on my opinion that the current proposal is not optimal in sense that it loses the signal that was carried in one of the duplicated packets (one that is being delivered later), while requiring the endpoint to detect duplicates, which IMO is unnecessary.

Consider the case where an endpoint receives two packets that are duplicate, one with the CE bit set and the other one without. The signal sent by the approach used in the PR will depend on the order of the delivery of the two packets. If the packet with the CE bit set is delivered first, the sender will notice more congestion than is should, because the fact that the second packet did not have the CE bit set will not be notified. If the packet without the CE bit set is delivered first, the sender will notice less congestion than it should, because the fact that the second packet did have the CE bit set will not be notified.

The reason why such issue exists is because you process the packet before updating the counter. I am saying that it might be worth reconsidering the approach, _especially if_ we are going to be required to detect duplicates on the endpoint as a byproduct of the approach.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-393743048",<quicwg/base-drafts/issues/1405/393743048@github.com>,notifications@github.com,0.0,0,4,2018-05-31 19:52:36
4748,TLS 15+,76,147,"InformationProviding,ExtensionOfPrevious,ProposeAction,Disagreement,ProposeAction,InformationProviding",37,-1,"
Secondly, trying to combine the ECN response of multiple packets is less than straightforward and exposes one to the risk above. It can also make one more likely to treat a specific ECN number as CE than none duplicated packets. Also the downside of dropping any duplicate packet even if CE marked is not significant. If you have a congestion event that results in the next packet is marked also, then the CE event will be reported one packet later.

ECN for RTP (https://www.rfc-editor.org/rfc/rfc6679.txt) actually tracks duplication and loss as seen by receiver to give all variables, but the retrospective on that RFC is that is overly causes.

I would argue that QUIC need a basic duplication handling, and that ECN processing happens after the packet has been decrypted and authenticated to avoid any type of injection attacks, and require additional checking mechanism for it being a valid source sent packet.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-394712102",<quicwg/base-drafts/issues/1405/394712102@github.com>,notifications@github.com,0.0,0,4,2018-06-05 06:38:19
4749,TLS 15+,76,149,"Thanking,Thanking",,-1,Thank you for the explanation.,<quicwg/base-drafts/issues/1405/394731145@github.com>,notifications@github.com,0.0,0,4,2018-06-05 07:29:53
4750,TLS 15+,76,159,"InformationProviding,StateDecision,NeutralResponse",37,-1,"
I now see that we need to decrypt the packet before updating the ECN counter.",<quicwg/base-drafts/issues/1405/394731145@github.com>,notifications@github.com,0.0,0,4,2018-06-05 07:29:53
4751,TLS 15+,76,160,"InformationProviding,NeutralResponse,NeutralResponse",37,-1,"
And I think that detecting duplicates on an endpoint is not that complicated now that we have PNE, which means that we can assume that packet numbers will be used mostly contiguously (we might need to specify how frequently packet numbers can be skipped to detect optimistic ack attacks).",<quicwg/base-drafts/issues/1405/394731145@github.com>,notifications@github.com,0.0,0,4,2018-06-05 07:29:53
4752,TLS 15+,76,161,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-394731145",<quicwg/base-drafts/issues/1405/394731145@github.com>,notifications@github.com,0.0,0,4,2018-06-05 07:29:53
4753,TLS 15+,76,163,"InformationProviding,ProposeAction,NeutralResponse",37,-1,"I think this discussion of duplicates illustrates a more fundamental issue with ECN: it is a signal from outside the encryption envelope that affects the behavior of the encrypted communication. In theory, all kinds of games are possible: adversarial ECN marking by an on-path device; copying of packets and reinjection with adversarial ECN markings by a man-on-the-side; copying of packets and reinjection with different IP headers and ports by an on-path device or a man on the side, possibly with the goal of messing up per-path ECN behavior. IMHO, the handling of ECN should be robust against these attacks, and the protection of ECN should not come from assumptions about how devices might or might not filter duplicate packets.",<quicwg/base-drafts/issues/1405/395294672@github.com>,notifications@github.com,0.0,0,4,2018-06-06 22:09:03
4754,TLS 15+,76,169,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-395294672",<quicwg/base-drafts/issues/1405/395294672@github.com>,notifications@github.com,0.0,0,4,2018-06-06 22:09:03
4755,TLS 15+,76,171,"InformationProviding,ContextSetting,Answer",,-1,"As discussed in https://github.com/quicwg/base-drafts/issues/1439#issuecomment-397589048, my understanding is that the ECN support in the form proposed in #1372 is the only issue that makes duplicate detection a requirement rather than an option.",<quicwg/base-drafts/issues/1405/397590223@github.com>,notifications@github.com,0.0,0,4,2018-06-15 04:15:39
4756,TLS 15+,76,179,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction",171,-1,"
Considering that, I think that we have a chance of closing the issue without adding any requirements if we adopt a different encoding scheme that lets the sender detect duplicates as discussed #1439.",<quicwg/base-drafts/issues/1405/397590223@github.com>,notifications@github.com,0.0,0,4,2018-06-15 04:15:39
4757,TLS 15+,76,180,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-397590223",<quicwg/base-drafts/issues/1405/397590223@github.com>,notifications@github.com,0.0,0,4,2018-06-15 04:15:39
4758,TLS 15+,76,203,"InformationProviding,ContextSetting",,-1,"In regards to @kazuho comment:
",<quicwg/base-drafts/issues/1405/398014741@github.com>,notifications@github.com,0.0,0,4,2018-06-18 03:45:59
4759,TLS 15+,76,204,"Question,InformationProviding,Agreement,ProposeAction,ClarificationElicitation,Question,Agreement,ProposeAction,InformationProviding",,-1,"
So, do I assume correctly, that you will still throw away packets that are several RTTs old, i.e. that have a PN number older than any state? Or do you generate an ACK for that old packet that is so old, and try to find if there is any unconsumed buffers to put any data in?

You might be right in that all existing frames have a behavior that if one applies it twice it already have the handling rules to suppress the duplicate or not cause any downside of being applied twice. I looked through the frame types and the only ones that I think have some impact are:
* Path_Challenge: A non duplication detecting receiver, will issue two Path_Response frames in response to a single PN. The sender of the Path_Challenge should not react badly to this.

Also, I haven't considered if there are any new requirements with the handshake packets and the interaction with TLS?

I would note that AES-GCM do have this weakness (Fergueson  http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/comments/CWC-GCM/Ferguson2.pdf) that if one manage to know that one successfully forged a packet so that it passed the authentication verification, then one learns a number of bits of the authentication key, making the next forgery simpler. If it is possible to run such an attack by sending modified duplicates with forged authentication tags resulting in a response, then this can be exploited (https://link.springer.com/chapter/10.1007/978-3-319-31517-1_7). So QUIC will not use truncated tags, but QUIC connections may be very long lived in certain environments. Thus making it possible to maintain an attack for a sufficient time to possible have any result. Thus, I think for safety reasons packet duplication suppression after decryption should be mandatory to prevent this information leakage and not put that onto the individual frame types to consider if they will result in reveal of a successful forgery of a modified duplicate packet.

I also noted that when we discussed this at the Interim it appeared that most, if not all except @kazuho was thinking that duplication suppression was expected in the receiver. If this is not required, then think the actual requirements on each frame type individually needs to be very clear.

It would be good to come to a conclusion on this issue so that we can determine what is needed for the ECN addition (#1372).

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398014741",<quicwg/base-drafts/issues/1405/398014741@github.com>,notifications@github.com,0.0,0,4,2018-06-18 03:45:59
4760,TLS 15+,76,214,"InformationProviding,ProposeAction,InformationProviding",,204,"
Rekeying must happen before that point.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398016919",<quicwg/base-drafts/issues/1405/398016919@github.com>,notifications@github.com,0.0,0,4,2018-06-18 03:55:32
4761,TLS 15+,76,216,"InformationProviding,Disagreement,Question",,-1,"@mikkelfj I am uncertain if that happens in a way that will prevent this attack. My assumption when this attack would be possible would be a low rate management connection where any rekeying based on number of legit sent packets may occur very infrequently. I don't find what the rekeying frequency requirements are, does someone have pointer?",<quicwg/base-drafts/issues/1405/398022746@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:23:21
4762,TLS 15+,76,227,"InformationProviding,NeutralResponse,ExtensionOfPrevious",216,-1,"
The number of tested forges will be dependent on the number of forged duplicate packets the attacker manage to send without raising an alarm that the connection is under attack. But, if there are no such warnings then an attacker could potentially send a large number of attack packets without the target noticing other than it drops a lot of packets due to authentication failure. The attack only consumes PN and thus packets until rekeying when a successful forge has been accomplished.",<quicwg/base-drafts/issues/1405/398022746@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:23:21
4763,TLS 15+,76,228,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",,-1,"
To my understanding the protection against this type of attack, is to prevent that a successful forge results in a response. If there are no general duplication protection then using a recently sent packet as attack packet is makes it simpler to cause a response. In fact the response to ECN-CE marks can actually be one thing that provides such a proof if some of the response discussed in #1372 would be allowed. Modifying the payload forging the authentication tag and setting the ECN bits to CE could then trigger an ACK on successful forge. For a connection that mostly idle that ACK will be a good signal for a forge. However, for this type of connection one can likely also target packets with a PING frame. Thus, also getting an ACK response on successful forge.",<quicwg/base-drafts/issues/1405/398022746@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:23:21
4764,TLS 15+,76,229,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398022746",<quicwg/base-drafts/issues/1405/398022746@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:23:21
4765,TLS 15+,76,231,"InformationProviding,ProposeAction,NeutralResponse",,-1,If keys are not updated within about 2^32 packets one might might as well introduce a new plain text option because it would achieve the same with less overhead.,<quicwg/base-drafts/issues/1405/398027221@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:44:21
4766,TLS 15+,76,243,"InformationProviding,InformationProviding",,-1,"
- https://quicwg.org/base-drafts/draft-ietf-quic-tls.html#rfc.section.6.2
- https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#rfc.section.5.5
- https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#AEAD-LIMITS
- http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf",<quicwg/base-drafts/issues/1405/398027221@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:44:21
4767,TLS 15+,76,244,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398027221",<quicwg/base-drafts/issues/1405/398027221@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:44:21
4768,TLS 15+,76,246,"InformationProviding,Agreement,Agreement,InformationProviding",,-1,But I think you are right that QUIC should much more prominently document such a rekeying requirement. For example that a key update MUST happen no later than after 2^32 packet exhanges or earlier if specific AEAD mode requires this (but such modes probably shouldn't be permitted).,<quicwg/base-drafts/issues/1405/398031584@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:03:36
4769,TLS 15+,76,254,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",246,-1,"
While some crypto modes could surve much more than 2^32 other modes would eventually fail badly (AES-GCM). By forcing an update no later than 2^32 it is easy to avoid implementation mistakes and for the peer to do a hard disconnect if keys are not updated. Silent crypto errors are really bad.",<quicwg/base-drafts/issues/1405/398031584@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:03:36
4770,TLS 15+,76,255,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398031584",<quicwg/base-drafts/issues/1405/398031584@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:03:36
4771,TLS 15+,76,257,"InformationProviding,InformationProviding",,-1,@gloinul,<quicwg/base-drafts/issues/1405/398041417@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:43:54
4772,TLS 15+,76,284,"InformationProviding,Answer,NeutralResponse,ProposeAction",,204,"
My argument is that doing either would be fine.
",<quicwg/base-drafts/issues/1405/398041417@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:43:54
4773,TLS 15+,76,286,"InformationProviding,NeutralResponse,NeutralResponse",,204,"
My understanding is that the following statement in the transport draft section 5 covers this: ""All QUIC frames are idempotent. That is, a valid frame does not cause undesirable side effects or errors when received more than once.""
",<quicwg/base-drafts/issues/1405/398041417@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:43:54
4774,TLS 15+,76,287,"InformationProviding,NeutralResponse",,204,"
If such attack is possible, it would be a vulnerability of the AEAD algorithm. It would be unrelated to if we detect duplicates. It is the task of the AEAD to provide authentication.
",<quicwg/base-drafts/issues/1405/398041417@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:43:54
4775,TLS 15+,76,288,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction,InformationProviding",,204,"
My understanding is that the discussion was based on our understanding (at that point) that duplication detection on the receiver is a prerequisite for ECN to work, and that we did not agree on how strictly we should require that to be implemented on the receiver.

Considering that, I think that it would be fair to argue for looking into if duplication detection is actually required, considering the fact that now we now that ECN can be supported without it.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398041417",<quicwg/base-drafts/issues/1405/398041417@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:43:54
4776,TLS 15+,76,290,"InformationProviding,InformationProviding",,-1,"The main point I like to stress, is that there will be a number of long lived connections that never will rekey if they are only based on sent packets. Even if one send 136 packets per second, the sender rekeys only once every year. And there are plenty of applications that will send less than a packet a second on average. The attack outlined is not affecting the number of sent packets by the sender in any significant way, it will only result in sending a lot of packets to the receiver and watch for signs of successful forgery by monitoring what the receiver emits back to the sender. Thus, if one can send 10000 packets a second to the receiver, then one will have had the possibility of sending ~2^38 packet by the time of rekeying. So still a low probability of success but not insignificant.",<quicwg/base-drafts/issues/1405/398042975@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:49:49
4777,TLS 15+,76,296,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398042975",<quicwg/base-drafts/issues/1405/398042975@github.com>,notifications@github.com,0.0,0,4,2018-06-18 05:49:49
4778,TLS 15+,76,314,"InformationProviding,ContextSetting,InformationProviding",,-1,"An important clarification about this attack: The attack on AES-GCM is definitely valid for truncated authentication tags. However, my co-author clarified to me that this is not an issue for untruncated tags. So as long as QUIC uses 128 bit authentication tags for AES-GCM we should have no issue from a cryptographic perspective.

I still think not having any requirement on replay protection at the main protocol level puts a lot of responsibility on the designers of extensions as well as implementers to ensure that things truly are idempotent when sent input.

@kazuho
",<quicwg/base-drafts/issues/1405/398053419@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:30
4779,TLS 15+,76,315,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,286,"
This text is only in master and was not in -12, so I didn't see it at the time I wrote the ECN PR. I think the extensibility text probably needs an RFC 2119 requirement on that any new frame types needs to fulfill that requirement. But, to fulfill that for ECN, at least if there are no strict requirement on duplication suppression do requires the ECN specification to change. Either to do receiver side suppression of the ECN field value so that it doesn't matter, or change the encoding so that one handles the duplicated packets correctly.
",<quicwg/base-drafts/issues/1405/398053419@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:30
4780,TLS 15+,76,316,"InformationProviding,InformationProviding",,286,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398053419",<quicwg/base-drafts/issues/1405/398053419@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:30
4781,TLS 15+,76,318,InformationProviding,,-1,@gloinul,<quicwg/base-drafts/issues/1405/398057102@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:39:31
4782,TLS 15+,76,329,"InformationProviding,ProposeAction,NeutralResponse,InformationProviding",,315,"
That's correct. Duplication suppression will be required if we adopt the encoding proposed in #1372.

I am merely pointing out that #1372 is the only thing that requires suppression, and that we have a chance of dropping the requirement if we adopt an alternative encoding as we have been discussing in #1439.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#issuecomment-398057102",<quicwg/base-drafts/issues/1405/398057102@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:39:31
4783,TLS 15+,76,331,"InformationProviding,InformationProviding",,-1,Closed #1405 via #1624.,<quicwg/base-drafts/issue/1405/issue_event/1781753754@github.com>,notifications@github.com,0.0,0,4,2018-08-09 23:05:54
4784,TLS 15+,76,337,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1405#event-1781753754",<quicwg/base-drafts/issue/1405/issue_event/1781753754@github.com>,notifications@github.com,0.0,0,4,2018-08-09 23:05:54
4785,TLS 15+,77,34,"InformationProviding,InformationProviding",,-1,"
A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security of the IETF.",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4786,TLS 15+,77,35,"InformationProviding,InformationProviding",,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-18.txt
Pages           : 118
Date            : 2016-10-25",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4787,TLS 15+,77,36,"InformationProviding,InformationProviding,ContextSetting",,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4788,TLS 15+,77,37,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4789,TLS 15+,77,38,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-18",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4790,TLS 15+,77,39,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-18",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4791,TLS 15+,77,40,"InformationProviding,InformationProviding,ProposeAction",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4792,TLS 15+,77,41,"InformationProviding,InformationProviding",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<147746065415.29301.5576320765738473701.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-10-25 22:44:14
4793,TLS 15+,78,24,"InformationProviding,InformationProviding",,-1,"
Title         : The Transport Layer Security (TLS) Protocol Version 1.3
Author(s)     : E. Rescorla
Filename      : draft-ietf-tls-tls13
Pages         : 118
Date          : 2016-03-22",<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4794,TLS 15+,78,25,"InformationProviding,InformationProviding",,-1,"
This document specifies Version 1.3 of the Transport Layer Security
(TLS) protocol.  The TLS protocol allows client/server applications
to communicate over the Internet in a way that is designed to prevent
eavesdropping, tampering, and message forgery.",<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4795,TLS 15+,78,26,"InformationProviding,InformationProviding,ContextSetting",,-1,"
A URL for this Internet-Draft is:
https://www.ietf.org/internet-drafts/draft-ietf-tls-tls13-12.txt",<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4796,TLS 15+,78,27,"InformationProviding,InformationProviding",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4797,TLS 15+,78,28,"InformationProviding,InformationProviding",,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4798,TLS 15+,78,29,"InformationProviding,InformationProviding",,-1,Internet-Drafts@ietf.org <SIGNATURES AND QUOTES>,<20160322171656.4034.35936.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2016-03-22 10:16:56
4799,TLS 15+,79,35,"InformationProviding,InformationProviding",,-1,"
A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security Working Group of the IETF.",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4800,TLS 15+,79,36,"InformationProviding,InformationProviding",,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-05.txt
Pages           : 92
Date            : 2015-03-09",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4801,TLS 15+,79,37,"InformationProviding,ContextSetting,InformationProviding",,-1,"
Abstract:
This document specifies Version 1.3 of the Transport Layer Security
(TLS) protocol.  The TLS protocol provides communications security
over the Internet.  The protocol allows client/server applications to
communicate in a way that is designed to prevent eavesdropping,
tampering, or message forgery.",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4802,TLS 15+,79,38,"InformationProviding,InformationProviding",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4803,TLS 15+,79,39,"InformationProviding,InformationProviding",,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-tls-tls13-05",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4804,TLS 15+,79,40,"InformationProviding,InformationProviding",,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-05",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4805,TLS 15+,79,41,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4806,TLS 15+,79,42,"InformationProviding,InformationProviding",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20150309200017.7516.45761.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-03-09 13:00:17
4807,TLS 15+,80,88,"ContextSetting,InformationProviding,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4808,TLS 15+,80,89,"ProposeAction,InformationProviding,ProposeAction",,-1,"
COMMENT:",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4809,TLS 15+,80,90,"InformationProviding,InformationProviding,ProposeAction",,-1,"
There has clearly been a lot of work put into this. It's a surprisingly
understandable document, given its length and the complexity of the subject. I
am balloting yes, but I have a few minor comments and nits. None of these are
showstoppers, so please do with them as you will.",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4810,TLS 15+,80,91,"InformationProviding,InformationProviding",,-1,"
*** Substantive Comments:",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4811,TLS 15+,80,92,"ContextSetting,InformationProviding",,-1,"
§4.1.2, first paragraph: "" When a client first connects to a server, it is
REQUIRED to send the
ClientHello as its first message. """,<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4812,TLS 15+,80,93,"InformationProviding,ContextSetting,InformationProviding,ProposeAction",,-1,"
Is that intended to prohibit the use of STARTTLS or similar application layer
patterns? (To be clear, this is not an objection, just a clarification request.)",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4813,TLS 15+,80,94,"ContextSetting,InformationProviding",,-1,"
§4.1.2, legacy_compression_methods: ""Note that TLS 1.3 servers might receive
TLS 1.2 or prior
ClientHellos which contain other compression methods and MUST
follow the procedures for the appropriate prior version of TLS.""",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4814,TLS 15+,80,95,"ContextSetting,InformationProviding,ContextSetting",,-1,"
Is that intended to require TLS 1.3 servers to always be willing and able to
negotiate 1.2? §4.2.1 has a similar assertion:",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4815,TLS 15+,80,96,"InformationProviding,ClarificationElicitation,ExtensionOfPrevious,ClarificationElicitation",95,-1,"
""If this extension is not present, servers which are compliant with
this specification MUST negotiate TLS 1.2 or prior as specified in
[RFC5246], even if ClientHello.legacy_version is 0x0304 or later.""",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4816,TLS 15+,80,97,"ContextSetting,InformationProviding",,-1,"
But §4.2.3 says:",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4817,TLS 15+,80,98,"InformationProviding,ContextSetting,Question,ExtensionOfPrevious,Question",97,-1,"
""Note that TLS 1.2 defines this extension differently.  TLS 1.3
implementations willing to negotiate TLS 1.2 MUST behave in
accordance with the requirements of [RFC5246] when negotiating that
version.""",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4818,TLS 15+,80,99,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
... which seems inconsistent (noting that this paragraph talks about
""implementations"" rather than ""servers"", so perhaps there's a subtle difference?",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4819,TLS 15+,80,100,"ContextSetting,ExtensionOfPrevious,InformationProviding",99,-1,"
§4.2.1.1: The section is marked for removal. Do you expect that RFC
implementations will ever need to interop with draft implementations? If so,
the information in this section may continue to be useful for some time.",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4820,TLS 15+,80,101,"InformationProviding,ExtensionOfPrevious,InformationProviding",100,-1,"
§D.5: This section has a lot of normative requirements that seem important. I
wonder why it has been relegated to an appendix.",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4821,TLS 15+,80,102,"Question,ProposeAction,ExtensionOfPrevious,Question,InformationProviding,Disagreement",101,-1,"
*** Editorial Comments and nits:",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4822,TLS 15+,80,103,"Question,ContextSetting,InformationProviding,Question,InformationProviding",,-1,"
§2: ""If (EC)DHE key establishment
is in use, then the ServerHello contains a ""key_share"" extension with
the server’s ephemeral Diffie-Hellman share which MUST be in the same
group as one of the client’s shares. """,<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4823,TLS 15+,80,104,"InformationProviding,ContextSetting,InformationSeeking,InformationProviding,ProposeAction",,-1,"
missing comma prior to ""which"".",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4824,TLS 15+,80,105,"ContextSetting,InformationProviding",,-1,"
§4.1.1: ""Note that if the PSK can be used without (EC)DHE then non-
overlap in the ""supported_groups"" parameters need not be fatal, as it
is in the non-PSK case discussed in the previous paragraph.""",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4825,TLS 15+,80,106,"ContextSetting,InformationProviding",,-1,"
I read ""need not be fatal"" to mean that it may still be fatal at times. Is that
the intent?",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4826,TLS 15+,80,107,"ProposeAction,ExtensionOfPrevious,ProposeAction",106,-1,"
§11: The IANA considerations have a number of constructions similar to ""SHALL
update/has updated"". Is that text expected to collapse to ""has updated"" at some
point?",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4827,TLS 15+,80,108,"ContextSetting,InformationProviding",,-1,"
§E.2.1: [BDFKPPRSZZ16]  : Best citation anchor evar",<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4828,TLS 15+,80,109,"ClarificationElicitation,ExtensionOfPrevious,ClarificationElicitation",108,-1,Ben Campbell  <SIGNATURES AND QUOTES>,<152035726289.28354.15009436908256456026.idtracker@ietfa.amsl.com>,ben@nostrum.com,0.0,0,0,2018-03-06 09:27:42
4829,TLS 15+,80,227,"Answer,InformationProviding,Answer",96,101,"> *** Editorial Comments and nits:
> §2: ""If (EC)DHE key establishment
>   is in use, then the ServerHello contains a ""key_share"" extension with
>   the server’s ephemeral Diffie-Hellman share which MUST be in the same
>   group as one of the client’s shares. ""
> missing comma prior to ""which”.",<43224E51-EBF9-4471-B133-B118DA1CE05A@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-07 15:49:54
4830,TLS 15+,80,229,"Answer,ContextSetting,Disagreement,InformationProviding,Answer,Disagreement",102,106,"> §4.1.1: ""Note that if the PSK can be used without (EC)DHE then non-
>   overlap in the ""supported_groups"" parameters need not be fatal, as it
>   is in the non-PSK case discussed in the previous paragraph.""
> I read ""need not be fatal"" to mean that it may still be fatal at times. Is that
> the intent?",<43224E51-EBF9-4471-B133-B118DA1CE05A@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-07 15:49:54
4831,TLS 15+,80,231,"NeutralResponse,InformationProviding,Answer",103,107,"> §11: The IANA considerations have a number of constructions similar to ""SHALL
> update/has updated"". Is that text expected to collapse to ""has updated"" at some
> point?",<43224E51-EBF9-4471-B133-B118DA1CE05A@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-07 15:49:54
4832,TLS 15+,80,233,"NeutralResponse,InformationProviding,NeutralResponse",104,107,Sean Turner  <SIGNATURES AND QUOTES>,<43224E51-EBF9-4471-B133-B118DA1CE05A@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-07 15:49:54
4833,TLS 15+,80,390,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",227,230,">> §4.1.1: ""Note that if the PSK can be used without (EC)DHE then non-
>>  overlap in the ""supported_groups"" parameters need not be fatal, as it
>>  is in the non-PSK case discussed in the previous paragraph.""
>> I read ""need not be fatal"" to mean that it may still be fatal at times. Is that
>> the intent?
> Yes that is the intent.",<362DB102-B772-4797-80A6-E043F8A3BFEF@nostrum.com>,ben@nostrum.com,0.0,0,0,2018-03-07 15:35:33
4834,TLS 15+,80,392,"NeutralResponse,InformationProviding",229,232,">> §11: The IANA considerations have a number of constructions similar to ""SHALL
>> update/has updated"". Is that text expected to collapse to ""has updated"" at some
>> point?
> Yes - once we’ve gotten the a-okay from IANA, well as the RFC editor to make it just say “has updated” etc.",<362DB102-B772-4797-80A6-E043F8A3BFEF@nostrum.com>,ben@nostrum.com,0.0,0,0,2018-03-07 15:35:33
4835,TLS 15+,80,393,"UnderstandingNegative,ClarificationElicitation,Question,UnderstandingNegative",229,232,"
Okay.
",<362DB102-B772-4797-80A6-E043F8A3BFEF@nostrum.com>,ben@nostrum.com,0.0,0,0,2018-03-07 15:35:33
4836,TLS 15+,80,395,"NeutralResponse,InformationProviding",231,108,Ben Campbell  <SIGNATURES AND QUOTES>,<362DB102-B772-4797-80A6-E043F8A3BFEF@nostrum.com>,ben@nostrum.com,0.0,0,0,2018-03-07 15:35:33
4837,TLS 15+,80,791,"InformationProviding,Agreement,Social,InformationProviding,NeutralResponse",568,94,"> §4.1.2, legacy_compression_methods: ""Note that TLS 1.3 servers might",<CABcZeBPRrbJKX7kLWD14BY+3HA8Gu=gDFGsmMn7OzaOexi01Jg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:15:25
4838,TLS 15+,80,797,"InformationProviding,ExtensionOfPrevious,NeutralResponse",95,95,to negotiate 1.2? §4.2.1,<CABcZeBPRrbJKX7kLWD14BY+3HA8Gu=gDFGsmMn7OzaOexi01Jg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:15:25
4839,TLS 15+,80,835,"ExtensionOfPrevious,InformationProviding",102,101,> §D.5: This section has a lot of normative requirements that seem,<CABcZeBPRrbJKX7kLWD14BY+3HA8Gu=gDFGsmMn7OzaOexi01Jg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:15:25
4840,TLS 15+,80,1114,"InformationProviding,InformationProviding",,107,Eric Rescorla  <SIGNATURES AND QUOTES>,<CABcZeBPRrbJKX7kLWD14BY+3HA8Gu=gDFGsmMn7OzaOexi01Jg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:15:25
4841,TLS 15+,81,0,"Social,Social",,-1,"All,",<063B3B0B-B141-459C-890F-9E001655936F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-03-29 09:11:16
4842,TLS 15+,81,11,"ProposeAction,ContextSetting,InformationProviding,ProposeAction",,-1,"
If you think that we should keep DHE-based 0-RTT please indicate so now and provide your rationale.",<063B3B0B-B141-459C-890F-9E001655936F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-03-29 09:11:16
4843,TLS 15+,81,12,"InformationProviding,InformationProviding,ExtensionOfPrevious",11,-1,"
J&S",<063B3B0B-B141-459C-890F-9E001655936F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-03-29 09:11:16
4844,TLS 15+,81,13,"ProposeAction,InformationProviding,ProposeAction",,-1,Sean Turner  <SIGNATURES AND QUOTES>,<063B3B0B-B141-459C-890F-9E001655936F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-03-29 09:11:16
4845,TLS 15+,81,14,"Social,InformationProviding",,-1,qualified +1,<CAH9QtQEz_J9P8jir9KDTVyYveiO_QwiNAxWJ2LARw1tbna1ZNg@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-03-29 09:13:57
4846,TLS 15+,81,69,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",12,-1,"
I am implying nothing about Google's preference when I say that some large
companies may prefer the scalability of stateless 0-RTT, while smaller
companies may prefer the imrpoved security of stateful schemes.  Make sure
both schemes remain supported as we cut out DHE 0-RTT functionality.",<CAH9QtQEz_J9P8jir9KDTVyYveiO_QwiNAxWJ2LARw1tbna1ZNg@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-03-29 09:13:57
4847,TLS 15+,81,71,"ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious",70,-1,Bill Cox  <SIGNATURES AND QUOTES>,<CAH9QtQEz_J9P8jir9KDTVyYveiO_QwiNAxWJ2LARw1tbna1ZNg@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2016-03-29 09:13:57
4848,TLS 15+,81,72,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",71,-1,"On Tue, Mar 29, 2016 at 09:13:57AM -0700, Bill Cox wrote:",<20160329191107.GB28150@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-29 22:11:07
4849,TLS 15+,82,0,"InformationProviding,ContextSetting,ContextSetting",,-1,Here's an update from the chairs on the two TCPINC security protocols:,<CE03DB3D7B45C245BCA0D2432779493623E82A24@MX104CL02.corp.emc.com>,david.black@emc.com,0.0,1,0,2016-02-29 16:30:13
4850,TLS 15+,82,36,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
For these reasons, the chairs strongly suggest that the best course of action
for the TCPINC WG is to move forward to standardize tcpcrypt and TCP-ENO,
with a plan to allocate additional TCP-ENO codepoints for the TLS profile and
possible use of TCP-ENO to negotiate application use of TLS when those
protocols are ready for standardization.  Please note that if tcpcrypt continues
to progress faster than TCP-use-TLS, tcpcrypt would become the initial
mandatory-to-implement security protocol in the TCP-ENO specification.",<CE03DB3D7B45C245BCA0D2432779493623E82A24@MX104CL02.corp.emc.com>,david.black@emc.com,0.0,1,0,2016-02-29 16:30:13
4851,TLS 15+,82,37,"InformationProviding,StateDecision,InformationProviding",,-1,"
Updated drafts have been posted to the datatracker for TCP-ENO and
tcpcrypt.  The chairs still intend to proceed with the expert reviews for the
security and transport aspects of these drafts, and expect those reviews
to complete during the month of March (i.e., results should be available
prior to the Buenos Aires meeting) supporting prompt progress towards
publication of both drafts as RFCs.",<CE03DB3D7B45C245BCA0D2432779493623E82A24@MX104CL02.corp.emc.com>,david.black@emc.com,0.0,1,0,2016-02-29 16:30:13
4852,TLS 15+,82,38,"InformationProviding,ExtensionOfPrevious,ProposeAction,StateDecision,ProposeAction,ExtensionOfPrevious,InformationProviding",37,-1,"
A final WG decision on how to proceed should be made in the next few
weeks,  so comments on the list are welcome.",<CE03DB3D7B45C245BCA0D2432779493623E82A24@MX104CL02.corp.emc.com>,david.black@emc.com,0.0,1,0,2016-02-29 16:30:13
4853,TLS 15+,82,39,"InformationProviding,InformationProviding",,-1,"Black, David  <SIGNATURES AND QUOTES>",<CE03DB3D7B45C245BCA0D2432779493623E82A24@MX104CL02.corp.emc.com>,david.black@emc.com,0.0,1,0,2016-02-29 16:30:13
4854,TLS 15+,83,0,Social,,-1,"WG Members,",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4855,TLS 15+,83,49,"InformationProviding,StateDecision",,-1,"
This means:",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4856,TLS 15+,83,50,"InformationProviding,ExtensionOfPrevious",,-1,"
- The editor will maintain the editor's draft on github in the
following repository: https://github.com/tlswg/tls13-spec",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4857,TLS 15+,83,51,"InformationProviding,ExtensionOfPrevious",,-1,"
- Technical changes can be submitted as pull requests and are subject
to the usual WG consensus process before being merged. No
substantive technical discussion should occur in github. If you
cannot submit a pull request, you can send text directly to the list
but pull requests are preferred for tracking purposes. The editor
may also be tasked by the WG to make technical changes directly,
based on WG consensus.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4858,TLS 15+,83,52,"InformationProviding,ExtensionOfPrevious",,-1,"
- Editorial changes should be submitted as pull requests and the
editor may just merge them directly and/or commit editorial changes
directly as needed.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4859,TLS 15+,83,53,"InformationProviding,ExtensionOfPrevious",,-1,"
- If you believe a change has been committed inappropriately, either
note this on the list/chairs/editor or if the change is minor,
submit your own pull request to back it out.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4860,TLS 15+,83,54,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",,-1,"
- Revisions will be submitted as internet drafts regularly, and be
tagged (see process in [1]).  We still maintain a manual change log
for major issues, but the commit history is used as a more detailed
record.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4861,TLS 15+,83,55,"InformationProviding,ExtensionOfPrevious",,-1,"
- The git issue tracker will be used to manage outstanding issues,
but as above, any substantive discussion should happen on-list.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4862,TLS 15+,83,56,"InformationProviding,ExtensionOfPrevious",,-1,"
We also will use github for meeting arrangements, agendas and
minutes.  These will also be posted to the IETF datatracker as
usual.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4863,TLS 15+,83,57,"InformationProviding,ExtensionOfPrevious",,-1,"
The editor has posted a first RFC 5246 bis draft at the following
location:
https://github.com/tlswg/tls13-spec/blob/master/draft-ietf-tls-tls13.txt
This draft should not contain any intentional substantive changes
and is just a baseline for future change tracking.  I’ve checked it,
you should too.",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4864,TLS 15+,83,58,"InformationProviding,ProposeAction",,-1,"
spt for the chairs",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4865,TLS 15+,83,59,InformationProviding,,-1,"
[1] https://github.com/tlswg/tls13-spec/blob/master/SUBMITTING.md",<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4866,TLS 15+,83,60,"InformationProviding,ExtensionOfPrevious",,-1,Sean Turner  <SIGNATURES AND QUOTES>,<E911D214-573C-4C80-BEBA-87110C35B55F@ieca.com>,TurnerS@ieca.com,0.0,1,1,2014-04-17 17:28:56
4867,TLS 15+,83,132,"InformationProviding,ProposeAction",58,57,Eric Rescorla  <SIGNATURES AND QUOTES>,<CABcZeBPQYFT0S5LvkrhgCf_gBT=9qTaXnDh0cSav_bVH3+Snvw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-04-17 14:39:11
4868,TLS 15+,84,72,"InformationProviding,ContextSetting",,-1,"
TLS November 2014 Interim Meeting",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4869,TLS 15+,84,73,"InformationProviding,ExtensionOfPrevious",,-1,"
November 9, 2014, 9:30 - 13:30 -  Kahili room",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4870,TLS 15+,84,74,InformationProviding,,-1,"
Agenda (Draft)",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4871,TLS 15+,84,75,InformationProviding,,-1,"
Focus on TLS 1.3 topics (draft-ietf-tls-tls13
<https://tools.ietf.org/wg/tls/draft-ietf-tls-tls13/>)",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4872,TLS 15+,84,76,InformationProviding,,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4873,TLS 15+,84,77,InformationProviding,,-1,"
1.3 Session Resumption
2.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4874,TLS 15+,84,78,InformationProviding,,-1,"
1.3 Key Refresh/Client auth
3.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4875,TLS 15+,84,79,InformationProviding,,-1,"
1.3 (0-RTT)",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4876,TLS 15+,84,80,InformationProviding,,-1,"
IETF 91 TLS Meeting",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4877,TLS 15+,84,81,InformationProviding,,-1,"
November 13, 2014, 9 - 11:30 - Coral 5",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4878,TLS 15+,84,82,InformationProviding,,-1,"
Agenda (Draft)",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4879,TLS 15+,84,83,InformationProviding,,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4880,TLS 15+,84,84,InformationProviding,,-1,"
RC4 (if necessary)",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4881,TLS 15+,84,85,InformationProviding,,-1,"
draft-ietf-tls-prohibiting-rc4
<https://tools.ietf.org/wg/tls/draft-ietf-tls-prohibiting-rc4/>",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4882,TLS 15+,84,86,InformationProviding,,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4883,TLS 15+,84,87,"InformationProviding,ExtensionOfPrevious",,-1,"
Downgrade SCSV",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4884,TLS 15+,84,88,"InformationProviding,ExtensionOfPrevious",,-1,"
draft-ietf-tls-downgrade-scsv
<https://tools.ietf.org/wg/tls/draft-ietf-tls-downgrade-scsv/>",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4885,TLS 15+,84,89,"InformationProviding,ExtensionOfPrevious",,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4886,TLS 15+,84,90,InformationProviding,,-1,"
Session Hash",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4887,TLS 15+,84,91,InformationProviding,,-1,"
draft-ietf-tls-session-hash
<https://tools.ietf.org/wg/tls/draft-ietf-tls-session-hash/>",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4888,TLS 15+,84,92,"InformationProviding,ExtensionOfPrevious",,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4889,TLS 15+,84,93,InformationProviding,,-1,"
Finite Field DHE negotiation",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4890,TLS 15+,84,94,InformationProviding,,-1,"
draft-ietf-tls-negotiated-ff-dhe
<https://tools.ietf.org/wg/tls/draft-ietf-tls-negotiated-ff-dhe/>",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4891,TLS 15+,84,95,InformationProviding,,-1,"
1.",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4892,TLS 15+,84,96,InformationProviding,,-1,"
TLS 1.3 Topics continued/Recap",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4893,TLS 15+,84,97,InformationProviding,,-1,"
draft-ietf-tls-tls13 <https://tools.ietf.org/wg/tls/draft-ietf-tls-tls13/>",<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4894,TLS 15+,84,98,InformationProviding,,-1,Joseph Salowey  <SIGNATURES AND QUOTES>,<CAOgPGoA_Y=SHDecQXcewHN6bwmZZbrfq8b=U+7O7Y5AvamAxLQ@mail.gmail.com>,joe@salowey.net,0.0,1,3,2014-10-26 19:40:46
4895,TLS 15+,84,195,"InformationSeeking,Question,ProposeAction,Thanking",,-1,Michael StJohns  <SIGNATURES AND QUOTES>,<544E7EA7.7040908@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-10-27 13:19:35
4896,TLS 15+,85,34,InformationProviding,,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4897,TLS 15+,85,35,"InformationProviding,ExtensionOfPrevious",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-19",<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4898,TLS 15+,85,36,"InformationProviding,ExtensionOfPrevious,ContextSetting",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-19",<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4899,TLS 15+,85,37,"InformationProviding,ExtensionOfPrevious",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4900,TLS 15+,85,38,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4901,TLS 15+,85,39,"InformationProviding,ExtensionOfPrevious",,-1,internet-drafts@ietf.org <SIGNATURES AND QUOTES>,<148918737706.3013.16430797846018636315@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-03-10 15:09:37
4902,TLS 15+,86,26,"InformationProviding,ContextSetting",,-1,"A new Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security Working Group of the IETF.",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4903,TLS 15+,86,27,"InformationProviding,ExtensionOfPrevious",,-1,"
Title         : The Transport Layer Security (TLS) Protocol Version 1.3
Author(s)     : E. Rescorla
Filename      : draft-ietf-tls-tls13
Pages         : 98
Date          : 2015-07-08",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4904,TLS 15+,86,28,"InformationProviding,ExtensionOfPrevious,ContextSetting",,-1,"
This document specifies Version 1.3 of the Transport Layer Security
(TLS) protocol.  The TLS protocol provides communications security
over the Internet.  The protocol allows client/server applications to
communicate in a way that is designed to prevent eavesdropping,
tampering, or message forgery.",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4905,TLS 15+,86,29,"InformationProviding,ExtensionOfPrevious",,-1,"
A URL for this Internet-Draft is:
https://www.ietf.org/internet-drafts/draft-ietf-tls-tls13-07.txt",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4906,TLS 15+,86,30,"InformationProviding,ExtensionOfPrevious",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4907,TLS 15+,86,31,"InformationProviding,ContextSetting",,-1,"
Below is the data which will enable a MIME compliant mail reader
implementation to automatically retrieve the ASCII version of the
Internet-Draft.",<20150708143839.25395.62187.idtracker@ietfa.amsl.com>,Internet-Drafts@ietf.org,0.0,,,2015-07-08 07:38:39
4908,TLS 15+,87,0,Social,,-1,"Folks,",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4909,TLS 15+,87,65,"InformationProviding,ProposeAction",,-1,"
http://tlswg.github.io/tls13-spec/",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4910,TLS 15+,87,66,InformationProviding,,-1,"
The major changes in this document are:",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4911,TLS 15+,87,67,InformationProviding,,-1,"
* A big restructure to make it read better. I moved the Overview
to the beginning and then put the document in a more logical
order starting with the handshake and then the record and
alerts.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4912,TLS 15+,87,68,InformationProviding,,-1,"
* Totally rewrote the section which used to be called ""Security
Analysis"" and is now called ""Overview of Security Properties"".
This section is still kind of a hard hat area, so PRs welcome.
In particular, I know I need to beef up the citations for the
record layer section.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4913,TLS 15+,87,69,InformationProviding,,-1,"
* Removed the 0-RTT EncryptedExtensions and moved ticket_age
into the ClientHello. This quasi-reverts a change in -13 that
made implementation of 0-RTT kind of a pain.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4914,TLS 15+,87,70,InformationProviding,,-1,"
As usual, comments welcome.
-Ekr",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4915,TLS 15+,87,71,InformationProviding,,-1,"
* Allow cookies to be longer (*)",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4916,TLS 15+,87,72,ProposeAction,,-1,"
* Remove the ""context"" from EarlyDataIndication as it was undefined
and nobody used it (*)",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4917,TLS 15+,87,73,ProposeAction,,-1,"
* Remove 0-RTT EncryptedExtensions and replace the ticket_age extension
with an obfuscated version. Also necessitates a change to
NewSessionTicket (*).",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4918,TLS 15+,87,74,ProposeAction,,-1,"
* Move the downgrade sentinel to the end of ServerHello.Random
to accomodate tlsdate (*).",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4919,TLS 15+,87,75,ProposeAction,,-1,"
* Define ecdsa_sha1 (*).",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4920,TLS 15+,87,76,ProposeAction,,-1,"
* Allow resumption even after fatal alerts. This matches current
practice.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4921,TLS 15+,87,77,ProposeAction,,-1,"
* Remove non-closure warning alerts. Require treating unknown alerts as
fatal.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4922,TLS 15+,87,78,ProposeAction,,-1,"
* Make the rules for accepting 0-RTT less restrictive.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4923,TLS 15+,87,79,ProposeAction,,-1,"
* Clarify 0-RTT backward-compatibility rules.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4924,TLS 15+,87,80,ProposeAction,,-1,"
* Clarify how 0-RTT and PSK identities interact.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4925,TLS 15+,87,81,ProposeAction,,-1,"
* Add a section describing the data limits for each cipher.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4926,TLS 15+,87,82,ProposeAction,,-1,"
* Major editorial restructuring.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4927,TLS 15+,87,83,InformationProviding,,-1,"
* Replace the Security Analysis section with a WIP draft.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4928,TLS 15+,87,84,ProposeAction,,-1,"
(*) indicates changes to the wire protocol which may require implementations
to update.",<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4929,TLS 15+,87,85,InformationProviding,,-1,Eric Rescorla  <SIGNATURES AND QUOTES>,<CABcZeBMiLmwBeuLt=v4qdcJwe5rdsK_9R4-2TUXYC=sttmwH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-07-11 12:08:00
4930,TLS 15+,87,664,"InformationProviding,NeutralResponse",71,70,"> ##  Numbers
> Note that in some cases (e.g., DH parameters) it is necessary to represent
> integers as opaque vectors. In such cases, they are represented as unsigned
> integers (i.e., additional leading zero octets are not used even if the most
> significant bit is set).",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4931,TLS 15+,87,666,"NeutralResponse,UnderstandingNegative",71,70,"> ###  Client Hello
> When this message will be sent:
> > When a client first connects to a server, it is required to send the
> ClientHello as its first message. The client will also send a
> ClientHello when the server has responded to its ClientHello with a
> ServerHello that selects cryptographic parameters that don't match the
> client's ""key_share"" extension. In that case, the client MUST send the same
> ClientHello (without modification) except:",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4932,TLS 15+,87,668,NeutralResponse,71,70,"> - Including a new KeyShareEntry as the lowest priority share
>   (i.e., appended to the list of shares in the ""key_share"" extension).
> - Removing the EarlyDataIndication {{early-data-indication}} extension
>   if one was present. Early data is not permitted after HelloRetryRequest.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4933,TLS 15+,87,670,Question,71,70,"> ###  Server Hello
> cipher_suite
> : The single cipher suite selected by the server from the list in
>   ClientHello.cipher_suites.  For resumed sessions, this field is
>   the value from the state of the session being resumed.
>   [[TODO: interaction with PSK.]]",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4934,TLS 15+,87,672,Question,71,70,"> extensions
> : A list of extensions.  Note that only extensions offered by the
>   client can appear in the server's list. In TLS 1.3, as opposed to
>   previous versions of TLS, the server's extensions are split between
>   the ServerHello and the EncryptedExtensions {{encrypted-extensions}}
>   message. The ServerHello MUST only include extensions which are
>   required to establish the cryptographic context. Currently the only
>   such extensions are ""key_share"", ""pre_shared_key"", and ""early_data"".
>   Clients MUST check the ServerHello for the presence of any forbidden
>   extensions and if any are found MUST terminate the handshake with a
>   ""illegal_parameter"" alert. In prior versions of TLS, the extensions
>   field could be omitted entirely if not needed, similar to
>   ClientHello. As of TLS 1.3, all clients and servers will send at
>   least one extension (at least ""key_share"" or ""pre_shared_key"").",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4935,TLS 15+,87,674,"Question,InformationProviding",71,70,"
###  Hello Retry Request
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4936,TLS 15+,87,676,Question,71,70,"
What is written into this field if server selects pure-PSK ciphersuite
and then decides to reject the ClientHello? Or connections that use
pure-PSK just plain can't be rejected for any reason (including IP
address verification in DTLS?)
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4937,TLS 15+,87,677,InformationProviding,71,70,"
Currently assuming pure-PSK rejections are possible, cipher_suite is
needed to tell if the next group field contains anything sane or
not...
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4938,TLS 15+,87,679,Question,71,70,"
What about cookie? IIRC, it is allowed to be in HRR even without
being in CH...
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4939,TLS 15+,87,680,NeutralResponse,71,70,"> Upon receipt of a HelloRetryRequest, the client MUST first verify that
> the selected_group field corresponds to a group which was provided
> in the ""supported_groups"" extension in the original ClientHello.  It
> MUST then verify that the selected_group field does not correspond
> to a group which was provided in the ""key_share"" extension in the
> original ClientHello. If either of these checks fails, then the client
> MUST abort the handshake with a fatal ""handshake_failure""
> alert. Clients SHOULD also abort with ""handshake_failure"" in response
> to any second HelloRetryRequest which was sent in the same connection
> (i.e., where the ClientHello was itself in response to a
> HelloRetryRequest).
> Otherwise, the client MUST send a ClientHello with an updated KeyShare
> extension to the server. The client MUST append a new KeyShareEntry
> for the group indicated in the selected_group field to the groups
> in its original KeyShare.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4940,TLS 15+,87,682,"Question,InformationProviding",71,70,"> An extension type MUST NOT appear in the ServerHello or HelloRetryRequest
> unless the same extension type appeared in the corresponding ClientHello.
> If a client receives an extension type in ServerHello or HelloRetryRequest
> that it did not request in the associated ClientHello, it MUST abort the
> handshake with an ""unsupported_extension"" fatal alert.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4941,TLS 15+,87,684,"InformationProviding,ProposeAction",71,70,"> In general, the specification of each extension type needs to describe the
> effect of the extension both during full handshake and session resumption. Most
> current TLS extensions are relevant only when a session is initiated: when an
> older session is resumed, the server does not process these extensions in
> ClientHello, and does not include them in ServerHello. However, some
> extensions may specify different behavior during session resumption.
> [[TODO: update this and the previous paragraph to cover PSK-based resumption.]]",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4942,TLS 15+,87,686,"InformationProviding,NeutralResponse",71,70,"> ###  Signature Algorithms
> * In TLS 1.2, the extension contained hash/signature pairs. The pairs are
>   encoded in two octets, so SignatureScheme values have been allocated to
>   align with TLS 1.2's encoding. Some legacy pairs are left unallocated. These
>   algorithms are deprecated as of TLS 1.3. They MUST NOT be offered or
>   negotiated by any implementation. In particular, MD5 {{SLOTH}} and SHA-224
>   MUST NOT be used.
> * ecdsa_secp256r1_sha256, etc., align with TLS 1.2's ECDSA hash/signature pairs.
>   However, the old semantics did not constrain the signing curve.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4943,TLS 15+,87,688,"InformationProviding,Disagreement",71,70,"> ### Negotiated Groups
> As of TLS 1.3, servers are permitted to send the ""supported_groups""
> extension to the client.  If the server has a group it prefers to the
> ones in the ""key_share"" extension but is still willing to accept the
> ClientHello, it SHOULD send ""supported_groups"" to update the client's
> view of its preferences.  Clients MUST NOT act upon any information
> found in ""supported_groups"" prior to successful completion of the
> handshake, but MAY use the information learned from a successfully
> completed handshake to change what groups they offer to a server in
> subsequent connections.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4944,TLS 15+,87,690,"InformationProviding,NeutralResponse",71,70,"> ### Key Share
> If this extension is not provided in a ServerHello or ClientHello,
> and the peer is offering (EC)DHE cipher suites, then the endpoint MUST close
> the connection with a fatal ""missing_extension"" alert.
> (see {{mti-extensions}})",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4945,TLS 15+,87,692,Question,71,70,"> [[TODO: Recommendation about what the client offers.
> Presumably which integer DH groups and which curves.]]",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4946,TLS 15+,87,694,"InformationProviding,Disagreement,ProposeAction",71,70,"> ### Pre-Shared Key Extension
> Note that although 0-RTT data is encrypted with the first PSK identity, the
> server MAY fall back to 1-RTT and select a different PSK identity if multiple
> identities are offered.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4947,TLS 15+,87,696,"InformationProviding,ProposeAction",71,70,"> ### Early Data Indication
> obfuscated_ticket_age
> : The time since the client learned about the server configuration that it is
>   using, in milliseconds.  This value is added modulo 2^32 to with the
>   ""ticket_age_add"" value that was included with the ticket, see
>   {{NewSessionTicket}}.  This addition prevents passive observers from
>   correlating sessions unless tickets are reused.  Note: because ticket
>   lifetimes are restricted to a week, 32 bits is enough to represent any
>   plausible age, even in milliseconds.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4948,TLS 15+,87,698,"InformationProviding,Disagreement",71,70,"> A server MUST validate that the ticket_age is within a small
> tolerance of the time since the ticket was issued (see {{replay-time}}).",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4949,TLS 15+,87,700,"InformationProviding,NeutralResponse",71,70,"> 0-RTT messages sent in the first flight have the same content types
> as their corresponding messages sent in other flights (handshake,
> application_data, and alert respectively) but are protected under
> different keys. After all the 0-RTT application data messages (if
> any) have been sent, an ""end_of_early_data"" alert of type
> ""warning"" is sent to indicate the end of the flight.
> 0-RTT MUST always be followed by an ""end_of_early_data"" alert.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4950,TLS 15+,87,702,"InformationProviding,Disagreement,ProposeAction",71,70,"> If any of these checks fail, the server MUST NOT respond
> with the extension and must discard all the remaining first
> flight data (thus falling back to 1-RTT). If the client attempts
> a 0-RTT handshake but the server rejects it, it will generally
> not have the 0-RTT record protection keys and must instead
> trial decrypt each record with the 1-RTT handshake keys
> until it finds one that decrypts properly, and then pick up
> the handshake from that point.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4951,TLS 15+,87,704,"InformationProviding,ProposeAction",71,70,"> #### Processing Order
> Clients are permitted to ""stream"" 0-RTT data until they
> receive the server's Finished, only then sending the ""end_of_early_data""
> alert. In order to avoid deadlock, when accepting ""early_data"",
> servers MUST process the client's Finished and then immediately
> send the ServerHello, rather than waiting for the client's
> ""end_of_early_data"" alert.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4952,TLS 15+,87,706,"InformationProviding,NeutralResponse",71,70,"> #### Replay Properties {#replay-time}
> There are several potential sources of error that make an exact
> measurement of time difficult.  Variations in client and server clocks
> are likely to be minimal, outside of gross time corrections.  Network
> propagation delays are most likely causes of a mismatch in legitimate
> values for elapsed time.  Both the NewSessionTicket and ClientHello
> messages might be retransmitted and therefore delayed, which might be
> hidden by TCP.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4953,TLS 15+,87,708,"InformationProviding,ProposeAction",71,70,"> ###  Encrypted Extensions
> The same extension types MUST NOT appear in both the ServerHello and
> EncryptedExtensions.  If the same extension appears in both locations,
> the client MUST rely only on the value in the EncryptedExtensions
> block.  All server-sent extensions other than those explicitly listed
> in {{server-hello}} or designated in the IANA registry MUST only
> appear in EncryptedExtensions. Extensions which are designated to
> appear in ServerHello MUST NOT appear in EncryptedExtensions. Clients
> MUST check EncryptedExtensions for the presence of any forbidden
> extensions and if any are found MUST terminate the handshake with an
> ""illegal_parameter"" alert.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4954,TLS 15+,87,710,"InformationProviding,Disagreement",71,70,"> ###  Certificate Request
>   - The Extended Key Usage extension in a certificate matches the
>   request when all key purpose OIDs present in the request are also
>   found in the Extended Key Usage certificate extension. The special
>   anyExtendedKeyUsage OID MUST NOT be used in the request.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4955,TLS 15+,87,712,"InformationProviding,Disagreement,ProposeAction",71,70,"> #### Server Certificate Selection
> - The ""server_name"" and ""trusted_ca_keys"" extensions {{RFC6066}} are used to
>   guide certificate selection. As servers MAY require the presence of the ""server_name""
>   extension, clients SHOULD send this extension, when applicable.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4956,TLS 15+,87,714,Question,71,70,"> ###  Certificate Verify
> If sent by a server, the signature algorithm MUST be one offered in the
> client's ""signature_algorithms"" extension unless no valid certificate chain can be
> produced without unsupported algorithms (see {{signature-algorithms}}). Note that
> there is a possibility for inconsistencies here. For instance, the client might
> offer an ECDHE_ECDSA cipher suite but omit any ECDSA and EdDSA values from its
> ""signature_algorithms"" extension. In order to negotiate correctly, the server
> MUST check any candidate cipher suites against the ""signature_algorithms""
> extension before selecting them. This is somewhat inelegant but is a compromise
> designed to minimize changes to the original cipher suite design.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4957,TLS 15+,87,716,ProposeAction,71,70,"> Note: When used with non-certificate-based handshakes (e.g., PSK), the
> client's signature does not cover the server's certificate directly,
> although it does cover the server's Finished message, which
> transitively includes the server's certificate when the PSK derives
> from a certificate-authenticated handshake.  {{PSK-FINISHED}}
> describes a concrete attack on this mode if the Finished is omitted
> from the signature. It is unsafe to use certificate-based client
> authentication when the client might potentially share the same
> PSK/key-id pair with two different endpoints. In order to ensure
> this, implementations MUST NOT mix certificate-based client
> authentication with pure PSK modes (i.e., those where the
> PSK was not derived from a previous non-PSK handshake).",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4958,TLS 15+,87,718,"InformationProviding,NeutralResponse",71,70,"> ## Record Payload Protection
> length
> : The length (in bytes) of the following TLSCiphertext.fragment, which
>   is the sum of the lengths of the content and the padding, plus one
>   for the inner content type. The length MUST NOT exceed 2^14 + 256.
>   An endpoint that receives a record that exceeds this length MUST
>   generate a fatal ""record_overflow"" alert.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4959,TLS 15+,87,720,"Question,InformationProviding,NeutralResponse",71,70,"> ## Per-Record Nonce {#nonce}
> Sequence numbers do not wrap.  If a TLS implementation would need to
> wrap a sequence number, it MUST either rekey ({{key-update}}) or
> terminate the connection.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4960,TLS 15+,87,722,NeutralResponse,71,70,"> ## Limits on Key Usage
> For AES-GCM, up to 2^24.5 full-size records may be encrypted on a
> given connection while keeping a safety margin of approximately
> 2^-57 for Authenticated Encryption (AE) security. For
> ChaCha20/Poly1305, the record sequence number will wrap before the
> safety limit is reached.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4961,TLS 15+,87,724,ProposeAction,71,70,"> ## Key Schedule
> If a given secret is not available, then the 0-value consisting of
> a string of Hash.length zeroes is used.  Note that this does not mean skipping
> rounds, so if PSK is not in use Early Secret will still be
> HKDF-Extract(0, 0).",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4962,TLS 15+,87,726,ProposeAction,71,70,"> | Extension                                | Recommended |  TLS 1.3  |
> | max_fragment_length [RFC6066]            |         Yes | Encrypted |",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4963,TLS 15+,87,728,InformationProviding,71,70,"> | user_mapping [RFC4681]                   |         Yes | Encrypted |
> | client_authz [RFC5878]                   |          No | Encrypted |
> | server_authz [RFC5878]                   |          No | Encrypted |",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4964,TLS 15+,87,730,ProposeAction,71,70,"
Isn't that ""Client/HelloRetryRequest""? I don't think EncryptedExtensions
can have Cookie...
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4965,TLS 15+,87,732,"InformationProviding,ProposeAction",71,70,"
Should the two registeries shadowed by this closed?
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4966,TLS 15+,87,733,"Question,Disagreement",71,70,"> ## Cipher Suites
> Note: The values listed for ECDHE and ChaCha/Poly are preliminary but
> are being or will be used for interop testing and therefore are likely to be
> assigned.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4967,TLS 15+,87,735,Question,71,70,"> ## Random Number Generation and Seeding
> To estimate the amount of seed material being produced, add the number of bits
> of unpredictable information in each seed byte. For example, keystroke timing
> values taken from a PC compatible 18.2 Hz timer provide 1 or 2 secure bits
> each, even though the total size of the counter value is 16 bits or more.
> Seeding a 128-bit PRNG would thus require approximately 100 such timer values.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4968,TLS 15+,87,737,Question,71,70,"> ## Implementation Pitfalls
> -  Have you ensured that all support for SSL, RC4, EXPORT ciphers, and
>   MD5 (via the ""signature_algorithm"" extension) is completely removed from
>   all possible configurations that support TLS 1.3 or later, and that
>   attempts to use these obsolete capabilities fail correctly?
>   (see {{backward-compatibility}})",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4969,TLS 15+,87,739,Disagreement,71,70,"> -  Do you handle TLS extensions in ClientHello correctly, including
>   unknown extensions or omitting the extensions field completely?",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4970,TLS 15+,87,741,"InformationProviding,ProposeAction",71,70,"> Cryptographic details:
> -  What countermeasures do you use to prevent timing attacks against
>   RSA signing operations {{TIMING}}?",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4971,TLS 15+,87,743,"InformationProviding,NeutralResponse",71,70,"> - When verifying RSA signatures, do you accept both NULL and missing parameters?
>   Do you verify that the RSA padding
>   doesn't have additional data after the hash value? {{FI06}}",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4972,TLS 15+,87,745,"InformationProviding,NeutralResponse",71,70,"> #  Overview of Security Properties {#security-analysis}
> [[TODO: This section is still a WIP and needs a bunch more work.]]
> A complete security analysis of TLS is outside the scope of this document.
> In this section, we provide an informal description the desired properties
> as well as references to more detailed work in the research literature
> which provides more formal definitions.
> We cover properties of the handshake separately from those of the record layer.",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4973,TLS 15+,87,747,"InformationProviding,ProposeAction",71,70,"
(The TLS 1.2 exporter without EMS failed the middle requirement,
creating security issues in applications that assumed the data was
connection-unique.
",<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4974,TLS 15+,87,749,"Question,InformationProviding,Answer,ProposeAction",71,70,Ilari Liusvaara  <SIGNATURES AND QUOTES>,<20160712041624.GA30472@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 07:16:24
4975,TLS 15+,87,814,"InformationProviding,Answer",679,740,"> > -  Do you handle TLS extensions in ClientHello correctly, including
> >   unknown extensions or omitting the extensions field completely?
> The extensions field can't be omitted in TLS 1.3. And I would
> consider TLS 1.2 client implementations that send such messages
> as quite pathological.",<201607120152.58083.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-07-12 01:52:57
4976,TLS 15+,87,816,"InformationProviding,Answer,StateDecision",737,740,Dave Garrett  <SIGNATURES AND QUOTES>,<201607120152.58083.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-07-12 01:52:57
4977,TLS 15+,87,1159,"InformationProviding,NeutralResponse",964,955,"
Yeah, it seems annoying with TLS 1.2 Client CertificateVerify, but
there either side can decide just not to support it. No such luck
with clients that implement the algorithm for server certificates in
any version.
",<20160712192929.GA32063@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 22:29:29
4978,TLS 15+,87,1161,"InformationProviding,Disagreement,ProposeAction",964,955,Ilari Liusvaara  <SIGNATURES AND QUOTES>,<20160712192929.GA32063@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-12 22:29:29
4979,TLS 15+,87,1687,"Question,StateDecision",664,736,">> ## Random Number Generation and Seeding
>> To estimate the amount of seed material being produced, add the number of bits
>> of unpredictable information in each seed byte. For example, keystroke timing
>> values taken from a PC compatible 18.2 Hz timer provide 1 or 2 secure bits
>> each, even though the total size of the counter value is 16 bits or more.
>> Seeding a 128-bit PRNG would thus require approximately 100 such timer values.
> This seems really obsolete. The timers have not been 18.2Hz for years, and
> applications running on operating systems damn better use OS services for
> random numbers, given that anything else is fraught with peril.",<57855399.70201@akamai.com>,bkaduk@akamai.com,0.0,1,2,2016-07-12 15:31:21
4980,TLS 15+,87,1689,Answer,674,746,">> #  Overview of Security Properties {#security-analysis}
>> [[TODO: This section is still a WIP and needs a bunch more work.]]
>> A complete security analysis of TLS is outside the scope of this document.
>> In this section, we provide an informal description the desired properties
>> as well as references to more detailed work in the research literature
>> which provides more formal definitions.
>> We cover properties of the handshake separately from those of the record layer.
> I think properties of the exporter should be covered as well:",<57855399.70201@akamai.com>,bkaduk@akamai.com,0.0,1,2,2016-07-12 15:31:21
4981,TLS 15+,87,1870,InformationProviding,1689,746,Ilari Liusvaara  <SIGNATURES AND QUOTES>,<20160712210732.GB32363@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-07-13 00:07:33
4982,TLS 15+,88,112,"InformationProviding,ExtensionOfPrevious",229,-1,>From a first read it is not clear what this section wants to protect,<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4983,TLS 15+,88,215,"InformationProviding,ContextSetting,Social",,-1,"
2. Figure 1 ascii art is a bit awkward (IMHO). ""Key Exch"" looks like
bad shortening. Symbols '^' and 'v' were confusing on the first read.
A suggestion could be to avoid ^v, and define shortened terminology
upfront and use it on the figures.

One the content, Figure 1 contents are too many to swallow at an
overview. A suggestion would be to split into two diagrams (preshared
keys and not).

A more general note on the section/document, is that although the PKIX
identity (certificate) is protected from passive adversaries, the PSK
identity is not. This is a discrepancy in terms of protecting the
user's identity between PSK and certificate authentication (that should
warrant .
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4984,TLS 15+,88,216,"InformationProviding,ExtensionOfPrevious,ContextSetting",215,-1,"
4.1.1. HelloRetryRequest how many times can it be re-sent by the
server? I assume only a single one, but it maybe good to make it
explicit.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4985,TLS 15+,88,217,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",216,-1,"
4.1.2. It is not defined what a server should do if encountered with a
ProtocolVersion of TLS 1.3.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4986,TLS 15+,88,218,"Question,ProposeAction",,-1,"
4.2. rfc6961 is standard's track but TLS 1.3 only uses the RFC6066
status request. Why not require RFC6961?
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4987,TLS 15+,88,219,"InformationProviding,ContextSetting,ProposeAction",,-1,"
4.2. the exception for including cookie in HelloRetryRequest seems like
something that could cause issues in future revisions. Any future
revision of the protocol would not be able to add such exceptions
(since they will be rejected by existing clients), and the fact that
the cookie is there, it indicates that such an exception may be useful.
A suggestion to address that would be to allow the HelloRetryRequest
contain any extension or grant an exception to a specific extension
number range.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4988,TLS 15+,88,220,"Question,InformationProviding,ContextSetting",,-1,"
4.2.5.2. The parameters are informally defined.
I'd suggest to follow rfc4492bis and use its text as in:
https://tools.ietf.org/html/draft-ietf-tls-rfc4492bis-16#section-5.4.1
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4989,TLS 15+,88,221,"InformationProviding,ContextSetting,ProposeAction",,-1,"
4.2.7. There is no guidance on the use of max_early_data_size.
I'd find it natural to have a recommended minimum value for application
protocols layered on TLS to take into account. E.g., text like servers
supporting early_data SHOULD allow at least 1024 bytes of data
(arbitrary number). Is the 32-bit upper limit intentional?
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4990,TLS 15+,88,222,"InformationProviding,ContextSetting,ProposeAction",,-1,"
4.2.8. This section changes the semantics for pre-shared keys as used
in any other protocol (including TLS 1.2). With the new text it
implies, pre-shared keys must be combined with a hash algorithm. Thus
existing PSK deployments which share keys and would like to upgrade to
TLS 1.3 cannot do transparently. They would have to fix to a specific
hash algorithm for their existing PSKs, and make sure they provide that
information to all the underlying software (which may be different on
the server and client side). I could find no implementation guideline
on what to do in the case of pre-existing PSKs in that text.

My recommendation would be to switch the sentence ""For externally
established PSKs, the Hash algorithm MUST be set when the PSK is
established"" to ""For externally established PSKs, the Hash algorithm
MUST be set when the PSK is established, or default to SHA-256"". That
way implementations can cope transparently with an upgrade to TLS 1.3
for already present PSK keys without requiring an additional RFC
describing that.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4991,TLS 15+,88,223,"ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction",,-1,"
4.2.8. The overlap of the namespace for usernames to be used in PSK
authentication, and the namespace for ""resumption"" does not give a good
feeling.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4992,TLS 15+,88,224,"InformationProviding,ContextSetting,ProposeAction",,-1,"
4.2.8. Related to the above, it is unclear what obfuscated_ticket_age
should contain when using PSK authentication (but not resumption).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4993,TLS 15+,88,225,"InformationProviding,ContextSetting",,-1,"
4.2.8.1. It is not defined what the binder should contain when using
PSK authentication (but not resumption).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4994,TLS 15+,88,226,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting",225,-1,"
4.2.8.1. If a single binder corresponds to a single identity, the
parsing and mapping of binders in the PreSharedKeyExtension seems
unnecessarily complicated. A suggestion is to move the binder inside
each identity structure:
struct {
opaque identity<1..2^16-1>;
uint32 obfuscated_ticket_age;
opaque PskBinderEntry<32..255>;
} PskIdentity;
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4995,TLS 15+,88,227,"InformationProviding,ContextSetting",,-1,"
4.2.8.3. I believe that section can benefit from some improvements.",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4996,TLS 15+,88,228,"InformationProviding,ContextSetting,ProposeAction",,-1,"from. It provides some checks, but it is unclear to me what these
protect from.

Some more concrete comments on the same section:
It mentions ""see if the value used by the client matches its
expectations"". A question that arises, is what is the recommended
expectation for a server? Given the text in 4.2.8 that should be a
week, but the text in 4.2.8 seems to imply that the restriction is
defined somewhere else, and I would have expected it to be here.

The text recommends: ""a server SHOULD measure the round trip time prior
to sending the NewSessionTicket message"". I see two issues here. (1) it
doesn't mention how to do this measurement --my guess is that this can
be done in the context of TLS--, and (2) it assumes that round-trips
are fixed over time. About (1), I ask because the obvious measurement
time between [server Application Data*] and client [Certificate*] would
include the processing of the application data by the client.
On (2), this check will not work as is for mobile clients which will
have variable round-trips.

The check 'ticket age must be shorter than elapsed time by a round-
trip', is unclear to me what it intends to protect from.

A clarification: ""the actual time elapsed on the server"", elapsed since
when? (I guess since the first message was received).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4997,TLS 15+,88,229,"ContextSetting,ProposeAction",,-1,"
4.3.2.1. The OID Filters extension on a first look seems quite
independent and unrelated to everything else in this document (seemed
quite a distraction that could have been in an appendix as well).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4998,TLS 15+,88,230,"InformationSeeking,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious",112,-1,"
4.4.2.1.  OCSP Status and SCT Extensions
This is a very nice addition to TLS 1.3. Something that I miss as an
implementer is guidelines on how to determine the (time) validity of an
OCSP stapled response. Here my point is that OCSP responses have
several fields optional (e.g., nextUpdate), which make a validation to
be hand-wavy. It would be nice to have a profile of OCSP responses that
would be recommended for use in TLS, as well or a recommendation of
what constitutes a ""fresh"" response for use in TLS.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
4999,TLS 15+,88,231,"InformationProviding,ContextSetting,ProposeAction",,-1,"
4.4.2.2., 4.4.2.3.
I think the reference to RFC5081 should be replaced with RFC5270 which
obsoletes the former even though not explicitly.

4.4.3. ""RSA signatures MUST use an RSASSA-PSS algorithm"". What should a
client or server do when encounters an non RSA-PSS signature in TLS
1.3?

4.4.4. ""Where HMAC [RFC2104] uses the Hash algorithm for the
handshake.  As noted above, the HMAC input can generally be implemented
by a running hash, i.e., just the handshake hash at this point.""

If that's now possible, it is a great addition for TLS 1.3. As this is
not possible in TLS 1.2, I envy the TLS 1.3-only implementations.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5000,TLS 15+,88,232,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction",,-1,"
4.6.3. My comment on this section, is that leaving up to the
implementer to decide the re-key, would most probably result in the
implementer delegating that decision to the application. In my
experience that would mean no re-key in practice for the majority of
applications. I'd have preferred a one-size fits all approach, where
re-key is done on decided points.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5001,TLS 15+,88,233,"Question,InformationProviding,ContextSetting",,-1,"
5.1. I miss a maximum number of alerts received per session, or some
other alert limiting mechanism (having CVE-2016-8610 in mind).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5002,TLS 15+,88,234,"InformationProviding,ContextSetting,ProposeAction",,-1,"
7.5. There is no definition of early_exporter_secret, and it is unclear
why it is even mentioned. In short how is this supposed to be used, and
why should implementations consider adding an interface to it?
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5003,TLS 15+,88,235,"InformationSeeking,InformationProviding,ContextSetting",,-1,"
A. Is the described state machine intended to be normative or
informative? I.e., which takes precedence, this description or the text
above? (would be nice to clarify)
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5004,TLS 15+,88,236,"InformationSeeking,ClarificationElicitation,InformationProviding,ContextSetting",,-1,"
B.4.
I believe it was discussed before, but I miss the AES-256-CCM
ciphersuites. If only one must be defined, it may be better to only
have the 256-bit variants (at least for the non-mac-truncated version).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5005,TLS 15+,88,237,"InformationSeeking,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",236,-1,"
E. I'd find it natural for this to be the security considerations
rather than an appendix.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5006,TLS 15+,88,238,"ExtensionOfPrevious,ContextSetting,ProposeAction",236,-1,"
G. Quite a long list. Would be nice to have the contributors to TLS 1.3
separately.
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5007,TLS 15+,88,239,"ExtensionOfPrevious,ProposeAction",236,-1,"
Bibliography: There are references to PKCS6 and PKCS7 that are never
used throughout the text (I guess there are more).
",<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5008,TLS 15+,88,241,"InformationProviding,ContextSetting,ProposeAction",,-1,Nikos Mavrogiannopoulos  <SIGNATURES AND QUOTES>,<1490797726.28079.18.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:28:46
5009,TLS 15+,88,266,InformationProviding,217,218,Nikos Mavrogiannopoulos  <SIGNATURES AND QUOTES>,<1490797957.28079.20.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-03-29 16:32:37
5010,TLS 15+,88,603,Thanking,215,215,"> A more general note on the section/document, is that although the PKIX
> identity (certificate) is protected from passive adversaries, the PSK
> identity is not. This is a discrepancy in terms of protecting the
> user's identity between PSK and certificate authentication (that should
> warrant .",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5011,TLS 15+,88,605,"InformationProviding,Agreement,StateDecision",216,216,"> 4.1.1. HelloRetryRequest how many times can it be re-sent by the
> server? I assume only a single one, but it maybe good to make it
> explicit.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5012,TLS 15+,88,607,"InformationProviding,Agreement,StateDecision",217,217,"> 4.1.2. It is not defined what a server should do if encountered with a
> ProtocolVersion of TLS 1.3.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5013,TLS 15+,88,609,"Agreement,StateDecision",217,218,"> 4.2. rfc6961 is standard's track but TLS 1.3 only uses the RFC6066
> status request. Why not require RFC6961?",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5014,TLS 15+,88,611,"Question,InformationProviding,Answer",218,219,"> 4.2. the exception for including cookie in HelloRetryRequest seems like
> something that could cause issues in future revisions. Any future
> revision of the protocol would not be able to add such exceptions
> (since they will be rejected by existing clients), and the fact that
> the cookie is there, it indicates that such an exception may be useful.
> A suggestion to address that would be to allow the HelloRetryRequest
> contain any extension or grant an exception to a specific extension
> number range.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5015,TLS 15+,88,613,"InformationProviding,NeutralResponse",219,220,"> 4.2.5.2. The parameters are informally defined.
> I'd suggest to follow rfc4492bis and use its text as in:
>  https://tools.ietf.org/html/draft-ietf-tls-rfc4492bis-16#section-5.4.1",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5016,TLS 15+,88,615,"InformationProviding,Answer,StateDecision",220,221,"> 4.2.7. There is no guidance on the use of max_early_data_size.
> I'd find it natural to have a recommended minimum value for application
> protocols layered on TLS to take into account. E.g., text like servers
> supporting early_data SHOULD allow at least 1024 bytes of data
> (arbitrary number). Is the 32-bit upper limit intentional?",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5017,TLS 15+,88,617,"InformationProviding,Agreement,ContextSetting,StateDecision",221,222,"> 4.2.8. This section changes the semantics for pre-shared keys as used
> in any other protocol (including TLS 1.2). With the new text it
> implies, pre-shared keys must be combined with a hash algorithm. Thus
> existing PSK deployments which share keys and would like to upgrade to
> TLS 1.3 cannot do transparently. They would have to fix to a specific
> hash algorithm for their existing PSKs, and make sure they provide that
> information to all the underlying software (which may be different on
> the server and client side). I could find no implementation guideline
> on what to do in the case of pre-existing PSKs in that text.
> My recommendation would be to switch the sentence ""For externally
> established PSKs, the Hash algorithm MUST be set when the PSK is
> established"" to ""For externally established PSKs, the Hash algorithm
> MUST be set when the PSK is established, or default to SHA-256"". That
> way implementations can cope transparently with an upgrade to TLS 1.3
> for already present PSK keys without requiring an additional RFC
> describing that.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5018,TLS 15+,88,619,"InformationProviding,Agreement",222,223,"> 4.2.8. The overlap of the namespace for usernames to be used in PSK
> authentication, and the namespace for ""resumption"" does not give a good
> feeling.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5019,TLS 15+,88,621,"InformationSeeking,InformationProviding,NeutralResponse,ProposeAction",223,224,"> 4.2.8. Related to the above, it is unclear what obfuscated_ticket_age
> should contain when using PSK authentication (but not resumption).",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5020,TLS 15+,88,623,"Agreement,StateDecision",224,224,"> 4.2.8.1. It is not defined what the binder should contain when using
> PSK authentication (but not resumption).",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5021,TLS 15+,88,625,"InformationProviding,Agreement,StateDecision",225,226,"> 4.2.8.1. If a single binder corresponds to a single identity, the
> parsing and mapping of binders in the PreSharedKeyExtension seems
> unnecessarily complicated. A suggestion is to move the binder inside
> each identity structure:
> struct {
>           opaque identity<1..2^16-1>;
>           uint32 obfuscated_ticket_age;
>           opaque PskBinderEntry<32..255>;
> } PskIdentity;",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5022,TLS 15+,88,627,"InformationProviding,NeutralResponse",226,228,"> 4.2.8.3. I believe that section can benefit from some improvements.
> >From a first read it is not clear what this section wants to protect
> from. It provides some checks, but it is unclear to me what these
> protect from.
> Some more concrete comments on the same section:
> It mentions ""see if the value used by the client matches its
> expectations"". A question that arises, is what is the recommended
> expectation for a server? Given the text in 4.2.8 that should be a
> week, but the text in 4.2.8 seems to imply that the restriction is
> defined somewhere else, and I would have expected it to be here.
> The text recommends: ""a server SHOULD measure the round trip time prior
> to sending the NewSessionTicket message"". I see two issues here. (1) it
> doesn't mention how to do this measurement --my guess is that this can
> be done in the context of TLS--, and (2) it assumes that round-trips
> are fixed over time. About (1), I ask because the obvious measurement
> time between [server Application Data*] and client [Certificate*] would
> include the processing of the application data by the client.
> On (2), this check will not work as is for mobile clients which will
> have variable round-trips.
> The check 'ticket age must be shorter than elapsed time by a round-
> trip', is unclear to me what it intends to protect from.
> A clarification: ""the actual time elapsed on the server"", elapsed since
> when? (I guess since the first message was received).",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5023,TLS 15+,88,629,"InformationProviding,NeutralResponse",226,229,"> 4.3.2.1. The OID Filters extension on a first look seems quite
> independent and unrelated to everything else in this document (seemed
> quite a distraction that could have been in an appendix as well).",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5024,TLS 15+,88,631,"InformationProviding,NeutralResponse",228,230,"> 4.4.2.1.  OCSP Status and SCT Extensions
> This is a very nice addition to TLS 1.3. Something that I miss as an
> implementer is guidelines on how to determine the (time) validity of an
> OCSP stapled response. Here my point is that OCSP responses have
> several fields optional (e.g., nextUpdate), which make a validation to
> be hand-wavy. It would be nice to have a profile of OCSP responses that
> would be recommended for use in TLS, as well or a recommendation of
> what constitutes a ""fresh"" response for use in TLS.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5025,TLS 15+,88,633,"NeutralResponse,StateDecision,Thanking",230,231,"> 4.4.2.2., 4.4.2.3.
> I think the reference to RFC5081 should be replaced with RFC5270 which
> obsoletes the former even though not explicitly.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5026,TLS 15+,88,635,"InformationProviding,NeutralResponse,StateDecision",231,231,"> 4.4.3. ""RSA signatures MUST use an RSASSA-PSS algorithm"". What should a
> client or server do when encounters an non RSA-PSS signature in TLS",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5027,TLS 15+,88,637,"InformationSeeking,InformationProviding,NeutralResponse",232,232,"
I can understand that, but we did litigate this extensively, so I think
any change would require WG consensus at this point.
",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5028,TLS 15+,88,639,"InformationProviding,Agreement",233,233,"
All alerts now result in connection termination, so the limit
seems to implicitly be 1.
",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5029,TLS 15+,88,642,"InformationProviding,NeutralResponse,StateDecision",234,235,"> A. Is the described state machine intended to be normative or
> informative? I.e., which takes precedence, this description or the text
> above? (would be nice to clarify)",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5030,TLS 15+,88,644,"InformationProviding,NeutralResponse",235,236,"> B.4.
> I believe it was discussed before, but I miss the AES-256-CCM
> ciphersuites. If only one must be defined, it may be better to only
> have the 256-bit variants (at least for the non-mac-truncated version)",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5031,TLS 15+,88,646,"InformationProviding,Answer,StateDecision",236,238,"> E. I'd find it natural for this to be the security considerations
> rather than an appendix.
> G. Quite a long list. Would be nice to have the contributors to TLS 1.3
> separately.",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5032,TLS 15+,88,648,"InformationSeeking,Answer,ProposeAction",237,239,"> Bibliography: There are references to PKCS6 and PKCS7 that are never
> used throughout the text (I guess there are more).",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5033,TLS 15+,88,650,"InformationSeeking,NeutralResponse,ProposeAction",238,239,"
-Ekr
",<CABcZeBMCZrVKM959F3ycKN_WAky2NAZTy9OOetnC+KJAj3L+Pw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 13:47:08
5034,TLS 15+,88,790,"InformationProviding,NeutralResponse,ProposeAction",613,630,"> > 4.3.2.1. The OID Filters extension on a first look seems quite
> > independent and unrelated to everything else in this document (seemed
> > quite a distraction that could have been in an appendix as well).
> This is a fair point, but it's been in the document a long time,
> so I think this would require WG Consensus.",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5035,TLS 15+,88,792,"InformationProviding,NeutralResponse",617,632,"> > 4.4.2.1.  OCSP Status and SCT Extensions
> > This is a very nice addition to TLS 1.3. Something that I miss as an
> > implementer is guidelines on how to determine the (time) validity of an
> > OCSP stapled response. Here my point is that OCSP responses have
> > several fields optional (e.g., nextUpdate), which make a validation to
> > be hand-wavy. It would be nice to have a profile of OCSP responses that
> > would be recommended for use in TLS, as well or a recommendation of
> > what constitutes a ""fresh"" response for use in TLS.
> Do you have any thoughts on what text we should insert here? I admit
> to being not that familiar with the practical matters of OCSP stapling.",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5036,TLS 15+,88,794,"InformationProviding,NeutralResponse,ProposeAction",621,634,"> > 4.4.2.2., 4.4.2.3.
> > I think the reference to RFC5081 should be replaced with RFC5270 which
> > obsoletes the former even though not explicitly.
> Indeed. Also, we are now explicitly prohibiting OpenPGP per discussion
> in Chicago.",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5037,TLS 15+,88,796,"InformationProviding,NeutralResponse",230,231,"> > 4.4.3. ""RSA signatures MUST use an RSASSA-PSS algorithm"". What should a
> > client or server do when encounters an non RSA-PSS signature in TLS",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5038,TLS 15+,88,798,"NeutralResponse,ProposeAction,Agreement","231,635",637,"> > 4.6.3. My comment on this section, is that leaving up to the
> > implementer to decide the re-key, would most probably result in the
> > implementer delegating that decision to the application. In my
> > experience that would mean no re-key in practice for the majority of
> > applications. I'd have preferred a one-size fits all approach, where
> > re-key is done on decided points.
> I can understand that, but we did litigate this extensively, so I think
> any change would require WG consensus at this point.",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5039,TLS 15+,88,800,"InformationProviding,Answer",637,645,"> > B.4.
> > I believe it was discussed before, but I miss the AES-256-CCM
> > ciphersuites. If only one must be defined, it may be better to only
> > have the 256-bit variants (at least for the non-mac-truncated version)
> Open to WG feedback here as well.",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5040,TLS 15+,88,802,"Question,NeutralResponse,ProposeAction",639,645,"
-Ilari",<20170411212538.GA17709@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-04-12 00:25:38
5041,TLS 15+,88,909,"NeutralResponse,StateDecision",790,795,Eric Rescorla  <SIGNATURES AND QUOTES>,<CABcZeBNfghTSFN1RAp1Mfkq5rDs=p39mj0tGCHA0GT4Byr5FPA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-11 14:53:06
5042,TLS 15+,88,1416,Agreement,1379,1357,Kurt Roeckx  <SIGNATURES AND QUOTES>,<20170423181851.myedywszjezeftl7@roeckx.be>,kurt@roeckx.be,0.0,0,7,2017-04-23 20:18:51
5043,TLS 15+,88,1417,"InformationProviding,ExtensionOfPrevious",1416,-1,"On Sun, 2017-04-23 at 12:01 -0400, Ryan Sleevi wrote:",<1493020692.3390.8.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-04-24 09:58:12
5044,TLS 15+,88,1741,"Disagreement,ContextSetting",1570,1711,Ryan Sleevi  <SIGNATURES AND QUOTES>,<CAErg=HG0GYunZSW=5BGwy6vCmLoVvH0tsHi3Ak6hBs6S3Jsdog@mail.gmail.com>,ryan-ietftls@sleevi.com,0.0,0,6,2017-04-25 13:48:19
5045,TLS 15+,89,36,"InformationProviding,InformationProviding,ContextSetting",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5046,TLS 15+,89,37,"InformationProviding,ExtensionOfPrevious,InformationProviding",36,-1,"
There's also a htmlized version available at:
http://tools.ietf.org/html/draft-ietf-tls-tls13-04",<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5047,TLS 15+,89,38,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
A diff from the previous version is available at:
http://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-04",<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5048,TLS 15+,89,39,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",38,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5049,TLS 15+,89,40,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",39,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5050,TLS 15+,89,41,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",40,-1,internet-drafts@ietf.org <SIGNATURES AND QUOTES>,<20150103220017.14032.97332.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-01-03 14:00:17
5051,TLS 15+,90,35,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5052,TLS 15+,90,36,"InformationProviding,InformationProviding,ExtensionOfPrevious",35,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-23
https://datatracker.ietf.org/doc/html/draft-ietf-tls-tls13-23",<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5053,TLS 15+,90,37,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-23",<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5054,TLS 15+,90,38,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5055,TLS 15+,90,39,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",38,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5056,TLS 15+,90,40,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",39,-1,internet-drafts@ietf.org <SIGNATURES AND QUOTES>,<151518973440.32411.5552831558342067093@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-01-05 14:02:14
5057,TLS 15+,91,20,"InformationProviding,ContextSetting,InformationProviding",,-1,"
1) Have TBNEGO specify something like ""Token Binding and 0-RTT MUST
NOT both be negotiated on the same connection"" and let
draft-ietf-tokbind-tls13-0rtt update TBNEGO later.
2) Specify in TBNEGO a max TLS version of 1.2, and have
draft-ietf-tokbind-tls13-0rtt or another draft specify the behavior of
the extension in TLS 1.3 and higher.",<CACdeXiKy_CEorSMRBLquY6kV39bzvoyhcR-3Ncm1i+Jsht5sXg@mail.gmail.com>,nharper@google.com,0.0,0,18,2017-03-29 15:03:10
5058,TLS 15+,91,21,"ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting",20,-1,"
Does this WG think this is something that needs to be addressed? Are
there other options to consider?",<CACdeXiKy_CEorSMRBLquY6kV39bzvoyhcR-3Ncm1i+Jsht5sXg@mail.gmail.com>,nharper@google.com,0.0,0,18,2017-03-29 15:03:10
5059,TLS 15+,91,22,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",21,-1,Nick Harper  <SIGNATURES AND QUOTES>,<CACdeXiKy_CEorSMRBLquY6kV39bzvoyhcR-3Ncm1i+Jsht5sXg@mail.gmail.com>,nharper@google.com,0.0,0,18,2017-03-29 15:03:10
5060,TLS 15+,92,42,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
The IESG has received a request from the Transport Layer Security WG (tls) to
consider the following document: - 'The Transport Layer Security (TLS)
Protocol Version 1.3'
<draft-ietf-tls-tls13-24.txt> as Proposed Standard",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5061,TLS 15+,92,43,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",42,-1,"
The IESG plans to make a decision in the next few weeks, and solicits final
comments on this action. Please send substantive comments to the
ietf@ietf.org mailing lists by 2018-03-01. Exceptionally, comments may be
sent to iesg@ietf.org instead. In either case, please retain the beginning of
the Subject line to allow automated sorting.",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5062,TLS 15+,92,44,"InformationProviding,ExtensionOfPrevious,ContextSetting",42,-1,"
Abstract",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5063,TLS 15+,92,45,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",44,-1,"
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5064,TLS 15+,92,46,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
The file can be obtained via
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5065,TLS 15+,92,47,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
IESG discussion can be tracked via
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/ballot/",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5066,TLS 15+,92,48,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
The following IPR Declarations may be related to this I-D:",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5067,TLS 15+,92,49,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",48,-1,"
https://datatracker.ietf.org/ipr/2900/",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5068,TLS 15+,92,50,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",49,-1,"
The document contains these normative downward references.
See RFC 3967 for additional information:
rfc8017: PKCS #1: RSA Cryptography Specifications Version 2.2 (Informational - IETF stream)",<151872922818.7492.15112829041576036922.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-02-15 13:13:48
5069,TLS 15+,93,0,"Social,Social",,-1,"Hi,",<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5070,TLS 15+,93,131,"InformationSeeking,ContextSetting,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
One or more media streams within a BUNDLE group can use
the Datagram Transport Layer Security (DTLS) protocol [RFC6347]
in order to encrypt the data, or to negotiate encryption keys
if another encryption mechanism is used to encrypt media.",<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5071,TLS 15+,93,132,"ExtensionOfPrevious,ContextSetting,InformationProviding",131,-1,"
When DTLS is used for more than one media stream within a BUNDLE
group, the following rules apply:",<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5072,TLS 15+,93,133,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",132,-1,"
o  A single DTLS association [RFC6347] MUST be used for all media
using DTLS; and",<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5073,TLS 15+,93,134,"ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting",133,-1,"
o  Each media protocol using DTLS MUST use the same mechanism for
determining which endpoint (the offerer or answerer) becomes DTLS client and DTLS server.",<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5074,TLS 15+,93,136,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",134,-1,Christer Holmberg  <SIGNATURES AND QUOTES>,<7594FB04B1934943A5C02806D1A2204B1D852384@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-25 07:14:46
5075,TLS 15+,93,479,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,Disagreement,ProposeAction",131,473,">With respect to the text below I don't think you need the ""When DTLS is used for more than one media stream within a >BUNDLE group"". All you need to say is that there may only be one DTLS association per BUNDLE. Also it could be more >confusing to mention more than one media stream, because SRTP doesn't use DTLS for the media stream, only key >exchange.",<7594FB04B1934943A5C02806D1A2204B1D866141@ESESSMB209.ericsson.se>,christer.holmberg@ericsson.com,0.0,1,1,2015-05-27 08:54:26
5076,TLS 15+,94,98,"InformationProviding,InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
The IESG contact persons are Kathleen Moriarty and Eric Rescorla.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5077,TLS 15+,94,99,"InformationProviding,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",98,-1,"
A URL of this Internet Draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5078,TLS 15+,94,100,"InformationProviding,InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
Technical Summary",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5079,TLS 15+,94,101,"InformationProviding,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",100,-1,"
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5080,TLS 15+,94,102,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
Working Group Summary",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5081,TLS 15+,94,103,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",102,-1,"
The document is the work product of the members of the TLS
WG.  There is strong consensus in the working group for this
document.  The area that was most controversial was around
the inclusion of a 0-RTT mode that has different security
properties than the rest of TLS.  s1.3 lists the major differences
from TLS1.2, as agreed by the contributors; we do not think
that the RFC needs to list the changes that occurred between
each draft.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5082,TLS 15+,94,104,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
The draft has had 3 WGLCs to address various issues and the
chairs assessment was fair in each of these discussions.  At this
point there are no known outstanding issue.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5083,TLS 15+,94,105,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",104,-1,"
While I personally do not agree with inclusion of 0-RTT because
there are bound to be successful attacks against the mitigations
in the future, I do agree with the chair's assessment of the WG
consensus and am pleased with the additional text on mitigating
the associated risks with 0-RTT.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5084,TLS 15+,94,106,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",105,-1,"
Document Quality",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5085,TLS 15+,94,107,"InformationProviding,ExtensionOfPrevious,InformationProviding,Agreement,Disagreement,InformationProviding,ExtensionOfPrevious",106,-1,"
There are over 10 interoperable implementations of the
protocol from different sources written in different
languages.  The major web browser vendors and TLS
libraries vendors have draft implementations or have
indicated they will support the protocol in the future.  In
addition to having extensive review in the TLS working
group, the protocol has received unprecedented security
review by the academic community.  Several TRON (TLS
Ready or Not) conferences were held with academic
community to give them a chance to present their
findings for TLS.  This has resulted in improvements to
the protocol.  There was also much consideration and
discussion around any contentious points, resolved through
polls and working group last calls.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5086,TLS 15+,94,108,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
Please note that ID-nits complains about the obsoleted/
updated RFCs not being listed in the abstract. This is
intentional because the abstract is now a concise and
comprehensive overview and is free form citations, as
per RFC7322.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5087,TLS 15+,94,109,"InformationProviding,ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious",108,-1,"
Personnel",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5088,TLS 15+,94,110,"InformationProviding,ProposeAction,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,Social",109,-1,"
The Document Shepherd is Sean Turner.
The responsible AD is Kathleen Moriarty.",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5089,TLS 15+,94,111,"InformationProviding,InformationProviding,ContextSetting",,-1,"
The IANA Expert(s) for the registries
in this document are
Yoav Nir <ynir.ietf@gmail.com>,
Rich Salz <rsalz@akamai.com>, and
Nick Sullivan <nick@cloudflare.com> .",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5090,TLS 15+,94,112,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",111,-1,"
IANA Note",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5091,TLS 15+,94,113,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious","111,112",-1,"
This document requests the creation of the TLS SignatureScheme
Registry with values assigned via Specification Required [RFC8126].",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5092,TLS 15+,94,114,"InformationProviding,ExtensionOfPrevious,ContextSetting",113,-1,"
This document requests the reference for several registries be
updated to point to this document.  The registries include:
- TLS Cipher Suite Registry, updated via via Specification Required [RFC8126]
- TLS ContentType Registry, future values allocated via Standards Action [RFC8126]
- TLS Alert Registry, future values allocated via Standards Action [RFC8126]
- TLS HandshakeType Registry, future values allocated via Standards Action [RFC8126]
- TLS ExtensionType Registry, the policy is changed in ietf-tls-iana-registry-updates and this will be reflected in version 25 of the draft",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5093,TLS 15+,94,115,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ProposeAction",114,-1,"
RFC Editor Note",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5094,TLS 15+,94,116,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","114,115",-1,"
Please ensure a reference is added prior to final publication for the
text added in section
E.6. PSK Identity Exposure
of draft-ietf-tls-tls13",<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5095,TLS 15+,94,117,"InformationProviding,InformationProviding,ContextSetting",,-1,The IESG  <SIGNATURES AND QUOTES>,<152162652269.6094.2447920700461328551.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-21 03:02:02
5096,TLS 15+,95,0,"InformationProviding,InformationProviding",,-1,I'm also working on a PNE appendix.,<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5097,TLS 15+,95,25,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
https://github.com/quicwg/base-drafts/pull/1573",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5098,TLS 15+,95,26,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",25,-1,"
-- Commit Summary --",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5099,TLS 15+,95,27,"InformationProviding,InformationProviding",,-1,"
* Add an appendix containing test vectors for ""Initial"".",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5100,TLS 15+,95,28,"ProposeAction,InformationProviding",,-1,"
-- File Changes --",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5101,TLS 15+,95,29,"InformationProviding,InformationProviding",,-1,"
M draft-ietf-quic-tls.md (71)",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5102,TLS 15+,95,30,"InformationProviding,InformationProviding",,-1,"
-- Patch Links --",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5103,TLS 15+,95,31,InformationProviding,,-1,"
https://github.com/quicwg/base-drafts/pull/1573.patch
https://github.com/quicwg/base-drafts/pull/1573.diff",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5104,TLS 15+,95,32,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573",<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5105,TLS 15+,95,33,"InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction",,-1,Rui Paulo  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573@github.com>,notifications@github.com,0.0,0,4,2018-07-16 21:55:32
5106,TLS 15+,95,74,"InformationProviding,ContextSetting,InformationProviding,NeutralResponse",0,-1,"
client in secret: 9f536457f32a1e0ae864bcb3caf1235110630e1d1fb33835bd054170f99bf7dc
key: f2928f2614ad6c20b9bd008e9c89631c
iv: ab950b0198637978cf44aab9
pn: 68c3f64e2d6634412b8e3294628d76f1",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5107,TLS 15+,95,75,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",74,-1,"
server in secret: b087dcd7478dda8a858fbf3d605c888586c0a3a9875423ad4f114f0ba38e5a2e
key: f56817d0fc595cfc0a2b0bcfb18735ec
iv: 3205035a3c937c902ee4f4d6
pn: a313c86d1373ecbccb3294b14974226c",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5108,TLS 15+,95,76,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",75,-1,"
I doubt that there is a bug around `HKDF-Expand-Label` implementation. Because the ""info"" parameter of `HKDF-Expand` is changed in draft-13. If understand correctly, it's `HkdfLabel` (defined in TLS 1.3) and it has `context<0..255>` field. Without the context field, I got exact same values of this test vector.",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5109,TLS 15+,95,77,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
QUIC draft-12
struct {
uint16 length = Length;
opaque label<6..255> = ""QUIC "" + Label;
} QhkdfExpandInfo;",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5110,TLS 15+,95,78,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
TLS 1.3 (QUIC draft-13)
struct {
uint16 length = Length;
opaque label<7..255> = ""tls13 "" + Label;
opaque context<0..255> = Context;
} HkdfLabel;",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5111,TLS 15+,95,79,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#issuecomment-406478811",<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5112,TLS 15+,95,80,"InformationProviding,InformationProviding,ProposeAction",,-1,Masaori Koshiba  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c406478811@github.com>,notifications@github.com,0.0,0,4,2018-07-19 20:30:03
5113,TLS 15+,95,88,"InformationProviding,InformationProviding,ProposeAction",,-1,Rui Paulo  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c406483849@github.com>,notifications@github.com,0.0,0,4,2018-07-20 04:11:46
5114,TLS 15+,95,119,"InformationProviding,InformationProviding",25,-1,"+  e9 39 e8 fe 98 d7 14 6b b9 fc 78 e9 9a 1b 41 ab
+
+Using this secret, we get the following keys (16 bytes) and
+initialization vector (12 bytes):
+
+  key:     99 ff fd 2c 3e 4a cd ae 3d 32 02 1c 75 38 86 c0
+
+  pn key:  14 c2 70 2b 54 48 80 d3 9d ab d7 dd c8 eb cd 9a
+
+  IV:      27 92 24 e5 85 fd 84 e9 e0 70 ea 9a
+
+

Yes, having something like that in the spec would be useful. We need an independent verification before publishing these values.

Also, having the PN key is fine, but we probably need a complete packet example to ensure that the nonce is properly extracted and the PN properly decrypted.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#pullrequestreview-140552300",<quicwg/base-drafts/pull/1573/review/140552300@github.com>,notifications@github.com,0.0,0,4,2018-07-25 18:21:31
5115,TLS 15+,95,120,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",25,-1,Christian Huitema  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/review/140552300@github.com>,notifications@github.com,0.0,0,4,2018-07-25 18:21:31
5116,TLS 15+,95,149,"InformationProviding,InformationProviding",25,93,"+  e9 39 e8 fe 98 d7 14 6b b9 fc 78 e9 9a 1b 41 ab
+
+Using this secret, we get the following keys (16 bytes) and
+initialization vector (12 bytes):
+
+  key:     99 ff fd 2c 3e 4a cd ae 3d 32 02 1c 75 38 86 c0
+
+  pn key:  14 c2 70 2b 54 48 80 d3 9d ab d7 dd c8 eb cd 9a
+
+  IV:      27 92 24 e5 85 fd 84 e9 e0 70 ea 9a
+
+

In fact, I think that it would be better to start with the test vector in EKR's message ""PNE Test Vector"" sent on the quic list on 7/18/2018.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#discussion_r205310858",<quicwg/base-drafts/pull/1573/review/140556418@github.com>,notifications@github.com,0.0,0,4,2018-07-25 18:51:28
5117,TLS 15+,95,150,"InformationProviding,NeutralResponse,InformationProviding,ProposeAction",25,93,Christian Huitema  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/review/140556418@github.com>,notifications@github.com,0.0,0,4,2018-07-25 18:51:28
5118,TLS 15+,95,179,"InformationProviding,InformationProviding",25,93,"+  e9 39 e8 fe 98 d7 14 6b b9 fc 78 e9 9a 1b 41 ab
+
+Using this secret, we get the following keys (16 bytes) and
+initialization vector (12 bytes):
+
+  key:     99 ff fd 2c 3e 4a cd ae 3d 32 02 1c 75 38 86 c0
+
+  pn key:  14 c2 70 2b 54 48 80 d3 9d ab d7 dd c8 eb cd 9a
+
+  IV:      27 92 24 e5 85 fd 84 e9 e0 70 ea 9a
+
+

@huitema my objective was to have the PN key in this section and then use it for PNE but this PR was just for initial test vectors.  I agree we need independent verification before we publish.

You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#discussion_r206012942",<quicwg/base-drafts/pull/1573/review/141389860@github.com>,notifications@github.com,0.0,0,4,2018-07-29 21:33:18
5119,TLS 15+,95,180,"InformationProviding,Agreement,InformationProviding,Agreement",25,93,Rui Paulo  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/review/141389860@github.com>,notifications@github.com,0.0,0,4,2018-07-29 21:33:18
5120,TLS 15+,95,209,"InformationProviding,Agreement,Disagreement",25,-1,"
+{{initial-secrets}} contains the salt used for Initial Packet
+Encryption.
+Using the Initial Destination Connection ID 0x8394c8f03e515708, the
+derived 32 byte initial secret is:
+
+  a5 72 b0 24 5a f1 ed df 5c 61 c6 e3 f7 f9 30 4c
+  a6 6b fb 4c aa f7 65 67 d5 cb 8d d1 dc 4e 82 0b
+
+The labels generated by the HKDF-Expand-Label function are:
+
+  quic client in: 00 20 0e 71 75 69 63 20 63 6c 69 65 6e 74 20
+                  69 6e",<quicwg/base-drafts/pull/1573/review/141400767@github.com>,notifications@github.com,0.0,0,4,2018-08-14 17:59:50
5121,TLS 15+,95,210,"InformationProviding,InformationProviding,NeutralResponse",25,-1,"
These labels all omit the trailing zero octet for the context.",<quicwg/base-drafts/pull/1573/review/141400767@github.com>,notifications@github.com,0.0,0,4,2018-08-14 17:59:50
5122,TLS 15+,95,211,"InformationProviding,ExtensionOfPrevious,InformationProviding,NeutralResponse",210,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#pullrequestreview-141400767",<quicwg/base-drafts/pull/1573/review/141400767@github.com>,notifications@github.com,0.0,0,4,2018-08-14 17:59:50
5123,TLS 15+,95,212,"InformationProviding,InformationProviding,ProposeAction",,-1,Martin Thomson  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/review/141400767@github.com>,notifications@github.com,0.0,0,4,2018-08-14 17:59:50
5124,TLS 15+,95,413,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting",214,-1,"
* test copied from EKR test vector",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5125,TLS 15+,95,414,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",413,-1,"
static uint8_t draft13_test_input_packet[] = {
0xff, 0xff, 0x00, 0x00, 0x0d, 0x50, 0x06, 0xb8, 0x58, 0xec,
0x6f, 0x80, 0x45, 0x2b, 0x00, 0x44, 0xef, 0xa5, 0xd8, 0xd3,
0x07, 0xc2, 0x97, 0x3f, 0xa0, 0xd6, 0x3f, 0xd9, 0xb0, 0x3a,
0x4e, 0x16, 0x3b, 0x99, 0x0d, 0xd7, 0x78, 0x89, 0x4a, 0x9e,
0xdc, 0x8e, 0xac, 0xfb, 0xe4, 0xaa, 0x6f, 0xbf, 0x4a, 0x22,
0xec, 0x7f, 0x90, 0x6b, 0x5e, 0x8b, 0x8a, 0xe1, 0x2e, 0x5f,
0xcc, 0x79, 0x24, 0xdf, 0xee, 0xe8, 0x13, 0x84, 0x2b, 0xb2,
0x14, 0x9b, 0x80, 0x5e, 0x55, 0x89, 0x50, 0x84, 0xe8, 0x39,
0x32, 0x00, 0xbb, 0x3f, 0xc6, 0x18, 0xaf, 0x7d, 0x08, 0x28,
0x14, 0x85, 0xd9, 0x14, 0xce, 0x42, 0x30, 0x3f, 0x5d, 0x77,
0x2b, 0x20, 0x05, 0x08, 0xa0, 0xc0, 0x02, 0x53, 0xe3, 0x32,
0xe3, 0x6a, 0x84, 0xf6, 0x57, 0x32, 0x1a, 0xc4, 0xc8, 0xe2,
0xcc, 0x8a, 0x11, 0x7e, 0x95, 0x87, 0x1f, 0x12, 0xb1, 0xf3,
0x6b, 0xe8, 0xc4, 0xb7, 0x6f, 0xa4, 0x33, 0xdc, 0x4d, 0x31,
0x42, 0xe6, 0x54, 0x7f, 0x45, 0x98, 0xbf, 0x4b, 0x19, 0x21,
0x30, 0xae, 0xa6, 0xfc, 0x20, 0xda, 0x51, 0x58, 0xb2, 0x16,
0x2b, 0x5a, 0x89, 0x99, 0x57, 0xda, 0x05, 0xde, 0xd5, 0xc7,
0x09, 0x07, 0x29, 0x8f, 0xd8, 0x85, 0x84, 0x7f, 0x22, 0xa1,
0xec, 0xb0, 0xa8, 0x14, 0xfe, 0x01, 0x70, 0xe2, 0x3c, 0xad,
0x20, 0xaf, 0x64, 0xf0, 0x5c, 0xc1, 0x3c, 0x74, 0xe9, 0x18,
0x24, 0x10, 0x1a, 0xfd, 0xcf, 0x5f, 0x15, 0x32, 0xfc, 0x2f,
0xde, 0x93, 0x6a, 0x3a, 0x15, 0x9f, 0x76, 0x28, 0x3a, 0x26,
0xc7, 0x38, 0xf7, 0x78, 0xc7, 0x6e, 0x6c, 0xa4, 0x1f, 0xa7,
0xf1, 0x34, 0x40, 0x1d, 0x39, 0x02, 0x7f, 0xd8, 0x1d, 0xe1,
0x7a, 0x80, 0x21, 0xa9, 0xc0, 0xaa, 0xa9, 0xb4, 0x47, 0x8f,
0xe5, 0xc0, 0x64, 0x79, 0x41, 0x61, 0x8f, 0x3b, 0xee, 0x41,
0x0c, 0xaf, 0x94, 0xc2, 0x48, 0xd2, 0xa6, 0x4b, 0x5e, 0x45,
0x84, 0x5c, 0xd7, 0x7d, 0xe1, 0x3a, 0x5e, 0xd9, 0x40, 0x34,
0xd2, 0xbc, 0x5f, 0x45, 0x78, 0x87, 0x35, 0x19, 0x93, 0xc1,
0xec, 0xfa, 0x34, 0xfd, 0x0c, 0x65, 0x8f, 0xea, 0x3f, 0x80,
0x86, 0xd2, 0x68, 0x08, 0xee, 0xf9, 0x76, 0x26, 0x2e, 0xcf,
0x0a, 0xd6, 0x46, 0xb6, 0x27, 0x94, 0x55, 0x11, 0xdd, 0xe8,
0x3e, 0x26, 0x60, 0x9c, 0xd5, 0xcf, 0xd7, 0xed, 0x9f, 0x62,
0x07, 0xd7, 0x66, 0x18, 0xb4, 0x4c, 0x48, 0xbf, 0x62, 0x3b,
0xf4, 0x20, 0xdc, 0x7c, 0x12, 0x7e, 0x5d, 0x5f, 0x52, 0x9f,
0x08, 0x3b, 0x71, 0xa1, 0x7b, 0x17, 0xda, 0x32, 0x9b, 0xfc,
0x38, 0xa7, 0x4b, 0xf8, 0xcf, 0xcf, 0x31, 0x5c, 0x7c, 0x07,
0x0b, 0x71, 0xeb, 0xfa, 0xe3, 0xab, 0x35, 0x13, 0x41, 0xa7,
0x67, 0xad, 0xfd, 0xd9, 0xe5, 0x7c, 0x73, 0x8f, 0x5d, 0xe9,
0xda, 0x53, 0x71, 0x1e, 0x88, 0x6d, 0x14, 0x72, 0x31, 0x0b,
0x91, 0x7a, 0x1c, 0x97, 0x98, 0xe3, 0xe9, 0xb1, 0x3c, 0x7c,
0x74, 0xbe, 0xb8, 0xd1, 0xb8, 0x23, 0x45, 0xbe, 0xa1, 0x34,
0x94, 0x15, 0x67, 0x9a, 0x9c, 0x64, 0xb0, 0x43, 0x3b, 0x68,
0xc8, 0x71, 0xae, 0x08, 0x09, 0x2a, 0x1f, 0x61, 0x06, 0xbc,
0x06, 0x33, 0x7c, 0xd3, 0x43, 0x86, 0x6e, 0xe8, 0x18, 0x5c,
0x03, 0xfc, 0xf3, 0xbb, 0x06, 0x66, 0x45, 0x3f, 0x84, 0x79,
0x05, 0x54, 0x71, 0x99, 0x41, 0x4c, 0x1e, 0x57, 0x53, 0x57,
0x47, 0xbe, 0x61, 0xcd, 0xf6, 0x77, 0x83, 0x78, 0xf1, 0x21,
0xd6, 0x8d, 0xf0, 0x18, 0x1e, 0xe9, 0xe8, 0xd9, 0x93, 0x2c,
0x1c, 0x59, 0x3c, 0x0f, 0x8c, 0x0a, 0x1a, 0xf0, 0xf5, 0x26,
0x2b, 0x86, 0x20, 0x50, 0x02, 0xdc, 0xed, 0x9e, 0xcd, 0xae,
0xe2, 0xd0, 0xaa, 0x07, 0xdd, 0x4c, 0x14, 0xf9, 0x85, 0x71,
0xe4, 0xbe, 0xa7, 0x2f, 0x84, 0x74, 0xf6, 0x36, 0x97, 0x04,
0x3e, 0x93, 0x6e, 0xbb, 0x2b, 0xf9, 0x71, 0x6e, 0xd0, 0xef,
0xbd, 0xc1, 0x30, 0x05, 0xa7, 0x5c, 0xee, 0x3a, 0x49, 0xba,
0xbc, 0x61, 0xb9, 0x67, 0x77, 0x64, 0x51, 0x0e, 0xb1, 0x98,
0x28, 0xdf, 0x4e, 0x10, 0xfb, 0x38, 0xb7, 0x9a, 0x1e, 0xfb,
0xf0, 0x4c, 0xc2, 0xd5, 0x71, 0x94, 0x9d, 0x54, 0x03, 0xf7,
0x97, 0x36, 0x17, 0x43, 0xdc, 0xc5, 0xe3, 0xbf, 0x3b, 0x43,
0x96, 0xf7, 0xae, 0x1a, 0x3a, 0xff, 0xbc, 0x9f, 0x72, 0xe5,
0x40, 0xd9, 0x20, 0x36, 0x39, 0x70, 0x30, 0x7e, 0x07, 0x25,
0xfa, 0x83, 0x8d, 0x61, 0x18, 0x03, 0x25, 0x1a, 0x4a, 0x08,
0xcc, 0xca, 0x19, 0x83, 0xd5, 0xb2, 0x9a, 0x58, 0x37, 0x58,
0xbe, 0x63, 0x34, 0x3e, 0x88, 0xf5, 0x59, 0x1d, 0x88, 0x5b,
0x8a, 0xf6, 0x95, 0xf3, 0x3a, 0xdb, 0xdd, 0x0d, 0x94, 0x1d,
0x26, 0x02, 0x87, 0xe3, 0x2e, 0xf5, 0xa9, 0x8f, 0xd5, 0x5a,
0xc1, 0x37, 0x21, 0x10, 0x21, 0xfd, 0xc2, 0x3b, 0x5d, 0x7a,
0x54, 0x69, 0xf5, 0x78, 0xbf, 0x7a, 0xff, 0x65, 0x29, 0x11,
0x79, 0x96, 0xf9, 0xeb, 0xab, 0x5e, 0x6d, 0xc7, 0xb0, 0x47,
0xb3, 0x56, 0x33, 0x2f, 0xea, 0x82, 0xfd, 0xd6, 0x20, 0xeb,
0x86, 0xf3, 0xc1, 0xd3, 0x85, 0x5c, 0x8b, 0x80, 0x75, 0xda,
0x59, 0xa7, 0x66, 0x2f, 0x4a, 0x11, 0xb9, 0x77, 0xd9, 0x96,
0xb8, 0xb3, 0xc7, 0x65, 0x7a, 0xd4, 0xa8, 0x2a, 0x20, 0xa7,
0xf7, 0x6c, 0xe3, 0x76, 0xc0, 0x32, 0x00, 0x86, 0xed, 0x02,
0x9d, 0xd6, 0x15, 0x39, 0x93, 0x07, 0x98, 0x31, 0x13, 0xcc,
0x0a, 0xa9, 0x73, 0xec, 0xba, 0x69, 0x1e, 0x7e, 0x4c, 0xdc,
0x80, 0xae, 0xfa, 0x7e, 0x8c, 0x83, 0x47, 0xba, 0xba, 0x05,
0x0e, 0xac, 0xa7, 0xdc, 0x35, 0xa2, 0x1a, 0xa8, 0x54, 0xe5,
0x31, 0xdc, 0x77, 0x58, 0xd7, 0xd1, 0x0b, 0x8c, 0x8e, 0x42,
0xc1, 0xbe, 0x3b, 0xbf, 0x26, 0x6d, 0x05, 0x5a, 0xc2, 0x5c,
0x37, 0x27, 0x9e, 0xbe, 0xfa, 0x28, 0xbb, 0xe8, 0x9a, 0x34,
0xad, 0x1a, 0xb3, 0xd2, 0x3d, 0x7a, 0x66, 0xd1, 0xc2, 0x16,
0xa5, 0x76, 0x50, 0xe6, 0xec, 0x9f, 0xc8, 0xba, 0x7a, 0xdf,
0xb3, 0x8e, 0x57, 0xf2, 0x0c, 0x46, 0x71, 0x66, 0xc8, 0xfe,
0x79, 0x44, 0xe6, 0x7f, 0x82, 0x13, 0x81, 0x60, 0x00, 0x20,
0x04, 0x81, 0x2c, 0x78, 0xba, 0x4b, 0x5f, 0x0d, 0xa9, 0x17,
0xda, 0x4c, 0xc1, 0x4c, 0xf8, 0xfc, 0x10, 0xdb, 0xa3, 0xf5,
0x33, 0xfa, 0xcb, 0x11, 0xef, 0x06, 0xd8, 0xb8, 0xf1, 0x78,
0xea, 0x9c, 0x5e, 0x8a, 0xcb, 0xbc, 0xa7, 0xb7, 0xf0, 0xe1,
0xf6, 0xb7, 0xa7, 0x0e, 0xc2, 0xd5, 0x10, 0x8c, 0xc4, 0x11,
0x78, 0x05, 0x62, 0x95, 0x79, 0x3b, 0xed, 0x35, 0x7a, 0xcc,
0xbb, 0x03, 0xc0, 0x58, 0x2d, 0xc6, 0x9b, 0xc7, 0x7a, 0x34,
0x03, 0x0f, 0x38, 0xcc, 0xe2, 0x56, 0xc5, 0xa9, 0xce, 0xc6,
0xe8, 0x62, 0x14, 0x6e, 0x3f, 0x04, 0x63, 0xf1, 0x0d, 0xd5,
0x83, 0x32, 0x57, 0xd0, 0xa0, 0x35, 0x91, 0x66, 0xa7, 0xe2,
0x02, 0x7d, 0x98, 0xea, 0xf2, 0x6c, 0xf0, 0xd5, 0xa4, 0xa0,
0x5f, 0x6e, 0xf8, 0xb7, 0x42, 0xf5, 0xd3, 0x14, 0xa3, 0x1d,
0xee, 0xea, 0xbe, 0x4e, 0xbc, 0x31, 0x06, 0x54, 0x7e, 0x79,
0xc6, 0xcb, 0x93, 0x31, 0x05, 0xd9, 0x07, 0xb4, 0xc8, 0xc6,
0x04, 0x43, 0xe9, 0x7a, 0x15, 0x46, 0x94, 0xba, 0xb5, 0xed,
0xfc, 0x78, 0x1a, 0x43, 0x86, 0x75, 0xb9, 0xde, 0x6e, 0xd0,
0x3c, 0x77, 0xf5, 0x14, 0x58, 0xea, 0xb6, 0x1c, 0xa2, 0xe8,
0x0a, 0xc0, 0x2c, 0xc8, 0xc0, 0x37, 0xd8, 0xfb, 0x3c, 0xf1,
0x29, 0xd7, 0x10, 0x7f, 0x61, 0x8d, 0x66, 0x03, 0x2c, 0xc0,
0x22, 0x38, 0xa2, 0x11, 0xf7, 0x8b, 0xfa, 0x44, 0xe7, 0xc1,
0xbb, 0xcf, 0xcc, 0x62, 0x77, 0x71, 0xc1, 0x88, 0xd1, 0xb3,
0x71, 0x3c, 0xe5, 0xe7, 0x5c, 0xd2, 0x32, 0x5a, 0x0a, 0x2b,
0xa0, 0x82, 0x68, 0xca, 0xd1, 0x3b, 0x27, 0xd9, 0x76, 0x96,
0xef, 0x67, 0x8b, 0x59, 0x2d, 0x0a, 0xc8, 0x0a, 0xd1, 0xba,
0xcb, 0x4a, 0x1b, 0xa7, 0x5b, 0xea, 0x8c, 0x47, 0x7f, 0x39,
0xfc, 0x32, 0xc2, 0xaa, 0x20, 0xf3, 0x52, 0xbb, 0x0d, 0xa1,
0xc4, 0x9b, 0x7d, 0x39, 0x27, 0xbc, 0xd9, 0xdf, 0xaf, 0x22,
0x92, 0x37, 0x08, 0x1d, 0x5f, 0xa0, 0x89, 0x24, 0xfe, 0xfd,
0x92, 0x3f, 0xf0, 0xac, 0x6b, 0xaa, 0xd6, 0x86, 0x4b, 0x7c,
0x10, 0xdc, 0x73, 0x37, 0x9a, 0x5e, 0xbd, 0x9e, 0x46, 0x78,
0xa0, 0xc2, 0x65, 0x17, 0x65, 0x6e, 0x8e, 0x51, 0xfc, 0xa2,
0xa5, 0x1a, 0x33, 0xfb, 0x2c, 0xdd, 0x5d, 0x76, 0xd1, 0x26,
0x74, 0xc2, 0x40, 0xba, 0x9a, 0x48, 0x93, 0xc1, 0xaf, 0x69,
0xb8, 0xf2, 0xc4, 0xad, 0xf3, 0x7c, 0x4a, 0x47, 0x55, 0x1e,
0xb2, 0x00, 0x6a, 0x73, 0x2f, 0x6b, 0x3b, 0x2f, 0x33, 0x8c,
0x07, 0x8e, 0xde, 0x33, 0x94, 0x6d, 0xfe, 0x4a, 0x55, 0xbf,
0x64, 0x4d, 0x3b, 0x98, 0x84, 0x86, 0x93, 0xad, 0xa1, 0xfc,
0xb6, 0xfc, 0x16, 0xca, 0xc3, 0x39, 0xee, 0x65, 0xc2, 0x4d,
0xc6, 0x4b, 0x0a, 0xe9, 0x20, 0x05, 0x35, 0x4a, 0xf0, 0x0a,
0xde, 0x71, 0xe6, 0xc5, 0xe2, 0xef, 0xd8, 0x5c, 0x46, 0x13,
0x1d, 0x94, 0x8f, 0xf1, 0x40, 0x96, 0xb0, 0xf0, 0x6a, 0x41,
0xd8, 0x3c, 0x85, 0x22, 0xf3, 0x0b, 0xeb, 0x4e, 0xaa, 0xf4,
0xa6, 0xf9, 0x08, 0xfe, 0x2a, 0x6e, 0xe7, 0x54, 0xc8, 0x96",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5126,TLS 15+,95,415,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",414,-1,"
static uint32_t draft13_test_vn = 0xff00000d;",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5127,TLS 15+,95,416,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static picoquic_connection_id_t draft13_test_cnx_id = {
{ 0x06, 0xb8, 0x58, 0xec, 0x6f, 0x80, 0x45, 0x2b }, 8 };",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5128,TLS 15+,95,417,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_salt[] = {
0x9c, 0x10, 0x8f, 0x98, 0x52, 0x0a, 0x5c, 0x5c, 0x32, 0x96,
0x8e, 0x95, 0x0e, 0x8a, 0x2c, 0x5f, 0xe0, 0x6d, 0x6c, 0x38",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5129,TLS 15+,95,418,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_server_initial_secret[] = {
0x7e, 0x0a, 0xba, 0x2c, 0x4b, 0x97, 0x42, 0xd0, 0xd1, 0x30,
0xbc, 0x73, 0x18, 0x62, 0x2a, 0xd3, 0xb4, 0x4a, 0xca, 0x1f,
0x09, 0xab, 0xb1, 0x9b, 0x3f, 0x39, 0x4c, 0xd7, 0xe2, 0x0f,
0x4b, 0xe0",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5130,TLS 15+,95,419,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_server_key[] = {
0x26, 0x08, 0x0e, 0x60, 0xd2, 0x88, 0xdb, 0x7d, 0xf8, 0x16,
0xa1, 0xcb, 0x0b, 0xc6, 0xc7, 0xf4",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5131,TLS 15+,95,420,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_server_iv[] = {
0xb9, 0xfd, 0xc5, 0xb4, 0x48, 0xaf, 0x3e, 0x02, 0x34, 0x22,
0x44, 0x3b",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5132,TLS 15+,95,421,"InformationProviding,ExtensionOfPrevious,Answer",,-1,"
static uint8_t draft13_test_server_pn[] = {
0x00, 0xba, 0xbb, 0xe1, 0xbe, 0x0f, 0x0c, 0x66, 0x18, 0x18,
0x8b, 0x4f, 0xcc, 0xa5, 0x7a, 0x96",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5133,TLS 15+,95,422,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_client_initial_secret[] = {
0x82, 0xa7, 0x35, 0x72, 0xe7, 0xcb, 0x89, 0x52, 0x3b, 0x68,
0xc3, 0x9e, 0xaa, 0x83, 0x25, 0x40, 0x4f, 0x86, 0x49, 0x8c,
0x8e, 0x24, 0x37, 0xdf, 0xdc, 0xe1, 0x0f, 0x9c, 0x34, 0x28,
0x1a, 0x3d",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5134,TLS 15+,95,423,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_client_key[] = {
0xa7, 0x99, 0x43, 0x56, 0x6c, 0x41, 0x34, 0x2f, 0x2b, 0xc3,
0xde, 0x6b, 0x7c, 0x15, 0x39, 0xdf",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5135,TLS 15+,95,424,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_client_iv[] = {
0x84, 0xeb, 0x95, 0x4f, 0xfe, 0x16, 0x1c, 0x38, 0x75, 0x91,
0x9f, 0x5f",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5136,TLS 15+,95,425,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
static uint8_t draft13_test_client_pn[] = {
0x5c, 0x0f, 0x64, 0x72, 0xa1, 0x56, 0x58, 0x04, 0x7a, 0x3c,
0xc1, 0xf1, 0x54, 0x78, 0xdc, 0xf4",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5137,TLS 15+,95,426,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#issuecomment-413103796",<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5138,TLS 15+,95,427,"InformationProviding,InformationProviding,ProposeAction",,-1,Christian Huitema  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c413103796@github.com>,notifications@github.com,0.0,0,4,2018-08-14 23:13:05
5139,TLS 15+,95,435,InformationProviding,,-1,Martin Thomson  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c413123113@github.com>,notifications@github.com,0.0,0,4,2018-08-15 00:58:10
5140,TLS 15+,95,447,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",437,-1,"
Unless we change the salt or the algorithm of course. But then if we do that we know that we have to change the whole test vector no matter what.",<quicwg/base-drafts/pull/1573/c413425717@github.com>,notifications@github.com,0.0,0,4,2018-08-15 21:54:44
5141,TLS 15+,95,448,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",447,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#issuecomment-413425717",<quicwg/base-drafts/pull/1573/c413425717@github.com>,notifications@github.com,0.0,0,4,2018-08-15 21:54:44
5142,TLS 15+,95,449,"InformationProviding,InformationProviding,ProposeAction",,-1,Christian Huitema  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c413425717@github.com>,notifications@github.com,0.0,0,4,2018-08-15 21:54:44
5143,TLS 15+,95,461,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",451,-1,"
Whatever we build, the example needs to be rebuilt as we update things (like the fixed salt).",<quicwg/base-drafts/pull/1573/c413427942@github.com>,notifications@github.com,0.0,0,4,2018-08-15 22:12:44
5144,TLS 15+,95,462,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",461,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#issuecomment-413427942",<quicwg/base-drafts/pull/1573/c413427942@github.com>,notifications@github.com,0.0,0,4,2018-08-15 22:12:44
5145,TLS 15+,95,463,"InformationProviding,InformationProviding,ProposeAction",,-1,Martin Thomson  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c413427942@github.com>,notifications@github.com,0.0,0,4,2018-08-15 22:12:44
5146,TLS 15+,95,473,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",465,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/pull/1573#issuecomment-413445488",<quicwg/base-drafts/pull/1573/c413445488@github.com>,notifications@github.com,0.0,0,4,2018-08-15 23:57:24
5147,TLS 15+,95,474,"InformationProviding,InformationProviding,ProposeAction",,-1,Kazuho Oku  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/c413445488@github.com>,notifications@github.com,0.0,0,4,2018-08-15 23:57:24
5148,TLS 15+,95,487,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",28,-1,Rui Paulo  <SIGNATURES AND QUOTES>,<quicwg/base-drafts/pull/1573/push/3066605040@github.com>,notifications@github.com,0.0,0,4,2018-11-20 19:11:58
5149,TLS 15+,95,488,"InformationProviding,InformationProviding,ProposeAction",,-1,"I'm aware they are about to change again, but at least this should be correct now for -15 drafts.  I can update these vectors once @martinthomson PR is merged.  (Looks like the consensus right now is to move to ""tls13 "" and to add a QUIC version in the context field.)",<quicwg/base-drafts/pull/1573/c440396497@github.com>,notifications@github.com,0.0,0,4,2018-11-20 19:14:51
5150,TLS 15+,95,496,"InformationProviding,InformationProviding,ProposeAction",,-1,@rpaulo pushed 1 commit.,<quicwg/base-drafts/pull/1573/push/3066615096@github.com>,notifications@github.com,0.0,0,4,2018-11-20 11:15:34
5151,TLS 15+,95,508,"InformationProviding,InformationProviding,NeutralResponse",25,-1,@rpaulo pushed 2 commits.,<quicwg/base-drafts/pull/1573/push/3162384379@github.com>,notifications@github.com,0.0,0,4,2018-12-24 12:28:58
5152,TLS 15+,96,0,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"IPv4 address exhaustion is a reality, and the truth is that IPv6 will not be deployed fast enough to be a complete solution. I have an idea where QUIC could be used to solve the IPv4 address exhaustion problem by using multiplexing middleboxes, with minimal modifications to QUIC.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5153,TLS 15+,96,41,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",0,-1,"
The idea is that the client is forced to provide a server name indication (SNI) if the user provided the client with a DNS name instead of a raw IP address. A NAT middlebox then shares one IPv4 address for multiple servers. The middlebox makes a decision based on the SNI which internal private IPv4 address will be used. The connection will always, reliably, be forwarded to the correct internal private IPv4 address, because the client would be required to always supply an SNI. Nested middleboxes may be supported by configuring SNI matches with wildcards (e.g. server1.department1.company.com will match *.department1.company.com at the company's middlebox and server1.department.company.com at the department's middlebox).",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5154,TLS 15+,96,42,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
The most common application of QUIC, web browsing, typically uses DNS names and not IP addresses.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5155,TLS 15+,96,43,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
The most important of the eventual applications of QUIC will probably be:
* E-mail: SMTP over QUIC
* Remote access: SSH over QUIC, VNC over QUIC, etc.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5156,TLS 15+,96,44,"InformationProviding,InformationProviding",,-1,"
For SMTP, the MX records already use DNS names instead of IP addresses. SSH and VNC are also typically executed with DNS names.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5157,TLS 15+,96,45,"InformationProviding,ProposeAction,InformationProviding,ContextSetting",,-1,"
The only change to QUIC would be to add the following to draft-ietf-quic-tls-12 somewhere:",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5158,TLS 15+,96,46,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
<blockquote>
A client MUST provide a server name indication, as defined in RFC6066, if the user of the client specified the connection destination as a DNS name instead of an IP address.
</blockquote>",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5159,TLS 15+,96,47,"InformationProviding,InformationProviding",,-1,"
I don't see any mention of SNI in QUIC specifications now, so I assume the proposed requirement is not a requirement now.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5160,TLS 15+,96,48,"InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
TLS 1.3 apparently allows servers to require a client to use SNI (https://tools.ietf.org/html/draft-ietf-tls-tls13-28), but I believe the same should be explicitly specified in the QUIC specifications as well. According to TLS 1.3 draft:",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5161,TLS 15+,96,49,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",48,-1,"
<blockquote>
Additionally, all implementations MUST support use of the
""server_name"" extension with applications capable of using it.
Servers MAY require clients to send a valid ""server_name"" extension.
Servers requiring this extension SHOULD respond to a ClientHello
lacking a ""server_name"" extension by terminating the connection with
a ""missing_extension"" alert.
</blockquote>",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5162,TLS 15+,96,50,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
I hope the same will be true with QUIC's use of TLS. Otherwise QUIC will be a step backwards from TLS+TCP that allows a transparent proxy to operate as a NAT multiplexing device offering access to multiple servers.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5163,TLS 15+,96,51,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
If QUIC makes SNI necessary, then QUIC will be much better than TCP+TLS because you don't need a full transparent proxy to do said multiplexing (as the first packet already contains the SNI).",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5164,TLS 15+,96,52,"InformationProviding,ProposeAction,InformationProviding",,-1,"
I hope this is the correct venue for this modification proposal (this is my first QUIC related issue). I'm not part of any QUIC mailing list, but if a mailing list is a more appropriate venue for discussing this modification, I could join.",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5165,TLS 15+,96,53,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456",<quicwg/base-drafts/issues/1456@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:40:25
5166,TLS 15+,96,55,"InformationProviding,Disagreement,ProposeAction,InformationProviding,NeutralResponse",52,-1,This probably should be discussed on the mailing list rather than as an issue.,<quicwg/base-drafts/issues/1456/398029983@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:57:03
5167,TLS 15+,96,63,"Question,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,Question",55,-1,"
Aren't there privacy concerns here? One could imagine a DNS like mapping from SNI to connection ID similar to a stateless retry, but where a SNI drives the retry. This could be a sort-of separate service external to QUIC.",<quicwg/base-drafts/issues/1456/398029983@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:57:03
5168,TLS 15+,96,64,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398029983",<quicwg/base-drafts/issues/1456/398029983@github.com>,notifications@github.com,0.0,0,4,2018-06-18 04:57:03
5169,TLS 15+,96,66,"Question,Question,InformationProviding,NeutralResponse",50,-1,Would a forward proxy approach help alleviate your concerns?,<quicwg/base-drafts/issues/1456/398041749@github.com>,notifications@github.com,0.0,0,4,2018-06-18 12:45:08
5170,TLS 15+,96,74,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",66,-1,"
@bemasc and I are putting together some ideas on how a User Agent could explicitly opt-in to passing non-TCP traffic via a proxy, in a similar way to how HTTP proxies work now. This takes place after secure session establishment.",<quicwg/base-drafts/issues/1456/398041749@github.com>,notifications@github.com,0.0,0,4,2018-06-18 12:45:08
5171,TLS 15+,96,75,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398041749",<quicwg/base-drafts/issues/1456/398041749@github.com>,notifications@github.com,0.0,0,4,2018-06-18 12:45:08
5172,TLS 15+,96,77,"InformationProviding,Disagreement,InformationProviding,Disagreement,NeutralResponse",,-1,A forward proxy is useful but it cannot safely operate at the cloud provider level load balancer because privacy is compromised.,<quicwg/base-drafts/issues/1456/398045612@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:00:00
5173,TLS 15+,96,83,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398045612",<quicwg/base-drafts/issues/1456/398045612@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:00:00
5174,TLS 15+,96,85,"InformationProviding,InformationProviding,NeutralResponse",,-1,I guess it depends where the exhaustion concerns are.,<quicwg/base-drafts/issues/1456/398053344@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:08
5175,TLS 15+,96,93,"InformationProviding,NeutralResponse,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",85,-1,"
A reverse proxy for the cloud case, i.e. a request router, is something I'm familiar with. Some have scalability concerns with these.",<quicwg/base-drafts/issues/1456/398053344@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:08
5176,TLS 15+,96,94,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398053344",<quicwg/base-drafts/issues/1456/398053344@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:27:08
5177,TLS 15+,96,96,"InformationProviding,InformationProviding,NeutralResponse",51,-1,"FWIW, the QUIC-HTTP draft mandates the use of SNI. Quoting from [section 2.3](https://quicwg.org/base-drafts/draft-ietf-quic-http.html#rfc.section.2.3), ""The Server Name Indication (SNI) extension [RFC6066] MUST be included in the TLS handshake.""",<quicwg/base-drafts/issues/1456/398059647@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:47:25
5178,TLS 15+,96,104,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious",96,-1,"
Though I wonder if we might want to relax the wording in possibility of having SNI encryption, to something like what we see in [RFC 7540 section 9.2](https://tools.ietf.org/html/rfc7540#section-9.2).",<quicwg/base-drafts/issues/1456/398059647@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:47:25
5179,TLS 15+,96,105,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398059647",<quicwg/base-drafts/issues/1456/398059647@github.com>,notifications@github.com,0.0,0,4,2018-06-18 06:47:25
5180,TLS 15+,96,107,"InformationProviding,InformationProviding,NeutralResponse",,-1,"As observed, we mandate use of SNI already (though we might want to soften this to allow encrypted SNI as @kazuho points out).  TLS doesn't mandate use of SNI, which is entirely appropriate for QUIC-the-transport.",<quicwg/base-drafts/issues/1456/398279115@github.com>,notifications@github.com,0.0,0,4,2018-06-18 22:31:57
5181,TLS 15+,96,113,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398279115",<quicwg/base-drafts/issues/1456/398279115@github.com>,notifications@github.com,0.0,0,4,2018-06-18 22:31:57
5182,TLS 15+,96,115,"InformationProviding,ProposeAction,InformationProviding,NeutralResponse",50,-1,"As noted already, QUIC inherits TLS's requirements of SNI (the SNI field is still part of TLS), and QUIC-HTTP inherits HTTP/2's requirements of SNI. @jmtilli : If you're concerned about encrypted SNI, that conversation ought to apply to HTTP over TCP as well, so I would take that to the httpbis working group. If you are concerned about other applications using QUIC without SNI, that'll probably be relevant when considering other applications mapped on QUIC, which we haven't done yet as a wg.",<quicwg/base-drafts/issues/1456/398504617@github.com>,notifications@github.com,0.0,0,4,2018-06-19 18:46:07
5183,TLS 15+,96,121,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398504617",<quicwg/base-drafts/issues/1456/398504617@github.com>,notifications@github.com,0.0,0,4,2018-06-19 18:46:07
5184,TLS 15+,96,123,"InformationProviding,ProposeAction,InformationProviding,Agreement,ProposeAction",,-1,"Ok, perhaps this issue can be closed then, if QUIC inherits the requirement of TLS. I was fearing that QUIC might not adopt all of TLS, as QUIC is very different from TCP and not all of TLS might necessarily apply.",<quicwg/base-drafts/issues/1456/398745630@github.com>,notifications@github.com,0.0,0,4,2018-06-20 06:20:15
5185,TLS 15+,96,129,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#issuecomment-398745630",<quicwg/base-drafts/issues/1456/398745630@github.com>,notifications@github.com,0.0,0,4,2018-06-20 06:20:15
5186,TLS 15+,96,131,"InformationProviding,InformationProviding,NeutralResponse",,-1,Closed #1456.,<quicwg/base-drafts/issue/1456/issue_event/1691862761@github.com>,notifications@github.com,0.0,0,4,2018-06-20 18:03:32
5187,TLS 15+,96,137,"InformationProviding,InformationProviding",,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/1456#event-1691862761",<quicwg/base-drafts/issue/1456/issue_event/1691862761@github.com>,notifications@github.com,0.0,0,4,2018-06-20 18:03:32
5188,TLS 15+,97,34,"InformationProviding,ContextSetting,InformationProviding,ContextSetting",,-1,"
A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security of the IETF.",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5189,TLS 15+,97,35,"InformationProviding,ExtensionOfPrevious,InformationProviding",34,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-16.txt
Pages           : 117
Date            : 2016-09-22",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5190,TLS 15+,97,36,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",35,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5191,TLS 15+,97,37,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5192,TLS 15+,97,38,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-16",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5193,TLS 15+,97,39,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",38,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-16",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5194,TLS 15+,97,40,"InformationProviding,ExtensionOfPrevious,Social,InformationProviding,ProposeAction,ExtensionOfPrevious",39,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5195,TLS 15+,97,41,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",40,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<147458750968.22498.15643953198967217108.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-09-22 16:38:29
5196,TLS 15+,98,49,"InformationProviding,ContextSetting,ProposeAction,InformationProviding,ContextSetting,Social",,-1,"
The HelloRetryRequest flow does not allow future extensions to
change the behavior/contents of the second ClientHello (without
Updating this document); it's unclear that there is a real need for
this limitation.",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5197,TLS 15+,98,50,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",49,-1,"
Section 4.1.4 notes that:",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5198,TLS 15+,98,51,"InformationProviding,ExtensionOfPrevious,UnderstandingNegative,InformationProviding,ExtensionOfPrevious",50,-1,"
Upon receipt of a HelloRetryRequest, the client MUST perform the
checks specified in Section 4.1.3 and then process the extensions,
starting with determining the version using ""supported_versions"".",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5199,TLS 15+,98,52,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",50,-1,"
But I think the ""checks specified"" are no longer very clear
(presumably they were more clear in a previous revision).  The main
checks that I see in Section 4.1.3 are to check for specific Random
values that are signalling sentinels, but by the time we are
processing as a HelloRetryRequest we already know exactly what the
""Random"" value is.  I'm not sure whether this text should be removed
or there are some other checks that I am failing to see.",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5200,TLS 15+,98,53,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",52,-1,"
We recommend that for external PSKs, clients SHOULD send an
obfuscated_ticket_age of zero, which allows observers to trivially
determine that a given PSK identity corresponds to an external PSK.
Is it necessary to leave this side channel open, instead letting the
server look up an external PSK identity and ignore the
obfuscated_ticket_age in that case?",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5201,TLS 15+,98,54,"InformationProviding,ExtensionOfPrevious,UnderstandingNegative,InformationSeeking,InformationProviding,ExtensionOfPrevious",53,-1,"
This document explicitly prohibits the use of the OpenPGP
certificate type (RFC 6091) with TLS 1.3 but implicitly allows its use for
previous versions of TLS.  Preumably that means someone(TM) needs to
remember to do a status change for RFC 6091 along with or before RFC
5246.",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5202,TLS 15+,98,55,"InformationProviding,ExtensionOfPrevious,ProposeAction,Question,InformationProviding,ExtensionOfPrevious",50,-1,"
-Benjamin",<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5203,TLS 15+,98,56,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",50,-1,Benjamin Kaduk  <SIGNATURES AND QUOTES>,<20180306213448.GG27850@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-06 15:34:48
5204,TLS 15+,99,158,"InformationProviding,ExtensionOfPrevious",278,-1,>  The other CoAP Header fields are Unprotected (Class U).,<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5205,TLS 15+,99,201,"InformationProviding,ExtensionOfPrevious",287,-1,>  1.  Request with kid = 25 and Partial IV = 5,<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5206,TLS 15+,99,211,"InformationProviding,ExtensionOfPrevious",289,-1,">  For requests, OSCORE provides weak absolute freshness as the only",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5207,TLS 15+,99,222,"InformationProviding,ExtensionOfPrevious",291,-1,">  o  """" (empty string) if the CoAP Object-Security option is empty, or",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5208,TLS 15+,99,231,"InformationProviding,ExtensionOfPrevious",293,-1,>[HTTP request -- Before client object security processing],<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5209,TLS 15+,99,257,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction",,-1,"
DISCUSS:

§5 contains the following uses of ""SHOULD NOT"":
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5210,TLS 15+,99,258,"InformationProviding,ExtensionOfPrevious,Social,ExtensionOfPrevious,ProposeAction",257,-1,">     *  The 'Partial IV' parameter.  The value is set to the Sender
>        Sequence Number.  All leading zeroes SHALL be removed when
>        encoding the Partial IV.  The value 0 encodes to the byte
>        string 0x00.  This parameter SHALL be present in requests.  In
>        case of Observe (Section 4.2.3.4) the Partial IV SHALL be
>        present in responses, and otherwise the Partial IV SHOULD NOT
>        be present in responses.  (A non-Observe example where the
>        Partial IV is included in a response is provided in
>        Section 7.5.2.)
>     *  The 'kid' parameter.  The value is set to the Sender ID.  This
>        parameter SHALL be present in requests and SHOULD NOT be
>        present in responses.  An example where the Sender ID is
>        included in a response is the extension of OSCORE to group
>        communication [I-D.tiloca-core-multicast-oscoap].",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5211,TLS 15+,99,259,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",258,-1,"
As far as I can tell, both ""SHOULD NOT"" instances describe behavior that is
unnecessary but benign. This usage is inconsistent with the definition of
""SHOULD NOT"" in RFC 2119:

4. SHOULD NOT   This phrase, or the phrase ""NOT RECOMMENDED"" mean that
there may exist valid reasons in particular circumstances when the
particular behavior is acceptable or even useful, but the full
implications should be understood and the case carefully weighed
before implementing any behavior described with this label.

If the implications are simply ""this is unnecessary but benign,"" then
implementors have no real implications to weigh, and the described behavior
doesn't rise to the level of ""SHOULD NOT"". If the implications are stronger
than that, then *this* document doesn't contain enough information for
implementors to perform such an evaluation.

In the former case, you can clear this discuss by changing ""SHOULD NOT"" to ""will
not typically"". In the latter case, you can clear this discuss by adding enough
information for implementors to be able to make an educated weighing of
implications. I'm also open to other proposals that remedy this use of 2119
language.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5212,TLS 15+,99,260,"ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",259,-1,"
COMMENT:

I support EKR's DISCUSS.

Martin Thompson raises a number of fairly important points in his review (see
<https://mailarchive.ietf.org/arch/msg/ietf/xtYOveSgAf32EoHVOV_E08brN54>). I
recognize that many of these are fundamental to the design in the document. It
is still worthwhile thinking through them and trying to suss out whether a
redesign by the working group is warranted.

I do want to put a little more meat on Martin's assertion ""This doesn't appear
to have any supporting security analysis,"" as this was something I was going
to highlight myself (and this is related to EKR's DISCUSS as well). Given that
this document seems to be putting together security primitives in a de novo
fashion, I would expect to see something equivalent to draft-ietf-tls-tls13's
Appendix E.

Specific comments follow.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5213,TLS 15+,99,261,"InformationProviding,ExtensionOfPrevious",260,-1,"
§1:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5214,TLS 15+,99,262,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ExtensionOfPrevious",261,-1,">  ([RFC6347]) for security.  CoAP and HTTP proxies require (D)TLS to be
>  terminated at the proxy",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5215,TLS 15+,99,263,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,StateDecision,InformationProviding,Agreement,ContextSetting,ProposeAction",258,-1,"
Presumably, this means ""CoAP-to-HTTP proxies""? Otherwise, the assertion is
wrong: HTTP proxies do not terminate TLS connections.

§1:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5216,TLS 15+,99,264,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,">  An implementation supporting this specification MAY only implement
>  the client part, MAY only implement the server part, or MAY only
>  implement one of the proxy parts",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5217,TLS 15+,99,265,"InformationProviding,ExtensionOfPrevious",264,-1,"
Replace ""MAY only implement"" with ""MAY implement only"" (in three places)
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5218,TLS 15+,99,266,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",265,-1,"
§1.1:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5219,TLS 15+,99,267,"InformationProviding,ExtensionOfPrevious",266,-1,">  The key words ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"",
>  ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this
>  document are to be interpreted as described in [RFC2119].  These
>  words may also appear in this document in lowercase, absent their
>  normative meanings.",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5220,TLS 15+,99,268,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",267,-1,"
This is almost, but not quite, the RFC 8174 boilerplate. Please fix it to match
RFC 8174.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5221,TLS 15+,99,269,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
§2:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5222,TLS 15+,99,270,"InformationProviding,ExtensionOfPrevious",269,-1,">  | No. | C | U | N | R | Name            | Format | Length | Default |
>  | TBD | x |   |   |   | Object-Security |  (*)   | 0-255  | (none)  |
>      C = Critical,   U = Unsafe,   N = NoCacheKey,   R = Repeatable
>      (*) See below.
>                  Figure 3: The Object-Security Option",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5223,TLS 15+,99,271,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,Disagreement,ProposeAction",270,-1,"
I get the impression that this is supposed to be extending a table that already
exists somewhere. This document should say which table.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5224,TLS 15+,99,272,"ExtensionOfPrevious,ContextSetting",263,-1,"
§4.1:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5225,TLS 15+,99,273,"InformationProviding,ExtensionOfPrevious",272,-1,">  The CoAP Payload, if present in the original CoAP message, SHALL be
>  encrypted and integrity protected and is thus an Inner message field.
>  See Figure 5.
>                      | Field            | E | U |
>                      | Payload          | x |   |
>                E = Encrypt and Integrity Protect (Inner)
>                U = Unprotected (Outer)
>                  Figure 5: Protection of CoAP Payload",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5226,TLS 15+,99,274,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",273,-1,"
The figure adds nothing to the prose; and is, in fact, harder to understand than
the prose. I would recommend removing it.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5227,TLS 15+,99,275,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
§4.3:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5228,TLS 15+,99,276,"InformationProviding,ExtensionOfPrevious",275,-1,"
Presumably this should say ""The other currently defined CoAP Header fields..."",
right?
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5229,TLS 15+,99,277,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,Disagreement,ProposeAction",276,-1,"
§5:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5230,TLS 15+,99,278,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,">  As specified in [RFC5116], plaintext denotes the data that is
>  encrypted and integrity protected...",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5231,TLS 15+,99,279,"ClarificationElicitation,ExtensionOfPrevious,Question,InformationProviding,ProposeAction",158,-1,"
Traditionally, data that is encrypted is called ""cipher text."" I gather from
context that this should probably say ""...the data that is to be encrypted..."",
right?
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5232,TLS 15+,99,280,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
§5.2:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5233,TLS 15+,99,281,"InformationProviding,ExtensionOfPrevious",280,-1,">  responses, which reduces the size.  For processing instructions (see
>  Section 8).",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5234,TLS 15+,99,282,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ClarificationElicitation,ProposeAction",281,-1,"
This final fragment can be turned into a sentence by removing the parentheses.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5235,TLS 15+,99,283,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
§6 and its subsections:

The use of a bespoke profile of COSE adds implementation complexity to
ostenstibly resource-limited device for what appears to be very little gain. In
the examples given, savings of 4 to 7 bytes are demonstrated, which seems to
hardly warrant the addition of this mechanism. These do not appear to be
degenerate cases, so I can't imagine that compression performance under
real-world conditions would be much better.  Was there an explicit discussion
in the working group regarding this complexity/wire-size trade-off?
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5236,TLS 15+,99,284,"InformationProviding,ExtensionOfPrevious",283,-1,"
§6.3.1:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5237,TLS 15+,99,285,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",284,-1,"
The base of the numbers above isn't indicated, and the reasonable reader may
take it to be 10. Please either change the above line to ""...kid = 0x25..."",
or change the hex encodings in the examples to h'19'.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5238,TLS 15+,99,286,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding",263,-1,"
§7.3:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5239,TLS 15+,99,287,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
The meaning of ""weak absolute freshness"" doesn't appear to be given anywhere,
and is not evident by combining the normal meanings of those three words. Please
describe the property of ""weak absolute freshness"" in more detail (or, if this
is a term of art defined elsewhere, a citation would be sufficient).
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5240,TLS 15+,99,288,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction",201,-1,"
§10.3:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5241,TLS 15+,99,289,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
Which is it? Is this an empty string on the wire, or is it a string consisting
of """" (that is, the two-byte sequence 0x22 0x22)?
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5242,TLS 15+,99,290,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction",211,-1,"
§10.3:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5243,TLS 15+,99,291,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
This line should be indented to match the rest of the example.
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5244,TLS 15+,99,292,"Question,ClarificationElicitation,ExtensionOfPrevious,Question",222,-1,"
§10.3:
",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5245,TLS 15+,99,293,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,">  o  the value of the CoAP Object-Security option (Section 6.1) in
>     base64url encoding (Section 5 of [RFC4648]) without padding (see
>     [RFC7515] Appendix C for implementation notes for this encoding).",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5246,TLS 15+,99,294,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",231,-1,">    POST http://proxy.url/hc/?target_uri=coap://server.url/ HTTP/1.1
>    Content-Type: application/oscore
>    CoAP-Object-Security: 09 25",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5247,TLS 15+,99,295,"ExtensionOfPrevious,ContextSetting,InformationProviding",263,-1,"
The first block of text defines CoAP-Object-Security as a Base64 string. The
second shows an example string of hex digits. Please either redefine the
syntax in the first block, or show a matching syntax in the examples.

This comment applies to §10.4 also.",<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5248,TLS 15+,99,296,"InformationProviding,ExtensionOfPrevious",295,-1,Adam Roach  <SIGNATURES AND QUOTES>,<152049472037.21279.9230006306360711031.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-03-07 23:38:40
5249,TLS 15+,100,0,"ContextSetting,InformationProviding",,-1,In section 4.2.3 the definitions oaf the signature scheme are thus:,<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5250,TLS 15+,100,32,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",0,-1,"
} SignatureScheme;",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5251,TLS 15+,100,33,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",32,-1,"
This indicates that if the first byte is 254 (0xFE) or 255 (0xFF), that is is for private use. However, in section 11, a new registry is defined for signature schemes:",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5252,TLS 15+,100,34,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
-  TLS SignatureScheme Registry: Values with the first byte in the
range 0-254 (decimal) are assigned via Specification Required
[RFC5226<https://tools.ietf.org/html/rfc5226>].  Values with the first byte 255 (decimal) are reserved
for Private Use [RFC5226<https://tools.ietf.org/html/rfc5226>].",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5253,TLS 15+,100,35,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",34,-1,"
Indicates that values with the first byte of 254 are reserved/assigned, and that private use is for values with a first byte of 255.
In addition, the value of 0xFFFF is listed twice in the SignatureScheme enumeration.",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5254,TLS 15+,100,36,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",35,-1,"
I can do a PR, but it needs to be decided wether 0xFE is reserved/assigned or private_use, and whether 0xFFFF has any special value.",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5255,TLS 15+,100,37,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
-Todd Short
// tshort@akamai.com<mailto:tshort@akamai.com>
// ""One if by land, two if by sea, three if by the Internet.""",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5256,TLS 15+,100,38,"InformationSeeking,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",37,-1,"Short, Todd  <SIGNATURES AND QUOTES>",<B57C3372-71DF-4A4E-AE80-DAEB308C6EB7@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:05:21
5257,TLS 15+,100,146,"InformationProviding,NeutralResponse,ProposeAction,InformationProviding,ProposeAction",91,-1,"Short, Todd  <SIGNATURES AND QUOTES>",<97CEA734-8BDF-42F2-A465-BC271B9F8DC2@akamai.com>,tshort@akamai.com,0.0,0,12,2017-07-05 17:45:04
5258,TLS 15+,100,147,"InformationProviding,InformationProviding",,-1,"On Wed, Jul 5, 2017 at 1:46 PM Short, Todd <tshort@akamai.com> wrote:",<CAF8qwaBUo5g6y6k7qDt0Q=5D3sJaWDDntZuHAsPHCr13hwje9A@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2017-07-05 17:53:36
5259,TLS 15+,101,0,Social,,-1,"Hey All,",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5260,TLS 15+,101,45,"InformationProviding,InformationProviding,ContextSetting",,-1,"
From implementation point of view AFAWK, [1], [2] does not explicitly
mention the  * cipher suites * to be used in NTS. [1] mentions the
following:",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5261,TLS 15+,101,46,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
** *The server MUST NOT include HMAC with a SHA-1 or weaker algorithms*
** *The server MUST include HMAC with SHA-256 or stronger algorithms *",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5262,TLS 15+,101,47,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction","45,46",-1,"
We believe that the NTS draft should be more specific/explicit about the
cipher suites that should be used. Both for authenticating timing requests
and for the KE.   This is a standard practice: TLS and DNSSEC both specify
their cipher suites in their drafts.  (For example,
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,
etc)",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5263,TLS 15+,101,48,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",47,-1,"
It is not a good idea to leave this up to implementors, because it
leads to interoperability issues (like those that have plagued IPsec [3]).",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5264,TLS 15+,101,49,"ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious",48,-1,"
For instance the language above says ""SHA-256 OR stronger"".  What if one
vendor decides to implement HMAC-SHA-256 and another HMAC-SHA3?  Both
implementations satisfy the spec but the implementations will not
interoperate.",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5265,TLS 15+,101,50,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious","48,49",-1,"
Section 8.1 of the TLS1.3 draft gives a good example of how this could be
done [4].   All ciphersuites that MUST or SHOULD or MAY be used are
specified.",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5266,TLS 15+,101,51,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious","49,50",-1,"
This is also a security issue. Various attacks on older versions of
protocols like TLS [5] resulted from the inclusion of weak crypto
primitives.  This has lead the community to drop several cipher suites in
TLS v 1.3 [6].",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5267,TLS 15+,101,52,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",51,-1,"
Since we are trying to build NTP security from scratch we should be wary
about what crypto we want to use!",<CAMbs7kvo80z0vVd5WvCkj876mEbUO8cu-Op6sYOGVxU9ykgFEg@mail.gmail.com>,aanchal4@bu.edu,0.0,0,24,2016-03-26 14:29:54
5268,TLS 15+,101,129,"Agreement,NeutralResponse,InformationProviding,Agreement,NeutralResponse,ProposeAction","45,52",52,"
We have to be careful here. I agree that at least some  cipher suites
should be specified as a minimal subset in the draft but we also need
flexibility as new ciphers come out and older ones are found to be
vunerable. Otherwise we will need to create new RFC's to update the RFC
for either of these scenarios. I'm sure that there are other
implementations that have run into this problem and we should see how
they handle it.
",<56F95A95.3000105@pdmconsulting.net>,mayer@pdmconsulting.net,0.0,0,15,2016-03-28 12:23:49
5269,TLS 15+,101,206,"Agreement,NeutralResponse,InformationProviding,Agreement,NeutralResponse,ProposeAction","45,52",52,"
We have to be careful here. I agree that at least some  cipher suites
should be specified as a minimal subset in the draft but we also need
flexibility as new ciphers come out and older ones are found to be
vunerable. Otherwise we will need to create new RFC's to update the RFC
for either of these scenarios. I'm sure that there are other
implementations that have run into this problem and we should see how
they handle it.
",<56F98E6B.1000805@ntp.org>,mayer@ntp.org,0.0,0,15,2016-03-28 16:04:59
5270,TLS 15+,101,247,"Question,InformationProviding,NeutralResponse,Question,InformationProviding,NeutralResponse,ProposeAction",52,129,"
We should pick a cipher suite. Absent a compelling reason for more,
let's just pick one (for now).

And we do need to provide for algorithm agility. Unfortunately, that
is much trickier than merely parameterizing ciphers - we also need to
understand the negotiation of cipher suites and prevent downgrade
attacks.  Here's some discussion on the topic:
https://tools.ietf.org/html/rfc7696

For good or ill, other negotiations (e.g. NTS version number) may also
provide opportunities for downgrade. Which means we may be also to
address multiple vulnerabilities at once.

One step toward addressing all of this might be to extend the ntp
client config file to include a bit for ""this name server is expected
to use NTS (version #blah)"".  Perhaps cipher suite info could be in
the same config file or in the server's certs?

Lastly, do not be afraid to roll a new RFC to introduce a new
algorithm. While it makes sense to have an IANA registry for cipher
suites, ""standards action"" might be a good choice of policy to add a
new entry into that registry.

-- Sam

ntpwg mailing list
ntpwg@lists.ntp.org
http://lists.ntp.org/listinfo/ntpwg",<alpine.BSF.2.20.1604060009220.47293@fledge.watson.org>,weiler@watson.org,0.0,0,3,2016-04-06 00:26:06
5271,TLS 15+,102,559,"ExtensionOfPrevious,ContextSetting",743,-1,> 6.  Security Token Validation,<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5272,TLS 15+,102,607,ExtensionOfPrevious,749,-1,> 7.  IANA Considerations,<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5273,TLS 15+,102,685,ContextSetting,,-1,"review comments on -tokbind-protocol-05 aka TBPROTO:
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5274,TLS 15+,102,686,"InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",685,-1,"
Substantive comments:

S1. need to migrate the referred_token_binding type and its IANA
registration over to -tokbind-https aka HTTPSTB. see..

Re: [Unbearable] -tokbind-protocol-04: verifying signature(s)
in TokenBindingMessage.TokenBinding?
<https://www.ietf.org/mail-archive/web/unbearable/current/msg00470.html>

As part of this, we may want to explicitly state that defining the
semantics of TokenBindingMessages containing more than one provided
TokenBinding, as well as allocating new TokenBindingType value(s), is left
to applications.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5275,TLS 15+,102,687,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",686,-1,"
S2. TBPROTO focuses on the server side binding TBIDs to ""security tokens"".
However, there are occasions in some protocols/apps where the client side
is obliged to bind objects to the TLS layer. See for example
<http://w3c.github.io/webauthn/#sec-client-data>. TBPROTO should more
clearly explain that either the client or server side may bind TBIDs into
objects (tokens, messages, whatever) and either side may be obliged to
validate such objects, depending on application use case(s).
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5276,TLS 15+,102,688,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction","686,687",-1,"
S3. It seems that TBPROTO intends to be a general purpose app-layer means
for generating and agreeing on TBIDs, i.e., it is not just for HTTP; it
seems to serve the purpose of mitigating the need for different app-layers
to re-invent such a mechanism on their own. In doing so, it arguably is
acting as general-purpose packaging of the TLS keying material exporter,
and insulating other app-layer designers from the vagaries described in
the last parag of the sec cons in RFC5705..

Designing a secure mechanism that uses exporters is not necessarily
straightforward. This document only provides the exporter mechanism,
but the problem of agreeing on the surrounding context and the
meaning of the information passed to and from the exporter remains.
Any new uses of the exporter mechanism should be subject to careful
review.

If so, this should be stated more explicitly in TBPROTO.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5277,TLS 15+,102,689,"Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious","686,688",-1,"
S5. Should TBPROTO have a ""Required Application Programming Interfaces""
section similar to that in RFC5929 [1] ?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5278,TLS 15+,102,690,"Question,InformationProviding,ExtensionOfPrevious,InformationSeeking,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","686,689",-1,"
S6a. How TBIDs are ""reset"" is not described. Presumably, this is
accomplished by the client allocating a new key pair for a server,
resigning EKM, and including the new values in the ""next""
TokenBindingMessage sent to the server, and servers need to be vigilant
about noticing new TBIDs and re-binding application security
tokens/messages as appropriate, yes?

S6b. Our Security AD verbally expressed to some of us (at IETF-94?) that
simply saying ""TBIDs can be reset by the user at any time"" is insufficient
guidance to app-layer designers regarding a privacy-preserving utilization
of TBPROTO. What else might be added? Perhaps suggestion(s) that the
app-layer periodically auto-reset TBIDs?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5279,TLS 15+,102,691,"Question,ExtensionOfPrevious,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting","686,690",-1,"
S7. Section 6 Security Token Validation specifies conditions (eg incorrect
TBID) upon which the server ""MUST discard the token"". Are there not a
range of application behaviors that might occur, e.g., terminating the
application session? Or, is this particular behavior defined in order to
accommodate resetting of TBIDs by the client-side whereupon there may be a
race condition before all the server-issued bound app sec tokens contain
the updated TBID? Is this behavior appropriate for all apps in all cases?
what if an incorrect bound TBID is being caused by a MITM?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5280,TLS 15+,102,692,"Question,ExtensionOfPrevious,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","686,691",-1,"
S8. Section 8.2 Security Token Replay is fairly light on details regarding
how an application layer can utilize TBPROTO to detect MITM attacks,
perhaps appropriately generalizing and including the 2nd parag from [2]
would help readers better understand how this would work?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5281,TLS 15+,102,693,"InformationProviding,ExtensionOfPrevious,InformationProviding,Disagreement,ExtensionOfPrevious,ProposeAction","686,692",-1,"
S9. I would not say ""TLS Token Binding IDs are never transmitted in clear
text.."" -- this could easily occur in an HTTP-based web app that
inadvertently leaks cookies, e.g. by retrieving some image over plain
http. addressing this implies adding sec cons wrt such risks, eg ""apps
need to take precautions to ensure bound sec tokens/messages are not
'leaked' over insecure connections such as can occur due to non-https
link(s) lurking in a web app, e.g., an image load. HTTP-based applications
should employ techniques such as HSTS and HPKP in order to guard against
such situations.""
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5282,TLS 15+,102,694,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","686,693",-1,"
S10. I would remove the triple-handshake admonition in section 4, and
perhaps the one in sec cons, but in any case add to sec cons that there
are important sec cons regarding the underlying TLS connection in
[I-D.ietf-tokbind-negotiation] that could mitigate the app-layer's
TB-based security benefits if they are not heeded.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5283,TLS 15+,102,695,"Question,ExtensionOfPrevious,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting","686,694",-1,"
S11. Regarding the design decision: TokenBindingType is not within
TokenBindingID -- it is within the enclosing TokenBinding because
TokenBindingIDs (TBIDs) may be conveyed in TBMSG as either provided_ or
some other app-layer-defined TBType. If the app-layer has defined
additional TBType(s), the server-side would want to remember each TBID's
type, yes?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5284,TLS 15+,102,696,"Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,ProposeAction","686,695",-1,"
S12. Perhaps spec should stipulate ""server must ignore TBTypes it does not
understand"" -- or not?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5285,TLS 15+,102,697,"ExtensionOfPrevious,InformationProviding",696,-1,"
[1] https://tools.ietf.org/html/rfc5929#section-7

[2] <https://tools.ietf.org/html/draft-ietf-tokbind-https-02#section-4.4>
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5286,TLS 15+,102,698,"Question,InformationProviding,ExtensionOfPrevious,Question,ExtensionOfPrevious,ContextSetting,ProposeAction","685,697",-1,"
Overall editorial issues/comments (in no particular order):

E1. the mechanics of verifying the signature(s) in a TokenBindingMessage
are not spec'd in detail -- experienced crypto folk may know what to do,
but others may not.

E2. ought to clearly delineate ""server processing model"" and ""client
processing model"". (e.g. see https://tools.ietf.org/html/rfc6797)

E3. section ""1. Introduction"" and section ""2. token binding protocol
overview"" are quite similar -- perhaps they could be combined?

E4. If section 3 and 4 are massaged per E2, section 5 becomes superfluous
(it seemed to in my experimenting).

E4. the security considerations section contains RFC2119 requirements
language -- some downstream reviews may frown on this.

E5. TBPROTO in and of itself does not ""prevent"" export and replay of app
security tokens -- rather it facilitates detection of such occurances.

E6. Terminology is fairly loose, e.g. terms such as ""token"", ""security
token"", ""bound token"", ""bound security token"" are not used as consistently
as they could be.

E7. Various spec portions could benefit from further wordsmithing --
suggestions are inline below...
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5287,TLS 15+,102,700,ContextSetting,,-1,">                  The Token Binding Protocol Version 1.0
>                      draft-ietf-tokbind-protocol-05",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5288,TLS 15+,102,701,"InformationProviding,ContextSetting",,-1,"> 1.  Introduction
>    Servers generate various security tokens (e.g.  HTTP cookies, OAuth
>    tokens) for applications to access protected resources.  Any party in
>    possession of such token gains access to the protected resource.
>    Attackers export bearer tokens from the user's machine, present them
>    to the servers, and impersonate authenticated users.  The idea of
>    Token Binding is to prevent such attacks by cryptographically binding
>    security tokens to the TLS layer.
>    A TLS Token Binding is established by the user agent generating a",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5289,TLS 15+,102,702,"ExtensionOfPrevious,ProposeAction",701,-1,"
s/the user agent/a client-side application (e.g., a user agent)/
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5290,TLS 15+,102,703,"ExtensionOfPrevious,ContextSetting",702,-1,">    private-public key pair (possibly within a secure hardware module,
>    such as TPM) per target server, and proving possession of the private
>    key on every TLS connection to the target server.  The proof of
>    possession involves signing the exported keying material [RFC5705]
>    for the TLS connection with the private key.  The corresponding
>    public key is included in the TLS Token Binding identifier structure
>    (described in the ""TLS Token Binding ID Format"" section of this
>    document).  TLS Token Bindings are long-lived, i.e. they encompass
>    multiple TLS connections and TLS sessions between a given client and
>    server.  To protect privacy, TLS Token Binding IDs are never
>    transmitted in clear text and can be reset by the user at any time,
>    e.g. when clearing browser cookies.
>    When issuing a security token to a client that supports TLS Token
>    Binding, a server includes the client's TLS Token Binding ID in the
>    token.  Later on, when a client presents a security token containing
>    a TLS Token Binding ID, the server makes sure the ID in the token
>    matches the ID of the TLS Token Binding established with the client.
>    In the case of a mismatch, the server discards the token.
>    In order to successfully export and replay a bound security token,
>    the attacker needs to also be able to export the client's private
>    key, which is hard to do in the case of the key generated in a secure
>    hardware module.
> 1.1.  Requirements Language
>    The key words ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"",
>    ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this
>    document are to be interpreted as described in [RFC2119].
> 2.  Token Binding Protocol Overview",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5291,TLS 15+,102,704,"ExtensionOfPrevious,Question,Question,InformationProviding,ProposeAction",703,-1,"
this section largely duplicates the Introduction -- could the intro be
trimmed way down and then this section effectively provides the underlying
details that are summarized in the Intro?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5292,TLS 15+,102,705,"ExtensionOfPrevious,ContextSetting",704,-1,">    The client and server use the Token Binding Negotiation TLS Extension
>    [I-D.ietf-tokbind-negotiation] to negotiate the Token Binding
>    protocol version and the parameters (signature algorithm, length) of
>    the Token Binding key.  This negotiation does not require additional
>    round-trips.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5293,TLS 15+,102,706,"Question,ExtensionOfPrevious,ClarificationElicitation",705,-1,"
wrt ""the parameters (signature algorithm, length)"" -- this is now
effectively referred to as ""key parameters"" yes?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5294,TLS 15+,102,707,"ClarificationElicitation,ExtensionOfPrevious,ContextSetting",706,-1,">    The Token Binding protocol consists of one message sent by the client
>    to the server, proving possession of one or more client-generated
>    asymmetric keys.  This message is only sent if the client and server
>    agree on the use of the Token Binding protocol and the key
>    parameters.  The Token Binding message is sent with the application
>    protocol data in TLS application_data records.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5295,TLS 15+,102,708,"Question,InformationProviding,ExtensionOfPrevious,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction",707,-1,"
wrt... ""The Token Binding message is sent with the application
protocol data in TLS application_data records""

...in other words, after Token Binding negotiation during TLS handshake
[I-D.ietf-tokbind-negotiation], the Token Binding msg is created by the
client and conveyed to the server in the app layer protocol which is
running over TLS within whose context the token binding ID was
established. Yes?

perhaps re-state.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5296,TLS 15+,102,709,"InformationProviding,ExtensionOfPrevious,ContextSetting",708,-1,">    A server receiving the Token Binding message verifies that the key
>    parameters in the message match the Token Binding parameters
>    negotiated via [I-D.ietf-tokbind-negotiation], and then validates the
>    signatures contained in the Token Binding message.  If either of
>    these checks fails, the server terminates the connection, otherwise
>    the TLS Token Binding is successfully established with the ID
>    contained in the Token Binding message.
>    When a server supporting the Token Binding protocol receives a bound
>    token, the server compares the TLS Token Binding ID in the security
>    token with the TLS Token Binding ID established with the client.  If
>    the bound token came from a TLS connection without a Token Binding,
>    or if the IDs don't match, the token is discarded.
>    This document defines the format of the Token Binding protocol
>    message, the process of establishing a TLS Token Binding, the format
>    of the Token Binding ID, and the process of validating a security
>    token.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5297,TLS 15+,102,710,"ExtensionOfPrevious,ProposeAction",709,-1,"
s/security token/bound security token/
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5298,TLS 15+,102,711,"InformationProviding,ExtensionOfPrevious,ContextSetting",710,-1,">            Token Binding Negotiation TLS Extension
>    [I-D.ietf-tokbind-negotiation] describes the negotiation of the Token
>    Binding protocol and key parameters.  Token Binding over HTTP
>    [I-D.ietf-tokbind-https] explains how the Token Binding message is
>    encapsulated within HTTP/1.1 [RFC7230] or HTTP/2 [RFC7540] messages.
>    [I-D.ietf-tokbind-https] also describes Token Binding between
>    multiple communicating parties: User Agent, Identity Provider and
>    Relying Party.
> 3.  Token Binding Protocol Message
>    The Token Binding message is sent by the client and proves possession
>    of one or more private keys held by the client.  This message MUST be
>    sent if the client and server successfully negotiated the use of the
>    Token Binding protocol via [I-D.ietf-tokbind-negotiation], and MUST
>    NOT be sent otherwise.  This message MUST be sent in the client's
>    first application protocol message.  This message MAY also be sent in
>    subsequent application protocol messages, proving possession of other
>    keys by the same client, to facilitate token binding between more
>    than two communicating parties.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5299,TLS 15+,102,712,"ExtensionOfPrevious,ProposeAction,ProposeAction",711,-1,"
suggest beginning new parag here..
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5300,TLS 15+,102,713,"ExtensionOfPrevious,ContextSetting",712,-1,">                                       Token Binding over HTTP
>    [I-D.ietf-tokbind-https] specifies the encapsulation of the Token
>    Binding message in the application protocol messages, and the
>    scenarios involving more than two communicating parties.  The Token
>    Binding message format is defined using TLS specification language:
> enum {
>     rsa2048_pkcs1.5(0), rsa2048_pss(1), ecdsap256(2), (255)
> } TokenBindingKeyParameters;",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5301,TLS 15+,102,714,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",713,-1,"
add comment on above:

/* imported from [I-D.ietf-tokbind-negotiation] */
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5302,TLS 15+,102,715,"InformationProviding,ContextSetting",,-1,"> struct {
>     opaque modulus<1..2^16-1>;
>     opaque publicexponent<1..2^8-1>;
> } RSAPublicKey;
> struct {
>     opaque point <1..2^8-1>;
> } ECPoint;
> enum {
>     provided_token_binding(0), referred_token_binding(1), (255)
> } TokenBindingType;
> struct {
>     TokenBindingKeyParameters key_parameters;
>     select (key_parameters) {
>         case rsa2048_pkcs1.5:
>         case rsa2048_pss:
>             RSAPublicKey rsapubkey;
>         case ecdsap256:
>             ECPoint point;",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5303,TLS 15+,102,716,"ExtensionOfPrevious,ProposeAction,ProposeAction",715,-1,"
missing a semi-colon, should be:
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5304,TLS 15+,102,717,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",716,-1,"> } TokenBindingID;
> enum {
>     (255)                       // No initial ExtensionType registrations
> } ExtensionType;",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5305,TLS 15+,102,718,"InformationProviding,InformationProviding,ProposeAction",,-1,"
comments in TLS presentation language are: /* . . . */
see https://tools.ietf.org/html/draft-ietf-tls-tls13#section-4.2
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5306,TLS 15+,102,719,"InformationProviding,ContextSetting",,-1,"> struct {
>     ExtensionType extension_type;
>     opaque extension_data<0..2^16-1>;
> } Extension;
> struct {
>     TokenBindingType tokenbinding_type;
>     TokenBindingID tokenbindingid;
>     opaque signature<0..2^16-1>;// Signature over the exported keying
>material value
>     Extension extensions<0..2^16-1>;
> } TokenBinding;
> struct {
>     TokenBinding tokenbindings<0..2^16-1>;
> } TokenBindingMessage;",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5307,TLS 15+,102,720,"Question,ClarificationElicitation,InformationProviding,ProposeAction",719,-1,"
is it legit for a TokenBindingMessage to be an empty sequence as implied
by the ""tokenbindings<0..2^16-1>"" declaration? no, it is not, see last
paragraph below in this section.

[this sort of inconsistency seems to also exist in RFC5246 so I am
doubting it is something to worry about.]
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5308,TLS 15+,102,721,"Question,ClarificationElicitation,ContextSetting,ProposeAction",,-1,"
The below paragraphs appear to be client-side processing rules, yes? I
suggest identifying them as such.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5309,TLS 15+,102,722,"InformationProviding,ExtensionOfPrevious",721,-1,">    The Token Binding message consists of a series of TokenBinding
>    structures containing the type of the token binding, the
>    TokenBindingID, a signature over the exported keying material (EKM)
>    value, optionally followed by Extension structures.
>    This document defines two token binding types: provided_token_binding
>    used to establish a Token Binding when connecting to a server, and
>    referred_token_binding used when requesting tokens to be presented to
>    a different server.  Token Binding over HTTP [I-D.ietf-tokbind-https]
>    describes Token Binding between multiple communicating parties: User
>    Agent, Identity Provider and Relying Party.  See also Section 7.1
>    When an rsa2048_pkcs1.5 or rsa2048_pss key is used,
>    TokenBinding.signature contains the signature generated using,
>    respectively, the RSASSA-PKCS1-v1_5 or RSASSA-PSS signature scheme
>    defined in [RFC3447].  RSAPublicKey.modulus and
>    RSAPublicKey.publicexponent contain the length-prefixed modulus and
>    exponent of the RSA public key represented in big-endian format.
>    When an ecdsap256 key is used, TokenBinding.signature contains a pair
>    of integers, R followed by S, as defined in [ANSI.X9-62.2005].  R and
>    S are encoded in big-endian format.  ECPoint.point contains the X
>    coordinate followed by the Y coordinate.  The X and Y coordinates are
>    unsigned integers encoded in big-endian format.  Future
>    specifications may define Token Binding keys using other elliptic
>    curves with their corresponding signature and point formats.
>    The EKM is obtained using the Keying Material Exporters for TLS
>    defined in [RFC5705], by supplying the following input values:
>    o  Label: The ASCII string ""EXPORTER-Token-Binding"" with no
>       terminating NUL.
>    o  Context value: NULL (no application context supplied).
>    o  Length: 32 bytes.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5310,TLS 15+,102,723,"Question,Question,ContextSetting,ProposeAction",,-1,"
the below 2 parags are essentially server-side processing rules -- fold
them into the next section and rename it ""server processing model""?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5311,TLS 15+,102,724,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",723,-1,">    An implementation MUST ignore any unknown extensions.  Initially, no
>    extension types are defined (see Section 7.2).  One of the possible
>    uses of extensions envisioned at the time of this writing is
>    attestation: cryptographic proof that allows the server to verify
>    that the Token Binding key is hardware-bound.  The definitions of
>    such Token Binding protocol extensions are outside the scope of this
>    specification.
>    At least one TokenBinding MUST be included in the Token Binding
>    message.  The signature algorithm and key length used in the
>    TokenBinding MUST match the parameters negotiated via
>    [I-D.ietf-tokbind-negotiation].  The client SHOULD generate and store
>    Token Binding keys in a secure manner that prevents key export.  In
>    order to prevent cooperating servers from linking user identities,
>    different keys SHOULD be used by the client for connections to
>    different servers,",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5312,TLS 15+,102,725,"ExtensionOfPrevious,ProposeAction",724,-1,"
s/cooperating servers/colluding servers/
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5313,TLS 15+,102,726,"ExtensionOfPrevious,ProposeAction,ContextSetting","724,725",-1,"
according to the token scoping rules of the",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5314,TLS 15+,102,727,"ExtensionOfPrevious,ContextSetting",726,-1,">    application protocol.
> 4.  Establishing a TLS Token Binding",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5315,TLS 15+,102,728,"ExtensionOfPrevious,ProposeAction",727,-1,"
s/Token Binding/Token Binding ID/
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5316,TLS 15+,102,729,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction","727,728",-1,"
this section is written from the perspective of the server side upon
receipt of an app layer msg containing a TokenBindingMessage, perhaps be
more explicit and have an intro sentence like..

Upon receipt by the server of a client's TokenBindingMessage via the
application layer protocol, the server performs these checks:
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5317,TLS 15+,102,730,"InformationProviding,ContextSetting",,-1,">    The triple handshake vulnerability in TLS 1.2 and older TLS versions
>    affects the security of the Token Binding protocol, as described in
>    the ""Security Considerations"" section below.  Therefore, the server
>    MUST NOT negotiate the use of the Token Binding protocol with these
>    TLS versions, unless the server also negotiates Extended Master
>    Secret [RFC7627] and Renegotiation Indication [RFC5746] TLS
>    extensions.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5318,TLS 15+,102,731,"Question,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",730,-1,"
the above admonition is TLS-specific and is already addressed in
[I-D.ietf-tokbind-negotiation] so remove it?
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5319,TLS 15+,102,732,"InformationProviding,ContextSetting",,-1,">    The server MUST terminate the connection if the use of the Token
>    Binding protocol was not negotiated, but the client sends the Token
>    Binding message.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5320,TLS 15+,102,733,"ExtensionOfPrevious,ProposeAction",732,-1,"
s/not negotiated/not negotiated at the TLS layer/
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5321,TLS 15+,102,734,"InformationProviding,ContextSetting",,-1,">                       If the Token Binding type is
>    ""provided_token_binding"", the server MUST verify that the signature
>    algorithm (including elliptic curve in the case of ECDSA) and key
>    length in the Token Binding message match those negotiated via
>    [I-D.ietf-tokbind-negotiation].  In the case of a mismatch, the
>    server MUST terminate the connection.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5322,TLS 15+,102,735,"ProposeAction,InformationProviding,ProposeAction",734,-1,"
suggest..

OLD:
the signature algorithm (including elliptic curve in the case of ECDSA)
and key length in the Token Binding message match those

NEW:
the key parameters value in the Token Binding object match that
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5323,TLS 15+,102,736,"InformationProviding,ContextSetting",,-1,">                                              As described in
>    [I-D.ietf-tokbind-https], Token Bindings of type
>    ""referred_token_binding"" may have different key parameters than those
>    negotiated via [I-D.ietf-tokbind-negotiation].",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5324,TLS 15+,102,737,"Question,ClarificationElicitation,InformationProviding,ProposeAction",736,-1,"
rather than ""negotiated via [I-D.ietf-tokbind-negotiation]"", you mean
""negotiated with this server."" -- yes ?

suggest:

Token Bindings of types other than ""provided_token_binding"" may have
different key parameters than those negotiated for the current provided
TLS Token Binding ID.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5325,TLS 15+,102,738,"InformationProviding,ContextSetting",,-1,">    If the Token Binding message does not contain at least one
>    TokenBinding structure, or the signature contained in a TokenBinding
>    structure is invalid, the server MUST terminate the connection.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5326,TLS 15+,102,739,"ProposeAction,ProposeAction",738,-1,"
make the next sentence a new parag:
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5327,TLS 15+,102,740,"ExtensionOfPrevious,ContextSetting",739,-1,">    Otherwise, the TLS Token Binding is successfully established and its
>    ID can be provided to the application for security token validation.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5328,TLS 15+,102,741,"InformationProviding,InformationProviding,ProposeAction",740,-1,"
suggested enhancement:

Otherwise, the Token Binding IDs for the token binding
context between this client and server are successfully
established. The TokenBindingID structure(s) are noted by
the client application, and they are extracted from the
TokenBindingMessage and noted by the server side
application. The application may then use the Token Binding
IDs for bound security token creation and validation (e.g., as in
[I-D.ietf-tokbind-https]), or other application uses as appropriate.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5329,TLS 15+,102,742,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",741,-1,"
given the above, it seems section 5 below seems superfluous to me:
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5330,TLS 15+,102,743,InformationProviding,,-1,"> 5.  TLS Token Binding ID Format
>    The ID of the TLS Token Binding established as a result of Token
>    Binding message processing is a binary representation of the
>    following structure:
>    struct {
>        TokenBindingKeyParameters key_parameters;
>        select (key_parameters) {
>            case rsa2048_pkcs1.5:
>            case rsa2048_pss:
>                RSAPublicKey rsapubkey;
>            case ecdsap256:
>                ECPoint point;
>    } TokenBindingID;
>    TokenBindingID contains the key parameters negotiated via
>    [I-D.ietf-tokbind-negotiation].  TLS Token Binding ID can be obtained
>    from the TokenBinding structure described in the ""Token Binding
>    Protocol Message"" section of this document by discarding the token
>    binding type, signature and extensions.  TLS Token Binding ID will be
>    available at the application layer and used by the server to generate
>    and verify bound tokens.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5331,TLS 15+,102,744,"ExtensionOfPrevious,ProposeAction",559,-1,"
Security Token Binding and Validation
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5332,TLS 15+,102,745,"InformationProviding,ExtensionOfPrevious,ContextSetting",744,-1,">    Security tokens can be bound to the TLS layer either by embedding the
>    Token Binding ID in the token, or by maintaining a database mapping
>    tokens to Token Binding IDs.  The specific method of generating bound
>    security tokens is application-defined and beyond the scope of this
>    document.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5333,TLS 15+,102,746,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",745,-1,"
suggested rewrite:

In general, application layer security tokens are bound to the
underlying TLS connection by either embedding the connection's
TokenBindingID within the security token, or by the application
maintaining a mapping of security tokens to TokenBindingIDs. The
specific method of binding application security tokens to underlying
TLS connection(s) is application-defined and beyond the scope of this
specification.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5334,TLS 15+,102,747,"InformationProviding,ContextSetting",,-1,">    Upon receipt of a security token, the server attempts to retrieve TLS
>    Token Binding ID information from the token and from the TLS
>    connection with the client.  Application-provided policy determines
>    whether to honor non-bound (bearer) tokens.  If the token is bound
>    and a TLS Token Binding has not been established for the client
>    connection, the server MUST discard the token.  If the TLS Token
>    Binding ID for the token does not match the TLS Token Binding ID
>    established for the client connection, the server MUST discard the
>    token.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5335,TLS 15+,102,748,"ExtensionOfPrevious,ProposeAction",747,-1,"
Upon receipt of a bound security token, the server-side application
extracts the TokenBindingID(s) from the bound security token and from
the TLS connection with the client. Application-specific policy
determines whether to honor unbound (i.e., bearer) security tokens.
If the security token is bound and a Token Binding has not been
established for the client connection, the server MUST discard the
security token. If the TokenBindingID within the token does not match
the TokenBindingID established for the client connection, the server
MUST discard the token.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5336,TLS 15+,102,749,"Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,ProposeAction",748,-1,"
though: what's the rationale for only discarding tokens and not doing
anything further? see S7 above.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5337,TLS 15+,102,750,"ExtensionOfPrevious,InformationProviding,ContextSetting",607,-1,"> 8.  Security Considerations
> 8.1.  Security Token Replay
>    The goal of the Token Binding protocol is to prevent attackers from
>    exporting and replaying security tokens, thereby impersonating
>    legitimate users and gaining access to protected resources.  Bound
>    tokens can still be replayed by the malware present in the User
>    Agent.  In order to export the token to another machine and
>    successfully replay it, the attacker also needs to export the
>    corresponding private key.  Token Binding private keys are therefore
>    high-value assets and SHOULD be strongly protected, ideally by
>    generating them in a hardware security module that prevents key
>    export.
>    The manner in which a token is bound to the TLS layer is application-
>    defined and beyond the scope of this document.  However, the
>    resulting bound token needs to be integrity-protected, so that an
>    attacker cannot remove the binding or substitute a Token Binding ID
>    of their choice without detection.
> 8.2.  Downgrade Attacks
>    The Token Binding protocol is only used when negotiated via
>    [I-D.ietf-tokbind-negotiation] within the TLS handshake.  TLS
>    prevents active attackers from modifying the messages of the TLS
>    handshake, therefore it is not possible for the attacker to remove or
>    modify the Token Binding Negotiation TLS Extension used to negotiate
>    the Token Binding protocol and key parameters.  The signature
>    algorithm and key length used in the TokenBinding of type
>    ""provided_token_binding"" MUST match the parameters negotiated via
>    [I-D.ietf-tokbind-negotiation].",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5338,TLS 15+,102,751,"ProposeAction,InformationProviding,ProposeAction",,-1,"
suggest:

TLS prevents active attackers from modifying the messages of the TLS
handshake, therefore it is not possible for the attacker to remove or
modify the Token Binding Negotiation TLS Extension used to negotiate
the Token Binding protocol version and key parameters. The key
parameters used in TokenBindingMessage.TokenBinding structures of type
""provided_token_binding"" MUST match the key parameters negotiated via
[I-D.ietf-tokbind-negotiation].
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5339,TLS 15+,102,752,"InformationProviding,ProposeAction,ContextSetting",,-1,"> 8.3.  Privacy Considerations
>    The Token Binding protocol uses persistent, long-lived TLS Token
>    Binding IDs.  To protect privacy, TLS Token Binding IDs are never
>    transmitted in clear text and can be reset by the user at any time,
>    e.g. when clearing browser cookies.  Some applications offer a
>    special privacy mode where they don't store or use tokens supplied by
>    the server, e.g.  ""in private"" browsing.  When operating in this
>    special privacy mode, applications SHOULD use newly generated Token
>    Binding keys and delete them when exiting this mode, or else SHOULD
>    NOT negotiate Token Binding at all.
>    In order to prevent cooperating servers from linking user identities,
>    different keys SHOULD be used by the client for connections to
>    different servers, according to the token scoping rules of the
>    application protocol.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5340,TLS 15+,102,753,"ExtensionOfPrevious,InformationProviding,ProposeAction",752,-1,"
the above admonition (paragraph) should be up above where generation of
the token binding key pair is stipulated.
",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5341,TLS 15+,102,754,InformationProviding,,-1,">    A server can use tokens and Token Binding IDs to track clients.
>    Client applications that automatically limit the lifetime of tokens
>    to maintain user privacy SHOULD apply the same validity time limits
>    to Token Binding keys.",<56FCA08D.3010407@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-03-30 20:59:09
5342,TLS 15+,102,756,Social,,-1,"Hi Jeff,",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5343,TLS 15+,102,1385,"Thanking,Thanking",,-1,"
Thanks for the review.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5344,TLS 15+,102,1386,"NeutralResponse,NeutralResponse,StateDecision",686,-1,"
S1. If Dirk is OK with adding referred_token_binding type and its IANA registration to HTTPSTB, then when it's done, I will remove from TBPROTO. Although the need for referred_token_binding is general enough that I would be fine keeping it in TBPROTO.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5345,TLS 15+,102,1387,"ClarificationElicitation,Question,ClarificationElicitation",687,-1,"
S2. What is the use case? A client generating its own token and binding it to the client's TB key?",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5346,TLS 15+,102,1388,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",688,-1,"
S3. TBPROTO already describes the specific parameters of the TLS exporter, including the context, per RFC5705, see TBPROTO section 3.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5347,TLS 15+,102,1389,"NeutralResponse,Answer,Disagreement",689,-1,"
S5. Token Binding is a protocol; I don't see a need to describe APIs.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5348,TLS 15+,102,1390,"Answer,InformationProviding,Answer,StateDecision",690,-1,"
S6a. ""Reset"" means ""deleted"" in this case, perhaps it will be more clear if I use the latter term. Servers simply need to validate the binding: either the token is acceptable, or not. If not, client auth is re-done and a new bound token is generated. This is a flow that today's Web apps support.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5349,TLS 15+,102,1391,"NeutralResponse,InformationProviding,Answer",690,-1,"
S6b. TBPROTO has a new privacy consideration for this:
"" A server can use tokens and Token Binding IDs to track clients.
Client applications that automatically limit the lifetime of tokens
to maintain user privacy SHOULD apply the same validity time limits
to Token Binding keys.""",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5350,TLS 15+,102,1392,"NeutralResponse,InformationProviding,Answer",691,-1,"
S7. Servers handle invalid tokens today; TBPROTO describes new cases where a bound token must be considered invalid. At least in our deployment experience so far, TB validation failures are auto-handled by the existing application logic with no change.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5351,TLS 15+,102,1393,"NeutralResponse,InformationSeeking,Answer,ProposeAction",692,-1,"
S8. Pull request will be appreciated:).",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5352,TLS 15+,102,1394,"Question,Question,NeutralResponse,ProposeAction",693,-1,"
S9. How about ""Token Binding IDs MUST never be transmitted in clear text""?",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5353,TLS 15+,102,1395,"NeutralResponse,Disagreement,ContextSetting,StateDecision",694,-1,"
S10. We've discussed this before and I would prefer to keep the EMS mantra:). If more folks push for this, I'll make the change.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5354,TLS 15+,102,1396,"NeutralResponse,InformationProviding,Answer","694,695",-1,"
S11. TB type was removed from TB ID because it's contextual: the same TB is ""provided"" to the RP and ""referred"" to the IDP. Now if the IDP includes this ""referred"" TB ID in the token, the RP will see that the first byte does not match. At least in our implementation, this change reduces the number of SW components that need to understand the structure of TB IDs.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5355,TLS 15+,102,1397,"Answer,NeutralResponse,InformationSeeking,Answer,Agreement,ContextSetting,ProposeAction,StateDecision",696,-1,"
S12. I think so, at least I don't see a reason why we would not do this. I did not make this change in -05, because I'd like to give folks time to think about this and speak up if they see a problem.",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5356,TLS 15+,102,1398,"InformationProviding,InformationSeeking,ContextSetting,ProposeAction",698,-1,"
Regarding the editorial comments, but I'd appreciate pull requests:).",<BLUPR03MB1396F3A551D2992653B753938C9A0@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-04-01 00:16:49
5357,TLS 15+,103,25,"InformationProviding,InformationProviding",,-1,"PR: https://github.com/tlswg/tls13-spec/pull/155
Target merge date: 3/21",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5358,TLS 15+,103,26,"ExtensionOfPrevious,ContextSetting",25,-1,"
Currently:",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5359,TLS 15+,103,27,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",26,-1,"
- AES-GCM uses a partially explicit nonce
- The ChaCha20 draft uses the sequence number as the nonce.",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5360,TLS 15+,103,28,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",27,-1,"
As Stephen Kent has observed, the idea behind the explicit IV is to allow
the
cryptographic module implementing the AEAD algorithm to ensure non-reuse
of the nonce. However, for ChaCha I believe we came to the conclusion that
it
was acceptable to use the sequence number as the nonce, as the module can
check for sequential usage. This saves 8 octets on the wire.",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5361,TLS 15+,103,29,"ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",28,-1,"
In the interim in Seattle, we came to the conclusion that we should make
all AEAD algorithms behave this way, which also simplifies the spec some.
I've formatted this into a PR to verify the consensus on the list. Please
comment
here if you object and on the PR if you have editorial comments.",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5362,TLS 15+,103,30,"ExtensionOfPrevious,InformationProviding",29,-1,"
https://github.com/tlswg/tls13-spec/pull/155",<CABcZeBPfasM5HmJaATLUHQKRgiSGCreJt1T=UoDBGCbcuzyW8Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-16 16:54:56
5363,TLS 15+,103,33,"InformationProviding,Apologising",,-1,Sorry for being pedantic but...,<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5364,TLS 15+,103,111,"ExtensionOfPrevious,InformationProviding,NeutralResponse",27,-1,"
The Nonce is the fixed (per connection) part of the quantity of bits
that are encrypted to produce one block of cipher text that's XOR'd with
the plain text to produce the encrypted message block.   The Nonce plus
the message sequence number is the per-message initialization vector.
The Nonce plus the message sequence number plus the block number is the
per block value to be encrypted.   At least for CCM and GCM.",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5365,TLS 15+,103,112,"Question,ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious,ProposeAction",111,-1,"
The Nonce is common across all messages within a session. (*sigh* the
more general meaning of nonce is that of a unique per-invocation value
but given that all per-message/per-block ""nonce"" usages contain the
per-connection nonce it would be useful to not overload this too much -
among other reasons:  an IV is not always a nonce but can be, a nonce is
not usually an IV but can be, most messages require an IV, most blocks
don't).  So maybe we call this the ""Session Nonce"" for clarity?",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5366,TLS 15+,103,113,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",112,-1,"
In original TLS, the IV produced during session setup was actually not
""the"" IV, but ""an"" IV used for the first message.  Then McGrew's AEAD
modes repurposed the IV data produced as a nonce for the AEAD modes.",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5367,TLS 15+,103,114,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",113,-1,"
So what you're proposing is to eliminate the determination of the Nonce
as part of the session negotiation and make it a fixed value.  E.g., we
have an explicit nonce which is always zero which produces a per-message
IV based on the sequence number of '0's | <sequence counter> | <block
counter>.  As a side effect that also eliminates the per-message IV
field (which aren't actually used by the currently defined AEAD modes
AFAICT).",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5368,TLS 15+,103,115,"Question,ExtensionOfPrevious,ClarificationElicitation,InformationProviding,ExtensionOfPrevious",114,-1,"
That works for the currently defined pure AEAD modes (CCM/GCM at least,
haven't looked at chacha).   Will that work in all cases for constructed
AEAD modes?  (e.g. where we build an AEAD mode out of an encryption mode
and an integrity mode and derive the E and I keys from a single key
internal to the constructed mode - say AES-CBC with CMAC for example).
Short answer is probably not.",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5369,TLS 15+,103,116,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",115,-1,"
Basically, this complete eliminates the ability to use CBC (or any
cipher mode that requires an explicit per message IV) from TLS. Not
arguing for or against this at this point, but not clear that everyone
understands the side effects of this decision.",<55086D3C.5090605@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-17 14:06:52
5370,TLS 15+,103,151,"Answer,InformationSeeking,InformationProviding,Answer,Disagreement,ProposeAction",115,115,"
I believe that it will, although I welcome counterexamples.

The AEAD interface requires only an nonce (i.e. unique, but not
unpredictable) and, under this proposal, that's all that TLS will
provide.

CBC modes require an IV (i.e. unpredictable). If you wished to make an
AES-CBC-HMAC-SHA256 AEAD, for example, then you would do something
like this:

Define the key length to be twice as large as the AES key and split it
internally into a CBC key and an IV key. For each record, generate the
IV by AES(key = IV_key, block = nonce) then encrypt the plaintext
using CBC with that IV and the CBC key. (And you might need extra key
bytes for the HMAC too, but that's beside the point here.) Basically
you can generate the IVs using AES-CTR as a PRNG.
",<CAMfhd9VetS=bNeyBeBasRGr9nE8yoRqU7jajKrsOimPqMayWYA@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2015-03-17 11:21:24
5371,TLS 15+,103,190,"Agreement,InformationProviding,Agreement,ProposeAction",151,151,"
Right. Or you could do like in https://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05 , generate the IV randomly and locally and call it part of the ciphertext (see appendix A). The AEAD interface has no requirement that the ciphertext have the same length as the plaintext. In fact CBC requires padding, so the ciphertext is larger anyway.

I do like your way better, but it requires a larger state on both client and server.

I’m also wondering if we can mass convert all the existing CBC ciphersuites for TLS 1.3, so that ciphersuite 0x00,0x0a could be TLS_RSA_WITH_3DES_EDE_CBC_SHA in TLS 1.2, but transform into one of these AEAD constructions for TLS 1.3 without having to allocate new identifiers.
",<E19E2DF5-8ACB-46E8-9A99-DFC2ABA2D288@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-03-17 22:19:53
5372,TLS 15+,103,262,"NeutralResponse,InformationSeeking,NeutralResponse,ContextSetting,ProposeAction",151,151,"
I wouldn't use AES-CTR to generate IVs for AES-CBC, but I take your
point.    I was actually asking about more than CBC.  See below.
",<55099A60.5020709@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:31:44
5373,TLS 15+,103,263,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",262,151,"
This is what I got from SP800-38A appendix C",<55099A60.5020709@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:31:44
5374,TLS 15+,103,264,"ExtensionOfPrevious,ContextSetting","151,263",151,"> For the CBC and CFB modes, the IVs must be unpredictable. In
> particular, for any given plaintext, it must not be possible to
> predict the IV that will be associated to the plaintext in advance of
> the generation of the IV.",<55099A60.5020709@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:31:44
5375,TLS 15+,103,265,"ExtensionOfPrevious,ContextSetting","151,264",151,"> There are two recommended methods for generating unpredictable IVs.
> The first method is to apply the forward cipher function, under the
> same key that is used for the encryption of the plaintext, to a nonce.
> The nonce must be a data block that is unique to each execution of the
> encryption operation. For example, the nonce may be a counter, as
> described in Appendix B, or a message number. The second method is to
> generate a random data block using a FIPS-approved random number
> generator.",<55099A60.5020709@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:31:44
5376,TLS 15+,103,266,"Question,ExtensionOfPrevious,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious",265,151,"
But that's what's defined for CBC and will work with the per-session
nonce with per-message sequence number as described above.

While at this time we've only got defined cipher suites for CBC, CCM and
GCM, (and I should have stated my comment more to this point), will
there never be other potential modes that provide some desired security
characteristics not currently present that also require explicit
per-message IVs?

Eliminating the message-wrapping down to the AEAD construct is one thing
as you can build AEAD modes out of other modes.  I wonder that we're
constraining the protocol so much that other, useful, modes might be
excluded in the future.   E.g. will any of the modes on this list
http://csrc.nist.gov/groups/ST/toolkit/BCM/modes_development.html end up
in TLS cipher suites at some point?  Of these, which require per-message
IVs that can't be generated as above?
",<55099A60.5020709@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:31:44
5377,TLS 15+,103,386,"Answer,InformationProviding,Disagreement,NeutralResponse",112,112,"
I realize that the terminology is confusing, but I'm using the terms from
RFC 5116
section 2.1 (https://tools.ietf.org/html/rfc5116#section-2.1). In this
context, the
nonce is not per-connection but rather per AEAD function invocation:

A nonce N.  Each nonce provided to distinct invocations of the
Authenticated Encryption operation MUST be distinct, for any
particular value of the key, unless each and every nonce is zero-
length.

In this context, the AEAD function is invoked once for each TLS record
encryption.
",<CABcZeBOF-ezdpJcA5W3-Y6548KoG8qu9KSRdpEHic7UZBjLqCQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-17 11:22:09
5378,TLS 15+,103,388,"NeutralResponse,InformationProviding,NeutralResponse",114,114,"
AES-GCM uses this field, which is the motivation for this change.
",<CABcZeBOF-ezdpJcA5W3-Y6548KoG8qu9KSRdpEHic7UZBjLqCQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-17 11:22:09
5379,TLS 15+,103,390,"Disagreement,InformationProviding,Disagreement,ContextSetting,ProposeAction",116,116,"
As discussed at the interim, I don't believe that this is correct. See
AGL's message
for a proposed construction.

-Ekr
",<CABcZeBOF-ezdpJcA5W3-Y6548KoG8qu9KSRdpEHic7UZBjLqCQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-17 11:22:09
5380,TLS 15+,103,551,"NeutralResponse,NeutralResponse",386,386,"
David used Nonce properly here, but it becomes confusing when taken to
using the same key with multiple messages.
",<55099E57.6080008@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:48:39
5381,TLS 15+,103,552,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",551,386,"
Each message ALSO needs a Nonce - e.g. a unique value.  But the other
term for a per-message nonce is generally an IV.  At the message level a
nonce is always an IV but an IV isn't always a nonce.

We form the per-message nonce (e.g. the IV) from the per-session nonce
and the per-message sequence number and a fixed value.  That's also the
per-block nonce for the first block.
",<55099E57.6080008@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:48:39
5382,TLS 15+,103,553,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",552,386,"
So being clearer - using Session Nonce for the value that's the same
with all messages and using IV (which is also a per-message Nonce for
CCM and GCM and should be described as such) for the value used to
initialize the per-message encryption/decryption/sign/verify would
probably make things clearer rather than trying to figure out *which*
Nonce we're talking about.
",<55099E57.6080008@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:48:39
5383,TLS 15+,103,555,"Question,Agreement,ClarificationElicitation,InformationProviding,Agreement,ContextSetting",388,388,"
Yup.  Forgot about that.  Mainly because I thought implementers were
interpreting the ""

The nonce_explicit MAY be the 64-bit sequence number."" as if the GCMNonce package/explicit IV could be omitted.  Didn't actually make sense not to do it that way.

For this you're going to set the ""SALT"" to all zeroes instead of getting them from the IV field of the master secret expansion  - correct?
",<55099E57.6080008@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:48:39
5384,TLS 15+,103,557,"Agreement,Agreement",390,390,"
Yup.
",<55099E57.6080008@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 11:48:39
5385,TLS 15+,103,632,"NeutralResponse,InformationProviding,NeutralResponse",552,552,"
The term in RFC 5116 uses for this input is ""nonce"". I don't think it's
helpful
to use a different term here than is used in RFC 5116. Please note that
all the ciphers here need to conform to the RFC5116 interface, so whatever
the individual ciphers call their nonce inputs is not relevant here.
",<CABcZeBNufuC+71w3dY=AJu7JDQhdU6kehc77fEHO38gPUN+5-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-18 08:58:39
5386,TLS 15+,103,633,"ExtensionOfPrevious,ContextSetting",632,552,"
We form the per-message nonce (e.g. the IV) from the per-session nonce and",<CABcZeBNufuC+71w3dY=AJu7JDQhdU6kehc77fEHO38gPUN+5-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-18 08:58:39
5387,TLS 15+,103,634,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",633,552,"> the per-message sequence number and a fixed value.  That's also the
> per-block nonce for the first block.",<CABcZeBNufuC+71w3dY=AJu7JDQhdU6kehc77fEHO38gPUN+5-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-18 08:58:39
5388,TLS 15+,103,635,"ExtensionOfPrevious,InformationProviding,Disagreement","552,634",552,"
In this PR there is no fixed value. We simply use the sequence number and
pad to
the left as required, so I don't think there should be much room for
confusion.

-Ekr",<CABcZeBNufuC+71w3dY=AJu7JDQhdU6kehc77fEHO38gPUN+5-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-18 08:58:39
5389,TLS 15+,103,701,"NeutralResponse,InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",632,632,"
David used David's language for 5116.  It's instructive to note Russ's
language in the CCM RFC matches what ended up in the NIST version, but
that David's language in his GCM RFC didn't match what ended up in the
document he sent proposing GCM to NIST nor what NIST finally published
as the mode.  I'm not sure why that is. From David's GCM submission:
",<5509FE0A.4060903@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 18:36:58
5390,TLS 15+,103,702,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",701,632,"> The primary purpose of the IV is to be a nonce, that is, to be
> distinct for each invocation of the encryption operation for a fixed key.",<5509FE0A.4060903@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 18:36:58
5391,TLS 15+,103,703,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",702,632,"
Then there's the mixture of the IV with the salt to form a nonce in the
GCM IPSEC document that's yet another different way of putting it.

If you say ""IV"" or Initialization Vector - I know that's the value I
need to begin encryption or decryption of a message.  If you say Nonce,
I have no idea of whether its an IV, a value mixed in to indicate
timeliness (e.g. a challenge nonce), a per-session/per-sender nonce
that's used as part of the IV to allow the same key to be used by
multiple senders or what.

Ah well....
",<5509FE0A.4060903@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 18:36:58
5392,TLS 15+,103,705,"NeutralResponse,InformationProviding,NeutralResponse",635,635,"
This is kind of sophistry.  Padding to the left is exactly equivalent to
""fixed nonce of zeros"".
",<5509FE0A.4060903@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-03-18 18:36:58
5393,TLS 15+,103,743,"NeutralResponse,InformationProviding,NeutralResponse",701,701,"
Perhaps, but this is the document we are normatively referencing for AEAD.

-Ekr",<CABcZeBMH5iJd+p3p56bHQYd-Xne72Cha9qchsLVtXgYRDLdzQw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-18 15:39:25
5394,TLS 15+,103,747,"ClarificationElicitation,NeutralResponse,Question,NeutralResponse",29,-1,"I don't object, but for the sake of debate I do want to ask how much
deference we owe to RFC5116 here?",<CAAF6GDdbr57hVa4OD-wCfQtx46bo_D858V_25w8gTtd+M8OhzQ@mail.gmail.com>,colm@allcosts.net,0.0,0,5,2015-03-18 21:00:18
5395,TLS 15+,103,760,"Agreement,InformationProviding,Answer",747,747,"
Only as much as we need to get the job done.  It establishes
terminology for a thing we use (i.e., the AEAD ""API"").

I don't see any reason not to use the term ""nonce"" as used in RFC
5116.  It's not imprecise in any way.  It's arguably more correct than
""IV"", which has conflicting connotations.",<CABkgnnV-H21xFFH=mUUFJH9QRtiHoTTv1SvfdJbc6GDy4EzC_Q@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-03-18 21:10:08
5396,TLS 15+,103,778,"InformationProviding,Question,InformationProviding,NeutralResponse",747,-1,"I'm afraid that by radically changing the record layer we may be
working ourselves into a corner. If we're going to make a change this
radical, why not make equally radical changes to simplify the protocol
further if that's possible? I'm also not sure what we're supposed to
be gaining from this change: while it's true that we don't need to
send the explicit nonce, I don't know that we are losing anything from
having it. Yes, I know the ChaCha draft does it a seemingly more
sensible way, but the last thing we need is to further increase the
codesize of TLS implementations.",<CACsn0ckU==QcJhTvyov2DeJCKq_kxvfqK=AkFKsyFcRbQBfC-Q@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-18 21:21:34
5397,TLS 15+,103,779,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",778,-1,"
I do know that a recently implemented extension to FreeBSD won't work
anymore without some changes. (see
http://2015.asiabsdcon.org/timetable.html.en#P7A for an abstract)",<CACsn0ckU==QcJhTvyov2DeJCKq_kxvfqK=AkFKsyFcRbQBfC-Q@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-18 21:21:34
5398,TLS 15+,103,806,"Question,Question",779,-1,"Why would the extension break?
",<CAAF6GDeEvnt7Gzz-8VutTwaO5BCq8ZA4Z-CSKoY4oYkwqvAn_A@mail.gmail.com>,colm@allcosts.net,0.0,0,5,2015-03-18 21:24:20
5399,TLS 15+,103,859,"Answer,InformationProviding,Answer",806,806,"
Because it currently supports the TLS 1.2 record layer and AEAD mode,
not the now different TLS 1.3 one. I confirmed this would be a minor
issue with the author yesterday.  Sure, we can say that for any
implementation, and this hasn't yet made it into the wild yet, but now
both the kernel and userland sides need changes for TLS 1.3. Add in
some release cycles and LTS releases, and you get some more sites that
will not upgrade for a long time. It's not the only example: I've
heard rumors that some implementations do the record layer in more
unusual ways, while having the handshake in more softwarelike things.

I'm not claiming this is a particularly big nit, rather something that
tells me to lean on the conservative side when changing things related
to the record layer as compared to the handshake.
",<CACsn0cnxePn2J7hQymPOGDzRfUjMAnDnbjNiGugMrZVLayDARw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-18 21:43:31
5400,TLS 15+,103,903,"NeutralResponse,Answer",778,778,"
That's already happening.
",<CAFewVt6ay5ti9EJRsAm0fLSFjyBHCg_BM0P2DbKHwDxcEWxOmQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 01:33:57
5401,TLS 15+,103,905,"NeutralResponse,InformationProviding,Answer",778,778,"
1. The explicit nonce is a place to potentially leak secret data.
2. The explicit nonce is a place where a PRNG could be used poorly,
and/or a poor PRNG could be used.
3. Security properties of an explicit nonce cannot practically be
verified by the receiver, whereas the receiver could (and in fact
would have to) verify that an implicit nonce based on the record
sequence number is safe.
4. The implicit IV reduces per-record overhead on the wire by 16 or 32
bytes. For some applications that's substantial.

There are other advantages that aren't so simple to describe.
",<CAFewVt6ay5ti9EJRsAm0fLSFjyBHCg_BM0P2DbKHwDxcEWxOmQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 01:33:57
5402,TLS 15+,103,907,"NeutralResponse,InformationProviding,NeutralResponse",778,778,"
This change would not contribute substantial complexity to most TLS
libraries that would implement it. Most TLS libraries already have
similar logic to deal with implicit vs. explicit IVs in CBC mode for
SSL3/TLS1 vs. TLS 1.1+.

Also, the proposed changes to the handshake state machine for TLS 1.3
are much larger. It seems we can't substantially simplify the protocol
proportionately increasing the complexity of implementations that need
to also implement earlier versions.
",<CAFewVt6ay5ti9EJRsAm0fLSFjyBHCg_BM0P2DbKHwDxcEWxOmQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 01:33:57
5403,TLS 15+,103,988,"Disagreement,InformationProviding,Disagreement",903,903,"
No it's not: the draft is still longer than the TLS 1.2 RFC, and seems
to demand support for every single usecase. This seems at odds with
absolute simplification, where we would throw out less important
features, and radically reduce the complexity.
",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5404,TLS 15+,103,990,"Disagreement,NeutralResponse,NeutralResponse",905,905,"
You are not supposed to use random nonces with GCM.
",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5405,TLS 15+,103,992,"NeutralResponse,NeutralResponse",905,905,"
The receiver cannot determine that the sender isn't sending an extra
copy to the secret police anyway. Of course, this implicit nonce
strategy will prevent certain bugs involving being unable to count,
and may be worth it.
",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5406,TLS 15+,103,994,"NeutralResponse,Agreement",905,905,"
This is an actual advantage.",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5407,TLS 15+,103,996,"NeutralResponse,NeutralResponse",907,907,"
A million here, a million there: pretty soon you start spending real money.
",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5408,TLS 15+,103,998,"NeutralResponse,InformationProviding,NeutralResponse",907,907,"
Adding new states and transitions to a state machine doesn't increase
complexity that much: if the transition doesn't apply, you don't take
it. But adding additional special casing all over the place to deal
with TLS 1.3 does increase complexity much more.
",<CACsn0cm09x9oHynJc0FU78TQcdh5EPc2sAbahNSEuLw9nNAeXg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 09:20:54
5409,TLS 15+,103,1020,"InformationProviding,InformationProviding,Disagreement,InformationProviding,NeutralResponse",988,988,"
The TLS 1.3 draft is 91 pages long (
https://tools.ietf.org/html/draft-ietf-tls-tls13-05)
RFC 5246 is 103 pages long (https://tools.ietf.org/html/rfc5246)

-Ekr",<CABcZeBPz6+5RMZ3r6tjbF=D7+GKX8eyYM7+hfJ8MM8rLEyXSgQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 09:25:47
5410,TLS 15+,103,1049,"Thanking,Thanking",1020,1020,"
Thanks for the correction.",<CACsn0cknqjYxnmhKeY4W3O-c_R57ZYcGmwSZ3S48MrtbJ5yVFA@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:02:39
5411,TLS 15+,103,1099,"Question,Question",988,988,"
Got examples of features that could be removed or at least rendered
truly optional (besides things like 0RTT[1])?
",<20150319174001.GA3690@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 19:40:01
5412,TLS 15+,103,1101,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",998,998,"
Unfortunately, to fix the TLS handshaking mechanism, calls for handshake
totally different from one TLS 1.2 has.

The overall architecture of TLS 1.3 handshake looks good to me, the
divisions it makes look to harden the handshake a lot against various
attacks. Unfortunately, the handshake currently looks to have rather large
implementation security gap.

Additionally, in practice, the capablity to send a handshake that can
be downnegotiated is needed.
",<20150319174001.GA3690@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 19:40:01
5413,TLS 15+,103,1102,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",1101,998,"
[1] If 0RTT was an extension with positive acknowledgement, server could
just leave it unimplemented and things would still work, albeit possibly
with extra RTT.
",<20150319174001.GA3690@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 19:40:01
5414,TLS 15+,103,1129,"Agreement,Agreement",1102,1102,"
I agree it must be possible to do a server that does not do 0-RTT.

-Ekr
",<CABcZeBNhrEmc7iEKx3JioS0rnAWyF7BgjJQan4dCFe7XbzK2ZQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 10:52:18
5415,TLS 15+,103,1141,ExtensionOfPrevious,1206,778,protocol,<CACsn0cm-8jyZHDa11ya5nRBAYXZc9EF354eAyZu3ND0usVTrsg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:55:54
5416,TLS 15+,103,1206,Question,,778,"wrote:
> On Thu, Mar 19, 2015 at 09:20:54AM -0700, Watson Ladd wrote:
> > On Thu, Mar 19, 2015 at 4:33 AM, Brian Smith <brian@briansmith.org>
wrote:
> > > Watson Ladd <watsonbladd@gmail.com> wrote:
> > >> If we're going to make a change this
> > >> radical, why not make equally radical changes to simplify the",<CACsn0cm-8jyZHDa11ya5nRBAYXZc9EF354eAyZu3ND0usVTrsg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:55:54
5417,TLS 15+,103,1207,ExtensionOfPrevious,1141,1099,"> > >> further if that's possible?
> > > That's already happening.
> > No it's not: the draft is still longer than the TLS 1.2 RFC, and seems
> > to demand support for every single usecase. This seems at odds with
> > absolute simplification, where we would throw out less important
> > features, and radically reduce the complexity.
> Got examples of features that could be removed or at least rendered
> truly optional (besides things like 0RTT[1])?",<CACsn0cm-8jyZHDa11ya5nRBAYXZc9EF354eAyZu3ND0usVTrsg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:55:54
5418,TLS 15+,103,1208,"InformationProviding,InformationProviding,Answer",1099,1099,"
Update: most connections are short-lived. Changing client auth state during
a connection: restarting works fine. The 1 RTT idea being proposed involves
remembering unnecessary state.

AGL mentioned the ability to have fragmentation of Client Hellos in the
record layer.
",<CACsn0cm-8jyZHDa11ya5nRBAYXZc9EF354eAyZu3ND0usVTrsg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:55:54
5419,TLS 15+,103,1210,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",1101,1101,"
This should be doable without increasing the complexity of current code
that much. The issue with the handshake isn't so much the parsing (
although nested length encoding is a bad idea, compared to length encoded
tokens) but the state machine. Adding new transitions and states carefully
shouldn't be too bad.

Most implementations already keep a ruuning hash, so the enhanced handshake
prorocol can fit in. We should tighten up the description significantly,
explaining exactly which steps are expected when.
",<CACsn0cm-8jyZHDa11ya5nRBAYXZc9EF354eAyZu3ND0usVTrsg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-03-19 10:55:54
5420,TLS 15+,103,1257,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",1208,1208,"At the interim we discussed having a simple re-key mechanism that
was less general than Update. I think we could have that but nothing
would also probably be fine.

Changing client auth state during a connection: restarting works fine.

Would that this were so. Unfortunately, there are existing HTTP-based
systems
which rely on this feature and will be fairly put out if we don't supply
it. That may
not be a totally dispositive argument, but re-starting is not really a
drop-in
replacement.

-Ekr",<CABcZeBPnm0G9sTPE-J91i2XarBsc2dc18BK3spKcG0_Xy_6Nww@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 11:27:49
5421,TLS 15+,103,1335,"Question,NeutralResponse,ClarificationElicitation,InformationProviding",1208,1208,"
Update as an extension?

I think splitting the secrets for both directions is a good idea: The
secrets can be derived just before being needed (which cuts down oppurtunity
for errors) and one can just derive the symmetric keys from both.
",<20150319183105.GA4192@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 20:31:05
5422,TLS 15+,103,1336,"ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious",1335,1208,"
Additionally, changing client auth state during a connection can be very
dangerous (it depends on protocol riding on top and the context it runs
in).

Client-to-server IRCS? OK. HTTP/2 from web browser? Ouch.
",<20150319183105.GA4192@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 20:31:05
5423,TLS 15+,103,1338,"NeutralResponse,InformationProviding,NeutralResponse",1208,1208,"
Doesn't seem to be really needed, except for certificate messages. No
other messages seem to be large enough to warrant record-layer fragmentation
under reasonable conditions.

Heck, even dh8k keyshare message (which is likely the largest handshake
message in practice aside of certificates) easily fits inside one IPv6
minMTU datagram, complete with all the needed headers.
",<20150319183105.GA4192@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 20:31:05
5424,TLS 15+,103,1340,"Agreement,InformationProviding,Agreement,ContextSetting",1210,1210,"
Agreed, the endpoints should always know what is to be sent or received
next (and anything else is an protocol error).

A few weeks back I tried to construct a state machine for TLS 1.3. The
nasty problem I ran into was handling the handshake ""restart"" (the
state machine can't ever be allowed to loop). Also, client certificate
handling caused problems.
",<20150319183105.GA4192@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 20:31:05
5425,TLS 15+,103,1377,"NeutralResponse,ProposeAction,InformationProviding,Agreement,Disagreement,NeutralResponse,ProposeAction",25,25,"
My concern about this is the same one already raised on the CFRG mailing list:
http://www.ietf.org/mail-archive/web/cfrg/current/msg04867.html
in response to:
http://www.ietf.org/mail-archive/web/cfrg/current/msg04820.html

In particular, massively parallel attacks on many keys at once seem
like the most promising way to break AES-128. It seems bad to have
popular endpoints encrypting the same plaintext block (e.g. ""GET /
HTTP/1.1\r\n"") with the same nonce (1) with different keys. That seems
like exactly the recipe for making such attacks succeed.

It seems like it would be better, instead, to require that the initial
nonces to be calculated from the keyblock established during key
agreement, and then have them incremented as counters (with
wraparound) in the same fashion as being proposed. This, combined with
the fact that the key agreement will always be using ephemeral keys,
should prevent any such massively-parallel attack from working.

Note that this is a concern more for AES-128 than it is for ChaCha20
because ChaCha20 mitigates the issue by using a 256-bit key.

Other than disagreeing with how the initial nonce is determined, I
agree that the implicit counter approach is better than the explicit
per-record nonce approach.

I think this issue should be addressed before this change is made.
",<CAFewVt7_+oqy0EczdaxVpgS9gkzp8EMjLCgjXj+DE7S-e94Q7A@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 09:53:54
5426,TLS 15+,103,1424,"Question,NeutralResponse,Question,InformationProviding,ContextSetting",1377,1377,"
Are other people concerned about this issue? I seem to remember this
being discussed in the interim and AGL being opposed to this change.
",<CABcZeBMN=0GUsqDMnLM5eTg54t6Sn0ME9213ts75OXLKZxr9+w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 12:58:30
5427,TLS 15+,103,1426,"Question,ClarificationElicitation",1377,1377,"
Is there any reason why these should be derived from the keyblock
as opposed to from purely public information such as the random
values?
",<CABcZeBMN=0GUsqDMnLM5eTg54t6Sn0ME9213ts75OXLKZxr9+w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 12:58:30
5428,TLS 15+,103,1428,"Question,ClarificationElicitation,InformationProviding",1377,1377,"
Can you explain why you think they need to change? I note that TLS 1.2
currently does not behave in this fashion.

-Ekr",<CABcZeBMN=0GUsqDMnLM5eTg54t6Sn0ME9213ts75OXLKZxr9+w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 12:58:30
5429,TLS 15+,103,1466,"Answer,InformationProviding,Answer",1426,1426,"
Intuitively, I expect the attacker to have more difficulty if they
don't know the nonce than if they do. In general, we should not
divulge more than the minimum amount of information in cleartext. And,
in particular, one of the design goals is to encrypt as much of the
handshake as possible, and the nonce selection is part of the
handshake.

I wouldn't be surprised if somebody pointed out a good reason to avoid
deriving them out of the key block, though I don't know of one now.
",<CAFewVt4Jq7S_oV8jetz+PxNg9zJ+J0WLWvDt4V+iHQJ87enuCQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 10:11:40
5430,TLS 15+,103,1468,"Answer,Answer,ProposeAction",1428,1428,"
I think you interpreted my suggested as <initial-nonce> || <record
sequence number>. I just mean that the per-record nonce should be
calculated as <initial-nonce> + <record sequence number>. It seems
better to start all the initial bits of the nonce in a randomly-chosen
state, instead of just a prefix, if there's no conflicting
considerations to do otherwise.
",<CAFewVt4Jq7S_oV8jetz+PxNg9zJ+J0WLWvDt4V+iHQJ87enuCQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-19 10:11:40
5431,TLS 15+,103,1528,"NeutralResponse,InformationProviding,Agreement",1468,555,"
I did. It doesn't help here that TLS uses '+' for concatenation :(
",<CABcZeBMDQ5aM-DKBDTP0bBjaw0kgZ0prwMjdGRi-887b0nTPVQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 13:17:51
5432,TLS 15+,103,1530,"ClarificationElicitation,ClarificationElicitation",1468,1468,"
So to be clear we would generate a random V of length
N_MIN and then for each record the nonce would be
SN + V?
",<CABcZeBMDQ5aM-DKBDTP0bBjaw0kgZ0prwMjdGRi-887b0nTPVQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-19 13:17:51
5433,TLS 15+,103,1584,"NeutralResponse,InformationProviding,NeutralResponse",1466,1466,"
As to what other protocols do with GCM, both SSH and IPSec do derive
initial nonce out of key block (like TLS 1.2 does).

As to supporting ""hardware"", there are values in TLS that are both
public and have to be derived from key block, so any HSM has to know
about TLS to be able to know what should be exportable and what isn't.

And if the HSM accepts arbitrary nonces, one can break the encryption
fast.
",<20150319203141.GA10457@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 22:31:41
5434,TLS 15+,103,1586,"NeutralResponse,InformationProviding,ExtensionOfPrevious","1468,1584",1468,"
As to what other protocols do with GCM, SSH derives a full block and
increments that. IPSec derives just a prefix (like TLS 1.2).
",<20150319203141.GA10457@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-19 22:31:41
5435,TLS 15+,103,1607,"Answer,InformationProviding,Answer,ProposeAction",1424,1424,"
I would phrase it as an extended key to the AEAD and keep the nonce
the same, but I'm not opposed so starting at a random point in the
nonce space and counting from there. However, since the AES-GCM AEAD
is already defined I can see the practical argument for having TLS do
the nonce masking.
",<CAMfhd9Xckw9s=5OxC_Cv7YSoZ4bxu4Xe59ZhmkUFuYcJNawEiA@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2015-03-19 13:25:20
5436,TLS 15+,103,1640,"Question,Question,InformationProviding",1607,-1,"Adam, Brian, what would you think of XOR rather than addition?

E.g., generate a per-connection value V and then do:

Nonce = Seq XOR V?

-Ekr
",<CABcZeBNpV7qQSpUESEn64xr8_RjDboPsS9CHupkP5OAQfPkD-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-21 11:58:06
5437,TLS 15+,103,1660,"Question,Answer,ClarificationElicitation,Answer",1640,1640,"
It's invertable so can't break uniqueness. So that would be ok too. Is
V a 12-byte (or whatever) value and thus fixes the upper 4 (or
whatever) bytes of the nonce?
",<CAMfhd9UN6ZjCpg5LhWh+zMd5m55N-MiP9-qcVviSJKOr--tZaw@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2015-03-21 12:20:24
5438,TLS 15+,103,1684,"Answer,Answer,Agreement",1660,1660,"
I was thinking that we would generate an N_MIN long V and XOR
it with Seq. So, yes, N_MAX - 8 bytes would be effectively fixed.

-Ekr",<CABcZeBNYKuvg5VVQK9TLUKqhoiz2+bupuQfFBfGS08oHrYoc1w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-21 12:22:44
5439,TLS 15+,103,1715,"NeutralResponse,InformationProviding,NeutralResponse",1684,1684,"
A few thing to note:

- RFC5116 allows N_MIN=0, which means the scheme can operate without
nonces, but there doesn't seem to be any such registered algorithms.
- There are registred AEAD algorithms with N_MIN<8, N_MAX>8.
- Some registered algorithms have huge N_MAX.
",<20150321195356.GA5190@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-03-21 21:53:56
5440,TLS 15+,103,1764,"NeutralResponse,InformationProviding",1684,1684,"
I meant N_MIN here, btw.
",<CABcZeBO99graWLdsQ=3yVJT3kBBBuPT82DY_Az5U9+Rc9j1SrA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-21 13:04:03
5441,TLS 15+,103,1766,"Question,NeutralResponse,InformationSeeking,Question,NeutralResponse,ProposeAction",1715,1715,"
This is the one that concerns me (though the general problem is a concern
for all of these).

Perhaps instead use max(N_MIN, 8)?

-Ekr
",<CABcZeBO99graWLdsQ=3yVJT3kBBBuPT82DY_Az5U9+Rc9j1SrA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-21 13:04:03
5442,TLS 15+,103,1798,"Question,NeutralResponse,Question,Answer",1640,1640,"
Would the sequence number be logically the same size as the nonce (128
bits or 256 bits), or would the spec will forbid sending 2^64 or more
records under the same key? Either solution prevents the need to worry
about the record number overflowing, but my answer depends on which
approach is chosen.

The advantage of XOR is that it is easy to implement correctly,
because mutli-machine-word XOR is easier to implement than
multi-machine-word unsigned integer addition with wraparound during
overflow. However, XOR is also easier to implement *wrongly* without
anybody noticing, by only doing the XOR for a single machine word
(e.g. only the lower 32 bits on a 32-bit machine). It's not so
practical to do a conformance test that sends/receives 2^32+1 or
2^64+1 records..

It seems harder to implement addition wrongly without anybody noticing
because all of the overflow cases should be triggered during interop
testing and thus any bugs found and corrected. So, without knowing the
answer to my question above, I prefer addition.
",<CAFewVt66vLEHSUMvnZ2N+uT0542vL27T4VQSYe1SSRhZpyOKLQ@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-03-22 16:10:56
5443,TLS 15+,103,1842,"Answer,Answer",1798,1798,"
What I had in mind was the latter.

-Ekr
",<CABcZeBPFwM4NjFCk96k3L8ngW9y2-00Gnm0g9y33rCqE_Gpi8A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-03-22 20:20:27
5444,TLS 15+,103,1858,"NeutralResponse,InformationProviding,NeutralResponse",1842,1842,"
I don't think that we are in a position to have more than 2^64 records
sent.  Not that I expect anyone will need that.  (in the spirit of the
640K limit :)",<CABkgnnXedRBd1FDJRW5cR=q95Le3Gm8_hd5Jgw2GggZCDChw4w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-03-22 20:37:18
5445,TLS 15+,104,0,Social,,-1,"Hi folks,",<CAO8oSXmMY6JzKrbBqqRp2KvW1qET9qTjfNhwNQ_M3PAFSBbeuQ@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 10:41:15
5446,TLS 15+,104,19,"InformationProviding,InformationProviding,ContextSetting,ProposeAction",,-1,"
In Section 4.2 of the latest TLS 1.3 draft [1], the padding(21)
extension is restricted to the CH and no other handshake messages.
Another plausible spot for this extension is in the Certificate
message. Specifically, although we're encrypting this message, we may
not want to reveal its length. Adding a padding extension seems to
address that problem. Granted, RFC7685 [2] clearly indicates that this
padding is for the CH, and that server ""MUST NOT echo the extension.""
However, I don't think that rules out server-chosen padding for the
Certificate.",<CAO8oSXmMY6JzKrbBqqRp2KvW1qET9qTjfNhwNQ_M3PAFSBbeuQ@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 10:41:15
5447,TLS 15+,104,20,"Question,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction",19,-1,"
What do others think? Is this worth a change?",<CAO8oSXmMY6JzKrbBqqRp2KvW1qET9qTjfNhwNQ_M3PAFSBbeuQ@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 10:41:15
5448,TLS 15+,104,49,"Answer,Answer",20,-1,"Since the Certificate message is sent in an encrypted record, the normal record padding mechanism (section 5.4) can be used, rather than sending the padding as actual handshake data.
",<MWHPR15MB1504272D9A44F7D361DF54D2AF7F0@MWHPR15MB1504.namprd15.prod.outlook.com>,knekritz@fb.com,0.0,0,23,2018-06-12 17:55:26
5449,TLS 15+,104,68,"NeutralResponse,InformationProviding,Agreement,ProposeAction",49,49,"
Of course, and that requires padding on the fly and some way for the
sender to know what is the correct amount of padding per Certificate.
Plumbing up that API seems non-trivial. In comparison, one could
imagine pre-padding wire-encoded Certificate messages a priori using
the extension. So I still think restricting padding to CH is a bit
extreme.
",<CAO8oSXnnXfo0U1vhN40bm87Riy726hgXMD_XF0aS2FqvXmz7Pg@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 11:00:40
5450,TLS 15+,104,105,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",68,68,"
Using the padding extension isn't going to mesh well with the compressed
certificates draft. (Compression is perfectly compatible with hiding the
length. If all your certificates compress well---they probably do---you can
pad based on the distribution of compressed lengths you're trying to mask.
Of course, this will leak whether compression happened, but that's not the
information that's interesting to hide.)

Record-level padding is indeed kind of annoying to plumb properly though.
I've always thought the excitement for padding at that layer was somewhat
misplaced. I could imagine allowing handshake messages to be punctuated by
no-op padding messages, but then it's just one layer to route through to
get to the record layer here. I think it's more at higher up the stack
where record-level padding really becomes impractical.
",<CAF8qwaC5F1MY3sE=Ri9475n2aSxtii77xHONoTE3SRQCTqGzNA@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2018-06-12 14:32:16
5451,TLS 15+,104,137,"Agreement,Agreement",105,105,"
Yep, valid point.
",<CAO8oSXnASznQe0zk6nwBhBk1oMSk50+DXWJg=9uy4uQwiqOkmw@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 11:44:41
5452,TLS 15+,104,138,"ClarificationElicitation,ClarificationElicitation,NeutralResponse",105,105,"
To be clear, are you suggesting that adding a padding extension to the
Certificate message is impractical? (I wouldn't consider this
record-level padding.)
",<CAO8oSXnASznQe0zk6nwBhBk1oMSk50+DXWJg=9uy4uQwiqOkmw@mail.gmail.com>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 11:44:41
5453,TLS 15+,104,196,"Apologising,Answer,ContextSetting,InformationProviding,Answer,ContextSetting,ProposeAction,Apologising",138,138,"
Sorry, that was probably unclear. What I meant was: I agree that
record-level padding is pretty difficult to use in general, but this
particular instance is probably(?) not too bad, so it seems sufficient to
use the existing mechanism rather than make a wire-incompatible change
(unsolicited Certificate extensions are forbidden) at this stage.

Though I otherwise don't particularly object to jamming the padding
extension into more places, the compressed certificates point aside.",<CAF8qwaBFWiN6bZkOhYoYoSC+O6xvFpDFVH9hPB8po5DMwdYAAw@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2018-06-12 14:48:35
5454,TLS 15+,104,198,"Agreement,NeutralResponse,Thanking,InformationSeeking,InformationProviding,Agreement,NeutralResponse,ProposeAction,Thanking",196,-1,"Got it — thanks for the clarification! I agree with your conclusion assuming we do not want to make an incompatible wire format change. However, if we’re willing to budge on that, I think it’s worth including. I’m curious to hear what others think.",<020e7b24-1015-4b6a-817c-0c12d754875d@Spark>,christopherwood07@gmail.com,0.0,0,7,2018-06-12 12:07:31
5455,TLS 15+,104,236,"NeutralResponse,Question,NeutralResponse,ContextSetting","196,198",-1,You could use the existing Certificate padding mechanism.  Which mechanism?!   The one in this paragraph:,<46BFFD29-7823-463E-A90D-7EF59AD93C61@nerd.ninja>,r@nerd.ninja,0.0,0,14,2018-06-12 15:21:37
5456,TLS 15+,104,293,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious","236,293",-1,"
For maximum compatibility, all implementations SHOULD be prepared to handle
potentially extraneous certificates and arbitrary orderings from any
TLS version, with the exception of the end-entity certificate which
MUST be first.",<46BFFD29-7823-463E-A90D-7EF59AD93C61@nerd.ninja>,r@nerd.ninja,0.0,0,14,2018-06-12 15:21:37
5457,TLS 15+,104,294,"NeutralResponse,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",293,-1,"
I ran an experiment a while ago in which all major browsers (at that point) accepted an arbitrary X.509 certificate in the Certificate message.   In other words, you could just build a blob that looks like a DER encoded X.509 certificate and include it in the chain.",<46BFFD29-7823-463E-A90D-7EF59AD93C61@nerd.ninja>,r@nerd.ninja,0.0,0,14,2018-06-12 15:21:37
5458,TLS 15+,104,295,"Question,NeutralResponse,ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious",294,-1,"
It is indeed a hack, but in all seriousness, would the client endpoint stacks even bother to change that behavior? (disclaimer: I have not checked the latest behavior).",<46BFFD29-7823-463E-A90D-7EF59AD93C61@nerd.ninja>,r@nerd.ninja,0.0,0,14,2018-06-12 15:21:37
5459,TLS 15+,106,41,"InformationProviding,InformationProviding",,-1,"https://tlswg.github.io/tls13-spec/
https://tools.ietf.org/html/draft-ietf-tls-tls13-05",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5460,TLS 15+,106,42,"InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,InformationProviding",41,-1,"
Where does the ""Status of This Memo"" and ""Copyright Notice"" text get pulled from? There seems to be some black magic involved in the build process, and I don't see where that text lives. I'd like to request the two URLs be updated, but I don't know where to ask.",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5461,TLS 15+,106,43,"InformationProviding,ExtensionOfPrevious,InformationProviding",42,-1,"
status has:
http://datatracker.ietf.org/drafts/current/
which redirects to:
http://datatracker.ietf.org/doc/active/
which does support TLS, and should be:
https://datatracker.ietf.org/doc/active/",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5462,TLS 15+,106,44,"InformationProviding,ExtensionOfPrevious,InformationProviding",43,-1,"
copyright has:
http://trustee.ietf.org/license-info
which redirects to:
http://trustee.ietf.org/trust-legal-provisions.html
which does support TLS, and should be:
https://trustee.ietf.org/trust-legal-provisions.html
the initial URL also supports TLS, so this works:
https://trustee.ietf.org/license-info
however that redirects to HTTP, not HTTPS (...sigh)",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5463,TLS 15+,106,45,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",44,-1,"
So, yeah... I'd like the new TLS spec to actually attempt to use TLS in its URLs, where possible. To do this needs:
1) Update those two URLs in the template for these sections to use the HTTPS equivalent (in the case of ""status"", also change ""current"" to ""active"").
2) Get someone to fix the redirects on trustee.ietf.org to redirect to HTTPS, at minimum when already coming from HTTPS.",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5464,TLS 15+,106,46,"ExtensionOfPrevious,ProposeAction,NeutralResponse,ExtensionOfPrevious,ProposeAction",45,-1,"
Actually using TLS by default might also be a plan...",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5465,TLS 15+,106,47,"InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,ExtensionOfPrevious","44,46",-1,"
As to other URLs in the document, I added a couple 's'es in my minor fixes branch/PR. There are additional domains that do support HTTPS, technically, but they get cert errors... because of course they do.",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5466,TLS 15+,106,48,"InformationProviding,ExtensionOfPrevious",47,-1,"
The RFC references have an odd inconsistency here. In the numbered working group drafts, they properly generate with HTTPS links:
https://tools.ietf.org/html/draft-ietf-tls-tls13-05#section-13.1
However, in the editor's copy (draft-ietf-tls-tls13-latest), they generate with HTTP links:
https://tlswg.github.io/tls13-spec/#rfc.references.1",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5467,TLS 15+,106,49,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction",48,-1,"
That needs fixing if just for consistency.",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5468,TLS 15+,106,50,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction",49,-1,"
Also, tools.ietf.org should of course be using HTTPS by default, but it's not.",<201504292035.21721.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-29 20:35:21
5469,TLS 15+,106,52,Social,,-1,"Hi Dave,",<5541E286.2090001@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 09:06:30
5470,TLS 15+,106,113,"NeutralResponse,ContextSetting,ProposeAction,StateDecision,Social,Question,NeutralResponse","41,50",-1,"
That brings in a bunch of things including tools, boilerplate
issues and policy stuff (""do we want an https-everything like
thing for the IETF?""). Good questions to ask though so I'll put
that on the IESG's agenda for some meetings we're having next
week. Please hassle me in 2-3 weeks if you don't hear something
back.",<5541E286.2090001@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 09:06:30
5471,TLS 15+,106,116,"InformationProviding,NeutralResponse,ProposeAction,Thanking,NeutralResponse,Thanking",113,-1,"Thanks. Note that while I am asking about policy, in that I think having HTTPS used for all IETF servers by default is a good idea, that is not the primary issue I'm bringing up here. At the moment, I'd just like the URLs updated to use HTTPS for what already supports it.",<201504300933.49582.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-30 09:33:49
5472,TLS 15+,106,185,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ExtensionOfPrevious","116,48",-1,"
As to the normative & informative references, the I-D uses relative URLs and the Editor's Copy uses absolute HTTP URLs, which is what seems to cause the inconsistency of not using the same scheme when loading the pages over HTTPS. The Editor's Copy could use double-slash relative URLs to get the same effect, at minimum. Just using HTTPS links for everything would be simpler, though.",<201504300933.49582.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-30 09:33:49
5473,TLS 15+,106,188,Social,,-1,"Hi Stephen,",<5542303D.2080604@zinks.de>,roland@zinks.de,0.0,0,8,2015-04-30 15:38:05
5474,TLS 15+,106,265,"Question,ClarificationElicitation,Question",113,-1,"
does this mean that in order to implement TLS (read the specification)
you need to use TLS (know how it is working)? Is it possible to let the
client decide and offer alternate services when the client does not use
https?",<5542303D.2080604@zinks.de>,roland@zinks.de,0.0,0,8,2015-04-30 15:38:05
5475,TLS 15+,106,396,Social,,-1,"Hiya,
",<5542330A.3060605@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 14:50:02
5476,TLS 15+,106,398,"InformationProviding,Answer,ContextSetting,StateDecision,Answer",265,265,"
Well, no there is no ""this"" that means anything yet:-) Like I said, I'll
bring it to the IESG and bring any conclusions back (probably not to
this list but somewhere more appropriate though I'll send a pointer
here so those who care can follow up.)
",<5542330A.3060605@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 14:50:02
5477,TLS 15+,106,400,"InformationProviding,Answer,Answer",265,265,"
No. For RFCs and I-Ds there are many mirrors and we just finished a
discussion on the main IETF list (about ftp) where I think it was
clear that we have a bunch of folks who want things available in
cleartext even if the defaults become to access things via TLS.
(There wasn't a consensus call on exactly that though, so that's
just my synopsis.)
",<5542330A.3060605@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 14:50:02
5478,TLS 15+,106,402,"InformationProviding,Answer,Answer",265,265,"
It is quite possible. I'd even not be surprised if the outcome were
to default to https URIs but to ensure http equivalents are available.

But the main thing is that nobody ought get scared that we'll make
some mad change without chatting with the community about that first.
We (the IESG) know exactly how badly beaten up we'd deserve to be
if we did that.
",<5542330A.3060605@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 14:50:02
5479,TLS 15+,106,418,"InformationProviding,Agreement,ProposeAction,NeutralResponse",400,400,"
That sounds like it would be a reasonable consensus, IMO. HTTPS by default everywhere is a good thing, but I agree that the IETF should probably have all documents also available in cleartext somewhere too. (preferably with hashes that can be verified via some secure channel)
",<201504301054.21169.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-04-30 10:54:20
5480,TLS 15+,106,429,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",418,418,"
See [1] and mostly thank Russ Housley if you like that:-)

S.

[1] https://www.ietf.org/id-info/idsignatures.html",<554242CA.6030004@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-04-30 15:57:14
5481,TLS 15+,106,452,"Question,Social,Question","113,41",41,"
Hi Stephen,

What's the result of the discussion in IESG on using HTTPS?
",<BAY180-W87B405996AA37A0CC53FDCFFC00@phx.gbl>,xiaoyin.l@outlook.com,0.0,0,24,2015-05-22 02:18:43
5482,TLS 15+,106,489,"InformationProviding,Answer,ProposeAction,Social,Answer",452,452,"
Nearly done, hopefully done in a week or two - just wordsmithing
needed but I hope folks on here will be happy with what the IESG
will suggest. (And will be patient in the meantime, pretty
please:-)

S.
",<555EE8CF.3020900@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-05-22 09:29:03
5483,TLS 15+,106,528,Social,,-1,"Hiya,
",<556CCDD2.7050006@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-06-01 22:25:38
5484,TLS 15+,106,530,"InformationSeeking,InformationProviding,Answer,ProposeAction,Social,Answer",452,452,"
Please see [1]. Comments welcome but please do send them to
the addresses listed and not to the TLS WG list.
",<556CCDD2.7050006@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-06-01 22:25:38
5485,TLS 15+,107,0,"InformationProviding,ContextSetting,InformationProviding",,-1,I just uploaded draft-16.,<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5486,TLS 15+,107,27,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",0,-1,"
https://tools.ietf.org/html/draft-ietf-tls-tls13-16",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5487,TLS 15+,107,28,"ContextSetting,ExtensionOfPrevious",27,-1,"
The primary changes are listed below.",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5488,TLS 15+,107,29,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",28,-1,"
- New version negotiation format (*) [IMPORTANT: this got lost in the
ChangeLog]",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5489,TLS 15+,107,30,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,29",-1,"
- Change RSASSA-PSS and EdDSA SignatureScheme codepoints for better
backwards compatibility (*)",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5490,TLS 15+,107,31,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,30",-1,"
- Move HelloRetryRequest.selected_group to an extension (*)",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5491,TLS 15+,107,32,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,31",-1,"
- Clarify the behavior of no exporter context and make it the same
as an empty context.(*)",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5492,TLS 15+,107,33,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,32",-1,"
- New KeyUpdate format that allows for requesting/not-requesting an
answer (*)",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5493,TLS 15+,107,34,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,33",-1,"
- New certificate_required alert (*)",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5494,TLS 15+,107,35,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,34",-1,"
- Forbid CertificateRequest with 0-RTT and PSK.",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5495,TLS 15+,107,36,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","28,35",-1,"
- Relax requirement to check SNI for 0-RTT.",<CABcZeBOJBNt90XmWAcnpUSnXF1mLx4gdqWnvBRws-o5iO3njXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-22 16:42:14
5496,TLS 15+,107,63,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",29,29,"
4.2.1 Supported Versions says, ""The extension contains a list of
supported versions in preference order, with the most preferred
version first.""

C.2 Negotiating with an older client says, ""If the
""supported_versions"" extension is present, the server MUST negotiate
the highest server-supported version found in that extension.""

I'm skeptical of the server respecting client preferences in any situation*, but if servers are required to negotiate the highest supported version (which I think is sensible), then there's no point to the client giving preference order.

I propose moving the text about which version a server must negotiate out of the appendix to 4.2.1 and replacing the text mentioning client preference order with arbitrary order. (We could mandate descending version order, but it seems silly for the server to reject 0304, 0302, 0303
if it's willing to negotiate 0304, for example.)
",<660F59E7-5B9C-4E4D-B12F-EE03BAB333E4@pahtak.org>,s@pahtak.org,0.0,0,10,2016-09-28 11:02:38
5497,TLS 15+,107,64,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",63,29,"
* The only time to take the client's preference into account is if the server really has no opinion on an option--e.g., two equivalent-strength cipher suites--but the client can specify a preference for an option that requires less computation/power for it. But I'm not entirely convinced that's worth the implementation cost.
",<660F59E7-5B9C-4E4D-B12F-EE03BAB333E4@pahtak.org>,s@pahtak.org,0.0,0,10,2016-09-28 11:02:38
5498,TLS 15+,107,74,"InformationProviding,Agreement,ContextSetting,Agreement",64,64,"
I generally agree, though we just added one small exception to NSS,
and have been discussing another for a while now:  Respecting client
preference for ChaCha over GCM makes a real difference for clients
that don't have AES-NI.",<CABkgnnWLJhDVSwZMS9edVijvLLJEJJDEPymX0Mk41b3=Ww4esQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-09-29 02:08:12
5499,TLS 15+,107,89,"InformationProviding,NeutralResponse,Agreement",74,74,"
Yes, a number of net companies do this (Google, CloudFlare, Akamai and no doubt others).  OpenSSL will support something like this in a future release (boringSSL has ""equivalence classes"" but the syntax and limitations aren't great).

But it doesn't matter -- it's still the server choosing what to do :)
Senior Architect, Akamai Technologies
Member, OpenSSL Dev Team
IM: richsalz@jabber.at Twitter: RichSalz",<2e7c0ab005d840ca94a3d887caeb93ae@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-09-28 16:11:07
5500,TLS 15+,107,115,"Question,InformationProviding,NeutralResponse,ClarificationElicitation,NeutralResponse",89,89,"
For all TLS protocol parameters where the client presents a list
and the server selects one element from that list, it is a
server-local (policy) decision which one element it chooses.

Describing the order of elements in such lists as ""client preference order""
has led to numerous bogus server implementations, which erroneously
default to ""do what the client proposes"", rather than ""do what the server
admin has configured"".

Out-of-curiosity, is the ChaCha-over-GCM to be configurable for the
server admin, or is it hidden black magic?

-Martin",<20160928162813.C66D61A558@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-09-28 18:28:13
5501,TLS 15+,107,131,"InformationProviding,Answer,ContextSetting,ProposeAction,Answer",115,115,"
On the server-side, I think most of them work the same way:  if the client puts ChaCha at the start of its list, and the server is configured with ChaCha as one of its ciphers, then the server ""moves"" Chacha to the front of its list and proceeds as normal.  I think the CloudFlare patches just implemented that policy in code, based on patches they posted. I'm not going to say how Akamai did it except that no animal sacrifice is involved. I don't know how Google did it, but see next paragraph.

On the crypto-library side, boringSSL had equivalence classes so you could specify that by configuring the CIPHER list. If running in a server, and the configured ciphers were like ""[AES:CHACHA]:3DES:RC4"" for example, then either AES or ChaCha would be picked.  I don't know if Google servers use that, but I'd be a bit surprised if they didn't.

As for OpenSSL, we need to figure out something.  The ""ciphers"" syntax is showing its age.

Senior Architect, Akamai Technologies
Member, OpenSSL Dev Team
IM: richsalz@jabber.at Twitter: RichSalz",<b33dae26626643d797d1a4c3625c4389@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-09-28 16:37:04
5502,TLS 15+,107,160,"Question,InformationProviding,Agreement,NeutralResponse,ProposeAction,Question,NeutralResponse",131,131,"
The equal-preference groupings have worked pretty well for us in terms
of making the right thing happen and being understandable to
non-experts. I certainly agree that the ciphers mini-language could do
with some renewal overall.

But I think a lot of the need for it is also going away. We've spent
years worrying about should we do forward security? Do we put RC4
ahead of AES-CBC because of BEAST / POODLE / etc? What about the poor
performance of AES-GCM with Java (for a while)?

But since we've now drastically reduced the number of options, and
those options are (fingers crossed) less shitty than before, I'd hope
that a default would work for the vast majority of TLS 1.3 users.
",<CAMfhd9XkBQ0jFYia7Qij=oiM09quZSwkoHSWibS81o0u1PKjaQ@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2016-09-28 10:06:35
5503,TLS 15+,107,176,"InformationProviding,Agreement,Disagreement,Agreement,Disagreement",63,63,"
I agree that an appendix is the wrong place to put this.  And that specifying the client order is pointless.

But I disagree with this being a MUST.  There may be times when the server knows more than the client and will know that a lower version is more appropriate.  E.g., interfering middleboxes or regulatory regimes.

Senior Architect, Akamai Technologies
Member, OpenSSL Dev Team
IM: richsalz@jabber.at Twitter: RichSalz",<7b4c8371a44e4c07be9883d2db959a64@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-09-28 16:08:53
5504,TLS 15+,107,194,"Question,NeutralResponse,ProposeAction,Question,NeutralResponse",176,176,"
Seems reasonable. How about making selection from the list (if the extension is present) a MUST and selecting the highest server-supported version is RECOMMENDED? Perhaps the second part is unnecessary.
",<153F73EF-492D-4DCC-9D76-62B0FE219F90@pahtak.org>,s@pahtak.org,0.0,0,10,2016-09-28 11:18:45
5505,TLS 15+,107,237,"InformationProviding,Disagreement,ProposeAction,Disagreement",194,-1,"I don't really agree that we shouldn't specify client order. We do that
everywhere else in TLS.

Rather, I think we should relax the requirement to pick the highest one,
which is just a holdover from a less expressive negotiation mechanism.
",<CABcZeBOuuVx4gH64hWX=UDeOo-mvreLa5zFccGMGQFkzG9FPdg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-09-28 10:14:55
5506,TLS 15+,107,291,"InformationProviding,Agreement,NeutralResponse",237,-1,"Ø  I don't really agree that we shouldn't specify client order. We do that everywhere else in TLS.
+ 1
While I agree that the server should be using the server’s preferences in most cases, I see no reason for the client to not list protocol versions (and cipher suites, for that matter) in the client’s order of preference. The client needs to send all supported options; no need to randomize the order.",<CY1PR0301MB0842527B51B2AF7D6CEA66078CCF0@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-09-28 18:31:17
5507,TLS 15+,107,292,"InformationProviding,NeutralResponse,NeutralResponse",237,-1,"
Ø  Rather, I think we should relax the requirement to pick the highest one, which is just a holdover from a less expressive negotiation mechanism.
In addition, it’s not always clear what the “highest” TLS version is, e.g. in the presence of national TLS “standards”. E.g. a particular server may prefer TLS 0x0100 over TLS 0x0304.",<CY1PR0301MB0842527B51B2AF7D6CEA66078CCF0@CY1PR0301MB0842.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2016-09-28 18:31:17
5508,TLS 15+,108,0,Social,,-1,"All,",<895D1206-28D1-43AB-8A45-11DEEC86A71D@cisco.com>,ncamwing@cisco.com,0.0,1,8,2017-11-04 01:49:54
5509,TLS 15+,108,5,"InformationProviding,ContextSetting,InformationProviding",,-1,"
@IETF99, awareness was raised to some of the security WGs (thanks Kathleen ☺) that TLS 1.3 will obscure visibility currently afforded in TLS 1.2 and asked what the implications would be for the security solutions today.  https://tools.ietf.org/html/draft-camwinget-tls-use-cases-00 is an initial draft to describe some of the impacts relating to current network security solutions.  The goal of the draft is NOT to propose any solution as a few have been proposed, but rather to raise awareness to how current network-based security solutions work today and their impact on them based on the current TLS 1.3 specification.",<895D1206-28D1-43AB-8A45-11DEEC86A71D@cisco.com>,ncamwing@cisco.com,0.0,1,8,2017-11-04 01:49:54
5510,TLS 15+,108,180,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding,NeutralResponse",5,-1,"I took a look at this.

Without getting into the question of whether the types of middleboxes
you describe here provide a security benefit, there are several points
in the document that are either wrong or at least misleading/confusing.

- Key Synchronization
This document notes that in TLS 1.2, it is possible for a middlebox
that traffic keys match on both sides of the connection it is proxying,
but in TLS 1.3 it is not:

There are several techniques that can be utilized.  Those techniques
function with TLS 1.2 and earlier versions but not with TLS 1.3.

One technique is for the middlebox to negotiate the same master
secret with the original TLS client and server, as if the two
endpoints handshake directly.  This is also known as ""Triple
Handshake"" used by legitimate middleboxes.  [BreakTLS] describes the
methods with RSA and DH key exchanges.  When the proxy session keys
are the same as for a direct handshake, the middlebox is able to
""cut-through"" the two TLS proxy sessions when it finishes the
security inspection.

This technique is not functional with TLS 1.3 since the transcript
hash over the handshake messages is part of the key derivation
procedure.

First, I would note that this property of TLS 1.2 is bad, as it leads
to Unknown Key Share (UKS) attacks, which can be the basis of real
attacks on TLS 1.2 as fielded. It is for this reason that the TLS
WG published RFC 7627.

Second, this property is really only available with RSA. Although
it is possible for an attacker to synchronize DH keys by generating
bogus DH parameters, the technique described by Bhargavan et al
results in an insecure MS (i.e., the server's public DH share).
[See Section V-B of https://www.mitls.org/downloads/tlsauth.pdf]
Any middlebox doing this, therefore, has completely broken TLS
for the endpoints on both sides of it. Your document suggests
that people do use this technique: I sincerely hope not.

In short, this property of TLS 1.3 is really a property of the use
of (EC)DHE [0], the use of which is important for security even in TLS 1.2
(hence the rapid increase in the use of ECDHE and the corresponding
decline in static RSA). Even if TLS 1.3 were never deployed, the
continued use of static RSA is going to be come increasingly
nonviable.

Finally, you note several times in the document (e.g., S 4.5), that
with key synchronization, the middlebox can perform the handshake and
then disengage from the connection. However, the cases you mention
(e.g.., detecting exploit attempts) ultimately require examining
all traffic in the connection.
",<CABcZeBMe42rUQdsxYV8MTt+3FBoMswmwQJqVEshtSO6GjLpBTg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-06 09:43:52
5511,TLS 15+,108,181,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",180,-1,"
- PSK and resumption
You write:

In TLS 1.3, the above mechanism is replaced by Pre-Shared Keys (PSK),
which can be negotiated as part of an initial handshake and then used
in a subsequent handshake to perform resumption using the PSK.  TLS
1.3 states that the client SHOULD include a ""key_share"" extension to
enable the server to decline resumption and fall back to a full
handshake, however it is not an absolute requirement.

Example scenarios that are impacted by this are middleboxes that were
not part of the initial handshake, and hence do not know the PSK.  If
the client does not include the ""key_share"" extension, the middlebox
cannot force a fallback to the full handshake.  If the middlebox
policy requires it to inspect the session, it will have to fail the
connection instead.

In TLS 1.3, PSKs and session resumption are basically the same and
have the same properties. While I concede that the document does
not require the client to offer key_shares, as a practical matter
it is very unlikely that a client will act in such a way that
failure to retain the PSK causes a hard failure, for two reasons:

(a) In every version of TLS, the ticket lifetime is just a hint, and
the server can forget it at any time
(https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#NSTMessage).
Thus,
a client which does not allow a full handshake will often
find itself unable to connect.

(b) The relevant question is not whether the client offers a key share
extension but whether it advertises any DH groups. If the client sends
a group but not a key share, the server can send HelloRetryRequest
to force the client to send a key share.

For these reasons, as far as I know, every client (and at least every
browser client) should allow a full handshake even when trying to resume.
",<CABcZeBMe42rUQdsxYV8MTt+3FBoMswmwQJqVEshtSO6GjLpBTg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-06 09:43:52
5512,TLS 15+,108,182,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",181,-1,"
- Server Certificate Concealment
You note that in TLS 1.2 the middlebox can examine both the SNI and the
server's certificate in order to decide whether to MITM the connection,
but that in TLS 1.3, the middlebox cannot guarantee that the SNI in
uses is correct:

In TLS 1.2, the ClientHello, ServerHello and Certificate messages are
all sent in clear-text, however in TLS 1.3, the Certificate message
is encrypted thereby hiding the server identity from any
intermediary.  Note that even _if_ the SNI is provided (in cleartext)
by the client, there is no guarantee that the actual server
responding is the one indicated in the SNI from the client.

In this case, it's important to distinguish between conformant and
nonconformant clients. In the former case -- as when the user is
not attempting to evade inspection -- the SNI will reflect the
identity that the client expects and therefore will compare the
certificate against.

Of course, in the case where the client is attempting to evade
inspection, the certificate might not match. However, in this
scenario, the client and server are colluding and so there are
a variety of ways to avoid inspection, even when doing TLS 1.2.

For example:

1. The client and server can share a prearranged public key and then
negotiate static RSA. The client sends an innocuous SNI and the server
can simply send the certificate of the corresponding server, captured
by connecting to that server. The client then enciphers the PMS
under the server's prearranged key and continues with TLS as usual.
This cannot be detected by the middlebox without decrypting the EPMS.

2. If an (EC)DHE cipher suite must be negotiated, then the attack
described above does not work directly because the server's signature
over the ServerKeyExchange can be validated, and of course the
attacker server does not have the legitimate server's key. However,
the server can forward the ClientHello to the legitimate server,
capture the Certificate and ServerKeyExchange and the proxy those to
the client. This looks legitimate to the inspection device and then
the client can simply send the Encrypted PMS in the first chunk of
data that is apparently encrypted under the server's key.

For these reasons, being able to see the server's certificate provides
a false sense of security, as this check is easily bypassed.

-Ekr
",<CABcZeBMe42rUQdsxYV8MTt+3FBoMswmwQJqVEshtSO6GjLpBTg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-06 09:43:52
5513,TLS 15+,108,183,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",182,-1,"
[0] Note: the use of static DH is very rare.
",<CABcZeBMe42rUQdsxYV8MTt+3FBoMswmwQJqVEshtSO6GjLpBTg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-06 09:43:52
5514,TLS 15+,108,238,"NeutralResponse,NeutralResponse",180,180,I'm not aware of actual implementations doing this with DH.,<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5515,TLS 15+,108,248,"NeutralResponse,NeutralResponse",180,180,Fair point.,<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5516,TLS 15+,108,354,"Agreement,Agreement",182,182,I agree we should distinguish between between conformant and non-comformant.,<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5517,TLS 15+,108,414,"ContextSetting,ProposeAction,Thanking,Thanking",180,-1,"Thank you for the feedback Ekr - please see below for responses
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5518,TLS 15+,108,416,"InformationProviding,Agreement,ContextSetting,StateDecision,Thanking,NeutralResponse,Thanking",180,180,"Thanks for the bringing that one up - we will make sure to include that
in the next version.

Understood - it is nevertheless a change from TLS 1.2. In TLS 1.3, it's
an integral part of the protocol that cannot be disabled. The TLS 1.2
extension does not share that property.
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5519,TLS 15+,108,420,"InformationProviding,Agreement,NeutralResponse,Agreement,NeutralResponse",180,180,"We have several different use case scenarios in there, and I agree with
the observation that they cannot all be satisfied at the same time. For
example, we cannot scan for malware in an encrypted stream to a
financial institution that we are not allowed to decrypt. That doesn't
mean either use case is invalid. Customers do both in real-life (just
not at the same time).
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5520,TLS 15+,108,422,"ContextSetting,ProposeAction,NeutralResponse",181,181,"If that is indeed the case, then I would suggest changing the spec
language to a MUST here instead so we can guarantee it.
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5521,TLS 15+,108,424,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",354,182,"
For the conformant case, I do not know to what extent we can rely on the
client always sending the SNI, but even if it is always sent, there are
still use case scenarios around certificate audit, etc. that cannot be
satisified in TLS 1.3 without becoming an active MITM. With the recently
adopted proposal around SNI encryption, there are more use cases that
cannot be satisfied without becoming an active MITM.

For the non-conformant case, you bring up some good points. We can
reduce the set of bypass scenarios there, but we cannot eliminate them.
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5522,TLS 15+,108,425,"StateDecision,Thanking,Thanking",182,182,"
Thanks again for the feedback - we will update accordingly in the next
version of the draft.

-- Flemming
",<b0c399e7-4815-95e2-d0e8-6d05eb254d11@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 10:56:35
5523,TLS 15+,108,676,"NeutralResponse,NeutralResponse",416,416,"
It seems like an odd complaint that we are making protection against
Unknown Key Shares an integral part of the protocol
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5524,TLS 15+,108,678,"Question,NeutralResponse,ClarificationElicitation",420,420,"
I'm finding it a bit puzzling what you claim customers do. Specifically,
you seem to be saying that customers examine the beginning of the
connection and then stop. What are they scanning for and what makes them
stop?
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5525,TLS 15+,108,680,"InformationProviding,Disagreement,NeutralResponse",422,422,"
I don't believe this is necessary. There are certainly reasons why you
would want to do PSK w/o (EC)DHE (e.g., you are really PSK only).
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5526,TLS 15+,108,681,ContextSetting,422,422,"
- Server Certificate Concealment",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5527,TLS 15+,108,683,"InformationProviding,NeutralResponse,NeutralResponse",424,424,"
You can do certificate audit by making an independent connection and
eliciting the certificate.
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5528,TLS 15+,108,685,"Agreement,Agreement",424,424,"
Yes, I agree with that.
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5529,TLS 15+,108,686,ExtensionOfPrevious,685,424,"
For the non-conformant case, you bring up some good points. We can reduce",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5530,TLS 15+,108,687,"ClarificationElicitation,NeutralResponse,Question",424,424,"
I'm not persuaded that you can meaningfully reduce them. What technical
approach do you believe would do so?

-Ekr
",<CABcZeBN9+YJaAz20_MfrbxTuMrGK3-Uj3tw=eTv96hZTw0EVLg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-11-07 09:23:17
5531,TLS 15+,108,846,"ClarificationElicitation,Agreement,Question,Agreement",680,680,"Agree with the example, but is that really a resumption scenario ?",<6cec1ed4-cce5-384a-6240-509285596d46@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 18:11:49
5532,TLS 15+,108,1009,"InformationProviding,NeutralResponse,NeutralResponse",676,676,"
I understand your point. What I am saying is that there are some side
effects of doing so that impacts use case scenarios that exist today. If
you cannot drop out, then you have two choices:
1) Always be a MITM, which you may not want to (e.g. consider sessions
with financial institutions)
2) Never be a MITM, which means you cannot do any of the network-based
security use cases we have highlighted

What you really want is the ability to do it more selectively.
",<6cec1ed4-cce5-384a-6240-509285596d46@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 18:11:49
5533,TLS 15+,108,1011,"InformationProviding,Answer,Answer",678,678,"It's the handshake process, which typically governs the associated
policy for the session (e.g. decrypt-and-inspect or do-not-decrypt). You
will try to determine whether the session should undergo inspection at
the time the ClientHello passes through the box, however sometimes, you
end up making a final (and different) decision when the ServerHello is
received. The decision is guided by policies configured for the
middlebox which may determine it based on various criteria (e.g.
category of the destination such as ""Financial Services"", geography, etc.)
",<6cec1ed4-cce5-384a-6240-509285596d46@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 18:11:49
5534,TLS 15+,108,1014,"InformationProviding,Disagreement,NeutralResponse",683,683,"Not always. The certificate audit may be for an external server you
connected to (outbound scenario). Even for inbound scenarios, you would
have to ensure you actually find the local servers and check their
certificates, which would imply a need for continuous scanning of all of
your infrastructure. I guess it's technically doable (similar to
vulnerability scanners), but it's difficult on an IPv6 enabled network
due to the size of the address space.
",<6cec1ed4-cce5-384a-6240-509285596d46@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 18:11:49
5535,TLS 15+,108,1016,"InformationProviding,Answer,Thanking,Answer",687,687,"Let me rephrase that: A determined attacker will be able to bypass the
above mechanism, however what we see in practice today is that malware
is increasingly using TLS to hide command and control traffic (not to
mention that it often gets downloaded over a TLS protected session to
begin with). I am not aware of specific examples of malware that try to
bypass inspection using techniques as described above (nor have I
looked), but it's certainly possible. There are other discrepancies that
will show up though when you start looking at the actual destination
reached and possibly do other analysis over the (encrypted) session.

Thanks

-- Flemming
",<6cec1ed4-cce5-384a-6240-509285596d46@cisco.com>,fandreas@cisco.com,0.0,1,4,2017-11-07 18:11:49
5536,TLS 15+,109,0,Social,,-1,"Folks,",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5537,TLS 15+,109,32,"InformationProviding,InformationProviding",,-1,"
I have just posted draft-ietf-tls-tls13-18.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5538,TLS 15+,109,33,"InformationProviding,Thanking,InformationProviding,ExtensionOfPrevious,ContextSetting,Thanking",32,-1,"
The only wire format change from -17 is that I removed the extra key
derivation stage computing resumption_psk from RMS. This was a
holdover from when we also had a resumption context. Now PSK for
connection N+1 = RMS from connection N. Thanks to Kazuho for
suggesting this simplification.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5539,TLS 15+,109,34,"InformationProviding,InformationProviding,ExtensionOfPrevious",33,-1,"
This draft also makes a number of minor editorial changes that
should make for easier reading.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5540,TLS 15+,109,35,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",34,-1,"
The two remaining open technical issues I am aware of are both
requirements issues:",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5541,TLS 15+,109,36,"Question,ExtensionOfPrevious,Question,ExtensionOfPrevious",35,-1,"
1. Can you resume with a different SNI than the one that the
connection was initiated with [current answer is ""no""]?",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5542,TLS 15+,109,37,"Question,ExtensionOfPrevious,Question,ExtensionOfPrevious",35,-1,"
2. Do you need an application profile to do post-handshake
client auth [current answer is ""no""]?",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5543,TLS 15+,109,38,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",37,-1,"
There has been a bunch of discussion of these on the list but no
consensus declarations from the chairs. These are easy to change
in the draft once the chairs make the call.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5544,TLS 15+,109,39,"InformationSeeking,ExtensionOfPrevious,ProposeAction",38,-1,"
As always, comments welcome.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5545,TLS 15+,109,41,"InformationProviding,InformationProviding",,-1,"
P.S. NSS will be skipping draft-17 and going right to -18. This
should happen before Seoul.",<CABcZeBMRNf3EEtKMus9Rhy=h0y7jjxm8w1AumU=0bwY1zyiXQQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-26 16:43:58
5546,TLS 15+,109,113,"Question,InformationProviding,Thanking,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,Thanking",,-1,"Hi,

Thank you for posting draft-18, and thank you for the simplification of RMS.

I have finished implementing resumption and early-data in picotls. The
effort started just before draft-17 was published, so it would be fair
to say that my effort is solely based on the up-to-date specification.

I am happy to report that all I have found is one minor issue.

The issue I saw is discordance between PSKIdentity.identity and
NewSessionTicket.ticket.

In draft-18, PSKIdentity.identity is defined as <0..2^16-1>. OTOH
NewSessionTicket.ticket is <1..2^16-1>.

Is there any reason to only allow a zero-length identity for the former?

My understanding is that when resuming a session, the value of
NewSessionTicket.ticket is sent as PSKIdentity.identity. So to me, it
seems more natural if the permitted range of the two arrays were
equal.

Please forgive me for the fuss if the difference is intentional.

2016-10-26 14:43 GMT+09:00 Eric Rescorla <ekr@rtfm.com>:",<CANatvzwtsDJdxzM0rEwrDK5XCdnjFPT7nx5bi5YLpjDSS+xLyQ@mail.gmail.com>,kazuhooku@gmail.com,0.0,0,20,2016-10-27 14:27:09
5547,TLS 15+,109,199,"Answer,Answer",113,113,"
Well, you could have an external PSK which I suppose might be zero length.

But I also wouldn't argue if we required this to be nonzero length.

-Ekr
",<CABcZeBOc5phUGGVvzk_xExXgVTZZhhiiHLrza4KypdL=vE-YNA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-27 16:30:09
5548,TLS 15+,109,309,"Agreement,Thanking,InformationProviding,Agreement,ProposeAction,Social,Thanking",199,199,"
Thank you for the clarification.

Yes, having a zero-length external PSK makes sense.

And for the same reason, I would argue that having a zero-length
session identifier makes sense as well. For a client-server pair that
only talk to the other, a zero-length session identifier would work
well.

So if we are going to align the ranges of the two arrays, it might
make more sense to allow zero-length for both of them, instead of
disallowing it.

Please forgive me for the nit-pick.
",<CANatvzzbL+-hok4ByCyM2r45dZ9EWLKyu_XMj9aosy18F9zPmQ@mail.gmail.com>,kazuhooku@gmail.com,0.0,0,20,2016-10-27 14:41:54
5549,TLS 15+,109,324,"NeutralResponse,InformationProviding,Disagreement",309,309,"
I think that it would be better to have a minimum size here.  Those
applications that don't want to store a value for the ticket identity
can agree to send a one octet value or something like that.  I don't
think that we need a zero length value.

https://github.com/tlswg/tls13-spec/pull/744",<CABkgnnUwwUz0j7w=Yb42wgXhZy+zweYuhXFa4RzMOatHQSPfFQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-10-28 17:04:39
5550,TLS 15+,110,32,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security WG of the IETF.",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5551,TLS 15+,110,33,"InformationProviding,InformationProviding,ExtensionOfPrevious",32,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-24.txt
Pages           : 155
Date            : 2018-02-15",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5552,TLS 15+,110,34,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5553,TLS 15+,110,35,"InformationProviding,InformationProviding,ExtensionOfPrevious",34,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5554,TLS 15+,110,36,"InformationProviding,InformationProviding,ExtensionOfPrevious",35,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-24
https://datatracker.ietf.org/doc/html/draft-ietf-tls-tls13-24",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5555,TLS 15+,110,37,"InformationProviding,InformationProviding,ExtensionOfPrevious",36,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-24",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5556,TLS 15+,110,38,"InformationProviding,InformationProviding,Social",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5557,TLS 15+,110,39,"InformationProviding,InformationProviding,ExtensionOfPrevious",38,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<151870261978.7622.15219442852417727221@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-02-15 05:50:19
5558,TLS 15+,110,41,"InformationProviding,InformationProviding,StateDecision",32,-1,"This version resolves all outstanding WGLC comments.  I will shortly move the draft to “Publication Requested”, which will pass it to Kathleen for her review and subsequently IETF LC.",<4FD1B8E2-DCB7-457D-ACB8-22CABF8ED032@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-02-15 08:53:07
5559,TLS 15+,111,14,"InformationProviding,StateDecision,InformationProviding",,-1,"Reviewer: Rich Salz
Review result: Ready

I have discovered an elegant little proof that shows TLS 1.3 is not secure,
unfortunately I do not have the room to fit it in this textbox.  I will send
email tomorrow...

No, seriously, this protocol has been designed with the help of world-class
cryptographers and academics. It has been analyzed with verification tools.  It
has been tweaked as necessary to get around middlebox ossification. It is
available in two highly popular browsers and at least one widely-used open
source toolkit.

This document is READY.",<151878937218.4977.11435268279455285944@ietfa.amsl.com>,rsalz@akamai.com,0.0,1,1,2018-02-16 05:56:12
5560,TLS 15+,112,0,Social,,-1,"Hi all,",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5561,TLS 15+,112,93,"InformationProviding,InformationProviding,ContextSetting",,-1,"
The following reviewers have assignments:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5562,TLS 15+,112,94,"InformationProviding,ContextSetting",,-1,"
For telechat 2018-08-02",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5563,TLS 15+,112,95,"InformationProviding,ExtensionOfPrevious,Answer,ExtensionOfPrevious",94,-1,"
Reviewer               Type      LC end     Draft
Elwyn Davies           Telechat  2018-02-26 draft-ietf-anima-autonomic-control-plane-16 *
Wassim Haddad          Telechat  2018-05-21 draft-ietf-v6ops-conditional-ras-05 *
Pete Resnick           Telechat  2018-07-13 draft-ietf-extra-imap-objectid-06 *
Robert Sparks          Telechat  2018-06-12 draft-ietf-oauth-device-flow-11 *
Dale Worley            Telechat  2018-06-26 draft-richer-vectors-of-trust-12 *",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5564,TLS 15+,112,96,"InformationProviding,ContextSetting",,-1,"
Last calls:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5565,TLS 15+,112,97,"ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious",96,-1,"
Reviewer               Type      LC end     Draft
Joel Halpern           Last Call 2018-07-30 draft-ietf-core-object-security-13 *
Jouni Korhonen         Last Call 2018-07-09 draft-ietf-netmod-acl-model-19
Matthew Miller         Last Call 2018-07-30 draft-sahib-451-new-protocol-elements-02
Ines Robles            Last Call 2018-08-13 draft-york-p-charge-info-08
Meral Shirazipour      Last Call 2018-07-24 draft-ietf-tls-tls13-vectors-06
Peter Yee              Last Call 2018-08-03 draft-ietf-regext-allocation-token-08",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5566,TLS 15+,112,98,InformationProviding,,-1,"
* Other revision previously reviewed
** This revision already reviewed",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5567,TLS 15+,112,99,"InformationProviding,ContextSetting",,-1,"
Next in the reviewer rotation:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5568,TLS 15+,112,100,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",99,-1,"
Jari Arkko
Stewart Bryant
Brian Carpenter
Elwyn Davies
Linda Dunbar
Francis Dupont
Roni Even
Tim Evens
Fernando Gont
Vijay Gurbani",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5569,TLS 15+,112,101,"InformationProviding,ContextSetting",,-1,"
The LC and Telechat review templates are included below:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5570,TLS 15+,112,102,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",101,-1,"
-- Begin LC Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair.  Please treat these comments just
like any other last call comments.",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5571,TLS 15+,112,103,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",102,-1,"
For more information, please see the FAQ at",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5572,TLS 15+,112,104,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",103,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5573,TLS 15+,112,105,"InformationProviding,InformationProviding,ExtensionOfPrevious",101,-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5574,TLS 15+,112,106,"InformationProviding,ExtensionOfPrevious",101,-1,"
Summary:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5575,TLS 15+,112,107,"InformationProviding,ExtensionOfPrevious",101,-1,"
Major issues:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5576,TLS 15+,112,108,"InformationProviding,ExtensionOfPrevious",101,-1,"
Minor issues:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5577,TLS 15+,112,109,"InformationProviding,ExtensionOfPrevious",101,-1,"
Nits/editorial comments:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5578,TLS 15+,112,110,"InformationProviding,ExtensionOfPrevious",101,-1,"
-- End LC Template --",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5579,TLS 15+,112,111,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",101,-1,"
-- Begin Telechat Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair. Please wait for direction from your
document shepherd or AD before posting a new version of the draft.",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5580,TLS 15+,112,112,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social",111,-1,"
For more information, please see the FAQ at",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5581,TLS 15+,112,113,"InformationProviding,ExtensionOfPrevious",112,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5582,TLS 15+,112,114,"InformationProviding,ExtensionOfPrevious",101,-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5583,TLS 15+,112,115,"InformationProviding,ExtensionOfPrevious",101,-1,"
Summary:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5584,TLS 15+,112,116,"InformationProviding,ExtensionOfPrevious",101,-1,"
Major issues:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5585,TLS 15+,112,117,"InformationProviding,ExtensionOfPrevious",101,-1,"
Minor issues:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5586,TLS 15+,112,118,"InformationProviding,ExtensionOfPrevious",101,-1,"
Nits/editorial comments:",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5587,TLS 15+,112,119,"InformationProviding,ExtensionOfPrevious",101,-1,"
-- End Telechat Template --",<153204009968.10498.14246730766692186097.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-19 15:41:39
5588,TLS 15+,113,0,Social,,-1,"Dear Team,",<DM6PR15MB2266E95752925D1E5D990FFC87870@DM6PR15MB2266.namprd15.prod.outlook.com>,Ipsito.Ghosh@ncr.com,0.0,0,63,2018-05-03 12:57:02
5589,TLS 15+,113,11,"InformationProviding,InformationProviding,ContextSetting",,-1,"
Some of the SSL providers are already rolled out TLS 1.3 ( OpenSSL , BoringSSL etc) .",<DM6PR15MB2266E95752925D1E5D990FFC87870@DM6PR15MB2266.namprd15.prod.outlook.com>,Ipsito.Ghosh@ncr.com,0.0,0,63,2018-05-03 12:57:02
5590,TLS 15+,113,12,"Question,Question,ExtensionOfPrevious",11,-1,"
Does the TLS 1.3 draft is finalized yet ?",<DM6PR15MB2266E95752925D1E5D990FFC87870@DM6PR15MB2266.namprd15.prod.outlook.com>,Ipsito.Ghosh@ncr.com,0.0,0,63,2018-05-03 12:57:02
5591,TLS 15+,113,13,"InformationProviding,InformationProviding,ExtensionOfPrevious",12,-1,"
https://tools.ietf.org/html/draft-ietf-tls-tls13-28",<DM6PR15MB2266E95752925D1E5D990FFC87870@DM6PR15MB2266.namprd15.prod.outlook.com>,Ipsito.Ghosh@ncr.com,0.0,0,63,2018-05-03 12:57:02
5592,TLS 15+,113,16,"Answer,InformationProviding,Answer,ContextSetting,ProposeAction",12,-1,"The IESG has approved the draft, but it still needs to complete the RFC editor phase where copy editing, changing of the boilerplate, assigning an RFC #, etc gets done to make it an RFC.  You can see the RFC editor’s queue here:",<BA2EEC4D-C7D7-4449-AB31-2DEBF3B9C8BC@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-03 09:08:24
5593,TLS 15+,113,39,"ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious",16,-1,"
https://www.rfc-editor.org/current_queue.php",<BA2EEC4D-C7D7-4449-AB31-2DEBF3B9C8BC@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-03 09:08:24
5594,TLS 15+,113,85,"Answer,InformationProviding,NeutralResponse","11,12",-1,"BoringSSL and OpenSSL have are draft versions which use different version
numbers from the final RFC, so as not to collide. Early experimental
deployment is generally useful to help inform the final standard and flush
out any non-compliant TLS 1.2 implementations that may cause deployment
difficulties. (This, of course, also means that any draft versions are
experimental and doomed to be replaced by the final RFC once published.)
",<CAF8qwaA6iBM6Xngm9o2=jog6Uue4Z=yfvJLkSNvWECAZVAumXg@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2018-05-03 15:21:41
5595,TLS 15+,114,6,"InformationProviding,ContextSetting,StateDecision,InformationProviding",,-1,"During Adam Roach’s AD review of draft-ietf-tls-tls13, he noted something about the HashAlgorithm and that made me go look at what was said in draft-ietf-tls-iana-registry-updates.  Turns out that 4492bis assigned some values draft-ietf-tls-iana-registry-updates was marking as reserved.  I have fixed that up in:
https://github.com/tlswg/draft-ietf-tls-iana-registry-updates/pull/65",<505FCF83-C92E-4A90-83BF-4B2C4796EBE6@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-16 14:01:48
5596,TLS 15+,114,7,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,ExtensionOfPrevious",6,-1,"
One further point brought out in discussions with Adam was that if we’re really closing the HashAlgorithm and SignatureAlgorithms registry we need to also mark 224-255 as deprecated.  Currently these are marked as Reserved for Private Use.  So the question is should we mark 224-255 as deprecated in these two registries?",<505FCF83-C92E-4A90-83BF-4B2C4796EBE6@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-16 14:01:48
5597,TLS 15+,114,22,"Answer,ProposeAction,Answer",7,7,"
With no hats, yes, we should mark those ranges as deprecated, since
there is no warning about them in the SignatureScheme registry and
the latter is the way of the future.

-Ben",<20180316200719.GA55987@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-16 15:07:19
5598,TLS 15+,114,24,Social,,-1,Hi Sean:,<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5599,TLS 15+,114,54,"Question,ClarificationElicitation,Question",7,-1,"
Quick question: does ""closing the registry"" not contradict catering towards crypto agility? What happens if, say, one wishes to add another signature scheme, besides Ed25519, to the mix. If there is no private field, does this mean that, e.g., Schnorr+BSI Brainpool256r1 is now ruled out?",<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5600,TLS 15+,114,55,"InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting",54,-1,"
My more serious concern is, however, that if the Private Use case is ""verboten"", there is no chance for people to signal private extensions (since IETF will just have killed this off).",<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5601,TLS 15+,114,56,"InformationProviding,ExtensionOfPrevious,InformationProviding",55,-1,"
I do not think it is prudent to have a slow process in place (IETF standardization) to effectuate crypto agility, if private use can already do this without waiting for 3-year public discussions and heated debate (if a weakness is discovered, dark forces will exploit this right away and won't wait for IETF to catch up to exploit an issue).",<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5602,TLS 15+,114,57,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,ContextSetting",56,-1,"
As case in point, suppose US Gov't wants to roll its own ""Suite A"" scheme, or if one wants to use TLS with something tailored towards the sensor world (which operates in quite a hostile environment for implementation security), how is one going to do this in context of TLS if the signaling required has just been removed?",<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5603,TLS 15+,114,58,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",57,-1,"
NOTE: this is not an invite for endless discussions on the legitimacy of whoever may wish a private extensions (it is private after all), it does question though the wisdom of removing the option for using this. If Zulu hour arrives, one should have tools to act...",<dc28999a-b476-474f-a12b-d5170df76dec@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 10:51:11
5604,TLS 15+,114,138,"InformationProviding,Answer,Answer",54,54,"
No. Private just means ""we're not going to allocate these code points, so
you should use them without coordination"".

The key point here is that this is a big space and so we're instead going
to make it easy for people to reserve code points by writing a stable spec,
that need not be an IETF standard, and that's what they should do.
",<CABcZeBOW9rJUqcx9NBnE9iy_xp14K_i=CN2LVrGe1cUwNCkv4Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-20 14:54:24
5605,TLS 15+,114,142,Social,,-1,Hi Eric:,<11a2dfc4-71b8-ec2d-f0cb-9b11615f7114@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 13:06:43
5606,TLS 15+,114,256,"InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction,Social,Question,ContextSetting",138,-1,"
I may have an incorrect impression about the code points, but, let us
say, one finds out an attack on one of the TLS1.3 algorithms and wishes
to swap the algorithm set for a new one (that is clearly specified, say,
""RS-Alg-X""). How does one do this if one marks 224-255 as deprecated.
How does one signal private use of ""RS-Alg-X"" now. If you could tell me,
please let me know, so that I feel more at ease with this. {This should
not be something where reliability is impossible to achieve).",<11a2dfc4-71b8-ec2d-f0cb-9b11615f7114@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 13:06:43
5607,TLS 15+,114,257,"Thanking,Thanking",,-1,"
Thanks!",<11a2dfc4-71b8-ec2d-f0cb-9b11615f7114@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2018-03-20 13:06:43
5608,TLS 15+,114,393,"InformationProviding,UnderstandingNegative,NeutralResponse",256,256,"
I don't understand the question. There are plenty of other code points, we
just no longer break them up into signature/hash pairs.
",<CABcZeBPR3T3s6yw2buB-Y9_caQz1ne0BBX41SvWjB8euxNgJTw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-20 17:26:52
5609,TLS 15+,114,394,"Answer,Answer",256,256,"
You publish a specification that meets the specification bar and file for a
code point.

-Ekr
",<CABcZeBPR3T3s6yw2buB-Y9_caQz1ne0BBX41SvWjB8euxNgJTw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-20 17:26:52
5610,TLS 15+,114,491,"InformationProviding,NeutralResponse,InformationProviding",138,-1,"I'm hesitant to call a 16-bit registry ""big"" in any context.
But if allocating a value requires a specification, that's probably okay.
(There aren't even close to 2^16 RFCs in total)
",<CAMqknA5a-y5Ftaxt16po_AkpPeZ1xqo=9_pD-Xs-z0nHaeCC9A@mail.gmail.com>,immibis@gmail.com,0.0,0,33,2018-03-24 19:20:21
5611,TLS 15+,114,494,"InformationProviding,ContextSetting,InformationProviding",,-1,"I had a quick chat with the iANA folks about the HashAlgorithm and SignatureAlgorithm, which we are effectively closing by marking all unregistered bits as either reserved or depcreated.  IANA suggested another way which is to just close the registry,   An example for the registry follows:",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5612,TLS 15+,114,529,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",494,-1,"
TLS HashAlgorithm Registry",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5613,TLS 15+,114,530,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",494,-1,"
Registration Procedure(s)",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5614,TLS 15+,114,531,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",494,-1,"
Closed see [this-to-be-rfc]",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5615,TLS 15+,114,532,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",494,-1,"
Reference",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5616,TLS 15+,114,533,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",532,-1,"
[RFC5246][this-to-be-rfc]",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5617,TLS 15+,114,534,"ContextSetting,StateDecision,InformationProviding,ExtensionOfPrevious",,-1,"
We’d make the following changes to the draft:",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5618,TLS 15+,114,535,"ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",534,-1,"
OLD:
[SHALL update/has updated] the TLS HashAlgorithm Registry to list
values 7-223 as ""Reserved"" and the TLS SignatureAlgorithm registry
to list values 4-223 as ""Reserved”.",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5619,TLS 15+,114,536,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",535,-1,"
NEW:
[SHALL close/has closed] the TLS HashAlgorithm Registry and
the TLS SignatureAlgorithm registries for new assignments.",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5620,TLS 15+,114,537,"InformationProviding,ExtensionOfPrevious,InformationProviding",536,-1,"
I personally think this is cleaner that reserving the values.  But, it does mean that this registries are closed for assignments.",<77875DAA-EE63-4EBA-8951-61F89D9FBAD8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 10:07:16
5621,TLS 15+,114,557,"Question,InformationProviding,Disagreement,NeutralResponse,Question,NeutralResponse",494,494,"
This seems a bit of a strange thing to do, if it's going to be closed as soon
as the RFC is published then why have it?  A registry implies you can register
things in it, while this will be just a publication of existing values with no
ability to register new ones.  If it's that then it's a List of Algorithm IDs,
not a Registry.

Peter.",<1521713417877.45777@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-03-22 10:10:36
5622,TLS 15+,114,582,"ClarificationElicitation,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse",557,557,"
Peter,

I think you’re saying that once the registries are closed we don’t call them registries?  I think I can get the registry title to be:

TLS HashAlgorithm - Registry Closed

spt",<21D7BBB3-5B19-4721-B08A-9AD887F37F99@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-22 11:42:00
5623,TLS 15+,114,584,"InformationProviding,Agreement,Agreement",557,-1,"I am inclined to agree with Peter.  It doesn't quite seem like a registry if the very first time there is a list of things in it, that list is now frozen.",<EBD5C0A9-FE81-4823-BDBA-88F575467B97@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-22 12:53:22
5624,TLS 15+,114,587,"ClarificationElicitation,ExtensionOfPrevious,Question",584,-1,"
Why are we closing/reserving all the bits?",<EBD5C0A9-FE81-4823-BDBA-88F575467B97@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-22 12:53:22
5625,TLS 15+,114,607,"InformationSeeking,ClarificationElicitation,InformationProviding,Answer,ProposeAction,Answer",587,587,"
Huh?  These are for the old TLS 1.2 separately negotiated Hash and
Signature registries, that have been pouplated for quite some time.
We need to close them or reserve ""all"" free values in order to not
conflict with the new TLS 1.3 SignatureScheme registry that uses
combined 16-bit codepoints, but share space on the wire.

Closing the registries does seem to be a better match for our
intended future for these registries, but I am curious if you asked
what the procedure would be on the off chance that we did need to
reopen them for some reason.

-Ben",<20180323125758.GE25919@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-23 07:57:59
5626,TLS 15+,114,609,"NeutralResponse,InformationProviding",607,-1,So we have two registries that share a number space.,<FE8B999F-6A3D-4E7F-93A2-A8A2A20C5BED@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-23 12:59:57
5627,TLS 15+,114,612,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",609,-1,"
Sounds like the right solution is for the registries to coordinate.",<FE8B999F-6A3D-4E7F-93A2-A8A2A20C5BED@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-23 12:59:57
5628,TLS 15+,114,658,"InformationSeeking,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding",612,612,"
Well, there are three registries involved -- two existing one octet
registries that apply to TLS 1.2 and below, and a new TLS 1.3 registry
with two octets of space.  The original proposal by the authors was to
mark all the unallocated entries in the existing two registries as
either reserved or deprecated.  IANA noted that this is effectively the
same as closing the registries in terms of the difficulty of making
further registrations, though I am not sure that the authors replied to
the question that I think I asked about what the procedure is for
re-opening a registry should a need arise to allocate an additional
codepoint from it.

Anyway, it seems rather challenging to try to keep all three registries
open and coordinate amongst them, given that the new two-octet registry
has a pretty low ""specification required"" registration policy, and
allocations from the existing registries would apparently both require a
""contiguous"" 256 values to be free in the new registry and then ""knock
out"" those 256 values from further use.  This would eat up the free
space in the new registry relatively quickly, and presumably would not
be compatible with a weak ""specification required"" policy (which is
currently the policy for values 64-223).  If we agree that
""specification required"" is not appropriate for the existing one-octet
registries in a proposed ""coordinate"" scenario, then I don't see what
the policy would be other than ""standards action"" (the current policy
for values 0-63).  And if ""standards action"" is the bar, that would
require the IETF to do work on TLS 1.2 in order to need a new
registration, but this WG is chartered primarily for TLS 1.3 and
""require significant justification"" to take on work for older versions.
So it's extremely unclear to me that there's a plausible scenario in
which a registration in the existing registries would occur.  Such a
case could presumably reopen the existing registries for its use anyway,
given the level of review that would be needed.

So, in summary, closing these registries seems to adequately reflect (my
understanding of) our expectations for what will happen to them.  I'm
curious to know how your understanding differs.

-Ben",<ef364e4b-d8bc-c8fe-5d2a-0e78fb30631c@akamai.com>,bkaduk@akamai.com,0.0,1,2,2018-03-26 12:18:06
5629,TLS 15+,114,660,"ClarificationElicitation,InformationProviding,Disagreement,Question,Disagreement",658,-1,Is it now impossible adding new things to TLS 1.2?  I don't believe the WG understood that this would be the situation.  So I disagree with your claim that this was our understanding of the situation.,<51277A20-589E-472C-8069-F5B666373F45@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-26 17:24:54
5630,TLS 15+,114,663,"Question,InformationProviding,ExtensionOfPrevious,Question",660,-1,"
Okay, it turns out that David's neat hack make some things harder. So what?",<51277A20-589E-472C-8069-F5B666373F45@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-03-26 17:24:54
5631,TLS 15+,114,679,"InformationProviding,Answer,Answer","660,663",663,"
The intent was that additions to TLS 1.2 would just use the new registry
too (since the hack can be backported easily), e.g.
draft-ietf-tls-rfc4492bis-17. Though, yeah, it is a bit awkward text-wise.",<CAF8qwaBRq-PizfszZ5UENrt1YNLd0m6XPu-um_VvTQbFz1Z1+w@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2018-03-26 17:29:25
5632,TLS 15+,114,700,"InformationProviding,Answer,ContextSetting,Answer",660,660,"
I was under the impression that the WG was well aware, e.g., in my
comments on the 2nd WGLC, where I say ""It looks like we no longer do
anything to obsolete/reserve/similar the HashAlgorithm and
SignatureAlgorithm registries; was that just an editorial mixup or an
intended change?"", and Ekr replies with a link to the appropriate
section of draft-ietf-tls-iana-registry-updates, as seen at
https://www.ietf.org/mail-archive/web/tls/current/msg23865.html
",<9901243e-1dbf-cc4a-2dc2-bb054fc03d1d@akamai.com>,bkaduk@akamai.com,0.0,1,2,2018-03-26 12:36:31
5633,TLS 15+,114,701,"NeutralResponse,UnderstandingNegative,Answer",663,663,"
I thought that's what I was asking you -- you seem to feel that we
should care about this, and I still don't understand why.

-Ben",<9901243e-1dbf-cc4a-2dc2-bb054fc03d1d@akamai.com>,bkaduk@akamai.com,0.0,1,2,2018-03-26 12:36:31
5634,TLS 15+,114,716,"NeutralResponse,ProposeAction,StateDecision,InformationProviding",658,658,"
I’ll have to ask, but I suspect that someone who wanted a new assignment would draft an I-D that assigned the code point and it would go through the process.  I.e., I think it’s mostly symbolic.

spt",<BAD2633A-DB87-4944-A320-DC4BE5CFF09C@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-03-27 07:13:10
5635,TLS 15+,115,61,"InformationProviding,ContextSetting,InformationProviding",,-1,"As you might know, CFRG has been working on new curves (the document
has been sent to IRSG) and is working on signatures (main issues seem
to be selecting prehash for prehashed version of 448-bit signatures
and KDF for 448-bit signatures).",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5636,TLS 15+,115,62,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious",61,-1,"
I have been thinking how to integrate this work into TLS.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5637,TLS 15+,115,63,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",62,-1,"
Diffie-Hellman:
There is already a WG draft about this. The one remaining technical
issue seems to be wheither to share the curves with signatures or
dedicate those for DH.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5638,TLS 15+,115,64,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",63,-1,"
I propose dedicating the codepoints (like draft currently does). The
complexity of implementing signatures is significantly above
complexity of implementing ECDH. This is magnified by the
differences between the signature primitive (one is based on SHA-512,
the other on some still-TBD KDF).",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5639,TLS 15+,115,65,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",64,-1,"
It is not like there is imminent shortage of curve codepoint space,
as we have >64,000 codepoints free.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5640,TLS 15+,115,66,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",65,-1,"
There's also editorial issue of tracking the renaming of the DHFs
in CFRG-CURVES (Curve25519->X25519 and similarly for Curve448).",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5641,TLS 15+,115,67,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",62,-1,"
Signatures:
The base algorithm for signatures work is EdDSA. It looks like
Ed25519 is standardized as-is (at least compatible enough for
existing verifiers to be used). Then there is version that first
does SHA-512. For 448-bit versions, the KDF and prehash to be
done first (for version that does prehashing) is TBD.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5642,TLS 15+,115,68,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",67,-1,"
So, there are four primitives: Ed25519, Ed25519ph, Ed448 and
Ed448ph. And keys MUST NOT be mixed between those.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5643,TLS 15+,115,69,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",68,-1,"
I propose the following:
- EdDSA uses one SignatureAlgorithm value (5?[1]).
- There will be new curves for EdDSA, one for Ed25519/Ed25519ph and
another for Ed448/Ed448ph
- If there is ever EdDSA instantiation with Edwards448 curve (the same
one Ed448 uses) with another KDF, it gets a new curve distinct from
Ed448/Ed448ph.
- The HashAlgorithm is always 0, or the HashAlgorithm is always 0 or
value matching the prehash (but the prehash is always done once[2]).
[TBD: resolve this]
- To be useful, one needs PKIX SPKI representation for the keys. There
is a draft about that, to be progressed via other channels (Security
area presumably, as PKIX WG is no more).",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5644,TLS 15+,115,70,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",69,-1,"
[1] TLS 1.3 introduces one new value for RSA-PSS (which is
IIRC marked as 4 in the spec).",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5645,TLS 15+,115,71,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",69,-1,"
[2] Technically Ed25519 and Ed448 do have prehash function PH, it
just is the identity function.",<20151015130939.GA19330@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-15 16:09:39
5646,TLS 15+,115,154,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ProposeAction",69,69,"
I've been thinking about the issue of how to handle SignatureAndHashAlgorithm values better. I think this time, I'd like to propose going the opposite way we'd normally want to move: let's consider enumerating all combinations of HashAlgorithm+SignatureAlgorithm instead of having independent values. We're moving to signature algorithms that don't have arbitrary hashes, so the current system isn't really ideal anymore.

Current draft:
https://tools.ietf.org/html/draft-ietf-tls-tls13-09#section-6.3.2.1  (text)
https://tools.ietf.org/html/draft-ietf-tls-tls13-09#page-88  (full registry)
enum {
none(0),
md5_RESERVED(1),
sha1(2),
sha224_RESERVED(3),
sha256(4), sha384(5), sha512(6),
(255)
} HashAlgorithm;

enum {
anonymous_RESERVED(0),
rsa(1),
dsa(2),
ecdsa(3),
rsapss(4),
(255)
} SignatureAlgorithm;

struct {
HashAlgorithm hash;
SignatureAlgorithm signature;
} SignatureAndHashAlgorithm;

Proposed replacement backwards-compatible registry:
struct {
anonymous_RESERVED(0x0000),
rsa_nohash(0x0001),
dsa_nohash(0x0002),
ecdsa_nohash(0x0003),
rsapss_nohash(0x0004),
md5_RESERVED (0x0100..0x01FF),
rsa_sha1(0x0201),
dsa_sha1(0x0202),
ecdsa_sha1(0x0203),
rsapss_sha1(0x0204),
sha224_RESERVED (0x0300..0x03FF),
rsa_sha256(0x0401),
dsa_sha256(0x0402),
ecdsa_sha256(0x0403),
rsapss_sha256(0x0404),
rsa_sha384(0x0501),
dsa_sha384(0x0502),
ecdsa_sha384(0x0503),
rsapss_sha384(0x0504),
rsa_sha512(0x0601),
dsa_sha512(0x0602),
ecdsa_sha512(0x0603),
rsapss_sha512(0x0604),
(0xFFFF)
} SignatureAndHashAlgorithm;

New values could be assigned specific combinations as needed. This would also let hashes & signatures be deprecated independently easily, e.g. allow rsa_sha1 but prohibit rsapss_sha1 (it's new, so it probably should be from the start).
",<201510151517.52101.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-10-15 15:17:51
5647,TLS 15+,115,256,"InformationProviding,Disagreement,Disagreement",154,154,"
I am not in favor of this change. Because we can already indicate
combinations, this
doesn't seem to add significant new value. If we need to indicate
""signature algorithm
without a hash"" then a ""none"" hash is the simplest solution.

-Ekr",<CABcZeBMKsHkWtGxYJm16Lww49a9j314RRVuuLQYYXFg+vbRBLA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-10-15 12:24:58
5648,TLS 15+,115,293,"InformationProviding,ContextSetting,InformationProviding",63,63,"
Okay, did a review of draft-ietf-tls-curve25519 (since it still
doesn't seem to have been WGLC'd):
",<20151017123053.GA21936@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-17 15:30:53
5649,TLS 15+,115,294,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding","293,63",63,"
Major issues:

None

Minor issues:

- The functions got renamed in cfrg spec (which seems to just
be concluding IESG review[1]).
- Some references look pretty obsolete (e.g. cfrg-curves from
January?).
- Maybe add an example key exchanges (just copy test vectors
out of cfrg-curves and rename things a bit to fit the way
values are used in TLS)?
",<20151017123053.GA21936@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-17 15:30:53
5650,TLS 15+,115,295,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","294,63",63,"
[1] In chacha20-poly1305 document processing, IESG review
was followed by sending the spec to the RFC editor.
",<20151017123053.GA21936@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-17 15:30:53
5651,TLS 15+,115,311,"InformationProviding,NeutralResponse,InformationProviding",293,293,"
Note that draft-ietf-tls-curve25519 is getting merged into draft-ietf-tls-rfc4492bis.

Note that the cfrg-curves draft’s RFC5742-review (aka the end-run review) ended up in “approved no problem” on Thursday:
https://datatracker.ietf.org/doc/conflict-review-irtf-cfrg-curves/history/
Basically, now the cfrg draft will just need to work its way through the RFC editor’s publication queue.

spt",<70D5E7FA-27E0-4DEA-9F37-F50006E07757@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-10-17 19:25:46
5652,TLS 15+,115,378,"ClarificationElicitation,Question",311,311,"
Do we also intend to put CFRG signatures work into that?
",<20151018122552.GA22896@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-18 15:25:52
5653,TLS 15+,115,379,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",311,311,"
Might be a good idea to merge the CFRG work already. The DHFs are
stable. The characteristics of the signature scheme are known well-
enough to already put the needed stuff in (if this is to be done),
even if CFRG draft is still under work.

My thoughts on how CFRG sigs are to be put in:
- Reuse the ECDSA ciphersuites.
- New signature algorithm EdDSA.
- The hash algorithm is always 0 (None), even for Ed25519ph/
Ed448ph.
- Two new curves, Ed25519 and Ed448, distinct from X25519 and
X448.
- If new hashes for existing curves are ever defined, those
will get their own NamedCurve value.
- Reference document specifying new algorithm for putting EdDSA
public keys into PKIX SPKI.
- All keys and signatures are octet strings with no internal
structure when handled outside the signing and verification
functions.
- Don't use Ed25519 keys as Ed25519ph keys (and similarly for
Ed448/Ed448ph). The CFRG spec specifically warns about this.
",<20151018122552.GA22896@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-18 15:25:52
5654,TLS 15+,115,380,"InformationProviding,NeutralResponse,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",311,311,"
And how the existing Curve25519 ECDH draft did things:
- Reuse the ECDHE ciphersuites.
- The X25519/X448 native point format is interpretted as
""uncompressed"".
- Two new curves, X25519 and X448 (different names in that
draft tho).
- All keys are handled as octet strings with no internal structure
outside the DHF.
- There are no prefix bytes, so all fields containg public keys
(ECPoint.point) and the ECDH result Z are both always 32 or 56
octets.
",<20151018122552.GA22896@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-18 15:25:52
5655,TLS 15+,115,381,"ClarificationElicitation,InformationProviding,NeutralResponse,Question,InformationProviding",311,311,"
Also, on reading the document, in numerious place it places the
restriction that RSA end-entity certificate MUST be signed with
RSA and ECDSA end-entity certificate MUST be signed with ECDSA.

Why is this? To me, that kind of thing sounds like a leftover
from TLS 1.1 days, when signature negotiation was a lot less
flexible. It also seems like a special case where uniform
handling would work just fine.

Also, I think it explicitly contradicts TLS 1.2 RFC, which
states that TLS 1.1 did have that restriction and then
notes it is lifted (it also updates RFC4492).
",<20151018122552.GA22896@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-18 15:25:52
5656,TLS 15+,117,0,Social,,-1,"All,",<5F30CC9E-EFFC-4A36-801F-A17B9DDF85E0@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:30:54
5657,TLS 15+,117,5,"InformationProviding,InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social",,-1,"
This is the working group last call for the ""Example Handshake Traces for TLS 1.3"" draft available at https://datatracker.ietf.org/doc/draft-ietf-tls-tls13-vectors/.  Please review the document and send your comments to the list by 2359 UTC on 22 May 2018.",<5F30CC9E-EFFC-4A36-801F-A17B9DDF85E0@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:30:54
5658,TLS 15+,117,6,"Thanking,Thanking",,-1,"
Thanks - J&S",<5F30CC9E-EFFC-4A36-801F-A17B9DDF85E0@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:30:54
5659,TLS 15+,117,8,"InformationProviding,NeutralResponse,ContextSetting",5,-1,I noted two things that I didn’t think we needed to wait for:,<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5660,TLS 15+,117,31,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting",8,-1,"
1. The draft needs an IANA Considerations section to at least get through the GENART process (the section can later be removed during AUTH48 if requested).  I submitted a PR to address this:",<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5661,TLS 15+,117,32,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",31,-1,"
https://github.com/tlswg/draft-ietf-tls-tls13-vectors/pull/4",<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5662,TLS 15+,117,33,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",8,-1,"
2. Intended RFC status",<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5663,TLS 15+,117,34,"InformationProviding,ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",33,-1,"
I don’t have a strong opinion on this, but many of the “example"" drafts are Informational, but some are BCP and this one current indicates Proposed Standard.  Let the list know if you’ve got strong feelings one way or another.  I submitted an issue to make sure we track this this:",<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5664,TLS 15+,117,35,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",34,-1,"
https://github.com/tlswg/draft-ietf-tls-tls13-vectors/issues/5",<CE4D387B-A4E8-425D-8FC5-7706C1D6307F@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-08 12:49:03
5665,TLS 15+,117,38,"NeutralResponse,NeutralResponse",34,-1,"I dislike standard, and am fine with Informational or BCP.",<1334EA4C-9432-49E4-9DC4-DEEDF1C3C0AF@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-05-08 16:55:55
5666,TLS 15+,117,40,"NeutralResponse,Disagreement",38,-1,"If it's intended to be a ""test-vector"", then by all means it should be a standard.",<3D980955-3C7A-46C2-A43E-1CC4A6BE02BD@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2018-05-08 20:26:28
5667,TLS 15+,117,57,"NeutralResponse,InformationProviding,ExtensionOfPrevious,Agreement,NeutralResponse","38,40",-1,"
If it's just for illustration - Informational or BCP is fine.",<3D980955-3C7A-46C2-A43E-1CC4A6BE02BD@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2018-05-08 20:26:28
5668,TLS 15+,117,58,NeutralResponse,,-1,"
My $0.02.",<3D980955-3C7A-46C2-A43E-1CC4A6BE02BD@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2018-05-08 20:26:28
5669,TLS 15+,117,71,"ClarificationElicitation,Agreement,InformationProviding,Agreement,UnderstandingNegative",38,38,"
Agree regarding standard.

I don't understand why BCP would be used for this.  Besides, we probably
don't want to enshrine some of the choices we made in NSS as ""best
practice"".  I'm not saying that those choices aren't defensible, but that
might be going too far.",<CABkgnnW3FKfuGqa8iaaWA9SVz7BLVOwLAD+d7NsdftgQN9tEVw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-09 00:30:52
5670,TLS 15+,117,92,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision",71,71,"
Since this draft is really about “examples” (i.e., it’s just for illustration), I’m going to suggest that Martin go ahead and merge the following PR that I submitted changing the intended status:
https://github.com/tlswg/draft-ietf-tls-tls13-vectors/pull/6

Once a new version is spun, I’ll push the draft toward Ben.

spt",<742B3DCC-6AF4-48DB-82F9-760DEF7E52F4@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-29 10:35:28
5671,TLS 15+,117,113,ExtensionOfPrevious,71,71,that,<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5672,TLS 15+,117,114,ExtensionOfPrevious,71,71,> > might be going too far.,<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5673,TLS 15+,117,116,ExtensionOfPrevious,71,92,"> Since this draft is really about “examples” (i.e., it’s just for",<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5674,TLS 15+,117,124,"Question,Question,InformationProviding,NeutralResponse,ProposeAction",92,-1,"The thought occurs, do you want a version with the final version number in
it?  I see that TLS 1.3 is in front of the RFC editor right now, so I don't
anticipate any changes and changing the examples creates a lot of churn
(check out the diffs on this draft to get an idea).",<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5675,TLS 15+,117,125,InformationProviding,,71,"> > On May 8, 2018, at 20:30, Martin Thomson <martin.thomson@gmail.com>
wrote:
> > On Wed, May 9, 2018 at 2:56 AM Salz, Rich <rsalz@akamai.com> wrote:
> >> I dislike standard, and am fine with Informational or BCP.
> > Agree regarding standard.
> > I don't understand why BCP would be used for this.  Besides, we probably
> > don't want to enshrine some of the choices we made in NSS as ""best
> > practice"".  I'm not saying that those choices aren't defensible, but",<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5676,TLS 15+,117,126,ExtensionOfPrevious,92,92,"illustration), I’m going to suggest that Martin go ahead and merge the
following PR that I submitted changing the intended status:",<CABkgnnVsze+cq6717fkDiY577jRUxe3S=gXbPCnVA9gg7yzgyg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:05:48
5677,TLS 15+,117,128,"NeutralResponse,Answer",124,-1,I think changing the Intended Status is all we’re looking.,<72905ABB-0709-4AE7-86D3-5492177377B4@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2018-05-29 21:22:26
5678,TLS 15+,117,167,"NeutralResponse,NeutralResponse",128,-1,"Ack, that makes it easier for me :)",<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5679,TLS 15+,117,178,ExtensionOfPrevious,124,124,in,<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5680,TLS 15+,117,179,ExtensionOfPrevious,124,124,"> > it?  I see that TLS 1.3 is in front of the RFC editor right now, so I",<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5681,TLS 15+,117,180,ExtensionOfPrevious,124,124,don't,<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5682,TLS 15+,117,210,Question,92,124,"> > On May 29, 2018, at 21:05, Martin Thomson <martin.thomson@gmail.com>
wrote:
> > The thought occurs, do you want a version with the final version number",<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5683,TLS 15+,117,211,ExtensionOfPrevious,124,71,"> > anticipate any changes and changing the examples creates a lot of churn
> > (check out the diffs on this draft to get an idea).
> > On Wed, May 30, 2018 at 12:35 AM Sean Turner <sean@sn3rd.com> wrote:
> >>> On May 8, 2018, at 20:30, Martin Thomson <martin.thomson@gmail.com>
> > wrote:
> >>> On Wed, May 9, 2018 at 2:56 AM Salz, Rich <rsalz@akamai.com> wrote:
> >>>> I dislike standard, and am fine with Informational or BCP.
> >>> Agree regarding standard.
> >>> I don't understand why BCP would be used for this.  Besides, we",<CABkgnnWTv47HQAgG=gCJL1vNZbmMBpO=BxYGQtuEzaN45zPZDg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-05-30 11:26:52
5684,TLS 15+,118,48,"InformationProviding,InformationProviding,ContextSetting",,-1,"Thinking through this some more, I'm skeptical that this is going to be
that useful as a debugging-only feature.

In my experience, there are four major scenarios for diagnosing this kind
of failure. Under the assumption that you control one end, the other end
can be:

1. A live endpoint.
2. A testing endpoint someone has put up.
3. An endpoint that someone is actively working on with you.
4. An endpoint you control (e.g., you're running it on your own machine).

If this is a debug-only feature, then it won't be available in case #1, and
it's not that helpful in case 4, because you can read the logs, errors,
etc. yourself. For the same reason, it's not really that helpful in case
#3, because you can just ask the person you're working with to read the
logs, so this leaves case #2, which I agree can be annoying. However, what
we've started doing with QUIC is just to have the endpoints dump their logs
so that they're available on a co-located Web site. That gives you a lot
more information than you'd probably want to fit in an alert message (e.g.,
you can print out the keying material, etc.)

I guess there might be some intermediate category 1.5 that's kind of in
production so you don't want to print out complete logs, but you'd like
more detail than you would probably want to expose in general, but my
experience is that that's not super-common.

-Ekr
",<CABcZeBNB50jY1odzgVZVKqn8F7TCj1b+A_95yG6f=Nde0KVv+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-31 06:42:20
5685,TLS 15+,118,101,"NeutralResponse,InformationProviding,NeutralResponse",48,48,"
I have the feeling the people who have commented on this were talking from
real-world experience, and in the example I gave it was exactly case #1.  This
was a live, large-scale production environment by a major ecommerce
organisation (details fudged somewhat to avoid identifying anyone, but
everyone here would know the name), and the only way to get things working was
to spend several weeks randomly tweaking every conceivable option on the
client until things started working, because the only thing the server would
say was ""Handshake failure"".  The client-side organisation still has no idea
what made things work, they've narrowed it down by trial and error to about
half a dozen things they had to change, but that's it.

If they'd been able to get the server operators to turn on extended-alert for
even just a single handshake it would have avoided several weeks' effort and a
fix that even now is pure guesswork.
",<1522560535687.32559@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-04-01 05:29:34
5686,TLS 15+,118,103,"Disagreement,InformationProviding,NeutralResponse",48,48,"
Except that these people are EDI companies, not TLS experts.  They have
neither the expertise nor the inclination to help debug TLS issues.  What they
will do is enable debug on the server so the client can sort things out, but
they're not going to devote any effort to sorting out the problem at their
end.

Note that temporarily enabling debug on a live endpoint isn't a big issue,
everything will continue to operate as before except for the one client that
requests debug-level alerts, and that knows what it's up for because it
explicitly asked for it.
",<1522560535687.32559@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-04-01 05:29:34
5687,TLS 15+,118,104,"Disagreement,InformationProviding,Disagreement",48,48,"
Actually it leaves 1, 2, and 3.  4 is kinda pathological, so really the
problem is ""all of the cases"".

Peter.",<1522560535687.32559@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-04-01 05:29:34
5688,TLS 15+,118,118,InformationProviding,103,103,Asunto: Re: [TLS] Expanded alert codes. [Was Re: Genart last call review of draft-ietf-tls-tls13-24],<1522569526813.65723@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 07:58:47
5689,TLS 15+,118,173,"NeutralResponse,InformationProviding,NeutralResponse",103,103,"
And for the malicious user that, knowing the server is currently in debug mode and returning extended errors, can more easily perform attacks on it...

De: TLS <tls-bounces@ietf.org> en nombre de Peter Gutmann <pgut001@cs.auckland.ac.nz>
Enviado: domingo, 1 de abril de 2018 7:29
Para: Eric Rescorla",<1522569526813.65723@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 07:58:47
5690,TLS 15+,118,176,NeutralResponse,48,48,"
I have the feeling the people who have commented on this were talking from
real-world experience, and in the example I gave it was exactly case #1.  This
was a live, large-scale production environment by a major ecommerce
organisation (details fudged somewhat to avoid identifying anyone, but
everyone here would know the name), and the only way to get things working was
to spend several weeks randomly tweaking every conceivable option on the
client until things started working, because the only thing the server would
say was ""Handshake failure"".  The client-side organisation still has no idea
what made things work, they've narrowed it down by trial and error to about
half a dozen things they had to change, but that's it.

If they'd been able to get the server operators to turn on extended-alert for
even just a single handshake it would have avoided several weeks' effort and a
fix that even now is pure guesswork.
",<1522569526813.65723@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 07:58:47
5691,TLS 15+,118,178,Disagreement,48,48,"
Except that these people are EDI companies, not TLS experts.  They have
neither the expertise nor the inclination to help debug TLS issues.  What they
will do is enable debug on the server so the client can sort things out, but
they're not going to devote any effort to sorting out the problem at their
end.

Note that temporarily enabling debug on a live endpoint isn't a big issue,
everything will continue to operate as before except for the one client that
requests debug-level alerts, and that knows what it's up for because it
explicitly asked for it.
",<1522569526813.65723@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 07:58:47
5692,TLS 15+,118,179,Disagreement,48,48,"
Actually it leaves 1, 2, and 3.  4 is kinda pathological, so really the
problem is ""all of the cases"".

Peter.

TLS mailing list
TLS@ietf.org
https://www.ietf.org/mailman/listinfo/tls",<1522569526813.65723@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 07:58:47
5693,TLS 15+,118,194,"NeutralResponse,NeutralResponse",173,173,"
If there's someone on the Internet who can scan every TLS server on the planet
once a minute to see a brief debug window open up, and then perform something
like a million-message-attack using a single debug message, then they're kinda
wasting their abilities in attacking TLS servers...

Peter.",<1522570413761.44728@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-04-01 08:14:12
5694,TLS 15+,118,216,"Answer,InformationProviding,NeutralResponse",194,-1,"Of course not. I mean an attacker who is specially interested in this server and knows that someone has requested a debug window on it.

De: Peter Gutmann <pgut001@cs.auckland.ac.nz>
Enviado: domingo, 1 de abril de 2018 10:14
Para: Ion Larranaga Azcue; Eric Rescorla",<1522576530994.95464@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 09:55:31
5695,TLS 15+,118,256,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",103,-1,"Anyway, I don't mean I'm against the idea of the extended errors extensions... Only that let's not take it lightly. It can be a good debugging tool but also a risky one.

De: TLS <tls-bounces@ietf.org> en nombre de Ion Larranaga Azcue <ilarra@s21sec.com>
Enviado: domingo, 1 de abril de 2018 11:55
Para: Peter Gutmann; Eric Rescorla",<1522576853459.77882@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 10:00:53
5696,TLS 15+,118,257,InformationProviding,,-1,"
Of course not. I mean an attacker who is specially interested in this server and knows that someone has requested a debug window on it.

De: Peter Gutmann <pgut001@cs.auckland.ac.nz>
Enviado: domingo, 1 de abril de 2018 10:14
Para: Ion Larranaga Azcue; Eric Rescorla",<1522576853459.77882@s21sec.com>,ilarra@s21sec.com,0.0,0,23,2018-04-01 10:00:53
5697,TLS 15+,118,336,"NeutralResponse,InformationProviding,Agreement",101,101,"
Sure. I am also talking from real world experience.
",<CABcZeBPH6zO1kQnduR2YLGPD1qOu6bAvGSqmwfNUJ-J4j5xh+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-01 06:53:07
5698,TLS 15+,118,338,"NeutralResponse,InformationProviding,NeutralResponse",101,101,"
Maybe. I've spent a fair amount of time trying to diagnose failures where
I know precisely the line of code that generated the failure, and it can
still
be quite difficult.
",<CABcZeBPH6zO1kQnduR2YLGPD1qOu6bAvGSqmwfNUJ-J4j5xh+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-01 06:53:07
5699,TLS 15+,118,340,"NeutralResponse,NeutralResponse",103,103,"
I'm not suggesting that they ask the counterparty to diagnose the problem,
just send the relevant logs. It seems like the ask of ""turn on logging and
give
me the results"" and ""turn on extended debugging"" are fairly similar.

-Ekr",<CABcZeBPH6zO1kQnduR2YLGPD1qOu6bAvGSqmwfNUJ-J4j5xh+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-01 06:53:07
5700,TLS 15+,118,363,"Question,InformationProviding,Question,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction",,-1,"Reviving this discussion, if I write up a draft for this what's going to
happen to it?  Will it get published, or shouted down?  The reason I'm asking
is that I've just spent the past three days debugging a TLS issue that's
pretty much a poster child for why extended alerts are needed, it was
something that would have been resolved in a single handshake exchange with
extended alerts, but took three days to sort out without them.  The sequence
was as follows:",<1526904555196.87951@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-21 12:09:28
5701,TLS 15+,118,364,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",363,-1,"
Client sends standard client hello.
Server responds with handshake failed alert.",<1526904555196.87951@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-21 12:09:28
5702,TLS 15+,118,365,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",363,-1,"
The same client has been running for years, and connects fine to any number of
servers, and openssl and some web browsers connect fine to the server.  The
only message exchanged was the hello, so there's zero security issues in
providing extended alerts.",<1526904555196.87951@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-21 12:09:28
5703,TLS 15+,118,366,"InformationProviding,ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,StateDecision",365,-1,"
Since some people have argued that extended alerts aren't necessary or useful,
I'll wait awhile for them to diagnose what was wrong using the information
above, which was all that was available.",<1526904555196.87951@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-21 12:09:28
5704,TLS 15+,118,369,"InformationProviding,NeutralResponse,ContextSetting",366,-1,"I would say it's unfair to expect other people to diagnose the problem by claiming ""that information was all that was available"" because you had access to:",<5fd52b8b84f844b68b53a4e6e95513a6@LXDOMEXC01.ssidom.com>,ilarra@s21sec.com,0.0,0,23,2018-05-21 13:47:37
5705,TLS 15+,118,406,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",369,-1,"
- traffic dumps of the failing handshakes
- traffic dumps of working handshakes
- the possibility to try any number of modifications of the client hello to go from a working handshake to a failing handshake in order to identify the offending option or parameter
- as you are going to have to ask the server side to activate extended alerts, you can ask them for server logs, as well as traffic dumps of (at least) the failed connections on their side (if they receive any, which is additional information)",<5fd52b8b84f844b68b53a4e6e95513a6@LXDOMEXC01.ssidom.com>,ilarra@s21sec.com,0.0,0,23,2018-05-21 13:47:37
5706,TLS 15+,118,407,"InformationProviding,ExtensionOfPrevious,InformationProviding,NeutralResponse,ContextSetting",363,-1,"
Besides, I also think it's not fair to claim that when someone disagrees, you are being ""shouted down"". From what I remember, both sides expressed their opinion, and if you manage to gather consensus your draft will get published. So, I think accusing others of shouting you down is an unfortunate phrase on your side...",<5fd52b8b84f844b68b53a4e6e95513a6@LXDOMEXC01.ssidom.com>,ilarra@s21sec.com,0.0,0,23,2018-05-21 13:47:37
5707,TLS 15+,118,408,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",407,-1,"
That being said... I encourage you to write your draft and look for consensus within the group.",<5fd52b8b84f844b68b53a4e6e95513a6@LXDOMEXC01.ssidom.com>,ilarra@s21sec.com,0.0,0,23,2018-05-21 13:47:37
5708,TLS 15+,118,461,"Disagreement,InformationProviding,NeutralResponse",406,406,"
There was no access to this.
",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5709,TLS 15+,118,462,"Disagreement,InformationProviding,NeutralResponse",406,406,"
There was no access to this.
",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5710,TLS 15+,118,464,"NeutralResponse,InformationProviding,NeutralResponse",406,406,"
That was only after the second day of negotiations, when I managed to get
indirect access to the server to use it as an oracle, resulting in trial-and-
error modification of the client hello until the server didn't report a
handshake failure any more.
",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5711,TLS 15+,118,466,"Disagreement,InformationProviding,NeutralResponse,ContextSetting",406,406,"
Neither of those were available, and neither of them could be made available.
As I said in my previous message, the only information I had was ""Handshake
failed"".
",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5712,TLS 15+,118,468,"NeutralResponse,InformationSeeking,InformationProviding,NeutralResponse,ProposeAction",407,407,"
What I meant was that as it's a non-zero amount of effort to write up a draft,
I wasn't terribly keen on putting in the effort only to have it bikeshedded to
death with ""it's a security problem"" (it isn't, unless you go out of your way
to make it one), ""you can look at the server logs"" (no, you can't), etc.  So
what I was trying to get is an idea of whether it's worth writing a draft or
not.
",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5713,TLS 15+,118,470,"Agreement,NeutralResponse,StateDecision",408,408,"
OK, I'll give it a go.

Peter.",<1526955398665.97588@cs.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2018-05-22 02:16:53
5714,TLS 15+,118,550,"Question,ClarificationElicitation",407,407,"
you need consensus for Informational RFCs? that's news to me...
",<5924196.sQIzhslrlE@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-05-22 15:11:43
5715,TLS 15+,118,552,"Question,NeutralResponse,ClarificationElicitation,NeutralResponse",408,408,"
For what it's worth, and with all the downsides it would have (it would have
to be an extension, so not every server would implement it; what about alerts
not allowed to be fragmented, and interaction with max_fragment_length?), I'm
in favour of more expressive errors (and more strict/detailed guidelines which
ones should be sent when).
",<5924196.sQIzhslrlE@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-05-22 15:11:43
5716,TLS 15+,118,595,"Answer,InformationProviding,Answer,ContextSetting",550,550,"
You need consensus for WG documents in general, though not necessarily for
Informational RFCs through other channels.

With that said, once
https://datatracker.ietf.org/doc/draft-ietf-tls-iana-registry-updates/ is
published, it will not be necessary to have an RFC at all for a code point
registration.

-Ekr",<CABcZeBOGj21ijfPzuLrVNdxYu+rZAv7Rs66tbXi+5gGyn4zaNw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-22 06:22:10
5717,TLS 15+,119,32,"InformationProviding,ContextSetting,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security WG of the IETF.",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5718,TLS 15+,119,33,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",32,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-26.txt
Pages           : 155
Date            : 2018-03-04",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5719,TLS 15+,119,34,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",33,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5720,TLS 15+,119,35,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",34,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5721,TLS 15+,119,36,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",35,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-26
https://datatracker.ietf.org/doc/html/draft-ietf-tls-tls13-26",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5722,TLS 15+,119,37,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-26",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5723,TLS 15+,119,38,"InformationProviding,Social,InformationProviding,ExtensionOfPrevious",,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5724,TLS 15+,119,39,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",38,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<152018898623.11988.12066043312763065994@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-04 10:43:06
5725,TLS 15+,120,28,"InformationProviding,InformationProviding,ContextSetting",,-1,"Warren Kumari has entered the following ballot position for
draft-ietf-tls-tls13-26: No Objection",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5726,TLS 15+,120,29,"InformationProviding,InformationProviding,ExtensionOfPrevious,Social",28,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5727,TLS 15+,120,30,"InformationProviding,InformationProviding,ExtensionOfPrevious,Social",28,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5728,TLS 15+,120,31,"InformationProviding,InformationProviding,ExtensionOfPrevious",30,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5729,TLS 15+,120,32,"ExtensionOfPrevious,ContextSetting",28,-1,"
COMMENT:",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5730,TLS 15+,120,33,"ExtensionOfPrevious,Thanking,InformationProviding,ExtensionOfPrevious,StateDecision,Thanking",32,-1,"
Thank you for a surprisingly (because of the technical density) readable
document - I may use this as an example of a well written but dense document...",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5731,TLS 15+,120,34,"ExtensionOfPrevious,Thanking,ExtensionOfPrevious,Thanking",33,-1,"
Also, thanks to the doc shepherd for a good write-up.",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5732,TLS 15+,120,35,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",,-1,"
I'm balloting NoObj instead of Yes only because I don't think I have enough
background/expertise in the topic.",<152036213854.28287.666072602003855730.idtracker@ietfa.amsl.com>,warren@kumari.net,0.0,1,0,2018-03-06 10:48:58
5733,TLS 15+,121,0,Social,,-1,"Greetings,",<94ced158-63b1-e7a3-024c-44d1149e7202@levangong.org>,hubert@levangong.org,0.0,0,57,2017-11-21 19:38:16
5734,TLS 15+,121,11,"Question,ContextSetting,Question,InformationProviding",,-1,"
Probably a trivial question but is the transcript hash (during
handhsake) calculated over decrypted versions of messages like
EncryptedExtensions or certificate or is it done over the raw/encrypted
messages?
I could not find an exact confirmation in the spec.",<94ced158-63b1-e7a3-024c-44d1149e7202@levangong.org>,hubert@levangong.org,0.0,0,57,2017-11-21 19:38:16
5735,TLS 15+,121,37,Social,,-1,"Hi Hubert,
",<20171122035915.GD18321@al>,peter@lekensteyn.nl,0.0,0,30,2017-11-22 03:59:15
5736,TLS 15+,121,39,"Answer,NeutralResponse,Answer,InformationProviding",11,11,"
It covers the decrypted handshake messages, see
https://tools.ietf.org/html/draft-ietf-tls-tls13-21#section-4.4.1

This value is computed by hashing the concatenation
of each included handshake message, including the handshake message
header carrying the handshake message type and length fields, but not
including record layer headers

(The only way to know the message type is to have it in cleartext.)",<20171122035915.GD18321@al>,peter@lekensteyn.nl,0.0,0,30,2017-11-22 03:59:15
5737,TLS 15+,121,70,"NeutralResponse,Thanking,Social,NeutralResponse,Thanking,Social",39,-1,"Hi Peter,

Yes, that sentence is what made me think it must be over decrypted messages but I wanted to double check as it's not clearly stated.
Thanks for confirming!

Hubert
",<a5908bef-cfa2-818c-d2aa-3d5b8fb9e576@levangong.org>,hubert@levangong.org,0.0,0,57,2017-11-21 20:36:45
5738,TLS 15+,121,73,"ClarificationElicitation,ClarificationElicitation",39,-1,"To confirm, TLSInnerPlaintext.type and TLSInnerPlaintext.zeros are not part of the handshake messages, and therefore are not included in the transcript hash?",<CY4PR21MB012013A8387575C18CB117D58C210@CY4PR21MB0120.namprd21.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2017-11-23 19:42:12
5739,TLS 15+,121,134,"Answer,NeutralResponse,Answer",73,73,"
Correct. The transcript hash is also not affected by fragmentation.

E.g. in TLS 1.3, the raw finished messag fed to SHA-256 is always
14 00 00 20 <32 bytes payload>. Regardless of padding and
fragmnentation (for SHA-384, that would be 14 00 00 30 <48 bytes
payload>).

(In DTLS, the header would be different and larger, but also
not affected by padding and fragmentation).
",<20171123195157.GB28646@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-11-23 21:51:57
5740,TLS 15+,121,135,Social,,73,"
-Ilari",<20171123195157.GB28646@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-11-23 21:51:57
5741,TLS 15+,121,161,Thanking,134,-1,"Thanks, Ilari!

-----Original Message-----
From: ilariliusvaara@welho.com [mailto:ilariliusvaara@welho.com]
Sent: Thursday, November 23, 2017 11:52 AM
To: Andrei Popov <Andrei.Popov@microsoft.com>
Cc: Peter Wu <peter@lekensteyn.nl>; Le Van Gong, Hubert <hubert@levangong.org>; tls@ietf.org
Subject: Re: [TLS] Transcript-Hash during Handshake

On Thu, Nov 23, 2017 at 07:42:12PM +0000, Andrei Popov wrote:
> To confirm, TLSInnerPlaintext.type and TLSInnerPlaintext.zeros are not
> part of the handshake messages, and therefore are not included in the
> transcript hash?

Correct. The transcript hash is also not affected by fragmentation.

E.g. in TLS 1.3, the raw finished messag fed to SHA-256 is always
14 00 00 20 <32 bytes payload>. Regardless of padding and fragmnentation (for SHA-384, that would be 14 00 00 30 <48 bytes
payload>).

(In DTLS, the header would be different and larger, but also not affected by padding and fragmentation).


-Ilari",<CY4PR21MB0120CD262B437CCF078F16688C210@CY4PR21MB0120.namprd21.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2017-11-23 19:58:56
5742,TLS 15+,122,0,Social,,-1,Hi all--,<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5743,TLS 15+,122,110,"ContextSetting,InformationProviding",,-1,"
in draft-irtf-cfrg-eddsa-05, there is a context label defined for ed448,
but no such label is defined for ed25519.  (the ""context label"" is a way
to provide domain separation between signatures made in different
contexts, avoiding cross-protocol attacks)",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5744,TLS 15+,122,111,"ExtensionOfPrevious,StateDecision,InformationProviding",110,-1,"
people seem OK with domain separation for ed448, but we've rejected it
for ed25519 to achieve backward compatibility with existing signatures,
and to avoid API changes to existing ed25519 libraries, as discussed in
threads like [0].",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5745,TLS 15+,122,112,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
I wanted to float one final middle-ground proposal that would allow us
to align the APIs between the two by adding an optional context
parameter to ed25519/ed25519ph.  If this isn't acceptable, please
consider instead the proposed additional Security Considerations toward
the end of this message.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5746,TLS 15+,122,113,"ContextSetting,ContextSetting",,-1,"
The proposal for including optional context labels in 25519 is simple:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5747,TLS 15+,122,114,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",113,-1,"
* in Table 1: Parameters of Ed25519, change H(x) from ""SHA-512(x)"" to
""SHA-512(context || x)"", and change PH(x) to ""context || x"".",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5748,TLS 15+,122,115,"ProposeAction,ContextSetting,ProposeAction,ExtensionOfPrevious",114,-1,"
* change the sentence describing the ph variant that follows the table
to:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5749,TLS 15+,122,116,"ExtensionOfPrevious,ExtensionOfPrevious",115,-1,"
Ed25519ph is the same but with PH being SHA-512(context || x)
instead, i.e., the input is hashed using SHA-512 before signing with
Ed25519.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5750,TLS 15+,122,117,"InformationProviding,InformationProviding,ProposeAction",,-1,"
If ""context"" is unspecified by the user it is treated as the empty
string and, the result is exactly the same as the current description.
This is also easy for someone to implement with existing ed25519
libraries with no API change: just concatenate before signing or
verifying.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5751,TLS 15+,122,118,"ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
This would mean that a signature with a context label for 25519 is not
separated from a signature *without* a context label (a weaker domain
separation than we're offering in ed448), but it at least provides a
standard way for protocols that want to make domain-separated signatures
to do so, which might help us to encourage domain separation in
standards which contemplate the use of either Ed448 or Ed25519 (their
abstract APIs are alignable).",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5752,TLS 15+,122,119,"ProposeAction,ProposeAction",,-1,"
I also think we need some text explaining the difference between the two
approaches.  If we adopt the above proposal, we could add something like
this to the Security Considerations or section 10.3 (""Use of contexts""):",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5753,TLS 15+,122,120,"ContextSetting,InformationProviding,ContextSetting",,-1,"
Note that the domain separation for Ed25519 and Ed25519ph is weaker
than the domain separation for Ed448 and Ed448ph in two ways:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5754,TLS 15+,122,121,"InformationProviding,ExtensionOfPrevious,ProposeAction",120,-1,"
(a) Signatures that do not use context labels can potentially
collide with signatures that use context labels.  This can only be
mitigated by never using the same key in multiple domains without
having a domain-specific context label for each use.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5755,TLS 15+,122,122,"InformationProviding,ExtensionOfPrevious,ProposeAction",120,-1,"
(b) Signature domains that use context labels where one context
label is a prefix of the other may also have collisions.  This can be
mitigated by always choosing a context labels that consist of
printable ASCII characters followed by a single zero-valued octet.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5756,TLS 15+,122,123,"InformationProviding,InformationProviding",,-1,"
This weaker domain separation is accepted in Ed25519 due to widespread
existing context-free deployment and the desire to avoid breaking
backward compatibility. For Ed448, which is not yet as widely
deployed, the dom() function's stronger domain separation guarantees
are preferred.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5757,TLS 15+,122,124,"ProposeAction,ProposeAction",,-1,"
If we do not adopt the above changes, and leave ed25519 and ed25519ph
without any attempt at domain separation, we also probably need a bit of
text explaining why one primitive has domain separation and the other
does not, probably in either Security Considerations or section 10.3.
Otherwise, future people reading the draft would need to track down
messages like those in [0] to understand the asymmetry.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5758,TLS 15+,122,125,"ContextSetting,ContextSetting",,-1,"
A proposal for text in this scenario:",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5759,TLS 15+,122,126,"InformationProviding,ExtensionOfPrevious",125,-1,"
Note that only Ed448 offers strong domain separation via context
labels, while Ed25519 lacks this capability.  This is due to a desire
to retain backward compatibility with existing Ed25519 deployments,
and to leave the Ed25519 API as simple as possible.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5760,TLS 15+,122,127,"ExtensionOfPrevious,InformationProviding,ProposeAction",126,-1,"
If an application or protocol needs domain separation in situations
where Ed25519 may be used, a weaker form of domain separation may be
had by prepending a context label (fixed octet string) to the message
before signing or verifying, using a different context label for each
signature domain.  For the prehash variant, prepend the context to the
message before pre-hashing.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5761,TLS 15+,122,128,"ExtensionOfPrevious,ExtensionOfPrevious",127,-1,"
To avoid collisions between domains when using this weaker form of
domain separation, context labels should consist of only printable
ASCII characters followed by a single-valued octet.",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5762,TLS 15+,122,129,"Question,ProposeAction",,-1,"
What do folks think?",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5763,TLS 15+,122,130,Social,,-1,"
--dkg",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5764,TLS 15+,122,131,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",124,-1,"
[0] see for example Ilari's response here to Bryan Ford at Message-Id:
20151211202214.GA5522@LK-Perkele-V2.elisa-laajakaista.fi
https://www.ietf.org/mail-archive/web/cfrg/current/msg07713.html",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5765,TLS 15+,122,132,"ExtensionOfPrevious,ExtensionOfPrevious",131,-1,"
and the ""On the differences of Ed25519/448 and how it affects a vote
on twoshakes-d"" thread starting at Message-Id:
CAA4PzX18bcS_awPg-YDAoo90537Ot=s_nf7k_Vt75OVSdvtDrQ@mail.gmail.com
https://www.ietf.org/mail-archive/web/cfrg/current/msg07665.html",<87bn543id1.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 02:27:22
5766,TLS 15+,122,134,Social,,-1,"Hi Daniel,",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
5767,TLS 15+,122,262,"Agreement,Agreement","112,129",-1,"
Your proposal seems to me to be a very sensible idea.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
5768,TLS 15+,122,263,"InformationProviding,InformationProviding",,-1,"
We are quite keen to get draft-irtf-cfrg-eddsa ""shipped"", as it's needed
elsewhere in IETF and dependencies are building up.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
5769,TLS 15+,122,264,"ExtensionOfPrevious,ProposeAction,ProposeAction",263,-1,"
So, @all, let's try to have a quick discussion on the proposal and see if
any reasons emerge for not adopting it.",<D33CFF00.6A70D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2016-04-20 08:43:50
5770,TLS 15+,122,267,"ContextSetting,ProposeAction,Agreement,ProposeAction",129,-1,"This is okay with me, except for one pedantic clarification.  ""Empty string"" has a specific meaning in C, it's a single NUL byte.  Since our other uses of context including the NUL terminator, to avoid prefix attacks, then I think the wording needs some editing.",<11c960b5f1fa42aaaf4cd0a6961332ec@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-04-20 11:27:00
5771,TLS 15+,122,289,"NeutralResponse,ProposeAction,NeutralResponse,ContextSetting,ProposeAction",267,267,"
the ""empty string"" message in my message was not part of the proposed
wording change to the draft, but i can see how it might be confusing if
it were to make it into an edit.

If we need additional clarification in the draft to avoid confusion, i
propose:

If no context label is supplied, it is treated as an octet string of
zero length; that is, (context || x) is the same as x.
",<87ziso1m0l.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 08:51:22
5772,TLS 15+,122,297,"Agreement,Agreement",289,289,"
Works for me!",<e11afdc6c7db4952b9d2447b5974750d@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-04-20 12:59:58
5773,TLS 15+,122,327,"ClarificationElicitation,Question",267,267,"
Eh, I thought the other uses had length prefixing to avoid prefix attacks?
",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 17:29:53
5774,TLS 15+,122,329,"Question,NeutralResponse,Question,Disagreement,ProposeAction",289,289,"
Also, anyone up to some quick analysis to show that doesn't interact
harmfully with Ed25519 when using the same keys?

Also, that wouldn't solve the troublesome interaction between Ed25519
and Ed25519ph...
",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 17:29:53
5775,TLS 15+,122,330,Social,,289,"
-Ilari",<20160420142953.GA23528@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 17:29:53
5776,TLS 15+,122,381,"Answer,NeutralResponse,Answer,InformationProviding,ProposeAction",327,327,"
they do, but we can't have that while still preserving backward
compatibility with the deployed implementations of ed25519, and while
making it relatively easy to use with ed25519 libraries that don't offer
explicit contexts.

If you wanted to do a length-prefixed context, but apply it only in the
case where the context exists (has non-zero length), that's another
option that would preserve backward compatibility with the deployed base.

But i think that's marginally more complicated to reason about and to
implement, and it still doesn't address the potential for collision
between contextualized and context-free domains, so i'm not sure what
we'd gain.
",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
5777,TLS 15+,122,383,"ClarificationElicitation,UnderstandingNegative,InformationProviding,ClarificationElicitation",329,329,"
eh?  this is specifically and only about how to apply a context label in
Ed25519 and Ed25519ph, since it's already defined for Ed448 -- what do
you mean ""interact harmfully with Ed25519"" ?
",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
5778,TLS 15+,122,385,"Agreement,NeutralResponse,Agreement,InformationProviding,Social",329,329,"
That's true, this proposal doesn't try to solve that problem.  I hope it
can be evaluated independently.

--dkg",<87potk1de7.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 11:57:36
5779,TLS 15+,122,427,"Question,NeutralResponse,Answer",383,383,"
Suppose attacker can get signatures for arbitrary (context,message) pairs
under some key, can he forge a signature for some (context',message') under
that key that he didn't see?
",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 21:26:17
5780,TLS 15+,122,429,"NeutralResponse,NeutralResponse",385,385,"
I actually once implemented variant of Ed25519 with contexts done like
Ed448. Separate variant, so needed its own keys. It would be very easy
to build Ed25519ph-like scheme by just using SHA-512(msg) as prehash
and marking the message as prehashed (there is no need for context in
inner hash).
",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 21:26:17
5781,TLS 15+,122,430,Social,,385,"
-Ilari",<20160420182617.GA23652@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-20 21:26:17
5782,TLS 15+,122,493,"Answer,NeutralResponse,NeutralResponse,ProposeAction,InformationProviding",427,427,"
sure, by definition if context' is a prefix of context, and message' is
just the concatenation of (context - context' || message), then it's a
viable forgery.

This is the price we pay for backward compatibility, but it's actually a
*better* situation than we have without a recommended way to use a
context label.

Without a context label, any arbitrary message can be treated as a
""forgery"" by simply replaying it in a different context. (e.g. i sign
an ASN.1 sequence of two integers, and you understand it as signed
finite-field DHE params, but i wanted you to understand it as an RSA
public key)

With a context label, for every domain that defines a sane context
(e.g. the guidance i suggested of printable-ascii followed by '\0'), we
can rule out inter-domain replay as a successful forgery because no
context will be a prefix of any other context.

Furthermore, in practice, if we don't specify a standard way to use a
context label for domain separation in Ed25519, different schemes may
apply the context label in different ways, potentially allowing for some
message collision.
",<87bn540xh3.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 17:41:28
5783,TLS 15+,122,495,"Question,NeutralResponse,ProposeAction,NeutralResponse,ClarificationElicitation,Question,Social",429,429,"
i'm sure we could propose an entirely new variant that has the same
robustness as Ed448, but it would fail the backward compatibility goals
that i thought the group (including you) had previously identified. In
my proposal here, i am trying to work within those constraints.  Are you
saying that Ed25519ph doesn't need the backward compatibility?

If you're proposing a fix to a separate problem, is it something we can
consider separately?

--dkg",<87bn540xh3.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 17:41:28
5784,TLS 15+,122,582,"NeutralResponse,NeutralResponse",493,493,"
H(x)=SHA-512(context||x) without any lengths or separators does not behave
that way. It does not have trivially computable collisions (but easily
computed ones might still exist, or worse, a way to extract the private key).

That is, signature for ('abc','def') is not expected to validate for
('abcd','ef').

It is also not possible to compute the result using stock Ed25519 code
with any non-empty context.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5785,TLS 15+,122,584,"NeutralResponse,NeutralResponse",493,493,"
Contexts were never meant to help with internally-inconsistent protocol
(e.g. TLS ServerKeyExchange signatures), only between different protocols
possibly sharing keys.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5786,TLS 15+,122,586,"NeutralResponse,NeutralResponse",493,493,"
Also, contexts cause large amount of API problems. And it is very easy
to use in spec without understanding the problems, resulting spec that
is very annoying to implement.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5787,TLS 15+,122,588,"NeutralResponse,Disagreement",493,493,"
There is absolutely no working way to apply contexts using stock Ed25519
implementations that isn't utterly broken.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5788,TLS 15+,122,590,"Answer,Answer",495,495,"
I don't think Ed25519ph needs backward compatiblity.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5789,TLS 15+,122,592,"Answer,Answer",495,495,"
It is closely related in any space to stick contexts to would also be space
to stick the hash flag to.
",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5790,TLS 15+,122,593,Social,,495,"
-Ilari",<20160421043947.GA24394@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 07:39:47
5791,TLS 15+,122,669,"NeutralResponse,UnderstandingNegative,UnderstandingNegative,NeutralResponse,ClarificationElicitation",582,582,"
I think I'm confused.  Surely if I set chunk = { 'a', 'b', 'c', 'd', 'e',
'f'} containing six octets, then SHA-512(chunk) is the same, whether I
construct chunk from 'abc','def' or 'abcd','ef'.  So you must be talking
about something else, but I'm not sure what.
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
5792,TLS 15+,122,671,"ClarificationElicitation,ClarificationElicitation,ProposeAction",582,582,"
Can you be more specific?  Is the complaint just that one would need to
use a temporary buffer and copy the data to be signed in order to put in
the prefix?
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
5793,TLS 15+,122,673,"Question,NeutralResponse,ContextSetting,Question,ProposeAction,Question",586,586,"signing API include a context input?  If yes, use that input; if no,
prepend the context to the message to be signed in my own code.  What am I
missing?
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
5794,TLS 15+,122,675,"Agreement,Agreement",590,590,"
I am mostly inclined to agree, which gives some useful flexibility here.
",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
5795,TLS 15+,122,677,"Agreement,Agreement,Social",592,592,"
Sure.

-Ben",<alpine.GSO.1.10.1604211349530.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 14:30:50
5796,TLS 15+,122,735,"NeutralResponse,Answer,InformationProviding",669,669,"
I actually implemented the scheme (modifying the python reference
implementation in the draft (modifying H(x) to be SHA512(context|x)).

- Modified and base scheme generate identical signatures and validate
identical signatures for empty context (as expected).
- Signature of ('abc','def') is different from signature of ('abcd','ef')
and does not cross-validate. Nor does either cross-validate with
('',abcdef).
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 22:50:14
5797,TLS 15+,122,737,"Answer,Answer",671,671,"
No. I am saying you can't put in the prefix unless you have Ed25519
implementation modified to support it. Buffering the message won't
help.
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 22:50:14
5798,TLS 15+,122,739,"Disagreement,Disagreement",673,673,"
This does not work.
",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 22:50:14
5799,TLS 15+,122,740,Social,,673,"
-Ilari",<20160421195014.GA26169@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 22:50:14
5800,TLS 15+,122,773,"ClarificationElicitation,ProposeAction,ClarificationElicitation,ProposeAction",735,735,"
Is this because you're including the NUL octet between the context and
the signature, or for some other reason?  if so, then i'd phrase it as:

signature of ('abc\0', 'def') is different from signature of ('abcd\0', 'ef')

which i think everyone would agree is the right outcome.

Or are you talking about some other scheme?
",<87zismzo9o.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-21 16:43:15
5801,TLS 15+,122,775,"ClarificationElicitation,ClarificationElicitation,Social",739,739,"
Why not?  Can you explain more?

--dkg",<87zismzo9o.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-21 16:43:15
5802,TLS 15+,122,830,"InformationProviding,InformationProviding",,-1,"Hmm, Ilari's messages are not making it into either my MIT or my Akamai
inbox; that's quite unfortunate.
",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
5803,TLS 15+,122,832,"Answer,NeutralResponse,Answer,ContextSetting,InformationProviding",773,773,"
I think Ilari is talking about the Ed448 scheme already describe in the
document, which uses the function:

dom(x, y)  The octet string ""SigEd448"" || octet(x) ||
octet(OLEN(y)) || y, where x is in range 0-255 and y is octet
string of at most 255 octets.  ""SigEd448"" is in ASCII (8 octets).

which length-prefixes the context before including it in the signed data,
among other things.  (The dom() output is then concatenated with other
data before being passed to SHAKE256 as H(x).)
",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
5804,TLS 15+,122,834,"Answer,NeutralResponse,ProposeAction,Social",775,775,"
I think we all need to be more clear about whether we are talking about
the existing Ed448 context scheme, or the bits in
http://unicorn-wg.github.io/context-labels/ .

My comments in this thread have centered on the latter.

-Ben",<alpine.GSO.1.10.1604211649520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-21 16:54:18
5805,TLS 15+,122,882,"Answer,NeutralResponse,Answer,InformationProviding",773,773,"
No, I am not including '\0'.

I literially modified H(x) to prepend context (defaulted to blank byte
string), with no lengths nor separators to x before hashing with SHA-512..

It does not handle empty context as special case, since <empty> is
additive identity for string concatenation.
",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 09:21:21
5806,TLS 15+,122,884,"Answer,Answer",775,775,"
H(x)=SHA512(context|x) does not cause behaviour like Ed25519(key,context|x)
when applied.It causes behaviour that can't be expressed using the base
Ed25519 primitive.
",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 09:21:21
5807,TLS 15+,122,885,Social,,775,"
-Ilari",<20160422062121.GA27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 09:21:21
5808,TLS 15+,122,895,"NeutralResponse,NeutralResponse,ProposeAction",884,884,"
I don't know why we got hung up on that concept.  PH(x) =
SHA512(context || x) might be closer to what we've been thinking of.",<CABkgnnVd28WHT+wpMxVd+XczkiJmExkjTewG5B_a1uKgTMo7+A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 17:26:37
5809,TLS 15+,122,916,"NeutralResponse,Disagreement",895,895,"
1) That only 'works' with Ed25519ph. And even with that, you do not
want the context inside data hash.

2) You definitely do not want that kind of context schemes on non-
context keys. Even the prepending the context in hash (without
separation) makes me VERY uneasy.
",<20160422091618.GB27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 12:16:18
5810,TLS 15+,122,917,Social,,895,"
-Ilari",<20160422091618.GB27448@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 12:16:18
5811,TLS 15+,122,947,"Question,UnderstandingNegative,UnderstandingNegative,ProposeAction",916,916,"
I don't know what you want, but maybe you could tell me why I don't want that.
",<CABkgnnUGSWYe+Z4t63GpNipLLUx4G43U+ARL+jYL825k6QraMw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 20:37:28
5812,TLS 15+,122,949,"Question,NeutralResponse,UnderstandingNegative,NeutralResponse,Agreement,UnderstandingNegative,ProposeAction",916,916,"
Well, it's how everyone is forced to do things if the primitive
doesn't have native contexts.  I agree that it could be better, but
I'm not going to lose sleep over it.

I'm having a hard time understanding what you want out of this
conversation.  Maybe you could try to explain whether you think that
context is a good idea and maybe how you would prefer that we solve
the problem.",<CABkgnnUGSWYe+Z4t63GpNipLLUx4G43U+ARL+jYL825k6QraMw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-22 20:37:28
5813,TLS 15+,122,1003,"Answer,Answer",947,947,"
1) More vulernable to attacks there.
2) You need the context outside it anyway for non-prehashed version
(if you do contexts).
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 14:28:43
5814,TLS 15+,122,1005,"NeutralResponse,ProposeAction,ProposeAction",949,949,"
Or just split on key. May be bit painful (and sometimes not possible
at all, e.g. TLS versus CSR) but much better than dealing with the
API mess.
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 14:28:43
5815,TLS 15+,122,1007,"Answer,NeutralResponse,ProposeAction",949,949,"
It is not possible to retrofit contexts into Ed25519 in a way that
I would be even remotely comfortable with. This is because Ed25519
lacks any space to put any extensions to.

Just adding contexts to Ed25519 without splitting variant would
leave it open for trivial attacks (or cryptographic screwedness
I really do not want to see).

If you split variant, you can do whatever is desired, eg. fit
Ed448-style context and hash indicator (which would also solve
problems with Ed25519ph).
",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 14:28:43
5816,TLS 15+,122,1008,Social,,949,"
-Ilari",<20160422112842.GA28192@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 14:28:43
5817,TLS 15+,122,1074,"ClarificationElicitation,Question",1003,1003,"
can you describe the attacks you're concerned about?
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
5818,TLS 15+,122,1076,"Disagreement,NeutralResponse,Disagreement,InformationProviding",1005,1005,"
I don't think the API mess is as worrisome as you do.  We've had API
changes for primitives in the past (i already mentioned HKDF's evolution
from previous context-free KDF schemes), and they haven't caused the sky
to fall.  We already have a plan for how people can continue using the
primitive without a context label, and we can provide a well-defined
(granted, suboptimal) way for people to use it *with* a context label as
well.
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
5819,TLS 15+,122,1078,"NeutralResponse,NeutralResponse,ContextSetting,InformationProviding",1007,1007,"
Right, this is the backward-compatibility issue.  So, we're trying to
propose a standard way that people who want contexts can use them with
Ed25519 that doesn't break backward compatibility with context-free
Ed25519.

This is guaranteed to be weaker protection than a scheme that included
contexts from the beginning; but we're not at the beginning -- the
deployed base of ""pure"" Ed25519 is too large.

However, it seems likely to offer better protection than either:

a) no one does domain separation at all even in cases where key
separation is not possible

b) different protocols make up their own domain separation mechanisms,
which may or may not collide with each other

No one is arguing that this is a perfect thing to do for Ed25519, we're
arguing that we should do something which is better than nothing at
all.  This is the curse of trying to improve a deployed base.  it should
be familiar to anyone who works at the IETF :/
",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
5820,TLS 15+,122,1080,"Question,UnderstandingNegative,Question,UnderstandingNegative,ClarificationElicitation,Social",1007,1007,"
Are there other ""trivial attacks"" beyond confusing signature with a sane
context with a context-free signature?  Is there other cryptographic
screwedness we should be aware of?

I don't understand how to split the variant in a way that is
successfully incompatible with ""pure"" Ed25519, since as you say Ed25519
has no extension mechanism.

Are you proposing a way to do this that i'm not seeing?

--dkg",<87mvoly84j.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-22 11:29:32
5821,TLS 15+,122,1166,"NeutralResponse,NeutralResponse",1076,1076,"
Well, I don't recall seeing KDF interface.

But then, given crazy stuff I have seen in at least one WG, signature
APIs might not be that standardized (outside things like PKCS#11, that
are bit bad matches anyway).
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 20:12:28
5822,TLS 15+,122,1168,"NeutralResponse,NeutralResponse",1078,1078,"
There exists pretty close to trivial transform that transforms any signature
scheme into DIFFERENT signature scheme (that uses original scheme as subroutine)
with context input.

Weak signatures are transformed into weak signatures with context, strong
signatures are transformed into strong signatures with context.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 20:12:28
5823,TLS 15+,122,1170,"Answer,Answer",1080,1080,"
Yes, trivial existential forgeries. And attempts to look at how prefixing
the context into inner hash would fare turned into mess.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 20:12:28
5824,TLS 15+,122,1172,"NeutralResponse,Answer,InformationProviding",1080,1080,"
You can add contexts, only you get different scheme (which needs
different keys). If you can compute the result using existing Ed25519
code as-is is independent.
",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 20:12:28
5825,TLS 15+,122,1173,Social,,1080,"
-Ilari",<20160422171228.GC28353@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-22 20:12:28
5826,TLS 15+,122,1184,"Agreement,NeutralResponse,ProposeAction",267,267,"
+1

It would be better to say that an “empty context” consists of zero bytes (or octets if you prefer).
",<B0216DAC-3C6A-4FD8-8D17-447260153633@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-04-20 14:07:32
5827,TLS 15+,122,1186,ContextSetting,,-1,"Paterson, Kenny writes:",<20160420205120.28700.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-20 20:51:20
5828,TLS 15+,122,1200,"Question,NeutralResponse,Apologising,Question,InformationProviding,Apologising,Social",263,263,"
Do any of those dependencies rely on having the signed object be
something other than a message?

I sent CFRG a message ""Side inputs to signature systems"" back in
September that raises several different objections to the ""context""
concept. I believe that all of the objections remain valid. I didn't
notice until now that the concept was still under consideration; sorry!

---Dan",<20160420205120.28700.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-20 20:51:20
5829,TLS 15+,122,1289,"NeutralResponse,NeutralResponse",1200,1200,"
The context label is explicitly in place in Ed448 in the current draft,
but not in Ed25519.

Your concerns are reasonable, but i don't think they're insurmountable
or that they warrant the removal of Ed448:
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5830,TLS 15+,122,1291,"Answer,Answer,InformationProviding",1200,1200,"
A library that implements a signature scheme that has a context string
needs to provide an API for it, yes.  For signature schemes where the
context string is optional (which is all of them, afaict), the context
label should be optional.  Libraries that implement such a scheme can
continue to offer the traditional API (without a context label) of
course.

We've already seen some primitives adopt this approach, including the
""info"" parameter for HKDF-Expand
(https://tools.ietf.org/html/rfc5869#section-2.3).  This isn't a
traditional asymmetric signature scheme, but it's an addition to the API
compared to earlier KDFs (e.g. PBKDF2 didn't have such a context label).
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5831,TLS 15+,122,1293,"Answer,Answer",1292,1200,"
We're actually doing exactly this in TLS 1.3, but doing it in an ad-hoc
way: basically using the prefix approach in some places (e.g. server
CertificateVerify and client CertificateVerify in TLS 1.3 are prefixed
with distinct context strings:
https://tools.ietf.org/html/draft-ietf-tls-tls13-12#section-6.3.4), and
switching our KDF to HKDF in others (key expansion, etc
https://tools.ietf.org/html/draft-ietf-tls-tls13-12#section-7.1).
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5832,TLS 15+,122,1294,"ClarificationElicitation,UnderstandingNegative,ClarificationElicitation,UnderstandingNegative,Question,InformationProviding",1242,1200,"
I'm not sure what you mean here.  You mean more context labels?  the
goal here is one distinct context label per domain.  the only purpose of
the context label is domain separation.  why would you want more than
one?
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5833,TLS 15+,122,1296,"Answer,Answer",1295,1200,"
Not all signature schemes take the same set of parameters (e.g. public
keys and secret keys have different structures in different messages).

A library that wants to offer a generic signature scheme where the user
doesn't know anything about the mechanism in use could accept a context
label (byte array and length) and a message (bytearray and length).  if
the signature scheme supports an explicit context, it would use it. If
not, it could use the concatenation approach described above.
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5834,TLS 15+,122,1298,"Question,Answer,NeutralResponse,Answer,ProposeAction,Question,InformationProviding",1200,1200,"
""more informative"" assumes that you know exactly how any bytestring is
going to be interpreted in every other context.

If we define a standard way that a signature or key derivation domain
can distinguish itself from any other domain, then we can avoid
cross-protocol attacks for every scheme that adopts this standard.

Without it, each protocol will define how it thinks it should structure
a message that is ""informative enough"" to be distinct from every other
signed message in every other protocol -- but how will this be
determined without cross-protocol coordination?  This mechanism offers a
means for cross-protocol coordination by selection of distinct context
strings.  (for signature schemes like Ed448 that aren't using the
prefix-approach, the only requirement is context string uniqueness,
since they are prefix-resistant)

Does this make it seem more palatable?  This isn't a strictly
cryptographic property, it's a mechanism to facilitate larger
cross-protocol coordination.
",<878u080w22.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-20 18:12:05
5835,TLS 15+,122,1347,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1298,1298,"
To perhaps step back a bit, a signature scheme taking an optional context
label input with specified semantics (i.e., the label is prepended,
recommended to end with a NUL byte, etc.) is a way to strongly suggest
that application protocols using that signature scheme provide such ""more
informative message""s, and gives guidance as to what the structure of the
more informative message could be.

I don't really care if the application protocol makes its message being
signed more informative (i.e., specific to the particular protocol message
at hand) by manually putting that data at the front of its signing input
and ignoring the context input, or by using the context input.  I just
want it to happen, since that improves the overall safety of the internet.
",<alpine.GSO.1.10.1604201928520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-20 19:38:25
5836,TLS 15+,122,1349,"NeutralResponse,NeutralResponse",1298,1298,"
Having a contetx input to newly specified signature schemes (and a
registry to ensure global prefix-uniqueness, which dkg and Martin and I
are working on a draft for) is a way to help protocol designers that
aren't cryptographers do the right thing, cryptographically speaking.
Perhaps there are better ways to encourage this behavior, but this is the",<alpine.GSO.1.10.1604201928520.26829@multics.mit.edu>,kaduk@MIT.EDU,0.0,1,3,2016-04-20 19:38:25
5837,TLS 15+,122,1415,"NeutralResponse,ProposeAction,InformationProviding,Social",1347,1347,"
If you want to include a NUL byte to separate the context from the
following stuff, then to avoid ambiguity you need to require that the
context not contain any NUL bytes.   And this rules out general binary
blobs as context values, including general ASN.1 objects.

NIST Special Publication 800-108 (about key derivation functions) made
this mistake.  Even though Section 7.4 requires a 1-to-1 mapping from
inputs to the internal blob send to the PRF, the constructs used in
Section 5 does not achieve that requirement when the label is allowed to
be an object that contains a NUL byte.

--David",<57186958.1040907@sbcglobal.net>,dmjacobson@sbcglobal.net,0.0,0,13,2016-04-20 22:47:04
5838,TLS 15+,122,1439,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ContextSetting,InformationProviding",1415,1415,"
Yes, we can be more concrete if you like:

It's possible to say that only necessary requirement is that no label
be a prefix of any other.  One way of doing that is with a proper
bijective mapping like the length-and-value encoding used in Ed448.
However, that makes zero-length contexts incompatible with existing,
context-free signatures; or to retcon existing uses into being good
citizens.

BTW, the plan is to submit this as a -00 soon, but here's our recommendation:

https://unicorn-wg.github.io/context-labels/#rfc.section.4

I'm sure that this will stimulate many fruitful discussions, much like this one.",<CABkgnnXPqaZcx_Yg_EozUG1Lv2rN592JOyXE=e3wcJWws_po3A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-04-21 15:58:22
5839,TLS 15+,122,1459,"NeutralResponse,NeutralResponse",1415,1415,"
You really don't want ASN.1 objects, JSON serializations or anything like
that as context values.

Those values are supposed to be at most name of the protocol and possibly
version thereof (if one decides to use those at all).
",<20160421143752.GA24969@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 17:37:53
5840,TLS 15+,122,1460,Social,,1415,"
-Ilari",<20160421143752.GA24969@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-04-21 17:37:53
5841,TLS 15+,122,1699,"ContextSetting,ProposeAction,ContextSetting,InformationProviding,Question,ProposeAction,Disagreement",,-1,"Here's the standard API for signature systems:

* keygen inputs: nothing; outputs: public key, secret key;
* sign inputs: message (string), secret key; outputs: signature;
* verification inputs: message, signature, public key: outputs: yes/no.

This API is overwhelmingly popular in the cryptographic literature, the
security literature, and the software ecosystem. It is shared by the
vast majority of

* specifications of signature systems,
* papers analyzing the security of signature systems,
* theoretical proofs regarding signature systems,
* cryptographic libraries, and
* applications of signatures at higher layers of software.

This sharing is tremendously helpful---compare it to all the horror
stories of mismatched APIs slowing everybody down, making the auditor's
job hellishly difficult, and producing real-world security problems. The
simple fact that the signature API is so popular means that any change
to the API comes with a heavy presumption of being a _very bad idea_.

I'm not saying that it's impossible to rebut this presumption. For
example, I recommend merging the message and signature into a signed
message---I'm acutely aware of how many system layers need to be adapted
to make this work, but I don't see any other plausible way to eliminate
the very common ""use the message without noticing it's a forgery"" error
pattern. Stateful signatures are a deeper example. In both of these
cases I see clear, convincing reasons for a new API, outweighing the
massive costs and dangers---but changing the API is obviously an uphill
battle against a default position of amply justified skepticism.

This brings me to the idea of modifying signature specifications to add
""contexts"" (whatever exactly those are!) to signing and verification,
with the hope of stopping cross-protocol attacks. There's a severe lack
of justification for this idea:

* The security analysis is almost entirely missing. It's easy to come
up with examples where the idea seems to work, but slightly more
thought shows many more examples where the idea fails, because it's
not directly aimed at the core cross-protocol issue.

* The syntax/layering/API analysis is entirely missing. In every case
where the idea is effective, the same benefit is also achieved by a
much more traditional fix that _doesn't_ change the signature API,
and this traditional fix is much easier from a systems perspective.

As an example, let's imagine that the PGP protocol adopts some sort of
signature-plus-context system, and labels itself with context ""PGP"".
Sounds like a great way to separate PGP from other protocols, right?

Now let's consider two protocols built on top of PGP (copied verbatim
from my first ""Side inputs to signature systems"" message):

* Protocol A: There are two messages, ""Put the troops through a
surprise drill"" and ""Don't put the troops through a surprise
drill"". For efficiency these messages are compressed to ""1"" and
""0"" respectively. For security, make sure to check that the
compressed message is signed with the General's PGP key.

* Protocol B: There are two messages, ""Launch the missiles"" and ""Don't
launch the missiles"". For efficiency these messages are compressed
to ""1"" and ""0"". For security, make sure to check that the
compressed message is signed with the General's PGP key.

There's a gigantic cross-protocol vulnerability here, and the ""PGP""
context string completely fails to stop this vulnerability.

If you think that the messages in protocol A have to be separated
somehow from the messages signed by the same key in protocol B, then of
course you're right---but how exactly is this supposed to map to the
vague concept of a ""context""? Was it wrong for the PGP protocol to
declare ""PGP"" as the context? Is A supposed to assign a new ""A"" context,
ignoring the lower-level protocol that's actually doing the signatures?
How is the PGP software supposed to handle this?

What happens when the semantics of the A message _do_ take information
from the lower-level protocol? Should the higher-level protocol A change
the context to some tree structure such as ""A within PGP""? Maybe nobody
is actually using the side data available from PGP, but there are many
other examples of semantics being built through chains of protocols.

Even worse, what if the people writing the A software and the B software
don't even realize the need to coordinate ""context""? Assigning semantics
to strings is something that programmers are doing all the time---and,
whenever these strings are transmitted through an untrusted network, the
new semantics create a new opportunity for cross-protocol attacks. By
saying ""Protocol A"" and ""Protocol B"" I've been painting a picture of
programmers who _realize_ that they're building new protocols, but this
is not actually the normal situation; it is a rare exception.

At this point I expect ""Aha, we know the solution!"" comments from fans
of dozens of different formats for ""self-describing strings."" Random
examples that come to mind include the VAX/VMS file format, the original
MacOS file-type system, the Internet mail-message attachment format,
XML, etc., etc., etc. The dream of each of these formats is to provide a
grand unified description of semantics, resolving all possible
misinterpretations. This means that all we have to do is specify that
signed messages are encoded as XML, right?

Unfortunately---even if we ignore the question of how well defined and
understood these formats are---the reality is that programmers are
defining new data semantics so frequently that they usually don't even
define new types _inside their own programs_, never mind going through
the hassle of registering types in any of these grand unified systems.
The universe of semantics defined by software ends up vastly broader
than contemplated in any of these formats. Each format ends up resolving
misinterpretations only within an extremely limited semantic scope.

But wait, there's more! The notion of having a file describe its own
semantics might seem reasonable in contexts where each file is handled
independently---for example, viewed within a stateless file viewer. But
this notion disintegrates as soon as files begin to communicate through
a shared state. By changing this shared state, a signed file can change
how a subsequent signed file is interpreted---but then the signatures
need to include the state or some other strict-sequencing mechanism, to
prevent an attacker from changing the semantics of the second file. The
protocol _after_ modification of the shared state is not the same as the
protocol _before_ modification of the shared state.

It's easy to say that cross-protocol attacks are created by messages
being taken out of context. But what _is_ the context? This is the core
issue, and solving it is vastly more complex than simply sticking ""PGP""
somewhere into a signature hash. As I wrote before (without elaborating
on what the word ""protocol"" means):

The standard fix for this type of problem is to encode more
information into the signed messages so that they can't be taken out
of context. Of course, to figure out how much information is enough,
you have to work at the protocol layer, understanding all the
different contexts in all of the high-level protocols that might sign
messages under the same key---and the protocol designers need to talk
to each other! Any encoding, no matter how verbose, can be ruined by
another protocol assigning new meanings to some of the encoded
messages.

I think that's enough about semantics. Let me now turn to the questions
of syntax, layering, and API.

Show me any definition of semantics in a signature-plus-context system---

* what the ""context"" says about the semantics of the message, and
* how the ""message"" then encodes data

---and I'll show you an equivalent definition of semantics for the
_standard_ signature API, the simpler API that doesn't have ""context"":
simply encode the same ""context"" information and the data together as
the ""message"" to be signed.

This use of the _standard_ signature system provides all of the same
protection against cross-protocol attacks that can possibly be provided
by the signature-plus-context system. What creates the protection is
_not_ the change of signature concept to include a separate ""context"";
what creates the protection is defining the semantics of the string
being communicated.

The huge advantage of this syntax choice is that it's compatible with
the signature API already used in specifications and papers and proofs
and libraries and the rest of the system. It preserves the familiar
signature layer that we already have. It minimizes the number of inputs
for signing and the complexity of the task facing the signature-system
auditor.

I hope I've now made sufficiently clear that I'm objecting---and why I'm
objecting---to the use of ""contexts"" and other side inputs in CFRG's
specifications of signature systems.

Daniel Kahn Gillmor writes:",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5842,TLS 15+,122,1701,"NeutralResponse,NeutralResponse",1289,1289,"
My objection applies equally to all signature systems with side inputs.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5843,TLS 15+,122,1703,"Question,NeutralResponse,NeutralResponse,Question,Disagreement,ProposeAction",1291,1291,"
This is considerable deployment hassle---and it's only the beginning of
the massive software upgrade that you'd need to actually make ""context""
work. Remember that, e.g., PGP would need to accept ""context"" arguments
from any application processing PGP-signed messages, that those
applications would need to similarly allow ""context"" from higher-level
callers, etc. And then what happens if the applications, for whatever
reasons, think that they need to use traditional signature systems? Is
the ""context"" thrown away, allowing cross-protocol attacks? Or is it
encoded into the message, which is exactly what I'm saying should always
be done, and which doesn't need or want ""context"" in the signature spec?

Encoding the same information into traditional messages does just as
well in stopping cross-protocol attacks as a ""context"" side input can
possibly do. The API divergence is unnecessary and highly undesirable.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5844,TLS 15+,122,1705,"Question,NeutralResponse,Question,NeutralResponse",1293,1293,"
Do you have justification for using the loaded word ""ad-hoc"" here? It
should be obvious that part of the job of TLS is to adequately define
the semantics of its own signatures. It's not at all surprising that
these semantics are specific to TLS.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5845,TLS 15+,122,1707,"Answer,Question,NeutralResponse",1294,1294,"
What's the ""domain"" for a PGP-signed message, interpreted by protocol X,
further interpreted by protocol Y, as meaning ""Immediately sell all of
the stocks that I listed in my previous message""? Surely one needs to
include not just static protocol information but also something dynamic
such as the hash of the stock list or of the previous message.
",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5846,TLS 15+,122,1709,"NeutralResponse,NeutralResponse,ContextSetting",1298,1298,"
This is a tough question of semantics, as I've been trying to explain.
Complicating the syntax---splitting ""message"" into ""message"" plus a
separate ""context""---is of no value in tackling this question of
semantics. Meanwhile the costs of the new syntax are very clear.

Benjamin Kaduk writes:",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5847,TLS 15+,122,1711,"NeutralResponse,ProposeAction,Disagreement,Social",1298,1347,"
Everyone agrees on trying to eliminate all possible confusion in the
semantics of signed messages, but the right way to do this is to
directly tackle the question of semantics, not to frivolously screw
around with the standard syntax for a signature system. You're saying
that you don't care about the syntax/layering/API issues; I _do_ care
and am very much opposed to changing the API.

---Dan",<20160423125954.25865.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-04-23 12:59:54
5848,TLS 15+,122,1809,"ContextSetting,ContextSetting,ProposeAction",1703,1703,"
I'm just going to add a few more comments in addition to my reply from the
last time.

(And as always, anything of this complexity is unlikely to ever get
implemented, or implemented right for that matter. This is mostly a thought
experiment.)

https://www.ietf.org/mail-archive/web/cfrg/current/msg07302.html

Summary of how to define the context:

Track the path / branch taken through the code in the generation of the
signed message (identifying the software, the configuration / instance of
it, what it was that invoked the generation of the signature, which checks
the software went through to confirm it should be created, or whatever else
is important). Encode that with the message.

Document what each section of each code branch means, which paths are
valid, what exactly is authorized by any given path's signatures.

A code path that only covers acknowledgement of receipt obviously can't be
use to issue orders of action. Anything that parse the signed messages for
some given system must follow the documentation and must be able to
determine what exact actions a message authorizes. Ideally every type of
valid action should also be explicitly defined in the documentation, so
that this is possible to begin with.

The more I think of it, the more it resembles building a capabilities
oriented system. A bit like an adaption of Bitcoin pay-to-script-hash
transactions / Ethereum, where the system declares what conditions must be
fulfilled for every given action, and where the signed messages
(transactions) must prove the conditions were fulfilled. Take a look at
Bitcoin's Merkelized Abstract Syntax Trees (MAST) for a highly relevant
reference.
http://css.csail.mit.edu/6.858/2014/projects/jlrubin-mnaik-nityas.pdf

You shouldn't sign messages with this data structure without first
verifying it does what you want (to not fall for signature oracle attacks).
If everybody follows that advice, you can be sure that the signer intended
to create that particular message.
",<CAAt2M1-ccRTkMjV0jwDn-MbdcftLB4x8Zx6sEs4p1ph8c1Z3oQ@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2016-04-23 17:16:34
5849,TLS 15+,122,1810,"ContextSetting,ProposeAction,ExtensionOfPrevious,ProposeAction,ContextSetting,InformationProviding","1703,1809",1703,"
By my reading, it sounds like you'd rather see something like a specific
signature message input format, where you sign some structured data that
encode the message. (Perhaps we could use the new saltpack format, and
define some json / xml data structure for encoding contexts, etc.)

As for the comment on preventing (carelessly) stripping out the raw message
without further verification: encrypt the message with a key derived from
the metadata (the non-message parts of the data structure) and signature.
Yes, this too is likely to be bypassed by careless programmers, but at
least they should have come across an warnings against doing so when
reading the documentation on how to extract the message. It shouldn't end
up like this:
https://xkcd.com/1181/",<CAAt2M1-ccRTkMjV0jwDn-MbdcftLB4x8Zx6sEs4p1ph8c1Z3oQ@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2016-04-23 17:16:34
5850,TLS 15+,122,1849,Social,,-1,"Hi Dan--
",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
5851,TLS 15+,122,1851,"NeutralResponse,NeutralResponse,Agreement",1699,1699,"
This seems to be saying that because domain separation by context labels
doesn't solve all conceivable cross-protocol issues (i agree it does
not) that we should not use it to address those issues that it does
solve.

Your PGP example is definitely correct.  The PGP signature would not
prevent collisions of multiple PGP messages with different
interpretations.  However, it *would* prevent a PGP signature from being
replayed as a signature on a TLS certificate verify message from the
same secret key (or a PKINIT message in krb5, etc)
",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
5852,TLS 15+,122,1853,"Question,Agreement,NeutralResponse,ContextSetting,Thanking,Agreement,NeutralResponse,Disagreement,Question,Thanking,Social",1699,1699,"
i'm assuming that the ""traditional fix"" is just ""incorporate a sane
context-specific bytestring into the message being signed"".  And I
agree, it would be great if people did that.  But calling it a
""traditional fix"" implies that there is a tradition of doing the right
thing here, and that's been inconsistent at best.

Do you have a better suggestion of how to formalize this practice than
giving protocol designers a place to put a distinct context?  I'd be
happy with other proposals that try to address the same issue.

Thanks for the thoughtful discussion,

--dkg",<87y484w020.fsf@alice.fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2016-04-23 16:19:03
5853,TLS 15+,122,1911,"NeutralResponse,ProposeAction,InformationProviding",1853,1853,"
A second traditional fix is ""never use the same key for two different
purposes"".  And if the ""general"" in DBJ's story can't deal with many
keys, then use a KDF to derive a key for each purpose from the general's
key.  You can even have multi-level use of KDFs.  Once can be each
semantic domain the general uses, and a second level can be for
protocols (e.g. ""PGP""), etc., as deep as you need to go.

This keeps the issue of domain separation independent of encryption APIs
and algorithms.
",<571BF701.4050007@sbcglobal.net>,dmjacobson@sbcglobal.net,0.0,0,13,2016-04-23 15:28:17
5854,TLS 15+,122,1914,"ContextSetting,InformationProviding",,-1,I see after a long absence that I missed a new flare-up of the Great Context Debate (tm). :),<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5855,TLS 15+,122,1950,"ContextSetting,InformationProviding",,-1,"
When I originally proposed the hashing scheme that included contexts for Ed448, I brought up this Ed25519 backward-compatibility issue, and suggested a few alternatives, at least one of which as I recall was similar to DKG’s suggestion.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5856,TLS 15+,122,1951,"ProposeAction,ProposeAction,Agreement",112,-1,"
At any rate, I agree with DKG and others that it would be nice for the RFC to specify a way to deal with an *optional* context parameter for Ed25519 - for consistency with Ed448 if nothing else - while preserving Ed25519 backward compatibility when the context parameter is missing/empty.  No one is forced to use it, but having it in the RFC - and in the APIs of implementations that choose to support it - both makes the RFC more self-consistent and offer a small robustness benefit to new protocols that decide to use contexts.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5857,TLS 15+,122,1952,"InformationProviding,ExtensionOfPrevious,ProposeAction",1951,-1,"
While the same domain-separation benefit can always be achieved by just prefixing the message, having an explicit context parameter in an API forces the software developer who’s calling that API to see it, and think “do I need to pass something there? what? should I ask a colleague?”  Whereas it’s much easier (essentially trivial) to “forget” to decide to prefix a signed message with something, especially if you’re not a crypto-geek and never heard that you were supposed to.  TLS won’t use contexts, and that’s fine, bit TLS isn’t the relevant “customer” here.  The “customer” is all the possible users of Ed25519 that are *not* nearly so widely-analyzed as TLS.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5858,TLS 15+,122,1953,"InformationProviding,ExtensionOfPrevious,ProposeAction",1952,-1,"
Yes, key-separation practices are good too, but do not substitute for the domain-separation that contexts can provide, because relying on key-separation exposes message-confusion risks at much higher levels of the “protocol stack” where key management occurs.  If an IETF protocol or proprietary application protocol is designed to use of a context, then any properly-functioning software implementing that protocol will enforce that domain-separation independently of how well or badly users or administrators might manage their keys.  Contexts provide a way for the protocol and software developer to enforce domain separation, whereas key-separation in many environments is something users and administrators have to do.  As others have stated, it’s about redundancy: no one is saying key-separation is bad, but encouraging the use of both reduces the chance of something going critically wrong at *both* levels (protocol design/implementation and key management).",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5859,TLS 15+,122,1954,"ContextSetting,Agreement,ContextSetting",112,-1,"
In terms of how exactly to specify a backward-compatible context mechanism for Ed25519, I would certainly support DKG’s specific proposal where context may be empty) as offering a reasonable balance between simplicity and domain-separation goals.  But just to explore a couple slightly different variants with slightly different tradeoffs:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5860,TLS 15+,122,1955,"ProposeAction,ContextSetting,ProposeAction",,-1,"
1. DKG’s proposal (baseline): mainly just change H(x) in Table 1 to H(context || x), where context may be empty for backward-compatibility.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5861,TLS 15+,122,1956,"ProposeAction,ProposeAction",,-1,"
2. Change the H(x) line in Table 1 to:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5862,TLS 15+,122,1957,"ExtensionOfPrevious,ExtensionOfPrevious",1956,-1,"
|    H(x)   | SHA-512(x) [RFC4634] if ctx is empty               |
|    H(x    | SHA-512(len(ctx) || ctx || x) if ctx is nonempty   |",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5863,TLS 15+,122,1958,"ExtensionOfPrevious,ExtensionOfPrevious","1954,1957",-1,"
Advantage: stronger domain separation, ensuring any use that specifies a context is domain-separated from any use that does not.
Downside: slightly more complex specification and code (one ‘if’ statement), though this bit of complexity is hidden from callers of the Ed25519 API.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5864,TLS 15+,122,1959,"ProposeAction,ContextSetting",,-1,"
3. Change the H(x) line in Table 1 to:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5865,TLS 15+,122,1960,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",1959,-1,"
|    H(x)   | SHA-512(len(context)^len(context) || context || x) [RFC4634]    |
…that is, the prefix is L consecutive bytes having value L, where L is the length of the context string, followed by the context and x.  So:",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5866,TLS 15+,122,1961,"ExtensionOfPrevious,ExtensionOfPrevious",1960,-1,"
- empty context: H(x) is SHA-512(x)
- context = “foo”: H(x) is SHA-512(“\3\3\3foo” || x)
- context = “blah”: H(x) is SHA-512(“\4\4\4\4blah” || x)",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5867,TLS 15+,122,1962,"ExtensionOfPrevious,ExtensionOfPrevious","1959,1961",-1,"
Advantage: eliminates the need for a special-case (the ‘if’ statement) for backward compatibility, while providing the same stronger domain-separation of alternative #2 above.
Downside: doubles the effective size of the context-prefix to process.  But I can’t imagine this mattering in any practical scenario, especially since contexts are expected to be short strings.",<56CB4525-5392-4749-A5D1-0A9B54D5C8FB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 11:43:33
5868,TLS 15+,122,1965,"Agreement,Agreement",1959,-1,#3 is a clever idea.,<BY2PR09MB126C138CF1136B3DC2F732DF34C0@BY2PR09MB126.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2016-05-21 10:18:52
5869,TLS 15+,122,2015,ContextSetting,,-1,Bryan Ford writes:,<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
5870,TLS 15+,122,2046,ExtensionOfPrevious,2054,1952,>From a security perspective there's even more importance to specifying,<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
5871,TLS 15+,122,2054,"NeutralResponse,Question,NeutralResponse,Question,ProposeAction,InformationProviding",1952,1952,"
And so they copy and paste code from somewhere else, or (if they're in
control of both ends) try the empty string, which works, the same way
that most protocols built on top of DNS are identified in DNS as ""TXT"".
How do you imagine most programmers being successfully pressured to
create a new ""context"" whenever the message semantics change: library
revisions, for example, or state modified by previous messages?

If you think you're solving the fundamental cross-protocol security
problems that I described in ""Side inputs to signature systems, take 2"",
then let me suggest that you follow up in detail to that message. I see
your proposed bottom-to-top API revision as a distraction from the core
task of developing secure message semantics.

We already have too many file-type systems. Most of them were designed
out of complete disregard for previous work; we definitely don't need
more of these. Efforts to define semantics via oversimplified metadata
tags (DOS file types, for example, and MIME types) have always ended up
being supplemented by more flexible mechanisms to define semantics
inline (MP4, for example, and XML). People build software-dispatch
mechanisms around metadata tags and then end up having to build more
flexible software-dispatch mechanisms to handle subtypes declared
inline. Programmers are constantly fighting multiple API layers for
something that could and should have been handled with just one layer.
",<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
5872,TLS 15+,122,2055,"ExtensionOfPrevious,ExtensionOfPrevious,Social",2046,1952,"semantics clearly; it's even more clear that these semantics depend on
application-specific dynamic context; and we _definitely_ don't want
unnecessarily complicated APIs. Separate tags have historically proven
to be inferior to inline mechanisms in all of these dimensions.

---Dan",<20160521135744.10784.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-21 13:57:44
5873,TLS 15+,122,2094,Social,,-1,"Hi Dan,
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
5874,TLS 15+,122,2096,"NeutralResponse,NeutralResponse",2054,-1,"
Even if they just to that, then that’s better than if there was no context parameter.  The subset of developers who just copy-and-paste a “TXT” context parameter for one set of applications (likely related, since they’re more likely to copy-and-paste from a similar application than a completely unrelated application) will be domain-separated from the subset of developers who copy-and-paste a “FOO” context parameter in another set of applications, and from the developers who copy-and-paste a “BAR” context parameter in a third class of applications.  Whereas without the context parameters, there will be no domain separation and the risk of signature confusion is strictly worse than if there were no context parameters.

Further, in any IETF-defined protocol in the future that specifies that the context parameter must be “FOO”, any demonstrably interoperable implementation of that protocol will have to use that context parameter, because an implementation that doesn’t will fail to interoperate in a completely obvious way.  Thus, if the IETF defines the Foo protocol to use “FOO” as the contexts in its signatures, and the Bar protocol is defined to require “BAR” to be used as the context in its signatures, then the FOO and BAR domains will effectively be enforced via the IETF process, leaving it not even up to the application developers.  Of course developers of different Foo implementations will probably still copy-and-paste code that creates “FOO”-context signatures from other implementations of the Foo protocol, but that’s fine.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
5875,TLS 15+,122,2098,"Answer,UnderstandingNegative",2054,2054,"
I never suggested that, and I don’t remember seeing anyone else here suggesting that.  In fact I don’t remember hearing anyone suggesting that programmers be “pressured” to do anything in particular with contexts.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
5876,TLS 15+,122,2100,"Disagreement,NeutralResponse,UnderstandingNegative,ProposeAction,InformationProviding",2054,2054,"
Looking up the message you’re referring to, it looks to me like you’re way overthinking this.

Yes, you could turn the context into a hierarchical filesystem-like namespace if you want, e.g., with “FOO/V1” versus “FOO/V2” being V1-type versus V2-type signatures for protocol or application FOO.  One of the nice things about variable-length strings is that they’re automatically composable, up to the 255-byte limit.  Protocol developers - or other IETF WGs that need to use signatures and need to specify what the “context” should be for those signatures - are free to consider fancy hierarchical schemes like that if they want.  Or not.  The EdDSA RFC need not and should not mandate that or any particular scheme for choosing context strings.  Leave that to those who build applications or protocols that use signatures.  If you don’t want context strings at all in your next application or protocol, then fine, don’t use them (i.e., use the empty string).  No Context Police SWAT team is going to bash down your door and haul you in to the face the Inquisition.

Nobody that I see is proposing that contexts “solve” any “fundamental cross-protocol security problems”.  All they are intended to do is add a bit of (weak, but preferably redundant) protection against certain classes of message-confusion blunders at a software engineering level.
",<3AE8BEC7-37F9-49DA-A196-40D46ECBD59C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2016-05-21 16:36:07
5877,TLS 15+,122,2102,ContextSetting,,-1,Bryan Ford writes:,<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
5878,TLS 15+,122,2131,"NeutralResponse,InformationProviding,NeutralResponse",2096,2096,"
Applications that share keys are very likely to copy this parameter, for
the same reasons that they pretty much always end up copying MIME types.
The benefits you're referring to are limited to cases where applications
share keys but manage to stick _more_ information into this parameter
than they would have stuck into the message itself.

Meanwhile everyone ends up suffering through bottom-to-top complications
in the signature API. This is, in particular, a drag on auditing, and
it's going to end up taking resources away from auditing and fixing the
hard cases of cross-protocol attacks, very much the same way that a pile
of well-intentioned complications to the X.509 certificate format ended
up taking resources away from what we _need_ to do with certificates.
",<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
5879,TLS 15+,122,2133,"NeutralResponse,NeutralResponse,Social",2096,2096,"
The IETF-defined protocols can just as easily use prefixes---in fact,
more easily, because then they simply work with _all_ signature systems
rather than just systems supporting the committee API.

Nobody is objecting to having signature users coordinate message
semantics (especially if they're sharing keys!). Nobody is objecting to
having a central registry of prefixes. But this doesn't need a new API,
and there are many other reasons to object to a new API.

---Dan",<20160523082230.27026.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2016-05-23 08:22:30
5880,TLS 15+,122,2143,"ClarificationElicitation,ClarificationElicitation",2015,2015,"
So, in general, I gather, you’re saying that added complexity is not
simply strictly unnecessary but actually dangerous?  Go figure!
__outer",<AD2B974C-3945-4984-A020-693975C86246@interlog.com>,outer@interlog.com,0.0,0,86,2016-05-21 12:27:40
5881,TLS 15+,123,29,"ContextSetting,InformationProviding,ContextSetting",,-1,"Alissa Cooper has entered the following ballot position for
draft-ietf-tls-tls13-26: Yes",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5882,TLS 15+,123,30,"ProposeAction,ExtensionOfPrevious",29,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5883,TLS 15+,123,31,"InformationProviding,InformationProviding",,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5884,TLS 15+,123,32,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5885,TLS 15+,123,33,"ContextSetting,ContextSetting",,-1,"
COMMENT:",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5886,TLS 15+,123,34,"InformationProviding,ContextSetting,ProposeAction",,-1,"
I found this document to be clear despite its length and complexity. The
Gen-ART reviewer wrote a lengthy review that I encourage the author/WG to look
at. Many of his comments relate to stylistic preferences in the text and some
of them might have been more actionable earlier in the process (e.g., the
suggestion for a minor error code, which I like but wouldn't hold this up
over), but they are worth reviewing. For example, I was also confused about the
use of ""fatal alert"" versus ""error alert,"" and I also found the invocation of
the SNI check in 4.6.1 to be introduced abruptly.",<152036351843.28342.5480274019807176105.idtracker@ietfa.amsl.com>,alissa@cooperw.in,0.0,1,0,2018-03-06 11:11:58
5887,TLS 15+,124,1731,"ContextSetting,ProposeAction",,-1,"Reviewer: Dale Worley
Review result: Ready with Nits

I am the assigned Gen-ART reviewer for this draft.  The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair.  Please treat these comments just
like any other last call comments.

For more information, please see the FAQ at
<https://wiki.tools.ietf.org/area/gen/wiki/GenArtfaq>.

Document:  draft-ietf-tls-tls13-24
Reviewer:  Dale R. Worley
Review Date:  2018-03-02
IETF LC End Date:  2018-03-02
IESG Telechat date:  2018-03-08

Summary:

This draft is basically ready for publication, but has nits
that should be fixed before publication.

This review only covers the general properties of the proposed
protocol and the exposition, as I am unqualified to assess its
security properties.

There are various places where the exposition could be made clearer,
especially to readers not immersed in security matters.  In many
places, it is mostly a matter of making clearer the connections
between different points in the exposition.

In a few places, there seems to be ambiguity regarding the
specification that has technical significance.  In particular:

- There is inexactness about ""transcript"", ""handshake context"", and
""context"".

- When a server receives ClientHello, is it obligated to promptly send
not just the ServerHello, but all first-flight messages from
ServerHello through Finished?  (section 4.2.11.3)  I ask this
because the client is only obligated/permitted to send
EndOfEarlyData when it receives the server's Finished.

- It seems inconsistent that the client can send an empty Certificate
message, but the server cannot, even though the server can omit
sending the Certificate message.  (section 4.4.2.4)

- Comparing sections 4.2.10 and 4.6.1, when a PSK was established in
an earlier connection, exactly what are the limitations on the
cryptographic parameters that can be used when the PSK is used in a
resumption connection?  4.2.10 suggests that the following must be
the same in both connections:  TLS version, cipher suite, ALPN.  But
4.6.1 suggests that different cipher suites can be used, as long as
they use the same hash algorithm.

- In regard to section 4.6.1, it seems to require that a client MAY
NOT resume a connection using a ticket issued during a connection in
which the server did not present a certificate for itself, because
in the handshake of the resumption connection, the client is required
to verify that the SNI is compatible with the certificate the server
presented in the original connection.  But that constraint isn't
stated in section 2.2, despite being a global constraint on the
structure of sessions.

- Presumably implementations MUST NOT send zero-length fragments of alert
messages for the same reasons that they cannot send zero-length
fragments of handshake messages (whatever those reasons are).

- There are about 28 error codes but nearly 150 places where the text
require the connection to be aborted with an error -- and hence,
nearly 150 distinct constraints that can be violated.  There are 19
alone for ""illegal_parameter"".  I would like to see an ""alert
extension value"" which assigns a distinct ""minor"" code to each
statement in the text that requires an error response (with
implementations being allowed to be a bit sloppy in providing the
correct minor code).

- I take it that there is no ""close read side"" operation.  (If that
existed, TLS could generate the ""broken pipe"" error.)

There are a number of issues which span the whole text:

The interaction of this draft with extensions defined for previous
versions of TLS is not laid out clearly.  It seems safe enough for
this draft to import data structures from earlier extensions with only
a reference to the earlier RFC, but if an extension defines behavior
(e.g., a negotiation process), exactly what is the specification of
that behavior in TLS 1.3, given that the referenced RFC only defines
its use in TLS 1.2 or earlier?  At the least, there should be an
explicit statement that the behaviors are carried forward in the
""obvious way"".

It's also not clear exactly which previously defined extensions are
brought forward into TLS 1.3.  I suspect that they are all listed in
section 4.2, but is it clearly stated that those, and only those, are
grandfathered in?

Presumably, for any referenced extension, the placement of values in
messages in TLS 1.2 has a ""natural"" analog in TLS 1.3 that at most
involves moving the value from one field to another in certain
messages.  But it would be reassuring to have a clear statement of
this, and an enumeration of any more complex cases.

There are about 28 error codes but nearly 150 places where the text
require the connection to be aborted with an error.  There are 19
alone for ""illegal_parameter"".  I would like to see an ""alert
extension value"" which assigns a distinct ""minor"" code to each
statement in the text that requires an error response.  This code
would make it a lot easier to diagnose what is going wrong with a
handshake.  To avoid making specifying and implementing these codes
too difficult, implementations should be allowed to deviate to a
degree from the specification regarding minor codes, and there should
be a range of codes reserved for implementation-defined uses.
Conversely, there are a couple of places where the implementation MUST
NOT distinguish between different causes of an alert, but I believe
that those are explicitly mentioned in the text.

The terms ""side"", ""server side"", and ""client side"" are used in various
places, despite that ""endpoint"" is the defined term.  I suggest
replacing these terms with ""endpoint"", ""server"", and ""client"".

There are a number of places where ""fatal alert"" is used, but ""error
alert"" seems to be the defined term.

Detail items are:

1.  Introduction

TLS is application protocol independent; higher-level protocols can
layer on top of TLS transparently.

It might be informative to describe the nature of the
currently-defined application protocol (a bidirectional, reliable byte
stream) and similarly, to describe the requirements on the underlying
transport (as far as I can tell, also a bidirectional, reliable byte
stream).

1.1.  Conventions and Terminology

There are a number of terms which are frequently used in the text that
don't seem to be defined.  It's likely that they are only used in
exposition, that if all sentences containing them were deleted, the
document would still be complete and accurate.  But it seems like it
would be easier on the reader to define them.  Terms that come to mind
are:

flight -- it seems to be thought that messages are grouped into
""flights"", where the messages of flight N from one sender cannot be
sent until (more or less) it receives all messages of flights M (1 <=
M <= N) from the peer.

MAC and HMAC -- by a simple count, both of these terms are used
exactly 11 times in the document.  Is there any functional difference
between them?

ticket -- it's not clear what this means concretely.  Abstractly, it
seems to include the set of cryptographic parameters needed to send
application data, but concretely I can't figure out if it is the
entire block of parameters (struct NewSessionTicket), or whether it is
(or can be) just a key that points to the parameters in some database
(the ticket *field* of struct NewSessionTicket).

A related issue is that there is a field ""ticket"" in the structure
""NewSessionTicket"", and, at least conceptually, that structure is also
considered a ""ticket"".  I strongly suggest you change the name of the
field, and then revise uses of ""ticket"" to indicate whether they refer
to the structure or to the field.  Comparing to other parts of the
text, I think you may have intended to call the field ""identity"", as
the value in NewSessionTicket.ticket seems to be intended to be copied
into PreSharedKeyExtension.OfferedPsks.PskIdentity.

RTT, 0-RTT, 1-RTT -- Can these be defined more rigorously?

server name, SNI -- These two terms seem to be used interchangeably
and as if the reader already understands their meaning and use.
Suggest you standardize on one (and list the other as a synonym in the
glossary).  Also include how ""server name"" interacts with the server's
certificate.

advertise -- I think this means when an endpoint sends a message
containing an extension saying that it implements a feature or option,
soliciting the peer to send a message containing the same extension
(and thus agreeing to use the feature/option during this connection).

transcript -- It might be useful to put the definition of this in this
section.  Also, define the ""context"" or ""handshake context"", which
seems to be the sequence of messages included in the transcript hash
(or the concatenation thereof).  But doesn't seem clear what messages
are in the ""handshake context"" for any single usage.

handshake -- This has two meanings:  (1) messages whose content type
is ""handshake"" (see section 5), and (2) messages with content type
""handshake"" that are part of the initial exchange of such messages.
The problem is that there are messages that are (1) but not (2), and
so you get confusing language like the title of section 4.6.

establish vs. provision -- The document mostly adheres to the
convention that pre-shared keys are ""provisioned"" whereas keys that
are set up using TLS (possibly in a previous session) are
""established"".  In particular, ""provisioned"" is only used as an
attribute of keys, whereas ""establishing"" is an action and
""established"" keys are ones created by that action.  But there are
places where the two terms aren't used distinctly.

ALPN -- This is used sporadically throughout the document.

""hash over"" -- A personal gripe of mine is that I look at a hash as a
function, and so its value is a ""hash of (some string)"".  I don't mind
""hash over X"", ""hash protects X"", and ""hash covers X""n when X is
conceptualized as a substring of some larger string, that is, there's
a Y that is explicitly being excluded.  But in a lot of cases in this
document, X is explicitly constructed from various fragments, so
there's no Y.  But maybe all these usages are conventional in
cryptography.

2.  Protocol Overview

The cryptographic parameters used by the secure channel are produced
by the TLS handshake protocol.  This sub-protocol of TLS [...]

I think you want to s/This sub-protocol/The TLS handshake protocol/,
since a naive reader (me!) could consider ""the secure channel"" as a
plausible antecedent of ""this"".

2.1.  Incorrect DHE Share

Note: The handshake transcript includes the initial ClientHello/
HelloRetryRequest exchange; it is not reset with the new ClientHello.

""transcript"" has not been defined yet.  Perhaps:

Note: The handshake transcript (the message input to the MAC in the
Finished message) starts with ...

2.2.  Resumption and Pre-Shared Key (PSK)

Figure 3 shows a pair of handshakes in which the first establishes a
PSK and the second uses it:

The first handshake does not point out where the PSK is established.
Better would be

Figure 3 shows a pair of handshakes in which the first establishes
a PSK and the second uses it.  In the first, a PSK is carried from
the server to the client in the NewSessionTicket message.  In the
second, the identity of the PSK is sent by the client to the server
in the ClientHello.

3.1.  Basic Block Size

The representation of all data items is explicitly specified.  The
basic data block size is one byte (i.e., 8 bits).

""byte"" appears in the text 91 times, and ""octet"" appears 20 times.
You probably want to change the uses of ""octet"" to ""byte"" for
consistency.

3.3.  Vectors

You may want to move section 3.4 to before section 3.3, because
section 3.3 implicitly depends on all numeric fields being unsigned,
whereas the fact that all numeric fields are unsigned is only stated
in section 3.4.

3.5.  Enumerateds

An additional sparse data type is available called enum.  Each

You probably want s/called enum/called enum or enumerated/.

Future extensions or additions to the protocol may define new values.

Add ""... of a previously existing enumerated.""

4.1.2.  Client Hello

In that case, the client MUST send the same
ClientHello (without modification) except:

s/(without modification) except:/without modification, except:/

For every TLS 1.3 ClientHello, this vector
MUST contain exactly one byte set to zero, which corresponds to
the ""null"" compression method in prior versions of TLS.

There is an ambiguity in English, where this might mean ""the number of
bytes in this field which are zero is exactly one"".  It's a bit hard
avoiding the ambiguity, but this seems to work:

For every TLS 1.3 ClientHello, this vector MUST have exactly one
member.  The member MUST be zero, which corresponds to the ""null""
compression method in prior versions of TLS.


The actual ""Extension"" format is defined in Section 4.2.

Probably delete ""actual"".  Most uses of ""actual"" in current writing
(including mine) can be profitably deleted.

4.1.4.  Hello Retry Request

This allows the client to avoid having to
compute partial hash transcripts for multiple hashes in the second
ClientHello.

This seems to be correct but I found it very hard to decode.  This is
clearer:

This allows the client to avoid having to compute hashes of partial
transcripts using multiple hash functions, to be used in binders in
the second ClientHello.

4.2.  Extensions

In TLS 1.3, unlike TLS 1.2, extensions are negotiated for each
handshake even when in resumption-PSK mode.  However, 0-RTT
parameters are those negotiated in the previous handshake; mismatches
may require rejecting 0-RTT (see Section 4.2.10).

I think what you mean is:

Even for a session that is resumed using a PSK established in an
earlier session, the applicable extensions are negotiated in its
initial handshake and aren't carried over from the handshake of the
session which established the PSK.  However, the parameters
applicable to 0-RTT data are those negotiated in the previous
handshake; if those parameters are unacceptable to the server, it
may reject use of 0-RTT in the session (see Section 4.2.10).


Servers should be prepared to receive
ClientHellos that include this extension but do not include 0x0304 in
the list of versions.

s/should/SHOULD/

4.2.2.  Cookie

Clients MUST NOT use cookies in their initial ClientHello in
subsequent connections.

I think this becomes cleaner if you omit ""in subsequent connections"".

4.2.3.  Signature Algorithms

Items ""RSASSA-PSS RSAE algorithms"" and ""RSASSA-PSS PSS algorithms""
both contain:

If the public key is carried in an X.509 certificate,
it MUST use the rsaEncryption OID [RFC5280].

I think ""it"" references ""certificate"", so it would be clearer to say

If the public key is carried in an X.509 certificate,
the certificate MUST use the rsaEncryption OID [RFC5280].


If the corresponding public key's parameters present, [...]

s/parameters present/parameters are present/

-  Implementations that advertise support for RSASSA-PSS (which is
mandatory in TLS 1.3), [...]

The phrase ""Implementations that advertise"" makes me think of the
label on the box.  I think you mean ""Endpoints that advertise"".

The ""extension_data"" field of these extension contains a
SignatureSchemeList value:

I think s/these extension/these extensions/ (rather than s/these
extension/this extension/).

4.2.7.  Negotiated Groups

Items in named_group_list are ordered according to the client's
preferences (most preferred choice first).

This can be simplified to ""Items in named_group_list are in descending
order of the client's preferences.""

4.2.8.  Key Share

group  The named group for the key being exchanged.  Finite Field
Diffie-Hellman [DH] parameters are described in Section 4.2.8.1;
Elliptic Curve Diffie-Hellman parameters are described in
Section 4.2.8.2.

I think this should be capitalized as ""Finite field Diffie-Hellman
..."" and ""Elliptic curve Diffie-Hellman ..."".

key_exchange  Key exchange information.  The contents of this field
are determined by the specified group and its corresponding
definition.

This could be better defined by rearranging the two items, since the
parameters don't describe the group, they describe the key being
exchanged:

group  The value designating the named group for the keys being
exchanged, as defined in section 4.2.7.

key_exchange  The key exchange information.  Finite field
Diffie-Hellman [DH] parameters are described in Section 4.2.8.1;
Elliptic curve Diffie-Hellman parameters are described in
Section 4.2.8.2.


Each KeyShareEntry value MUST correspond to a
group offered in the ""supported_groups"" extension and MUST appear in
the same order.

I think you mean to require that for a given group there can be only
one KeyShareEntry.  So you could say

Each KeyShareEntry value MUST correspond to a distinct group
offered in the ""supported_groups"" extension, and the KeyShareEntrys
MUST appear in the order their groups appear (possibly
non-consecutively) in ""supported_groups"".

4.2.8.1.  Diffie-Hellman Parameters

This check ensures that the remote peer is properly behaved
and isn't forcing the local system into a small subgroup.

s/into a small subgroup/into insecure operation/?

4.2.8.2.  ECDHE Parameters

For the curves secp256r1, secp384r1 and secp521r1, peers MUST
validate each other's public value Y by ensuring that the point is a
valid point on the elliptic curve.  The appropriate validation
procedures are defined in Section 4.3.7 of [X962] and alternatively
in Section 5.6.2.3 of [KEYAGREEMENT].  This process consists of three
steps: (1) verify that Y is not the point at infinity (O), (2) verify
that for Y = (x, y) both integers are in the correct interval, (3)
ensure that (x, y) is a correct solution to the elliptic curve
equation.  For these curves, implementers do not need to verify
membership in the correct subgroup.

It seems that the language of this paragraph is a version behind,
particularly in that this paragraph seems to use ""Y"" differently from
the definition of UncompressedPointRepresentation.  Comparing with
[KEYAGREEMENT], it seems like it ought to read (with changes marked

For the curves secp256r1, secp384r1 and secp521r1, peers MUST
validate each other's public value >>>Q = (X, Y)<<< by ensuring
that the point is a valid point on the elliptic curve.  The
appropriate validation procedures are defined in Section 4.3.7 of
[X962] >>>or<<< alternatively in Section >>>5.6.2.3.3<<< of
[KEYAGREEMENT].  This process consists of three steps: (1) verify
that >>>Q<<< is not the point at infinity (O), (2) verify that
>>>both integers X and Y <<< are in the correct interval, >>>and<<<
(3) ensure that >>>Q<<< is a correct solution to the elliptic curve
equation.  For these curves, implementers do not need to verify
membership in the correct subgroup.

(You can s/or alternatively/and also/)

In particular, 5.6.2.3.3 of [KEYAGREEMENT] is ""validation without
verifying subgroup membership"", so it needs to be verified that this
procedure expresses the author's intent.

4.2.9.  Pre-Shared Key Exchange Modes

psk_dhe_ke  PSK with (EC)DHE key establishment.  In this mode, the
client and servers MUST supply ""key_share"" values as described in
Section 4.2.8.

s/servers/server/

4.2.10.  Early Data Indication

For
externally established PSKs, the associated values are those
provisioned along with the key.

Probably s/externally established/provisioned/.

For PSKs provisioned via NewSessionTicket, a server MUST validate
that the ticket age for the selected PSK identity (computed by
subtracting ticket_age_add from PskIdentity.obfuscated_ticket_age
modulo 2^32) is within a small tolerance of the time since the ticket
was issued (see Section 8).

s/provisioned/established/.

s/ticket_age_add/ticket_age_add in the ticket/.

0-RTT messages sent in the first flight have the same (encrypted)
content types as their corresponding messages sent in other flights
(handshake and application_data) but are protected under different
keys.

s/as their corresponding messages sent in/as messages of the same types sent in/

After receiving the server's Finished message, if the server
has accepted early data, an EndOfEarlyData message will be sent to
indicate the key change.  This message will be encrypted with the
0-RTT traffic keys.

This is awkward.  Perhaps

After receiving the server's Finished message, if the server
has accepted early data, the client will send an EndOfEarlyData message
indicate that following (non-early) application data uses the
negotiated keys.  The EndOfEarlyData message is be encrypted with the
0-RTT traffic keys.


-  Return its own extension in EncryptedExtensions, indicating that
it intends to process the early data.

s/its own extension/an early_data extension/

""pre_shared_key"" extension.  In addition, it MUST verify that the
following values are consistent with those associated with the
selected PSK:

s/consistent with/the same as/

If the server chooses to accept the ""early_data"" extension, then it
MUST comply with the same error handling requirements specified for
all records when processing early data records.

It seems like this could be misread by binding ""when processing..."" to
""specified"".  This avoids that:

If the server chooses to accept the ""early_data"" extension, then it
MUST apply to early data records the same error handling
requirements specified for other data records.


Specifically, if the
server fails to decrypt any 0-RTT record following an accepted
""early_data"" extension it MUST terminate the connection with a
""bad_record_mac"" alert as per Section 5.2.

But probably better to s/any/an/.

If the server rejects the ""early_data"" extension, the client
application MAY opt to retransmit early data once the handshake has
been completed.

Better:

[...] MAY opt to retransmit as non-early data the application data
contained in the early data records


Note that automatic re-transmission of early data
could result in assumptions about the status of the connection being
incorrect.

This doesn't quite say what you want.  Better

Note that after connection establishment, the application may
consider the status of the connection to be different than it was
for early data, and so transmitting the same bytes as non-early
application data may not have the same effect as transmitting them
as early application data.


Similarly,
if early data assumes anything about the connection state, it might
be sent in error after the handshake completes.

A bit awkward.  Perhaps

Similarly,
if early data assumes anything about the connection state, it might
be erroneous to re-send the same data after the handshake completes.

4.2.11.  Pre-Shared Key Extension

The ""pre_shared_key"" extension is used to indicate the identity of
the pre-shared key to be used with a given handshake in association
with PSK key establishment.

s/indicate/negotiate/ -- because more than one can be offered.

selected_identity  The server's chosen identity expressed as a
(0-based) index into the identities in the client's list.

I think this is intended as an index into the (abstract) vectors
OfferedPsks.identities and OfferedPsks.binders, as opposed to an
offset into the serialized data structures.  You could be clearer with

selected_identity  The server's chosen identity expressed as a
(0-based) index into the vector of identities in OfferedPsks.


identity  A label for a key.  For instance, a ticket defined in
Appendix B.3.4 or a label for a pre-shared key established
externally.

See issues regarding ""ticket"" in section 1.1.

In TLS versions prior to TLS 1.3, the Server Name Identification
(SNI) value was intended to be associated with the session (Section 3
of [RFC6066]), with the server being required to enforce that the SNI
value associated with the session matches the one specified in the
resumption handshake.  However, in reality the implementations were
not consistent on which of two supplied SNI values they would use,
leading to the consistency requirement being de-facto enforced by the
clients.  In TLS 1.3, the SNI value is always explicitly specified in
the resumption handshake, and there is no need for the server to
associate an SNI value with the ticket.  Clients, however, SHOULD
store the SNI with the PSK to fulfill the requirements of
Section 4.6.1.

See issue regarding ""SNI"" in section 1.1.

Implementor's note: the most straightforward way to implement the
PSK/cipher suite matching requirements is to negotiate the cipher
suite first and then exclude any incompatible PSKs.

I think you mean:

Implementor's note: the most straightforward way for the server to
implement the PSK/cipher suite choice requirements is to choose the
cipher suite first and then exclude any PSKs incompatible with the
chosen cipher suite.

since this doesn't seem to describe an interaction between the server
and the client, but simply how the server responds to one message.

In order to accept PSK key
establishment, the server sends a ""pre_shared_key"" extension
indicating the selected identity.

I think this sentence would read better as a separate paragraph.

This extension MUST be the last extension in the ClientHello. (This
facilitates implementation as described below.)

Given that the previous paragraph discussed the early_data extension,
""This extension"" isn't clear.  So s/This extension/The
""pre_shared_key"" extension/.

If this
value is not present or does not validate, the server MUST abort the
handshake.

s/does not validate/is not valid/  (An actor validates a value; a
value is validated.)

4.2.11.1.  Ticket Age

The ""obfuscated_ticket_age""
field of each PskIdentity contains an obfuscated version of the
ticket age formed by taking the age in milliseconds and adding the
""ticket_age_add"" value that was included with the ticket, see
Section 4.6.1 modulo 2^32.

Clearer would be

[...] ""ticket_age_add"" value that was in the NewSessionTicket for
the ticket, modulo 2^32.


Note that
the ""ticket_lifetime"" field in the NewSessionTicket message is in
seconds but the ""obfuscated_ticket_age"" is in milliseconds.

Expand to

Note that
the ""ticket_lifetime"" field in the NewSessionTicket message is in
seconds but the ""obfuscated_ticket_age"" and ""ticket_age_add"" fields
are in milliseconds.

4.2.11.3.  Processing Order

Clients are permitted to ""stream"" 0-RTT data until they receive the
server's Finished, only then sending the EndOfEarlyData message,
followed by the rest of the handshake.  In order to avoid deadlocks,
when accepting ""early_data"", servers MUST process the client's
ClientHello and then immediately send the ServerHello, rather than
waiting for the client's EndOfEarlyData message.

This is awkward, and omits the remainder of the servers' first flight
messages.  Better is

Clients are permitted to ""stream"" 0-RTT data until they receive the
server's Finished message, only then sending the EndOfEarlyData
message, and the rest of the handshake.  In order to avoid
deadlocks, when accepting early data, servers MUST process the
client's ClientHello immediately upon receipt, and immediately send
all of its first flight messages from ServerHello through Finished,
rather than waiting for the client's EndOfEarlyData message.

4.4.  Authentication Messages

Certificate  The certificate to be used for authentication, and any
supporting certificates in the chain.  Note that certificate-based
client authentication is not available in 0-RTT mode.

Probably better to say s/in 0-RTT mode/for 0-RTT data/ -- or perhaps
""early data"".

The following table defines the Handshake Context and MAC Base Key
for each scenario:

Eh, what?  I think what you mean is that this table specifies what
base keys are used for which messages.  But ""Mode"" and ""Handshake
Context"" don't seem to be defined terms.  It seems to me that a better
specification is the annotations in the state diagrams in Appendix A,
which note for each message that is sent what key applies to it.

Only after reading the text again do I realize that the ""Handshake
Context"" column is listing what the handshake context *is* at various
points in time.  My confusion connects with the need for a more formal
definition of ""handshake context"".

4.4.1.  The Transcript Hash

Many of the cryptographic computations in TLS make use of a
transcript hash.  This value is computed by hashing the concatenation
of each included handshake message, including the handshake message
header carrying the handshake message type and length fields, but not
including record layer headers.  I.e.,

There are a number of awkward spots in how this is phrased.  Better:

Many of the cryptographic computations in TLS make use of a
transcript hash.  This value is computed by hashing the concatenation
of a sequence of messages in the handshake, with each message
including the TLS message type and length fields, but not any
headers of the underlying transport protocol.


Transcript-Hash(M1, M2, ... MN) = Hash(M1 || M2 ... MN)

Usually, symbol for ""the n-th message"" would use lower-case ""n"" as the
index, and one usually puts the operator before and after ""..."".  Also
add verbal explanation:

The transcript hash of messages M1 through Mn is:

Transcript-Hash(M1, M2, ... Mn) = Hash(M1 || M2 || ... || Mn)

Continue,

As an exception to this general rule, when the server has responded to a
ClientHello with a HelloRetryRequest, the first ClientHello is
replaced with a special synthetic handshake message of message type
""message_hash"" whose data part is Hash(first ClientHello).  I.e.,

Transcript-Hash(ClientHello1, HelloRetryRequest, ... Mn) =
Hash(message_hash ||        /* Handshake type (1 byte) */
00 00 Hash.length ||   /* Handshake message length, in bytes (3 bytes) */
Hash(ClientHello1) ||  /* Hash of ClientHello1 */
HelloRetryRequest || ... || Mn)

The reason for this construction is to allow the server not
store state after sending HelloRetryRequest by storing just the
hash of the first ClientHello in the cookie, rather than requiring
it to store all of the ClientHello or the entire intermediate hash
state (see Section 4.2.2).


For concreteness, the transcript hash is always taken from the
following sequence of handshake messages, starting at the first

This is awkward.  Perhaps

the transcript hash is always of the following sequence of
handshake messages, starting at the first ClientHello and including
only those messages that we sent/received:


In general, implementations can implement the transcript by keeping a
running transcript hash value based on the negotiated hash.

Probably s/negotiated hash/negotiated hash function/.

Also, this needs to include the modification of truncating the last
message if it is to include the transcript hash.  I think you need
something like:

If the last message, Mn, is to include the transcript hash, then
the transcript hash is always the last field of the message, and
that message is first truncated by removing that field from the
message.  (The message length field of Mn is unmodified; it includes
the length of the transcript hash.)

Transcript-Hash(M1, M2, ... Mn) = Hash(M1 || M2 || ... || Truncate(Mn))

4.4.2.  Certificate

If the corresponding certificate type extension
(""server_certificate_type"" or ""client_certificate_type"") was not
negotiated in Encrypted Extensions, or the X.509 certificate type was
negotiated, then each CertificateEntry contains a DER-encoded X.509
certificate.

This needs a reference to RFC 7250 to define certificate type
extension.  Also, see the general issues regarding extensions.

Each following certificate SHOULD
directly certify one preceding it.

The phrase ""one preceding it"" allows extraneous certificates in the
list, as ""one preceding it"" doesn't usually require that it be
immediately preceding.  I think you mean ""the one preceding it"", which
does require it to be immediately preceding, and thus does not allow
extraneous certificates in the chain.

4.4.2.1.  OCSP Status and SCT Extensions

CertificateStatus message.  In TLS 1.3, the server's OCSP information
is carried in an extension in the CertificateEntry containing the
associated certificate.

Clearer to phrase it:

[...] in the CertificateEntry containing the
associated certificate in the Certificate message.


CertificateRequest message.  If the client opts to send an OCSP
response, the body of its ""status_request"" extension MUST be a
CertificateStatus structure as defined in [RFC6066].

s/its ""status_request"" extension""/the ""status_request"" extension in
its Certificate message/.

4.4.2.2.  Server Certificate Selection

All certificates provided by the server MUST be signed by a signature
algorithm advertised by the client, if they are able to provide such
a chain (see Section 4.2.3).

Probably better a/All certificates/Each certificate/.

s/they are/the server is/

If the client cannot construct an acceptable chain using [...]

The purpose of this paragraph is not clear.  Was ""server"" meant?  If
so, it seems to be redundant.  I think it is intended to discuss how
the client processes the (alleged) certificate chain presented by the
server, in which case, it's a sharp change of focus for this section.
That could be aided by moving this paragraph to the end of the section
and adding some words:

If the client cannot construct an acceptable chain from the
certificates provided by the server and decides to abort the
handshake, then it MUST abort the handshake with an appropriate
certificate-related alert (by default, ""unsupported_certificate"";
see Section 6.2 for more).

But it would probably be better to integrate it into section 4.4.2.4.

4.4.2.3.  Client Certificate Selection

-  If the CertificateRequest message contained a non-empty
""oid_filters"" extension, the end-entity certificate MUST match the
extension OIDs recognized by the client, as described in
Section 4.2.5.

More exact would be ""must match the extension OID/value pairs that are
recognized by the client.""

4.4.2.4.  Receiving a Certificate Message

It seems inconsistent that the client can send an empty Certificate
message, but the server cannot, even though the server can omit
sending the Certificate message.

4.4.3.  Certificate Verify

This message is used to provide explicit proof that an endpoint
possesses the private key corresponding to its certificate.

I'd prefer s/to its certificate/to the certificate it has presented/.

The discussion of how ""signature"" is formed is awkward and I'm not
sure I understand it.  E.g., the digital signature is computed ""over""
a string, but one part of that string is ""the content to be signed"".
I think it could be made clearer as:

The algorithm field specifies the signature algorithm used (see
Section 4.2.3 for the definition of this field).  The signature is a
digital signature using that algorithm.  The string that is signed
is the concatenation of:

-  A string that consists of octet 32 (0x20) repeated 64 times

-  The context string

-  A single 0 byte which serves as a separator

-  Transcript-Hash(Handshake Context, Certificate)

But that leaves unclear what ""context string"" and ""Handshake Context""
are.  I think you want to define those back in 4.4.1 (and probably
also in 1.1) as both being the concatenation of the messages that are
in the transcript to this point.  I also assume that the Certificate
Verify message is truncated when it is put into the Transcript-Hash
and ""context string"", but that needs to be stated.

4.4.4.  Finished

The key used to compute the finished message is computed from the

s/finished/Finished/

The key used to compute the finished message is computed from the
Base key defined in Section 4.4 using HKDF (see Section 7.1).

This is correct, but you have to read further to understand the key
described here isn't the key that encrypts the finished message.  It
would be easier to understand if the text was rearranged:

Structure of this message:

struct {
opaque verify_data[Hash.length];
} Finished;

The verify_data value is computed as follows:

finished_key =
HKDF-Expand-Label(BaseKey, ""finished"", """", Hash.length)

verify_data =
HMAC(finished_key,
Transcript-Hash(Handshake Context,
Certificate*, CertificateVerify*))

* Only included if present.

And this is another instance where the poorly-defined ""Handshake
Context"" appears.

Any records following a 1-RTT Finished message MUST be encrypted
under the appropriate application traffic key as described in
Section 7.2.

Are there any non-1-RTT Finished messages?  And aren't all application
data records encrypted under the ""appropriate"" key?  Or is an
""application traffic key"" different from the keys used for application
data early in the connection?  This needs to be rephrased somehow, but
I can't guess in what way.

4.6.  Post-Handshake Messages

This section name is awkward.  Of course, there are messages after the
handshake.  I think the problem is that there are ""handshake
messages"", messages with handshake types (or content type
""handshake""), that are not part of ""the handshake"", the initial
exchange of handshake-type messages.  In the end, you need to decide
what terminology to use so that the title of this section makes sense.

the appropriate application traffic key.

Is there a strict accounting of what messages are encrypted using
which key?

4.6.1.  New Session Ticket Message

message, it MAY send a NewSessionTicket message.  This message
creates a unique association between the ticket value and a secret
PSK derived from the resumption master secret.

It would be useful to mention that the resumption_master_secret is
defined/computed in section 7.1.

Does ""ticket value"" mean the NewSessionTicket structure or the
""ticket"" field within it.  See issues regarding ""ticket"" for section
1.1.

(Section 4.2.11).  Servers MAY send multiple tickets on a single

Note the conflation here of ""ticket"" with ""NewSessionTicket message"".

Any ticket MUST only be resumed with a cipher suite that has the same
KDF hash algorithm as that used to establish the original connection.

How is a ticket ""resumed""?

Also, since in a ""resumption"" connection, the ticket that is used is
(or refers to) a PSK, the above statement corresponds to
the statement ""In addition, it MUST verify that the
following values are consistent with those associated with the
selected PSK:"" in section 4.2.10.

Clients MUST only resume if the new SNI value is valid for the server
certificate presented in the original session, and SHOULD only resume
if the SNI value matches the one used in the original session.

What does it mean to say a client ""resumes""?

Here we suddenly descend into the usage of what seems to be an
extension, server_name, which is presumably optional and logically
added on to TLS rather than being an integral part of it.

Also the logic isn't described very cleanly; I think it means ""A
client must abort resuming a connection if the ServerHello message
does not contain a server_name extension whose value is a valid SNI
for the server certificate presented in the original session ..."".

All of this seems to require that a client MAY NOT resume a connection
using a ticket issued during a connection in which the server did not
present a certificate for itself.  But that constraint wasn't stated
in section 2.2, despite being a global constraint on the structure of
sessions.

Or am I wrong in believing that the client chooses to resume the
connection by placing the ticket in the ClientHello *before* it
receives the ServerHello (which contains the SNI)?  This paragraph
seems to be written as if the client decides to resume after receiving
ServerHello.

ticket_lifetime  Indicates the lifetime in seconds as a 32-bit
unsigned integer in network byte order from the time of ticket
issuance.

Probably better to s/the time of ticket issuance/the time the
NewSessionTicket was sent to the client/, unless ""issuance""/""to issue""
is explicitly defined somewhere.

ticket  The value of the ticket to be used as the PSK identity.  The
ticket itself is an opaque label.

This shows the ambiguities around ""ticket""; this specification says
that ""'ticket' is the value of the ticket to be used as the PSK
identity"".

Is it intended that the ""ticket"" field of NewSessionTicket will become
the ""identity"" field of PskIdentity.OfferedPsks.PreSharedKeyExtension?

max_early_data_size  The maximum amount of 0-RTT data that the client
is allowed to send when using this ticket, in bytes.  Only
Application Data payload (i.e., plaintext but not padding or the
inner content type byte) is counted.  A server receiving more than
max_early_data_size bytes of 0-RTT data SHOULD terminate the
connection with an ""unexpected_message"" alert.  Note that servers
that reject early data due to lack of cryptographic material will
be unable to differentiate padding from content, so clients SHOULD
NOT depend on being able to send large quantities of padding in
early data records.

The last sentence assumes that a server that ""reject early data due to
lack of cryptographic material"" will be strict and count all bytes in
early data messages against the max_early_data_size quota.  However, a
server in such a situation could be liberal and not bother counting
any bytes -- since it will be discarding early data messages
(immediately after discovering that it can't decrypt them), it never
has to buffer more than one of them.  Unless I'm overlooking
something, this advice isn't needed, since a server in this situation
isn't buffering early data.

4.6.2.  Post-Handshake Authentication

All of the client's
messages for a given response MUST appear consecutively on the wire
with no intervening messages of other types.

Better, ""consecutively in the underlying transport stream"".  But that
is a little vague given the message/fragment/record mechanism.  More
exactly,

All of the client's messages for a given response MUST appear
consecutively on the wire, that is, the records containing the
fragments of the messages composing the client's response must
appear consecutively in the underlying transport stream.

4.6.3.  Key and IV Update

I think you want to promote the first paragraph before the data
structure definition.

5.  Record Protocol
and
5.1.  Record Layer

The text isn't very clear about the message/fragment/record mechanism.
The text wants to consider the data for each content type to consist
of a series of messages.  The messages are cut into fragments.
Adjacent fragments within one content type stream can be concatenated
to form the content of TLSPlaintext structures.

One problem is that despite this model, the boundary between messages
isn't carried through the transport.  For application data, message
boundaries are lost entirely.  For handshake and alert content types,
there are some complex restrictions how their message boundaries show
up as record boundaries, but the actual framing of messages is done
""in band"" by the message length fields.  A closer description of the
services TLS provides is that the data for each content type is a
stream that can be broken arbitrarily into fragments that are the
content of records, except:

- The boundaries of alert messages must be boundaries of the records
that carry them and no record boundary can be introduced into an
alert message.

- If two records contain fragments of the same handshake message, all
records between them must contain only fragments of that handshake
message.

- If there is a key change between the sending of two handshake
messages, there must be a record boundary between them.

-  Handshake messages MUST NOT span key changes.  Implementations
MUST verify that all messages immediately preceding a key change
align with a record boundary; if not, then they MUST terminate the
connection with an ""unexpected_message"" alert.  Because the
ClientHello, EndOfEarlyData, ServerHello, Finished, and KeyUpdate
messages can immediately precede a key change, implementations
MUST send these messages in alignment with a record boundary.

Is this description correct?  As written, it says ""because a key
change can happen after message X, there must be a record boundary
after message X"", which isn't exactly the same as ""Handshake messages
MUST NOT span key changes"" -- unless there is always a key change
following these message types, in which case s/can immediately
precede/always precede/.  I think the three points listed above give a
clearer and more accurate version.

Implementations MUST NOT send zero-length fragments of Handshake
types, even if those fragments contain padding.

Presumably implementations MUST NOT send zero-length fragments of alert
messages also.

When record protection has not yet been engaged, TLSPlaintext
structures are written directly onto the wire.

Better ""... sent directly using the underlying transport protocol"".

5.2.  Record Payload Protection

I *think* what's going on with record protection is:

- The TLSPlaintext is turned into a TLSInnerPlaintext by moving the
type field, removing the length field, and copying ""fragment"" to
""content"".  (Why do the structures use different names for the data
fragment?)

- The encryption is done by:

AEADEncrypted =
AEAD-Encrypt(write_key, nonce, plaintext)

where plaintext is TLSInnerPlaintext and AEADEncrypted becomes
TLSCiphertext.encrypted_record.

- TLSCiphertext is transmitted.

But the text doesn't say this at all plainly.  I would add before
""AEAD algorithms take..."":

The TLSPlaintext is converted into a TLSInnerPlaintext by copying the
type field, removing the length field, and copying the fragment
field.

(assuming we rename ""content"" to ""fragment"")

Then replace the equation by:

encrypted_record =
AEAD-Encrypt(endpoint_write_key, nonce, TLSInnerPlaintext)


The key is either the
client_write_key or the server_write_key, the nonce is derived from
the sequence number (see Section 5.3) and the client_write_iv or
server_write_iv, and the additional data input is empty (zero
length).

It would be clearer to move the reference to read ""the nonce is
derived from the sequence number and the client_write_iv or
server_write_iv (see Section 5.3)"" as section 5.3 describes both the
sequence number and the derivation.

Similarly, the decryption algorithm is better expressed by

TLSInnerPlaintext =
AEAD-Decrypt(peer_write_key, nonce, encrypted_record)


This limit
is derived from the maximum TLSPlaintext length of 2^14 octets + 1
octet for ContentType + the maximum AEAD expansion of 255 octets.

s/TLSPlaintext/TLSInnerPlaintext/ -- the maximum length of
TLSPlaintext is 2^14 + 5.

5.3.  Per-Record Nonce

The appropriate sequence number is incremented by one after reading
or writing each record.  The first record transmitted under a
particular traffic key MUST use sequence number 0.

I think the first and second paragraphs could be profitably combined:

A 64-bit sequence number is maintained separately for reading and
writing records and is incremented by one after reading or writing
each record.  Each sequence number is set to zero at the beginning
of a connection and whenever the key for that direction is changed;
the first record transmitted under a particular traffic key uses
sequence number 0.


Because the size of sequence numbers is 64-bit, they should not wrap.

The sense of ""should"" is not clear.  I think what you want to say is

Because the size of sequence numbers is 64 bits, there is no need to
allow sequence numbers to wrap.


Each AEAD algorithm will specify a range of possible lengths for the
per-record nonce, from N_MIN bytes to N_MAX bytes of input

I think this is clearer (as it makes clear where N_MIN comes from):

Each AEAD algorithm specifies an N_MIN and N_MAX, which give the
range of possible lengths in bytes of the per-record nonce.

5.4.  Record Padding

Padding is a string of zero-valued bytes appended to the
ContentType field before encryption.

More exact would be

Padding is a string of zero-valued bytes following the type field
in TLSInnerPlaintext.


The presence of padding does not change the overall record size
limitations - the full encoded TLSInnerPlaintext MUST NOT exceed 2^14
+ 1 octets.  If the maximum fragment length is reduced, as for
example by the max_fragment_length extension from [RFC6066], then the
reduced limit applies to the full plaintext, including the content
type and padding.

I think you want s/encoded TLSInnerPlaintext/TLSInnerPlaintext/ -- all
data structures are defined with a concrete representation, so
""encoded"" is redundant, but ""encoded"" could be confused with
""encrypted"" and the encrypted plaintext can be longer than the plaintext.

If the maximum fragment length is reduced, as for
example by the max_fragment_length extension from [RFC6066], then the
reduced limit applies to the full plaintext, including the content
type and padding.

This needs clarification.  I think you mean that if the m.f.l. is
reduced, then the limit on TLSInnerPlaintext is reduced to m.f.l.+1,
but that's not what this says.  OTOH, if this text is accurate, the
maximum length of the fragment proper is m.f.l.-1.

6.  Alert Protocol

Alert messages convey a description of the alert and a legacy field
that conveyed the severity of the message in previous versions of
TLS.  In TLS 1.3, the severity is implicit in the type of alert being
sent, and the 'level' field can safely be ignored.

I think at this point you want to insert ""Alerts are divided into two
classes: closure alerts and error alerts.""

Stateful implementations of tickets (as in many clients)
SHOULD discard tickets associated with failed connections.

What is a ""ticket"" here?

And what are the ""associations"" in question?  E.g., presumably it
includes the ticket used when attempting to establish a connection if
the attempt fails.  But if a NewSessionTicket is received during a
connection, and the connection is later aborted, does the client have
to discard the remembered NewSessionTicket?

All the alerts listed in Section 6.2 MUST be sent as fatal and MUST
be treated as fatal regardless of the AlertLevel in the message.
Unknown alert types MUST be treated as fatal.

This was remarkably confusing until I figured out that the first
""fatal"" means ""with AlertLevel ""fatal"""" and the second and third
""fatal"" mean ""indicates abortive closure""!  Better:

All the alerts listed in Section 6.2 MUST be sent with AlertLevel
""fatal"" and when received MUST be treated as error alerts
regardless of the AlertLevel in the message.  Unknown alert types
MUST be treated as error alerts.

6.1.  Closure Alerts

user_canceled  This alert notifies the recipient that the sender is
canceling the handshake for some reason unrelated to a protocol
failure.  If a user cancels an operation after the handshake is
complete, just closing the connection by sending a ""close_notify""
is more appropriate.  This alert SHOULD be followed by a
""close_notify"".  This alert is generally a warning.

What does ""This alert is generally a warning."" mean?  What is it a
warning of?

Each party MUST send a ""close_notify"" alert before closing its write
side of the connection, unless it has already sent some other fatal
alert.

This implies that close_notify is a ""fatal alert"" (properly, error
alert).  And ""before closing the write side of the connection"" is not
clear, since sending close_notify *is* closing the write side of the
connection.  Better:

Each party MUST send a ""close_notify"" alert before closing the
write side of the underlying transport connection, unless it has
already sent some other error alert.

(Unless I'm mistaken regarding what is intended.)

I take it that there is no ""close read side"" operation.  (If that
existed, TLS could generate the ""broken pipe"" error -- the sender
wants to transmit more data but the receiver is unwilling to receive
it.)

If the application protocol using TLS provides that any data may be
carried over the underlying transport after the TLS connection is
closed, the TLS implementation MUST receive a ""close_notify"" alert
before indicating end-of-data to the application-layer.  No part of
this standard should be taken to dictate the manner in which a usage
profile for TLS manages its data transport, including when
connections are opened or closed.

This isn't clear too me.  The second sentence seems to mean:

A usage profile for TLS specified how it manages its data
transport, including when connections are opened or closed.  No
part of this standard should be taken to dictate the manner in
which a usage profile for TLS manages its data transport.

But I can't figure out what the first sentence means.  It seems to
mean ""If ... a TLS implementation MUST receive a ""close_notify"" alert
before indicating end-of-data to its application-layer."", but that's
obvious behavior, what else would cause it to signal EOD?

Note: It is assumed that closing the write side of a connection
reliably delivers pending data before destroying the transport.

I think you mean

Note: It is assumed that closing the write side of a connection
will cause the peer TLS implementation to reliably deliver all
transmitted data before [what?]

7.  Cryptographic Computations

The TLS handshake establishes one or more input secrets which are
combined to create the actual working keying material, as detailed
below.

Probably delete ""actual"".  Most uses of ""actual"" in current writing
(including mine) can be profitably deleted.

7.1.  Key Schedule

Given the terminology in RFC 5869, struct HkdfLabel probably should be
called HkdfInfo, as it is the ""info"" argument to HKDF-Expand.

Messages are the concatenation of the indicated handshake messages,

s/Messages are/Messages is/!

Given a set of n InputSecrets, the final ""master secret"" is computed
by iteratively invoking HKDF-Extract with InputSecret_1, [...]

This is hard to follow.  If I understand correctly, this is a general
description of the mechanism that is diagrammed below.  But, e.g.,
""secret"" is used for at least two categories of quantities.  It would
be clearer to phrase this:

Generally, we use a construction that takes as input a sequence of
n InputSecrets and from them computes a sequence of derived
secrets.  The initial derived secret is simply a string of
Hash.length bytes set to zeros.  Each successive derived secret is
computed by invoking HKDF-Extract with an InputSecret and the
preceding derived secret as inputs.

Concretely, for the present version of TLS 1.3, the construction
proceeds as diagrammed below, with the InputSecrets on the left
side and the derived secrets passing as shown by the downward
arrows.  The InputSecrets are added in the following order, where
if a given InputSecret is not available, then the 0-value is used
in its place:


-  HKDF-Extract is drawn as taking the Salt argument from the top and
the IKM argument from the left.

Append ""with its output to the bottom and the name of the output at
the right"".

7.2.  Updating Traffic Keys and IVs

I think you want to remove ""and IVs"" here.  IVs aren't mentioned in
this section.  Of course, changing the traffic key changes the IV, but
it also changes the write key, and the write key isn't mentioned in
the section title.

7.3.  Traffic Key Calculation

I think you want to title the section ""Write Key and IV Calculation"".

And you want to (again) de-genericize the text:

The traffic keying material (*_write_key and *_write_iv) is
generated from the following input values:

-  A secret value, the applicable *_traffic_secret

-  A purpose value indicating the specific value being generated

-  The length of the key

7.4.1.  Finite Field Diffie-Hellman

For finite field groups, a conventional Diffie-Hellman computation is
performed.

I think you need a reference for this!

7.5.  Exporters

A separate
interface for the early exporter is RECOMMENDED, especially on a
server where a single interface can make the early exporter
inaccessible.

What does ""where a single interface can make the early exporter
inaccessible"" mean?  If you don't have a separate interface for the
early exporter, how does ""a single interface"" make it inaccessible?

8.1.  Single-Use Tickets

If the tickets are not self-contained but rather are database keys,
and the corresponding PSKs are deleted upon use, then connections
established using one PSK enjoy forward secrecy.

What does ""one PSK"" mean here?  Do you mean ""established using such a
PSK"" (equivalently ""established using such a ticket"")?

Also, the question again arises as to what a ""ticket"" *is*.

Because this mechanism requires sharing the session database between
server nodes in environments with multiple distributed servers, it

Probably more conventional to say ""requires a shared database between
all server instances"".

8.2.  Client Hello Recording

The first paragraph is hard to follow.  I think it could be clarified
along these lines:

An alternative form of anti-replay is to record a unique value
derived from the ClientHello (generally either the random value or
the PSK binder) and reject duplicates.  Recording all ClientHellos
causes state to grow without bound, but a server can instead retain
ClientHellos only within a given time window and use the
""obfuscated_ticket_age"" to determine whether the ClientHello was
generated by the client recently.  Thus, the server can ensure that
it only allows 0-RTT data in connections established by
non-duplicate ClientHellos which were generated by the client
within the recording window.


The server MUST derive the storage key only from validated sections
of the ClientHello.  If the ClientHello contains multiple PSK
identities, then an attacker can create multiple ClientHellos with
different binder values for the less-preferred identity on the
assumption that the server will not verify it, as recommended by
Section 4.2.11.  I.e., if the client sends PSKs A and B but the
server prefers A, then the attacker can change the binder for B
without affecting the binder for A.

At this point, a conditional needs to be inserted; otherwise the
argument you're making is only implicit.

If the server uses the binder for B as part of the storage key,
these variations on the ClientHello will not be detected by the
server as duplicates of each other, and the server will accept all
of them.

Then continue with:

This may cause side effects such as replay cache
pollution, although any 0-RTT data will not be decryptable because it
will use different keys.  If the validated binder or the
ClientHello.random are used as the storage key, then this attack is
not possible.


When implementations are freshly started, they SHOULD reject 0-RTT as
long as any portion of their recording window overlaps the startup
time.  Otherwise, they run the risk of accepting replays which were
originally sent during that period.

I think this needs a couple of changes of phrasing:

When an implementation is restarted with a cleared recording
memory, it SHOULD reject 0-RTT as long as the startup time is
within the recording window.  Otherwise, it runs the risk of
accepting replays of ClientHellos which were sent during the
previous execution.

8.3.  Freshness Checks

Variations in client and server clock rates are likely to be minimal,
though potentially with gross time corrections.

What does ""gross time corrections"" mean?  I think you mean ""with
moments of large change in the clock time"", but that isn't a feature
of the clock *rate*.  I think this is more accurate:

Differences between client and server clock times are likely to be
minimal, though there will sometimes be gross differences due to
uninitialized clocks and misconfigured time zones.


After early data is accepted, records may continue to be streamed
to the server over a longer time period.

More clear as

After the server accepts early data is accepted, the client may
continue to send early data to the server over a longer time period
than the freshness window for ClientHellos.

9.1.  Mandatory-to-Implement Cipher Suites

A TLS-compliant application MUST support digital signatures with
rsa_pkcs1_sha256 (for certificates), rsa_pss_rsae_sha256 (for
CertificateVerify and certificates), and ecdsa_secp256r1_sha256.

It seems that ecdsa_secp256r1_sha256 is missing a statement of what
uses it must be supported for.

9.2.  Mandatory-to-Implement Extensions

-  If containing a ""supported_groups"" extension, it MUST also contain
a ""key_share"" extension, and vice versa.  An empty
KeyShare.client_shares vector is permitted.

I think this is a bit better expressed as:

-  If containing a ""supported_groups"" extension, it MUST also contain
a ""key_share"" extension (which may contain an empty
KeyShare.client_shares vector), and vice versa.


Additionally, all implementations MUST support use of the
""server_name"" extension with applications capable of using it.

I'm not clear what the test is for ""applications capable of using
SNI"".  I think you want to turn the conditional around:

An application profile MAY require that the endpoint's TLS
implementation supports use of the ""server_name"" extension.

9.3.  Protocol Invariants

-  A server receiving a ClientHello MUST correctly ignore all
unrecognized cipher suites, extensions, and other parameters.
Otherwise, it may fail to interoperate with newer clients.  In TLS
1.3, a client receiving a CertificateRequest or NewSessionTicket
MUST also ignore all unrecognized extensions.

This needs to be split, because the two parts are about different roles:

-  A server receiving a ClientHello MUST correctly ignore all
unrecognized cipher suites, extensions, and other parameters.
Otherwise, it may fail to interoperate with newer clients.

-  In TLS 1.3, a client receiving a CertificateRequest or
NewSessionTicket MUST also ignore all unrecognized extensions.

11.  IANA Considerations

-  TLS Alert Registry: Future values are allocated via Standards
Action [RFC8126].  IANA [SHALL update/has updated] this registry
to include values for ""missing_extension"" and
""certificate_required"".

It would be nice to add a finer-grained ""minor alert code"" registry.

Appendix A.  State Machine

It would be helpful if the state diagrams were extended to describe
the activity on the ""control channel"" (handshake and alert content
types) after CONNECTED, that is, what happens while the connection is
established and how connections are shut down.

Appendix B.  Protocol Data Structures and Constant Values

There is no listing of the value structure corresponding to each
extension type.  Extensions collectively are only defined as:

struct {
ExtensionType extension_type;
opaque extension_data<0..2^16-1>;
} Extension;

This is a problem because the name of the value struct is not
systematically derived from the name of the extension_type value!
E.g., ""signature_algorithms"" and ""signature_algorithms_cert"" use
SignatureSchemeList as a value, and you can only reliably discover
that by searching through the whole of the text.

B.4.  Cipher Suites

A symmetric cipher suite defines the pair of the AEAD algorithm and
hash algorithm to be used with HKDF.

Better phrased:

A symmetric cipher suite is the pair of an AEAD algorithm and a
hash algorithm to be used with HKDF.

C.3.  Implementation Pitfalls

-  As a server, do you send a HelloRetryRequest to clients which
support a compatible (EC)DHE group but do not predict it in the
""key_share"" extension?

This needs an additional condition:

-  As a server, if you select an (EC)DHE group which the client
supports but for which the client did not provide a
KeyShareEntry, do you send a HelloRetryRequest?

Appendix D.  Backward Compatibility

Prior versions of TLS used the record layer version number for
various purposes.  (TLSPlaintext.legacy_record_version and
TLSCiphertext.legacy_record_version) As of TLS 1.3, this field is

I think this was intended to be formatted thusly:

Prior versions of TLS used the record layer version number
(TLSPlaintext.legacy_record_version and
TLSCiphertext.legacy_record_version) for various purposes.  As of
TLS 1.3, this field is [...]

D.5.  Backwards Compatibility Security Restrictions

The security of SSL 3.0 [SSL3] is considered insufficient for the
reasons enumerated in [RFC7568], and MUST NOT be negotiated for any
reason.

s/and MUST NOT/and it MUST NOT/, with ""it"" referring to ""SSL 3.0"", as
otherwise the verb ""MUST NOT"" is parallel to the verb ""is"" and the
subject of ""MUST NOT"" is ""the security of SSL 3.0"".

E.1.  Handshake

-  A set of ""session keys"" (the various secrets derived from the
master secret) from which can be derived a set of working keys.

Is this consistent with the usual meaning of ""session key""?  My
understanding (which may be wrong) is that a ""session key"" is the key
for a ""session"", i.e., an entire connection.  Perhaps there is already
a defined term in the text that covers the use you intend.

Note that these
properties are not necessarily independent, but reflect the protocol
consumers' needs.

The significance of ""but"" is not clear here, as it seems to be placing
in opposition ""reflect the ... needs"" and ""independent"".  I think this
is probably closer to what you meant:

Note that these properties are not necessarily independent, but
together they cover the protocol consumers' needs.


Uniqueness of the session keys:  Any two distinct handshakes should
produce distinct, unrelated session keys.  Individual session keys
produced by a handshake should also be distinct and unrelated.

It's not clear how two session keys produced by a single handshake can
be ""unrelated"".  I suspect there's a known technical term for this,
like ""cryptographically independent"" (to parallel ""cryptographically
random"").

A similar term is needed in section E.1.4.

If fresh (EC)DHE keys are used for each
connection, then the output keys are forward secret.

When it is used as an adjective, you hyphenate ""forward-secret"".

E.1.3.  0-RTT

See Section 4.2.10 for one mechanism to limit the exposure to replay.

This discussion is now in section 8.

[END]",<152004960327.8290.4628820807186314931@ietfa.amsl.com>,worley@ariadne.com,0.0,0,0,2018-03-02 20:00:03
5888,TLS 15+,124,1732,"NeutralResponse,Thanking,Social,Thanking,Agreement",1731,-1,"Dale, thanks for your review. I have entered a Yes ballot and encouraged the author/WG to take a look at your comments. I suspect a lot of the stylistic/linguistic items derive from the WG participants having deep experience with the protocol and its previous versions and existing extensions.",<DA004B30-5235-405C-9661-C7AD33767E03@cooperw.in>,alissa@cooperw.in,0.0,1,0,2018-03-06 14:33:26
5889,TLS 15+,124,3510,"NeutralResponse,NeutralResponse,ContextSetting,Disagreement,InformationProviding,ProposeAction",1731,1731,"
Your review is incredibly deep, comprehensive and I learned a lot from it.
I want to pick out just one small piece, but don't mean that to diminish
how thorough it was!

On the specific suggestion of having more granular error codes, I think
this is a dangerous direction to take lightly; there's at least one
instance where granular TLS alert messages have directly led to security
issues by acting as oracles that aided the attacker.

There's a general conjecture that the more information that is provided to
attackers, the more easily they can leverage into a compromise. Personally
I believe that conjecture, and would actually prefer to see fewer signals,
ideally as few as one big error code. There is a trade-off against
debugability, but I've only seen a handful of people have the skills to
debug low level TLS issues and it doesn't seem worth the risk. Others
disagree, which is valid, but it's at least an area of reasonable
contention.
",<CAAF6GDcBFHhe8oWJqF-LVUfYdR7HRW_Gk9c0KgxNRKoQzauvpQ@mail.gmail.com>,colm@allcosts.net,0.0,0,5,2018-03-06 14:35:23
5890,TLS 15+,124,3517,"Agreement,NeutralResponse,Agreement,NeutralResponse",3510,3510,"
This makes perfect sense.   Stuart Cheshire and I were having the same discussion a while back about DNS Session Signaling, and he pointed out (I was playing Dale's role) that there's an important distinction to be made between ""buggy implementation"" and ""actionable notification where no bug exists.""   Any alert that signals ""buggy implementation"" is bad, for the reason you've stated, and also because such signals are not actionable—if you've run into a bug you should probably just give up, and not try to somehow guess in your implementation what might work when the bug happens.   The only reason to send a signal is if there is a known and clear action to take upon receiving the signal, other than ""we're borked, give up.""",<6EBE3EC6-AA06-4BA8-8824-FA4BEC924138@fugue.com>,mellon@fugue.com,0.0,0,0,2018-03-06 17:42:39
5891,TLS 15+,124,3564,"NeutralResponse,NeutralResponse,Social",3510,-1,"Without taking a position on the security matter: this has been part of the
TLS design for 20+ years, and therefore has had multiple LCs and WG and
IETF consensus, so it would take a pretty strong set of arguments to change
now. I've debugged a lot of TLS interop issues, and as a practical matter,
I don't think this would help that much to justify making a change.
-Ekr
",<CABcZeBNgwHR0=bG7bY78g-71Ky3shvL+qMQUEhbejKRXzUHuYg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-06 20:05:06
5892,TLS 15+,124,3631,"Agreement,NeutralResponse,Agreement,ProposeAction,InformationProviding",3564,-1,"+1. If anything, the existing ""buggy implementation"" alert codes should get
folded together. (But I don't think it's worth making that change at this
stage either.) E.g. decode_error vs illegal_parameter vs
unexpected_message are rather useless distinctions and trying to get them
""right"" adds complexity. Even with the granularity is it is, TLS's alert
codes needlessly expose benign differences in implementation strategy.
Adding even finer granularity would make all this worse.

My experience is also that this sort of thing would not actually help much.
",<CAF8qwaDYn64zm634vPRiW-0sgm4nRscv80J1pJtmCUL0g+UM3Q@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2018-03-07 17:33:07
5893,TLS 15+,125,0,Social,,-1,"Hello,",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5894,TLS 15+,125,92,"Thanking,ContextSetting,Thanking,ContextSetting",,-1,"
Thank you for your work on:",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5895,TLS 15+,125,93,"ProposeAction,ContextSetting",,-1,"
The draft has come a long way and the effort that went into it shows!
I found a ew cobwebs in my review that should be easy to fix with as I
tried to give the updated equivalent solutions.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5896,TLS 15+,125,94,"ProposeAction,ProposeAction",,-1,"
Please let me know if you have any questions about my review.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5897,TLS 15+,125,95,"ContextSetting,ContextSetting",,-1,"
Introduction:",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5898,TLS 15+,125,96,"ContextSetting,ProposeAction,ContextSetting,ProposeAction",,-1,"
Last paragraph, first sentence:
S/In for new types/For new types/
This first sentence is a run-on, so please fix that as well.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5899,TLS 15+,125,97,"ContextSetting,ContextSetting",,-1,"
Section 5.3:",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5900,TLS 15+,125,98,"ProposeAction,ProposeAction,ContextSetting,ProposeAction",,-1,"
This text may have been written before RFC7525 was written, but that
can and should be referenced for best practices in implementing TLS
1.2.  If you mention TLS 1.3, you may want to recommend that 0-RTT is
not used as there is a replay attack that is possible with that
option.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5901,TLS 15+,125,99,"ProposeAction,Question,InformationProviding,Question,ContextSetting",,-1,"
Section 5.4
If you keep SAML as your example federated authentication system, you
will need a reference.  Is that the most likely option to be used?  I
would say yes a few years ago, but I’m not sure at the moment.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5902,TLS 15+,125,100,"ProposeAction,ContextSetting,ProposeAction",,-1,"
Section 7.1, Last paragraph, first sentence, there’s a typo:
OLD:
“This document does not specific any information types.”
NEW:
This document does not specify any information types.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5903,TLS 15+,125,101,"ContextSetting,ContextSetting",,-1,"
IANA Considerations:",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5904,TLS 15+,125,102,"ProposeAction,ContextSetting,ProposeAction",,-1,"
RFC8126 obsoleted RFC5226, the specification required is basically the
same.  I also think it’s prudent to get a few people on the hook for
DE so there is an answer.  As such a tweak to the wording would be
helpful.  I do think it’s a good idea to route the request to the
mailing list, so I’m not suggesting any changes there (to be clear).
We can name a few people to cover vacations or busy periods.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5905,TLS 15+,125,103,"ContextSetting,InformationProviding,ProposeAction,ContextSetting",,-1,"
Security Considerations Section:
There are 3 experimental HTTPAuth types that are more secure than
Basic and digest.  HOBA and SCRAM to name 2 of them.  Here’s the link
to the registry with them listed and the RFCs:
https://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml.
reworking the text in paragraph 3 to mention these as options would be
good.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5906,TLS 15+,125,104,"InformationProviding,ProposeAction,ProposeAction,ExtensionOfPrevious",103,-1,"
You might be asked for a reference to HTTP Auth and there’s no
specific document to cover all the types, just the registry.  HTTP
Basic and Digest were updated with considerably expanded security
considerations sections, so you could point to those two and then pick
one of the experimental ones perhaps before naming other types?",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5907,TLS 15+,125,105,"ProposeAction,ExtensionOfPrevious,ProposeAction",104,-1,"
For the federated authentication, could OAuth/JWT be used?  It would
be a more current solution.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5908,TLS 15+,125,106,"ProposeAction,ProposeAction",,-1,"
Third to last paragraph, if JSON and other data formats are to be
supported (which I believe is the case), then you should also mention
one other option like what JOSE offers for encryption and signing.
JWE - RFC7516, JWS - RFC7515, JWK - RFC7517, and JWA- RFC7518.  You
probably don’t need to mention the last 2 in an example style
sentence.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5909,TLS 15+,125,107,"InformationProviding,ProposeAction,ContextSetting,ProposeAction",,-1,"
In the privacy considerations, the requirement for TLS is also a
mitigator for the problems listed in the second and third paragraph.
It’s worth mentioning that as I’m sure questions will be raised if
it’s not stated again.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5910,TLS 15+,125,108,"ContextSetting,Question,Question,ContextSetting",,-1,"
Ack section: Do you need to add packs for recent reviews too?",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5911,TLS 15+,125,109,"ProposeAction,ContextSetting",,-1,"
IDNITS:",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5912,TLS 15+,125,110,"ProposeAction,Question,InformationProviding,Question,ProposeAction",,-1,"
Please check the idnits and clear up issues.  RFC2141 is referenced,
is that correct as it's been obsoleted?  It was recently replaced by
RFC8141, so this was likely a timing issue.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5913,TLS 15+,125,111,"InformationProviding,StateDecision",,-1,"
I am tentatively putting this in the telechat for 10/26/17, if this is
an issue, we can bump it out until after Singapore.  If it's not,
getting the updates done by end of this week will give a good amount
of time for you to address last call comments before the IESG review
starts.",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5914,TLS 15+,125,112,"Thanking,Thanking",,-1,"
Thanks again!",<CAHbuEH7scYk+mF-VWEGAhMktzKWsQiULCjizzxOrfd0RX4J_sA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-25 15:52:35
5915,TLS 15+,125,115,Social,,-1,"Kathleen,",<DM5PR09MB13076C1FFBCC775668DA052AF07B0@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-26 17:24:22
5916,TLS 15+,125,248,"Thanking,StateDecision,InformationProviding,StateDecision,Thanking,ContextSetting",,-1,"
Thanks for the review and the prepared solutions for the comments, it helps save a ton of time. All comments were addressed and there were no questions, I'm posting the new version now. I've put my responses inline with descriptions of how the issues were dealt with.",<DM5PR09MB13076C1FFBCC775668DA052AF07B0@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-26 17:24:22
5917,TLS 15+,125,428,"Social,Thanking,InformationProviding,NeutralResponse,Thanking",248,-1,"Hi Stephen,

Thanks for the quick update!  I have a couple more nits, thanks.
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5918,TLS 15+,125,430,"Thanking,ProposeAction,ProposeAction,Thanking",,-1,"
Great, thanks. Please add a reference to TLS 1.3 draft-ietf-tls-tls13
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5919,TLS 15+,125,432,"Thanking,Thanking",,-1,"
Good, thanks!
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5920,TLS 15+,125,434,"ProposeAction,InformationProviding,NeutralResponse,StateDecision",,-1,"
DE names should be removed from the draft as these can change over
time.  I'll confirm the names with the chairs and add them into the
ballot text for it to be a management item on the telechat.
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5921,TLS 15+,125,436,"Thanking,Thanking",,-1,"
Looks good, thanks.
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5922,TLS 15+,125,438,"ProposeAction,ProposeAction",,-1,"
This should be OAuth and JWT as OAuth by itself is just authorization.
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5923,TLS 15+,125,440,"Thanking,Thanking",,-1,"
Great, thanks!
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5924,TLS 15+,125,442,"Thanking,Thanking",,-1,"
Thanks!
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5925,TLS 15+,125,443,"Answer,Question,Question,NeutralResponse",108,108,"
Didn't see I had a typo there.  Should any recent reviewers be added
to the acknowledgment section?
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5926,TLS 15+,125,445,"Thanking,Thanking",,108,"
Thank you!
",<CAHbuEH4k98Gw=NtTPBNubuhPjwGwTGs9w4ztppraRFk92yD4rQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-26 14:47:29
5927,TLS 15+,125,448,Social,,-1,"Kathleen,",<DM5PR09MB13076F590641FE7C21FB5001F0780@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-27 14:58:24
5928,TLS 15+,125,662,"InformationProviding,Thanking,ProposeAction,NeutralResponse,Thanking",,-1,"
I've put my responses inline, thanks for catching these nits. I've attached the new -10 version XML with the compiled HTML format, I'll upload this version to datatracker by the end of the week if there are no more changes.",<DM5PR09MB13076F590641FE7C21FB5001F0780@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-27 14:58:24
5929,TLS 15+,125,665,Social,,-1,"Hi all,",<CAC0wChHgC8fzN4phME9Dv9vxtj3-Kci4BNnwWLWOkGOFaKOmqw@mail.gmail.com>,jfield@pivotal.io,0.0,0,35,2017-09-27 12:53:56
5930,TLS 15+,125,1243,"Thanking,ContextSetting,Thanking",,-1,"Thanks for the additional review, John.  Inline.
",<CAHbuEH6HUKx2MYXS_r1Wqu0r-XmCpPeNS-x6nKsK0Tofm7yTMw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-27 12:58:28
5931,TLS 15+,125,1245,"ProposeAction,NeutralResponse,ProposeAction",,-1,"
A broad statement should be made IMO, I wouldn't leave it blank.
",<CAHbuEH6HUKx2MYXS_r1Wqu0r-XmCpPeNS-x6nKsK0Tofm7yTMw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-27 12:58:28
5932,TLS 15+,125,1599,"Agreement,StateDecision,Agreement",1245,1245,"
No problem. A general acknowledgement is a great to recognize that this was
a genuine community effort.
",<CAC0wChE9Gd_3u55E2qf8-m18uAz9TrBYLBZ364X4VNKJ_e+oCQ@mail.gmail.com>,jfield@pivotal.io,0.0,0,35,2017-09-27 14:22:35
5933,TLS 15+,125,1602,Social,,-1,"John,",<DM5PR09MB1307F4E60EF141EF1826960DF0790@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-28 14:58:40
5934,TLS 15+,125,1930,"Thanking,StateDecision,StateDecision,Thanking",,-1,"
Thanks for the additional nits review! I’ve changed “three” to “four” on the first issue and fixed the misspelling for the second issue. The “[TO BE REMOVED]” parts of the IANA considerations are to be removed by IANA once they complete their setup process for the registries.",<DM5PR09MB1307F4E60EF141EF1826960DF0790@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-28 14:58:40
5935,TLS 15+,125,1931,"ProposeAction,StateDecision,NeutralResponse,StateDecision",,-1,"
I’ve added a general statement of thanks to the acknowledgment section, take a look and let me know if this is acceptable to you.",<DM5PR09MB1307F4E60EF141EF1826960DF0790@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-28 14:58:40
5936,TLS 15+,125,1932,"InformationProviding,ExtensionOfPrevious,StateDecision",1931,-1,"
I’ve attached the update -10 version.",<DM5PR09MB1307F4E60EF141EF1826960DF0790@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-28 14:58:40
5937,TLS 15+,125,1935,"ProposeAction,ProposeAction",,-1,Please let me know when it is posted and ready and I'll kick off IETF last call.,<CAHbuEH6VyLu=ypDFhMm6fVSa3Z_h3NBqGmE+PxSKWZDxsrk-UA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-28 11:03:25
5938,TLS 15+,125,2334,"Thanking,Thanking",,-1,"
Thank you,",<CAHbuEH6VyLu=ypDFhMm6fVSa3Z_h3NBqGmE+PxSKWZDxsrk-UA@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-28 11:03:25
5939,TLS 15+,125,2337,"Agreement,NeutralResponse","1931,1935",-1,"""Acknowledgements"" Looks good to me.  Nicely done.",<CAC0wChFhd=xN9pGgpm0J_r9N=mCkTTMZX0+BUdBQpYyuv2e61Q@mail.gmail.com>,jfield@pivotal.io,0.0,0,35,2017-09-28 11:32:09
5940,TLS 15+,125,2784,Social,,-1,"Kathleen,",<DM5PR09MB13071ED3B5ED73633C352FC6F07E0@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-29 14:32:50
5941,TLS 15+,125,3235,"StateDecision,Thanking,NeutralResponse,StateDecision",1935,-1,"
The final version (-10) has been posted. Thanks again to you (and John) for catching those nits.",<DM5PR09MB13071ED3B5ED73633C352FC6F07E0@DM5PR09MB1307.namprd09.prod.outlook.com>,stephen.banghart@nist.gov,0.0,0,19,2017-09-29 14:32:50
5942,TLS 15+,125,3704,"InformationProviding,Thanking,NeutralResponse,StateDecision,Thanking",,-1,"Thank you, all!  I'll start IETF last call right after a quick pass of
the document.",<CAHbuEH42n6rHbnfgY2kEWNsx7SYSvs6MpaV_QGwSRgXtijHvPw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-09-29 11:10:33
5943,TLS 15+,126,0,"ContextSetting,InformationProviding",,-1,"Based on the discussions today, I've significantly revised the text of this proposal. This new draft goes into more detail for the PSK & anon cipher suites.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5944,TLS 15+,126,19,"InformationProviding,ExtensionOfPrevious,ProposeAction",0,-1,"
Of note, I've added a table to state what's available to negotiate with what. It's longer than it should be because both DHE_PSK and DH_anon should be dropped from there, but for now I've included them because ECDHE_PSK and ECDH_anon AEAD cipher suites have yet to be standardized. There's expired drafts for these and if PSK and anon are to be considered fully compatible with TLS 1.3, then these really should be defined. Merging them together into one I-D for AEAD ECDHE cipher suite assignments seems like the simplest route.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5945,TLS 15+,126,20,"InformationProviding,ExtensionOfPrevious,ProposeAction",19,-1,"
I'd also rather plain (symmetric-only) PSK be relegated to its own specifications and not included here, but I've included it in the table for now. ECDHE_PSK should ideally be the only supported PSK handshake. Plain PSK has no FS and it was generally agreed that TLS 1.3+ should be FS only.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5946,TLS 15+,126,21,"InformationProviding,ContextSetting,InformationProviding",,-1,"
New draft text:
https://github.com/davegarrett/tls13-spec/blob/alacarte/draft-ietf-tls-tls13.md#cipher-suites
Diff with master:
https://github.com/tlswg/tls13-spec/compare/master...davegarrett:alacarte",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5947,TLS 15+,126,22,"ContextSetting,ProposeAction,InformationProviding",,-1,"
I think there might've been some discussion on this list in the past about potentially adding PSK to the SignatureAlgorithm enum for the ""signature_algorithms"" extension. This could obsolete all ECDHE_PSK and DHE_PSK cipher suites and allow PSK negotiation via normal ECDHE_ECDSA cipher suites and the extension. I'm not sure if this would be desired or not. I'm not proposing this currently, but I'm not against also doing this, though.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5948,TLS 15+,126,23,"InformationProviding,InformationProviding,ProposeAction",,-1,"
To reiterate from the anon discussion, the ""signature_algorithms"" extension already defines `anonymous(0)` and has an explicit prohibition on it ever being included. Obsoleting ECDH_anon and DH_anon and switching to this extension for negotiation would require either hacking in a second anonymous value to replace it (bad idea, IMO) or changing the extension spec to allow the existing value, which might break things expecting otherwise. Personally, I think anon should have its own cipher suite and not be negotiated via the signatures extension, as it is not a valid option for normal use-cases. (paranoid exploit worry: a bad implementation could muck up extension handling and negotiate anon when it shouldn't; safer to just keep it separate) Arguably, PSK isn't a valid option most of the time either, but it can't be negotiated without a pre-shared key actually being pre-shared, so using the extension for it might be viable. If ECDH_anon suites are defined, anon will be able to negotiate DHE/ECDHE via the ""supported_groups"" extension, so it would only be one anon suite per symmetric cipher.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5949,TLS 15+,126,24,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Also note that non-standards-track ciphers are still listed in there, but may be dropped prior to merge. Promoting ECDHE AES-CCM from informational to standards track would be a good idea if we only want to include standards track ciphers here. AES-OCB will be added whenever its draft has a temporary codepoint to include.",<201506122145.13790.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-12 21:45:13
5950,TLS 15+,126,67,"Question,NeutralResponse,Question,InformationProviding",21,21,"
How will the client know which parser it should use to deserialize the Server
Key Exchange?

Especially when we're close to having DHE, ECDHE, DHE+PSK (and DHE+PSK+RSA?),
ECDHE+PSK (and ECDHE+PSK+ECDSA, ECDHE+PSK+ECDSA?), ADH and AECDH in a single
ciphersuite...

Especially with the case of overloading the ECDHE to handle the ECDH_anon, it
makes it possible that many implementations will reintroduce state machine
bugs...",<3129639.pNdByueU9m@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-06-15 12:10:39
5951,TLS 15+,126,117,"NeutralResponse,Answer",67,67,"
Well, the server key exchange message is presumably the same for all GDHE
key exchanges, so one parser could parse those all (and pure-PSK would be
separate, which doesn't even have server key exchange).
",<20150615132353.GA27040@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:23:53
5952,TLS 15+,126,118,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction","117,67",67,"
However, if we were serious about eliminating state machine bugs (and TLS
1.3 state machine is totally different from TLS 1.2), we would eliminate
all optional messages (different from context-sensitive messages, like
Server key exchange message), and then eliminate handshake message types
(except for those which have to have type numbers for backward
compatiblity).

That way, any state machine bugs just cause handshake failures, not
security failures.
",<20150615132353.GA27040@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:23:53
5953,TLS 15+,126,119,"InformationProviding,NeutralResponse,ContextSetting,InformationProviding",67,67,"
Regarding the PSK integration work EKR has been doing in the WIP branch:

1) Doesn't support identity hints. Now, these might be something nobody
uses and can be deprecated.

2) GDHE_PSK ciphers can't seemingly be safely resumed: Because resumption
is PSK, it eats the PSK slot, not leaving space for the primary identity.
",<20150615132353.GA27040@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:23:53
5954,TLS 15+,126,120,Social,,67,"
-Ilari",<20150615132353.GA27040@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:23:53
5955,TLS 15+,126,147,"NeutralResponse,NeutralResponse",119,119,"
My sense was that it was sufficiently rare that we could deprecate it.
It's a bad match for the state machine.
",<CABcZeBNhbpfq+XdXw0f8pL9Hfqd3Gd1T4Gi5mBSvBEpN2DkT6Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-06-15 06:34:58
5956,TLS 15+,126,149,"Question,ProposeAction,ClarificationElicitation,ProposeAction,Social",119,119,"
And your concern here is that you might want to resume GDHE_PSK as ordinary
PSK for performance reasons? If this seems really important, we could
presumably
have multiple PSK slots.

-Ekr",<CABcZeBNhbpfq+XdXw0f8pL9Hfqd3Gd1T4Gi5mBSvBEpN2DkT6Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-06-15 06:34:58
5957,TLS 15+,126,210,"NeutralResponse,NeutralResponse",117,117,"
there's still the difference between signed vs not-signed
",<8295853.kIc6eIqDrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-06-15 15:36:44
5958,TLS 15+,126,212,"NeutralResponse,NeutralResponse",117,117,"
pure PSK is outside TLSv1.3 as it doesn't provide PFS, ECDHE-PSK and DHE-PSK
though doesn't use signature on server key share
",<8295853.kIc6eIqDrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-06-15 15:36:44
5959,TLS 15+,126,214,"NeutralResponse,NeutralResponse",118,118,"
there's a difference between having messages which are optional from protocol
standpoint but are mandatory for given ciphersuite and messages which are
optional always
",<8295853.kIc6eIqDrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-06-15 15:36:44
5960,TLS 15+,126,260,"NeutralResponse,NeutralResponse",210,210,"
The signature or not comes much later than key exchange message (TLS 1.2 had
those in the same message, TLS 1.3 does not).
",<20150615135023.GA28680@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:50:23
5961,TLS 15+,126,262,"NeutralResponse,NeutralResponse",212,212,"
Well, none of the key exchanges planned for TLS 1.3 have signature in server
key share (signature is its own message if it appears).
",<20150615135023.GA28680@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:50:23
5962,TLS 15+,126,264,"NeutralResponse,NeutralResponse",214,214,"
Well, the former are what I called ""context-sensitive"". And presence or
absence of those can be inferred from the past handshake.
",<20150615135023.GA28680@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:50:23
5963,TLS 15+,126,265,Social,,214,"
-Ilari",<20150615135023.GA28680@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 16:50:23
5964,TLS 15+,126,302,"NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding",264,264,"
yes, and I'm saying we should be careful not to introduce ones which can not
be inferred from previous messages

putting ECDH_anon or ECDHE_PSK behind ECDHE_ECDSA_* ciphersuites makes this
likely",<4377771.p3nGbdM9qk@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-06-15 16:30:16
5965,TLS 15+,126,367,"NeutralResponse,ContextSetting,NeutralResponse",302,302,"
Unfortunately, things get nasty when considering extensions that introduce
new handshake messages. Especially if you have multiple such things trying
to put messages in the same ""slot"":

Scanning TLS registeries and relevant RFCs, I found 7:

client_certificate_url(2) uses certificate_url(21)

This extension is somewhat dangerous.

status_request(5) uses certificate_status(22)

Obsoleted by status_request_v2

user_mapping(6) uses supplemental_data(23)

Dunno about this.

client_authz(7) uses supplemental_data(23)

Infamous.

server_authz(8) -> supplemental_data(23)

Infamous.

status_request_v2(17) -> certificate_status(22)

This one looks to be in actual use.

SessionTicket TLS(35) -> NewSessionTicket(4)

Related to resumption in TLS 1.0-1.2
",<20150615152145.GA30212@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 18:21:45
5966,TLS 15+,126,368,"ExtensionOfPrevious,ContextSetting,InformationProviding",367,302,"
The slots these messages go is (apparently):

certificate_url: Replaces certificate
certificate_status: Immediately after certificate
supplemental_data: Immediately before certificate
NewSessionTicket: Immediately before server CCS.
",<20150615152145.GA30212@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 18:21:45
5967,TLS 15+,126,369,Social,,302,"
-Ilari",<20150615152145.GA30212@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-06-15 18:21:45
5968,TLS 15+,126,408,"Agreement,NeutralResponse,Agreement,InformationProviding",302,302,"
I do agree that there is a risk of implementations introducing bugs. It's a matter of which new system with the potential for bugs we think has a lesser risk in comparison to the combinatorial exploded mess we have now.

The compromise between the current line of discussion (ECDHE_ECDSA for everything) vs. what is currently in my proposal on GitHub (ECDHE_ECDSA | ECDHE_PSK | ECDH_anon) could be to only merge all the certificate authentication under ECDHE_ECDSA and merge PSK and anon under ECDHE_PSK. This would have certificate based suites and non-certificate based suites as fundamentally separate, but still notably reduce the number of suites that have to be worried about in the specs. (anon just becomes a special case of PSK)
",<201506151140.23411.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-06-15 11:40:23
5969,TLS 15+,127,34,"ContextSetting,InformationProviding,ContextSetting",,-1,"I want to make sure that it is possible to mix PSK with (EC)DH as a protection against the discovery of a quantum computer.  I recognize that the WG does not want to tackle this topic in the base specification; however, the following text in Section 4.1.1 makes this difficult to do so in a companion document:
",<0DA64421-5975-4B7E-BC08-7428AFA9D1A1@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-12-22 16:54:18
5970,TLS 15+,127,36,"ContextSetting,ProposeAction,InformationProviding,ProposeAction,Social",,-1,"
An Internal PSK offers no protection against the discovery of a quantum computer.  I assume that an attacker can save the handshake that established the Internal PSK, and then at some future date use the quantum computer to discover the Internal PSK.  Therefore, protection against the discovery of a quantum computer is only concerned with External PSK.

I would like for the specification to permit normal certificate authentication when someone is using an External PSK.  I am guessing that the granularity of the name associated with the External PSK to be pretty broad.  If this guess is correct, it would be appropriate for the name in the certificate to be further restrict the one associated with the External PSK.  Maybe the External PSK is associated with example.com, and then the certificate that includes www.example.com would be acceptable acceptable.  Then, I would expect any Internal PSK that is generated after such an authentication would be associated with the more granular certificate name.

Maybe it is as simple as reorganizing these bullets like this:

- When only PSK is being used, …

- When only (EC)DHE is being used, …

- When PSK and (EC)DHE are both being used, …

If others agree with this direction, I am willing to propose some text.

Happy holidays,",<0DA64421-5975-4B7E-BC08-7428AFA9D1A1@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-12-22 16:54:18
5971,TLS 15+,127,108,"NeutralResponse,UnderstandingNegative,UnderstandingNegative,InformationProviding,ProposeAction",36,-1,"It's possible I'm misunderstanding your message here (I'm a little confused
by the mention of combining normal certificate authentication with an
external PSK), but TLS 1.3 already allows doing both PSK and (EC)DH. That's
the psk_dhe_ke mode, rather than the psk_ke mode. It's signaled by the
server by sending both pre_shared_key and key_share extensions. Perhaps the
wording should be a bit clearer.",<CAF8qwaB8+o20QP71=zuCJ2EXt9EGFuLcn4s6es=gjnOccZE9fQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-22 22:12:25
5972,TLS 15+,127,109,"InformationProviding,ExtensionOfPrevious",108,-1,"
Our stack does not even implement psk_ke. It always requires an (EC)DH
operation in a TLS 1.3 handshake, whether using PSK or certificates.",<CAF8qwaB8+o20QP71=zuCJ2EXt9EGFuLcn4s6es=gjnOccZE9fQ@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2016-12-22 22:12:25
5973,TLS 15+,127,196,"Question,Question","108,109",-1,"Does you implementation allow a PSK to be used along with certificate based
authentication?
",<CAOgPGoCwQ4j4ZPpoApc-9mpE-hfWNGa+41KUo4P2OS6gUrBu1g@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-12-22 14:28:40
5974,TLS 15+,127,308,"Answer,Answer,Social",196,196,"
There is presently no way to negotiate this in TLS 1.3. I have been
assuming that if we decide we
want this we would add a psk_auth_mode extension to parallel psk_ke_mode.
The sense of a number
of us is that there are enough complications with adding this feature
(consider what happens if the
server provides a different set of SANs....) that we should add it later.

-Ekr
",<CABcZeBN35B9VNK_02A41H0dZSkNMPoinhs8Ch8pBCV9=8nZr0g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-12-22 14:45:22
5975,TLS 15+,127,311,Social,,-1,David:,<9D8BEE12-49F9-4DE3-81C7-909CB114805F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-12-22 17:29:45
5976,TLS 15+,127,367,"NeutralResponse,NeutralResponse","108,109",-1,"
Yes, it does allow both, but the authentication is unclear when both are in play. The last bullet implies that certificate authentication only comes into play when there is no PSK.  So, if there is a PSK, the identity associated with it seems to trump whatever is in the certificate.",<9D8BEE12-49F9-4DE3-81C7-909CB114805F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-12-22 17:29:45
5977,TLS 15+,127,368,"ProposeAction,ProposeAction",,-1,"
As I explained below, I’d like the identity associate with the External PSK and the identity in the certificate to both have a role.",<9D8BEE12-49F9-4DE3-81C7-909CB114805F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2016-12-22 17:29:45
5978,TLS 15+,127,487,"Question,ContextSetting,NeutralResponse,ProposeAction",36,-1,"I also had the sense that ekr noted that we didn't want to do this in
the core spec.
So, could you point me more clearly at what you would want to change in
the core spec that would allow doing the thing you want to see done in a
future document?  (Is it just removing ""i.e., when a PSK is not in use""?)",<1b678d65-b146-b25f-c1ad-6dfc044f7ce0@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-01-03 19:02:38
5979,TLS 15+,127,488,Social,,-1,"
-Ben",<1b678d65-b146-b25f-c1ad-6dfc044f7ce0@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-01-03 19:02:38
5980,TLS 15+,127,506,"NeutralResponse,ProposeAction,NeutralResponse",487,487,"
I for one am interested in having a mode that allows for PSK+cert, but
it's hard to reason through.  It falls into the same bucket as
additive *server* authentication, which has the same inherent
problems.  Foremost being a solid analysis.

Mechanically, it is fairly simple to add as an extension.  That makes
me confident that we can do this later.",<CABkgnnXfw45-R-Tvf2cZQGb4a5mas2yZRXT4q3ArRyTMSF9x2Q@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-01-04 13:36:42
5981,TLS 15+,127,529,"Agreement,ProposeAction,Agreement,ProposeAction",506,506,"
Mee too.  At this point, the spec calls for the identity to come from the PSK or the certificate.  I think there needs to be a hook in the document for the identity to come from a combination of the PSK and the certificate.  I recognize this is a forward pointer to stuff that is not yet sorted out.
",<733EE968-69EF-43A5-A39B-F016993A3CCD@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-01-04 16:23:20
5982,TLS 15+,127,531,"ContextSetting,ContextSetting",,-1,Proposed update to Section 4.1.1 of draft-ietf-tls-tls13-18,<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5983,TLS 15+,127,584,"ContextSetting,ContextSetting",,-1,"
OLD:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5984,TLS 15+,127,585,"InformationProviding,ContextSetting",,-1,"
The server indicates its selected parameters in the ServerHello as
follows:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5985,TLS 15+,127,586,"ExtensionOfPrevious,ExtensionOfPrevious",585,-1,"
-  If PSK is being used then the server will send a ""pre_shared_key""
extension indicating the selected key.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5986,TLS 15+,127,587,"ExtensionOfPrevious,ExtensionOfPrevious","585,586",-1,"
-  If PSK is not being used, then (EC)DHE and certificate-based
authentication are always used.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5987,TLS 15+,127,588,"ExtensionOfPrevious,ExtensionOfPrevious","585,587",-1,"
-  When (EC)DHE is in use, the server will also provide a ""key_share""
extension.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5988,TLS 15+,127,589,"ExtensionOfPrevious,ExtensionOfPrevious","585,588",-1,"
-  When authenticating via a certificate (i.e., when a PSK is not in
use), the server will send the Certificate (Section 4.4.1) and
CertificateVerify (Section 4.4.2) messages.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5989,TLS 15+,127,590,"ContextSetting,ContextSetting",,-1,"
NEW:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5990,TLS 15+,127,591,"InformationProviding,ContextSetting",,-1,"
The server indicates its selected parameters in the ServerHello as
follows:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5991,TLS 15+,127,592,"ExtensionOfPrevious,ExtensionOfPrevious",591,-1,"
-  If PSK is not being used, then (EC)DHE and certificate-based
authentication are always used, and the server will:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5992,TLS 15+,127,593,"ExtensionOfPrevious,ExtensionOfPrevious","591,592",-1,"
--  provide a ""key_share"" extension; and",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5993,TLS 15+,127,594,"ExtensionOfPrevious,ExtensionOfPrevious","591,593",-1,"
--  send the Certificate (Section 4.4.1) and CertificateVerify
(Section 4.4.2) messages.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5994,TLS 15+,127,595,"ExtensionOfPrevious,ExtensionOfPrevious","591,594",-1,"
-  If PSK (without DH or ECDH) is being used, then the server sends a
""pre_shared_key"" extension to indicate the selected key.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5995,TLS 15+,127,596,"ExtensionOfPrevious,ExtensionOfPrevious","591,595",-1,"
-  If PSK and (EC)DH are being used together, then the server will:",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5996,TLS 15+,127,597,"ExtensionOfPrevious,ExtensionOfPrevious","591,596",-1,"
--  sends a ""pre_shared_key"" extension to indicate the selected
key;",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5997,TLS 15+,127,598,"ExtensionOfPrevious,ExtensionOfPrevious","591,597",-1,"
--  provide a ""key_share"" extension; and",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5998,TLS 15+,127,599,"ExtensionOfPrevious,ExtensionOfPrevious","591,598",-1,"
--  send the Certificate (Section 4.4.1) and CertificateVerify
(Section 4.4.2) messages.",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
5999,TLS 15+,127,600,"InformationProviding,InformationProviding",,-1,"
END",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
6000,TLS 15+,127,601,"InformationProviding,Thanking,Thanking,InformationProviding",,-1,"
Many thanks to Sean Turner for turning this into a PR for me:
https://github.com/tlswg/tls13-spec/pull/870",<949EBD4E-613B-4B36-BD93-FDE3E4D4926F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-02-02 10:20:09
6001,TLS 15+,127,646,"Agreement,ContextSetting,NeutralResponse,ContextSetting",531,-1,"I think this is much clearer, except for one bullet point below:
",<CAF8qwaA5ntF8iN99=tQyFt7dqucvcKNw9avgVRGJRmGu-3UswA@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2017-02-02 16:24:43
6002,TLS 15+,127,648,"NeutralResponse,ProposeAction,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction",596,35,"
This last bullet here contradicts what specification says elsewhere. From
4.4.1:

The server MUST send a Certificate message whenever the agreed-upon key
exchange method uses certificates for authentication (this includes all key
exchange methods defined in this document except PSK). This message conveys
the endpoint’s certificate chain to the peer.

(Otherwise we defeat the point of resumption and lose PSK-based identities.)

Like MT, I am interested in a mode with both (right now we have a ticket
renewal cliff because only the initial handshake does an online signature),
but we'll need to work out the exact semantics. Going from one identity to
two identities, especially when one is added partway through the stream
(consider 0-RTT) has a lot of sharp edges.

Since this can easily be added as an extension (and would need one anyway
for negotiation), I think it's better to do it as a later document, so we
don't delay what we've done already or rush in a combined mode without
considering all the details. The document would just say ""when PSK and
fancy_new_extension are both negotiated, then the server will [...]"".
Plenty of extensions have modified the handshake message flow.
",<CAF8qwaA5ntF8iN99=tQyFt7dqucvcKNw9avgVRGJRmGu-3UswA@mail.gmail.com>,davidben@chromium.org,0.0,0,9,2017-02-02 16:24:43
6003,TLS 15+,127,715,"Agreement,ProposeAction,Agreement,ProposeAction,Social",648,-1,"I agree with David here. Specifically, I think.

- The base specification should continue to forbid certificates in
combination with PSK
- We should at some point contemplate an extension that allows the use of
certificates in combination with PSK
- The base spec should be factored in such a way as to make that extension
easy.

-Ekr
",<CABcZeBNXu==kGd63OdF07WEqcFiD0qd0aL=KQqKY23Y75XfewA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-02-03 06:45:49
6004,TLS 15+,127,806,"Agreement,NeutralResponse,ContextSetting,Agreement,Disagreement,ProposeAction","648,715",715,"
While I agree that we do not want to delay the TLS 1.3 specification to sort this out; however, I do not think we have provided the hook to make this future extension easy.   Looking at the key schedule in -19, I think we can provide the hook without being disruptive.  My goal is to minimize the pain to implementing the extension in the future by putting a straightforward hook in today:

0
v
PSK ->  HKDF-Extract = Early Secret
+-----> Derive-Secret(.,
|                     ""external psk binder key"" |
|                     ""resumption psk binder key"",
|                     = binder_key
+-----> Derive-Secret(., ""client early traffic secret"",
|                     ClientHello)
|                     = client_early_traffic_secret
+-----> Derive-Secret(., ""early exporter master secret"",
|                     ClientHello)
|                     = early_exporter_secret
v
Derive-Secret(., ""derived secret"", """")
v
(EC)DHE -> HKDF-Extract = Handshake Secret
+-----> Derive-Secret(., ""client handshake traffic secret"",
|                     ClientHello...ServerHello)
|                     = client_handshake_traffic_secret
+-----> Derive-Secret(., ""server handshake traffic secret"",
|                     ClientHello...ServerHello)
|                     = server_handshake_traffic_secret
v
Derive-Secret(., ""derived secret"", """")
v
ExtPSK OR 0 -> HKDF-Extract = Master Secret
+-----> Derive-Secret(., ""client application traffic secret"",
|                     ClientHello...Server Finished)
|                     = client_traffic_secret_0
+-----> Derive-Secret(., ""server application traffic secret"",
|                     ClientHello...Server Finished)
|                     = server_traffic_secret_0
+-----> Derive-Secret(., ""exporter master secret"",
|                     ClientHello...Server Finished)
|                     = exporter_secret
+-----> Derive-Secret(., ""resumption master secret"",
ClientHello...Client Finished)
= resumption_master_secret
",<141723AB-B4E4-4233-8C35-C720E4A7FE0C@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-03-24 12:16:48
6005,TLS 15+,127,807,"ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",806,715,"
The only change is ""ExtPSK OR 0” in the HKDF-Extract for the Master Secret computation.

The Section 4.1.1 can call out this place for the future specification:

OLD:

-  When authenticating via a certificate, the server will send the
Certificate (Section 4.4.2) and CertificateVerify (Section 4.4.3)
messages.  In TLS 1.3 as defined by this document, either a PSK or
a certificate is always used, but not both.  Future documents may
define how to use them together.

NEW:

-  When authenticating via a certificate, the server will send the
Certificate (Section 4.4.2) and CertificateVerify (Section 4.4.3)
messages.  In TLS 1.3 as defined by this document, either a PSK or
a certificate is always used, but not both.  So, the ExtPSK is not
used in the key schedule (Section 7.1).  Future documents may
define how to use them together and tell how the ExtPSK is
handled in the key schedule.
",<141723AB-B4E4-4233-8C35-C720E4A7FE0C@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-03-24 12:16:48
6006,TLS 15+,127,919,"ClarificationElicitation,Question,Social",806,-1,"Why would the external PSK not just go into he PSK slot.

-Ekr
",<CABcZeBNU23_ZM2JRz9aDyzuhcQ-ubzw5LU8Dkd=jPg1svhvukw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-03-24 10:19:09
6007,TLS 15+,127,922,"Answer,Social,Disagreement",919,-1,EKR – I think that is the wrong answer because of the resume case.,<02c701d2a515$f9f8bcd0$edea3670$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2017-03-24 22:14:51
6008,TLS 15+,127,1041,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",922,-1,"
However, I would expect that the external PSK would be appended or otherwise munge into the computed secret (assuming DH) and would be consumed as part of that processing.  No additional slot needed.",<02c701d2a515$f9f8bcd0$edea3670$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2017-03-24 22:14:51
6009,TLS 15+,127,1191,"Question,NeutralResponse,ClarificationElicitation,ProposeAction,Social",922,922,"
Why? It seems like for Russ'a application, you would inject the static PSK
initially
and then it would be implicitly part of any resumption so no need to
reinject it
to obtain PQ safety.

-Ekr

However, I would expect that the external PSK would be appended or",<CABcZeBPLHvSgr9DteHwJz_zdCMy6A2U2U+=q6MfmSWTaSYZGbg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-03-25 04:40:18
6010,TLS 15+,127,1397,"NeutralResponse,Disagreement,InformationProviding",806,806,"
Unless you have fairly good idea about how such extension would look
(especially security properties!), I think it is premature to specify
where the key will go (if it doesn't go there, you got problems).

At least from what I know about my implementation, adding new keys
to be injected in present spots is easy (after one has computed
the value, it is one method call to inject it). Actually changing
what keys are derived from each stage or creating new stages is of
course expensive.

Currently, there are three stages in key schedule.
- 0-RTT (Binders, 0-RTT keys and 0-RTT exporters).
- Handshake (handshake keys, finished)
- Application (application keys, exporters and dynamic PSKs).
",<20170325135217.GA19918@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-03-25 15:52:17
6011,TLS 15+,127,1398,"ExtensionOfPrevious,ExtensionOfPrevious",1397,806,"
In comparision, new handshake message would be far more expensive
code-wise, even if I could piggyback main handshake states like with
CertificateRequest. And something that actually changes the main
state machine would be far more expensive still.
",<20170325135217.GA19918@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-03-25 15:52:17
6012,TLS 15+,127,1399,"ExtensionOfPrevious,ExtensionOfPrevious",1398,806,"
And extension specs are only really bound by TLS offer-answer
rules. The rest is matter of how difficult the extensions are
actually to implement, and how much security problems they
have...
",<20170325135217.GA19918@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-03-25 15:52:17
6013,TLS 15+,127,1400,Social,,806,"
-Ilari",<20170325135217.GA19918@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-03-25 15:52:17
6014,TLS 15+,127,1433,Social,,-1,"Ben:
",<0FDAC302-2E1E-4E31-B649-2E2E0B4EB690@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-01-04 16:17:07
6015,TLS 15+,127,1435,"Answer,UnderstandingNegative,ProposeAction",487,487,"
I am not looking to put the details in the core spec.  I think I said that in my first posting.  However, I do want to ensure that the identity associated with the external PSK and the certificate are both considered.  There needs to be a hook in the core spec for that to happen.

I quotes the part of the core spec that seems to say otherwise.
",<0FDAC302-2E1E-4E31-B649-2E2E0B4EB690@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-01-04 16:17:07
6016,TLS 15+,127,1510,Social,,-1,"Hi Russ,
",<62a479bc-895f-8b59-e37d-5854bfe1185c@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-01-04 19:33:30
6017,TLS 15+,127,1512,"NeutralResponse,NeutralResponse",1435,1435,"
I understand that.
",<62a479bc-895f-8b59-e37d-5854bfe1185c@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-01-04 19:33:30
6018,TLS 15+,127,1513,"ClarificationElicitation,UnderstandingNegative,UnderstandingNegative,ProposeAction,Social",1435,1435,"
What I don't understand is exactly which part or parts in combination of
the quoted text are saying otherwise, in your reading of it.  I offered
a potential part of the quoted text which might be leading you to that
interpretation (the ""i.e., when a PSK is not in use"" clause), and you
did not confirm or deny my guess.  So, I still don't understand what
seems problematic to you about the existing text -- to me, it says that
certain things must be done if certain other things are or are not done,
but does not seem to preclude certain things being done and certain
other things also being done. Maybe you could propose a patch that
provides the hook that you would like to see, so that I can understand
the issue with the current text?

-Ben
",<62a479bc-895f-8b59-e37d-5854bfe1185c@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-01-04 19:33:30
6019,TLS 15+,128,0,Social,,-1,"All,",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6020,TLS 15+,128,19,"ContextSetting,InformationProviding,ContextSetting",,-1,"
We’ve received an early code point assignment for the following 4 (four) elliptic curve points that will go in the ""Supported Groups"" Registry:",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6021,TLS 15+,128,20,"InformationProviding,ExtensionOfPrevious",19,-1,"
// ECDH functions.
ecdh_x25519
ecdh_x448",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6022,TLS 15+,128,21,"ExtensionOfPrevious,ExtensionOfPrevious","19,20",-1,"
// Signature curves.
eddsa_ed25519
eddsa_ed448",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6023,TLS 15+,128,22,"ExtensionOfPrevious,StateDecision,ExtensionOfPrevious",21,-1,"
These points will be included in the following 2 (two) drafts:
draft-ietf-tls-tls13
draft-ietf-tls-rfc4492bis.",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6024,TLS 15+,128,23,"ProposeAction,InformationProviding,ProposeAction",,-1,"
Early code points are permitted in the “Supported Groups” registry and the chairs (that’s us) need to determine whether there is support for these assignments.  Some input has already been received and those people do not need to respond again to this call, but we’d like to hear from others whether they support early code point assignment for these curves.  If you do not please state why.  We’re looking for input by November 30th.",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6025,TLS 15+,128,24,Social,,-1,"
J&S",<385E6AFF-52C3-4E40-A69F-178602A449A7@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-11-23 09:21:22
6026,TLS 15+,128,26,"Thanking,Thanking",19,-1,"Thanks Sean,",<BLUPR03MB139692318C5EA6F5DC9BD6428C070@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2015-11-23 18:37:08
6027,TLS 15+,128,63,"NeutralResponse,NeutralResponse",23,-1,"
I support early code point assignment for these curves.",<BLUPR03MB139692318C5EA6F5DC9BD6428C070@BLUPR03MB1396.namprd03.prod.outlook.com>,Andrei.Popov@microsoft.com,0.0,0,5,2015-11-23 18:37:08
6028,TLS 15+,128,66,"NeutralResponse,NeutralResponse",23,-1,I support early code point assignment.,<45D7CFCA-1ABE-4123-9E27-4DB5B8B6D9DA@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-11-23 22:56:30
6029,TLS 15+,128,97,"ContextSetting,ProposeAction,NeutralResponse",23,-1,"
It’s been suggested that as long as the CFRG signature curves document is not finalized, we should wait with the eddsa_* ones. I don’t believe so. Anything in any draft is subject to change up to the time it’s published and people who implement internet draft should make allowances for such a risk. I see no problem with assigning numbers now. It does not make sense to ship a version of a product that you’ll have to support backwards compatibility with forever. But it is up to implementers to be smart enough about this.",<45D7CFCA-1ABE-4123-9E27-4DB5B8B6D9DA@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-11-23 22:56:30
6030,TLS 15+,128,116,"Question,NeutralResponse,Question,NeutralResponse",97,-1,"
In your opinion, do you see the semantics of the codepoints changing
in any meaningful way?  It's one thing to say ""accept the risks"", but
if anyone thinks that there are necessary changes forthcoming, that
would give me pause.  If everyone says that it's highly unlikely, I'm
supportive of the notion that we get a codepoint.

Are we happy that we will only be needing the PureEdDSA variants and
that no-one will be asking for the HashEdDSA versions?  I ask because
I've heard it suggested (I think Karthik mentioned this) that we might
want to sign the transcript directly in TLS 1.3 rather than rely on
collision-resistance of the selected hash function.  That would be
harder without access to HashEdDSA.",<CABkgnnX15PcEByT2-Q9eS2d5o1C_WfQ2VUJ30iGN_N1BX1WuXQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-11-23 13:16:35
6031,TLS 15+,128,178,"Answer,NeutralResponse,ContextSetting,InformationProviding",116,116,"
My personal view is (I haven't asked Simon about this) is that:
- Ed25519 is currently technically stable. There seems to be consensus
not change it in any way that would break verification.
- Ed448 is unimplementable right now due to two missing functions.
- Once those two are missing (there is call for proposals this
week) functions are decided, Ed448 should become technically
stable.
",<20151123220810.GA15073@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 00:08:10
6032,TLS 15+,128,180,"Answer,NeutralResponse,ProposeAction",116,116,"
I would say that using HashEdDSA is a bad idea in that case. HashEdDSA
has fixed ""prehash"" function and if that hash breaks, the HashEdDSA
scheme breaks (the same is not true w.r.t. hash function for PureEdDSA).

Also, the prehashes might not be the same for Ed25519ph and Ed448ph,
plus I consider interfaces that let one use this dangerous (IUF
signing is dangerous!).

If one wants to have the entiere transcript signed in reasonable way,
one would have to implement hash firewalling at TLS level and require
PureEdDSA.

If doing that, might also be good idea to throw a prefix that screws
many formats ('1E 80 00 00' might be one, it should screw at least ASN.1,
JSON and CBOR).
",<20151123220810.GA15073@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 00:08:10
6033,TLS 15+,128,181,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",180,116,"
Also, the absence of indication of PRF hash in the signed data[1] bugs
me, since I need to assume CCR (CR of both hashes does not imply CCR)
in order to show security.
",<20151123220810.GA15073@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 00:08:10
6034,TLS 15+,128,182,"ExtensionOfPrevious,ExtensionOfPrevious",181,116,"
[1] Heck, that indication was in my original proposal (I didn't
quite understand its significance back then).
",<20151123220810.GA15073@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 00:08:10
6035,TLS 15+,128,183,Social,,116,"
-Ilari",<20151123220810.GA15073@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 00:08:10
6036,TLS 15+,128,194,"ClarificationElicitation,ClarificationElicitation",180,180,"
That suggests that the construction of CertificateVerify is dangerous
in the same way, doesn't it?",<CABkgnnVC95=fB32+KVV3O7rsOyHTMouEXx5drX4g4tEG_-ks6w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-11-23 14:20:15
6037,TLS 15+,128,213,"Answer,Agreement",194,194,"
The problem is that in general, one must not act on invalid data (and
IUF signatures positively encourage acting on invalid data), but in
case of TLS CertificateVerify, one is expected to act on data, even
if invalid, and TLS protocol is designed with that in mind.
",<20151124055421.GA15495@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 07:54:21
6038,TLS 15+,128,214,Social,,194,"
-Ilari",<20151124055421.GA15495@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-24 07:54:21
6039,TLS 15+,128,216,InformationProviding,,-1,"On 11/24/15 at 2:08 PM, ilariliusvaara@welho.com (Ilari",<r422Ps-1075i-76835EBBA0084BF8A34DEF1408D058D6@Williams-MacBook-Pro.local>,frantz@pwpconsult.com,0.0,0,8,2015-11-23 15:01:01
6040,TLS 15+,128,254,"NeutralResponse,Disagreement",178,178,"
I would prefer not to assign a code point until we know what it
means. (i.e. can write code which interoperates.)
",<r422Ps-1075i-76835EBBA0084BF8A34DEF1408D058D6@Williams-MacBook-Pro.local>,frantz@pwpconsult.com,0.0,0,8,2015-11-23 15:01:01
6041,TLS 15+,128,256,"NeutralResponse,ProposeAction,ProposeAction,InformationProviding",255,178,"
I would like to hear from implementers about how much this delay
would affect them. We're coming into the December madness, so
perhaps they want to spend time with their families. :-)
",<r422Ps-1075i-76835EBBA0084BF8A34DEF1408D058D6@Williams-MacBook-Pro.local>,frantz@pwpconsult.com,0.0,0,8,2015-11-23 15:01:01
6042,TLS 15+,128,257,"ExtensionOfPrevious,NeutralResponse,ProposeAction","23,256",178,"
Otherwise, I'm in favor of early code points. We can always burn
ones we dont want. We can either document them as obsolete, do
not use, or if deployment is low enough, reassign them later if needed.
",<r422Ps-1075i-76835EBBA0084BF8A34DEF1408D058D6@Williams-MacBook-Pro.local>,frantz@pwpconsult.com,0.0,0,8,2015-11-23 15:01:01
6043,TLS 15+,128,296,"Question,NeutralResponse,NeutralResponse,Question",116,116,"
Also, one problem with signing the transcript directly is that because
of the context prefixes, one would either have to buffer all messages
or compute multiple hashes.

It is made worse by the fact that some hashes and signatures don't
mix very well. For example, trying to use SHA-512 with ECDSA is not a
good idea[1] (and nobody knows yet what the heck X448ph will use[2]).

Also, does the present 1-RTT construct in fact rely on collision-
resistance of the prf-hash?
",<20151128144857.GA11924@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-28 16:48:57
6044,TLS 15+,128,297,"ExtensionOfPrevious,ExtensionOfPrevious","116,296",116,"
[1] Well, it would be a good idea with ECDSA/P-521, but who uses
that?
",<20151128144857.GA11924@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-28 16:48:57
6045,TLS 15+,128,298,"ExtensionOfPrevious,ExtensionOfPrevious","296,297",116,"
[2] Proposals so far have included:
- SHA-512
- SHA3-512 (whee, SLOW)
- Shake256@512b (not a hash, but cryptographically looks OK).
- Sakee256@512b with some prefixing.
(That's just including the ones in more formal proposing, not
the earlier more handwavy proposals).
",<20151128144857.GA11924@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-28 16:48:57
6046,TLS 15+,128,299,Social,,116,"
-Ilari",<20151128144857.GA11924@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-28 16:48:57
6047,TLS 15+,128,322,"Disagreement,NeutralResponse,NeutralResponse",296,296,"
I think buffering all messages is fine for a regular handshake. The problem begins when you have a certificateRequest later in the negotiation, leading to a certificateVerify which signs the entire transcript. This means that we need to keep the transcript for the duration of the connection just in case the server decides to send a certificateRequest.

If a late certificateRequest signed something other than the entire transcript, I would be very much in favor of signing directly.
",<9B5F1183-785C-4002-804C-415828E3C1D3@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-11-28 20:21:45
6048,TLS 15+,128,382,Social,,-1,"Hiya,
",<56538760.4000909@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-11-23 21:38:40
6049,TLS 15+,128,384,"ClarificationElicitation,NeutralResponse,Question",19,19,"
Is the word ""request"" missing above? Either that or I'm forgetting
more than I suspected:-)
",<56538760.4000909@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-11-23 21:38:40
6050,TLS 15+,128,386,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,InformationProviding",21,21,"
I think 3 of the above are clearly fine now.

I'd suggest holding off on eddsa_ed448 for a while until CFRG
are done, but maybe establishing now that there is consensus in
the WG to allocate that as soon as CFRG are done (where ""done""
means folks can implement and interop, not that the RFCs are
issued).

AFAIK the state of play within CFRG on that is that the chairs
plan to do a few polls for the couple of remaining issues in
a few weeks, so we're not talking about a major delay and to
be fair, CFRG recently have delivered more or less when they
said they would.

My reason to suggest this is just in case CFRG discover some
last minute stuff. While burning a code-point for that wouldn't
be a problem, we'd be better off without the confusion.

But if (the chairs tell me) there's clear consensus for some
other action here, I'll consider myself in the rough and go with
that.
",<56538760.4000909@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-11-23 21:38:40
6051,TLS 15+,128,463,"ProposeAction,ProposeAction,Social",,-1,"if it's only a few weeks, let's just do all the signature code points
then.

-Ekr
",<CABcZeBOrf0HEDBVzXZdTDSPTFUiRe9FENhTY+1ffqHGqwNDu5w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-11-23 14:01:32
6052,TLS 15+,128,467,Social,,-1,"All,",<3AE96EBB-4580-4659-991E-DC7048098408@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-12-10 09:47:24
6053,TLS 15+,128,547,"ContextSetting,ProposeAction,StateDecision,InformationProviding",463,-1,"
The CFRG is currently conducting a quaker poll about filling in two missing functions for the 448 so we’re going follow the suggestion from ekr/ilari to wait until they’re done.  If you care to chime in on the poll it can be found here: https://mailarchive.ietf.org/arch/msg/cfrg/XxJ9PwL6GjEq6necM83Hr8JoIw0",<3AE96EBB-4580-4659-991E-DC7048098408@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-12-10 09:47:24
6054,TLS 15+,128,548,Social,,-1,"
spt",<3AE96EBB-4580-4659-991E-DC7048098408@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2015-12-10 09:47:24
6055,TLS 15+,129,100,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"The idea of encrypting TLS record headers has come up before, the most
important purpose being to hide record lengths and boundaries and make
fingerprinting and traffic analysis harder.  I had convinced myself that
goal this would be ""too hard"" to accomplish in TLS 1.3, but after
further thought I'm not so sure.  So I would like to request comment on
one approach that strikes me as a practical and requires only a rather
minor change to the current spec.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6056,TLS 15+,129,101,"ContextSetting,ContextSetting",,-1,"
The quick summary:",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6057,TLS 15+,129,102,"InformationProviding,InformationProviding",,-1,"
* To encrypt a record, we first AEAD-encrypt the record's payload,
protecting the header fields via the additional_data, exactly as
currently specified.  But then we XOR-encrypt the 5-byte TLS header just
before transmission, using a (separate) stream cipher indexed by a nonce
that depends on record sequence number and *_write_iv, in exactly the
same way the AEAD is already nonce-indexed.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6058,TLS 15+,129,103,"ExtensionOfPrevious,InformationProviding",102,-1,"
* To decrypt a record, we simply do the reverse: first use the stream
cipher with the appropriate nonce to XOR-decrypt the 5-byte TLS header,
then sanity-check it as usual to determine its length, read the rest of
the record, and submit it to AEAD for decryption and full integrity
checking as before.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6059,TLS 15+,129,104,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,ContextSetting,ProposeAction","101,103",-1,"
That's it, in a nutshell.  Two likely concerns immediately arise,
discussed below, but feel free to TL;DR the rest if you don't share
these concerns.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6060,TLS 15+,129,105,"InformationProviding,ExtensionOfPrevious",104,-1,"
Concern #1: What if an active attacker messes with the TLS header,
especially the length field, since stream ciphers don't protect
integrity?  The simple answer is that *exactly* the same thing happens
as now: the AEAD decryption attempt fails, because the
(stream-decrypted) header is AEAD-protected as additional_data.  Nothing
is gained or lost.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6061,TLS 15+,129,106,"ExtensionOfPrevious,ExtensionOfPrevious",105,-1,"
SSH, which did something like this, ran into trouble with attackers
being able to twiddle the record length field to make the record length
look big, causing the receiver to try to receive a very large record,
and hence appear to the user to hang, instead of immediately detecting
the modification and terminating the connection.  But there are three
mitigating factors here: (1) TLS is not usually used for interactive
terminal traffic like SSH is; (2) TLS's 2-byte record length field
imposes a pretty reasonable upper-bound on the maximum size an attacker
could maliciously make a record appear to be; and (3) if this risk of
length-twiddling is at all a problem in this proposed encrypted-header
protocol, then it's already a problem for the current TLS 1.3 spec
without encrypted headers, because active attackers can twiddle the bits
of a cleartext length field just as easily (and even be *certain* they
are making the length appear large!).  So I can't see any way this
length-twiddling vulnerability becomes any worse, and maybe it gets a
bit better (because the attacker can no longer be entirely certain
whether he's setting a 1 bit to 0 or a 0 bit to 1).",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6062,TLS 15+,129,107,"InformationProviding,ProposeAction,ExtensionOfPrevious",104,-1,"
Concern #2: Do we want to have to go to the trouble of adding a stream
cipher to every TLS 1.3-compatible ciphersuite?  Answer: maybe not, but
we don't necessarily need to.  We could instead just specify a generic
method of using the ciphersuite's main AEAD as a stream cipher for
header encryption/decryption purposes.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6063,TLS 15+,129,108,"InformationProviding,ExtensionOfPrevious,ProposeAction",107,-1,"
The conceptually simplest approach I can think of: In the specification
of how AEAD nonces are generated (section 5.2.2 of
draft-ietf-tls-tls13-07), reserve the least-significant bit of the
record sequence number, so that sequence numbers increment by 2 rather
than 1 each record.  Thus, we get two unique nonces per record from the
same set of symmetric keys.  We first use the nonce with a '0'
least-significant bit to perform the regular AEAD-encryption of the
record with the header info as additional_data.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6064,TLS 15+,129,109,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",108,-1,"
Then for the same record we use the nonce with a '1' least-significant
to AEAD-encrypt a sequence of five zero bytes (""\0\0\0\0\0""), and use
the first five bytes of result as the cipherstream to XOR the 5-byte TLS
header with before transmitting.  The AEAD will of course uselessly
append some kind of authenticator to this ciphertext that we won't end
up using, but that's OK.  The receiver will just use AEAD-encrypt
(again) on the same five-zero-byte message to reproduce the 5
cipherstream bytes with which to decrypt the TLS header.  Thus, senders
perform two AEAD-encrypts per record, and receivers do one AEAD-encrypt
and one AEAD-decrypt per record.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6065,TLS 15+,129,110,"ExtensionOfPrevious,ExtensionOfPrevious",109,-1,"
This approach seems pretty conceptually clean and simple, but has the
performance downside that we always need to invoke the AEAD twice per
record rather than once, which might be (a bit) costly especially when
records are small.  So a simple refinement is to amortize this cost
across records: e.g., once every 256 records (every sequence number
ending in 0x00) we AEAD-encrypt a sequence of 5*256=1280 zero bytes, and
the result in 5-byte chunks as the cipherstream with which to encrypt
and decrypt 256 consecutive TLS record headers.  Thus, we're only adding
one additional AEAD-encryption of a ""normal-packet-sized"" 1280-byte blob
once every 256 records, which seems likely to be a pretty
inconsequential performance cost.",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6066,TLS 15+,129,111,"ProposeAction,ProposeAction",,-1,"
Comments?",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6067,TLS 15+,129,112,"Thanking,Thanking",,-1,"
Thanks",<56586A2F.1070703@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-27 15:35:27
6068,TLS 15+,129,125,"ClarificationElicitation,NeutralResponse,ClarificationElicitation,NeutralResponse",100,100,"
How, exactly, would this be significantly harder? The adversary will
still be able to tell when, and how much, TCP/IP data is sent between
the peers. If there happens to be a revealing TLS record boundary in the
middle of a TCP/IP packet, it would seem to me there is an
implementation problem rather than a problem with the abstract protocol.",<565882FE.80205@streamsec.se>,henrick@streamsec.se,0.0,0,18,2015-11-27 17:21:18
6069,TLS 15+,129,204,"Answer,Answer,InformationProviding",125,125,"
There are a variety of reasons TLS segment boundaries can and often do
become desynchronized from TLS record boundaries, such as:

(a) if the TLS implementation happens to encrypt several consecutive
records in a buffer and sends them with one write() call for efficiency.

(b) if the kernel TCP stack's send buffer is already non-empty on write
(e.g., held back to to congestion or flow control) and the TCP stack
decides simply to append the newly-written data to the already buffered
data, the boundary between those wrotes need not appear as a TCP segment
boundary.

(c) quite a few middleboxes can and do silently re-segment TCP streams
obliviously to the content of that stream.  In particular this tends to
happen as an incidental side-effect whenever the middlebox interposes on
the TCP stream by ""terminating"" the TCP connection and transparently
forwarding the content to/from a second TCP connection.

Now, this doesn't mean that ""incidental"" desynchronization of TCP
segment boundaries from TLS record boundaries will by itself add any
kind of robust protection against traffic analysis.  To achieve that, we
would want to ensure that a burst of (say) multiple HTTP requests and
their responses over the TLS connection get merged together and then
transmitted as a uniform-length series of blobs.  A sufficiently careful
TLS implementation could potentially achieve this, but with TLS headers
sent in cleartext, the TLS implementation is the *only* entity in the
system that can provide any kind of traffic analysis protection.

With TLS headers encrypted, it becomes feasible for some (weak or
strong) traffic analysis protection to be introduced at multiple points:

1. The TLS implementation can do it, either way.

2. Even if the TLS implementation doesn't try to provide any traffic
analysis protection, the kernel's TCP stack could provide some
protection (either intentionally or unintentionally) simply by merging
together consecutive writes as discussed above, so that transmissions
are usually just bursts of MTU-sized TCP segments even if they hold many
varying-size TLS records.

3. Finally, middleboxes can (again either intentionally or
unintentionally) add traffic analysis protection by re-segmenting TCP
traffic.  Corporate network operators often already see NATs as a
security advantage because they obfuscate the source IP addresses of
connections coming from the private network.  If TLS 1.3 encrypts its
record headers, then network operators and the middleboxes they deploy
will similarly be able to add traffic analysis protection ""in the
middle"" by re-segmenting TCP streams (which many of these middleboxes
may already be doing anyway), and whatever protection this provides will
apply to automatically to *all* TLS 1.3 traffic crossing that middlebox,
even if few or none of the actual TLS 1.3 endpoint implementations know
or care about traffic analysis protection.

In short, leaving TLS headers in cleartext basically hands any
eavesdropper a huge information side-channel unnecessarily and precludes
anyone *but* the TLS implementation itself from adding any traffic
analysis protection into the system.  Encrypting TLS headers appears to
cost practically nothing (at least if done as I've proposed), and it
allows traffic analysis protection (whether weak or strong, intentional
or unintentional) to be introduced at multiple points: e.g., by TLS
itself, or by the TCP stack, or by middleboxes.
",<565AC9D1.700@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 10:48:01
6070,TLS 15+,129,236,"NeutralResponse,Thanking,ContextSetting,Thanking,ContextSetting,Disagreement,InformationProviding",204,204,"
Thank you for the explanation. A few points:

The only way to completely thwart traffic analysis, is to always send
data with the exact same amount-frequency pattern. The middleboxes you
describe will *not* be able to achieve this, unless the TLS sender is
adapted for such processing anyway.

The middleboxes can't inject data. All they can do is wait for data to
arrive and delay data that has already arrived. Traffic analysis is
about deriving information from patterns that emerge from the
combination of timing and sizes. If data is delayed in order to reach a
specific size before being forwarded, the middlebox might just be
shifting the size signal to an equally detectable timing signal.

This is particularly true, if low latency is also a requirement. If very
high latency is acceptable, the middleboxes might theoretically hide
everything except the total amount of data transmitted during specific
time intervals.",<565AE180.70101@streamsec.se>,henrick@streamsec.se,0.0,0,18,2015-11-29 12:29:04
6071,TLS 15+,129,280,"Agreement,Disagreement,Agreement,ProposeAction,InformationProviding",236,236,"
Very true.  But perfect traffic analysis protection isn't the only goal
of interest, and is usually impractical anyway.  A less ambitious but
still worthwhile goal is simply to make sure that in
imperfectly-protected connections, transmission bursts leak as little of
their internal structure as possible even though the timing and burst of
the (whole) burst will still inevitably risk leaking something.  Even
when it's impractical to leak nothing, it's still worthwhile to leak less.

A fairly important common-case example of this, I think, is Web page
loads in which the client submits a bunch of requests in parallel over
the same connection.  This was never widely enabled in HTTP/1.1 due to
compatibility concerns but will probably become the norm quickly with
HTTP/2.0.  A TLS implementation designed without much concern for
traffic analysis will probably send those multiple small
requests/replies in separate TLS records, giving eavesdroppers a nice
fine-grained fingerprint of what all is in that transmission burst.  If
TLS 1.3 hides its headers, then either the TLS implementation, the TCP
stack, or a middlebox could readily scrub that internal structure and at
least make life harder for the attacker (e.g., reduce the bandwidth of
the side-channel).  That seems worthwhile to me if it doesn't cost much.
",<565AEB5A.9000503@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 13:11:06
6072,TLS 15+,129,302,"Question,NeutralResponse,Thanking,Thanking,InformationProviding,ClarificationElicitation",280,-1,"Thanks for the detailed description of why we might want to obfuscate TLS
record lengths.  From a security point of view, the only potential attack
vector this might create is that the attacker will know in many cases the
plain text of the first 5 bytes.  A weakness in the stream cipher might be
more easily exploited in this case.  IIUC, we feel pretty good about the
latest AEAD ciphers, and guessing the clear text of many bytes in the
record already is not too hard.  Is that right?  So, from my fairly
uninformed point of view, this seems like a reasonable upgrade.",<CAH9QtQEK0NjPMD7cV=xEGjRc5UbKGu2FeTHQXF7kxFg+pTLW3A@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2015-11-29 09:11:39
6073,TLS 15+,129,303,"Question,ContextSetting,ClarificationElicitation,InformationProviding,Question",,-1,"
I have one concern.  These same boxes that hide record lengths by merging
and breaking up packets arbitrarily likely would deliver the packets not
well aligned to record boundaries.  Is this already the case?  If these
boxes currently inspect packets when breaking them up to split packets
along record boundaries, encrypting the lengths will defeat this efficiency
hack.  We might cause an increase in network latency in this case.  Do any
of the routers out there currently use the record length field when
splitting up packets?",<CAH9QtQEK0NjPMD7cV=xEGjRc5UbKGu2FeTHQXF7kxFg+pTLW3A@mail.gmail.com>,waywardgeek@google.com,0.0,0,11,2015-11-29 09:11:39
6074,TLS 15+,129,376,"Thanking,Thanking",,-1,"Thanks Bill for the feedback.
",<565C21EF.1060600@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 11:16:15
6075,TLS 15+,129,378,"Answer,UnderstandingNegative,InformationProviding,ContextSetting",302,302,"
Just a nitpicky semantic correction: my proposal doesn't ""create"" the
attack vector you describe (that the attacker will know the plaintext of
the 5-byte header).  That weakness is already there in TLS 1.3 as
currently specified, because the TLS header is unencrypted so the
attacker will *definitely* know the 5-byte header. :)  This is merely an
existing weakness that is not fixed by my proposal.
",<565C21EF.1060600@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 11:16:15
6076,TLS 15+,129,380,"Answer,Answer",303,303,"
It's already the case that middleboxes of various kinds re-segment
(merge and break up along different boundaries) TCP streams for various
reasons, often as an unintentional side-effect of interposing on the
stream by ""accepting"" the TCP connection (pretending to be an endpoint)
on one of the middlebox's interfaces and opening a new outgoing
connection on the other interface, and just forwarding the traffic
between them. In fact, Performance Enhancing Proxies (PEPs) are one
class of middlebox that often do this intentionally, so they can get
better control over and fiddle with the way congestion control works
over ""troublesome"" types of links like high-bandwidth-delay-product
(e.g., satellite) links.
",<565C21EF.1060600@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 11:16:15
6077,TLS 15+,129,382,"Answer,NeutralResponse,Answer",303,303,"
If I understand your question correctly, you're asking if encrypting TLS
record lengths might break middleboxes that currently want to track TLS
records for some reason, e.g., perhaps to re-segment the TCP stream to
correspond to TLS records (which might ""fix"" or ""revert"" the effect of
another middlebox in the path that re-segments TCP in a TLS-oblivious
fashion).  I don't know of any middleboxes that do precisely this, but
it's not inconceivable that they could exist.

More generally, since basically all manner of evil/broken middleboxes do
exist, it's entirely possible that most any change to TLS's wire
encoding *could* disagree with some middleboxes.  That's not specific to
the change I'm proposing; any wire-visible change could trigger unknown
middlebox badness.  The only solution to this I'm aware of is empirical:
try the change, deploy it experimentally at first, and see what the pain
level is, i.e., see if we find any middleboxes that complain and if so
how prevalent they are.  But since TLS 1.3 is already changing a lot of
other prominently wire-visible stuff with respect to prior versions of
TLS that might equally well break middleboxes, it's not clear that my
proposed change in particular is more likely to cause pain than any of
the other changes already made, and in general I don't think we should
let a few broken/evil middleboxes prevent meaningful evolution of the
TLS protocol.
",<565C21EF.1060600@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 11:16:15
6078,TLS 15+,129,497,Social,,-1,"Dear Bryan,
",<CAFggDF3LyD=XMS-99oH4CgP2A-rM-_=GOURaCMR_fBKEE+Y1Wg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-11-30 12:26:07
6079,TLS 15+,129,499,"Agreement,Agreement",378,378,"
That is my read as well. I think your proposal sounds pretty interesting.
",<CAFggDF3LyD=XMS-99oH4CgP2A-rM-_=GOURaCMR_fBKEE+Y1Wg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-11-30 12:26:07
6080,TLS 15+,129,501,"Question,NeutralResponse,Question,InformationProviding",382,382,"
Why would that concern anyone other than to help an attacker?

If my ISP requires me to use such a box, I should use it as a proxy or
configure it manually. If they use it on me without my consent, it is
an attack. I want TLS to break and to do so in a way that fails
closed. If another ISP, backbone ISP, or XKeyscore would have a harder
job, I fail to see why we should care at all.

They're the adversary, we should not give them anything. We should
make their job as difficult as possible technically as well as in most
other ways as well. I have no sympathy for the
what-about-poor-NSAT&T's-big-networks of the world.
",<CAFggDF3LyD=XMS-99oH4CgP2A-rM-_=GOURaCMR_fBKEE+Y1Wg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-11-30 12:26:07
6081,TLS 15+,129,503,"Agreement,NeutralResponse,Agreement,NeutralResponse,ContextSetting,InformationProviding,ProposeAction,Social",382,382,"
Agreed entirely. TLS should also be able to be composed with anonymity
networks in a way that we solve complementary problems, as you've
said. The less a hostile Tor exit can learn about a person's TLS 1.3
flow, the better. One could even imagine a key setup over one Tor
circuit and then a seemingly unrelated connection using the negotiated
key over another Tor circuit.

In an ideal world, we'd have two basic phases...

setup/keyex/etc:
which is distinguishable

transfer of data/tear down:
which if done correctly, should almost all look the same unless we
have a full network view with reassembly.

It would be nice if the biggest problem for traffic analysis was then
TCP/IP related, though we're far from that point with TLS 1.3 or any
other general purpose protocol.

It is true that to beat traffic analysis, we need to tackle that
problem directly and I very much agree with you that we still should
make these positive changes. Your suggested changes will also assist
others who are dealing with those problems directly.

All the best,",<CAFggDF3LyD=XMS-99oH4CgP2A-rM-_=GOURaCMR_fBKEE+Y1Wg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-11-30 12:26:07
6082,TLS 15+,129,535,InformationProviding,,-1,"Bryan A Ford <brynosaurus@gmail.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B8DA2A@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-28 11:15:57
6083,TLS 15+,129,537,"NeutralResponse,ContextSetting,UnderstandingNegative,ContextSetting,InformationProviding,Social",100,100,"
Argh, no!  I sent the following to the SSH list a few days ago in support of
someone else's suggestion to finally abandon this misguided idea:

-- Snip --

SSL/TLS have used unencrypted lengths for twenty years without there being any
(known) attack or weakness based on this.  OTOH SSH has used encrypted lengths
for nearly the same period, and there have been several attacks/weaknesses
based on that.  Security-wise, it has the opposite effect of the one intended,
it makes the protocol weaker, not stronger.

My real issue with it though is that, as you've pointed out, it makes it
impossible to create an efficient streaming implementation.  With TLS you read
the length at the start, stream the rest into the target memory location, and
decrypt in place.  With SSH you have to read a single block, decrypt it, make
sure you're not providing an oracle for the attacker, copy what's left around,
read more encrypted data onto the end, decrypt the remainder, ugh.

-- Snip --

Encrypting the length information is a serious step backwards both in terms of
security and processing efficiency.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B8DA2A@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-28 11:15:57
6084,TLS 15+,129,545,"Agreement,Agreement",537,537,"
I am inclined to +1 on that.",<5659DE6D.8030809@streamsec.se>,henrick@streamsec.se,0.0,0,18,2015-11-28 18:03:41
6085,TLS 15+,129,671,Social,,-1,"Hi Peter,
",<565AC278.2010904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 10:16:40
6086,TLS 15+,129,673,"Disagreement,NeutralResponse,NeutralResponse",537,537,"
Leaving all headers in the clear (and in particular record lengths) is a
huge side-channel, and historical experience is that attackers are
getting better and better at exploiting side-channels in surprising
ways.  The CRIME attack, for example, applied to a close relative of TLS
(namely SPDY), and exploited the attacker's ability to learn precise
information about (compressed in this case) record lengths.  I'm not
saying that hiding TLS/SPDY record lengths in particular would
necessarily address the CRIME attack (there were many factors involved
and a combination of weaknesses), but it is certainly an attack in which
the attacker's ability to see fine-grained length information was a
factor.  The general lesson is simply that lengths do represent
sometimes-exploitable side-channels.
",<565AC278.2010904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 10:16:40
6087,TLS 15+,129,675,"ClarificationElicitation,Disagreement,NeutralResponse,ContextSetting,UnderstandingNegative,Disagreement,ContextSetting,ClarificationElicitation,InformationProviding,ContextSetting",537,537,"
You're conflating the goal (hiding TLS headers) with one particular old,
broken approach to achieving that goal (namely SSH's). I am not
proposing to hide TLS headers in the same way SSH did, and just because
one historical approach to hiding headers was broken doesn't mean that
the goal itself is a bad idea, or that all possible ways to achieve that
goal are broken, or that my proposal in particular is broken. Feel free
to attack my proposal but then please attack *my* proposal, not the old
broken SSH approach.

I already addressed one specific weakness the SSH approach had and
explained why that's not an issue in my proposal.  You allude to
""several attacks/weaknesses"" SSH had: if there were several, can you
summarize or point me to information about the others?  And can you say
whether and in what way any of those past weaknesses in SSH might
conceivably apply to my proposed approach?  I claim you won't be able to
(but would be happy to be shown wrong), because there appears to be a
rather trivial ""security proof"" that my proposed hiding approach can't
possibly create any new security weaknesses that weren't already in TLS
1.3 as currently specified.  I already outlined that reasoning in my
proposal but will expand on it a bit more below.
",<565AC278.2010904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 10:16:40
6088,TLS 15+,129,677,"Disagreement,NeutralResponse,ProposeAction,ClarificationElicitation,ContextSetting,UnderstandingNegative,InformationProviding,ProposeAction,Thanking",537,537,"
How exactly does my proposal make it ""impossible to create an efficient
streaming implementation""?  Again, it sounds like you're attacking SSH's
broken approach while ignoring my proposal itself.  With my proposal you
can still perform exactly the same optimization just as before:

1. Read the 5-byte TLS header at the start, and decrypt it by XORing
with the output of the stream cipher as my proposal specifies, so you
now have the length.

2. Stream the rest into the target memory location, and AEAD-decrypt in
place.

I don't see how my proposal in any way makes life more difficult for
such streaming optimizations, because my proposal keeps
encryption/decryption of TLS headers separate from encryption/decryption
of the body.  What *might* make this optimization a bit more difficult
is the MAC that the AEAD wants to attach to each ciphertext, but if
that's a problem it's caused by TLS's use of AEAD and has nothing to do
with my proposal.  (That problem can in principle be worked around if
the AEAD cipher implementation has a simple ""scatter/gather"" capability
so it can put the MAC elsewhere, but that's a completely separate and
orthogonal topic.)

Now, returning to your concern about TLS header hiding creating security
weaknesses: my claim is that all that my proposal introduces is a change
of encoding of the 5-byte TLS header, which cannot possibly introduce
any new security weaknesses because it is not affecting in any way the
actual information content transmitted or received in the protocol or
the way it is processed outside of that header encoding change.

Consider this example:  Suppose we decided we wanted the 2-byte length
field in the TLS header to be transmitted in little-endian rather than
big-endian.  A useless change, yes, but could it create a new security
vulnerability that TLS 1.3 doesn't already have as specified?  Obviously
not; this would yield a perfectly (and provably) equivalent protocol.

Similarly, what if we decided for whatever reason it would be nice to
XOR the 5-byte length field with the constant five-byte sequence
[0x55,0x55,0x55,0x55,0x55]?  Could that create a new security
vulnerability?  Again, obviously not.

What if we decided that the TLS headers of odd-numbered records should
be XORed with [0x55,0x55,0x55,0x55,0x55], and the even-numbered records
should be XORed with [0xaa,0xaa,0xaa,0xaa,0xaa].  Could that create a
new security vulnerability?  No, it's still just an encoding change -
just one that happens to depend dynamically on record number.

What if we decided that the TLS headers should be XORed with an MD5 hash
of the record number?  Again, useless from a security perspective, but
not harmful either: it's still just changing the TLS header encoding
without changing anything else about how the protocol works - and in
particular doesn't change anything about how the record is
AEAD-protected or how the protocol behaves if an attacker flips any bits.

What if we decided that the TLS headers should be XORed with an
HMAC-SHA256 of the record number, keyed with a shared secret used only
for TLS header hiding?  This is now (finally) potentially useful from a
security perspective, and is basically isomorphic to my proposal - but
even if the attacker could break HMAC-SHA256 tomorrow or could learn the
shared secret used for TLS header protection, we would just be back to
the same security level as TLS's current cleartext-header design
achieves; we would still not be introducing any new security weaknesses
that TLS 1.3 doesn't already have.

Again, if you believe my reasoning is in any way flawed here, please
point out how you think my proposal (*not* the old SSH approach) could
conceivably introduce any new security weaknesses that TLS 1.3 doesn't
already have.

Thanks",<565AC278.2010904@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-29 10:16:40
6089,TLS 15+,129,704,InformationProviding,,-1,"Bryan A Ford <brynosaurus@gmail.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B92E74@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 01:26:15
6090,TLS 15+,129,706,"NeutralResponse,Disagreement,InformationProviding,ContextSetting,Social",675,675,"
I was actually commenting on the concept of encrypting headers in general,
not the specific case you'd given.  That is, I assumed you'd specifically
chosen the one case where it's practical, an AEAD stream cipher, and used
that as a strawman.  Re-reading your post, it looks like ""adding a stream
cipher to every TLS 1.3-compatible ciphersuite"" should really be ""require
that the only cipher type allowed for TLS be an AEAD stream cipher"",
because it's not going to work with anything else.

This breaks a fundamental principle of TLS, that you can drop in any
algorithm or mechanism you like (well, within reason) and it'll still work.
More importantly, if a flaw is found in one mechanism, you can switch to
another.  In the past we've been able to switch between a KSG cipher (RC4),
64-bit block ciphers, 128-bit block ciphers, and AEAD ciphers as required.
With this change, it looks like the only choice you have is an AEAD stream
cipher.

In addition, it doesn't actually achieve what you think it does, I'll
expand on that in a separate message in reply to another post.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B92E74@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 01:26:15
6091,TLS 15+,129,739,"NeutralResponse,NeutralResponse,Disagreement",706,706,"
In my proposal I focused on AEAD because I had understood (and thought I
had read in the TLS spec) that TLS had decided to move to AEAD-based
encryption in general.

I had no intention of implying that TLS ""must"" switch to AEAD
completely, and there's no reason it would need to for my proposal to
work.  It would work just as well and in exactly the same way if the
AEAD is replaced with the traditional Encrypt-then-MAC construction, for
example.

Also, if any issues with some (e.g., old) ciphersuites do arise, I
wouldn't object to specifying that TLS header encryption is done only
with ""new"" ciphersuites (e.g., the AEAD-based ones, or using some other
appropriate definition of ""new"").
",<565C0F25.7000507@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 09:56:05
6092,TLS 15+,129,752,InformationProviding,,-1,"Bryan A Ford <brynosaurus@gmail.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B9331B@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 10:34:27
6093,TLS 15+,129,754,"Disagreement,NeutralResponse,Disagreement,Social",739,739,"
No it wouldn't, unless the encrypt part is a stream cipher.  You're still
locked into using an AEAD stream cipher or the equivalent of an AEAD stream
cipher built with encrypt+MAC.  It won't work with, for example, the OCB AEAD
mode, or CBC + MAC.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B9331B@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 10:34:27
6094,TLS 15+,129,796,"NeutralResponse,ProposeAction,ProposeAction,ContextSetting,InformationProviding,Agreement,Social","537,754",754,"
I think we should focus on what would get TLS 1.3 to be adopted:

* Reasonably implementable in libraries that support older
versions alongside TLS 1.3.

* Interoperable in the field with various capital-intensive
middle boxen.

This suggests focusing on solidifying the core protocol, and a
healthy dose of skepticism around bells and whistles.  If the
protocol is overloaded with too many (alright even more) incompatible
innovations, the net effect is likely less security due to
substantially delayed deployment of the key improvements.

Encrypting message lengths looks rather marginal from this perspective,
and quite likely to hinder interoperability and delay both
implementation and upgrades.  However cool an idea this might be,
this does not look to me like the right time to add this feature
to TLS.

At this point, TLS 1.3 is rather feature rich, and it is I think
time to focus on reviewing the already agreed changes (maybe even
drop some if they look inessential).  Make it solid, trim the fat,
get it out the door in a usable form.

Viktor.",<20151201005609.GD18315@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-12-01 00:56:09
6095,TLS 15+,129,869,"NeutralResponse,NeutralResponse",796,796,"
That doesn't change with Bryan's suggestion, I think.
",<CAFggDF03fzyAw95Ka8NHtBGEcebAe3RCt5pRd3r8_nhBbR7oNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 01:36:26
6096,TLS 15+,129,871,"ClarificationElicitation,ClarificationElicitation",796,796,"
Which would those be? And what is the definition of capital-intensive
for those watching on the sidelines?
",<CAFggDF03fzyAw95Ka8NHtBGEcebAe3RCt5pRd3r8_nhBbR7oNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 01:36:26
6097,TLS 15+,129,873,"Disagreement,NeutralResponse,Disagreement",796,796,"
This seems borderline absurd. The TLS protocol is doing a major
version revision.
",<CAFggDF03fzyAw95Ka8NHtBGEcebAe3RCt5pRd3r8_nhBbR7oNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 01:36:26
6098,TLS 15+,129,875,"Disagreement,NeutralResponse,ProposeAction,Disagreement,ProposeAction",796,796,"
I don't think it will hinder interoperability and not one person has
even named a single device that would have issues with it. I think the
only thing that comes close is when I've named a classified US
government surveillance program (XKeyscore) that would probably have
trouble with it.

We should add Bryan's feature and not pander to non-specific concerns
about middleboxes that should be considered as adversaries.
",<CAFggDF03fzyAw95Ka8NHtBGEcebAe3RCt5pRd3r8_nhBbR7oNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 01:36:26
6099,TLS 15+,129,877,"NeutralResponse,NeutralResponse,Social",796,796,"
That is part of what is happening in Bryan's suggestion. He found a
reasonably practical way to encrypt record headers. His suggestion
will make TLS more secure. His suggestion includes a review of a part
of the previous state of TLS 1.3 with a proposed improvement.

No one is debating it on the cryptographic merits which is surprising.

All the best,",<CAFggDF03fzyAw95Ka8NHtBGEcebAe3RCt5pRd3r8_nhBbR7oNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 01:36:26
6100,TLS 15+,129,884,"Question,InformationProviding",,-1,all?,<0c2801d12bef$479e9b90$d6dbd2b0$@augustcellars.com>,ietf@augustcellars.com,0.0,,,2015-11-30 20:18:06
6101,TLS 15+,129,1012,"Answer,NeutralResponse,Answer,ProposeAction",871,871,"
Firewall, IPS/IDS devices. Boxes that attempt to perform sanity-check on protocols to make sure that the stuff going over TCP port 443 is really HTTPS rather than an attempt at tunneling.  There are some attacks such the the code that protects against them needs to follow TLS record sizes. For the most part these are not-so-interesting attacks, causing certain versions of certain browsers to hang, and they are expensive for the firewall to protect against, so for the most part these protections are turned off. But it’s not everywhere.

If enough middleboxes block TLS 1.3, the browsers will implement a downgrade dance. If they do that, attackers will be able to exploit the downgrade dance. I don’t think the net effect is better security. We’d be far better off writing a separate document on how to use the padding feature that is already in 1.3 to mitigate traffic analysis without actually flooding your Internet connection. Splitting records and padding a few can be more effective than masking the length bits.
",<3B906BDF-CA30-4EDF-ADA9-ABFC2A25014D@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-01 11:12:47
6102,TLS 15+,129,1045,"Question,NeutralResponse,NeutralResponse,Question",1012,1012,"
Certainly there are middleboxes that try to use traffic analysis to
detect attempts at tunneling - but the fact that the traffic is HTTPS
doesn't mean there's no tunneling; in fact the HTTPS CONNECT operation
does exactly that (and is sometimes used for exactly that purpose).

Regardless, does the IETF really want to be in the business of making
sure that protocols like TLS are designed to avoid making life
inconvenient for developers of Great Firewalls of whatever type?
",<565DB4D9.309@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 15:55:21
6103,TLS 15+,129,1046,"NeutralResponse,NeutralResponse,Disagreement,Social",1012,1012,"
Browsers have to implement a downgrade dance anyway to be able to talk
with web servers that don't support TLS 1.3.  TLS 1.3 already changes
plenty of things that middleboxes ""might"" not like; absent concrete
evidence of major incompatibilities specifically caused by the proposed
change, I don't see why we should avoid changing one more bit of the
protocol that middlebrowsers ""might"" not like.

B",<565DB4D9.309@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 15:55:21
6104,TLS 15+,129,1099,"Disagreement,NeutralResponse,Answer",1045,1045,"
Convenience has nothing to do with it. The next version of every firewall out there is going to support TLS 1.3. If TLS 1.3 means that the middlebox cannot parse the record lengths, then the next version of the middlebox will give the administrator the option of blocking TLS 1.3 or disabling the processing that requires following record lengths.  The issue is with all older version middleboxes that are out there. They don’t get updated nearly as often as we vendors would like.

And the IETF is in the business of developing protocols that work and can be deployed. For counter-examples look at SCTP. It is not deployed because middleboxes (mostly NAT devices in this case) didn’t know what to do with it. It’s fairly simple to NAT SCTP, but the old middleboxes didn’t know how. Newer middleboxes still mostly don’t know how to NAT SCTP. Why? Because nobody’s using SCTP, so why bother? There are a dozen other features that customers actually want that need to be developed.
",<872A3889-43C7-414A-B785-4FFD6FCB0718@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 08:52:59
6105,TLS 15+,129,1101,"Disagreement,NeutralResponse,ContextSetting,UnderstandingNegative,ContextSetting,InformationProviding",1046,1046,"
That is not what a downgrade dance is. The normal way of version negotiation goes something like this:
Client: I support TLS 1.1, 1.2, and 1.3.
Server: (WTF is 1.3?) OK, I choose 1.2.

By the end of the handshake both of the above messages enter the calculation of the Finished message so it’s fine.

A downgrade dance goes something like this:
Client: I support TLS 1.1, 1.2, and 1.3.
Server: (WTF is 1.3?) RST
Client: (old server that didn’t implement version negotiation right. Sigh) I support TLS 1.1, 1.2.
Server: OK, I choose 1.2.

In this case only the last two messages get into the Finished message. As a result, an attacker (whether on-path or not) can easily induce the downgrade dance by sending a RST, but it cannot induce version negotiation down to 1.2. Browsers are just now getting rid of the downgrade dance they had for 1.2. It would be a shame to have to re-introduce it.
",<872A3889-43C7-414A-B785-4FFD6FCB0718@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 08:52:59
6106,TLS 15+,129,1182,"ClarificationElicitation,NeutralResponse,ClarificationElicitation,Question,NeutralResponse",1012,1012,"
Could you be more specific? Which devices are we saying will break? Do
you have model numbers? Are those vendors on this list? Do they agree
that this will break and do we agree that they are a relevant
stakeholder who has a user's security in mind?

For example, do we really care what sandvine or xkeyscore or narus or
similar vendors think? I think the answer is no. They're still going
to do extremely powerful traffic analysis and the more information TLS
leaks, the more they will use it to degrade the security of TLS for
all users. It may be that they will be full, on path, attackers and
yes, in some cases, they can do different more powerful attacks.
Again, we should treat that as a negative thing and make it as hard as
is possible.
",<CAFggDF2sWLr-2yXPDrznymO_E1Zx_UCm1zn92J8O84WZh2gMrA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 11:38:42
6107,TLS 15+,129,1184,"NeutralResponse,NeutralResponse,Social",1012,1012,"
Censors are going to perform surveillance and then censor; TLS 1.3
should treat surveillance as a security issue and censorship as an
attack. It may be that we can't stop certain kinds of on path attacks
but man on the side seems nearly entirely do-able. I mean aside from
the TCP reset issues do to layer violation concerns. At least we'll
have DTLS, which won't suffer from such a trivial denial of service...
right?

All the best,",<CAFggDF2sWLr-2yXPDrznymO_E1Zx_UCm1zn92J8O84WZh2gMrA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 11:38:42
6108,TLS 15+,129,1247,"Answer,NeutralResponse,Answer,InformationProviding",1182,1182,"
I am no expert on middleboxes. I know a little about those that my employer (Check Point) makes. I only know a little, because I’m on the VPN side of things, not the IDS/IPS/next generation firewall side. These are corporate firewalls. When it comes to filtering HTTPS connections, firewalls have three ways to classify the connection:
1. Look at the SYN and SYN-ACK packets. Make decisions by IP addresses.
2. #1, and additionally follow the stream looking for certain patterns.
3. Full “TLS proxy”.

Each of these is “heavier” in amount of resources that it consumes and in the amount of breakage that it might introduce than the one before it, so you only use a higher-numbered way if the lower-numbered way does not give you the results you need. Specifically for #2 which is the one we’re concerned about, there are very few attacks that can be detected by #2 that cannot be detected by #1. I asked someone who does work on these “protections” as we call them, and she told me that only two or three protections require following the stream that do not require proxying, and those were turned off in the default and recommended profiles. So at least with a Check Point firewall, mostly you would not get breakage if record lengths were encrypted, but someone making a client or a server cannot assume that all paths will be free from such inspection. Also, there are many firewall vendors and one is installed in most corporate environments.

So at least one vendor is listening in on this list, and I have a good hunch that at least Cisco, Blue Coat and several others are on this list as well. Whether they are relevant stakeholders or not is to me the same question as whether the network administrator in a corporate environment is a relevant stakeholder. We just make the middlebox that they deploy.
",<A4341585-0020-4F8B-84CC-BBC0EE7F57CB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 13:59:52
6109,TLS 15+,129,1249,"NeutralResponse,ProposeAction,ProposeAction",1182,302,"
Or just use IPsec (I did say I’m no that side of the building…)
",<A4341585-0020-4F8B-84CC-BBC0EE7F57CB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 13:59:52
6110,TLS 15+,129,1388,"NeutralResponse,NeutralResponse,ContextSetting",1247,1247,"
I don't think we should worry about breaking poor little Check Point's
traffic analysis devices. Allow me to shift the overton window: their
device is a problem and we should treat it as a problem on the
network. TLS should mitigate as many of the advantages that they use
to harm end users. We should make those devices use as much RAM and as
much disk space and as much CPU time as possible. In the words of a
Google engineer who discovered the NSA had been doing traffic analysis
on his backbone...
",<CAFggDF2Mvmqc7RifSYf7Q=tJdK7oWipUQjwK=GmhgB-rvZCqdA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:59:12
6111,TLS 15+,129,1390,"Question,NeutralResponse,NeutralResponse,Question",1247,1247,"
That sounds like you're saying that the vendor you represent won't
have issues and that it isn't a problem. Unless I misunderstand,
you're claiming a concern and you've just cleared up that concern. So
we can move on with Bryan's proposal?
",<CAFggDF2Mvmqc7RifSYf7Q=tJdK7oWipUQjwK=GmhgB-rvZCqdA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:59:12
6112,TLS 15+,129,1392,"NeutralResponse,NeutralResponse",1247,1247,"
I'd love for Blue Coat to step up and talk about how this is similarly
not a problem or how it is a problem for their illegal surveillance
business in Syria, where they've been caught selling surveillance and
censorship gear. I suspect they won't say much but we can hope, right?
",<CAFggDF2Mvmqc7RifSYf7Q=tJdK7oWipUQjwK=GmhgB-rvZCqdA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:59:12
6113,TLS 15+,129,1394,"NeutralResponse,NeutralResponse,ProposeAction",1247,1247,"
That is a kind of goal post shifting but seeminly weirdly not
relevant, if I understand. If it won't trouble the middle box, it
doesn't sound like the network administrator will have troubles.

It will however reduce off-path reassembly to technique #1 from above
and #2 will be partially eliminated and #3 isn't an option for that
attacker anyway.

We are working on solutions to #1, TLS 1.3 should reduce and if
possible, eliminate #2, and #3 is something that should require
consent of the user in question. Without consent, TLS 1.3 should hard
fail closed as a security measure.
",<CAFggDF2Mvmqc7RifSYf7Q=tJdK7oWipUQjwK=GmhgB-rvZCqdA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:59:12
6114,TLS 15+,129,1396,"Question,NeutralResponse,Question,NeutralResponse,Social",1249,1249,"
How well will IPsec deal with such an adversary? I think it is
instructive at all the ways that a protocol won't compose cleanly with
something like Tor, as well as how many distingusihers exist for
technique #2 above. It is very frustrating because yes, it would be
nice if we could just use IPsec. That is however nearly a total lost
cause with regard to surveillance and censorship issues. I once talked
to a Narus vendor who made some amazing claims about traffic analysis
on IPsec - I'll try to dig up some documents.

All the best,",<CAFggDF2Mvmqc7RifSYf7Q=tJdK7oWipUQjwK=GmhgB-rvZCqdA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:59:12
6115,TLS 15+,129,1455,"NeutralResponse,NeutralResponse",1388,1388,"
Problem is that users care for the cat macros and wedding pictures on
their social network of choice. If the old version of browser works or
an other browser works then it /obviously/ is the new browsers fault
that the connection fails so it's the /new/ browser that is broken.

So the browser vendor implements out-of-protocol fallback to old
protocol version so that it continues to work. That's a Bad Thing.",<2651779.FONMJx2ulk@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-02 14:33:13
6116,TLS 15+,129,1566,"NeutralResponse,UnderstandingNegative,NeutralResponse",1390,1390,"
To be clear, I don’t represent anybody. If I did, I would have to clear this mailing list message with a corporate lawyer and PR department.

I don’t think Bryan’s proposal will hurt the capabilities of a Check Point firewall, and it will make life difficult for me as a developer no more than it will make life difficult for developers of OpenSSL, NSS, SChannel, or any of a dozen other TLS implementations. I don’t know about the other IDS/IPS/Firewall devices.
",<FC4B4A5A-3D42-411B-AFF9-2381DE61E63E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 15:38:22
6117,TLS 15+,129,1568,"NeutralResponse,NeutralResponse",1392,1392,"
I suspect that the Blue Coat people on this list do not represent their employer either.
",<FC4B4A5A-3D42-411B-AFF9-2381DE61E63E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 15:38:22
6118,TLS 15+,129,1570,"NeutralResponse,UnderstandingNegative",1394,1394,"
A TLS proxy requires user consent (or at least device administrator consent) with TLS 1.2. TLS 1.3 does not change that.
",<FC4B4A5A-3D42-411B-AFF9-2381DE61E63E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 15:38:22
6119,TLS 15+,129,1572,"NeutralResponse,NeutralResponse",1396,1396,"
IPsec has had a lightly-implemented TFC feature since RFC 4301. Without it a packet of IPsec is the same size as the original plaintext packet + a constant overhead rounded up to 4 bytes. So you could do as much traffic analysis on non-TFC IPsec as you could on the plaintext.
",<FC4B4A5A-3D42-411B-AFF9-2381DE61E63E@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 15:38:22
6120,TLS 15+,129,1601,"NeutralResponse,ProposeAction,StateDecision,NeutralResponse,Social",1566,1566,"
The people who will be inconvenienced (if any) by changing the record
framing in an
externally visible way are not largely developers of middleboxes or stacks
but
rather (1) users and (2) client vendors and (3) server operators, who have
to
deal with connections being arbitrarily broken and/or damaged by inspection
devices which expect to be able to observe packet framing.

In Seattle, when the topic of stripping off the fixed three bytes of the
record
header came up (which would have had a similar impact), we agreed to defer
it until we had measurements for the level of breakage that it would cause
(an experiment which we at Mozilla are on the hook for). It seems to me that
this question should be handled similarly.

-Ekr",<CABcZeBPSygpOZpkj2a+UM1CL+VY3ygg4jP1Aoy9owo1+QS7=1Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 06:12:43
6121,TLS 15+,129,1646,"NeutralResponse,NeutralResponse",1601,1601,"
Those are also exactly the same parties that benefit from the changes.
Other people who benefit are ISPs, who can't log data that encryption
prevents them from seeing, and there are probably others too.
",<CAFggDF3W7gznbhuv+N+am=_uR7VkrBf5qZn=hTTUyLXgzhDUFA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:40:52
6122,TLS 15+,129,1648,"ClarificationElicitation,NeutralResponse,ClarificationElicitation,InformationProviding,Social",1601,1601,"
How can it break something that doesn't yet exist and how can we
measure that? o_0

Again, I'm surprised that no one is attacking the crypto design that
Bryan offered...

All the best,",<CAFggDF3W7gznbhuv+N+am=_uR7VkrBf5qZn=hTTUyLXgzhDUFA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:40:52
6123,TLS 15+,129,1653,"Disagreement,NeutralResponse,NeutralResponse",1648,1648,"
They are.  Security is about trade-offs, and the questions have been if the benefit is worth the complexity.  People are assuming that it works.",<861d2065dc7a4fb9a2dec2c5dda3c8aa@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-02 15:46:01
6124,TLS 15+,129,1695,"Question,NeutralResponse,NeutralResponse,Question,ProposeAction",1570,1570,"
With SNI it’s possible to operate a transparent TLS proxy without the users consent. The proxy only has visibility of the SNI hostname - no user data (source: the company I work develops routers with such a proxy). It’s quite useful in hotspot/public wifi environments where making policy decisions based on hostname is more than sufficient, and explicit user configuration of proxy settings is a non-starter. As long as the SNI data is still available in the clear, encrypting subsequent headers won't impact the ability for our particular proxy to operate, as it’s just a generic TCP relay agent at that point.

With all that being said, I think the concerns about length hiding are better addressed through other means rather than header encryption. Not sure if this is the right place to consider, but would DTLS 1.3(?) be able to encrypt headers and still handle packet loss and re-ordering? If DTLS needs cleartext headers, would it be better to advise one approach for both protocols?
",<CFCAB19C-9040-4FB0-B774-3A0C3E5EF9B9@lamsap.org>,mikec@lamsap.org,0.0,0,47,2015-12-02 15:14:56
6125,TLS 15+,129,1776,"NeutralResponse,NeutralResponse",1695,1695,"
Yes, we use that for a pluggable transport (
https://trac.torproject.org/projects/tor/wiki/doc/meek ) to bypass
such proxies - connect to google.com, use http header to route to
blocked.com, and so on.
",<CAFggDF3HP5u0YP0UP_HrrZnrTnzc-CD1EG0grZBcb5sB7A2fAA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:38:53
6126,TLS 15+,129,1778,"NeutralResponse,NeutralResponse",1695,1695,"
That is an attack in my book and public hotspots that do MITM are also
a problem that we need to solve. It is partially solved with WISPr
XML, I think. Though everything in this space is awful because it
breaks everything by default while a system thinks it is online.
",<CAFggDF3HP5u0YP0UP_HrrZnrTnzc-CD1EG0grZBcb5sB7A2fAA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:38:53
6127,TLS 15+,129,1780,"NeutralResponse,NeutralResponse",1695,1695,"
I hope that we'll hide the SNI data by default and I understand that a
discussion about encrypted SNI is currently scheduled for some point
in the future.
",<CAFggDF3HP5u0YP0UP_HrrZnrTnzc-CD1EG0grZBcb5sB7A2fAA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:38:53
6128,TLS 15+,129,1782,"NeutralResponse,Disagreement,Social",1695,1695,"
I'm pretty sure that encryption is the only way to ""hide""  the data we
want to hide...

All the best,",<CAFggDF3HP5u0YP0UP_HrrZnrTnzc-CD1EG0grZBcb5sB7A2fAA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:38:53
6129,TLS 15+,129,1799,"NeutralResponse,Disagreement,NeutralResponse,Social",1780,1780,"
Hiding SNI data is completely silly security-wise, and any TLSv1.2
backwards-compatible ClientHello must include a plaintext visible SNI.

So your client will have to know a-priori, out-of-band or be configured
to TLSv1.3-only in order to avoid using a TLSv1.2-compatible ClientHello
with cleartext SNI.

-Martin",<20151202160837.6016A1A39B@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-02 17:08:37
6130,TLS 15+,129,1841,"Question,Disagreement,NeutralResponse,ContextSetting,Disagreement,NeutralResponse,Question",1799,1799,"
Not hiding SNI data is completely silly security wise. SNI data is
used by attackers to perform denial of service attacks and to automate
man-in-the-middle attacks.

We have bare keys in TLS that may also be ephemeral - why would we
want to reveal a selector to the network that we know is used for
active attacks against the protocol?

The question for a few people, myself included, is how we might
protect the SNI data in an efficient manner.
",<CAFggDF0D3Rgav-4xg-11u0igMyMXvAWT+JNt2r1xyQnpvm08Qw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 17:53:40
6131,TLS 15+,129,1843,"Disagreement,NeutralResponse,Disagreement,ContextSetting,NeutralResponse,Social",1799,1799,"
I think that is false. One could easily use the ""cleartext"" SNI field
and insert an encrypted value. A hash of the name would be a simple
example but not a secure example, of course.

To the point about TLS 1.2 vs TLS 1.3: Legacy clients will be less
secure and in ways that will only become worse over time. We should
remember that TLS 1.3, while not yet finished or deployed, is a future
legacy protocol. We shouldn't burden the future with the failures of
TLS 1.2 or any other SSL/TLS mistakes of the past.

All the best,",<CAFggDF0D3Rgav-4xg-11u0igMyMXvAWT+JNt2r1xyQnpvm08Qw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 17:53:40
6132,TLS 15+,129,1850,"NeutralResponse,Disagreement,NeutralResponse",1843,1843,"
Encrypted SNI doesn't give you the kind of protection you think that it does.  We (me and a colleague) did a pretty thorough analysis that showed this.  It was not a conclusion we expected, or wanted, to reach.   It was presented at the TLS Interim before the IETF in Toronto.  Slides should be online.  (For example, the adversary will know the IP address or might not care about false positives, etc.)

In spite of this, another colleague (Brian Sniffen) came up with a way to do it at the tail end of the Seattle interim.  Encrypt the ""true"" SNI in the semi-static DH key of a ""fronting"" site.  And then the front decrypts the true SNI and forwards to the obscured site. Ekr and dkg presented it in Yokohama, but not very well. :)  They're presumably working on something better.",<0ba184c45d44474e961a2aaac82fec0e@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-02 18:00:26
6133,TLS 15+,129,1884,"NeutralResponse,NeutralResponse,Social",1850,503,"
Yes, expect an email with a summary of our current thinking in the next
day or so.

-Ekr
",<CABcZeBPNvNsJfkNm=UmWLsKGfPZXhBT2ur3Fa3meBn05+4Lt0Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 10:01:42
6134,TLS 15+,129,1925,"NeutralResponse,NeutralResponse",1850,1850,"
Without a concrete proposal, I don't think we have any protection. My
thoughts were more about the idea that we would *want* protection of
SNI data - it seems blindingly obvious to me that we want it as we
know SNI is used for attacks in addition to multi-homing tricks.

I'm aware that layer issues make for many layers of selectors for
attack. If we can avoid adding them in TLS, we can also work on
improving things on every level. IP address blocking has the
""collateral freedom"" problem, of course.
",<CAFggDF119jxPSXUAe2E4y_TQds4P3K1eTGM3sZHSa=NoeMOV-A@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 18:11:51
6135,TLS 15+,129,1927,"NeutralResponse,ProposeAction,NeutralResponse,Social",1850,503,"
I'm certainly interested in reviewing any cryptographic details for a
possible SNI protection scheme. It sounds interesting and am looking
forward to learning more.

All the best,",<CAFggDF119jxPSXUAe2E4y_TQds4P3K1eTGM3sZHSa=NoeMOV-A@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 18:11:51
6136,TLS 15+,129,1938,"Disagreement,NeutralResponse,Disagreement",1925,1925,"
Few things, particularly in the security arena, are blindingly obvious.  If it actually provides no true protection, then it's just as bad as the security theater in US airports.
",<1b5cf52ca90e45bd82f5247ca675dead@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-02 18:16:40
6137,TLS 15+,129,1939,"NeutralResponse,NeutralResponse,StateDecision",1925,1925,"
We're not adding anything as SNI is already in plaintext.  (Precision counts:).  And we have already added numerous important privacy protections to TLS 1.3.

/r$",<1b5cf52ca90e45bd82f5247ca675dead@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-02 18:16:40
6138,TLS 15+,129,1971,"NeutralResponse,Disagreement",1938,1938,"
It provides protection. Specifically it provides confidentially.

It doesn't solve the fact that the DNS is a privacy violating
nightmare. It doesn't change the fact that the NSA breaks the rules.
",<CAFggDF24hhrXS95kONb_N6XHrO+11wFsAkHOpYZ_uu5RvyV+Kg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 00:52:39
6139,TLS 15+,129,1973,"NeutralResponse,Disagreement,Social",1939,1939,"
Leaving SNI in the clear ensures that attackers will be able to
selectively block access by name with ngrep and some basic TCP RST
injection. No cryptographic attacks are required and it will be done
by simply looking for an objectionable string. The economics of that
attack are very low. Forcing an attacker to become a global active or
passive adversary and to perform competent traffic analysis is a much
higher economic cost.

All the best,",<CAFggDF24hhrXS95kONb_N6XHrO+11wFsAkHOpYZ_uu5RvyV+Kg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 00:52:39
6140,TLS 15+,129,1978,"NeutralResponse,Disagreement",1971,1971,"
It is far from clear that the privacy gains anything in the form of practical protection.  Having looked at it, I'm unconvinced.  And I've been a privacy/crypto advocate for a very very long time.",<60e21928e9174d8ea7eb84b00ad85884@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-03 01:46:34
6141,TLS 15+,129,1996,"NeutralResponse,NeutralResponse,Social",1978,1978,"
I resolve DNS through Tor and so in that case, my TLS connections
often exit over a different circuit. My TLS connection would not
otherwise leak the host I'm requesting if the protocol had a way to
protect that data. It doesn't. The protocol leak is the problem.

All the best,",<CAFggDF3wehZX9meomiAx0A79qPemmhrBs9c8cqJSqMYiDJ7iUw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:49:02
6142,TLS 15+,129,2025,"NeutralResponse,NeutralResponse,Social",1996,1996,"
The most compelling argument for SNI encryption I took away from
this thread the cheap opportunity for blocking traffic based on
cleartext SNI.  Of course SNI encryption can't help if the destination
IP address supports one or a very few related domains, but it could
help otherwise.

Of course nation-states willing to play hardball will work-around
the problem, but they are doing that even without encrypted SNI.

[ Those of you on the crypto list will have seen the announcement
about Kazakhstan mandating a national security certificate which
must be installed on all customer devices that use the Internet... ]

Viktor.",<20151203043343.GD18315@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-12-03 04:33:43
6143,TLS 15+,129,2078,"NeutralResponse,NeutralResponse,InformationProviding,ProposeAction,Social",1971,1971,"
And what Don and Rich's analysis is trying to isolate is how much real
protection you get from that level of confidentiality, so that a decision
that weighs all available factors can be made, including the complexity
cost.

It's not just a collective action problem because DNS isn't encrypted too.
Their analysis also looks at what you get when both are encrypted. And
regardless of DNS being encrypted, rainbow-table style reverse lookups of
IP to DNS name are always possible. That doesn't mean encrypted SNI isn't
worth it -- it clearly provides a security attribute (confidentiality) to
an important piece of information.

But it's not enough to drive ahead and say that some attribute outweighs
every other consideration. For example, HSTS' persistence of memory can be
abused as a tracking device:

http://zyan.scripts.mit.edu/sniffly/

And this was known at the time the spec was finalized:

https://tools.ietf.org/html/rfc6797#section-14.9

But HSTS creates security benefits that are well worth the cost of that
tracking potential (which can also be mitigated through preloading). There
are a lot of browsers and communities which use and advocate for HSTS that
might generally balk at creating tracking devices.

I'm not advocating a strong stance on whether encrypted SNI is worth
pursuing, or whether TLS record headers should be encrypted in TLS 1.3. But
it's useful to keep the debate framed in its full context, rather than
narrowing it to a black-and-white discussion over whether a generally good
attribute is good or not.

-- Eric",<CANBOYLXJX_gjuC8Rp0Z9YqzNYsbr0x1WeL4AeRUxFtMaM+U5wQ@mail.gmail.com>,eric@konklone.com,0.0,0,26,2015-12-02 20:54:54
6144,TLS 15+,129,2155,"Disagreement,Disagreement",2078,110,"
I'm sorry but that analysis is just not a serious and rigorous analysis.
",<CAFggDF2fbpFkURZtjuKc5NWGRdYra+A9gPD6881nk-Crs2ijXA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:56:20
6145,TLS 15+,129,2156,"Disagreement,NeutralResponse,NeutralResponse,Disagreement",2078,2078,"
The conclusion summary is that because there are many problems, we
won't address our part of the problems. The conclusion is that SNI
privacy isn't worth it because those who live in liberal democracies
with poor traffic analysis, well they just don't matter much. Which
is... just... well, as I said above, I just don't take this seriously.
",<CAFggDF2fbpFkURZtjuKc5NWGRdYra+A9gPD6881nk-Crs2ijXA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:56:20
6146,TLS 15+,129,2158,"NeutralResponse,NeutralResponse",2078,2078,"
You're now suggesting an attacker that computes rainbow-tables to
arrive a possibility which in itself sounds like a massive improvement
over what was an absolute certainty.
",<CAFggDF2fbpFkURZtjuKc5NWGRdYra+A9gPD6881nk-Crs2ijXA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:56:20
6147,TLS 15+,129,2160,"Agreement,NeutralResponse,NeutralResponse",2078,2078,"
Yes, tracking with HSTS is a problem and there is work being done to
mitigate that tracking concern.
",<CAFggDF2fbpFkURZtjuKc5NWGRdYra+A9gPD6881nk-Crs2ijXA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:56:20
6148,TLS 15+,129,2162,"NeutralResponse,NeutralResponse,Social",2078,2078,"
Sure and that full context includes RFC 7258: ""Pervasive Monitoring Is
an Attack"" - something that defines reasonably clearly many of the
concerns I've stated.

All the best,",<CAFggDF2fbpFkURZtjuKc5NWGRdYra+A9gPD6881nk-Crs2ijXA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:56:20
6149,TLS 15+,129,2228,Social,,-1,"Hi *,
",<5660405E.3060008@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 14:15:10
6150,TLS 15+,129,2230,"Disagreement,NeutralResponse,Agreement,NeutralResponse",2155,2155,"
No it's not. It's a very short presentation from a TLS-WG interim
meeting. The threat-model concerns Akamai's (and other's) current and -
possibly - future use of TLS. We're not trying to build an Onion routing
protocol. Given the FUD on the Tor dev list, this is a good thing. While
the presentation might have flaws from the perspective of an Onion
routing protocol developer, it reflects the point of view of a lot of
people/companies on this list, I assume.
",<5660405E.3060008@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 14:15:10
6151,TLS 15+,129,2232,"Agreement,NeutralResponse,Agreement,NeutralResponse",2156,2156,"
See above, different point of views on the same problem. I agree here
and think we should continue to find a proper solution for encrypted-SNI
for TLS 1.3 - if at all possible. What we currently have on our hands is
not very convincing to me.
",<5660405E.3060008@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 14:15:10
6152,TLS 15+,129,2234,"Agreement,Agreement",2158,2158,"
+1.
",<5660405E.3060008@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 14:15:10
6153,TLS 15+,129,2236,"Agreement,NeutralResponse,Agreement,InformationProviding",2162,2162,"
While kind of a political/policy document I agree that IETF WG's should
follow (and participants read) it. I remember the STRINT meeting in 2014
where a lot of people were very pissed about NSA activity and we decided
we want to do something about it. If it takes a standard a few months
longer to be finished, please give it the proper amount of time for
enough people to put their ideas into it. Most people do not come up
with solid engineering solutions over night. And crypto is hard as we
all know. We should not forget that TLS has a very different
threat-model and performance assumptions than Tor though.
",<5660405E.3060008@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 14:15:10
6154,TLS 15+,129,2239,"NeutralResponse,ContextSetting,ContextSetting",,-1,PS:,<56604CAF.5000305@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 15:07:43
6155,TLS 15+,129,2315,Social,,-1,"Hello,
",<CAFggDF0vsZfH-3=Fsb24dc_TZchZ63jAp=p+LpZcf_UYqjZZcw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 16:04:33
6156,TLS 15+,129,2317,"NeutralResponse,UnderstandingNegative,UnderstandingNegative,NeutralResponse",2239,-1,"
I'm confused by what you mean by traffic analysis. We encrypt content
in TLS because we know that we want confidentiality. We want that
because we know people do basic traffic analysis looking for sensitive
data in plaintext.

There are many kinds of traffic analysis adversaries. I think TLS
isn't trying to beat a global active adversary, for example, while
also providing anonymity. It seems that TLS is trying to beat a global
passive adversary from violating the confidentiality of the protocol.

A lack of confidentiality in many cases allows for attackers to do
better traffic analysis and selective denial of service attacks.
Failure to deal with very simple traffic analysis leads to much more
serious attack vectors being actively exploited in the wild.
",<CAFggDF0vsZfH-3=Fsb24dc_TZchZ63jAp=p+LpZcf_UYqjZZcw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 16:04:33
6157,TLS 15+,129,2319,"NeutralResponse,Disagreement,InformationProviding,Social",2239,-1,"
The architecture of the network protocol is the politics. There is no
separation.

RFC1984 and RFC 7258 cover this topic nicely.

All the best,",<CAFggDF0vsZfH-3=Fsb24dc_TZchZ63jAp=p+LpZcf_UYqjZZcw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 16:04:33
6158,TLS 15+,129,2381,Social,,-1,"Hey,
",<56606CF8.7070505@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 17:25:28
6159,TLS 15+,129,2383,"Agreement,NeutralResponse,NeutralResponse,InformationProviding",2317,2317,"
I don't work in SIGINT nor for commercial networking vendors so I always
have used jargon I picked up from Wikipedia:
Traffic analysis is the process of intercepting and examining messages
in order to deduce information from patterns in communication. It can be
performed even when the messages are encrypted and cannot be decrypted.
In general, the greater the number of messages observed, or even
intercepted and stored, the more can be inferred from the traffic.
``` -- https://en.wikipedia.org/wiki/Traffic_analysis

My example, Pond, counters this with padding, randomized traffic
patterns and - of course - Tor [0]. I'm just saying this is unpractical
for a low-latency protocol such as TLS. I think we all agree there.
",<56606CF8.7070505@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 17:25:28
6160,TLS 15+,129,2385,"NeutralResponse,NeutralResponse,InformationProviding",2317,2317,"
See my last message, I'm absolutely for encrypted-SNI. If it's feasible.
If we end up with some compromise, maybe. But what we have now is
nowhere near ideal.

BTW, I played with SNI DoS a few months back (not too much though as it
wasn't worth a paper), seems not to be as bad as it used to be because
implementations nowadays have at least some counter-measures.
",<56606CF8.7070505@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 17:25:28
6161,TLS 15+,129,2387,"NeutralResponse,Agreement,InformationProviding",2319,2319,"
Bashing on random companies won't get us anywhere. I agree with you, but
it's off-topic here. Most of the participants here do not represent
their employer and even though some might have made a bad employment
choice, it's up to them. They mostly speak for themselves and bring
valuable implementer opinion to the table. Some break TLS on a massive
scale and this is a problem (we have a vendor-nickname for a certain TLS
extension after all). See also RFC7624, RFC7696.
",<56606CF8.7070505@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 17:25:28
6162,TLS 15+,129,2390,"NeutralResponse,ContextSetting",,-1,Errata:,<56607154.60001@azet.org>,azet@azet.org,0.0,0,7,2015-12-03 17:44:04
6163,TLS 15+,129,2414,"NeutralResponse,ProposeAction,InformationProviding,NeutralResponse,ProposeAction",1850,1850,"
URL from Rich's previous email citing this:
https://drive.google.com/file/d/0B8YgrWYHqacSV2hnZmR3VjJtRUk/view

Please don't brush this argument off in favor of the ""obvious"" answer that encrypted SNI is helpful. The sad truth is that it's a lot of effort with a lot of risk for virtually no gain. I was quite in favor of encrypted SNI before reading it, and I had to concede the point after. If we can come up with a way to do it easily, ok, but it's not an avenue worth spending too much time on.
",<201512021513.49894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-12-02 15:13:49
6164,TLS 15+,129,2503,"Disagreement,NeutralResponse,ProposeAction,NeutralResponse,ContextSetting,InformationProviding",2414,2414,"
I've read these slides. I'm... at a bit of a loss. The entire slide
deck seems so flippant as to be not worth addressing. It just doesn't
even pass the giggle test.

Though upon reading it, I am struck by two core points:

One is that big companies will be pressured by governments.
Ironically, Akamai isn't one of those as they're willingly in bed with
governments around the world. But I guess as the slides say, the
author isn't speaking on behalf of Akamai. That said - good, I want
governments to have to go to a company rather than to the user - the
company may have a legal team, the user may have hidden or otherwise
protected themselves. Hopefully the company is in a position to do
nothing or will take action to protect the user's basic liberties.

The second is a constant security nihilism. Yeah, a lot of stuff is
broken - so lets acknowledge it bit by bit and then fix it all.

I would encourage everyone to read the slides as the conclusion in the
presentation simply do not follow. If I had been in the audience when
they were presented, I would have been at the microphone objecting.
The idea that this convinced anyone is baffling.

It is clear that privacy concerns exist in many many different
protocols and that many protocols need to be fixed. Many people point
at other protocols as a way to punt on the issue for their own
protocol. The cycle continues and the privacy violations continue
without end.
",<CAFggDF3gg-7Gy8JkfDbK4KppwvjbPju6yzVH1aRe=4kJYE65Uw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:38:39
6165,TLS 15+,129,2505,"Disagreement,NeutralResponse,NeutralResponse,ProposeAction,InformationProviding,Social",2414,2414,"
The idea of splitting the world, as the slides do, into three basic
camps (liberal democracy with good traffic analysis, liberal democracy
with bad traffic analysis and horrible dangerous places) is simply not
serious. The idea that our liberal democracies do perfect traffic
analysis and so we should ensure *everyone* including *non-NSA*
attackers can do it for *free* is just bizarre to me. It is incorrect
as a conclusion to do nothing because some people somewhere *may* be
good at traffic analysis. The logic of the slides suggest that raising
the cost from a kid-in-a-cafe to NSA is proof that we shouldn't
bother. Again, the security nihilism monster appears. We should reject
this nihilism and fix the problem.

Encrypted SNI makes sense as it makes traffic analysis harder.
Encrypting DNS queries makes sense too. Composing it with other
systems may or may not make sense. Even when TLS is composed with a
tool to do traffic analysis resistance, the exit node of the
TA-resistance network can still do selective attacks based on SNI. In
that case the DNS is likely to be resolved at a different exit point.
Thus if we want to punt again and say, hey, traffic analysis
resistance is better left to Tor or something else, please consider
that plaintext selectors make Tor's job harder.

These changes make it more expensive and in some cases, it will stop
attackers who would otherwise be able to make an attack happen
undetected. It requires an attacker to spend more money on CPU, memory
and on other resources to do correlation across multiple collection
points.

Kicking the can down the road doesn't even begin to summarize why
leaving SNI unencrypted is incorrect. Metadata is a serious problem
and reducing it whenever possible (eg: we won't fix TCP/IP on the IETF
TLS list), even in liberal democracies, helps to solve the problems we
face from mass surveillance.

All the best,",<CAFggDF3gg-7Gy8JkfDbK4KppwvjbPju6yzVH1aRe=4kJYE65Uw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 03:38:39
6166,TLS 15+,129,2613,"NeutralResponse,NeutralResponse",2503,-1,"There are a lot of inaccuracies in that presentation, so I wouldn't
pin too much on it.",<CABkgnnXjKAazdTFisSW=KpzWLT96TO9AXLvo3rdRv37qOyP3Jw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-12-03 14:49:19
6167,TLS 15+,129,2614,"ExtensionOfPrevious,ExtensionOfPrevious,InformationProviding",2613,-1,"
In any case, before we all get too excited about this, there are some
solutions, I've seen a write-up of one of them, but it was a little
hard to follow first time around.  Some of the things that are
described as impossible aren't that hard to fix.  On the flip site, it
doesn't provide a fully general solution.",<CABkgnnXjKAazdTFisSW=KpzWLT96TO9AXLvo3rdRv37qOyP3Jw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-12-03 14:49:19
6168,TLS 15+,129,2615,"ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction",2614,-1,"
Expect to see something very soon.  Until then, I don't think that an
in-depth on what isn't even at a straw-man level of detail is that
helpful.  We need details before we can say whether the cost-benefit
makes sense.",<CABkgnnXjKAazdTFisSW=KpzWLT96TO9AXLvo3rdRv37qOyP3Jw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-12-03 14:49:19
6169,TLS 15+,129,2652,"NeutralResponse,NeutralResponse",2613,2613,"
I'm not pinning too much on it and I was surprised by the amount it
was suggested would win me over. I actually went in thinking that I'd
be crushed and concede; imagine my surprise!
",<CAFggDF2p4ep241H790Rh5aexYys1jnzuRXx_3SXgADJwypmzNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 04:01:58
6170,TLS 15+,129,2654,"NeutralResponse,NeutralResponse,ProposeAction",2614,2614,"
The question up for debate seems to be if we should bother and I think
that yes, we should bother. I spent some time today thinking about
solutions for encrypting not only SNI but also other headers. It isn't
entirely clear how to solve this problem in a few cases - but
especially in the case of a repeated visit or a site that has an HSTS
entry, I can see a few ways to protect the information.
",<CAFggDF2p4ep241H790Rh5aexYys1jnzuRXx_3SXgADJwypmzNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 04:01:58
6171,TLS 15+,129,2656,"Question,NeutralResponse,Question,InformationProviding,Social",2615,2615,"
Where is the design actually happening? I know a few cryptographers
who are interested in the design process.

All the best,",<CAFggDF2p4ep241H790Rh5aexYys1jnzuRXx_3SXgADJwypmzNw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 04:01:58
6172,TLS 15+,129,2661,"Question,NeutralResponse,NeutralResponse,Question",2652,2652,"
The fact that you viewed it as ""crushed and concede"" implies to me that your mind was already made up, and that no description of trade-offs was going to sway you.  Is that belief unfair to you?",<393ab34a3001483f8c2bd9666d6f80e7@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-12-03 13:22:33
6173,TLS 15+,129,2697,"Answer,NeutralResponse,Agreement,Disagreement,NeutralResponse,InformationProviding,Social",2661,2661,"
No, I said explicitly the opposite: I expected that you would change
my mind because you took the time to think about it, write slides and
present it. I'm late to the party, so I had an open mind and was
shocked that this was what had convinced anyone at all.

I'm sympathetic to the government pressure angle but I do not believe
that because one is afraid, one does better by preemptively
capitulating.

If Akamai wants to leave their users insecure, I look forward to
another CDN offering privacy options. Such choice is missing if that
isn't an option and it isn't on as a strong default.

In any case, I await the specific cryptographic details and some of
the people in my cryptographic research group (non-Tor) are
interested. When it is published, I'll see if it actually helps to
solve the problem at hand. If we can't design a cryptographic scheme
to protect SNI, I'd understand fully why we won't have such a
protection deployed. If we design it and then we're unhappy about DNS,
well, great, one problem down - next up, dnsop works to solve the DNS
query privacy problem. There is already work being done there - so I
think we're on the way.

All the best,",<CAFggDF1zhVSXh_+yf42d56jCzmwt_5qD-fTy6W0V1OTnV3F1-A@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 15:24:56
6174,TLS 15+,129,2737,"NeutralResponse,NeutralResponse,InformationProviding,Agreement,ProposeAction",2414,2414,"
I find it darkly amusing that this argument against the usefulness of
encrypted SNI, supported in substantial part by an argument that ""1st
world eavesdroppers do TA really well"", is being brought up in the
context of a discussion of my proposal to make traffic analysis harder
by encrypting TLS record headers (in combination with other useful
techniques such as padding).

By all means, let's not encrypt SNI because traffic analysis is easy,
and let's not make traffic analysis harder because SNI is unencrypted
anyway! ... or something like that. :/

I completely agree with Jake's arguments against security nihilism.  The
fact that we can't completely and perfectly solve the whole problem all
at once should not prevent us from working on little pieces of the
problem bit by bit and making life incrementally harder for at least
some of the wide diversity of adversaries out there.

B
",<56600B68.9060908@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 10:29:12
6175,TLS 15+,129,2775,"Disagreement,NeutralResponse,Disagreement",1843,1843,"
No you can NOT do this (in TLSv1.2 and earlier), because it is entirely
backwards-incompatible.

Server-side SNI can even be implemented completely outside of the TLS
protocol stack (that is how I implemented it).
",<20151202184839.8E2D11A39B@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-02 19:48:39
6176,TLS 15+,129,2777,"Disagreement,Disagreement",877,877,"
That is a myth.
",<20151202184839.8E2D11A39B@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-02 19:48:39
6177,TLS 15+,129,2779,"NeutralResponse,NeutralResponse",1843,1843,"
TLSv1.3 is looking more and more like a future market failure to me,
worse than IPv6.
",<20151202184839.8E2D11A39B@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-02 19:48:39
6178,TLS 15+,129,2780,Social,,1843,"
-Martin",<20151202184839.8E2D11A39B@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-02 19:48:39
6179,TLS 15+,129,2835,"NeutralResponse,NeutralResponse",2775,2775,"
If I configure a vhost to respond to a sha1(example.com) and have a
way to visit sha1(example.com) in a browser, I think it doesn't even
break the spec. That doesn't really matter - the point was to suggest
that there are many ways to solve this problem. Assuming a shared key,
we can easily take a field and transform it. There are compelling
reasons to do it and there are active attackers who are exploiting the
lack of confidentiality in TLS.
",<CAFggDF3cdjG79cd2uLi0oJo1kOhJOY4Fykt021vuZN+08mb3HA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 01:01:17
6180,TLS 15+,129,2837,"ClarificationElicitation,ClarificationElicitation",2775,2775,"
I'm curious - are you saying that if the value was encrypted... it
would become impossible to implement it outside of the TLS protocol
stack? Or is this just an aside?
",<CAFggDF3cdjG79cd2uLi0oJo1kOhJOY4Fykt021vuZN+08mb3HA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 01:01:17
6181,TLS 15+,129,2839,"ClarificationElicitation,ClarificationElicitation",2777,2777,"
Are you asserting that TLS 1.3 will be less secure or equally secure here?
",<CAFggDF3cdjG79cd2uLi0oJo1kOhJOY4Fykt021vuZN+08mb3HA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 01:01:17
6182,TLS 15+,129,2841,"NeutralResponse,NeutralResponse,Social",2779,2779,"
Without privacy on the internet, I'll see your market and raise you a TCP RST.

All the best,",<CAFggDF3cdjG79cd2uLi0oJo1kOhJOY4Fykt021vuZN+08mb3HA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 01:01:17
6183,TLS 15+,129,2886,"Answer,NeutralResponse,Answer,InformationProviding",2839,2839,"
Even TLSv1.0 is sufficiently secure already, so that there
are plenty of other attack surfaces *MUCH* easier to attack.

http://www.schneier.com/books/practical_cryptography/preface.html

Arguing about whether a key should be 112 bits or 128 bits long is
rather like pounding a huge stake into the ground and hoping the
attacker runs right into it. You can argue whether the stake should
be a mile or a mile-and-a-half high, but the attacker is simply going
to walk around the stake.
",<20151203165344.C639C1A3A0@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-03 17:53:44
6184,TLS 15+,129,2887,"ExtensionOfPrevious,NeutralResponse,Social","2839,2886",2839,"
If you design anything around TLS where the ""secrecy"" of the servername
is important, then you are acting extremely irresponsible.  There are so
many ways and places where the servername WILL be leaked, (URLs, bookmarks,
HTTP-Header-Fields,  HTTP-Referer headers, etc.) that bottom line, encrypting
SNI amounts to crazy and pointless idea.

Using sha1(servername) instead of servername is (a) not confidential
and (b) backwards-incompatible with the existing protocol&usage and
the installed base.  No matter how many hoops you jump, encrypting
SNI will never become anything close to a TOR hidden service.
And for the vast majority of servers, there is going to be such
a small number of virtual services, that distinguishing them will
always be trivial by their traffic patterns.  There is nothing that
TLS could do about app-determined traffic patterns of unrelated
TLS sessions.

You could use innocent servernames or multi-SAN server certs plus *NO* SNI.
and both would provide higher security and be much easier to implement
than encrypting SNI.

-Martin",<20151203165344.C639C1A3A0@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2015-12-03 17:53:44
6185,TLS 15+,129,2974,"NeutralResponse,NeutralResponse",2886,2886,"
I look forward to using that poor saps TLS 1.0 services - where TLS
isn't the weakest link!
",<CAFggDF2oJUa=on18GBow1wfQrRnns_tnSP1SLroOfGnNVTpcyg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 23:46:40
6186,TLS 15+,129,2976,"Question,NeutralResponse,NeutralResponse,ProposeAction",2887,2887,"
Huh - Could you please enumerate all of the places that TLS leaks a
hostname requested by a client? Each one of them is a problem and we
should correct it. TCP/IP and DNS are out of scope, though obviously
related.
",<CAFggDF2oJUa=on18GBow1wfQrRnns_tnSP1SLroOfGnNVTpcyg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 23:46:40
6187,TLS 15+,129,2978,"NeutralResponse,UnderstandingNegative,NeutralResponse,Apologising",2887,2887,"
That was not a serious suggestion. If you think that I seriously
suggested hashing the server name, I'm sorry. Please re-read my email
and understand that I was suggesting that we can change the value of a
field easily to make the attack more expensive. To make it worth
doing, we want a better scheme than a straight hash of a name, of
course.
",<CAFggDF2oJUa=on18GBow1wfQrRnns_tnSP1SLroOfGnNVTpcyg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 23:46:40
6188,TLS 15+,129,2980,"Agreement,NeutralResponse,Agreement,NeutralResponse",2887,2887,"
We probably agree here - there is a case where you want to compose
with Tor. However there is a different issue which is that by leaving
the client requested name in the clear, an attacker, even against a
Tor exit node, can denial of service a specific client with nothing
more than a word list. This is no different from HTTP without TLS for
tearing a connection down; it becomes different with TLS 1.2 and DTLS
(and probably with something like Bryan's super encryption). Sadly,
DTLS doesn't compose with Tor and so, we want a similarly hard to
distinguish TCP protocol that does compose with Tor.

None the less - eventually a long term attacker may be able to learn
things about public websites (eg: which wikipedia page you visited) -
for non public websites, I don't believe that you can make the same
claim. Additionally, the bar for an attack has just been seriously
raised from ngrep to a pretty sophisticated attacker with long term
funding.
",<CAFggDF2oJUa=on18GBow1wfQrRnns_tnSP1SLroOfGnNVTpcyg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 23:46:40
6189,TLS 15+,129,2982,"NeutralResponse,NeutralResponse,Social",2887,2887,"
I look forward to your proposal that removes the need for encrypting
SNI. I think it will be interesting to compare your construction with
the soon to be shown encrypted SNI proposal.

All the best,",<CAFggDF2oJUa=on18GBow1wfQrRnns_tnSP1SLroOfGnNVTpcyg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 23:46:40
6190,TLS 15+,129,3007,InformationProviding,,-1,"Jacob Appelbaum <jacob@appelbaum.net> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B9865A@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-04 03:03:56
6191,TLS 15+,129,3008,"ClarificationElicitation,Disagreement,NeutralResponse,ProposeAction,ClarificationElicitation,ContextSetting,InformationProviding,Social",2976,2976,"
Why are they out of scope?  You can't just ignore a threat if it's
inconvenient, you need to look at the overall picture.  Arguing over plugging
a mousehole in the corner of the barn is pointless when two of the four walls
are missing.  As Martin has pointed out:

There are so many ways and places where the servername WILL be leaked,
(URLs, bookmarks, HTTP-Header-Fields,  HTTP-Referer headers, etc.) that
bottom line, encrypting SNI amounts to crazy and pointless idea.

I'm not sure if I'd call it crazy and pointless, just not worthwhile.  You're
leaking server-name information in a great many other locations and ways, and
encrypted SNIs causes so many problems, that the cost/benefit tradeoff doesn't
make it worthwhile (which, I guess, could be classed as ""pointless"").

Perhaps someone could write an RFC for a play-with-experimental-features TLS
extension, where implementers could encrypt lengths and SNIs and anything else
they want, and then test them out in the real world to see what effect it has.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B9865A@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-04 03:03:56
6192,TLS 15+,129,3090,"Question,Answer,ProposeAction,Answer,ClarificationElicitation,Question,InformationProviding",3008,3008,"
They are out of scope for the TLS working group as far as I understand
the organization of the IETF in terms of mandate. Am I incorrect?
Should we discuss the privacy failures of IPv6 on this list as well?
I'm happy to do so but I think this is out of scope.
",<CAFggDF2ibKE+R9AehAqu1yu+4zpD01+vPY236bGHWFB41BPLrQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 03:50:36
6193,TLS 15+,129,3092,"Answer,NeutralResponse,NeutralResponse",3008,3008,"
That is exactly what I've been saying over the last several days and
really for many years. The collective action failures here are not
because I can't see the overall picture but because there is blame
shifting. If we look at one specific protocol and solve things, we
find that composed with other solutions, we're really working toward
an overall solution.
",<CAFggDF2ibKE+R9AehAqu1yu+4zpD01+vPY236bGHWFB41BPLrQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 03:50:36
6194,TLS 15+,129,3094,"NeutralResponse,NeutralResponse",2887,2887,"
TLS protects the HTTP headers, bookmarks don't travel across the
network and a url needs to be sent by a protocol to be leaked to the
network. The client requested hostname is leaked a single time.
Plugging that leak by encrypting it is not impossible and that someone
might share a URL doesn't mitigate the usefulness of reducing that
specific information leakage in TLS.

The point is not to hide that a server has a name - the point is to
protect a flow within a relevant time frame. This may prevent an
adversary from selecting it for storage (ex: XKeyscore selector on
cs.auckland.ac.nz) or it may prevent an adversary from doing an active
attack from even as lowly as an off-path position having seen just a
single or small subset of packets from a given flow. There are other
reasons as well.

That DNS has problems doesn't mitigate that TLS itself has problems
when it stands alone.
",<CAFggDF2ibKE+R9AehAqu1yu+4zpD01+vPY236bGHWFB41BPLrQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 03:50:36
6195,TLS 15+,129,3096,"NeutralResponse,NeutralResponse",3008,3008,"
As a TLS user - I'm only leaking SNI at Tor exit nodes and there is no
other choice for me. I'm living in the world where DNS and other
channels are not leaking on the same path as my TLS connection. Still,
my TLS connections have a lot of information that is available to a
sniffer on a Tor exit or XKeyscore on the whole internet. Removal of
the SNI field is not an option - encrypting it should be an option, if
not a strong default.
",<CAFggDF2ibKE+R9AehAqu1yu+4zpD01+vPY236bGHWFB41BPLrQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 03:50:36
6196,TLS 15+,129,3098,"NeutralResponse,Disagreement,Social",3008,3008,"
Or they could just call MinimaLT or CurveCP with mandatory Elligator
TLS 1.3 and be done with it.

All the best,",<CAFggDF2ibKE+R9AehAqu1yu+4zpD01+vPY236bGHWFB41BPLrQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 03:50:36
6197,TLS 15+,129,3125,InformationProviding,,-1,"Jacob Appelbaum <jacob@appelbaum.net> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B9B407@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-06 00:01:09
6198,TLS 15+,129,3127,"Answer,NeutralResponse,Answer,InformationProviding",3090,3090,"
They're out of scope in that TLS can't impose behaviour on DNS, but they're
not out of scope when it comes to considering what impact DNS has on TLS.  For
example the whole reason why TLS has certificates is because the TLS (well,
SSL then) folks realised that DNS wasn't secure, and that TLS had to deal with
that issue.  Otherwise, the SSL folks could have just said that DNS issues are
out of scope, and we'll wait for DNSSEC to appear at some point and fix things
(this is speaking from a 1995 time frame).
",<9A043F3CF02CD34C8E74AC1594475C73F4B9B407@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-06 00:01:09
6199,TLS 15+,129,3129,"NeutralResponse,NeutralResponse,Social",3098,3098,"
That would probably be an easier process than the current one, provided you're
ready to commit completely to the Bernstein monoculture.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B9B407@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-06 00:01:09
6200,TLS 15+,129,3176,"Agreement,NeutralResponse,Agreement,NeutralResponse",3127,3127,"
Of course. Thankfully there is work to fix DNS by... using TLS!
",<CAFggDF1ao70H3LhmS0k9P7ed9ATAxq-YQ+x-3jZd-waxehhxew@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-06 01:52:44
6201,TLS 15+,129,3178,"NeutralResponse,NeutralResponse",3127,3127,"
Hopefully someday, we'll have the DNS security problem solved. Until
then, I look forward to the TLS working group to not making name
privacy _harder_ to implement. The great irony of DNS potentially
using TLS for privacy is... oh, so much for that strategy.
",<CAFggDF1ao70H3LhmS0k9P7ed9ATAxq-YQ+x-3jZd-waxehhxew@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-06 01:52:44
6202,TLS 15+,129,3180,"NeutralResponse,NeutralResponse,Social",3129,3129,"
I admit, I'm biased here. I'd rather have a monoculture of security
than polyculture of insecurely designed by commitee.

All the best,",<CAFggDF1ao70H3LhmS0k9P7ed9ATAxq-YQ+x-3jZd-waxehhxew@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-06 01:52:44
6203,TLS 15+,129,3194,"NeutralResponse,NeutralResponse",1843,1843,"
Furthermore, SNIs have name type, so even the server_name extension
itself could be extended. The length field is 16-bit too...
",<20151202190042.GA25439@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-12-02 21:00:42
6204,TLS 15+,129,3195,Social,,1843,"
-Ilari",<20151202190042.GA25439@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-12-02 21:00:42
6205,TLS 15+,129,3217,"NeutralResponse,NeutralResponse",1778,1778,"
There's a WG in the process of being chartered about captive
portals [1], not sure exactly what it'll end up producing, but
that's a place to go if interested in this specific topic.
",<565F1E87.4080903@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-12-02 16:38:31
6206,TLS 15+,129,3243,Social,,-1,"Hi Mike,
",<56600CE2.2060807@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 10:35:30
6207,TLS 15+,129,3245,"Answer,ProposeAction,Answer,Social",1695,-1,"
Please see the other recent E-mails in this discussion thread
specifically addressing how my first proposal extends to DTLS.  My
second proposed approach to header encryption is admittedly more
TCP-specific, and that might be one legitimate reason to prefer the
first one if we care about keeping TLS and DTLS as closely-aligned as
possible.

B
",<56600CE2.2060807@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 10:35:30
6208,TLS 15+,129,3288,InformationProviding,,-1,"Jacob Appelbaum <jacob@appelbaum.net> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B95D5F@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-02 01:24:11
6209,TLS 15+,129,3290,"ClarificationElicitation,NeutralResponse,ContextSetting,ProposeAction,ClarificationElicitation,NeutralResponse,ContextSetting,ProposeAction,Social",875,875,"
Why would XKeyscore have trouble with it?  Standard off-the-shelf routers, not
even specialised USG surveillance gear, does fairly sophisticated flow
tracing, packet reassembly, connection analysis, and so on.  It's built into
the router.  Encrypting the headers is, at best, a minor speedbump to
attackers (while being a major headache for implementers, particularly SSH's
way of doing it), because they can use the native capabilities of the routing
hardware to sidestep the need to decrypt headers.

If people really want to address this then they need to do the following:

1. Define a threat model.  What are we supposed to be defending against?

(Note: The Inside-Out Threat Model, ""this is the defence, anything that it
prevents is what we're defending against"", is not a threat model).

2. List the various measures that can be used to defend against the threat:
Fixed-size packets, padding, quantised packet timing, etc.

3. Decide on which ones are necessary to defend against an actual threat, and
which ones aren't, taking into account cost/benefit tradeoffs (is the
effort/overhead involved worth the gain?).

4. Provide guidance for TLS and SSH developers on how they can implement
these.

Once that's done (and in particular #1 and #2), we have a framework within
which we can decide whether encrypting lengths is worth the annoyance it
creates for implementers.

Without this, the debate over encrypted lengths is, to quote Linus, nothing
more than ""people wanking around with their opinions"" (and yeah, that includes
me).

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B95D5F@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-02 01:24:11
6210,TLS 15+,129,3313,"NeutralResponse,ContextSetting,ProposeAction,Answer,NeutralResponse",3290,3290,"
Fine. I’ll take a stab at it. But different people are concerned with different threats. So I’ll divide this into three layers of concern, because I think they build one on top of the other:

Concern Layer #1: I would like a passive observer to not be able to know the exact size of requests and responses in my stream as that could identify the resource name and content. Obvious example is from HTTPS. At this layer I’m fine about “them” (for whatever “them” I’m concerned about) knowing that I am browsing Wikipedia, but I don’t want them to know which article.

Concern Layer #2: I would like a passive observer to not be able to know how many requests I am making to the server at a given time. At this level I’m concerned that just the number of requests may leak something about what I am looking at. So if I’m looking at one of only 12 Wikipedia pages that have exactly 27 images it severely narrows down the list of what I’m looking for.

Concern Layer #3: I would like a passive observer to not be able to know whether I am sending requests and getting responses at all. Obviously they can know that I have an HTTPS connection with en.wikipedia.org, but they should have no idea whether this connection is idle or downloading tons of content.

I could add a fourth layer where I don’t want the observer to know whether or not I am looking at Wikipedia at all, but that is not something that I believe the TLS working group can do. This is more in-line with what Jacob is doing.
",<068B1D50-CA95-4FB3-BCEB-48C20F76DBF4@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-02 09:05:00
6211,TLS 15+,129,3345,"NeutralResponse,Answer",3290,3290,"
We have repeatedly stated several relevant threat models here; you just don’t seem to be accepting them as threat models for some reason.  One is the passive eavesdropping attacker, who can monitor flows but cannot easily inject traffic; mass monitoring of tapped fibre optic cables are one specific real-world example of that.  Another is the “partly-active” attacker who can inject packets but cannot readily prevent the legitimate packets from arriving; two very real-world examples of this are XKEYSCORE/QUANTUMINSERT and the WiFi internet cafe snooper.  In each of these real-world threat models the “dribble attack” to sniff out record boundaries via full MITM is not an option for the attacker, and hence there is potential benefit to encrypted record headers even without any other anti-traffic-analysis measures.
",<E4CA10C7-BCDB-4CB4-B1C4-24569ED7E636@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 11:03:41
6212,TLS 15+,129,3347,"NeutralResponse,NeutralResponse,Social",3290,3290,"
We have been doing this as well, repeatedly.  And as I’ve stated repeatedly and you have not refuted, having encrypted packet headers allows us to deploy some of those defense measures in multiple places in the network (e.g., TCP stack and/or middle boxes) rather than just one (TLS implementation).

B",<E4CA10C7-BCDB-4CB4-B1C4-24569ED7E636@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 11:03:41
6213,TLS 15+,129,3384,InformationProviding,,-1,"Bryan Ford <brynosaurus@gmail.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B97279@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-02 23:36:00
6214,TLS 15+,129,3386,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",3345,3345,"
That's because they're not actual threat models, just handwringing about
vague, undefined bogeymen.  Yoav Nir has made a good start, although it's
more a wish list than a threat model, or at least a list of desirable
properties for the system to have.  In crypto terms, it's like stating
""I want my cryptosystem to be IND-CPA"".  The threat there is an adversary
being able to encrypt various plaintext messages and being able to
distinguish them based on the ciphertext.  You can pretty clearly say
that against this threat (stage #1 of my list), you need an IND-CPA
ciphersystem (stage #2).  From there you can decide whether it's worth
doing this, stage #3 (OK, any cryptosystem worth its salt had better be
IND-CPA, so that's a tautology).

OTOH an IND-CPA cryptosystem isn't necessarily secure against an
adative chosen ciphertext attack, a different type of threat, so you
need to up the defence to an IND-CCA2 secure system.

Give me an actual threat model of the type(s) illustrated above, write
down the exact capabilities of the attacker so we know what to
defend against, and then we can disagree on it.
",<9A043F3CF02CD34C8E74AC1594475C73F4B97279@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-02 23:36:00
6215,TLS 15+,129,3387,"Disagreement,NeutralResponse,Disagreement,Social",3347,3347,"
No, you've just been saying ""here's my pet idea, TLS should adopt it""
over and over again.  I'm happy to keep saying ""it doesn't provide
the protection you seem to think it does, it restricts TLS to only
using AEAD stream ciphers, and it causes serious headaches for
implementations"" as often as you keep repeating ""here's my pet idea,
we should use it"".

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B97279@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-12-02 23:36:00
6216,TLS 15+,129,3478,"Answer,Answer",3290,3290,"
My point was that we're hearing a lot of concern trolling for vendors
and the only ""vendor"" that has been explicitly named is XKeyscore: a
""vendor"" that is without a doubt one that we want to protect against.
",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6217,TLS 15+,129,3480,"Agreement,NeutralResponse,Agreement,NeutralResponse",3290,3290,"
Absolutely and this proposal will do nothing to change that for on
path TLS 1.3 with TCP and probably for TLS 1.3 DTLS.
",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6218,TLS 15+,129,3482,"NeutralResponse,NeutralResponse",3290,3290,"
If they are only a partial observer, I think Bryan's suggestion
changes the game for TLS and DTLS to leak less information. If they
are a full on path observer, they will have the full leaks of
information made possible from TCP. Thus when composed with an
anonymizing service, we'll find that these changes contribute to a
full solution.
",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6219,TLS 15+,129,3484,"NeutralResponse,Agreement,ProposeAction",3290,3290,"
A global passive adversary with a partial view is already harmed by
the changes that have been proposed. A global active adversary with a
partial view would be stymied too.

Bryan has already said it in the thread and replied but I'll agree
with him: we've done it and you're seemingly ignoring it. Furthermore
some people are concerned about surveillance vendors that are not
*opt-in* by the user - rather than treating that concern as abstract,
I'd like to see what specific vendors we should help to weaken the
security properties of TLS 1.3.
",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6220,TLS 15+,129,3486,"NeutralResponse,StateDecision,NeutralResponse,ContextSetting",3290,3290,"
I think this is better left in the part of the thread where Bryan
responded - so I'll follow up there next.
",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6221,TLS 15+,129,3488,"NeutralResponse,NeutralResponse,Social",3290,3127,"
It is not an opinion that TLS is a metadata leaking protocol and it is
seems that Bryan has found a way to reduce that leakage. With DTLS and
UDP - a surveillance vendor will have very little metadata
comparatively once Bryan's solution is part of the spec.

All the best,",<CAFggDF2ZqXBN__gbY-3m9fDOX4s8Z=R-+HPz06h-c1QDYkTqbQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 12:38:54
6222,TLS 15+,129,3516,"NeutralResponse,Disagreement,ClarificationElicitation,InformationProviding",100,100,"
I believe your proposal is a nice example of putting the cart before the
horse. Before proposing something it should be clear what do you want to
protect from, what is the threat? Here you imply that the revealing the length
is somehow a weakness. However, TLS isn't supposed to hide lengths and never
did [0]. So will hiding the length _field_ of such a protocol, will really
protect against attacks taking advantage of packet lengths? If you see
the previous work of analyzing TLS packet lengths they don't even need to
read that length field, they just use the packet length on the wire.
There is already a solution for protecting packet lengths, and that's
called padding [1].
",<2006084219.21103856.1448827238217.JavaMail.zimbra@redhat.com>,nmav@redhat.com,0.0,0,4,2015-11-29 15:00:38
6223,TLS 15+,129,3519,"ClarificationElicitation,ContextSetting,UnderstandingNegative,ClarificationElicitation",3516,-1,"Maybe I'm missing something, but hasn't this issue already been sufficiently dealt with via padding?",<201511291647.16541.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-11-29 16:47:16
6224,TLS 15+,129,3527,"ExtensionOfPrevious,InformationProviding",3519,-1,"
https://tools.ietf.org/html/draft-ietf-tls-tls13-10#section-5.2.2",<201511291647.16541.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-11-29 16:47:16
6225,TLS 15+,129,3528,"ExtensionOfPrevious,Question,ProposeAction,ExtensionOfPrevious,Question","3519,3527",-1,"
The record type and version fields are now frozen, and the record length field is not indicative of the real length if padding is used. The only way I could see encrypting the length field as helpful would be to further obfuscate it from something that can see the record layer but not the transport layer and doesn't know the full record size, though the padding already obfuscates it somewhat. Is this really worth jumping through hoops for?",<201511291647.16541.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-11-29 16:47:16
6226,TLS 15+,129,3545,InformationProviding,,-1,"Nikos Mavrogiannopoulos <nmav@redhat.com> writes:
",<9A043F3CF02CD34C8E74AC1594475C73F4B92EA4@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 01:40:07
6227,TLS 15+,129,3547,"Agreement,NeutralResponse,Agreement,ProposeAction,Social",3516,3516,"
Exactly.  If you want to thwart traffic analysis, you need to do something
like what's done by designs like Aqua (""Towards Efficient Traffic-analysis
Resistant Anonymity Networks""), or ideas from any of the other anti-traffic-
analysis work that's emerged in the past decade or two.  You get traffic
analysis resistance by, for example, breaking data into fixed-length
packets, using cover traffic, and messing with packet timings, not by
encrypting TLS headers.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73F4B92EA4@uxcn10-5.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-11-30 01:40:07
6228,TLS 15+,129,3549,"NeutralResponse,NeutralResponse","3516,3547",-1,This brings up an interesting point; having a record length that corresponds to the TCP segment size can help hardware implementations such that they don't need to deal with scatter/gather; i.e. one TCP segment corresponds to a single TLS record. This goes along with 8 (or 4) byte record lengths for hardware implementations.,<A674865B-5678-4783-825F-FA0D07953B21@akamai.com>,tshort@akamai.com,0.0,0,12,2015-11-30 01:54:26
6229,TLS 15+,129,3578,Social,,-1,"
-Todd Short
// Sent from my iPhone
// ""One if by land, two if by sea, three if by the Internet.""",<A674865B-5678-4783-825F-FA0D07953B21@akamai.com>,tshort@akamai.com,0.0,0,12,2015-11-30 01:54:26
6230,TLS 15+,129,3591,"Disagreement,NeutralResponse,Disagreement,InformationProviding,Social",3549,3549,"
This is wildly unsafe to assume or depend on for all sorts of reasons;
TCP streams regularly get merged or re-segmented in the network in a
variety of unpredictable ways (e.g., by middleboxes).  See my earlier
E-mail discussing that issue extensively.

B",<565C1EB7.5030709@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 11:02:31
6231,TLS 15+,129,3686,"NeutralResponse,ContextSetting,NeutralResponse",3547,3547,"
I'm well aware of Aqua and ""the other anti-traffic-analysis work that's
emerged in the past decade or two"": in fact I led one of the major
recent systematic projects in that space.  See for example:

http://dedis.cs.yale.edu/dissent/
http://cacm.acm.org/magazines/2015/10/192387-seeking-anonymity-in-an-internet-panopticon/fulltext
",<565C1DD8.20305@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 10:58:48
6232,TLS 15+,129,3688,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",3547,3547,"
Packet padding and header encryption are both important, complementary
security measures: you get security benefits from each that you don't
get from the other.  Yes, you need padding to obtain systematic
protection from traffic analysis - when for whatever reason not all
implementations are always padding to the exact same standardized record
length, header encryption makes padded streams less trivially
distinguishable from unpadded streams, and makes streams with different
record sizes less trivially distinguishable from each other.

Padding-based transmission formats such as Aqua and Tor tend to specify
a single fixed packet size for *all* traffic using that protocol.  For
example, the Tor protocol always uses 256-byte cells for everything.
This is for obvious indistinguishability reasons: e.g., if some versions
of Tor padded to 256 bytes while other versions padded to 512 bytes,
then it would be trivial for an adversary to distinguish the two.  And
if the 512-byte version of Tor were fairly uncommon (either because it's
""too new"" or ""too old"" or specific to a rare platform or whatever), then
the Tor streams using 512-byte cells would stick out obviously from
anyone else.

Furthermore, popular and well-designed as it is, Tor and similar
protocols have the well-known problem that it's pretty trivial for a
traffic analysis attacker to distinguish a Tor stream from any other
non-Tor stream. The severity of this weakness was put in sharp
perspective by the Harvard bomb hoax incident
(http://edition.cnn.com/2013/12/18/justice/massachusetts-harvard-hoax/).
And it's not in any way because Tor was poorly-designed: on the
contrary, the problem is Tor sticks out because it's a well-designed
traffic-analysis-resistant protocol sharply silhouetted against a
backdrop of traffic that makes no attempt at traffic analysis
protection.  One thing that would greatly help Tor and all similar,
padded protocols is if they could ""blend in"" even just a little bit
better with the vast bulk of ordinary TLS-encrypted Web traffic, and
that's one of the big opportunities we're talking about here.  But to
make that happen, we would need to either (a) specify that *all* TLS 1.3
implementations use the same standardized record length like Tor does,
or (b) if that's not practical, do whatever we can to make flows padded
to a particular size less obviously distinguishable from unpadded flows
or flows padded to a different size.

If you think it is practical for the TLS 1.3 standard to specify a
single, fixed record size that all implementations of TLS 1.3 must use
(i.e., explicitly freeze not only the version field but the length
field), then that would be great for traffic analysis protection and on
that basis I would support that proposal.  But that frankly seems to me
likely a bit too much to ask given the diversity of TLS implementations
and use-cases.  Tell me if you believe otherwise.

So on the assumption that TLS 1.3 might not be ready to jump ""whole-hog""
into Aqua/Tor-style transmission protocols that standardize a single
constant record size, I believe that header encryption provides at least
a useful, weak but significant security improvement at negligible cost.
Sure, active attackers can still use ""dribble attacks"" (as discussed
recently on the SSH mailing list) to sniff out the record boundaries,
but they have to be active on-path and have to delay traffic, which
risks getting noticed.  Many attackers in practice are passive (don't
have the option or just don't want to invest the resources for full
MITM), and/or don't want to risk getting noticed by fiddling with the
traffic in readily detectable ways.
",<565C1DD8.20305@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-11-30 10:58:48
6233,TLS 15+,129,3777,"NeutralResponse,NeutralResponse,ProposeAction,NeutralResponse",3688,706,"
the header contains only one piece of information, and it is public
already - the amount of data transmitted*

If you want to hide how much data was transmitted, you need to establish
a tunnel that transmits data constantly, at the exact same rate for the
whole duration of connection.

that means that you need to know a). what bandwidth the client has, b).
what bandwidth the server can spare and c). how much data the user wants
to get or send to the server (I really don't want to transmit 1GiB of
data over a 100KiB/s stream if I have a 100Mbps link...).

this goes well past the TLS WG charter, if only because it requires very
close cooperation with the application layer

so while the padding mechanism should be there, we really can't describe
how it needs to be used, as it can't be made universal nor is it
necessary for all use cases

* - sure, the record layer boundaries can tell something about the data
being transmitted, but so can the presence of data transmission taking
place in the first place (think of a station sending reports only when
it detects something while keeping connection open the whole time)
",<2564045.EyFMgGcPZE@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-11-30 15:20:36
6234,TLS 15+,129,3779,"NeutralResponse,Disagreement",3688,3688,"
the initial message in handshake in TLS MUST stay the same thus it is
impossible to make it look like Tor. Not to thwart the Pervasive
Monitoring threat of TLA agencies.
",<2564045.EyFMgGcPZE@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-11-30 15:20:36
6235,TLS 15+,129,3781,"NeutralResponse,Disagreement",3688,3688,"
That will just round up to a multiple of 256 bytes the data sizes
transmitted. Hardly an improvement over the current 16 byte blocks.
",<2564045.EyFMgGcPZE@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-11-30 15:20:36
6236,TLS 15+,129,3889,"NeutralResponse,NeutralResponse",3777,3777,"
I'm pretty sure TLS has a lot more data...
",<CAFggDF0yyMP3ErgHjNKbF1Nu3CUutCXaay+e0vEMOiDNNbKSLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 00:14:14
6237,TLS 15+,129,3893,"NeutralResponse,ProposeAction,ProposeAction",3777,3777,"
I think it should be described how it needs to be used...
",<CAFggDF0yyMP3ErgHjNKbF1Nu3CUutCXaay+e0vEMOiDNNbKSLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 00:14:14
6238,TLS 15+,129,3895,"NeutralResponse,NeutralResponse",3777,3777,"
Yes, they tell something and that something is better removed.
",<CAFggDF0yyMP3ErgHjNKbF1Nu3CUutCXaay+e0vEMOiDNNbKSLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 00:14:14
6239,TLS 15+,129,3897,"NeutralResponse,Disagreement,ContextSetting,NeutralResponse",3779,3779,"
That Tor claim is strange and seemingly false in any case. Also, I've
said it before quoting the RFC but I'll say it again: Pervasive
Monitoring is an attack.
",<CAFggDF0yyMP3ErgHjNKbF1Nu3CUutCXaay+e0vEMOiDNNbKSLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 00:14:14
6240,TLS 15+,129,3899,"Disagreement,NeutralResponse,Social",3781,3781,"
Closer to 512 bytes is better.

All the best,",<CAFggDF0yyMP3ErgHjNKbF1Nu3CUutCXaay+e0vEMOiDNNbKSLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-01 00:14:14
6241,TLS 15+,129,4037,"NeutralResponse,Disagreement,InformationProviding",3889,3889,"
in TLS v1.3 no, it doesn't. All encrypted packets must have the
plaintext record type set to Application Data[1], same for version -
it's frozen now at 3.1 (TLS1.0)[2], both are used just as a magic value.
",<8237123.IbIWt7fMrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-01 12:02:07
6242,TLS 15+,129,4039,"NeutralResponse,NeutralResponse,ProposeAction",3893,3893,"
Yes, I misspoke. What I meant is that we can't mandate its use as it is
an application layer issue. We definitely should describe how it needs
to be used on TLS level.
",<8237123.IbIWt7fMrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-01 12:02:07
6243,TLS 15+,129,4041,"NeutralResponse,NeutralResponse,ProposeAction",3895,3895,"
then we need Best Current Practice for applications describing to them
how TLS needs to be used, e.g. make sure that they are doing writes as
big as possible, checking if timing of responses doesn't leak much
information, etc. Forcing TLS implementation to combine writes will
easily cause serious problems with interactivity of sessions...
",<8237123.IbIWt7fMrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-01 12:02:07
6244,TLS 15+,129,4043,"NeutralResponse,UnderstandingNegative,NeutralResponse",3897,3897,"
Not claiming it isn't. But some things (like compression) are best done
at application layer, not TLS layer.
",<8237123.IbIWt7fMrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-01 12:02:07
6245,TLS 15+,129,4045,"NeutralResponse,Disagreement,InformationProviding",3899,3899,"
Either hardly helps if you're not transferring packets with null data to
really hide the amount of data transferred.

1 - https://tools.ietf.org/html/draft-ietf-tls-tls13-10#section-5.2.2
opaque_type
The outer opaque_type field of a TLSCiphertext record is always
set to the value 23 (application_data) for outward compatibility
with middleboxes used to parsing previous versions of TLS.  The
actual content type of the record is found in fragment.type after
decryption.
2 - https://tools.ietf.org/html/draft-ietf-tls-tls13-10#section-5.2.2
record_version
The record_version field is identical to
TLSPlaintext.record_version and is always { 3, 1 }.  Note that the
handshake protocol including the ClientHello and ServerHello
messages authenticates the protocol version, so this value is
redundant.
",<8237123.IbIWt7fMrM@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-12-01 12:02:07
6246,TLS 15+,129,4070,Social,,-1,"Hi,
",<565D9D54.1050100@azet.org>,azet@azet.org,0.0,0,7,2015-12-01 14:15:00
6247,TLS 15+,129,4072,"NeutralResponse,ContextSetting,NeutralResponse,ProposeAction",4041,4041,"
FYI: similar IETF documents like that exists for TLS (up to 1.2)
already. Might make sense to update them or have similar ones when time
comes. Though spreading everything out over a lot of documents makes it
harder for implementers to find all the information they might be
looking for, IMO. Actually, as far as I understand the whole objective
of UTA-WG is putting out documents like that (Utilizing TLS in
Applications).

https://tools.ietf.org/html/rfc7457
https://tools.ietf.org/html/rfc7525
",<565D9D54.1050100@azet.org>,azet@azet.org,0.0,0,7,2015-12-01 14:15:00
6248,TLS 15+,129,4102,"Disagreement,NeutralResponse,Disagreement,InformationProviding",4045,4045,"
I think this is not as black and white as you suggest.

It is possible to totally hide the actual data stream by sending a constant-rate stream of constant-size data records regardless of the availability of actual data. This is a perfect counter-measure to traffic analysis but it has a huge cost in bandwidth. Endpoints who do that might well be considered to be DoS-ing the network.

There are less drastic ways. You could add small variations to the timing and sizes of records, adding a little padding, splitting and combining the application writes, perhaps with the addition of the occasional burst of fake traffic. This can have a relatively small overhead and obscure the real sizes and number of requests. An attacker will still have an approximation of the amount of real traffic is actually passed, but would not be able to guess which Wikipedia article you are viewing or what part of the world you are looking at with your favorite maps website. This is not as perfect as the full traffic flow confidentiality above, but it would be more palatable to network administrators and to people who pay for Internet access by the megabyte.

I don’t think this is the same as encryption where you either have perfect security or you have nothing at all. There can be incremental gains that are worth having at significantly lower cost than the perfect TFC.
",<63861B5E-FF23-4A8E-A755-D4729FB1FCCB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-12-01 16:22:23
6249,TLS 15+,129,4164,"NeutralResponse,NeutralResponse,ProposeAction",4102,1013,"
While I support anything increasing privacy, I think a traffic flow
confidentiality mechanism should be optional to use (like in ESP RFC4303),
and not mandatory to use. The are still many use cases where where
bandwidth is not abundant, e.g. many wireless networks such as 2G, 3G,
802.15.4. Padding and dummy packets may significantly increase the number
of bytes. We should not end up in scenario where D(TLS) 1.3 is not used in
some scenarios because of an increase in overhead.
",<D2836F79.41BA4%john.mattsson@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2015-12-01 14:53:16
6250,TLS 15+,129,4166,"Question,Question","100,110",-1,1) What would be the implications of this for DTLS? (Knowing that one difference between TLS and DTLS is the record header),<FB2973EF-F16C-404A-980D-CA0042EC4AEB@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-11-30 19:02:05
6251,TLS 15+,129,4276,"Question,ContextSetting,Question",110,-1,"
2) In some implementations the record framing/parsing and encryption/decryption are down at different layers. Would this proposal make this type of implementation impossible?",<FB2973EF-F16C-404A-980D-CA0042EC4AEB@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-11-30 19:02:05
6252,TLS 15+,129,4277,Social,,-1,"
-- Fabrice",<FB2973EF-F16C-404A-980D-CA0042EC4AEB@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-11-30 19:02:05
6253,TLS 15+,129,4354,"Answer,Answer",4166,4166,"
Good question.  Fortunately my proposal should be fairly easy to adapt
to DTLS, with one small trick.

The main issue is that DTLS packets need to contain explicitly
transmitted sequence numbers rather than implicit sequence numbers,
because packets can be received out of the order and the receiver needs
to know which sequence number (and hence which nonce) to use to try to
decrypt and integrity-check.  But if we encrypt the full DTLS header
including sequence number, how does the receiver decrypt it without
knowing the correct nonce to use to decrypt it?  An apparent
chicken-and-egg problem.

Fortunately the solution is fairly simple: the receiver simply
pre-computes and keeps in a small hash table the encrypted sequence
numbers of all packets with sequence numbers between H-W and H+W, where
H is the highest sequence number correctly received so far (the horizon)
and W is the anti-replay window size as specified in 4.1.2.5 of RFC
4347, which typically should be 32 or 64 according to the RFC.  The
receiver can precompute all these encryptions because in my proposal TLS
headers are encrypted with a stream cipher (or the AEAD operating as a
stream cipher), so it's just a matter of producing the correct
cipherstream bytes and XORing them with the uint48 sequence number.

Whenever the receiver gets a datagram, it looks up the encrypted
sequence number in the hash table, drops it on the floor if it's not
present, and if it's present the receiver gets the decrypted sequence
number from the hash table and uses that in the AEAD decryption and
integrity-check.  In the low-probability event of a hash-table collision
(i.e., two uint48 sequence numbers encrypting to the same 48-bit
ciphertext in a single 129-datagram window), the receiver can
trial-decrypt with both (or all) sequence numbers in that colliding hash
table entry.  Or the receiver can keep it even simpler and just drop all
but one colliding entry, introducing a pretty low probability of
introducing occasional ""false packet drops.""

The hash table is pretty trivial to maintain efficiently as well: e.g.,
whenever the horizon H moves forward by delta D, remove the first D
entries from the current window and precompute another D encrypted
sequence numbers (where D will most often be 1).  In the simple design
that doesn't bother dealing with hash table collisions (e.g., that
allows each hash table entry to contain only one value), perhaps don't
even bother clearing/removing old entries; just gradually overwrite them
with new ones as H moves forward.
",<565DBC63.5090908@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 16:27:31
6254,TLS 15+,129,4355,"Answer,Answer",4276,4276,"
Not that I'm aware of, but I might need more information about the
specific layering approaches you're thinking of and how ""strongly
enforced"" that layering might be.  But in the version of my proposal
that operates the ""normal"" AEAD as a stream cipher for header
encryption/decryption purposes, it doesn't seem like any change would be
needed to the standard AEAD encryption/decryption interface.  It should
even be fine if the AEAD was implemented as a separate hardware module
that takes the standard AEAD interface inputs and produces the standard
AEAD outputs; as long as it supports the standard AEAD API it should be
perfectly usable in the design I proposed.

The one potential issue I can think of if a particular, restricted API
forces the caller to commit at key-setup time to either ""AEAD encryption
mode"" or ""AEAD decryption mode"", and makes it difficult or impossible to
switch back and forth.  In that case in my proposal as it stands the
receiver TLS implementation might need to set up and maintain two
hardware contexts, one for AEAD decryption (for the payloads), the other
for AEAD encryption (for stream cipher header decryption), both using
the symmetric key.  This still doesn't seem all that problematic to me,
though, and I don't even know of any particular APIs offhand that
present this particular issue.
",<565DBC63.5090908@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 16:27:31
6255,TLS 15+,129,4460,"ContextSetting,ProposeAction,InformationProviding",,-1,"Some of the parallel discussion on the SSH list - especially comments by
Simon Tatham and Niels Möller - made me think of an alternative design
that would not only hide TLS headers but also ensure that they are
integrity-checked by the receiver *before* the receiver attempts to
interpret the record header in any way.  This alternative approach
already feels to me like an improvement over my last one, and perhaps
even those who are skeptical of the need to encrypt TLS headers might
appreciate the desirability of closing vulnerabilities to
length-fiddling attacks: e.g., where an attacker sets the high bit of
the length field in the last TLS record so that the receiver will likely
hang on a long read before detecting the change.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6256,TLS 15+,129,4461,"ContextSetting,ContextSetting",,-1,"
Proposal:",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6257,TLS 15+,129,4462,"ContextSetting,ContextSetting",,-1,"
The basic idea is in some respects even simpler than the last one:",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6258,TLS 15+,129,4463,"ProposeAction,ExtensionOfPrevious,ProposeAction",4462,-1,"
1. We move the TLS header from the ""additional data"" field to the start
of the ""plaintext"" field.  That is, the sender encrypts the header along
with the payload, and the receiver decrypts and integrity-checks the
header along with the payload, using the standard AEAD interface.  The
""additional data"" field now contains *only* the sequence number, which
both sender and receiver track and compute implicitly.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6259,TLS 15+,129,4464,"ProposeAction,ProposeAction",4462,-1,"
2. The 2-byte length field in each record's header no longer indicates
the length of the *current* record but instead indicates the length of
the *next* record.  The length of the first record might be defined in a
new field we add to the handshake/key-exchange protocol, or it might
simply be set to some well-known standard first record size.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6260,TLS 15+,129,4465,"InformationProviding,ExtensionOfPrevious,InformationProviding",4462,-1,"
That's basically it.  The key advantage is that this way the receiver
always ""knows"" the correct size of each record before having to read or
interpret any part of it in any way.  In fact, because the record is
fully encrypted, the receiver implementation is basically forced to use
the AEAD to decrypt and integrity-check the record before doing anything
at all with it, which closes down not only the well-known
length-fiddling attack that has dogged SSH, but a whole class of
possible potential implementation bugs regarding the (delicate) handling
of cleartext TLS headers before they've been integrity-checked.
Basically, this ensures that if the receiver have any bugs in the
handling of the TLS header, they can be exploited only by its
communication partner, and not by an attacker in the middle of the path.
To me this seems like a useful robustness benefit completely
independent of the (also desirable) benefits with respect to traffic
analysis.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6261,TLS 15+,129,4466,"ContextSetting,ContextSetting",,-1,"
Choosing next-record lengths:",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6262,TLS 15+,129,4467,"ContextSetting,ProposeAction,InformationProviding,ContextSetting,ProposeAction",,-1,"
Of course this approach presents the minor challenge that the sender
must always ""commit"" to the length of the next record before sending the
current one.  But this challenge is pretty easy to deal with.  The
easiest way to handle it, of course, is if the sender simply pads all
packets to the same record length - a solution I would generally be
quite happy with due to its complementary traffic analysis resistance
benefits, and I would even favor explicitly encouraging that solution in
the TLS RFC.  I would love it if the next TLS RFC ended up containing a
clause of the form:",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6263,TLS 15+,129,4468,"ExtensionOfPrevious,ExtensionOfPrevious",4467,-1,"
The TLS sender SHOULD always transmit TLS records of
length exactly X, unless this is deemed impractical
due to overriding performance or bandwidth-efficiency
considerations.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6264,TLS 15+,129,4469,"ExtensionOfPrevious,ExtensionOfPrevious",4468,-1,"
...where ""X"" is some reasonable value we discuss and decide on.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6265,TLS 15+,129,4470,"ExtensionOfPrevious,InformationProviding",4469,-1,"
But my (new) proposal does not require all TLS implementations to
maintain a fixed record size.  If the sender implementation wants to use
variable-size records, it can still process batches of records written
together normally up until the last record in the batch.  But when
processing the last record in a write - or in general the last record
before ""going idle"" where it does not yet have a next record to send -
the sender simply ""picks something.""  That something might for example
be a minimum record size, meaning the next record will be big enough to
hold a ""next record length"" indicating a useful length, but will
otherwise be basically a no-op record, so we'll pay the cost of an extra
small record and AEAD encryption/decryption each time transmission
resumes after being idle.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6266,TLS 15+,129,4471,"ExtensionOfPrevious,ExtensionOfPrevious",4470,-1,"
Alternatively the sender of variable-length records might pick a
""typical record size"" as the next-record-size to transmit in the last
record in a burst; that way once transmission resumes the next record
can probably carry useful data, but might need padding if its committed
size is larger than the amount of data to be transmitted.  The
(important) existence of the padding mechanism already added in TLS 1.3
makes this alternative possible.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6267,TLS 15+,129,4472,"ContextSetting,ContextSetting",,-1,"
DTLS:",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6268,TLS 15+,129,4473,"ContextSetting,ProposeAction,InformationProviding",,-1,"
Now there's still the important question of whether this (new) proposal
could be made to work in the context of DTLS.  For the DTLS case, my
current thinking is that some elements of my earlier proposal is
probably more suitable: namely using a stream cipher (or AEAD used as a
stream cipher) to encrypt and recognize the explicitly-transmitted
sequence numbers that DTLS needs.  This could operate basically the same
as I described in my earlier E-mail on this topic.  Note that the length
field is no longer a problem in DTLS as it is in TLS, because the
receiver already gets the length of the datagram from UDP.",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6269,TLS 15+,129,4474,"Question,ProposeAction,Question,ExtensionOfPrevious,ProposeAction",4461,-1,"
Comments/discussion?  Is the above more (or less) palatable than my
previous proposal?",<565DC935.2040607@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 17:22:13
6270,TLS 15+,129,4499,Social,,-1,"Dear Bryan,
",<CADqLbz+HqnaFKbi4bOVRqSSmOWDhi2hQDaVCxaNgQ+O1XjkqFA@mail.gmail.com>,beldmit@gmail.com,0.0,0,25,2015-12-01 23:49:13
6271,TLS 15+,129,4500,ContextSetting,,-1,"
DTLS:",<CADqLbz+HqnaFKbi4bOVRqSSmOWDhi2hQDaVCxaNgQ+O1XjkqFA@mail.gmail.com>,beldmit@gmail.com,0.0,0,25,2015-12-01 23:49:13
6272,TLS 15+,129,4502,"ClarificationElicitation,ClarificationElicitation",4473,4473,"Do I understand correctly that your propose makes difficult to derive the
key from the original value depending on the sequence number?
",<CADqLbz+HqnaFKbi4bOVRqSSmOWDhi2hQDaVCxaNgQ+O1XjkqFA@mail.gmail.com>,beldmit@gmail.com,0.0,0,25,2015-12-01 23:49:13
6273,TLS 15+,129,4535,Social,,-1,"Hi Dmitry,
",<565E1517.3060209@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 22:45:59
6274,TLS 15+,129,4537,"ClarificationElicitation,Answer,ClarificationElicitation,UnderstandingNegative,Question,Answer",4502,4502,"
I'm not sure I understand your question; can you clarify?  What is the
""original value"" you are worried about the key being derivable from?
Certainly if the cipher (stream cipher or AEAD) is working correctly, it
should make it cryptographically infeasible for an attacker to derive
the shared secret key from anything the protocol transmits.
",<565E1517.3060209@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-01 22:45:59
6275,TLS 15+,129,4582,Social,,-1,"Dear Bryan,
",<CADqLbzJeKWVdcaA5U0vf19X4Wj3DweeJ+B0dRebsnYVy8L8=iQ@mail.gmail.com>,beldmit@gmail.com,0.0,0,25,2015-12-02 11:42:59
6276,TLS 15+,129,4584,"Answer,Answer",4537,4537,"
I mean something like http://tools.ietf.org/html/rfc4357#section-7
We have the keys calculated during the handshake and want to modify it for
each record.
",<CADqLbzJeKWVdcaA5U0vf19X4Wj3DweeJ+B0dRebsnYVy8L8=iQ@mail.gmail.com>,beldmit@gmail.com,0.0,0,25,2015-12-02 11:42:59
6277,TLS 15+,129,4625,"ClarificationElicitation,NeutralResponse,NeutralResponse,UnderstandingNegative,ClarificationElicitation","4502,4584",4584,"
Hmmm - the RFC you point to is about the GOST cipher, and section 7 seems to be about “secret key diversification”, but I know nothing about GOST other than that it’s a cipher and it’s not obvious to me what exactly “secret key diversification” means here or what exactly it has to do with TLS (which works with many different ciphers).  I guess I still need a more detailed clarification of your question if I’m going to be able to try to answer it.

B
",<9BDDC23D-1039-4C75-BF32-57330317BCAB@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 10:11:19
6278,TLS 15+,129,4640,"NeutralResponse,NeutralResponse",4464,4464,"
Ensuring that you know the length of the *next* record is difficult
and could dramatically degrade latency, or adding extra bogus padding
or extra bogus records.  For instance, I can always send in bursts of
two packets, a one octet packet that promises the remainder of the
burst and one that promises a single octet packet.  At that point, I
get to do what I've always done and you have gained little other than
an increase in packet size of around 19 octets (best case).",<CABkgnnUoyVPC5QVc=ErzAm6DR8usjBw5scc==o4=-XaBoK5AWQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-12-01 21:02:34
6279,TLS 15+,129,4660,"NeutralResponse,NeutralResponse,Social",4640,4640,"
We're missing an opportunity to implement ATM again.  The magic
cell size is 53 bytes, 5 bytes of header and 48 bytes of payload.
With the cell length always 53 bytes, there's no longer any need
to send or encrypt that length. :-)

Viktor.",<20151202053136.GU18315@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-12-02 05:31:36
6280,TLS 15+,129,4680,"NeutralResponse,ProposeAction,NeutralResponse,Social",4640,4640,"
That type of inefficiency is extremely easy to avoid; please read the rest of my proposal where I discussed exactly that at length.  Yes, a particularly stupid implementation could send everything in bursts of two packets, but it’s ridiculously easy for a slightly smarter implementation to avoid doing that.  And what you’ve gained is complete encryption and integrity-checking of the whole TLS record before any part is interpreted, which seems like a nontrivial security improvement.

B",<9BFA68AB-9677-4BE7-8F5E-D1A66EF95BA5@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 10:07:33
6281,TLS 15+,129,4734,"NeutralResponse,Question,UnderstandingNegative,InformationProviding,Agreement,Question,Social",4680,4680,"
It's not really clear to me what the anti-traffic-analysis benefit of your
proposal
is over and above just padding everything to a fixed size. That's certainly
far
easier for the implementation to do, especially in typical stacks where the
application just calls SSL_Write (or whatever) and so there's no obvious
API point to provide the ""next length"", so as a practical matter the stack
will very often if not always be in ""last block"" mode.

The primary security improvement of your proposal seems to be that an
active attacker can't generate a packet header that will put the TLS
implementation in a deadlock state where it's waiting for more data that
will never come. This seems of modest value in TLS [0] given that the
attacker
can cause the connection to be torn down by modifying any packet.
I agree, that this is not exactly the same as leaving the connection
deadlocked
but it still effectively breaks the connection. In addition, I'm not an
expert on TCP internals, but can't you also cause a similar deadlock by
removing a TCP segment sent to the receiver and then ACKing it to the
sender so that there is a gap in the TCP stream?

-Ekr

[0] This issue doesn't apply to DTLS because the stack will just move onto
the next UDP datagram.",<CABcZeBMuSeis6KNQ-D_ZAfKmWb7Ts_Lq=QM0z6YWVSSUwueZmg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 06:36:34
6282,TLS 15+,129,4831,"NeutralResponse,Answer",4734,4734,"
I think that it eliminates all static distinguisher in the protocol
for all data covered by the encryption. That is a fantastically
wonderful benefit.
",<CAFggDF1SHzU_w30Rk469G2ypTx-pRVsFexv9JHSQdAMJTf5xLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:34:12
6283,TLS 15+,129,4833,"Answer,NeutralResponse,Answer,InformationProviding",4734,4734,"
Yes, any TLS connection may be broken by TCP's total lack of
confidentiality, integrity or authenticity. It seems that normally
this happens at setup by IP:port blocking or during later transmission
of a selector/distinguisher that triggers an attack (TCP RST or
others). There is good work in this area by David Stainton with his
Honeybadger project - he actually classified and implemented most of
these TCP attacks to help detect QUANTUMINSERT attacks in the wild:

https://www.noisebridge.net/pipermail/noisebridge-discuss/2015-April/046273.html
",<CAFggDF1SHzU_w30Rk469G2ypTx-pRVsFexv9JHSQdAMJTf5xLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:34:12
6284,TLS 15+,129,4835,"NeutralResponse,NeutralResponse,Question,Social",4734,4734,"
An off-path attacker can't do much with DTLS, if designed correctly.
Especially if they only see some packets - they'd only get the UDP
headers and then the rest should be uniformly distributed random data,
no? An attacker could thus only interfere during setup - which if
they're on path - we can't stop and expect; the PKI should (ha!) help
with this issue. After that point, especially with devices that move
or are otherwise multi-homed, would be able to spray encrypted packets
out to the network with little other than the UDP headers for an
attacker to use.

Bryan's proposal makes things strictly better with regard to a network
attacker - especially a partial view or off-path attacker who can only
inject packets or who require a selector to trigger an attack.
Effectively, an attacker will be forced to shut down the connection at
setup time or to use the layer separation issues with TCP at any
point. The key difference is that they will have the same information
as they did at setup time, which again seems as a strict improvement
over the current status quo.

All the best,",<CAFggDF1SHzU_w30Rk469G2ypTx-pRVsFexv9JHSQdAMJTf5xLQ@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-02 15:34:12
6285,TLS 15+,129,4894,"Question,ClarificationElicitation,NeutralResponse,ClarificationElicitation,Question,InformationProviding",4831,4831,"
What's a ""static distinguisher""? Padding solves this problem as well,
but it also solves problems resulting from TCP segmentation down the
stack, which header encryption doesn't. What does header encryption
offer that padding does not?
",<CACsn0c=F5PUcXu=Sw5eubeZspaj_jGn3ohuryGMrjwW=e=wvaQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-12-02 10:45:20
6286,TLS 15+,129,4953,"NeutralResponse,ContextSetting,NeutralResponse,Social",4894,4894,"
Once again (for the n'th time in this thread):  Padding is great and we
should encourage implementations to do it, but it may be impractical to
mandate (a) that *every* TLS 1.3 implementation use padding all the
time, and (b) that *every* implementation that does use padding uses the
*same* padded record size as every other TLS implementation.

If TLS 1.3 did mandate that all implementations always pad to the same
standard-defined record length (to echo Viktor Dukhovni, GO ATM! GO ATM!
:) ), then it might be arguably the case that encrypting headers
wouldn't add any further benefit.

But short of that, encrypting TLS headers makes it strictly harder for a
passive adversary - or an active adversary who can only inject but not
block traffic - to distinguish between padded or unpadded TLS 1.3
streams, or to distinguish between TLS 1.3 streams padded to different
block sizes.

In particular, with encrypted records, we get a guarantee that nothing
in the transmitted TCP stream content itself leaks information about the
internal pattern of records, even if it's un-padded or differently
padded from other streams.  The attacker has to use other side-channels
to perform such distinguishing attacks, and other side-channels are
often lower-bandwidth (e.g., the total length of whole streams or bursts
rather than individual records), and/or more noisy (e.g., the lengths
and timings of TCP segments, which may get retimed and/or resegmented by
all sorts of activities both at the endpoints and in the network).

B
",<56600243.2010308@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 09:50:11
6287,TLS 15+,129,4992,"Answer,NeutralResponse,Answer,InformationProviding,Social",4894,4894,"
Fixed parts of a protocol are often considered as static
distinguishers - most are unavoidable unless you take the Scramblesuit
design approach and have a keyexchanged out of band. Elligator is
another useful design in this direction.

In the case of TLS, we've seen a specific Oakley group used as the
distinguisher that selected all related (TCP) flows for disruption.
Changing that to a (well formed) randomly selected value allowed
traffic to flow freely again. Other static values like a site specific
plaintext name are used much more commonly.

I could imagine for example that all records with a given length can
be selected and dropped, for example. Common VoIP applications that
use fixed lengths are thus even easier to censor with an exposed
length field. With that value hidden and with *random* padding, I
think the ease of selecting specific flows would be reduced and the
cost would be much higher. No everyone needs padding but many people
will want that value hidden without a useful way to do it unless the
protocol supports it by default.

All the best,",<CAFggDF0bn_uOxA24Rv+Hr8PvwV-G=fiOqyTRDg244pjPXtNvsA@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-04 15:39:13
6288,TLS 15+,129,5080,"Question,NeutralResponse,Question,ProposeAction",4831,4831,"
Wouldn't that benefit be equally achieved by simply padding all records
to a fixed length? You could do this with no protocol change and, as I
said, it's far easier for the implementation.
",<CABcZeBP2eyncPVkRMMbBk7ysco++-E9oiiu7JHOjs73wS=R5og@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 09:33:37
6289,TLS 15+,129,5082,"Agreement,NeutralResponse,Answer,NeutralResponse",4835,4835,"
DTLS records do in fact contain a length field because it's possible to
pack >1 record into a single UDP datagram. In practice, I think that
most stacks do 1:1 except perhaps during the handshake. They also
contain a sequence number to aid in reconstruction (important
in this case because TLS 1.3 uses the sequence number to
form the AEAD nonce).

However, as you suggest, an attacker can't DoS DTLS connections by
injecting a small number of packets because the DTLS stack will just
reject bogus packets.
",<CABcZeBP2eyncPVkRMMbBk7ysco++-E9oiiu7JHOjs73wS=R5og@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 09:33:37
6290,TLS 15+,129,5083,Social,,4835,"
-Ekr",<CABcZeBP2eyncPVkRMMbBk7ysco++-E9oiiu7JHOjs73wS=R5og@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-02 09:33:37
6291,TLS 15+,129,5198,"Answer,NeutralResponse,Answer",5080,5080,"
Padding is potentially useful but has two issues that come to mind
which are both non-issues in most cases. The first is the economic
cost for extra bytes and the second is the security of the padding
scheme.

Padding strategies are a complement super encryption but probably not
a replacement. Padding protects against one set of attackers (bean
counters) and super encryption provides confidentiality against
another set of attackers (GPA/APA).
",<CAFggDF17f4N=+x9hf1RFFjwcnG9j2XKLia659KUuFmXVhsDZKg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 11:36:40
6292,TLS 15+,129,5200,"NeutralResponse,NeutralResponse,Social",5082,5082,"
This alone makes me think that DTLS with encrypted record headers is
going to be a killer feature. Especially if an implementation rotates
over ip:port and keeps sessions open even as clients move between
networks. We'll hopefully see clients keyex on one network and keep a
session open as they move to another network. That would make
interception or attacking that client very difficult for an off-path
partial view attacker, as well as very difficult even for a fully
on-path mitm. The downside is that it won't compose very well with
existing anonymity systems. The other other upside is that those
systems can use this mode in the future for client -> network, inter
network communication and network -> everywhere communications.

All the best,",<CAFggDF17f4N=+x9hf1RFFjwcnG9j2XKLia659KUuFmXVhsDZKg@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 11:36:40
6293,TLS 15+,129,5290,"Disagreement,NeutralResponse,Disagreement,UnderstandingNegative",5198,5198,"
But as several people have noted, encrypting record lengths doesn't
actually protect the lengths of the records
as well as you think it does. Timing packets is not some exotic and
unavailable technology. I don't understand what
attacks padding and introduction of dummy packets doesn't defend
against that encryption of record lengths does.
",<CACsn0cmHyP5SvngFXBx=Ne9z7aAshneH4NK4PXYM+GxMWiroaA@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-12-03 10:59:57
6294,TLS 15+,129,5412,"NeutralResponse,Disagreement,NeutralResponse",5290,5290,"
I think it protects the length data exactly as much as it does. :-)

It doesn't solve the problem that for a given TCP flow, we'll have a
byte counter, of course. That is also why I'm quite interested in DTLS
with super encryption. Especially with users roaming across networks,
I'm hopeful that we'll blind partial view attackers even more than
ever.
",<CAFggDF0mqMo8tBEUnwJ_c1_T6B7M6bVj6L2fsm_v_6tT-c1fiw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 16:15:41
6295,TLS 15+,129,5414,"NeutralResponse,NeutralResponse,ProposeAction,Agreement,Social",5290,5290,"
We should also ensure that we have padding and dummy packets, of course.

Still I don't see that we'll turn TLS into ATM nor do I believe that
we understand an optimal padding strategy. I think you are correct
that an attacker with a clock and a bean counter is a valid problem. I
also think that the more state we force an attacker to hold, the more
expensive it becomes to perform correlated traffic analysis across
global networks.

Super encryption of records also means that accidents at one layer may
not be as catastrophic at another layer.

All the best,",<CAFggDF0mqMo8tBEUnwJ_c1_T6B7M6bVj6L2fsm_v_6tT-c1fiw@mail.gmail.com>,jacob@appelbaum.net,0.0,0,6,2015-12-03 16:15:41
6296,TLS 15+,129,5520,"Disagreement,Disagreement",4354,4354,"
Hum.... I wouldn't qualify this as a ""fairly simple"" solution.
",<CANOyrg9NnOGj6s6R_HE-Kr_XZ39eUrAQ+t4KKGba1RiGm2n3Rg@mail.gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-01 15:54:51
6297,TLS 15+,129,5522,"NeutralResponse,ContextSetting,NeutralResponse",4355,4355,"
For example:
A TLS library might be logically separated into two main parts:
1) A record parsing block, that just take a stream of bytes as in
input (eg: from a socket) and output a series a record.
2) A decrypt function, that take as input full encrypted record and
output a decrypted one.

There may be various reason to do this: flexibility, clean layering,
maintainability, testability, etc...

Another reason, maybe performance. For example, a network stack might
not want to send partial records to the application to decrypt. Having
a simple way for a network stack to implement TLS framing maybe
beneficial. Currently it would be fairly simple to implement TLS
record parsing in a TCP stack. But with your proposal it seems it
would mean the parsing layer would need to get keys and do crypto.
",<CANOyrg9NnOGj6s6R_HE-Kr_XZ39eUrAQ+t4KKGba1RiGm2n3Rg@mail.gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-01 15:54:51
6298,TLS 15+,129,5524,"NeutralResponse,Disagreement",4355,4355,"
This is all good, except that your proposal requires that the record
parsing layers has access to some AEAD API. So far it didn't need an
AEAD API at all.
",<CANOyrg9NnOGj6s6R_HE-Kr_XZ39eUrAQ+t4KKGba1RiGm2n3Rg@mail.gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-01 15:54:51
6299,TLS 15+,129,5568,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",5520,5520,"
A reasonable but subjective position, which I think we should further discuss later if/when this (or some) WG actually revisits DTLS. :)
",<1D68EFC9-D5A5-4501-AD7D-0B744AB7428C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 10:51:55
6300,TLS 15+,129,5570,"NeutralResponse,NeutralResponse,Social",5522,5522,"
In my first proposal, with headers encrypted with a stream cipher (or AEAD used as one), I think this kind of layering should still be quite feasible, with the one caveat that the TLS record parsing layer does indeed need to make one new “call” into the crypto-related code (to get the header) in addition to the one it already does (to pass the body and header to the crypto code for body-decryption and integrity-check).  And only on the receive path; the send path seems pretty much unaffected.  This doesn’t seem like a big layering problem to me, but again subjective opinions may vary.

In my second proposal, with headers fully encrypted and integrity-checked along with the body, I think the opportunity for the clean layering you propose comes back and perhaps gets even better: it’s just that the record writing/parsing now happens *inside* rather than outside the encryption boundary.  In other words, their order is reversed: the sender invokes the record-writing code first, then the AEAD encryption code to encrypt everything (header and data) at once; the receiver flow invokes the AEAD decryption code first to decrypt everything, then invokes the separately-modularized record parsing code on the already fully decrypted and integrity-checked record content.  This seems even cleaner to me than the current approach, where the record parsing code has to do some (very careful!) parsing of the record before it’s been authenticated, then invoke decryption, then do some more internal parsing on the decrypted AEAD body (e.g., the encrypted content-type within).

B",<1D68EFC9-D5A5-4501-AD7D-0B744AB7428C@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-02 10:51:55
6301,TLS 15+,129,5643,"NeutralResponse,NeutralResponse",5568,5568,"
Well, it's objectively several order of magnitude more complex than the current record framing.

And I certainly hope than TLS 1.3 is designed with DTLS in mind.
",<92D08A65-285C-4385-A122-817F85B43F37@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-02 11:48:47
6302,TLS 15+,129,5645,"NeutralResponse,Disagreement",5570,5570,"
That is one big caveat. And you description doesn't really match what I have in mind.

In particular, currently, record framing and decryption doesn't need to be synchronous and there is no particular requirement for which one call the other.

So a TLS record framing implemented in an OS kernel TCP stack would not ""call"" into the decryption layer in userland. It would just queue data in its socket buffer and only signal to userland that data is available when a full record is available to be decrypted.

So it just wouldn't be practical to do this at all with your scheme.
",<92D08A65-285C-4385-A122-817F85B43F37@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-02 11:48:47
6303,TLS 15+,129,5647,"NeutralResponse,NeutralResponse",5570,5570,"
For my example above, the second proposal requires that the application layer tell the network stack what the expected size of the next record is.

For some implementation it may be more efficient as the decryption layer (in the application) knows exactly how much data it needs to read from the socket - whereas today you need to read the header first, then the rest.
But it still doesn't allow the network stack to - on its own - signal to the application when it received enough data ready to be decrypted.
",<92D08A65-285C-4385-A122-817F85B43F37@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-02 11:48:47
6304,TLS 15+,129,5648,"NeutralResponse,NeutralResponse",5570,5570,"
The current header is so simple there is virtually no risk to get the framing wrong, and nothing really bad happen even if you do get it wrong.
",<92D08A65-285C-4385-A122-817F85B43F37@gmail.com>,fabrice.gautier@gmail.com,0.0,0,14,2015-12-02 11:48:47
6305,TLS 15+,129,5690,"ClarificationElicitation,ContextSetting,Question",4354,4354,"
[JG] In case there is a packet loss of at least W subsequent DTLS records:
How can the receiver then ever adjust its hash table? Wouldn't that mean
that no records at all would be accepted anymore?
",<547EE95EB794FD4DB8062F7A4C86D0BC4A39F163@FR712WXCHMBA13.zeu.alcatel-lucent.com>,jens.guballa@alcatel-lucent.com,0.0,0,36,2015-12-02 10:47:06
6306,TLS 15+,129,5773,Social,,-1,"Hi Jens,
",<5660109C.7070803@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 10:51:24
6307,TLS 15+,129,5775,"Answer,ProposeAction,Answer,ProposeAction,Social",5690,5690,"
Excellent question - I had intended to discuss that in my original post
but in the end forgot to include it.

Indeed, with this approach as it stands, if every packet within a full
window of W consecutive packets fails to reach the receiver, then the
receiver has no way to resynchronize and the connection will simply
fail.  In congestion-controlled protocols like TCP (or DCCP) that do
exponential backoff when they detect many consecutive losses, the
protocol may be more likely simply to hard-timeout than to reach the
W-packet resynchronization limit.  But admittedly many UDP-based
protocols aren't (or are rather weakly) congestion-controlled, so this
may be more of a problem for them.  It's probably the case that the
""forward-looking window"" should be allowed to have a different value
from the ""backward-looking window"", and perhaps the ""forward-looking
window"" should depend on RTT (e.g., measured maximum packets-in-flight).

However, one way to eliminate this risk of permanent desynchronization,
at the cost of a bit more complexity in the receiver implementation
(though this needn't affect the protocol spec at all) is for the
receiver's ""forward-looking window"" to consist not of W consecutive
sequence numbers but a sparse set of sequence numbers at
exponentially-increasing distances.  For example, if H is the current
highest sequence number, include in the forward-looking cache the
encrypted sequence numbers of the sequence number of the next multiple
of 2^1 beyond H, the next multiple of 2^2, etc., for as many multiples
of powers-of-two to get sufficiently far out in the sequence number
space where we're convinced there's no realistic chance of a run of
total or near-total packet loss unless it really means the connection is
dead anyway. :)

Again, these are all considerations that need not affect the protocol
but could be tuned by implementations (perhaps with some recommendations
in the protocol spec).

But regardless, all of this is just to make the case that header
encryption is in principle just as feasible in DTLS as in TLS, and using
fairly similar techniques; right now I think we should keep the main
focus on whether to do it (at least) in TLS, for which is seems pretty
easy to do it in at least two different ways I've proposed.

B",<5660109C.7070803@gmail.com>,brynosaurus@gmail.com,0.0,0,14,2015-12-03 10:51:24
6308,TLS 15+,129,5895,Social,,-1,"Hi Brian,
",<547EE95EB794FD4DB8062F7A4C86D0BC4A3A04DF@FR712WXCHMBA13.zeu.alcatel-lucent.com>,jens.guballa@alcatel-lucent.com,0.0,0,36,2015-12-04 12:52:17
6309,TLS 15+,129,5897,"ClarificationElicitation,NeutralResponse,ClarificationElicitation,NeutralResponse,UnderstandingNegative",5775,5775,"[JG] That would mean legitimate records would be dropped until an entry in
the hash would match. Thus this proposal would potentially degrade the
service, right?

Basically I fail to see how a stream cipher can be operated reliable on top
of an unreliable transport protocol.
",<547EE95EB794FD4DB8062F7A4C86D0BC4A3A04DF@FR712WXCHMBA13.zeu.alcatel-lucent.com>,jens.guballa@alcatel-lucent.com,0.0,0,36,2015-12-04 12:52:17
6310,TLS 15+,130,0,Social,,-1,"All,",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6311,TLS 15+,130,15,"ContextSetting,ContextSetting",,-1,"
We’ve got two outstanding PRs that propose changes to draft-ietf-tls-tls13 Section 5.5 “Limits on Key Usage”.  As it relates to rekeying, these limits have been discussed a couple of times and we need to resolve once and for all whether the TLS WG wants to:",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6312,TLS 15+,130,16,"ProposeAction,ExtensionOfPrevious",15,-1,"
a) Close these two PRs and go with the existing text [0]
b) Adopt PR#765 [1]
c) Adopt PR#769 [2]",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6313,TLS 15+,130,17,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction",16,-1,"
Please indicate you preference to the TLS mailing list before Feb 17.  Note that unless there’s clear consensus to change the text will remain as is (i.e., option a).",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6314,TLS 15+,130,18,Social,,-1,"
J&S",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6315,TLS 15+,130,19,"ExtensionOfPrevious,ExtensionOfPrevious",16,-1,"
[0] https://tlswg.github.io/tls13-spec/#rfc.section.5.5
[1] https://github.com/tlswg/tls13-spec/pull/765
[2] https://github.com/tlswg/tls13-spec/pull/769",<352D31A3-5A8B-4790-9473-195C256DEEC8@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-02-10 00:07:35
6316,TLS 15+,130,21,Social,,-1,"Dear Sean, dear all,",<CAMr0u6nXqmO08ksP_6Hv=gdP7pDZ4NWxLq=VZ-c_mLcUsnXAqg@mail.gmail.com>,smyshsv@gmail.com,0.0,0,13,2017-02-10 08:19:05
6317,TLS 15+,130,58,"NeutralResponse,ProposeAction,Agreement,ProposeAction",17,-1,"
I find the existing limits quite reasonable and would prefer that we'll
stay conservative here, so I'd prefer option a) go with the existing text.",<CAMr0u6nXqmO08ksP_6Hv=gdP7pDZ4NWxLq=VZ-c_mLcUsnXAqg@mail.gmail.com>,smyshsv@gmail.com,0.0,0,13,2017-02-10 08:19:05
6318,TLS 15+,130,74,"NeutralResponse,Agreement,ProposeAction","16,17",16,"
a) I'm happy enough with the current text (I've implemented that any
it's relatively easy).

I could live with c, but I'm opposed to b. It just doesn't make sense.
It's not obviously wrong any more, but the way it is written it is
very confusing and easily open to misinterpretation.",<CABkgnnVrFGHe0eKREXbG_pv=y18ouopZsE2c5+Czz0HAGko6rg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-10 16:44:58
6319,TLS 15+,130,76,Social,,-1,"Hi,",<D4C331C7.86224%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 09:06:07
6320,TLS 15+,130,113,"NeutralResponse,ProposeAction,ProposeAction","16,17",-1,"
My preference is to go with the existing text, option a).",<D4C331C7.86224%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 09:06:07
6321,TLS 15+,130,114,"ExtensionOfPrevious,NeutralResponse","113,17",-1,"
From the github discussion, I think option c) involves a less conservative
security bound (success probability for IND-CPA attacker bounded by
2^{-32} instead of 2^{-60}). I can live with that, but the WG should be
aware of the weaker security guarantees it provides.",<D4C331C7.86224%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 09:06:07
6322,TLS 15+,130,115,"ExtensionOfPrevious,NeutralResponse,UnderstandingNegative","114,17",-1,"
I do not understand option b). It seems to rely on an analysis of
collisions of ciphertext blocks rather than the established security proof
for AES-GCM.",<D4C331C7.86224%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 09:06:07
6323,TLS 15+,130,175,Social,,-1,"Hi Kenny,
",<D4C31FC4.2F5AF%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:48:41
6324,TLS 15+,130,177,"Social,ProposeAction",17,-1,"
Hi,

My preference is to go with the existing text, option a).
",<D4C31FC4.2F5AF%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:48:41
6325,TLS 15+,130,178,"NeutralResponse,NeutralResponse,ProposeAction,UnderstandingNegative","115,17",114,"security bound (success probability for IND-CPA attacker bounded by
2^{-32} instead of 2^{-60}). I can live with that, but the WG should be
aware of the weaker security guarantees it provides.

I do not understand option b). It seems to rely on an analysis of
collisions of ciphertext blocks rather than the established security proof
for AES-GCM.

My suggestion was based on counting.  I analyzed AES-GCM in TLS 1.3  as being a counter-mode encryption and each counter is a 96-bit nonce || 32-bit counter. I don’t know if there is another kind of proof that is more precise than that.
",<D4C31FC4.2F5AF%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:48:41
6326,TLS 15+,130,231,Social,,-1,"Dear Quynh,
",<D4C3A5C5.86620%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 17:22:32
6327,TLS 15+,130,233,"NeutralResponse,Thanking,Thanking,NeutralResponse",178,178,"
Thanks for explaining. I think, then, that what you are doing is (in
effect) accounting for the PRP/PRF switching lemma that is used (in a
standard way) as part of the IND-CPA security proof of AES-GCM. One can
obtain a greater degree of precision by using the proven bounds for
IND-CPA security of AES-GCM. These incorporate the ""security loss"" coming
from the PRP/PRF switching lemma. The current best form of these bounds is
due to Iwata et al.. This is precisely what we analyse in the note at
http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf - specifically, see
equations (5) - (7) on page 6 of that note.
",<D4C3A5C5.86620%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 17:22:32
6328,TLS 15+,130,301,Social,,-1,"Dear Kenny,
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6329,TLS 15+,130,303,Social,,-1,"
Dear Quynh,
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6330,TLS 15+,130,304,Social,,-1,"
Hi Kenny,

Hi,
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6331,TLS 15+,130,305,ProposeAction,17,-1,"
My preference is to go with the existing text, option a).
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6332,TLS 15+,130,306,NeutralResponse,17,114,"conservative
security bound (success probability for IND-CPA attacker bounded by
2^{-32} instead of 2^{-60}). I can live with that, but the WG should be
aware of the weaker security guarantees it provides.
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6333,TLS 15+,130,307,"NeutralResponse,UnderstandingNegative",17,114,"
I do not understand option b). It seems to rely on an analysis of
collisions of ciphertext blocks rather than the established security
proof
for AES-GCM.
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6334,TLS 15+,130,308,"NeutralResponse,NeutralResponse,Thanking,NeutralResponse","17,178,233",114,"
My suggestion was based on counting.  I analyzed AES-GCM in TLS 1.3  as
being a counter-mode encryption and each counter is a 96-bit nonce ||
32-bit counter. I don’t know if there is another kind of proof that is
more precise than that.

Thanks for explaining. I think, then, that what you are doing is (in
effect) accounting for the PRP/PRF switching lemma that is used (in a
standard way) as part of the IND-CPA security proof of AES-GCM. One can
obtain a greater degree of precision by using the proven bounds for
IND-CPA security of AES-GCM. These incorporate the ""security loss"" coming
from the PRP/PRF switching lemma. The current best form of these bounds is
due to Iwata et al.. This is precisely what we analyse in the note at
http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf - specifically, see
equations (5) - (7) on page 6 of that note.

I reviewed the paper more than once. I highly value the work. I suggested to reference  your paper in the text.  I think the result in your paper is the same with what is being suggested when the collision probability allowed is 2^(-32).
",<D4C37519.2F85F%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:56:36
6335,TLS 15+,130,411,Social,,-1,"Hi,
",<D4C3BE6A.86847%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 19:06:46
6336,TLS 15+,130,413,"ClarificationElicitation,NeutralResponse,UnderstandingNegative,Thanking,Thanking,ClarificationElicitation,ProposeAction",308,308,"
Thanks for this feedback. I guess my confusion arises from wondering what
you mean by collision probability and why you care about it. There are no
collisions in the block cipher's outputs per se, because AES is a
permutation for each choice of key. And collisions in the ciphertext
blocks output by AES-GCM are irrelevant to its formal security analysis.

On the other hand, when in the proof of IND-CPA security of AES-GCM one
switches from a random permutation (which is how we model AES) to a random
function (which is what we need to argue in the end that the plaintext is
masked by a one-time pad, giving indistinguishability), then one needs to
deal with the probability that collisions occur in the function's outputs
but not in the permutation's. This ends up being the main contribution to
the security bound in the proof for IND-CPA security.

Is that what you are getting at?

If so, then we are on the same page, and what remains is to decide whether
a 2^{-32} bound is a good enough security margin.
",<D4C3BE6A.86847%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-10 19:06:46
6337,TLS 15+,130,416,Social,,-1,"Hi Kenny,",<CY4PR09MB146498613751F2C400FAC876F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-11 11:45:50
6338,TLS 15+,130,547,"Answer,Answer",413,-1,"
AES-permutation is a permutation.  But, AES-GCM (AES in counter mode) is a PRF as long as the 128-bit IVs are unique under the encryption key.  The amount of plaintext is the same with the amount of ciphertext.",<CY4PR09MB146498613751F2C400FAC876F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-11 11:45:50
6339,TLS 15+,130,548,"ExtensionOfPrevious,ExtensionOfPrevious",547,-1,"
I originally talked about plaintext in my discussion, but several people asked me to talk about ciphertext instead (I thought maybe measuring ciphertext was easier than measuring plaintext in practice and that was why they asked me that).",<CY4PR09MB146498613751F2C400FAC876F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-11 11:45:50
6340,TLS 15+,130,549,"ExtensionOfPrevious,ExtensionOfPrevious",548,-1,"
The number of 128-bit blocks of plaintext is the same with the number of 128-bit ""one-time pad"" keys produced by the AES key and the unique 128-bit IVs. These 128-bit ""one-time pad"" keys and the corresponding 128-bit ciphertext blocks are the same in the sense that they are both sets of pseudo-random 128-bit blocks.  But, the 128-bit ""one-time pad"" keys are not stored, they have to either measure the amount of plaintext or ciphertext.",<CY4PR09MB146498613751F2C400FAC876F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-11 11:45:50
6341,TLS 15+,130,552,Social,,-1,"Hello,",<VI1PR8303MB0094D686941D99290BB431FCAB590@VI1PR8303MB0094.EURPRD83.prod.outlook.com>,markulf@microsoft.com,0.0,0,26,2017-02-13 15:34:13
6342,TLS 15+,130,600,"NeutralResponse,ProposeAction","16,17",-1,"
Our analysis of miTLS also supports option a)",<VI1PR8303MB0094D686941D99290BB431FCAB590@VI1PR8303MB0094.EURPRD83.prod.outlook.com>,markulf@microsoft.com,0.0,0,26,2017-02-13 15:34:13
6343,TLS 15+,130,601,"InformationProviding,NeutralResponse",,-1,"
A security level of 2^-32 seems too low from a provable security point of view, especially for a confidentiality bound.",<VI1PR8303MB0094D686941D99290BB431FCAB590@VI1PR8303MB0094.EURPRD83.prod.outlook.com>,markulf@microsoft.com,0.0,0,26,2017-02-13 15:34:13
6344,TLS 15+,130,602,"InformationProviding,ExtensionOfPrevious",601,-1,"
We verified an implementation of the TLS 1.3 record (https://eprint.iacr.org/2016/1178, to appear at Security & Privacy 2017) where we arrive at a combined bound for authenticity and confidentiality that is compatible with the Iwata et al. bound.",<VI1PR8303MB0094D686941D99290BB431FCAB590@VI1PR8303MB0094.EURPRD83.prod.outlook.com>,markulf@microsoft.com,0.0,0,26,2017-02-13 15:34:13
6345,TLS 15+,130,605,Social,,-1,"Hi Markulf,",<D4C73D19.2FB4B%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-13 15:45:36
6346,TLS 15+,130,671,"NeutralResponse,Disagreement",601,-1,"
The probability of a bad thing to happen is actually below (or about) 2^(-33). It practically won’t happen when the chance is 1 in 2^32. And, to achieve that chance, you must collect 2^48 128-bit blocks.",<D4C73D19.2FB4B%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-13 15:45:36
6347,TLS 15+,130,766,"ContextSetting,Social,ContextSetting",,-1,"Hi Markulf and all,

I provided more explanation below.
",<D4C85054.2FDA4%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 11:59:44
6348,TLS 15+,130,768,"Social,Disagreement",601,-1,"
Hi Markulf,

The probability of a bad thing to happen is actually below (or about) 2^(-33). It practically won’t happen when the chance is 1 in 2^32. And, to achieve that chance, you must collect 2^48 128-bit blocks.
",<D4C85054.2FDA4%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 11:59:44
6349,TLS 15+,130,925,Social,,-1,"Hey Quynh,
",<be49d59e37339cbaea8fef9bdb2a8971@esat.kuleuven.be>,Atul.Luykx@esat.kuleuven.be,0.0,0,24,2017-02-14 08:17:53
6350,TLS 15+,130,927,"NeutralResponse,ProposeAction,NeutralResponse",,-1,"The claim is stronger: regardless of the number of plaintext-ciphertext
pairs available to the adversary, it will still take roughly 2^128
operations to recover the key with AES. This contrasts with any mode of
operation, where adversarial success probability increases according to
the amount of data available and the computational complexity required
to perform such an attack is not the limiting factor (which is the core
of the problem we're discussing right now).

Regardless, correct me if I'm wrong Quynh, but you seem to have two
issues with Eric's text:
1. the data limit recommendation is too strict, and
2. it only gives a data limit in terms of full records.

For point 1 it seems like most people would rather err on the side of
caution instead of recommending that people switch when adversaries have
success probability 2^{-32}. I don't see the discussion progressing on
this point, and basically a decision needs to be made.

I don't think point 2 is a problem because it gives people a good enough
heuristic, however this can be fixed easily by minimally modifying the
original text.
",<be49d59e37339cbaea8fef9bdb2a8971@esat.kuleuven.be>,Atul.Luykx@esat.kuleuven.be,0.0,0,24,2017-02-14 08:17:53
6351,TLS 15+,130,1073,Social,,-1,"Hi Atul,
",<D4C8AE28.30145%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:20:12
6352,TLS 15+,130,1075,"Disagreement,NeutralResponse,Social,NeutralResponse,InformationProviding,Social",927,-1,"
Hey Quynh,

When someone says AES-128 has 128 bits of security he or she means
that 2^128 AES operations will break the cipher with probability 100%:
finding the key and the plaintext.
The claim is stronger: regardless of the number of plaintext-ciphertext
pairs available to the adversary, it will still take roughly 2^128
operations to recover the key with AES.

Actually the same claim: my claim did not require any data requirement: just one ciphertext block.

This contrasts with any mode of
operation, where adversarial success probability increases according to
the amount of data available and the computational complexity required
to perform such an attack is not the limiting factor (which is the core
of the problem we're discussing right now).

IND-CPA is important. That is why I have always been supporting it. Data is equivalent to computation in the sense that data are produced by computation. 2^x blocks = 2^x AES operations.

With 2^48 AES operations/input blocks, the actual margin is below 2^(-33). And, 1 in 2^32 is 1 in 4,294, 967,296.00 which is safe.

Quynh.
",<D4C8AE28.30145%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:20:12
6353,TLS 15+,130,1076,"NeutralResponse,ProposeAction,Social",,-1,"
Regardless, correct me if I'm wrong Quynh, but you seem to have two
issues with Eric's text:
1. the data limit recommendation is too strict, and
2. it only gives a data limit in terms of full records.

For point 1 it seems like most people would rather err on the side of
caution instead of recommending that people switch when adversaries have
success probability 2^{-32}. I don't see the discussion progressing on
this point, and basically a decision needs to be made.

I don't think point 2 is a problem because it gives people a good enough
heuristic, however this can be fixed easily by minimally modifying the
original text.

Atul
",<D4C8AE28.30145%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:20:12
6354,TLS 15+,130,1077,"ContextSetting,Social",,-1,"Hi Markulf and all,
I provided more explanation below.",<D4C8AE28.30145%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:20:12
6355,TLS 15+,130,1079,"Social,Disagreement",601,-1,"(#765/#769)
Hi Markulf,
The probability of a bad thing to happen is actually below (or
about) 2^(-33). It practically won’t happen when the chance is 1
in 2^32. And, to achieve that chance, you must collect 2^48 128-bit
blocks.",<D4C8AE28.30145%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:20:12
6356,TLS 15+,130,1082,Social,,-1,"Hi Sean and all,",<CY4PR09MB1464278F1845979862CA9C8EF3580@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:45:55
6357,TLS 15+,130,1251,"ContextSetting,InformationProviding,ContextSetting",,-1,"
Beside my suggestion at https://www.ietf.org/mail-archive/web/tls/current/msg22381.html, I have a second suggestion below.",<CY4PR09MB1464278F1845979862CA9C8EF3580@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:45:55
6358,TLS 15+,130,1252,"ProposeAction,ContextSetting,ProposeAction",,-1,"
Just replacing this sentence: """,<CY4PR09MB1464278F1845979862CA9C8EF3580@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:45:55
6359,TLS 15+,130,1253,"ExtensionOfPrevious,ExtensionOfPrevious",1252,-1,"
For AES-GCM, up to 2^24.5 full-size records (about 24 million) may be
encrypted on a given connection while keeping a safety margin of
approximately 2^-57 for Authenticated Encryption (AE) security.",<CY4PR09MB1464278F1845979862CA9C8EF3580@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:45:55
6360,TLS 15+,130,1254,"ExtensionOfPrevious,ExtensionOfPrevious",1253,-1,"
"" in Section 5.5 by this sentence: "" For AES-GCM, up to 2^48 (partial or full) input blocks may be encrypted with one key. For other suggestions and analysis, see the referred paper above.""",<CY4PR09MB1464278F1845979862CA9C8EF3580@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-14 18:45:55
6361,TLS 15+,130,1283,Social,,-1,"Hi, Quynh
",<BD6FC1F4-F2ED-46F8-9E53-862B69D9C00A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-02-14 21:45:32
6362,TLS 15+,130,1285,"ClarificationElicitation,Agreement,UnderstandingNegative,UnderstandingNegative,ClarificationElicitation,Thanking","1251,1252",183,"
I like the suggestion, but I’m probably missing something pretty basic about it.

2^24.5 full-size records is 2^24.5 records of 2^14 bytes each, or (since an AES block is 16 bytes or 2^4 bytes) 2^24.5 records of 2^10 blocks.

Why is that 2^48 input blocks rather than 2^34.5 input blocks?

Thanks
",<BD6FC1F4-F2ED-46F8-9E53-862B69D9C00A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-02-14 21:45:32
6363,TLS 15+,130,1342,"Answer,Answer",1285,1285,"Because he wants to lower the security level. The original text
recommends switching at 2^{34.5} input blocks, corresponding to a
success probability of 2^{-60}, whereas his text recommends switching at
2^{48} blocks, corresponding to a success probability of 2^{-32}.
",<e7c9bc1fb1b57333bacbe2def2687d18@esat.kuleuven.be>,Atul.Luykx@esat.kuleuven.be,0.0,0,24,2017-02-14 13:52:04
6364,TLS 15+,130,1356,"NeutralResponse,ProposeAction,NeutralResponse,Agreement","1254,1342",1342,"
OK, missed that.

So I’m in favor of switching the phrasing to be about blocks rather than maximum-sized records, but not in favor of lowering the security level.
",<2B24FC67-764A-47D1-8D24-09B652DF3611@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-02-14 23:59:57
6365,TLS 15+,130,1418,Social,,-1,"Hi Atul,

I hope you had a happy Valentine!
",<D4C9AB9C.302D5%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-15 12:11:50
6366,TLS 15+,130,1420,"ClarificationElicitation,Disagreement,NeutralResponse,ContextSetting,Disagreement,UnderstandingNegative,Social",1342,-1,"
Why is that 2^48 input blocks rather than 2^34.5 input blocks?
Because he wants to lower the security level.

I respectfully disagree. 2^-32, 2^-33, 2^-57, 2^-60, 2^-112 are practically the same: they are practically zero.  And, 2^-32 is an absolute chance in this case meaning that all attackers can’t improve their chance: no matter how much computational power the attacker has.

I don’t understand why the number 2^-60 is your special chosen number for this ? In your “theory”, 2^-112 would be in “higher” security than 2^-60.

Quynh.
",<D4C9AB9C.302D5%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-15 12:11:50
6367,TLS 15+,130,1421,"ContextSetting,InformationProviding,Social",,-1,"
The original text
recommends switching at 2^{34.5} input blocks, corresponding to a
success probability of 2^{-60}, whereas his text recommends switching at
2^{48} blocks, corresponding to a success probability of 2^{-32}.

Atul
",<D4C9AB9C.302D5%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-15 12:11:50
6368,TLS 15+,130,1422,Social,,-1,"Hi, Quynh
On 14 Feb 2017, at 20:45, Dang, Quynh (Fed) <quynh.dang@nist.gov<mailto:quynh.dang@nist.gov>>",<D4C9AB9C.302D5%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-15 12:11:50
6369,TLS 15+,130,1423,"Social,InformationProviding,ContextSetting,ProposeAction",,-1,"Hi Sean and all,
Beside my suggestion at
https://www.ietf.org/mail-archive/web/tls/current/msg22381.html [1],
I have a second suggestion below.
Just replacing this sentence: ""
For AES-GCM, up to 2^24.5 full-size records (about 24 million) may
be
encrypted on a given connection while keeping a safety margin of
approximately 2^-57 for Authenticated Encryption (AE) security.
"" in Section 5.5 by this sentence: "" For AES-GCM, up to 2^48
(partial or full) input blocks may be encrypted with one key. For
other suggestions and analysis, see the referred paper above.""",<D4C9AB9C.302D5%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-15 12:11:50
6370,TLS 15+,130,1521,"ContextSetting,Social,ContextSetting",,-1,"Hi Quynh,

I'm meant to be on vacation, but I'm finding this on-going discussion fascinating, so I'm chipping in again.
",<CDDC7812-27AF-4566-AE33-6DF829FEB81E@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-15 13:46:28
6371,TLS 15+,130,1522,Social,,-1,"
Hi Atul,

I hope you had a happy Valentine!
",<CDDC7812-27AF-4566-AE33-6DF829FEB81E@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-15 13:46:28
6372,TLS 15+,130,1524,"ClarificationElicitation,NeutralResponse,UnderstandingNegative,ContextSetting,UnderstandingNegative,Answer,Agreement",1420,-1,"
Why is that 2^48 input blocks rather than 2^34.5 input blocks?
Because he wants to lower the security level.

I respectfully disagree. 2^-32, 2^-33, 2^-57, 2^-60, 2^-112 are practically the same: they are practically zero.

I'm not clear what you mean by ""practically"" here. They're clearly not the same as real numbers. And if we are being conservative about security, then the extremes in your list are a long way apart.

And, 2^-32 is an absolute chance in this case meaning that all attackers can’t improve their chance: no matter how much computational power the attacker has.

A sufficiently powerful adversary could carry out an exhaustive key search for GCM's underlying AES key. So I'm not sure what you're claiming here when you speak of ""absolute chance"".

I don’t understand why the number 2^-60 is your special chosen number for this ?

This is a bit subtle, but I'll try to explain in simple terms.

We can conveniently prove a bound of about this size (actually 2^-57) for INT-CTXT for a wide range of parameters covering both TLS and DTLS (where many verification failures may be permitted). Then, since we're ultimately interested in AE security, we would like to (roughly) match this for IND-CPA security, to get as good a bound as we can for AE security (the security bounds for the two notions sum to give an AE security bound - see page 2 of the ""AE bounds"" note).

In view of the INT-CTXT bound there's no point pushing the IND-CPA bound much lower than 2^-60 if the ultimate target is AE security. It just hurts the data limits more without significantly improving AE security.

Finally, 2^-60 is not *our* special chosen number. We wrote a note that contained a table of values, and it's worth noting that we did not make a specific recommendation in our note for which row of the table to select.

(Naturally, though, we'd like security to be as high as possible without making rekeying a frequent event. It's a continuing surprise to me that you are pushing for an option that actually reduces security when achieving higher security does not seem to cause any problems for implementors.)

In your “theory”, 2^-112 would be in “higher” security than 2^-60.

It certainly would, if it were achievable (which it is not for GCM without putting some quite extreme limits on data per key).
",<CDDC7812-27AF-4566-AE33-6DF829FEB81E@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-02-15 13:46:28
6373,TLS 15+,130,1527,"ContextSetting,NeutralResponse",1524,-1,Kenny's response here is quite informative and clarifies this somewhat.,<CABkgnnX78HnPnudEYOciS-VgJ4opYQX56OQ1R4yYvqxOQkO7Bg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-16 04:05:14
6374,TLS 15+,130,1678,"InformationProviding,InformationProviding",,-1,"
2^24.5 (the current text) is still a big number.  Though it might seem
a little small, I see no practical reason to change it.  In the most
perverse case, that means 520MB of one octet records (23MB of actual
data) before an update is forced.  It's hard to get excited about that
as a practical limitation.",<CABkgnnX78HnPnudEYOciS-VgJ4opYQX56OQ1R4yYvqxOQkO7Bg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-16 04:05:14
6375,TLS 15+,130,1679,"ExtensionOfPrevious,ExtensionOfPrevious",1678,-1,"
Frankly, I'm more concerned that this isn't small enough and that it
could it be practical to deploy an implementation that don't support
KeyUpdate.  That would cause a real interop problem.",<CABkgnnX78HnPnudEYOciS-VgJ4opYQX56OQ1R4yYvqxOQkO7Bg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-16 04:05:14
6376,TLS 15+,130,1696,"NeutralResponse,ProposeAction,Disagreement,NeutralResponse",1679,1679,"
Maybe we should resurrect [1] and add 3DES support so as to grease KeyUpdate.

No, not really, but TLS is not just the web, and there are connections that last for a long time and transfer large amounts of data. Think datacenter synchronization. At packet-sized records 24 million records amounts to 36 GB. That is considerably larger than a 4 GB software update I downloaded over HTTPS a few years ago, but not out of the ballpark.
",<859B3094-61BF-40B3-9473-4220E830D70F@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-02-15 19:20:39
6377,TLS 15+,130,1714,"NeutralResponse,NeutralResponse,ProposeAction",1696,1696,"
I realize that's going to require updates pretty often (once you open
up the CWND), but I don't think that it is frequent enough to be a
concern.

I well know that HTTP gets used at these volumes more often than
people realize.  I'd rather recommend ChaCha for those niche uses
though if the rate was sufficiently high.",<CABkgnnURRPNEGEFKJvBJ=of=pqSD6CLJ+M3CB5KepEQA38XeHQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-16 04:25:35
6378,TLS 15+,130,1739,"ClarificationElicitation,NeutralResponse,UnderstandingNegative,UnderstandingNegative,ClarificationElicitation,NeutralResponse",1714,1714,"
And now I’ve lost you. A moment ago I thought you were concerned that people would fail to implement KeyUpdate. Are you now suggesting that it be removed entirely from TLS 1.3?

There’s no getting around the fact that AES-GCM is faster on certain processors than ChaCha, and speed is likely to be a major concern for exactly the same systems that use the high data volumes.
",<4639F8A9-1DD7-48E5-ABE4-2658311E0C33@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-02-15 19:30:04
6379,TLS 15+,130,1753,"Answer,NeutralResponse,Answer",1739,1739,"
No.  My point was that if GCM requires more updates than you can
handle (because you are running well in excess of 1Tbps perhaps, I
don't know, my crystal ball isn't that good), then use ChaCha where
you don't need to update so often.  Obviously there is a tradeoff
there given the relative availability of hardware support, which you
likely need at those rates, but again the crystal ball is imperfect in
telling us how that story plays out.",<CABkgnnU0FzaeRy3wXzerYL8EdzWJsSmo7Wh+ce3PmDtDYUfzww@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-02-16 04:33:21
6380,TLS 15+,130,1778,"Agreement,NeutralResponse,Agreement,ProposeAction,InformationProviding",1714,1714,"
I agree with Yoav Nir here, it's certainly not a niche use* and one's implementation should not be forced to use a certain cipher mode if there would be better options (e.g. because -- as pointed out earlier -- hardware support is available).

* We'll all agree that most of the TLS traffic is made up by HTTPS requests, still, there are many other uses and we design protocols not just for the web. That's W3C.
",<FFCF8465-1B10-4202-8AE6-37DE152C5D17@azet.org>,azet@azet.org,0.0,0,7,2017-02-16 21:33:39
6381,TLS 15+,130,1906,"ContextSetting,Social,NeutralResponse",1521,-1,"Hi Kenny,

I am glad to see that you enjoyed the discussion more than what you planed for the time on your vacation.  We love crypto and the IETF!
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6382,TLS 15+,130,1908,"InformationProviding,Social",,-1,"
Hi Quynh,

I'm meant to be on vacation, but I'm finding this on-going discussion fascinating, so I'm chipping in again.
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6383,TLS 15+,130,1909,Social,,-1,"
Hi Atul,

I hope you had a happy Valentine!
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6384,TLS 15+,130,1911,"Answer,NeutralResponse,Answer,NeutralResponse,Apologising",1524,-1,"
Why is that 2^48 input blocks rather than 2^34.5 input blocks?
Because he wants to lower the security level.

I respectfully disagree. 2^-32, 2^-33, 2^-57, 2^-60, 2^-112 are practically the same: they are practically zero.

I'm not clear what you mean by ""practically"" here.

As far as I know, such chance has not happened in history for any targeted search where the chance for hitting the target is 1 in 2^32.

They're clearly not the same as real numbers. And if we are being conservative about security, then the extremes in your list are a long way apart.

And, 2^-32 is an absolute chance in this case meaning that all attackers can’t improve their chance: no matter how much computational power the attacker has.

A sufficiently powerful adversary could carry out an exhaustive key search for GCM's underlying AES key. So I'm not sure what you're claiming here when you speak of ""absolute chance"".

I described my point not in a best way, sorry. For key recovery, if an attacker can do 2^96 AES operations, his chance of finding the key is 2^-32, but this chance will get improved if the attacker does more computation. On the contrary, the chance for the distinguishing attack won’t change with the proposed data limit.
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6385,TLS 15+,130,1912,"Answer,NeutralResponse,NeutralResponse","1524,1911",-1,"
I don’t understand why the number 2^-60 is your special chosen number for this ?

This is a bit subtle, but I'll try to explain in simple terms.

We can conveniently prove a bound of about this size (actually 2^-57) for INT-CTXT for a wide range of parameters covering both TLS and DTLS (where many verification failures may be permitted). Then, since we're ultimately interested in AE security, we would like to (roughly) match this for IND-CPA security, to get as good a bound as we can for AE security (the security bounds for the two notions sum to give an AE security bound - see page 2 of the ""AE bounds"" note).

In view of the INT-CTXT bound there's no point pushing the IND-CPA bound much lower than 2^-60 if the ultimate target is AE security. It just hurts the data limits more without significantly improving AE security.

I just checked the paper. There is a small error I think. AES-GCM in TLS 1.3 is a prf. Under a given key, every input block or just one repeated block 2^35 times, their ciphertext blocks are 2^35 random 128-bit blocks assuming the key has 128 bits of entropy. If there is a collision among the ciphertext blocks, it does not mean anything because it does not say anything about the plaintext blocks.
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6386,TLS 15+,130,1913,"Answer,Disagreement,NeutralResponse,Disagreement,ProposeAction,InformationProviding",1524,-1,"
Finally, 2^-60 is not *our* special chosen number. We wrote a note that contained a table of values, and it's worth noting that we did not make a specific recommendation in our note for which row of the table to select.

(Naturally, though, we'd like security to be as high as possible without making rekeying a frequent event. It's a continuing surprise to me that you are pushing for an option that actually reduces security when achieving higher security does not seem to cause any problems for implementors.)

I respectfully disagree. As I explained before, 2^-32, 2^-57 and 2^-60 are all safe choices. If someone wants to rekey sooner (or often) for operational reason or any other reason, that would be just fine. I just hope that we don’t have text which might imply that 2^-32 is not a safe choice.  In our guidelines, we basically indicate that 2^-32 or below is safe.
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6387,TLS 15+,130,1914,Agreement,1420,-1,"
In your “theory”, 2^-112 would be in “higher” security than 2^-60.

It certainly would, if it were achievable (which it is not for GCM without putting some quite extreme limits on data per key).
",<D4CAF736.3040C%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-16 12:23:05
6388,TLS 15+,130,2005,"ClarificationElicitation,NeutralResponse,UnderstandingNegative,UnderstandingNegative,Question,ContextSetting,NeutralResponse",1911,1911,"
Maybe I don't comprehend what you're trying to propose - but why change this paragraph then?

Coming from an HPC background: It seems to be that with frequent rekeying the chance of successfully performing an exhaustive search attack is -- even for the most advanced adversary -- so slim that we do not need to worry about that. In reality this is a cost-for-computation tradeoff that no one is going to invest in if there're more practical ways to attack (e.g. HUMINT/bad OPSEC, steal a private key, intrude a given network etc.) given the resources and thus money/power needed.
",<8EEF5E9A-FFCD-44F9-9A68-920EDC4C9FA7@azet.org>,azet@azet.org,0.0,0,7,2017-02-16 21:51:22
6389,TLS 15+,130,2007,ContextSetting,1913,1913,">>> In your “theory”, 2^-112 would be in “higher” security than 2^-60.
>> It certainly would, if it were achievable (which it is not for GCM without putting some quite extreme limits on data per key).
>> Cheers,
>> Kenny
> I am going to propose another option and I hope that you and all other people will be happy with.",<8EEF5E9A-FFCD-44F9-9A68-920EDC4C9FA7@azet.org>,azet@azet.org,0.0,0,7,2017-02-16 21:51:22
6390,TLS 15+,130,2008,"ProposeAction,ProposeAction",1913,1913,"
I'd strongly suggest that any changes made to this text are as clear as possible to non-mathematicians/cryptographers. Years of dealing with TLS implementation and protocol vulnerabilities tell us that uncertain wording and missing, clear, explanation for certain choices in standards have caused real-world security problems. It seems to me that the general consensus is that option A is preferable anyhow.
",<8EEF5E9A-FFCD-44F9-9A68-920EDC4C9FA7@azet.org>,azet@azet.org,0.0,0,7,2017-02-16 21:51:22
6391,TLS 15+,130,2033,"NeutralResponse,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction","16,74",74,"
I couldn't make out what b) says, c) is much clearer.

However, even in a), let alone b) or c), the limits are so high that
one should do some greasing, or this feature seems like a prime
candidate for rusting shut.
",<20170210112617.GA21741@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-10 13:26:17
6392,TLS 15+,130,2034,Social,,74,"
-Ilari",<20170210112617.GA21741@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-10 13:26:17
6393,TLS 15+,130,2036,Social,,-1,"Hi Sean and all,",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6394,TLS 15+,130,2109,"Agreement,Agreement",,-1,"
I agree with everyone that the text in (b) was not very good text.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6395,TLS 15+,130,2110,"NeutralResponse,InformationProviding",16,-1,"
The problem with (c) is that it is not precise at places and it leaves out a lot of informative discussions which users should know.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6396,TLS 15+,130,2111,"Question,ExtensionOfPrevious,Question,InformationProviding",2110,-1,"
The sentence ""The maximum amount of plaintext data that can be safely encrypted with  AES-GCM in a session is 2^48 128-bit blocks (2^52 bytes), assuming  probability of success at 1/2^32"" is not clear.  What is the success here? And, with 2^48 (full or partial) blocks, the collision probability is below (not at) 2^(-32).",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6397,TLS 15+,130,2112,"Question,ExtensionOfPrevious,Question,InformationProviding",2111,-1,"
And, ""safely encrypted"", what does this mean? I would like not having a collision among 128-bit blocks of ciphertexts, but I dont see any damage to the data owner who sends the encrypted data over a TLS session.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6398,TLS 15+,130,2113,"ContextSetting,InformationProviding,ContextSetting",,-1,"
I copied the text that I later proposed under the discussion of PR#769 below.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6399,TLS 15+,130,2114,"InformationProviding,ExtensionOfPrevious",2113,-1,"
"" To use AES-GCM to provide authenticity of authenticated data, confidentiality of plaintext content, and information leakage [0] protection for the plaintext safely, the limit of total ciphertext under a single key is ( (TLSCipherText.length / 16) / ceiling (TLSCipherText.length / 16) ) times 2^48 128-bit blocks.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6400,TLS 15+,130,2115,"ExtensionOfPrevious,InformationProviding",2114,-1,"
When the data limit is reached, the chance of having a collision among 128-bit blocks of the ciphertext is below 2^(-32) which is negligible.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6401,TLS 15+,130,2116,"ExtensionOfPrevious,InformationProviding",2115,-1,"
Since the block size of AES is 128 bits, there will be collisions among different sets of ciphertext from multiple sessions using GCM (or any other modes of AES) when the total amount of the ciphertext of all considered sessions is more than 2^64 128-bit blocks. This fact does not seem to create a practical security weakness of using AES GCM.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6402,TLS 15+,130,2117,"ExtensionOfPrevious,InformationProviding",2116,-1,"
For ChaCha20/Poly1305, the record sequence number would wrap before the safety limit is reached. See [AEAD-LIMITS] for further analysis.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6403,TLS 15+,130,2118,"ExtensionOfPrevious,InformationProviding",2117,-1,"
[0]: Information leakage in the context of TLS is a chosen-plaintext distinguishing attack where the attacker provides 2 128-bit plaintext blocks to a GCM encryption engine, after seeing one encrypted block for one of the 2 plaintext blocks, the attacker knows which plaintext block was encrypted. Or, it means that there is a collision among 128-bit blocks of the ciphertext. """,<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6404,TLS 15+,130,2119,"ExtensionOfPrevious,InformationProviding",2118,-1,"
1.  The text above uses blocks instead of bytes or records of ciphertext.
2.  The partial block situation is taken into account.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6405,TLS 15+,130,2120,"ExtensionOfPrevious,ContextSetting,ContextSetting,ProposeAction",2119,-1,"
Or, using good text from PR769 provided by brainhub, the first paragraph could be replaced by the following.",<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6406,TLS 15+,130,2121,"ProposeAction,ExtensionOfPrevious",2120,-1,"
""To use AES-GCM to provide authenticity of authenticated data, confidentiality of plaintext content, and information leakage [0] protection for the plaintext, the limit of total ciphertext under a single key is 2^48 128-bit blocks with the ciphertext size being rounded up to the next 16-byte boundary. """,<CY4PR09MB146491519DC49811E2A8CE79F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 12:38:34
6407,TLS 15+,130,2188,"InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction",,-1,"Dear colleagues:

I would suggest adding the following paragraph at the end of Section 5.5:

[current text of Section 5.5]

There are cryptographic limits on the amount of plaintext which can be
safely encrypted under a given set of keys.[AEAD-LIMITS]
<https://tlswg.github.io/tls13-spec/#AEAD-LIMITS>provides an analysis of
these limits under the assumption that the underlying primitive (AES or
ChaCha20) has no weaknesses. Implementations SHOULD do a key
updateSection 4.6.3
<https://tlswg.github.io/tls13-spec/#key-update>prior to reaching these
limits.

For AES-GCM, up to 2^24.5 full-size records (about 24 million) may be
encrypted on a given connection while keeping a safety margin of
approximately 2^-57 for Authenticated Encryption (AE) security. For
ChaCha20/Poly1305, the record sequence number would wrap before the
safety limit is reached.

[suggested additional text]

The above upper limits do not take into account potential side channel
attacks, which - in some implementations - have been shown to be
successful at recovering keying material with a relatively small number
of messages encrypted using the same key. While results are highly
implementation-specific, thereby making it hard to provide precise
guidance, prudence suggests that implementations should not reuse keys
ad infinitum. Implementations SHALL therefore always implement the key
update mechanism of Section 4.6.3.

{editorial note: perhaps, one should impose the limit 2^20, just to make
sure people do not ""forget"" to implement key updates?}
",<eeef0b36-2fdd-8de0-3bd7-7f0c5b68e9e9@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2017-02-10 10:51:39
6408,TLS 15+,130,2189,"ExtensionOfPrevious,ExtensionOfPrevious",2188,-1,"
See also my email of August 29, 2016:
https://mailarchive.ietf.org/arch/msg/cfrg/SUuLDg0wTvjR7H46oNyEtyGVdno
",<eeef0b36-2fdd-8de0-3bd7-7f0c5b68e9e9@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2017-02-10 10:51:39
6409,TLS 15+,130,2252,Social,,-1,"Hi Rene,
",<D4C3749F.2F856%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:47:57
6410,TLS 15+,130,2254,"ContextSetting,ProposeAction",,-1,"
Dear colleagues:

I would suggest adding the following paragraph at the end of Section 5.5:

[current text of Section 5.5]
",<D4C3749F.2F856%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:47:57
6411,TLS 15+,130,2255,"Question,NeutralResponse,ClarificationElicitation",2188,-1,"
There are cryptographic limits on the amount of plaintext which can be safely encrypted under a given set of keys. [AEAD-LIMITS]<https://tlswg.github.io/tls13-spec/#AEAD-LIMITS> provides an analysis of these limits under the assumption that the underlying primitive (AES or ChaCha20) has no weaknesses. Implementations SHOULD do a key update Section 4.6.3<https://tlswg.github.io/tls13-spec/#key-update> prior to reaching these limits.

For AES-GCM, up to 2^24.5 full-size records (about 24 million) may be encrypted on a given connection while keeping a safety margin of approximately 2^-57 for Authenticated Encryption (AE) security. For ChaCha20/Poly1305, the record sequence number would wrap before the safety limit is reached.

[suggested additional text]

The above upper limits do not take into account potential side channel attacks, which - in some implementations - have been shown to be successful at recovering keying material with a relatively small number of messages encrypted using the same key. While results are highly implementation-specific, thereby making it hard to provide precise guidance, prudence suggests that implementations should not reuse keys ad infinitum. Implementations SHALL therefore always implement the key update mechanism of Section 4.6.3.

{editorial note: perhaps, one should impose the limit 2^20, just to make sure people do not ""forget"" to implement key updates?}

How do you do side channel attacks on TLS ? Do these side-channel attacks work for AES-GCM only in TLS 1.3 ?
",<D4C3749F.2F856%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:47:57
6412,TLS 15+,130,2256,InformationProviding,,-1,"
See also my email of August 29, 2016:
https://mailarchive.ietf.org/arch/msg/cfrg/SUuLDg0wTvjR7H46oNyEtyGVdno
",<D4C3749F.2F856%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:47:57
6413,TLS 15+,130,2257,"Social,InformationProviding,ProposeAction",,-1,"
All,

We’ve got two outstanding PRs that propose changes to draft-ietf-tls-tls13 Section 5.5 “Limits on Key Usage”.  As it relates to rekeying, these limits have been discussed a couple of times and we need to resolve once and for all whether the TLS WG wants to:

a) Close these two PRs and go with the existing text [0]
b) Adopt PR#765 [1]
c) Adopt PR#769 [2]

Please indicate you preference to the TLS mailing list before Feb 17.  Note that unless there’s clear consensus to change the text will remain as is (i.e., option a).

J&S

[0] https://tlswg.github.io/tls13-spec/#rfc.section.5.5
[1] https://github.com/tlswg/tls13-spec/pull/765
[2] https://github.com/tlswg/tls13-spec/pull/769
Cfrg mailing list
Cfrg@irtf.org<mailto:Cfrg@irtf.org>https://www.irtf.org/mailman/listinfo/cfrg
",<D4C3749F.2F856%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 18:47:57
6414,TLS 15+,130,2378,"Answer,NeutralResponse,Social,ContextSetting,ProposeAction,InformationProviding",2255,-1,"Hi Quynh:

Not sure where to start (there is vast literature on side channel
attacks and other implementation attacks). A good starting point would
be the book [1], but one could also look at some NIST publications [2].

Side channel attacks differs from cryptanalytic attacks in that it does
not merely study I/O behavior of crypto contructs, but also looks into
what information can be obtained from what is going on ""under the hood""
of the computations (power consumption, radiation, timing, etc; or even
invasive attacks). Most commonly one looks at crypto building blocks,
but ultimately side channels can comprise any system behavior (""Lucky13""
does, e.g., exploit this, if I remember correctly).

From the last page of [2]: Finally, the most important conclusion from
this paper is that it is not only a necessity but also a must, in the
coming version of FIPS 140-3 standard, to evaluate cryptographic modules
for their resistivity against SCA attacks.

Ref:
[1] Stefan Mangard, Elisabeth Oswald, Thomas Popp, ""Power Analysis
Attacks - Revealing the Secrets of Smart Cards"", Springer, 2007.
[2]
http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-3/physec/papers/physecpaper19.pdf
[2]
",<51978c0d-f944-5ebf-ee85-cdc801568e8a@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2017-02-10 14:02:14
6415,TLS 15+,130,2412,Social,,2378,"Hi Rene,",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6416,TLS 15+,130,2477,Social,,-1,"Hi Rene,
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6417,TLS 15+,130,2478,"Question,NeutralResponse,ClarificationElicitation,NeutralResponse",2378,-1,"
I care about side channel attacks in general as much as you do. But my question was that how you carry out those attacks on GCM in TLS 1.3's servers and clients ? Do those side-channel attacks apply only to GCM in TLS 1.3 ?
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6418,TLS 15+,130,2479,Social,,-1,"
Quynh.
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6419,TLS 15+,130,2481,"Social,InformationProviding,ContextSetting,ProposeAction",,-1,"
Hi Quynh:

Not sure where to start (there is vast literature on side channel attacks and other implementation attacks). A good starting point would be the book [1], but one could also look at some NIST publications [2].

Side channel attacks differs from cryptanalytic attacks in that it does not merely study I/O behavior of crypto contructs, but also looks into what information can be obtained from what is going on ""under the hood"" of the computations (power consumption, radiation, timing, etc; or even invasive attacks). Most commonly one looks at crypto building blocks, but ultimately side channels can comprise any system behavior (""Lucky13"" does, e.g., exploit this, if I remember correctly).
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6420,TLS 15+,130,2482,"InformationProviding,ExtensionOfPrevious",2378,2378,"
Ref:
[1] Stefan Mangard, Elisabeth Oswald, Thomas Popp, ""Power Analysis Attacks - Revealing the Secrets of Smart Cards"", Springer, 2007.
[2] http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-3/physec/papers/physecpaper19.pdf
[2]
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6421,TLS 15+,130,2484,"ContextSetting,ProposeAction,Social",,2378,"
Dear colleagues:

I would suggest adding the following paragraph at the end of Section 5.5:

[current text of Section 5.5]
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6422,TLS 15+,130,2485,ExtensionOfPrevious,2484,2378,"
There are cryptographic limits on the amount of plaintext which can be safely encrypted under a given set of keys. [AEAD-LIMITS]<https://tlswg.github.io/tls13-spec/#AEAD-LIMITS> provides an analysis of these limits under the assumption that the underlying primitive (AES or ChaCha20) has no weaknesses. Implementations SHOULD do a key update Section 4.6.3<https://tlswg.github.io/tls13-spec/#key-update> prior to reaching these limits.

For AES-GCM, up to 2^24.5 full-size records (about 24 million) may be encrypted on a given connection while keeping a safety margin of approximately 2^-57 for Authenticated Encryption (AE) security. For ChaCha20/Poly1305, the record sequence number would wrap before the safety limit is reached.

[suggested additional text]

The above upper limits do not take into account potential side channel attacks, which - in some implementations - have been shown to be successful at recovering keying material with a relatively small number of messages encrypted using the same key. While results are highly implementation-specific, thereby making it hard to provide precise guidance, prudence suggests that implementations should not reuse keys ad infinitum. Implementations SHALL therefore always implement the key update mechanism of Section 4.6.3.

{editorial note: perhaps, one should impose the limit 2^20, just to make sure people do not ""forget"" to implement key updates?}

How do you do side channel attacks on TLS ? Do these side-channel attacks work for AES-GCM only in TLS 1.3 ?
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6423,TLS 15+,130,2486,ExtensionOfPrevious,2485,2378,"
See also my email of August 29, 2016:
https://mailarchive.ietf.org/arch/msg/cfrg/SUuLDg0wTvjR7H46oNyEtyGVdno
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6424,TLS 15+,130,2487,"Social,InformationProviding,ProposeAction",,2378,"
All,

We’ve got two outstanding PRs that propose changes to draft-ietf-tls-tls13 Section 5.5 “Limits on Key Usage”.  As it relates to rekeying, these limits have been discussed a couple of times and we need to resolve once and for all whether the TLS WG wants to:

a) Close these two PRs and go with the existing text [0]
b) Adopt PR#765 [1]
c) Adopt PR#769 [2]

Please indicate you preference to the TLS mailing list before Feb 17.  Note that unless there’s clear consensus to change the text will remain as is (i.e., option a).

J&S

[0] https://tlswg.github.io/tls13-spec/#rfc.section.5.5
[1] https://github.com/tlswg/tls13-spec/pull/765
[2] https://github.com/tlswg/tls13-spec/pull/769
Cfrg mailing list
Cfrg@irtf.org<mailto:Cfrg@irtf.org>https://www.irtf.org/mailman/listinfo/cfrg
",<CY4PR09MB146415E668A3DA0484190BC9F3440@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-10 19:36:27
6425,TLS 15+,130,2505,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction","15,16,17",16,"
I thought the cited paper sorted this out like a year ago.

In favor of option a
",<95D221C7-40A6-4BDD-B8CD-5C4F9C405D3F@azet.org>,azet@azet.org,0.0,0,7,2017-02-14 01:21:25
6426,TLS 15+,130,2524,"NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding","17,2505",2505,"
I am also in favor of option A.

The wording in option B is simultaneously much more unclear and much more
verbose. I consider it a regression.

Option C is more similar to option A, but not an improvement, IMO.
",<CAHOTMVJzogVu6K0MDNBux2STtbzkGT0yAopGOaEJXEzhOwSL6w@mail.gmail.com>,bascule@gmail.com,0.0,0,5,2017-02-13 15:25:06
6427,TLS 15+,130,2526,Social,,-1,"Hi Sean, Joe, Eric and all,",<CY4PR09MB1464243342F19FCBE48C37E7F3550@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-25 14:28:40
6428,TLS 15+,130,2569,"ContextSetting,ContextSetting",,-1,"
I would like to address my thoughts/suggestions on 2 issues in option a.",<CY4PR09MB1464243342F19FCBE48C37E7F3550@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-25 14:28:40
6429,TLS 15+,130,2570,"ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction",2569,-1,"
1) The data limit should be addressed in term of blocks, not records. When the record size is not the full size, some user might not know what to do. When the record size is 1 block, the limit of 2^24.5 blocks (records) is way too low unnecessarily for the margin of 2^-60.  In that case, 2^34.5 1-block records is the limit which still achieves the margin of 2^-60.",<CY4PR09MB1464243342F19FCBE48C37E7F3550@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-25 14:28:40
6430,TLS 15+,130,2571,"ProposeAction,ExtensionOfPrevious",2569,-1,"
2) To achieve the margin of 2^-57 as the current text says, the limit number should be 2^36 blocks.",<CY4PR09MB1464243342F19FCBE48C37E7F3550@CY4PR09MB1464.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2017-02-25 14:28:40
6431,TLS 15+,130,2586,"Disagreement,NeutralResponse,InformationProviding,Disagreement",2570,2570,"
I respectfully disagree. TLS deals in records not in blocks, so in the end any semantic change here will just confuse implementors, which isn't a good idea in my opinion.
",<26137F3B-5655-44CA-877E-7168CE02DBF1@azet.org>,azet@azet.org,0.0,0,7,2017-03-01 13:11:25
6432,TLS 15+,130,2610,"NeutralResponse,NeutralResponse",2586,-1,"Hi Sean, Joe, Eric and all,
I would like to address my thoughts/suggestions on 2 issues in option a.
1) The data limit should be addressed in term of blocks, not records. When the record size is not the full size, some user might not know what to do. When the record size is 1 block, the limit of 2^24.5 blocks (records) is way too low unnecessarily for the margin of 2^-60.  In that case, 2^34.5 1-block records is the limit which still achieves the margin of 2^-60.

I respectfully disagree. TLS deals in records not in blocks, so in the end any semantic change here will just confuse implementors, which isn't a good idea in my opinion.

Over the discussion of the PRs, the preference was blocks.

Quynh.
",<D4DC341D.311E1%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 13:18:54
6433,TLS 15+,130,2611,Social,,-1,"
Aaron",<D4DC341D.311E1%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 13:18:54
6434,TLS 15+,130,2637,"ClarificationElicitation,Disagreement,NeutralResponse,ProposeAction,UnderstandingNegative,InformationProviding,ProposeAction",2610,2610,"
I don't see a clear preference. I see Brian Smith suggested switching to blocks to be more precise in a PR. But in general it seems to me that ""Option A"" was preferred in this thread anyhow - so these PRs aren't relevant? I'm not sure that text on key-usage limits in blocks in a spec that fundamentally deals in records is less confusing, quite the opposite (at least to me). As I pointed out earlier: I strongly recommend that any changes to the spec are as clear als possible to engineers (non-crypto/math people) -- e.g. why the spec is suddenly dealing in blocks instead of records et cetera. Again; I really don't see any reason to change text here - to me all suggested changes are even more confusing.
",<2572E3FC-0139-4946-A12D-9D9509C402F1@azet.org>,azet@azet.org,0.0,0,7,2017-03-01 14:24:37
6435,TLS 15+,130,2676,"NeutralResponse,UnderstandingNegative,NeutralResponse,UnderstandingNegative,InformationProviding",2637,-1,"Hi Sean, Joe, Eric and all,
I would like to address my thoughts/suggestions on 2 issues in option a.
1) The data limit should be addressed in term of blocks, not records. When the record size is not the full size, some user might not know what to do. When the record size is 1 block, the limit of 2^24.5 blocks (records) is way too low unnecessarily for the margin of 2^-60.  In that case, 2^34.5 1-block records is the limit which still achieves the margin of 2^-60.
I respectfully disagree. TLS deals in records not in blocks, so in the end any semantic change here will just confuse implementors, which isn't a good idea in my opinion.
Over the discussion of the PRs, the preference was blocks.

I don't see a clear preference. I see Brian Smith suggested switching to blocks to be more precise in a PR. But in general it seems to me that ""Option A"" was preferred in this thread anyhow - so these PRs aren't relevant? I'm not sure that text on key-usage limits in blocks in a spec that fundamentally deals in records is less confusing, quite the opposite (at least to me). As I pointed out earlier: I strongly recommend that any changes to the spec are as clear als possible to engineers (non-crypto/math people) -- e.g. why the spec is suddenly dealing in blocks instead of records et cetera. Again; I really don't see any reason to change text here - to me all suggested changes are even more confusing.

Hi Aaron,

The  technical reasons I explained are reasons for using records. I don’t see how that is confusing.

If you like records, then the record number = the total blocks / the record size in blocks: this is simplest already.

Quynh.
",<D4DC4473.311F2%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:31:30
6436,TLS 15+,130,2759,Social,,-1,"Hi,

On 01/03/2017 14:31, ""TLS on behalf of Dang, Quynh (Fed)""",<D4DC8CDB.8A84E%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-03-01 14:38:04
6437,TLS 15+,130,2761,"Disagreement,NeutralResponse,Disagreement,ProposeAction",2676,2676,"
That formula does not correctly compute how many records have been sent on
a connection, because the record size in blocks is variable, not constant.
You can modify it to get bounds on the total number of records sent, but
the bounds are sloppy because some records only consume 2 blocks (one for
encryption, one for masking in GHASH) while some consume far more.

It's simpler for an implementation to count how many records have been
sent on a connection .... by using the connection's sequence number. This
puts less burden on the implementation/implementer.
",<D4DC8CDB.8A84E%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-03-01 14:38:04
6438,TLS 15+,130,2857,Social,,-1,"
Hi,

On 01/03/2017 14:31, ""TLS on behalf of Dang, Quynh (Fed)""",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6439,TLS 15+,130,2861,NeutralResponse,2586,-1,"Hi Sean, Joe, Eric and all,
I would like to address my thoughts/suggestions on 2 issues in option
a.
1) The data limit should be addressed in term of blocks, not records.
When the record size is not the full size, some user might not know
what to do. When the record size is 1 block, the limit of 2^24.5
blocks (records) is way too low unnecessarily for
the margin of 2^-60.  In that case, 2^34.5 1-block records is the
limit which still achieves the margin of 2^-60.
I respectfully disagree. TLS deals in records not in blocks, so in the
end any semantic change here will just confuse implementors, which
isn't a good idea in my opinion.
Over the discussion of the PRs, the preference was blocks.
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6440,TLS 15+,130,2862,"UnderstandingNegative,ProposeAction,InformationProviding",2610,-1,"
I don't see a clear preference. I see Brian Smith suggested switching to
blocks to be more precise in a PR. But in general it seems to me that
""Option A"" was preferred in this thread anyhow - so these PRs aren't
relevant? I'm not sure that text on key-usage
limits in blocks in a spec that fundamentally deals in records is less
confusing, quite the opposite (at least to me). As I pointed out
earlier: I strongly recommend that any changes to the spec are as clear
als possible to engineers (non-crypto/math people)
-- e.g. why the spec is suddenly dealing in blocks instead of records
et cetera. Again; I really don't see any reason to change text here - to
me all suggested changes are even more confusing.
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6441,TLS 15+,130,2863,Social,,-1,"
Hi Aaron,
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6442,TLS 15+,130,2864,"InformationProviding,UnderstandingNegative",2637,-1,"
The  technical reasons I explained are reasons for using records. I don’t
see how that is confusing.
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6443,TLS 15+,130,2865,InformationProviding,,-1,"
If you like records, then the record number = the total blocks / the
record size in blocks: this is simplest already.
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6444,TLS 15+,130,2866,"Disagreement,ProposeAction,NeutralResponse",2761,-1,"
That formula does not correctly compute how many records have been sent on
a connection, because the record size in blocks is variable, not constant.
You can modify it to get bounds on the total number of records sent, but
the bounds are sloppy because some records only consume 2 blocks (one for
encryption, one for masking in GHASH) while some consume far more.

It's simpler for an implementation to count how many records have been
sent on a connection .... by using the connection's sequence number. This
puts less burden on the implementation/implementer.

I think the record size is configurable and it does not change regularly in the same session (or connection).  Somebody corrects me here!

Quynh.
",<D4DC48E2.31204%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 14:48:36
6445,TLS 15+,130,2986,"Disagreement,NeutralResponse,Disagreement",2866,-1,"That is not how HTTP works. Lots of records are small because they result
from small writes.
",<CACsn0cmf1AN1roDpQykoVJgqC-rhvauVwSEvokG9wiCNkk==yw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-03-01 10:36:57
6446,TLS 15+,130,3107,"ClarificationElicitation,NeutralResponse,Question,ContextSetting,Social","2866,2986",-1,"
That is not how HTTP works. Lots of records are small

OK. What is the percentage ? Even all records were small, providing a correct number would be a good thing. If someone wants to rekey a lot often, I am not suggesting against that.

Quynh.

because they result from small writes.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6447,TLS 15+,130,3109,Social,,-1,"
Hi,

On 01/03/2017 14:31, ""TLS on behalf of Dang, Quynh (Fed)""",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6448,TLS 15+,130,3113,"InformationProviding,Social,ContextSetting,ProposeAction,Disagreement,InformationProviding",,-1,"Hi Sean, Joe, Eric and all,
I would like to address my thoughts/suggestions on 2 issues in option
a.
1) The data limit should be addressed in term of blocks, not records.
When the record size is not the full size, some user might not know
what to do. When the record size is 1 block, the limit of 2^24.5
blocks (records) is way too low unnecessarily for
the margin of 2^-60.  In that case, 2^34.5 1-block records is the
limit which still achieves the margin of 2^-60.
I respectfully disagree. TLS deals in records not in blocks, so in the
end any semantic change here will just confuse implementors, which
isn't a good idea in my opinion.
Over the discussion of the PRs, the preference was blocks.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6449,TLS 15+,130,3114,"ProposeAction,InformationProviding,UnderstandingNegative",2610,-1,"
I don't see a clear preference. I see Brian Smith suggested switching to
blocks to be more precise in a PR. But in general it seems to me that
""Option A"" was preferred in this thread anyhow - so these PRs aren't
relevant? I'm not sure that text on key-usage
limits in blocks in a spec that fundamentally deals in records is less
confusing, quite the opposite (at least to me). As I pointed out
earlier: I strongly recommend that any changes to the spec are as clear
als possible to engineers (non-crypto/math people)
-- e.g. why the spec is suddenly dealing in blocks instead of records
et cetera. Again; I really don't see any reason to change text here - to
me all suggested changes are even more confusing.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6450,TLS 15+,130,3115,Social,,-1,"
Hi Aaron,
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6451,TLS 15+,130,3116,"InformationProviding,UnderstandingNegative",2637,-1,"
The  technical reasons I explained are reasons for using records. I don’t
see how that is confusing.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6452,TLS 15+,130,3117,InformationProviding,,-1,"
If you like records, then the record number = the total blocks / the
record size in blocks: this is simplest already.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6453,TLS 15+,130,3118,"Disagreement,ProposeAction,NeutralResponse,Social",2676,-1,"
That formula does not correctly compute how many records have been sent on
a connection, because the record size in blocks is variable, not constant.
You can modify it to get bounds on the total number of records sent, but
the bounds are sloppy because some records only consume 2 blocks (one for
encryption, one for masking in GHASH) while some consume far more.

It's simpler for an implementation to count how many records have been
sent on a connection .... by using the connection's sequence number. This
puts less burden on the implementation/implementer.

I think the record size is configurable and it does not change regularly in the same session (or connection).  Somebody corrects me here!

Quynh.
",<D4DC7F7F.3122D%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-01 18:44:08
6454,TLS 15+,130,3135,"Answer,UnderstandingNegative,Answer,UnderstandingNegative,InformationProviding",3107,3107,"
It will vary greatly depending on circumstance.  Most of the time the
record size matches the MTU.  Other times it matches the write size,
which can be only a small number of octets.  For bulk transfers it can
approach the record maximum.  All on the same connection sometimes.

I really don't know what you are suggesting here.  The point is the
accounting in terms of records doesn't really give you any insight
into the number of blocks.",<CABkgnnVyYGqacWfOWhnO6WRnPebNV=T9+gLnnyo-+hkCN=SvGg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-03-02 08:18:21
6455,TLS 15+,130,3167,"NeutralResponse,Thanking,Social,Thanking,NeutralResponse","3135,3167",-1,"OK. What is the percentage ? Even all records were small, providing a
correct number would be a good thing. If someone wants to rekey a lot often,
I am not suggesting against that.

It will vary greatly depending on circumstance.  Most of the time the
record size matches the MTU.  Other times it matches the write size,
which can be only a small number of octets.  For bulk transfers it can
approach the record maximum.  All on the same connection sometimes.

I really don't know what you are suggesting here.  The point is the
accounting in terms of records doesn't really give you any insight
into the number of blocks.

Hi Martin,

Thank you for the information.

In the PRs’ discussions, I saw that Brian and Rich wanted blocks. You, Eric and other people were comfortably discussing the issue in term of blocks. Implementing and running TLS were your career, so I made suggestions based on blocks.

Aaron wanted records, so I gave him the equation to figure that out. I did not mean to suggest to use records.

Quynh.",<D4DD63AF.31268%qdang@nist.gov>,quynh.dang@nist.gov,0.0,0,9,2017-03-02 11:00:59
6456,TLS 15+,130,3206,"NeutralResponse,Question,ProposeAction,Question",2637,2637,"
1. Consider an implementation that negotiates with another
implementation to use a very large record size such as 1MB records. If
the limit is specified in terms of records then the limit would need
to be readjusted to the new max record size, or else the new extension
is potentially unsafe to use. This shows that specifying the limits in
terms of records is brittle.

2. If it is only safe to use an AES-GCM key for a certain number of
blocks, where in the code is the best place to enforce the limit on
the number of blocks? IMO, it is better to enforce it in the AES-GCM
implementation itself, underneath the TLS layer. In that case the
limit is best expressed in terms of the number of blocks. Specifying
the limit in terms of records would be optimizing for implementations
that enforce the limit at the wrong layer of abstraction.
",<CAFewVt5gCGrGrJRMQFiqXP_zeNONS45VhmJWYiyXyTkKt6ezPw@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2017-03-02 11:44:12
6457,TLS 15+,130,3207,NeutralResponse,2637,2637,"> As I pointed out earlier: I strongly recommend that any changes
> to the spec are as clear als possible to engineers
> (non-crypto/math people) -- e.g. why the spec is suddenly
> dealing in blocks instead of records et cetera. Again; I really
> don't see any reason to change text here - to me all suggested
> changes are even more confusing.",<CAFewVt5gCGrGrJRMQFiqXP_zeNONS45VhmJWYiyXyTkKt6ezPw@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2017-03-02 11:44:12
6458,TLS 15+,130,3208,NeutralResponse,2637,2637,"
Given a limit in blocks, the arithmetic to keep track of the number of
blocks is trivial, and very similar to the arithmetic that's already
needed to split up a large byte stream into records and keep track of
the record sequence number.
",<CAFewVt5gCGrGrJRMQFiqXP_zeNONS45VhmJWYiyXyTkKt6ezPw@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2017-03-02 11:44:12
6459,TLS 15+,130,3266,"Agreement,NeutralResponse,ContextSetting,ProposeAction,ContextSetting",3206,-1,"I also think that counting in blocks is cleaner. Counting in bytes is a
close alternative.

I have a few nits below:
",<cd2835c7-d093-60b0-df9c-998d77a6a26e@brainhub.org>,crypto@brainhub.org,0.0,0,7,2017-03-02 15:15:28
6460,TLS 15+,130,3268,"Agreement,NeutralResponse,Agreement",3206,3206,"
Hm, while I agree that counting in wrong units is the main problem here,
we over-count with records, which means that we re-key faster than needed.
",<cd2835c7-d093-60b0-df9c-998d77a6a26e@brainhub.org>,crypto@brainhub.org,0.0,0,7,2017-03-02 15:15:28
6461,TLS 15+,130,3270,"NeutralResponse,NeutralResponse",3206,3206,"
Given that the event of reaching the limit requires TLS-level action,
checking the limit at the TLS level seems reasonable. The lower-level
block-cipher code should still have the logic to error out (using a more
relaxed limit).
",<cd2835c7-d093-60b0-df9c-998d77a6a26e@brainhub.org>,crypto@brainhub.org,0.0,0,7,2017-03-02 15:15:28
6462,TLS 15+,130,3272,"NeutralResponse,ProposeAction,ProposeAction","3206,3208",3208,"
Also please consider counting in bytes. This may be more natural,
especially with AES-GCM that doesn't expose higher levels to the block
size granularity (as much as CBC does, anyway).
",<cd2835c7-d093-60b0-df9c-998d77a6a26e@brainhub.org>,crypto@brainhub.org,0.0,0,7,2017-03-02 15:15:28
6463,TLS 15+,130,3275,Social,,-1,Hi,<3F458D44-2232-498C-944F-C3F72A53291A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-03-03 11:22:08
6464,TLS 15+,130,3284,"InformationProviding,NeutralResponse",3272,-1,"
As an implementer I have no problem counting records, bytes or blocks (OK, the last you usually don’t count directly but (n+15)/16 is not beyond the capabilities of any implementer)",<3F458D44-2232-498C-944F-C3F72A53291A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-03-03 11:22:08
6465,TLS 15+,130,3285,"ExtensionOfPrevious,ProposeAction,ProposeAction",3284,-1,"
So IMO whichever gives the tightest bound should be selected, and that means blocks.",<3F458D44-2232-498C-944F-C3F72A53291A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-03-03 11:22:08
6466,TLS 15+,130,3286,"InformationProviding,InformationProviding",,-1,"
Exercising the rekey code is up to developers, not document writers.",<3F458D44-2232-498C-944F-C3F72A53291A@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-03-03 11:22:08
6467,TLS 15+,130,3288,"ContextSetting,StateDecision,InformationProviding,StateDecision",,-1,"After many emails about the wording for s5.5 Limits on Key Usage, it’s time to judge consensus on whether or not to make any changes to that section.  The important thing is that the SHOULD implement the key update from s4.5.3 was never in question.  There was no consensus to change the actual GCM limits on key usage; again the text related to ChaCha20/Poly1305 never really was in question.  The discussion has wound down to whether it was better to count records or bytes/blocks for the GCM limit calculation.  We didn’t see any strong consensus to change this description.  Therefore, we see no consensus to change the text in s5.5.  ekr please close PR#765 and PR#769.",<E4077608-45D0-489A-B447-B33BC48B2984@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-03-09 21:18:37
6468,TLS 15+,130,3309,Social,,-1,"
J&S",<E4077608-45D0-489A-B447-B33BC48B2984@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-03-09 21:18:37
6469,TLS 15+,130,3312,"Agreement,NeutralResponse,Thanking,Thanking,Agreement,ProposeAction",3288,-1,"Thanks.  I agree.  I think that the existing text is more helpful to the implementer.  If the details of the analysis do in the document, it should be in the security considerations.",<FB493451-115C-4BD5-8428-2B05E4EA763B@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-03-10 10:42:08
6470,TLS 15+,131,304,"InformationProviding,ContextSetting",,-1,"INTERNET ENGINEERING STEERING GROUP (IESG)
Summarized Agenda for the 2018-03-08 IESG Teleconference",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6471,TLS 15+,131,305,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",304,-1,"
This agenda was generated at 2018-03-01 16:38:57 PST
Up-to-date web version of this agenda can be found at:
https://datatracker.ietf.org/iesg/agenda/",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6472,TLS 15+,131,306,"ContextSetting,InformationProviding,ExtensionOfPrevious",305,-1,"
1. Administrivia
1.1 Roll call
1.2 Bash the agenda
1.3 Approval of the minutes of past telechats
1.4 List of remaining action items from last telechat",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6473,TLS 15+,131,307,"ContextSetting,ExtensionOfPrevious,ContextSetting",304,-1,"
OUTSTANDING TASKS",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6474,TLS 15+,131,308,"InformationProviding,InformationProviding,ExtensionOfPrevious",307,-1,"
Last updated: February 22, 2018",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6475,TLS 15+,131,309,"InformationProviding,InformationProviding,ExtensionOfPrevious",307,-1,"
o Eric Rescorla to find a designated expert for RFC 7009 [IANA
#1048048].
- Added 2018-02-02 (1 telechat ago)
o Kathleen Moriarty and Benjamin Kaduk to find a designated expert for
RFC 5793 [IANA #1050763].
- Added 2018-02-22 (1 telechats ago)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6476,TLS 15+,131,310,"ContextSetting,InformationProviding,ExtensionOfPrevious",304,-1,"
2. Protocol actions
2.1 WG submissions
2.1.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6477,TLS 15+,131,311,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-netmod-rfc6087bis-18  - IETF stream
Guidelines for Authors and Reviewers of YANG Data Model Documents
(Best Current Practice)
Token: Benoit Claise
IANA Review: IANA - Review Needed
Consensus: Yes
Last call expires: 2018-03-07
Reviews: SECDIR Telechat Review: Ready
RTGDIR Telechat Review - due: 2018-03-07
OPSDIR Telechat Review - due: 2018-03-06
GENART Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6478,TLS 15+,131,312,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-tls-tls13-24  - IETF stream
The Transport Layer Security (TLS) Protocol Version 1.3 (Proposed
Standard)
Token: Kathleen Moriarty
IANA Review: IANA - Not OK
Consensus: Yes
Last call expires: 2018-03-02
Reviews: SECDIR Last Call Review: Ready
GENART Last Call Review - due: 2018-03-02
TSVART Last Call Review - due: 2018-03-01
OPSDIR Last Call Review - due: 2018-03-01",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6479,TLS 15+,131,313,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-teas-rsvp-egress-protection-13  - IETF stream
Extensions to RSVP-TE for LSP Egress Local Protection (Proposed
Standard)
Token: Deborah Brungard
IANA Review: Version Changed - Review Needed
Consensus: Yes
Reviews: SECDIR Telechat Review: Ready
SECDIR Last Call Review (of -09): Has Issues
GENART Last Call Review (of -09): On the Right Track
RTGDIR Last Call Review (of -09): Ready
OPSDIR Last Call Review - due: 2018-02-27
GENART Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6480,TLS 15+,131,314,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-ace-cbor-web-token-12  - IETF stream
CBOR Web Token (CWT) (Proposed Standard)
Token: Kathleen Moriarty
IANA Review: IANA - Review Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: GENART Telechat Review: Almost Ready
OPSDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6481,TLS 15+,131,315,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-netmod-syslog-model-23  - IETF stream
A YANG Data Model for Syslog Configuration (Proposed Standard)
Token: Benoit Claise
IANA Review: Version Changed - Review Needed
Consensus: Yes
Reviews: SECDIR Last Call Review (of -21): Has Issues
YANGDOCTORS Last Call Review (of -17): Ready with Issues
OPSDIR Last Call Review - due: 2018-02-28
GENART Last Call Review - due: 2018-02-28",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6482,TLS 15+,131,316,"InformationProviding,InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-core-object-security-08  - IETF stream
Object Security for Constrained RESTful Environments (OSCORE)
(Proposed Standard)
Token: Alexey Melnikov
IANA Review: IANA - Not OK
Consensus: Yes
Last call expires: 2018-03-02
Reviews: GENART Last Call Review: Ready with Nits
OPSDIR Telechat Review: Has Issues
OPSDIR Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6483,TLS 15+,131,317,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-directory-assisted-encap-09  - IETF stream
Directory Assisted TRILL Encapsulation (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA OK - No Actions Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: GENART Telechat Review: Ready
RTGDIR Early Review (of -02): Not Ready
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6484,TLS 15+,131,318,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-smart-endnodes-09  - IETF stream
TRILL Smart Endnodes (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA OK - Actions Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: GENART Telechat Review (of -08): Ready with Issues
RTGDIR Early Review (of -02): Has Issues
GENART Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6485,TLS 15+,131,319,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-multi-topology-05  - IETF stream
TRILL: Multi-Topology (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA OK - Actions Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: RTGDIR Early Review (of -01): Has Nits
GENART Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6486,TLS 15+,131,320,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-over-ip-15  - IETF stream
TRILL (Transparent Interconnection of Lots of Links) Over IP
Transport (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA - Review Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: TSVART Telechat Review: Ready
TSVART Early Review (of -10): Not Ready
RTGDIR Early Review (of -08): Has Nits
GENART Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6487,TLS 15+,131,321,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-multilevel-unique-nickname-05  - IETF stream
TRILL Multilevel Using Unique Nicknames (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA - Not OK
Consensus: Yes
Last call expires: 2018-03-06
Reviews: RTGDIR Early Review (of -01): Has Issues
GENART Telechat Review - due: 2018-03-06
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6488,TLS 15+,131,322,"InformationProviding,InformationProviding,ExtensionOfPrevious",310,-1,"
o draft-ietf-trill-vendor-channel-00  - IETF stream
TRILL: Vendor Specific TRILL Channel Protocol (Proposed Standard)
Token: Alia Atlas
IANA Review: IANA OK - Actions Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: GENART Telechat Review: Ready
SECDIR Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6489,TLS 15+,131,323,"ContextSetting,ExtensionOfPrevious,ContextSetting",310,-1,"
2.1.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6490,TLS 15+,131,324,"InformationProviding,InformationProviding,ExtensionOfPrevious",323,-1,"
o draft-ietf-bier-mvpn-10  - IETF stream
Multicast VPN Using BIER (Proposed Standard)
Token: Alia Atlas
IANA Review: Version Changed - Review Needed
Consensus: Yes
Reviews: SECDIR Last Call Review (of -09): Ready
GENART Last Call Review (of -09): Ready with Nits
GENART Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6491,TLS 15+,131,325,"ContextSetting,ExtensionOfPrevious,ContextSetting",323,-1,"
2.2 Individual submissions
2.2.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6492,TLS 15+,131,326,"InformationProviding,InformationProviding,ExtensionOfPrevious",325,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6493,TLS 15+,131,327,"ContextSetting,ExtensionOfPrevious,ContextSetting",325,-1,"
2.2.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6494,TLS 15+,131,328,"InformationProviding,InformationProviding,ExtensionOfPrevious",327,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6495,TLS 15+,131,329,"ContextSetting,ExtensionOfPrevious,ContextSetting",327,-1,"
2.3 Status changes
2.3.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6496,TLS 15+,131,330,"InformationProviding,InformationProviding,ExtensionOfPrevious",329,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6497,TLS 15+,131,331,"ContextSetting,ExtensionOfPrevious,ContextSetting",329,-1,"
2.3.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6498,TLS 15+,131,332,"InformationProviding,InformationProviding,ExtensionOfPrevious",331,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6499,TLS 15+,131,333,"ContextSetting,ExtensionOfPrevious,ContextSetting",331,-1,"
2.3.3 For action",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6500,TLS 15+,131,334,"InformationProviding,InformationProviding,ExtensionOfPrevious",333,-1,"
o status-change-bier-core-to-proposed-standard-01  - IETF stream
Promote BIER Architecture and Encapsulation to Proposed Standard
(based on updating charter) (None)
Token: Alia Atlas",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6501,TLS 15+,131,335,"ContextSetting,ExtensionOfPrevious,ContextSetting",304,-1,"
3. Document actions
3.1 WG submissions
3.1.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6502,TLS 15+,131,336,"InformationProviding,InformationProviding,ExtensionOfPrevious",335,-1,"
o draft-ietf-teas-rsvp-ingress-protection-15  - IETF stream
Extensions to RSVP-TE for LSP Ingress FRR Protection (Experimental)
Token: Deborah Brungard
IANA Review: Version Changed - Review Needed
Consensus: Yes
Reviews: GENART Last Call Review (of -13): Not Ready
SECDIR Last Call Review (of -13): Ready
RTGDIR Last Call Review (of -11): Has Issues
OPSDIR Last Call Review - due: 2018-03-01
GENART Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6503,TLS 15+,131,337,"InformationProviding,InformationProviding,ExtensionOfPrevious",335,-1,"
o draft-ietf-lisp-signal-free-multicast-08  - IETF stream
Signal-Free LISP Multicast (Experimental)
Token: Deborah Brungard
IANA Review: Version Changed - Review Needed
Consensus: Yes
Reviews: GENART Last Call Review (of -07): Ready with Nits
RTGDIR Last Call Review (of -07): Has Nits
SECDIR Last Call Review - due: 2018-02-27
OPSDIR Last Call Review - due: 2018-02-27",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6504,TLS 15+,131,338,"InformationProviding,InformationProviding,ExtensionOfPrevious",335,-1,"
o draft-ietf-trill-transport-over-mpls-07  - IETF stream
TRILL Transparent Transport over MPLS (Informational)
Token: Alia Atlas
IANA Review: IANA OK - No Actions Needed
Consensus: Yes
Last call expires: 2018-03-06
Reviews: SECDIR Telechat Review: Has Nits
RTGDIR Early Review (of -02): Has Nits
GENART Telechat Review - due: 2018-03-06
OPSDIR Telechat Review - due: 2018-03-06",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6505,TLS 15+,131,339,"ContextSetting,ExtensionOfPrevious,ContextSetting",335,-1,"
3.1.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6506,TLS 15+,131,340,"InformationProviding,InformationProviding,ExtensionOfPrevious",339,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6507,TLS 15+,131,341,"ContextSetting,ExtensionOfPrevious,ContextSetting",339,-1,"
3.2 Individual submissions via AD
3.2.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6508,TLS 15+,131,342,"InformationProviding,InformationProviding,ExtensionOfPrevious",341,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6509,TLS 15+,131,343,"ContextSetting,ExtensionOfPrevious,ContextSetting",341,-1,"
3.2.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6510,TLS 15+,131,344,"InformationProviding,InformationProviding,ExtensionOfPrevious",343,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6511,TLS 15+,131,345,"ContextSetting,ExtensionOfPrevious,ContextSetting",343,-1,"
3.3 Status changes
3.3.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6512,TLS 15+,131,346,"InformationProviding,InformationProviding,ExtensionOfPrevious",345,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6513,TLS 15+,131,347,"ContextSetting,ExtensionOfPrevious,ContextSetting",345,-1,"
3.3.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6514,TLS 15+,131,348,"InformationProviding,InformationProviding,ExtensionOfPrevious",347,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6515,TLS 15+,131,349,"ContextSetting,ExtensionOfPrevious,ContextSetting",347,-1,"
3.4 IRTF and Independent Submission stream documents
3.4.1 New items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6516,TLS 15+,131,350,"InformationProviding,InformationProviding,ExtensionOfPrevious",349,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6517,TLS 15+,131,351,"ContextSetting,ExtensionOfPrevious,ContextSetting",349,-1,"
3.4.2 Returning items",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6518,TLS 15+,131,352,"InformationProviding,InformationProviding,ExtensionOfPrevious",351,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6519,TLS 15+,131,353,"ContextSetting,ExtensionOfPrevious,ContextSetting",304,-1,"
4. Working Group actions
4.1 WG creation
4.1.1 Proposed for IETF review",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6520,TLS 15+,131,354,"InformationProviding,InformationProviding,ExtensionOfPrevious",353,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6521,TLS 15+,131,355,"ContextSetting,ExtensionOfPrevious,ContextSetting",353,-1,"
4.1.2 Proposed for approval",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6522,TLS 15+,131,356,"InformationProviding,InformationProviding,ExtensionOfPrevious",355,-1,"
o Security Dispatch (secdispatch)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6523,TLS 15+,131,357,"InformationProviding,InformationProviding,ExtensionOfPrevious",355,-1,"
o Trusted Execution Environment Provisioning (teep)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6524,TLS 15+,131,358,"ContextSetting,ExtensionOfPrevious,ContextSetting",355,-1,"
4.2 WG rechartering
4.2.1 Under evaluation for IETF review",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6525,TLS 15+,131,359,"InformationProviding,InformationProviding,ExtensionOfPrevious",358,-1,"
NONE",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6526,TLS 15+,131,360,"ContextSetting,ExtensionOfPrevious,ContextSetting",358,-1,"
4.2.2 Proposed for approval",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6527,TLS 15+,131,361,"InformationProviding,InformationProviding,ExtensionOfPrevious",360,-1,"
o Bit Indexed Explicit Replication (bier)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6528,TLS 15+,131,362,"InformationProviding,InformationProviding,ExtensionOfPrevious",360,-1,"
o Dynamic Host Configuration (dhc)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6529,TLS 15+,131,363,"ContextSetting,ExtensionOfPrevious,ContextSetting",304,-1,"
5. IAB news we can use",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6530,TLS 15+,131,364,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","304,363",-1,"
6. Management issues",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6531,TLS 15+,131,365,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting",364,-1,"
6.1 Designated expert for RFC 7009 [IANA #1048048] (Eric Rescorla)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6532,TLS 15+,131,366,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","364,365",-1,"
6.2 Alternate IESG Ballot Procedure for draft-mm-wg-effect-encrypt (Alissa Cooper)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6533,TLS 15+,131,367,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","364,366",-1,"
6.3 Designated Extperts for registry established in draft-ietf-tls-tls13 (Kathleen Moriarty)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6534,TLS 15+,131,368,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","304,367",-1,"
7. Any Other Business (WG News, New Proposals, etc.)",<151995327701.15771.7386608470022003857.idtracker@ietfa.amsl.com>,iesg-secretary@ietf.org,0.0,,,2018-03-01 17:14:37
6535,TLS 15+,133,0,"InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting",,-1,I am the assigned Gen-ART reviewer for this draft. The General Area Review Team (Gen-ART) reviews all IETF documents being processed by the IESG for the IETF Chair.  Please treat these comments just like any other last call comments.,<2716296e5ebe4b31a406224027ee235f@ericsson.com>,meral.shirazipour@ericsson.com,0.0,0,5,2018-07-25 05:19:15
6536,TLS 15+,133,28,"ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ContextSetting",0,-1,"
For more information, please see the FAQ at",<2716296e5ebe4b31a406224027ee235f@ericsson.com>,meral.shirazipour@ericsson.com,0.0,0,5,2018-07-25 05:19:15
6537,TLS 15+,133,29,"InformationProviding,ExtensionOfPrevious,InformationProviding",28,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<2716296e5ebe4b31a406224027ee235f@ericsson.com>,meral.shirazipour@ericsson.com,0.0,0,5,2018-07-25 05:19:15
6538,TLS 15+,133,30,"ExtensionOfPrevious,ContextSetting,InformationProviding",29,-1,"
Document: draft-ietf-tls-tls13-vectors-06",<2716296e5ebe4b31a406224027ee235f@ericsson.com>,meral.shirazipour@ericsson.com,0.0,0,5,2018-07-25 05:19:15
6539,TLS 15+,133,33,"InformationProviding,Thanking,NeutralResponse,StateDecision,Thanking",0,-1,"Meral, thanks for your review. I have entered a No Objection ballot.",<3CC08B88-59E2-42CE-92DF-55A8898D5107@cooperw.in>,alissa@cooperw.in,0.0,1,0,2018-08-01 11:58:53
6540,TLS 15+,134,31,"InformationProviding,ContextSetting,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security Working Group of the IETF.",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6541,TLS 15+,134,32,"InformationProviding,ExtensionOfPrevious,InformationProviding",31,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-08.txt
Pages           : 103
Date            : 2015-08-28",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6542,TLS 15+,134,33,"InformationProviding,ExtensionOfPrevious,InformationProviding",32,-1,"
Abstract:
This document specifies Version 1.3 of the Transport Layer Security
(TLS) protocol.  The TLS protocol allows client/server applications
to communicate over the Internet in a way that is designed to prevent
eavesdropping, tampering, and message forgery.",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6543,TLS 15+,134,34,"InformationProviding,ExtensionOfPrevious,InformationProviding",33,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6544,TLS 15+,134,35,"InformationProviding,ExtensionOfPrevious,InformationProviding",34,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-08",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6545,TLS 15+,134,36,"InformationProviding,ExtensionOfPrevious,InformationProviding",35,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-08",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6546,TLS 15+,134,37,"InformationProviding,ExtensionOfPrevious,Social,ExtensionOfPrevious","35,36",-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6547,TLS 15+,134,38,"InformationProviding,ExtensionOfPrevious,InformationProviding",37,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20150828171144.25381.93164.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-08-28 10:11:44
6548,TLS 15+,135,0,"Question,InformationProviding,ContextSetting,ProposeAction,Question,ContextSetting,ProposeAction",,-1,"I think Connection ID is an important enabler for end-to-end security with (D)TLS. There seems to be important use cases for connection ID in TLS as well, see https://www.ietf.org/mailman/listinfo/atlas. At the Monday afternoon TLS session, it was stated that Connection ID in TLS was unemployable in the wild due to middleboxes. Couldn't that be solved by placing the cid field after the length field? E.g.",<1C32782E-02E4-4743-9E26-E5C0593C1BCF@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2018-03-20 16:38:36
6549,TLS 15+,135,16,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",0,-1,"
struct {
ContentType opaque_type = application_data; /* 23 */
ProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */
uint16 length;
opaque cid[cid_length];               // New field
opaque encrypted_record[TLSCiphertext.length];
} TLSCiphertext;",<1C32782E-02E4-4743-9E26-E5C0593C1BCF@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2018-03-20 16:38:36
6550,TLS 15+,135,17,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",16,-1,"
length  The sum of cid_length and TLSCiphertext.length",<1C32782E-02E4-4743-9E26-E5C0593C1BCF@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2018-03-20 16:38:36
6551,TLS 15+,135,18,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious","0,17",-1,"
(Also draft-ietf-tls-dtls-connection-id-00 says obsoletes RFC6347, should be updates).",<1C32782E-02E4-4743-9E26-E5C0593C1BCF@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2018-03-20 16:38:36
6552,TLS 15+,135,40,"NeutralResponse,NeutralResponse",17,17,"
This defines length in terms of itself since length is TLSCiphertext.length.
",<6964A867-2406-4190-AFFE-E52C15A10A8A@pahtak.org>,s@pahtak.org,0.0,0,10,2018-03-20 14:28:53
6553,TLS 15+,135,89,"ClarificationElicitation,InformationProviding,Agreement,ContextSetting,ProposeAction,Question,Agreement,NeutralResponse",40,-1,"Correct, I just copied pasted the length of the arrays, should be length = cid_length + encrypted_record.length.

The example was taken from draft-ietf-tls-tls13-27. If I understand correctly, It seems like the same circular definition is done there as well....

struct {
ContentType opaque_type = application_data; /* 23 */
ProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */
uint16 length;
opaque encrypted_record[TLSCiphertext.length];
} TLSCiphertext;

Shouldn't this be...

struct {
ContentType opaque_type = application_data; /* 23 */
ProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */
uint16 length;
opaque encrypted_record[encrypted_record.length];
} TLSCiphertext;

Does this mean the",<EF62879E-C621-4E51-8006-727328E69BF7@ericsson.com>,john.mattsson@ericsson.com,0.0,0,4,2018-03-20 23:45:59
6554,TLS 15+,135,160,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",89,-1,"The issue is that the ""TLSCiphertext.length"" is the same field as
the ""uint16 length"", so you are saying that this field has the value
of ""cid_length plus itself"", which is impossible in integers modulo
[a value larger than cid_length].  In the ""formal"" grammar, you'd
need to define a new field.",<20180320235742.GW55745@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-03-20 18:57:42
6555,TLS 15+,135,229,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",16,16,"
There is no field called encrypted_record.length. TLSCiphertext.length refers to the length field in the TLSCiphertext struct rather than the length of the TLSCiphertext itself (which is a few bytes longer). See Section 3, Presentation Language, for the precise definitions.

Steve
",<55BB1982-5004-4DCF-BBFD-5A69AE7DBBA2@pahtak.org>,s@pahtak.org,0.0,0,10,2018-03-20 18:58:40
6556,TLS 15+,136,0,Social,,-1,"Dear all,",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6557,TLS 15+,136,70,"InformationProviding,ContextSetting,ContextSetting",,-1,"
We [1] are in the process of performing an automated symbolic analysis
of the TLS 1.3 specification draft (revision 10) using the Tamarin
prover [2], which is a tool for automated security protocol analysis.",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6558,TLS 15+,136,71,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",70,-1,"
While revision 10 does not yet appear to permit certificate-based client
authentication in PSK (and in particular resumption using PSK), we modelled
what we believe is the intended functionality. By enabling client
authentication either in the initial handshake, or with a post- handshake
signature over the handshake hash, our Tamarin analysis finds an attack. The
result is a complete breakage of client authentication, as the attacker can
impersonate a client when communicating with a server:",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6559,TLS 15+,136,72,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",71,-1,"
Suppose a client Alice performs an initial handshake with Charlie. Charlie,
masquerading as Alice, subsequently performs a handshake with Bob.
Following a
PSK resumption, Bob requests authentication from Charlie (impersonating
Alice).
Charlie then requests authentication from Alice, and the returned signature
will also be a valid signature for the session with Bob.",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6560,TLS 15+,136,73,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",72,-1,"
Initial h/s Initial h/s
|  exchange PSK  |                               | exchange PSK  |
|Start PSK resume| |Start PSK resume|
|client_random nc| |client_random nc|
|  Accept resume |                               | Accept resume |
Alice|<---------------|(as Charlie) Charlie (as Alice)|<---------------|Bob
|server_random ns| |server_random ns|
|Client auth req | |Client auth req |
|  Client auth   |                               | Client auth   |
sign nc,ns,... relay signature",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6561,TLS 15+,136,74,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",73,-1,"
This attack is possible because the client signature is over the handshake
hash, which only covers the nonces and other easily duplicated information,
and in particular does not contain the server certificate (because none is
presented in PSK mode [3]) or the server Finished.",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6562,TLS 15+,136,75,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",74,-1,"
While the modifications proposed in PR#316 [4] explicitly allow client
authentication in these contexts, the PR also redefines the client signature
based on a new ""Handshake Context"" value which includes the server Finished
message. Intuitively, this new definition appears to address the attack
because the attacker cannot transplant the Finished message between
connections. We are currently working towards a Tamarin proof that PR#316
indeed prevents our attack.",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6563,TLS 15+,136,76,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",75,-1,"
Therefore we would like to support the inclusion of Finished as
part of the handshake context, in order to address this problem.",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6564,TLS 15+,136,77,"Thanking,Thanking",,-1,"
Many thanks,",<5634A3B8.7070701@gmail.com>,sam.scott89@gmail.com,0.0,0,53,2015-10-31 11:19:20
6565,TLS 15+,136,115,"InformationProviding,NeutralResponse,NeutralResponse,UnderstandingNegative",71,71,"
Eh, I thought that using static client certificate auth with PSK is not
supposed to be possible.

BTW: TLS 1.2 doesn't seem to explicitly prohibit client auth with PSK, and
if client and server try to use client certs with PSK, bad things happen...
",<20151031133231.GB12538@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-31 15:32:31
6566,TLS 15+,136,117,"InformationProviding,Disagreement,ContextSetting,ProposeAction,NeutralResponse",75,75,"
By my reading, #316 does not permit static client authentication with
PSK (it only permits dynamic auth, which didn't even exist previously),
most definitely not explicitly.

Also, found out that -10 looks to be at least unclear about if the
server Finished is included in the data to be signed or not...

I also searched when this got broken. Looks to be part of ""DH-based
key exchange"" changes in -07 (in -06, hashes definitely did include
finished messages).
",<20151031133231.GB12538@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-31 15:32:31
6567,TLS 15+,136,241,"InformationProviding,ContextSetting,Thanking,Thanking",70,-1,"
Thanks for posting this. It's great to see people doing real formal
analysis of the TLS 1.3 draft; this is really helpful in guiding the design.",<CABcZeBPNHPzywr89wLgV4zWKjKXXk_kyxoV75pYOuuuK=QO9=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-10-31 22:55:24
6568,TLS 15+,136,242,"InformationProviding,Agreement,ProposeAction,Agreement,NeutralResponse",71,-1,"
As you say, the current draft-10 doesn't permit certificate-based client
authentication when PSK is used [0], but it's clear that we want to at least
be able to have this in the post-handshake case (since otherwise you
wouldn't be able to do on-the-fly client auth with a resumed handshake),
and this shows that we have to be very careful when we do that.
Note: It's less clear we want to allow this in the initial handshake, if
only
because it complicates the state machine.",<CABcZeBPNHPzywr89wLgV4zWKjKXXk_kyxoV75pYOuuuK=QO9=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-10-31 22:55:24
6569,TLS 15+,136,243,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,ContextSetting,ProposeAction",242,-1,"
This result motivates and confirms the need to modify the handshake hashes
to contain the server Finished when we add post-handshake authentication
as is done in PR#316, which of course we'll be discussing in Yokohama.
I'd be very interested in learning of the results you get when you model
that.",<CABcZeBPNHPzywr89wLgV4zWKjKXXk_kyxoV75pYOuuuK=QO9=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-10-31 22:55:24
6570,TLS 15+,136,244,"InformationProviding,ExtensionOfPrevious,Thanking,Thanking","241,70",-1,"
Thanks again for your contribution here. It's really important to have
this kind of analysis, especially at this stage before the design is
completely
hardened.",<CABcZeBPNHPzywr89wLgV4zWKjKXXk_kyxoV75pYOuuuK=QO9=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-10-31 22:55:24
6571,TLS 15+,136,271,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse","242,243",242,"
Looking at the issue at wider angle, this soundness hole appears anytime
handshake_messages and configuration do not jointly represent the static
secret (the inclusion of server Finished fixes it for client signature,
because server Finished represents the static secret).

If TLS ever gets mode that combines that non-representation with static
server certificate auth (no idea what such mode could be), one gets
problems with server auth.
",<20151031142945.GA12815@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-10-31 16:29:46
6572,TLS 15+,136,311,"InformationProviding,NeutralResponse,ContextSetting,StateDecision,NeutralResponse",271,271,"
I've been planning to do a big rewrite of the security ""analysis"" sections
and while I don't think it's worth having a real analysis in the protocol
(the literature is going to do a much better job here than we can), this
seems like exactly the kind of thing that we do want to capture to
explain the design and for future extensions.
",<CABcZeBPspSzExeDwOTz91LuhPxVyPNsu8F-5NP+3FVLc8ZceOQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-11-01 04:36:43
6573,TLS 15+,136,357,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",311,311,"
What I think is also very important with regards to security is
explaining the properties of interfaces to applications.

E.g. I want to be able to find answer to ""Can I authenticate a client
by reading value off TLS-EXTRACTOR and signing it?""[1][2] in the final
RFC.

Or ""Can I key something non-TLS off TLS-Extractor"" (yes).
",<20151101090111.GA13377@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-01 11:01:11
6574,TLS 15+,136,358,"InformationProviding,NeutralResponse,ExtensionOfPrevious","311,357",311,"
And with regards to protocol analysis, the thing that nails
you with highest probability (after known bad ideas) is some
oddball feature that nobody really analyzes (or analyzes in
non-realistic ways, for this documenting assumptions at
external interface is VERY useful). These often allow taking
cracks in one part of the protocol and then amplifying those
to actual attacks.
",<20151101090111.GA13377@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-01 11:01:11
6575,TLS 15+,136,359,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","357,358",311,"
[1] The answer being: Yes, but:
- You also need ciphersuite if you need cross-collision resistance
(TLS certificate auth would be vulernable to CC if another PRF-
hash with 256 or 384 bit output was added).
- In versions previous to TLS 1.3, you need extended_master_secret
negotiated (because otherwise TLS-Extractor outputs aren't nonces).

[2] While TLS does have built-in client certificate authentication,
application-layer certificate authentication can be much more
flexible, doing things that are just plain infeasible to do in
TLS layer (like fine-grained authentication).
",<20151101090111.GA13377@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2015-11-01 11:01:11
6576,TLS 15+,136,374,"Agreement,Agreement",244,244,"
+many,
",<56358974.5060102@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2015-11-01 03:39:32
6577,TLS 15+,136,466,"InformationProviding,NeutralResponse,ProposeAction,Agreement,NeutralResponse","70,76",-1,"Nice analysis! I think that the composition of different mechanisms in the protocol is likely to
be where many subtle issues lie, and analyses like this one support that concern.",<E9B7FFA7-4ED7-4BCF-8B8A-62DEBC97DCC3@gmail.com>,karthik.bhargavan@gmail.com,0.0,0,12,2015-11-01 10:19:58
6578,TLS 15+,136,467,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",466,-1,"
Several other composition examples were already discussed on this list (for previous drafts).
For example, when composing 0-RTT with 1-RTT in the most natural way, many attacks appeared:
(1) 0-RTT application data  may be replayed (See note (2) in 6.2.2.)
(2) an unknown key share attack on 0-RTT encryption keys (leading to the inclusion of ServerCertificate in 0-RTT handshake hash in 7.2.1)
(3) a key compromise impersonation attack on 0-RTT (See note (3) in 6.2.2)",<E9B7FFA7-4ED7-4BCF-8B8A-62DEBC97DCC3@gmail.com>,karthik.bhargavan@gmail.com,0.0,0,12,2015-11-01 10:19:58
6579,TLS 15+,136,468,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",467,-1,"
The addition of resumption, PSK, and client-auth provide plenty of further composition possibilies
that are (in my surely biased opinion) best handled by automated formal analysis.
So, I’m looking forward to the full Tamarin results!",<E9B7FFA7-4ED7-4BCF-8B8A-62DEBC97DCC3@gmail.com>,karthik.bhargavan@gmail.com,0.0,0,12,2015-11-01 10:19:58
6580,TLS 15+,137,0,Social,,-1,"All,",<4783B0DF-445C-4AF0-8EF1-AB396A97B947@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-07-03 23:53:53
6581,TLS 15+,137,9,"InformationProviding,ContextSetting,ContextSetting",,-1,"
This is the 2nd working group last call (WGLC) announcement for draft-ietf-tls-tls13 to run through July 18th.  This time the WGLC is for version -21 (https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/).  Note that this WGLC ends before the Wednesday TLS WG session @ IETF 99.",<4783B0DF-445C-4AF0-8EF1-AB396A97B947@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-07-03 23:53:53
6582,TLS 15+,137,10,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction",9,-1,"
Also note that this WGLC is a targeted WGLC that only address changes introduced since the 1st WGLC on version -18, i.e., changes introduced in versions -19 through -21.  Note that the editor has kindly included a change log in s1.2 and the datatracker can also produce diffs (for some reason it’s not working for me right now).  In general, we are considering all other material to have WG consensus, so only critical issues should be raised about that material at this time.",<4783B0DF-445C-4AF0-8EF1-AB396A97B947@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-07-03 23:53:53
6583,TLS 15+,137,37,"InformationProviding,ContextSetting",9,-1,"I think that everything IETF is a little bit slow today, which I'm
sure has nothing at all to do with the draft submission deadline.",<CABkgnnVWt8ZOXWFBmvhWQekhhZYSGWuTGY37AY9JLoZxP1cn=A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-07-04 15:21:50
6584,TLS 15+,137,38,"InformationProviding,ExtensionOfPrevious,InformationProviding",37,-1,"
https://tools.ietf.org/rfcdiff?url1=https://tools.ietf.org/id/draft-ietf-tls-tls13-18.txt&url2=https://tools.ietf.org/id/draft-ietf-tls-tls13-21.txt",<CABkgnnVWt8ZOXWFBmvhWQekhhZYSGWuTGY37AY9JLoZxP1cn=A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-07-04 15:21:50
6585,TLS 15+,137,39,"NeutralResponse,StateDecision,ExtensionOfPrevious,StateDecision","10,38",-1,"
I have reviewed the diff and found a few extremely minor nits that
I'll send in a PR.",<CABkgnnVWt8ZOXWFBmvhWQekhhZYSGWuTGY37AY9JLoZxP1cn=A@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-07-04 15:21:50
6586,TLS 15+,137,112,"Question,ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Question,NeutralResponse,ContextSetting,ProposeAction","10,9",10,"
Duly limiting myself to reviewing just the changes from -18 to -21, I do
still have some comments.

The main issue is one that I have raised previously but does not seem to
have been resolved by the group, namely, that I think we should have a
MUST-level requirement for some stronger anti-replay scheme than the
freshness checks of section 8.3.  I do not think that we need to mandate
specifically the single-use tickets of section 8.1 or the ClientHello
recording scheme of section 8.2, and can leave freedom for
implementations to choose alternate schemes, but do think that we will
be on the wrong side of the ""we're building a security protocol""/""we're
building an easy-to-implement protocol"" divide with the present
SHOULD-level indication.

Another question I also relates to 0-RTT, specifically with the
freshness checks and the case where the computed expected_arrival_time
is in outside ""the window"" by virtue of being in the future. (See the
Note: at the end of section 8.2.) (The case where the
expected_arrival_time is in the past can clearly be treated as ""this is
a stale request"" and the current text about aborting with
""illegal_parameter"" or rejecting 0-RTT but accepting the PSK is
acceptable, even if it doesn't give guidance as to what might cause
someone to pick one behavior or the other.)  I am wondering whether we
should consider this to be a potential attack and abort the connection.
I concede that there are likely to be cases where this
situation occurs incidentally, for clients with extremely fast-running
clocks, and potential timezone/suspend-resume weirdness.  But there is
also the potential for a client that deliberately lies about its ticket
age and intends to replay the wire messages when the age becomes in
window, or an attacker that records the messages and knows that the
client's clock is too fast, or other cases.  (A client that deliberately
does this could of course just send the same application data later as
well.)  If the time is only a few seconds out of the window, then
delaying a response until it is in the window and only then entering it
into the single-use cache might be reasonable, but if the time is very
far in the future, do we really want to try to succeed in that case?  Or
perhaps we should just make the time window for 0-RTT acceptance
half-infinite and not bother rejecting things that claim to be in the
future; that probably has some robustness arguments in its favor.

It looks like we no longer do anything to obsolete/reserve/similar the
HashAlgorithm and SignatureAlgorithm registries; was that just an
editorial mixup or an intended change?

We removed the API guidance for separate APIs for read/writing early
data versus regular data, which I believe had consensus.  But I thought
we were going to say something carefully worded about having an API to
determine whether the handshake has completed (or client Finished has
been validated, or ...), and it looks like this is buried at the end of
E.5(.0), with the string ""API"" not appearing.  It might be useful to
make this a little more prominent/discoverable, whether by subsection
heading or otherwise.

I also found some issues that I believe to be purely editorial, for
which I will submit a pull request.

I will probably try to make another full review pass over the entire
document (mostly looking for editorial things), but I have until the end
of IETF LC for that, right? ;)

-Ben",<e14760fb-c45e-fbf6-270b-cdf173c757bc@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-07-11 15:39:23
6587,TLS 15+,137,188,"Answer,NeutralResponse",112,112,"
If the time is very far in the future, the text is supposed to tell you to
fall back
to 1-RTT...
",<CABcZeBO_2tDVon4e8MU2jcq-2rYcUNfKESkPJe2ZjzWfoE_ESg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-07-11 13:50:48
6588,TLS 15+,137,191,"Answer,NeutralResponse",112,112,"
https://tlswg.github.io/draft-ietf-tls-iana-registry-updates/#orphaned-registries
",<CABcZeBO_2tDVon4e8MU2jcq-2rYcUNfKESkPJe2ZjzWfoE_ESg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-07-11 13:50:48
6589,TLS 15+,137,192,ExtensionOfPrevious,191,112,"
We removed the API guidance for separate APIs for read/writing early data",<CABcZeBO_2tDVon4e8MU2jcq-2rYcUNfKESkPJe2ZjzWfoE_ESg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-07-11 13:50:48
6590,TLS 15+,137,194,"InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",112,112,"
Suggestions welcome for where this would be better....

-Ekr
",<CABcZeBO_2tDVon4e8MU2jcq-2rYcUNfKESkPJe2ZjzWfoE_ESg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-07-11 13:50:48
6591,TLS 15+,137,282,"Question,InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse,ProposeAction",188,188,"
I agree that that is what the text currently says.  I'm questioning
whether that's actually the behavior we want.

That is, in this case, the CH+0RTT data can be replayed by an observer
once enough time has elapsed that the expected_arrival_time is within
the window, similar to one of the reordering attacks mentioned
elsewhere.  We could add the CH to the strike register in this case,
which would bloat its storage somewhat and have entries that take longer
than the window to expire out.

I don't have a good sense for how often we expect postdated CHs to occur
and whether the ensuing breakage would be manageable, but I'm not sure
that we've thought very hard as a group about this question.
",<752c2b4e-fb24-6857-ac88-e42504029dd6@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-07-12 17:39:11
6592,TLS 15+,137,284,"NeutralResponse,Thanking,NeutralResponse,Thanking",191,188,"
Oh right, I forgot about that -- thanks.
",<752c2b4e-fb24-6857-ac88-e42504029dd6@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-07-12 17:39:11
6593,TLS 15+,137,286,"NeutralResponse,StateDecision,NeutralResponse,ProposeAction",194,194,"
I'll see if I have time to think about it some more.

-Ben",<752c2b4e-fb24-6857-ac88-e42504029dd6@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-07-12 17:39:11
6594,TLS 15+,137,387,"InformationProviding,Disagreement,NeutralResponse,NeutralResponse",282,282,"
I think post-dated are going to happen pretty often based on what I
understand from
Kyle and others. I wouldn't be comfortable with hard fail, especially given
that this
just seems like the dual of the other case. Adding the CH to the list seems
like
a problem because it might stay forever.

-Ekr
",<CABcZeBMQ-oPW61my5+7tQSJucV6_zo16j4nmqz=PEztrxG9kxg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-07-18 06:07:52
6595,TLS 15+,137,426,"InformationSeeking,InformationProviding,Agreement,ProposeAction,StateDecision,Agreement,NeutralResponse,ProposeAction",387,387,"
The ""stay forever"" part is awkward, yes.  It would be great if Kyle/etc.
could say a bit about why post-dated seems likely on the list, but I
guess for the purposes of WGLC we can consider this comment resolved.

-Ben",<261d0fe6-764f-81d8-2701-f4031de8eb36@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-07-18 13:10:54
6596,TLS 15+,137,457,"ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,UnderstandingNegative,Question,NeutralResponse",426,-1,"Timestamps outside the expected window can happen due to variances in RTT, client clock skew, etc. (we see around .1% of clients outside of a 30s window for example). Not likely to happen on a given connection, but it certainly happens enough that you don’t want to abort the connection (rather than allowing 1-RTT) without reason. I’m not sure I understand the desire to abort these connections. What value does it provide? The timestamp mechanism does not provide protection against a malicious client that has possession of the PSK key.

If the server is 100% sure that a CH is replayed it is more reasonable to abort the connection, but I think it should be explicit to the client that that is the reason for the error (ie using a new alert type rather than illegal_parameter) so the client can know to retry without 0-RTT. I’m also slightly concerned that it allows a passive attacker to cause connection failures if it can front-run a copy of the CH to the server, and I still don’t think it is providing much value.
",<MWHPR15MB1182EA51FA0477398ED90977AFA10@MWHPR15MB1182.namprd15.prod.outlook.com>,knekritz@fb.com,0.0,0,23,2017-07-18 19:05:25
6597,TLS 15+,138,0,"InformationProviding,ContextSetting,ContextSetting",,-1,A New Internet-Draft is available from the on-line Internet-Drafts directories.,<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6598,TLS 15+,138,36,"InformationProviding,ExtensionOfPrevious,InformationProviding",0,-1,"
Title           : Why Enterprises Need Out-of-Band TLS Decryption
Author          : Steve Fenter
Filename        : draft-fenter-tls-decryption-00.txt
Pages           : 21
Date            : 2018-03-05",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6599,TLS 15+,138,37,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
Abstract:
Some enterprises are heavily TLS encrypted within their own
enterprise network boundaries.  Many of these enterprises are also
utilizing out-of-band TLS decryption in order to inspect their own
traffic for purposes of troubleshooting, network security monitoring,
and for other kinds of monitoring.  These monitoring functions are
mission critical, and cannot just be done without when TLS 1.3
(draft-ietf-tls-tls13-26) is released or when the RSA key exchange is
someday deprecated from TLS 1.2 (RFC5246).  This draft will outline
the use cases for out-of-band TLS decryption, as well as alternative
suggestions for monitoring and troubleshooting and the limitations of
those alternatives.",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6600,TLS 15+,138,38,"InformationProviding,ExtensionOfPrevious,InformationProviding",37,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-fenter-tls-decryption/",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6601,TLS 15+,138,39,"InformationProviding,ExtensionOfPrevious,InformationProviding",38,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-fenter-tls-decryption-00
https://datatracker.ietf.org/doc/html/draft-fenter-tls-decryption-00",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6602,TLS 15+,138,40,"InformationProviding,ExtensionOfPrevious,Social,ExtensionOfPrevious",39,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6603,TLS 15+,138,41,"InformationProviding,ExtensionOfPrevious,InformationProviding",40,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<152028390894.31686.18053119949489420583@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2018-03-05 13:05:08
6604,TLS 15+,139,0,Social,,-1,"Hi,",<20170317143800.GA2198@al>,peter@lekensteyn.nl,0.0,0,30,2017-03-17 15:38:00
6605,TLS 15+,139,13,"ContextSetting,InformationProviding,ContextSetting",,-1,"
In the current draft, the Early Data Indication extension
(https://tools.ietf.org/html/draft-ietf-tls-tls13-19#section-4.2.7)
refers to Appendix B.3.4 for the use of the max_early_data_size.",<20170317143800.GA2198@al>,peter@lekensteyn.nl,0.0,0,30,2017-03-17 15:38:00
6606,TLS 15+,139,14,"Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,UnderstandingNegative",13,-1,"
I cannot see how that appendix makes it easier to understand how the
field is supposed to be used. Shouldn't the New Session Ticket Message
section be referenced instead?",<20170317143800.GA2198@al>,peter@lekensteyn.nl,0.0,0,30,2017-03-17 15:38:00
6607,TLS 15+,139,44,"Answer,NeutralResponse,StateDecision,InformationProviding,Answer,StateDecision",14,-1,"Fixed in:
https://github.com/tlswg/tls13-spec/commit/40e6e0cdfedf602db0e31ff62b8d4af6d47fc631

-Ekr
",<CABcZeBN_sEG8vw92d_95_nSz0_Yh96GPkXrS8DLgZsjHZkk0Qg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-03-17 08:09:44
6608,TLS 15+,140,99,"InformationSeeking,ContextSetting,ProposeAction,UnderstandingNegative,Apologising,Question,ContextSetting,Apologising",,-1,"Sorry, I am having a dull moment trying to understand the
Transcript-hash, could someone help please?",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6609,TLS 15+,140,100,"ExtensionOfPrevious,ContextSetting,ContextSetting",99,-1,"
From *TLS 1.3: section 4* I have:",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6610,TLS 15+,140,101,"ExtensionOfPrevious,ContextSetting,InformationProviding",100,-1,"
enum {
client_hello(1),
server_hello(2),
new_session_ticket(4),
end_of_early_data(5),
hello_retry_request(6),
encrypted_extensions(8),
certificate(11),
certificate_request(13),
certificate_verify(15),
finished(20),
key_update(24),
message_hash(254),
(255)
} HandshakeType;",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6611,TLS 15+,140,102,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",101,-1,"
struct {
HandshakeType msg_type;    /* handshake type */
uint24 length;             /* bytes in message */
select (Handshake.msg_type) {
case client_hello:          ClientHello;
case server_hello:          ServerHello;
case end_of_early_data:     EndOfEarlyData;
case hello_retry_request:   HelloRetryRequest;
case encrypted_extensions:  EncryptedExtensions;
case certificate_request:   CertificateRequest;
case certificate:           Certificate;
case certificate_verify:    CertificateVerify;
case finished:              Finished;
case new_session_ticket:    NewSessionTicket;
case key_update:            KeyUpdate;
} body;
} Handshake;",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6612,TLS 15+,140,103,"ExtensionOfPrevious,ContextSetting,ContextSetting",100,-1,"
and from *TLS 1.3: Section 4.1* I have:",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6613,TLS 15+,140,104,"ExtensionOfPrevious,ContextSetting,InformationProviding",103,-1,"
uint16 ProtocolVersion;
opaque Random[32];",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6614,TLS 15+,140,105,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",104,-1,"
uint8 CipherSuite[2];    /* Cryptographic suite selector */",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6615,TLS 15+,140,106,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",105,-1,"
struct {
ProtocolVersion legacy_version = 0x0303;    /* TLS v1.2 */
Random random;
opaque legacy_session_id<0..32>;
CipherSuite cipher_suites<2..2^16-2>;
opaque legacy_compression_methods<1..2^8-1>;
Extension extensions<8..2^16-1>;
} ClientHello;",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6616,TLS 15+,140,107,"ExtensionOfPrevious,ContextSetting,ContextSetting",103,-1,"
So combining the two for a ClientHello gives something like",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6617,TLS 15+,140,108,"ExtensionOfPrevious,ContextSetting,InformationProviding",107,-1,"
struct {
HandshakeType msg_type	= 0x01;    	/* handshake type client_hello*/
uint24 length		= 0x001234;     /* example of number of bytes in message */
struct {
ProtocolVersion legacy_version = 0x0303;    /* TLS v1.2 */
Random random;
} ClientHello;
}  ClientHelloHandshake",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6618,TLS 15+,140,109,"ExtensionOfPrevious,ContextSetting,ContextSetting",108,-1,"
In trying to understand the transcript hash, I read in *TLS **1.3:
section 7*",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6619,TLS 15+,140,110,"ExtensionOfPrevious,ContextSetting,InformationProviding",109,-1,"
""Note that because the handshake transcript includes the random
values in the Hello messages, any given handshake will have different
traffic secrets""",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6620,TLS 15+,140,111,"InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting",110,-1,"
This gives me a warm fuzzy feeling but *TLS 1.3: section 7.1* states",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6621,TLS 15+,140,112,"ExtensionOfPrevious,ContextSetting,InformationProviding",111,-1,"
""Messages are the concatenation of the indicated handshake
messages, including the handshake message type and length fields, but
not including record layer headers.""",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6622,TLS 15+,140,113,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",112,-1,"
I am guessing that ""handshake message"" is the ClientHelloHandshake I
created above and the ""record layer headers"" is the ClientHello,",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6623,TLS 15+,140,114,"ClarificationElicitation,ExtensionOfPrevious,ContextSetting,Question,ContextSetting",113,-1,"
Does this mean that the transcript-hash just uses the
ClientHelloHandshake.msg_type and ClientHelloHandshake.length
highlighted below?",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6624,TLS 15+,140,115,"ExtensionOfPrevious,ContextSetting,InformationProviding",114,-1,"
struct {
*HandshakeType msg_type = 0x01; /* handshake type client_hello*/ uint24
length = 0x001234; /* example of number of bytes in message */*
struct {
ProtocolVersion legacy_version = 0x0303;    /* TLS v1.2 */
Random random;
} ClientHello;
}  ClientHelloHandshake",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6625,TLS 15+,140,116,"ClarificationElicitation,ExtensionOfPrevious,Question,ExtensionOfPrevious","114,115",-1,"
If so, how does ClientHelloHandshake.ClientHello.random get included in
the handshake transcript?",<1989fd9d-d76c-bc0c-dce0-de47a76fe94c@objectiveintegration.uk>,mark.dunn@objectiveintegration.uk,0.0,0,35,2017-04-24 13:21:03
6626,TLS 15+,140,254,"InformationProviding,Answer,ContextSetting,ProposeAction,Social,ProposeAction",116,-1,"Hi Mark,

You might find it helpful to refer to:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13-vectors/

Which contains test vectors.
",<CABcZeBODR4YG9k5D=vDeaFacuNi2tH1AfJVKHSgL-Fzt13QU_w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-24 05:38:42
6627,TLS 15+,140,257,"InformationProviding,Disagreement,NeutralResponse",113,113,"
I think this is where you are going wrong. Remember that in order to be
serialized on the wire the handshake message is wrapped in a TLSPlaintext
structure (and then potentially encrypted). It's those which are the record
headers and which are excluded. What is included is what you are calling
ClientHelloHandshake.

-Ekr
",<CABcZeBODR4YG9k5D=vDeaFacuNi2tH1AfJVKHSgL-Fzt13QU_w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-04-24 05:38:42
6628,TLS 15+,140,273,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,NeutralResponse",254,254,"
Caveat: that is specific to -18.  NSS hasn't been fully updated to
support -19 and until it does I won't be able to update the draft.",<CABkgnnWoH0ToyJJk9m43BBqOAtYvS7id3O9tXn6iEFteKQj6bA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-04-25 08:16:59
6629,TLS 15+,141,10,"InformationProviding,ContextSetting,InformationProviding",,-1,"I appears that we’ve got enough consensus/interest to adopt draft-thomson-tls-tls13-vectors based on this thread:
https://mailarchive.ietf.org/arch/msg/tls/LOS06OPDeLOrdtE8QoBLXEHO51s",<D1C0A3D8-31AA-4EC0-A450-459F37451453@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-03 08:59:25
6630,TLS 15+,141,11,Social,,-1,"
Martin,",<D1C0A3D8-31AA-4EC0-A450-459F37451453@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-03 08:59:25
6631,TLS 15+,141,12,"InformationSeeking,ProposeAction,StateDecision,Social,InformationProviding,ProposeAction",,-1,"
Please submit draft-ietf-tls-tls13-vectors at your earliest convenience.  I’ll set up a tlswg repo in just a sec.",<D1C0A3D8-31AA-4EC0-A450-459F37451453@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-03 08:59:25
6632,TLS 15+,141,13,"Thanking,Thanking",,-1,"
Thanks!",<D1C0A3D8-31AA-4EC0-A450-459F37451453@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-03 08:59:25
6633,TLS 15+,141,14,Social,,-1,"
J&S",<D1C0A3D8-31AA-4EC0-A450-459F37451453@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-03 08:59:25
6634,TLS 15+,141,39,"InformationProviding,StateDecision,ContextSetting,StateDecision",12,-1,"And it is done.  I fluffed one change: NSS supports exporters now.
I'll catch that when there is cause to generate a new version.",<CABkgnnXuno=Pu1ys=COe8DADdWk_SBbrtdkYCto+K37YjF-zAA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-01-04 15:54:32
6635,TLS 15+,141,40,"InformationProviding,ContextSetting,InformationProviding",,-1,"
PRs and issues can be opened here:
https://github.com/tlswg/draft-ietf-tls-tls13-vectors",<CABkgnnXuno=Pu1ys=COe8DADdWk_SBbrtdkYCto+K37YjF-zAA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-01-04 15:54:32
6636,TLS 15+,141,41,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",39,-1,"
The editor's copy is here: https://tlswg.github.io/draft-ietf-tls-tls13-vectors/",<CABkgnnXuno=Pu1ys=COe8DADdWk_SBbrtdkYCto+K37YjF-zAA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-01-04 15:54:32
6637,TLS 15+,141,44,Social,,-1,"Martin,",<60C134CA-ED44-4162-88EC-1BA3B3455148@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-05 16:06:06
6638,TLS 15+,141,75,"Thanking,Thanking",41,-1,"
Thanks for getting this up.",<60C134CA-ED44-4162-88EC-1BA3B3455148@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-05 16:06:06
6639,TLS 15+,141,76,Social,,-1,"
spt",<60C134CA-ED44-4162-88EC-1BA3B3455148@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-05 16:06:06
6640,TLS 15+,143,44,"InformationProviding,InformationProviding,ContextSetting,ProposeAction,StateDecision",,-1,"Yes, I also don't see the point of vanity hosts, but I guess some people
want this for some reason.

Ivan's language seems fine to me, for the most part, but I still wonder if
it wouldn't make STS implementation harder for MTA developers than the
alternative (which is to just say you can't use SNI with STS).

I don't see anyone else weighing in here, though, which makes me think
nobody cares too much about it. Let's see if changing the subject causes
renewed interest. ;)
",<CANtKdUdtfmGOgz2VLkP-edvf2QmxxsqG-E_JPy9_M6jJ8W=ncQ@mail.gmail.com>,dmargolis@google.com,0.0,0,16,2017-10-19 11:03:47
6641,TLS 15+,143,56,"ClarificationElicitation,ContextSetting,Social,ClarificationElicitation,ContextSetting",44,44,"
Maybe this was explained somewhere earlier in the thread and I missed it, but can you explain what ‘vanity hosts’ are?

-Jim",<88476804-E35A-41A6-A65C-3AD0122D26C4@bluepopcorn.net>,fenton@bluepopcorn.net,0.0,0,5,2017-10-20 18:09:16
6642,TLS 15+,143,94,"Answer,InformationProviding,Social,InformationProviding,Answer",56,56,"
An alternate name for an MX host that might require a non-default
certificate chain based on SNI.  For example, a customer example.org
of provider example.net might have:

example.org. IN MX 0 smtp.example.org.
smtp.example.org. IN CNAME smtp.example.net.

instead of the more direct:

example.org. IN MX 0 smtp.example.net.

sometimes the customer will even alias the target IP address:

; customer zone
example.org. IN MX 0 smtp.example.org.
smtp.example.org. IN A 192.0.2.1

; provider zone
smtp.example.net. IN A 192.0.2.1

This type of aliasing makes some sense for port 587 submission,
where changes may require reconfiguring MUA settings, but not
so much for inbound MX, and yet it is done in a small, but
perhaps non-negligible fraction of cases.

STS might require that this not be done, and it would likely
not be a major barrier to adoption.  Or this could be supported,
and client MTAs would send SNI to elicit the appropriate chain.

Viktor.",<0D7BF96E-C9EA-4524-8A51-183C2FD2E814@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-21 15:40:58
6643,TLS 15+,143,139,"InformationProviding,ContextSetting,Thanking",94,94,"Thanks, Viktor; that explanation helped a lot.

One situation I can think of that might still require SNI is if two providers merged and combined their infrastructure. Example.com and example.net might each have 1000s of customers and it might not be practical for them to get the customers’ MX records updated in a timely fashion, so the same IP might need to handle requests for both domains for some period of time.

-Jim",<AD41EB09-20A8-4D97-B743-F39D6DFF3D51@bluepopcorn.net>,fenton@bluepopcorn.net,0.0,0,5,2017-10-21 18:22:05
6644,TLS 15+,143,157,"NeutralResponse,Social,Question,InformationProviding,Agreement",139,139,"
Yes, that's somewhat plausible, but on the the other hand one might
expect the providers to have sufficiently many IPs to not require
immediate consolidation onto a single pool of MX IP addresses.  They
can then migrate customers onto a common platform over time.
Or alternatively, they can deploy a certificate with multiple DNS-ID
subjectAltNames that matches both sets of names.

Thus, with SMTP there are workable alternatives to SNI.  The question
is how much flexibility to include in STS.

Viktor.",<0A6AB37C-D366-42EC-AE11-261D6A57F1F6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-21 22:36:15
6645,TLS 15+,143,225,"ClarificationElicitation,InformationProviding,ClarificationElicitation,InformationProviding",44,44,"
Why would it make implementation harder? SNI has been widely supported for
a very long time in client libraries.
",<CANHgQ8EyiOd+quPdyDkFvMigDNAqGAOtAJefG+R13GTUORHt7Q@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 17:11:05
6646,TLS 15+,143,226,InformationProviding,,44,"
I don't see anyone else weighing in here, though, which makes me think",<CANHgQ8EyiOd+quPdyDkFvMigDNAqGAOtAJefG+R13GTUORHt7Q@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 17:11:05
6647,TLS 15+,143,244,"NeutralResponse,Answer",225,225,"
Yet another callback to handle (both OpenSSL and GnuTLS, server side).",<baff177e-311e-7937-b806-c4ee681c1f04@wizmail.org>,jgh@wizmail.org,0.0,0,14,2017-10-23 17:26:08
6648,TLS 15+,143,315,"NeutralResponse,ContextSetting,NeutralResponse,ContextSetting",44,-1,"There's another angle to take into account: SNI is mandatory to implement
in TLS 1.3:
",<CANHgQ8HZMsqPuLRGbXmCz8VXY+TgQL9wXXcw7N0zTEh=a-Gi0A@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 17:24:08
6649,TLS 15+,143,316,"ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious",315,-1,"
https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#rfc.section.9.2

For better or worse, SNI is part of TLS, and has been for more than a
decade. IMO, all new standards should assume SNI by default and disable it
only if there are very strong reasons.
",<CANHgQ8HZMsqPuLRGbXmCz8VXY+TgQL9wXXcw7N0zTEh=a-Gi0A@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 17:24:08
6650,TLS 15+,143,400,"NeutralResponse,Agreement,InformationProviding,InformationProviding,Agreement,ContextSetting,StateDecision",316,-1,"Harder as in, per Viktor's comment, at least Postfix has special casing
around when to send SNI. So, more special casing. But you may be right that
this is just how it should be all the time.

All that said, the language you proposed seems reasonable to me. I'm happy
to try to work it in.
",<CANtKdUeWj2nU-2aOkzeD8KCbC6855P=Qx1yuK8vMB-+AP7pkaQ@mail.gmail.com>,dmargolis@google.com,0.0,0,16,2017-10-23 18:28:08
6651,TLS 15+,143,436,"NeutralResponse,Question,ProposeAction,InformationProviding,Social,ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction",316,316,"
MTI is not always the same as mandatory to use.  Is it actually
required to be used?  SNI would clearly be used for the policy
retrieval (HTTPS), but is not an obvious requirement for MTA-to-MTA
SMTP.  There has to be a reason other than cargo-cult to send it.
That's what we're discussing.  Mere analogies to HTTP are rather
weak I'm afraid.

MTAs are not browsers or Web servers and have a very different
history and model of TLS deployment[1].  SNI is presently largely
unused with MTA-to-MTA SMTP.  RFC7672 requires servers that
implement DANE to continue with a default chain on receipt of
an unrecognized SNI name.  Perhaps the same could be an explicit
requirement for SMTP-STS, otherwise sending SNI could cause more
harm than good.

Viktor.

[1] On the other hand this model is substantially more effective
at protecting a larger share of the traffic from passive attacks,
see https://transparencyreport.google.com/safer-email/overview
where we see that ~89% of email traffic to/from Google is TLS
encrypted.  Last I looked HTTPS was reported at around 50% of Web
traffic.",<71910E7B-3FE9-4992-B36B-F6A8DF94BB42@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 12:47:52
6652,TLS 15+,143,476,"NeutralResponse,InformationProviding,InformationProviding,ContextSetting",,-1,"
The use of SNI does indeed introduce a privacy leak. However, the leak
only happens with ""multiplexed servers"", when a single server waiting
for connections at a single IP address can serve multiple ""virtual
servers"". In that case, the multiplexed server uses the SNI to direct
the connection to the context of the ""virtual server"", and then use the
appropriate certificate for that server. There is no real SNI leak when
the IP address corresponds to a unique server -- the SNI would contain
the string otherwise returned by ""get host by address"" or some
equivalent API. But there is leak when the server is multiplexed. Which
makes it a hard problem, because the multiplexed server needs to
identify the target virtual server, and needs to do that before
encryption keys are negotiated by TLS. The clear text SNI is the current
solution to the problem.

The TLS working group is well aware of this issue, and there is in fact
work in progress to address it --
https://datatracker.ietf.org/doc/draft-ietf-tls-sni-encryption/. Since
this is a really hard problem, you can expect progress to be slow.

As Viktor says, the easy way for STS is to avoid the ""multiplexed
server"" scenario. In fact, that's a pretty natural use of MX records.
The MX record for ""some-personal-server.com"" would point to
""mta.example.net"", the SNI would be ""mta.example.net"", and the IP
address in the IP header would be that of ""mta.example.net"". The SNI
does not introduce a privacy leak in that scenario.
",<66a251f7-3320-7f1b-7f93-1db410ebc541@huitema.net>,huitema@huitema.net,0.0,0,1,2017-10-23 10:00:05
6653,TLS 15+,143,527,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting",476,476,"
In practice it would add a leak, because, for example, Microsoft has
a wildcard cert for *.mail.protection.outlook.com, and each hosted
domain has:

example.com. IN MX 0 example-com.mail.protection.outlook.com

So while there is just one default certificate serving each of the
millions of hosted domains, the SNI would leak the exact name of
each domain.

Viktor.

nist.gov. IN MX 0 nist-gov.mail.protection.outlook.com.
nist-gov.mail.protection.outlook.com. IN A 23.103.198.10
nist-gov.mail.protection.outlook.com. IN A 23.103.198.42
nist-gov.mail.protection.outlook.com. IN AAAA 2a01:111:f400:7d01::10
nist-gov.mail.protection.outlook.com. IN AAAA 2a01:111:f400:7d02::10
nist-gov.mail.protection.outlook.com[23.103.198.10]
TLS = TLSv1.2 with ECDHE-RSA-AES256CBC-SHA384
name = mail.protection.outlook.com
name = *.mail.eo.outlook.com
name = *.mail.protection.outlook.com
name = mail.messaging.microsoft.com
name = outlook.com
depth = 0
Issuer CommonName = Microsoft IT SSL SHA2
Issuer Organization = Microsoft Corporation
notBefore = 2016-08-30T16:33:37Z
notAfter = 2018-04-30T16:33:37Z
Subject CommonName = mail.protection.outlook.com
Subject Organization = Microsoft Corporation
depth = 1
Issuer CommonName = Baltimore CyberTrust Root
Issuer Organization = Baltimore
notBefore = 2014-05-07T17:04:09Z
notAfter = 2018-05-07T17:03:30Z
Subject CommonName = Microsoft IT SSL SHA2
Subject Organization = Microsoft Corporation",<90BCDB84-6F2C-4373-826B-9EEB45AA99A3@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 13:21:38
6654,TLS 15+,143,556,"Question,ProposeAction,Question,ClarificationElicitation,InformationProviding,ProposeAction",527,527,"
Maybe add a discussion of this specific privacy issue in the draft? It
looks like the leak could be avoided by writing the records differently.
Do we understand why Microsoft and maybe others do that? Is there some
kind of tension between management and privacy?
",<eb93c7f5-90da-90d7-f292-3f2df567de93@huitema.net>,huitema@huitema.net,0.0,0,1,2017-10-23 10:39:28
6655,TLS 15+,143,622,"Answer,InformationProviding,ProposeAction,Question,Social,Apologising,InformationSeeking,Question,InformationProviding,Answer,Agreement,ContextSetting,ProposeAction,Apologising",556,556,"
Perhaps they want to be able to locate the MX hosts for some customer
domains in a different datacentre based on customer requirements.  I
don't know whether traffic for ""nist.gov"" and ""taipei.gov.tw"" transits
the same servers, there could be demand for keeping both ""on-shore"".

Certainly, if SNI is deemed useful, some discussion might be warranted
in security considerations.  But we're not yet discussing whether on
balance SNI (to support vanity domains with virtual-hostring cert
selection) does more good than harm for MTA-to-MTA SMTP.

Once there's some perspective on whether SNI is sufficiently useful
to be desirable, we can ask whether the cost of that justifies the
privacy ""leak"".

In other words, who's depending on SNI to vend the right certificate
on port 25 inbound MX hosts?  Is their use case compelling?  We know
that vanity names are used, but they seem mostly cosmetic.  And
even (as with Microsoft) when an MX host has multiple names, all
the names match the same certificate (wildcard or multiple SANs),
so an actual hard requirement for SNI is not yet obvious to me.

I was hoping that some folks on this list would have some real
operational perspective, but so far I am the only one posting
data about actual deployments.  Perhaps the folks Google, Microsoft,
... would contact their operations and support teams and get a sense
of whether SMTP servers with multiple chains selected by SNI is
something they find they need to support.

Exim actually supports server-side SNI (mostly for port 587 I
expect), perhaps Jeremy could comment on whether Exim users
make real use of this to host multiple virtual TLS MX hosts
for port 25, and would really not want to just consolidate on
a single MX hostname.

In other words, where's the data that makes it possible to
understand whether SNI is actually useful, or mostly just
an auto-pilot design to look like virtual-hosting with HTTPS
where the requirements are very different.

Viktor.

P.S.

Some may notice that I failed to do the necessary research
on this for RFC7672, and just assumed that SNI might be
needed and chose to require it, just in case.  Sorry about
that...  At the time I wanted above all else to maximize
the chance that   an advertised TLSA record would match,
and SNI could hypothetically be needed.  I did not consider
proscribing such a dependency.  The same questions should
have applied.",<285D4781-74B0-44EA-9776-5DE23D745DB3@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 14:37:45
6656,TLS 15+,143,680,"NeutralResponse,ContextSetting,InformationProviding,NeutralResponse,ContextSetting",622,622,"
Correct me if I am wrong, but at present no one checks if presented SMTP
certificates are valid. In fact, a major reason we need MTA-STS is to make
a clean start. You're not going to get the real-world data you're looking
for because why would anyone bother when all certificates are being
ignored, and MTAs downgrade to plaintext anyway.

SNI was not in SSL 3.0 and TLS 1.0 because back then there was no need for
it. And now, 20+ years, we have this:
",<CANHgQ8GXp8bFui4tSQWOn34NLVAPXfnTktfi=g7p=QUEM9pRiw@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 21:56:14
6657,TLS 15+,143,681,"InformationProviding,Question,InformationProviding,ExtensionOfPrevious",680,622,"
https://developer.akamai.com/blog/2017/10/20/encrypting-web-need-support-tls-sni-remaining-clients/

The real question is how shall we protect email 20+ years from now. And, if
SNI is not mandated now, what hoops shall we have to go through to make
things right :)

Thus, my view is that MTA-STS should be a clean and robust protocol,
designed learning from mistakes of the past.
",<CANHgQ8GXp8bFui4tSQWOn34NLVAPXfnTktfi=g7p=QUEM9pRiw@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 21:56:14
6658,TLS 15+,143,714,"Disagreement,ProposeAction,InformationProviding,Social,InformationProviding,NeutralResponse,ProposeAction",681,681,"
These are generalities that ignore the specific issues at hand.
If we conclude that there's no need for virtual-hosting of TLS
(multiple chains at the same transport endpoint) with MTA-to-MTA
SMTP, then there's demonstrably no need for SNI, no matter how
much goodness it brings to the Web.

I still see no discussion of the use-cases that do or not motivate
the need for TLS virtual hosting with MTA-to-MTA (port 25) SMTP.
Let's not waste time on vague generalities.

Carping on TLS security in SMTP counter-productive, SMTP encrypts
a larger fraction of its traffic than the web does, precisely
because it is opportunistic.  Setting the bar too high can often
reduce overall security, RFC7435 is pertinent here.

Viktor.",<8673FAEC-CD26-4092-AFD5-5A681A167B6D@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 17:45:10
6659,TLS 15+,143,805,"Disagreement,InformationProviding,Disagreement,ContextSetting",714,714,"
Perhaps we don't agree with what's the specific issue at hand. For me, it's
the fact that you wish to go against the lessons-learned elsewhere, which
came at a very high cost. I made a point how 20 years ago others couldn't
perceive the need for SNI in TLS, knowing what they knew then. But you
responded to that with hand waving.
",<CANHgQ8G-+BcHf4Cu2Y_oD_8f1x3rLdD05n6CZgJmkrjo6HF3GA@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 23:39:57
6660,TLS 15+,143,807,"Disagreement,ProposeAction,NeutralResponse,InformationProviding,NeutralResponse",714,714,"
We can conclude that, and it may be true today, but it would still be
prudent to mandate SNI just so that it could be used at some point in the
future, should the need arise.

In other words, we accept that we don't know everything and design so that
our mistakes can be rectified.

If the group strongly believes there is a privacy issue with SNI that makes
it not acceptable, so be it. But I haven't seen other compelling arguments
against.
",<CANHgQ8G-+BcHf4Cu2Y_oD_8f1x3rLdD05n6CZgJmkrjo6HF3GA@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 23:39:57
6661,TLS 15+,143,809,"Disagreement,NeutralResponse,NeutralResponse",714,714,"
Actually, virtually all important HTTP traffic is protected with not only
strong encryption, but also with certificate checking, HSTS, and even
public key pinning. In the meantime, anyone can downgrade an SMTP
connection to plaintext.

If SMTP is better at encrypting over HTTP, it's only because email is
concentrated in the hands of several big providers.
",<CANHgQ8G-+BcHf4Cu2Y_oD_8f1x3rLdD05n6CZgJmkrjo6HF3GA@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-23 23:39:57
6662,TLS 15+,143,864,"NeutralResponse,ProposeAction,Disagreement,NeutralResponse,ProposeAction",807,807,"
Well, we are designing a standard for the foreseeable future, and some
crystal ball gazing is appropriate.  We should make a best-effort to
determine what might be reasonably useful, and produce a standard
that meets reasonable requirements, that is not bloated with
features that are unlikely to be useful or perform reliably.

Your past experience with the Web is a good reason to not dismiss
flexibility to lightly, so the issue is worth discussing, but it
does not justify SNI on merely a ""we might need it some day"" basis.
There really does need to be a reasonable use-case.
",<60325D1E-EDC5-4FAF-91FD-5B40BD67FAB4@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 19:27:07
6663,TLS 15+,143,866,"NeutralResponse,NeutralResponse",807,807,"
Sometimes too many features are also a mistake that is hard to rectify.
",<60325D1E-EDC5-4FAF-91FD-5B40BD67FAB4@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 19:27:07
6664,TLS 15+,143,868,"ContextSetting,ProposeAction,InformationProviding,Social,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision",807,807,"
All I'm saying is:  Let's discuss whether there's a plausible use-case
for SNI in MTA-to-MTA SMTP.  Not whether SNI proved to be needed for
HTTP.  HTTP lacks an equivalent of MX indirection, so the requirements
are different.

Who needs SNI for port 25 SMTP, are they a small minority and can they
make do without.  Is there significant customer demand, ...

This may be too tiresome, and perhaps the easy way out it to throw in
the kitchen sink so that the obstacle to progressing the draft goes
away, but that sadly leaves the questions unaddressed and the spec
potentially bloated with a pointless privacy leak.

I think that if Google, et. al. read the tea leaves, chatted with
some more email service operators (rather than TLS geeks like us)
there'd probably be a sensible answer to this question, and I for
one would go with whatever best matches expected needs.

Viktor.",<60325D1E-EDC5-4FAF-91FD-5B40BD67FAB4@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-23 19:27:07
6665,TLS 15+,143,991,"NeutralResponse,Apologising,Agreement,Social,InformationSeeking,InformationProviding,Agreement,Disagreement,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Apologising",868,-1,"I believe Google's MTAs are sending SNI. But the only time this would
matter would be for cases like
https://support.google.com/a/answer/2520500?hl=en, since ordinarily nobody
is validating identities on server-to-server SMTP.

Regarding arguments in favor of supporting SNI, Jim made the best attempt
in this thread to come up with a motivating use case, and I don't find it
very compelling. In his example (where two hosting providers merge
infrastructure), a) STS does not require that the hostnames actually match
the certificate presented (but only that the certificate match the
policy!), and b) even if the provider wants the hostname to match the
certificate, they can just use a single cert with multiple SANs to achieve
this.

To expand on this slightly, I believe the vanity hostname discussion was
(and my apologies for this) misleading. Even given Viktor's example

example.com. IN MX 0 smtp.example.com.
smtp.example.com. IN CNAME smtp.provider.net.

there's no need for SNI *or* a certificate that has multiple SANs (for
example.com and provider.net); the STS policy in all cases matches ""
provider.net."" The only reason to desire the certificate hostname to be ""
example.com"" is if example.com wants to have two different MX records
pointing at (say) provider1.net and provider2.com, and wants both to share
the ""example.com"" certificate--and even this is nonsensical, since they can
just have a policy that lists multiple acceptable ""mx"" patterns (""mx:
provider1.net, mx:provider2.com, mx: example.com"", with the third thrown in
for safety!).

Ivan, you're definitely right that we may not be able to foresee all the
uses here, but I do think there are clear *differences* between HTTP and
SMTP that make the analogy imperfect. In HTTP, there are two specific
constraints not applicable to our use case which motivate SNI: first, the
hostname is a UI component in the browser, so when you have two different
organizations sharing a HTTP endpoint, they don't want to share a hostname;
second, the hostname is required to match the certificate. The first is not
true for SMTP (the MX hostname doesn't really matter in the UX) and the
second is not true for STS (the ""mx"" pattern constrains the certificate and
not the DNS record).

Regarding arguments against SNI, I don't think the privacy risk is
significant, or really a reason not to require SNI. The only case I see
where SNI introduces an actual privacy leak that wasn't present before is
the case of multi-tenant shared-IP hosting where instead you would use a
shared cert with multiple SANs. Otherwise, if (instead of SNI) you use
dedicated IPs, you of course have same privacy leak.

In short, I see neither strong arguments against SNI nor any particular
reason to support it. I agree with Viktor that we can just require it (with
Ivan's language) so as to move the spec forward and be future proof. That
sounds less than satisfying to me, but it's not something I'd lose sleep
over.

I'll try to ask around off-list about SNI usage. But a better motivating
example from the group here would probably also help the discussion.

Dan
",<CANtKdUfGEs+pF7q=khZk5gdj4xP0=oWWhEF8kETHWMkNCEAKPg@mail.gmail.com>,dmargolis@google.com,0.0,0,16,2017-10-24 12:10:57
6666,TLS 15+,143,1041,"NeutralResponse,InformationProviding,NeutralResponse",991,991,"
One thing to be _very_ careful of is not to break SNI semantics. Which
include ""one name, which has to be correct"".

SNI assumes the web model, where there is only one correct name the
client wants to connect to. In fact, the specification has a note that
earlier drafts supported multiple names, but this was explicitly
dropped as not useful.
",<20171024121504.7nsshmwopj4bknkp@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-10-24 15:15:04
6667,TLS 15+,143,1042,"ContextSetting,ProposeAction,InformationProviding,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction","1041,991",991,"
One way to do that with sending SNI would be:

- Check received MX (and SRV?) records against the policy (including
the possible implicit MX). Discard all that do not match. If no
targets remain, raise temporary error.
- Pick a mail exchanger from the remaining entries, look up its
address, and connect with SNI being the target of the MX (or SRV?)
record (without chasing CNAMEs).

And since SNI is intended for ""one name"" standard certificate name
validation scenario, this would also allow using the standard name
validation instead of the wildcard-to-wildcard matching.
",<20171024121504.7nsshmwopj4bknkp@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-10-24 15:15:04
6668,TLS 15+,143,1043,"ExtensionOfPrevious,InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",1042,991,"
There are a few problems with combining this with ""vanity"" names:
- One has to either break RFCs by pointing MX to a CNAME, or to
shadow provoder addresses (I think some DNS provoders allow
automatic address shadowing).
- If one wants balancing among multiple provoders, one needs multiple
names.
",<20171024121504.7nsshmwopj4bknkp@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-10-24 15:15:04
6669,TLS 15+,143,1044,"InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction",1043,991,"
An alternative I see would be to specify SNI values to use in policy.
Or not sending SNI values at all.
",<20171024121504.7nsshmwopj4bknkp@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-10-24 15:15:04
6670,TLS 15+,143,1045,Social,,991,"
-Ilari",<20171024121504.7nsshmwopj4bknkp@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-10-24 15:15:04
6671,TLS 15+,143,1124,"Disagreement,InformationProviding,Disagreement",1041,1041,"
Actually, it does not have to be correct.  Postfix happily ignores
SNI and continues with the default certificate chain.  Indeed that's
true for every MTA that's using OpenSSL, unless it takes special
care to degrade service by paying ttention to SNI and objecting to
unexpected names.  By default the SNI signal from the client is
simply ignored.  Once again, SMTP is NOT HTTP.
",<47AE070C-A633-43AB-AB0B-77FE64DB38FC@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 13:54:52
6672,TLS 15+,143,1126,"Disagreement,InformationProviding,InformationProviding,Disagreement,ProposeAction",1041,1041,"
No, it is just a hint to the server, that may help it to identify
the right chain.  See

https://tools.ietf.org/html/rfc7672#section-8.1

Each SMTP server MUST present a certificate chain (see [RFC5246],
Section 7.4.2) that matches at least one of the TLSA records.  The
server MAY rely on SNI to determine which certificate chain to
present to the client.  Clients that don't send SNI information may
not see the expected certificate chain.

If the server's TLSA records match the server's default certificate
chain, the server need not support SNI.  In either case, the server
need not include the SNI extension in its TLS HELLO, as simply
returning a matching certificate chain is sufficient.  Servers
MUST NOT enforce the use of SNI by clients, as the client may be
using unauthenticated opportunistic TLS and may not expect any
particular certificate from the server.  If the client sends no SNI
extension or sends an SNI extension for an unsupported domain, the
server MUST simply send some fallback certificate chain of its
choice.  The reason for not enforcing strict matching of the
requested SNI hostname is that DANE TLS clients are typically willing
to accept multiple server names but can only send one name in the SNI
extension.  The server's fallback certificate may match a different
name acceptable to the client, e.g., the original next-hop domain.
",<47AE070C-A633-43AB-AB0B-77FE64DB38FC@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 13:54:52
6673,TLS 15+,143,1128,"NeutralResponse,InformationProviding,Agreement",1041,1041,"
Indeed only one hint can be sent, but it need to be an exact match.
",<47AE070C-A633-43AB-AB0B-77FE64DB38FC@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 13:54:52
6674,TLS 15+,143,1130,"NeutralResponse,InformationProviding,Disagreement,ProposeAction",1042,1042,"
This broken algorithm is precisely why I did not want to see MX
filtering in STS, and so we now only use the names for matching
not filtering.  It neglects to perform loop elimination (removing
all MX hosts worse than the sending host itself when it is one
of the MX hosts for the destination) before discarding names that
don't match the policy.
",<47AE070C-A633-43AB-AB0B-77FE64DB38FC@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 13:54:52
6675,TLS 15+,143,1132,"NeutralResponse,Social,InformationProviding,NeutralResponse",1042,1042,"
SNI is a means to signal the client's most preferred name to the
server.  The server can use that name to identify an appropriate
chain, or it can just ignore it, and should respond with a
default chain if it inspects the name and find no specific chain
for that name.  It is up to client to accept or reject the
certificate chain it ultimately receives from the server.

Viktor.",<47AE070C-A633-43AB-AB0B-77FE64DB38FC@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 13:54:52
6676,TLS 15+,143,1149,"ContextSetting,InformationProviding,Social,InformationProviding,ContextSetting",1128,1128,"
Correction:

s/need to .../need not .../ be an exact match.

Viktor.",<BB07F5F0-AFB5-4A74-93D3-6C41360EA4E0@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 14:12:56
6677,TLS 15+,143,1168,"NeutralResponse,ContextSetting,Agreement,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction",991,991,"
I don't know, I think people will find good uses for it if it becomes
available. For example, here's one: virtual SMTP providers. One company
maintains the core infrastructure, others build businesses that focus on
branding, marketing, and support. Easy to do at scale with SNI, difficult
without. Just an idea.

That said, I of course agree that it's not the same as with HTTP.
",<CANHgQ8EbtHYJ0cA8mLZTZgJEbr+LTCh4mwQ58rPp3Fy7v417iA@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 18:54:46
6678,TLS 15+,143,1197,"Disagreement,NeutralResponse,Social,InformationProviding,NeutralResponse,ContextSetting",1168,1168,"
This is largely unnecessary.  Email users never see the ""branding""
of MX hosts.  Users just see the destination domain.  The MX records
are only seen by unattended software.  The MX records can just point
at the appropriate infrastructure name.

Google and Microsoft already provide hosting to millions of domains
with just one certificate chain that directly or through a wildcard
matches all the MX hosts used to do so.

In Holland there was a recent merger between two hosting companies,
and at the conclusion a few thousand hosted domains updated their
MX records.  Maintaining multiple sets of legacy names and managing
multiple certificate chains going forward is more complicated than
working with the hosted customers to update their DNS.

Viktor.",<66E21DF7-3289-495F-96F1-027DDF45055C@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 14:04:01
6679,TLS 15+,143,1264,"NeutralResponse,InformationProviding,Disagreement,ContextSetting",1197,1197,"
No, it really is. If I am building a business on top of someone else's
infrastructure, I don't want to build on top of something I don't control;
in this case, their domain name. Thus, I don't want to give their MX
servers to my customers. It can be as simple as not wanting your users to
know that you're ""reselling"" someone else's service. It raises all sorts of
questions.

More importantly, once my customers configure their MX, getting them to
change their configuration would be not only impractical, but effectively
impossible. Asking them to change anything would at the very least be an
annoyance, lot of them would refuse, and lots of them would perhaps look
elsewhere.

At the same time, perhaps the business will want to switch to someone else
for the core infrastructure. Or, even, start managing its own
infrastructure.... and so on.
",<CANHgQ8H7H+MBeW5BqSXHDHbCdHETJ5a5939WG4Zte+xAjRd+pA@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 19:15:48
6680,TLS 15+,143,1289,"NeutralResponse,Social,InformationProviding,NeutralResponse",1264,1264,"
An MTA is far more heavy-weight infrastructure component than
a website.  Sure you can start a Web business on someone else's
shared platform, but running email hosting on someone else's
virtually hosted MTA is entirely unrealistic.

MTAs both send and receive email, they run complex anti-spam
and anti-virus filters, they are integrated with mailbox
stores, they have IP reputations as sending systems, they
do DKIM signing, add Authentication-Results headers, store
and forward email, ...

Mere SNI will not come remotely close to giving you a virtual
MTA.  An MTA is NOT a website.

Viktor.",<A92A5D3C-AA15-472E-8588-D1F10576A60D@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 14:47:03
6681,TLS 15+,143,1345,"NeutralResponse,NeutralResponse",1289,1289,"
That's exactly why it's a great candidate for outsourcing. I will let
someone else do all of that techie stuff, and I'll focus on growing the
business.
",<CANHgQ8G4eW4A3tP0027sa-AP9tL818HMFnF+UotUq_=ZA9Zo2g@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 19:57:59
6682,TLS 15+,143,1346,InformationProviding,1289,1289,"
Mere SNI will not come remotely close to giving you a virtual",<CANHgQ8G4eW4A3tP0027sa-AP9tL818HMFnF+UotUq_=ZA9Zo2g@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 19:57:59
6683,TLS 15+,143,1347,"Disagreement,NeutralResponse",1289,1289,"
No, SNI will give me freedom to migrate my stuff if I want to. If I can't
do that, I have no long-term business.
",<CANHgQ8G4eW4A3tP0027sa-AP9tL818HMFnF+UotUq_=ZA9Zo2g@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 19:57:59
6684,TLS 15+,143,1398,"NeutralResponse,InformationProviding,NeutralResponse",1345,1345,"
Hosting email is *all that techie stuff*.  Email is infrastructure.
There's little else you offer by rebranding someone else's
infrastructure.  They can just sell the service directly and cut
out the unnecessary middle-man.

One might try to offer enhanced security, like say protonmail.ch,
but that's not possible on a shared platform...  Otherwise, email
is a commodity.
",<2352F74B-3105-4E8C-9876-F26D0438BBD0@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 15:11:44
6685,TLS 15+,143,1400,"NeutralResponse,ProposeAction,Social,InformationProviding,NeutralResponse,ProposeAction",1347,1347,"
In any case this business model is already dead in the water
given the market dominance of the existing hosting players,
who don't have to pay a third party for infrastructure.

An MTA requires a dedicated IP outbound to avoid reputation
damage from co-hosted miscreant third-parties.  Once you have
that, you may as well have a dedicated inbound IP and the need
for virtual hosting goes away.

Let's get back to hearing actual, not straw-man use-cases...

Viktor.",<2352F74B-3105-4E8C-9876-F26D0438BBD0@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 15:11:44
6686,TLS 15+,143,1484,"NeutralResponse,Question,InformationProviding,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",1400,-1,"Viktor, you're now discussing the viability of the business model. But,
just because you wouldn't attempt it, it doesn't meant that others
wouldn't.

The point was that SNI makes this particular business model possible.
That's all. Is it possible that you will accept that one point so that we
can perhaps discuss something more productive? You don't have to like (the
use case)!

There's probably a ton of small ISPs who might actually be interested in
doing exactly something like this. At least here in the UK, when you get an
Internet connection you also get a bunch of email addresses. Lots of ISPs
are near-virtual too. With my business hat on, I'd love to outsource
anything that I have no interest in, and that's never going to be my core
competency. Email is a commodity. With it taken care of, I can focus on
what's going to differentiate me from others.
",<CANHgQ8G-jHjD1OdZ9YTEVvfiCzmCHe19M4J_r8MZnfMAGjfHAQ@mail.gmail.com>,ivan.ristic@gmail.com,0.0,0,16,2017-10-24 20:35:40
6687,TLS 15+,143,1517,"NeutralResponse,NeutralResponse",1484,1484,"
I am discussing *plausible* requirements, not hypothetical ones.
",<BDA36059-AA92-41CC-A102-4BAE2C94B5A8@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 15:51:45
6688,TLS 15+,143,1518,"Disagreement,InformationProviding,Disagreement",1484,1484,"
I don't believe it does.  Shared hosting for non-cooperating separately
branded MTAs is not particularly plausible.
",<BDA36059-AA92-41CC-A102-4BAE2C94B5A8@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 15:51:45
6689,TLS 15+,143,1520,"NeutralResponse,Social,InformationSeeking,ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,StateDecision",1484,1484,"
And so pay a third party to do something for your users that generates no revenue
for you and that the users can get for free from Gmail, etc?

I'll leave it to the draft authors to determine whether a plausible or
compelling case for requiring SNI has been presented.

My final comment is a reminder that the privacy leak is not hypothetical at
least for Microsoft's hosted customers with MX hosts that have ""example-com""
labels prepended to "".mail.protection.outlook.com"".

Viktor.",<BDA36059-AA92-41CC-A102-4BAE2C94B5A8@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 15:51:45
6690,TLS 15+,143,1533,"ContextSetting,ClarificationElicitation,UnderstandingNegative,NeutralResponse,Social,Question,InformationProviding,ContextSetting,ProposeAction",991,991,"
Regarding a) above: I apparently missed this. Is there any other circumstance where the certificate presented is matched against anything other than the hostname?

If we go forward with REQUIRETLS, this would require that it match against the STS policy if one is present, or against the hostname if one isn’t present. I haven’t yet fully thought through whether this has any security implications, but at first glance it seems like spoofing an STS policy where one isn’t present would be another way to cause REQUIRETLS to accept a certificate it shouldn’t.

-Jim",<52B55172-A2F6-4E42-9B12-D8C5C60A666F@bluepopcorn.net>,fenton@bluepopcorn.net,0.0,0,5,2017-10-24 13:48:37
6691,TLS 15+,143,1568,"Disagreement,InformationProviding,Disagreement",1533,1533,"
No.  If/when REQUIRETLS implies authenticated TLS and not just mandatory,
but possibly unauthenticated encryption, then the authentication mechanism
needs to be left to the sending MTA's choice, it might use DANE, STS, or
some future technology, and what exactly gets checked depends on the
mechanism.  So REQUIRETLS must NOT specify how authentication is done.
",<7DD01770-0DDE-4391-8A0F-406915A816B8@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 14:59:46
6692,TLS 15+,143,1570,"NeutralResponse,InformationProviding,ContextSetting,Social,InformationProviding,NeutralResponse,ContextSetting",1533,1533,"
It should not be easy to ""spoof"" STS policy.  STS would be rather weak
if it were.  STS, for better or worse, is basically as strong as DV
certificate issuance.  Use DNSSEC and publish CAA records that only
allow CAs you trust to not issue certificates for your domain to
a rogue party.  I have:

$ dig +noall +ans -t caa dukhovni.org | grep issue
dukhovni.org.           3600    IN      CAA     0 issue ""dukhovni.org""

as I don't presently use any of the public CAs.

Viktor.",<7DD01770-0DDE-4391-8A0F-406915A816B8@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 14:59:46
6693,TLS 15+,143,1604,"NeutralResponse,ProposeAction,Question,ContextSetting,Social,Question,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",1568,1568,"
I understand that's your position on REQUIRETLS but let's table that for
now and stick with MTA-STS.

The question I have is: Why are we matching the certificate against the
policy rather than against the hostname, and is that done in any other
context? Does that offer any additional flexibility? The draft
introduces a new wildcard-to-wildcard matching algorithm in section 3.5
that needs to be implemented, rather than more conventionally matching
certificate against hostname (and potentially using libraries that
already exist).

While client MTAs don't typically fail to negotiate TLS if there is a
certificate mismatch, at least some do check the certificate and log a
warning, so we're talking about requiring two different matching
algorithms depending on whether there is an STS policy or not.

-Jim",<9c096748-dd92-c227-64b2-e3600a68330b@bluepopcorn.net>,fenton@bluepopcorn.net,0.0,0,5,2017-10-26 18:21:21
6694,TLS 15+,143,1644,"NeutralResponse,InformationProviding,Answer,ContextSetting",1604,1604,"
This was discussed when the change was made, and again in response
to Ivan's questions just in the past week or so.  The flexibility
in question allows the policy to specify that the certificate will
match (say) the recipient domain and not the MX hostname, or either,
or some unspecified hostname in a domain, leaving the match somewhat
fuzzy, which you describe as ""wildcard to wildcard"".
",<B8AE67BE-BC21-497B-905D-6977511AADB6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-26 21:35:34
6695,TLS 15+,143,1646,"NeutralResponse,InformationProviding,NeutralResponse",1604,1604,"
At least one existing library, OpenSSL, widely used by MTAs, already
supports such matching.  Granted other libraries may not yet
have equivalent functionality.
",<B8AE67BE-BC21-497B-905D-6977511AADB6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-26 21:35:34
6696,TLS 15+,143,1648,"NeutralResponse,Social,InformationProviding,NeutralResponse",1604,1604,"
Similarly, for DANE one forgoes the entire PKI matching route and
compares certificates against TLSA records from DNS, and for DANE-TA(2)
records the the names in the certificate against any element of the
triple (TLSA base domain, recipient domain, CNAME expansion of the
recipient domain).  The triple may degenerate to a pair or singleton
for some domains.

Viktor.",<B8AE67BE-BC21-497B-905D-6977511AADB6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-26 21:35:34
6697,TLS 15+,143,1683,"NeutralResponse,Disagreement,InformationProviding,Disagreement,NeutralResponse,ContextSetting",1644,1644,"
Note that according to the analysis linked by Daniel [1], ""only
0.6% of domains present trusted certificates that match their domain
name, while 34.2% present trusted certificates that match their MX
server"".

So to me you are arguing to add a non trivial amount of complexity to
certificate validation, and make it differ significantly from widely
used and tested logic; in exchange for making it easier for <1% of the
hosts to potentially adopt STS.

I think that is a terrible tradeoff: the implementation complexity and
security risks are not worth the marginal benefit.
",<20171027163916.g57sdwg3us6dfzq4@blitiri.com.ar>,albertito@blitiri.com.ar,0.0,0,65,2017-10-27 17:39:16
6698,TLS 15+,143,1752,"InformationProviding,Agreement,ClarificationElicitation,Question,InformationSeeking,ClarificationElicitation,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction",1683,-1,"The decision to use policy-to-SAN matching instead of policy-to-hostname
matching was discussed here (
https://www.ietf.org/mail-archive/web/uta/current/msg01938.html). I think
the WG was at the time largely in consensus (or we misread the consensus).
I thought we also discussed this at IETF95, but at this point my memory is
hazy.

To be clear, I think you are right that this affects a small number of
users. RFC 7672 also allows this ""nexthop"" matching, but I think it's OK
for STS to enforce a ""must match the hostname"" policy. On the flip side, I
believe SAN matching is also fairly easy to implement (~10 lines of
pseudocode in the Appendix--hopefully correct!--and Viktor says OpenSSL
already exposes such a function).

My understanding is that while you and Jim would prefer hostname matching
and Viktor (and others?) would prefer SAN matching, nobody has said that if
their non-preferred option is chosen this is a blocker for implementation.
Am I right?

If that's correct, process-wise, should we treat this as resolved
previously (in draft 03), or should we try to revisit the consensus and
close it out quickly?
",<CANtKdUfKseq0nKKw4zcTu8adrXHKPWSi3Fgfxeo+AACqRtQknw@mail.gmail.com>,dmargolis@google.com,0.0,0,16,2017-11-01 10:59:20
6699,TLS 15+,143,1785,"Agreement,Agreement,ContextSetting",1752,1752,"
I have to agree. Given that few people are speaking up in explicit
support for this change, existing consensus hold.
",<d9403996-a78a-9144-1b88-86a90678a346@mnt.se>,leifj@mnt.se,0.0,1,1,2017-11-01 16:24:14
6700,TLS 15+,143,1826,"NeutralResponse,ContextSetting,ProposeAction,Question,Social,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",1752,1752,"It looks like this is conflating a couple of different things: (1)
matching CN vs. SAN on the certificate, and (2) matching whatever on the
certificate against hostname vs. STS policy.

For (1) I favor doing whatever browsers do, which I thought was to match
against either CN or any of the names listed in the SAN.

(2) I favor matching the certificate against hostname rather than
policy, because MTAs that already verify TLS certificates (even if it's
only advisory info for log files and Received header fields) do it this
way currently. Otherwise, certificates are matched against different
things depending on whether there's an STS policy or not, and I don't
see a reason to change current behavior. What's the advantage of
matching against policy?

If this is already decided, it's already decided, but I wanted to at
least frame the issue correctly.

-Jim",<65a41c7c-611d-6e5c-762d-fcbd9dd2a0fb@bluepopcorn.net>,fenton@bluepopcorn.net,0.0,0,5,2017-11-01 10:26:37
6701,TLS 15+,143,1909,"NeutralResponse,Apologising,Thanking,InformationProviding,Answer,InformationProviding,Answer,Agreement,NeutralResponse,ContextSetting,StateDecision,Thanking,Apologising",1826,-1,"Sorry, I was referring only to the second issue. I don't think the CN vs
SAN matching is in contention, but you're right to clarify; thanks for that.

The issue was discussed in more detail in the linked thread (
https://www.ietf.org/mail-archive/web/uta/current/msg01938.html). The main
point made in favor of SAN matching, I think, is that there may be some
(empirically rare, as Alberto pointed out) cases where people have existing
certificates that match the nexthop domain and not the MX hostname; RFC7672
explicitly supports this, as I recall. There was also a concern (discussed
previously) that hostname matching lends itself to modifying the MX
traversal algorithm in potentially broken ways--this is avoidable, but it
is a bit of an implementation gotcha.

These are solvable issues, and valid options very much exist in the
hostname matching direction, but I'm trying to distinguish between a
compromise and a decision that would impede implementation or result in a
seriously broken design going forward. I read this as the former and not
the latter.

To answer your point specifically about existing matching logic, *certificates
*which already match the hostname will continue to work perfectly in this
model, and in fact admins who are unaware that we match SANs and think we
match hostnames will nonetheless always craft working policies. *MTAs* who
match certificates against hostnames can, of course, continue to do so, but *in
addition* will have to match certificates against policies. The policy and
hostname checks may result in different outcomes, and an MTA who is
implementing some other certificate validation will have to figure out what
to do then, but this is beyond the scope of the spec here.

Anyway, I am still not hearing strong objections, but I'm happy to hold out
a bit longer. I hope to have a new draft with fixes for the other
discussions on this list shortly.
",<CANtKdUcr=HQECK9OFU2AsM0LypMGSSwGrWM=+-9KWHwnugi7yw@mail.gmail.com>,dmargolis@google.com,0.0,0,16,2017-11-01 18:02:54
6702,TLS 15+,143,2073,"NeutralResponse,InformationProviding,NeutralResponse","868,991",-1,"Google's MTA's send SNI, and we have used it for inbound smtp to provide
white label support for large GSuite customers.  It was more important for
MSA, but these customers all wanted that level of control at the MX level
as well.",<CABa8R6sEjuj5NdfKhk2QgX-pc6fgYDgEycP0d2kW5i5qoTKAgQ@mail.gmail.com>,blong@google.com,0.0,0,6,2017-10-24 12:54:35
6703,TLS 15+,143,2074,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",2073,-1,"
Without SNI, we had to provision extra IP addresses, which are somewhat
constrained.  It also requires a lot more operational overhead, or a very
complicated network infrastructure such as that used by GCP and AWS that
involves programmable IPs/routing from the application stack.  Obviously,
white label also requires distributing signed certificates periodically,
which is also operational overhead, though again, the modern cloud systems
are having to implement all of that anyways.",<CABa8R6sEjuj5NdfKhk2QgX-pc6fgYDgEycP0d2kW5i5qoTKAgQ@mail.gmail.com>,blong@google.com,0.0,0,6,2017-10-24 12:54:35
6704,TLS 15+,143,2075,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",991,-1,"
The privacy leak seems pretty minor, ie at the Google level, it would only
provide you with knowledge of percentage of connections to each of our
white label customers.  The majority of mail is already large MTA to large
MX.  Sure, at the boutique or personal server level, it might provide a bit
more data, but if you're only handling mail for ~5 domains, knowing the
specific ones for a transaction seems pretty minor.  One shouldn't assume
that those that care don't have a copy of the world's DNS, and will know
what 5 MX records are pointed at your IP.",<CABa8R6sEjuj5NdfKhk2QgX-pc6fgYDgEycP0d2kW5i5qoTKAgQ@mail.gmail.com>,blong@google.com,0.0,0,6,2017-10-24 12:54:35
6705,TLS 15+,143,2076,"Agreement,Agreement,ProposeAction",991,-1,"
I agree that we should not exclude SNI usage, and we should probably
encourage it.",<CABa8R6sEjuj5NdfKhk2QgX-pc6fgYDgEycP0d2kW5i5qoTKAgQ@mail.gmail.com>,blong@google.com,0.0,0,6,2017-10-24 12:54:35
6706,TLS 15+,143,2096,"Thanking,ProposeAction,Social,InformationProviding,NeutralResponse,ProposeAction,Thanking",2073,2073,"
Thanks for that.  That's exactly the kind of information this
discussion needed.  The MSA case is indeed the more compelling
one, but it seems that some customers want this for MX too, and
once they've paid the logistical price of making SNI work for
submission, they sometimes choose to also employ vanity/white-label
MX hosts while they're at it.

In that case, SNI language à la RFC7672 section 8.1 might do the
trick.  If you like that enough, a reference to that might save
you the need to repeat the same text.

Viktor.",<058312DA-5BD4-4BEA-A71D-E15A21C709AB@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-10-24 16:28:58
6707,TLS 15+,143,2121,"NeutralResponse,Apologising,InformationProviding,Agreement,NeutralResponse,ProposeAction,Apologising",622,622,"
I can't help on actual deployment numbers, sorry.

The one I personally operate is small enough to not need
VPS-equivalents;  I'm tempted to suggest that the combination
of DNS support (MX vs. A records) and the richness of
hop-by-hop email processing possibilities (developed ad-hoc
before and during the transition to the Internet) combined
with the less-harsh latency requirements on mail vs. browsing
make VPS' for email not needed.

As you say, the feature is there, in Exim.
It's agnostic about port-number and the purpose of the service.",<921b68d0-b064-dc64-cfda-d0c4a5d8c2a5@wizmail.org>,jgh@wizmail.org,0.0,0,14,2017-10-24 10:23:21
6708,TLS 15+,144,0,"Social,Social",,-1,"Folks,",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6709,TLS 15+,144,80,"InformationProviding,InformationProviding,ContextSetting",,-1,"
I have just uploaded draft-ietf-tls-tls13-17.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6710,TLS 15+,144,81,"ContextSetting,StateDecision,InformationProviding,ExtensionOfPrevious,ContextSetting",80,-1,"
The major change in this draft is the removal of the 0-RTT Finished
and resumption_context constructs and their replacement with the
psk_binder. This has a number of side effects:",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6711,TLS 15+,144,82,"InformationProviding,InformationProviding,ExtensionOfPrevious",81,-1,"
- Binds in the original transcript into the resumed handshake
whenever resumption-PSK is used.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6712,TLS 15+,144,83,"InformationProviding,InformationProviding,ExtensionOfPrevious,StateDecision",81,-1,"
- Provides proof of possession of the RMS by the client (subject
to replay issues). I've moved the obfuscated_ticket_age field
out of the early_data_indication so that it now provides the
same limited anti-replay for non-0-RTT PSK.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6713,TLS 15+,144,84,"InformationProviding,InformationProviding,ExtensionOfPrevious",81,-1,"
- Removes the need for any early handshake encryption. This change,
along with the dual key ladders we introduced in -16, also allowed
us to simplify the traffic key expansion so we don't need explicit
labels for each key (they are already used in Derive-Secret).",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6714,TLS 15+,144,85,"ContextSetting,StateDecision,InformationProviding,ExtensionOfPrevious,ContextSetting",81,-1,"
Other changes included:
- Tweaking the PSK key exchange modes a bit (and removing the
inoperative ability to specify PSK auth modes, while leaving
a hook to do it later).",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6715,TLS 15+,144,86,"StateDecision,InformationProviding,ExtensionOfPrevious",85,-1,"
- Cleaned up the cipher suite requirements for resumption and 0-RTT.
You can resume/do PSK as long as the PSK KDF matches, but to do 0-RTT
you need the whole cipher suite must match.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6716,TLS 15+,144,87,"InformationProviding,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",86,-1,"
This revision resolves all the outstanding technical PRs [0] and all but
one of the non-parked technical issues (#144, whether we should remove the
redundant TLSCipherText.opaque_type and TLSCipherText.record_version
fields). We are pursuing measurements to resolve whether this will
be a compat problem but we don't have them yet.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6717,TLS 15+,144,88,"InformationProviding,ProposeAction,InformationSeeking,InformationProviding,ProposeAction",,-1,"
As usual, comments welcome. We are already working on implementing
-17 in NSS/Firefox and should have it before Seoul.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6718,TLS 15+,144,89,Social,,-1,"
-Ekr",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6719,TLS 15+,144,90,"ContextSetting,InformationProviding,ContextSetting,ProposeAction",,-1,"
Full Changelog
- Remove the 0-RTT Finished, resumption_context, and replace with a
psk_binder field in the PSK itself (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6720,TLS 15+,144,91,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Restructure PSK key exchange negotiation modes (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6721,TLS 15+,144,92,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Add max_early_data_size field to TicketEarlyDataInfo (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6722,TLS 15+,144,93,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Add a 0-RTT exporter and change the transcript for the regular exporter",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6723,TLS 15+,144,94,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Merge TicketExtensions and Extensions registry. Changes
ticket_early_data_info code point (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6724,TLS 15+,144,95,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Replace Client.key_shares in response to HRR (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6725,TLS 15+,144,96,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Remove redundant labels for traffic key derivation (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6726,TLS 15+,144,97,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Harmonize requirements about cipher suite matching: for resumption you
need to match KDF but for 0-RTT you need whole cipher suite. This
allows PSKs to actually negotiate cipher suites. (*)",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6727,TLS 15+,144,98,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Explicitly allow non-offered extensions in NewSessionTicket",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6728,TLS 15+,144,99,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Explicitly allow predicting ClientFinished for NST",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6729,TLS 15+,144,100,"InformationProviding,ExtensionOfPrevious,ProposeAction",90,-1,"
- Clarify conditions for allowing 0-RTT with PSK",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6730,TLS 15+,144,101,"ContextSetting,InformationProviding,InformationProviding,ContextSetting,ProposeAction",,-1,"
[0] The two remaining outstanding PRs are:
#680: Forbid post-handshake authentication except when permitted by
application profile. This is almost entirely a requirements-level
change, though it would allow clients to send ""unexpected_message""
when receiving an unexpected CertificateRequest.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6731,TLS 15+,144,102,"InformationProviding,InformationProviding,ContextSetting,ProposeAction",,-1,"
#612: TLS 1.3 -> TLS 2.0
This has no change on the wire format.",<CABcZeBP6pzqtcT3rmmpjr_4R+fb6ZyiAduxQiJ87B9hnRzVBXA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 09:32:36
6732,TLS 15+,144,209,"Social,Thanking,Question,InformationProviding,ClarificationElicitation,InformationProviding,ContextSetting,Social,Thanking",80,-1,"Hello,

It's great to see draft-17 being published. Thank you all for the effort.

Maybe the addition of extensions field to the Certificate message got
lost in the changelog?
https://github.com/tlswg/tls13-spec/pull/654

My understanding has been that it was a post-16 change and it changes
the wire protocol.
",<CANatvzybB2LGPP+H_n+5kx++RDN70Xe29_jXT73foT_V_OCd4A@mail.gmail.com>,kazuhooku@gmail.com,0.0,0,20,2016-10-21 04:43:33
6733,TLS 15+,144,213,"Agreement,StateDecision,Answer,Agreement,StateDecision",209,-1,You're right. I just missed it. Added to the editor's copy.,<CABcZeBOCjYDDqR5_vFxXrHpD8siA9g_LvJFJFk1C8n0CBe8i9Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-20 12:51:35
6734,TLS 15+,144,372,"NeutralResponse,ContextSetting,InformationProviding,InformationProviding,ContextSetting,ProposeAction",80,80,"
Updated my own implementation from -16 to -17 (TODO: Add to
implementations page, it isn't any of the ones listed).

And since that implementation supports RFC7250 (for the server
certificate), here is my interpretation of it:

The certificate type is sent in extensions of EE certificate,
via the usual server_certificate_type extension (using the server-side
syntax from RFC7250).
",<20161021093350.GA8070@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 12:33:50
6735,TLS 15+,144,373,"InformationProviding,InformationProviding,ExtensionOfPrevious","372,80",80,"
Okay, the extension is after the certificate it attaches to (which is
just weird), but turns out this wasn't that bad to implement, due to
how the code happened to be laid out (it first sliced the certificate
message to extract the certificates and only afterwards processed
those).
",<20161021093350.GA8070@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 12:33:50
6736,TLS 15+,144,374,"InformationProviding,ContextSetting,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting",373,80,"
... Interop tests with picotls failed:

- Picotls sends extension 13 (signature_algorithms) in ServerHello,
which my implementation does not like[1].
- Picotls still seems to have the resumption_context mixed into
hashes. I tought that got nuked when switching to ""finished
stuffing""? This causes wrong encryption keys to be derived,
causing the handshake to blow up.
",<20161021093350.GA8070@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 12:33:50
6737,TLS 15+,144,375,"Question,ExtensionOfPrevious,ClarificationElicitation","374,80",80,"
[1] Wasn't this ripped out in -17? The -17 draft seems to list that
extension as ""clear"", shouldn't it be ""client"" as the AFAIK the
server won't send it?
",<20161021093350.GA8070@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 12:33:50
6738,TLS 15+,144,376,Social,,80,"
-Ilari",<20161021093350.GA8070@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 12:33:50
6739,TLS 15+,144,442,"Agreement,InformationProviding,ProposeAction,Social",372,372,"
Please do.

We're working on ours so interop testing would be great.
",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6740,TLS 15+,144,443,InformationProviding,372,372,"
And since that implementation supports RFC7250 (for the server",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6741,TLS 15+,144,445,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",372,372,"
I think this probably should go in Encrypted Extensions.
",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6742,TLS 15+,144,447,"Agreement,Agreement",374,374,"
You are correct.
",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6743,TLS 15+,144,449,"Answer,Answer",374,374,"
It did.
",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6744,TLS 15+,144,451,"NeutralResponse,Thanking,Social,Answer,Thanking",375,375,"
Thanks. That got missed in the update.

-Ekr
",<CABcZeBPd25PQhFDW+pbGCCRQM8CVWdnK3NDizYEdgcsV7gR8fg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 04:39:59
6745,TLS 15+,144,479,"NeutralResponse,InformationProviding,Disagreement,ProposeAction",445,445,"
It is definitely related to the certificate chain, and the spec
says such things should go to the first certificate slot (and indeed
the table about extensions says it goes to certificate extensions
block (but not which one).

The client_certificate_type (which I am not using) is listed to go to
EncryptedExtensions, which definitely looks wrong to me, being another
extension related to the certificate chain.
",<20161021140057.GA8197@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 17:00:57
6746,TLS 15+,144,480,Social,,445,"
-Ilari",<20161021140057.GA8197@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 17:00:57
6747,TLS 15+,144,530,"NeutralResponse,Social,InformationProviding,Disagreement",479,479,"
My argument would be that it doesn't belong in ""individual certificates""
because it applies to certificates as a whole. It's not like it would be
legal to have a 7250 cert followed by an X.509 cert, one hopes

-Ekr
",<CABcZeBN=qTB1g_jfT_HZ=WnkqbKpRnDa=CahvHZeDb9w5ZbXbw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 08:00:33
6748,TLS 15+,144,531,Social,,479,"
-Ekr
",<CABcZeBN=qTB1g_jfT_HZ=WnkqbKpRnDa=CahvHZeDb9w5ZbXbw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 08:00:33
6749,TLS 15+,144,532,InformationProviding,,479,"
and the spec",<CABcZeBN=qTB1g_jfT_HZ=WnkqbKpRnDa=CahvHZeDb9w5ZbXbw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 08:00:33
6750,TLS 15+,144,569,"NeutralResponse,NeutralResponse",530,530,"
Well, there can't be two server certificate ""chains"". But if there
could, I would expect the type to per-chain.
",<20161021150609.GA8844@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 18:06:09
6751,TLS 15+,144,570,Social,,530,"
-Ilari",<20161021150609.GA8844@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 18:06:09
6752,TLS 15+,144,635,"UnderstandingNegative,Question,InformationProviding,Question,InformationProviding,ContextSetting,UnderstandingNegative,Apologising",569,569,"
Sorry, I'm not sure I am following.

What I am concerned about is the case where ServerCertificate =

Extensions : [ server_certificate_type = RawPublicKey],
Certificate  : <some SPKI>
Extensions : [],
Certificate : <some X.509 cert>

What is the other side supposed to do with that?
",<CABcZeBN3+PRDbJY31QYKqk4kvsL3x5D1iSB9hmbEaPe-YOg+CQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 08:14:50
6753,TLS 15+,144,636,Social,,569,"
-Ekr
",<CABcZeBN3+PRDbJY31QYKqk4kvsL3x5D1iSB9hmbEaPe-YOg+CQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-21 08:14:50
6754,TLS 15+,144,703,"NeutralResponse,InformationProviding,Answer",635,635,"
Well, my implementation treats it the same as TLS 1.2 handshake with
server_certificate_type=RPK and a two certificates in the chain). Which
apparently means just ignoring the second certificate.

But if it had certificate type that could use multiple slots, there
could only be one chain type (server_certificate_type can only appear
once per chain, in the first slot).
",<20161021152157.GB9003@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 18:21:57
6755,TLS 15+,144,704,Social,,635,"
-Ilari",<20161021152157.GB9003@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-21 18:21:57
6756,TLS 15+,144,727,"InformationProviding,ContextSetting,Social,InformationProviding,NeutralResponse,ContextSetting",442,442,"
Not sure how up to date this is but here’s a list of some implementations:

https://github.com/tlswg/tls13-spec/wiki/Implementations

spt",<DD6BA964-B036-446E-BBF5-F38AAFE969EB@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2016-10-21 11:38:15
6757,TLS 15+,144,796,"Thanking,InformationProviding,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Thanking",374,374,"
Thank you very much for testing, and for reporting the issues you
found. Apparently I missed the changes when I made the adjustments for
draft-17.

I've pushed the fixes on to my git repository
(https://github.com/h2o/picotls) fixing the two issues. Hopefully with
them, picotls would be able to communicate with your implementation (I
think it might be better to go through my code with draft-17 in hand
to see if any other discordances exist, but that'll be in the next
week).

I am also looking forward to seeing your implementation on the Wiki.
",<CANatvzywrA9OFtpncjKA6UxcxjV08Z_VPuXxQhdTja6zHrhXWA@mail.gmail.com>,kazuhooku@gmail.com,0.0,0,20,2016-10-22 06:58:57
6758,TLS 15+,145,110,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction,InformationProviding,ContextSetting",,-1,"Alexey Melnikov has entered the following ballot position for
draft-ietf-tls-tls13-26: Discuss",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6759,TLS 15+,145,111,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ProposeAction",110,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6760,TLS 15+,145,112,"InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding",111,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6761,TLS 15+,145,113,"InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting",112,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6762,TLS 15+,145,114,"ContextSetting,ContextSetting",,-1,"
DISCUSS:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6763,TLS 15+,145,115,"ContextSetting,StateDecision,Thanking,Thanking,ContextSetting,StateDecision",,-1,"
Thank you for a well written document. I will be switching to Yes once the
following is addressed/discussed:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6764,TLS 15+,145,116,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction,ContextSetting",115,-1,"
Relationship to TLS 1.2 needs to be clarified. The document is adding
requirements on TLS 1.2 clients. Implementors of TLS 1.2 are not going to (or
very unlikely to) read this document. This looks fishy to me. Two examples on
page 37:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6765,TLS 15+,145,117,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",116,-1,"
TLS 1.2 clients SHOULD also check that the last eight bytes  are not equal to
the second value if the ServerHello indicates TLS  1.1 or below",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6766,TLS 15+,145,118,"ExtensionOfPrevious,ExtensionOfPrevious",117,-1,"
and",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6767,TLS 15+,145,119,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious","116,118",-1,"
A legacy TLS client performing renegotiation with TLS 1.2 or prior  and which
receives a TLS 1.3 ServerHello during renegotiation MUST  abort the handshake
with a ""protocol_version"" alert.  Note that  renegotiation is not possible
when TLS 1.3 has been negotiated.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6768,TLS 15+,145,120,"InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting",119,-1,"
There are similar statements on page 45:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6769,TLS 15+,145,121,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",120,-1,"
TLS 1.2 implementations SHOULD also process this extension.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6770,TLS 15+,145,122,"ExtensionOfPrevious,ContextSetting,ContextSetting",121,-1,"
and on page 48:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6771,TLS 15+,145,123,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",122,-1,"
However, the old semantics did not constrain the signing
curve.  If TLS 1.2 is negotiated, implementations MUST be prepared
to accept a signature that uses any curve that they advertised in
the ""supported_groups"" extension.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6772,TLS 15+,145,124,"InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction",123,-1,"
I think you need to clarify whether these normative requirements apply to pure
TLS 1.2 clients or TLS clients that implement both 1.2 and 1.3 and choose to
use 1.2 for some reason. Or maybe you need to say in the Abstract/Introduction
that although this document obsoletes TLS 1.2 it also specifies new
requirements on TLS 1.2 implementations. (So it is sort of both ""Obsoletes"" and
""Updates"" TLS 1.2 RFC.)",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6773,TLS 15+,145,125,"ContextSetting,ContextSetting",,-1,"
COMMENT:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6774,TLS 15+,145,126,"ExtensionOfPrevious,ContextSetting,ContextSetting",126,-1,"
1) On page 47:
The length of the salt MUST be equal to the length of the digest      algorithm",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6775,TLS 15+,145,127,"ClarificationElicitation,ExtensionOfPrevious,ClarificationElicitation",126,-1,"
Length of algorithm?",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6776,TLS 15+,145,128,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting",125,-1,"
2) DER need a Normative Reference on first use. There are some references on
2nd/3rd use.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6777,TLS 15+,145,129,"ExtensionOfPrevious,ContextSetting,ContextSetting",125,-1,"
3) On page 57:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6778,TLS 15+,145,130,"ExtensionOfPrevious,ContextSetting,ContextSetting",129,-1,"
The
server then ignores early data by attempting to decrypt received
records in the handshake traffic keys until it is able to receive
the client's second flight and complete an ordinary 1-RTT
handshake, skipping records that fail to decrypt, up to the
configured max_early_data_size.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6779,TLS 15+,145,131,"ExtensionOfPrevious,ProposeAction,UnderstandingNegative,UnderstandingNegative,ProposeAction",130,-1,"
I read this several times and still don't understand what this is saying. It is
saying ""ignores ... until it is able to receive"". I think you either don't mean
""ignore"" (as in discard the rest) or I misunderstood. I clarifying example or a
reference to another section (e.g. with the diagram) would be very helpful here.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6780,TLS 15+,145,132,"ExtensionOfPrevious,ContextSetting,ContextSetting",125,-1,"
4) On page 82:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6781,TLS 15+,145,133,"ExtensionOfPrevious,ContextSetting,ContextSetting",132,-1,"
When record protection has not yet been engaged, TLSPlaintext  structures
are written directly onto the wire.  Once record  protection has started,
TLSPlaintext records are protected and sent   as described in the following
section",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6782,TLS 15+,145,134,"ClarificationElicitation,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,ContextSetting",133,-1,"
Just to double check: are you saying that before the handshake TLS application
layer effectively results in plain text messages (with some extra octets to
signal record type)?",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6783,TLS 15+,145,135,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting",125,-1,"
5) I am pretty sure that [RFC5116] is a Normative reference. It is required to
be understood to implemented TLS 1.3. Also, you have additional requirements on
AEADs, which again implies understanding of what they are:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6784,TLS 15+,145,136,"ExtensionOfPrevious,ContextSetting,ContextSetting",135,-1,"
On page 84:",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6785,TLS 15+,145,137,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",136,-1,"
An AEAD algorithm used in TLS 1.3 MUST NOT produce an expansion  greater
than 255 octets",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6786,TLS 15+,145,138,"ExtensionOfPrevious,ExtensionOfPrevious",137,-1,"
and",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6787,TLS 15+,145,139,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","136,138",-1,"
An AEAD algorithm where N_MAX is less than 8  bytes MUST NOT be used with TLS",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6788,TLS 15+,145,140,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",125,-1,"
6) The diagram in section 7.1 was a bit cryptic. Maybe explain that when you
use '0' you mean as many bytes of 0s as needed for various functions.",<152042939596.17646.2835997719834399943.idtracker@ietfa.amsl.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 05:29:55
6789,TLS 15+,145,349,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ContextSetting,ProposeAction",124,124,"
The intent is that these affect old TLS 1.2 implementations as well. S 1.4
tries
to be clear about this, but maybe it fails.

I suggest we:

(1) Add the following sentence to the abstract:
""This document also specifies new requirements for TLS 1.2 implementations.

(2) Rewrite the first sentence of S 1.4 to say:
This document defines several changes that optionally affect
implementations of TLS 1.2, including those which do not also
support TLS 1.3

(3) Strike the following graf:

An implementation of TLS 1.3 that also supports TLS 1.2 might need to
include changes to support these changes even when TLS 1.3 is not in
use.  See the referenced sections for more details.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6790,TLS 15+,145,351,"Answer,Agreement",127,127,"
Right. Output of.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6791,TLS 15+,145,353,"Thanking,Thanking",128,128,"
Thanks.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6792,TLS 15+,145,355,"InformationProviding,NeutralResponse,NeutralResponse",131,131,"
We do mean discard. The idea here is that you try to decrypt those records
using the handshake keys and if that fails you ignore them.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6793,TLS 15+,145,357,"InformationProviding,Answer,Answer,InformationProviding",134,134,"
No, you can't write application data prior to this point, as stated in S 2.

Application data MUST NOT be sent prior to sending the Finished
message and until the record layer starts using encryption keys.
Note that while the server may send application data prior to
receiving the client's Authentication messages, any data sent at that
point is, of course, being sent to an unauthenticated peer.

It's non-application data (handshake, alerts, acks) which is sent in this
fashion
prior to the handshake.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6794,TLS 15+,145,358,InformationProviding,,134,"
5) I am pretty sure that [RFC5116] is a Normative reference. It is required",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6795,TLS 15+,145,360,"Agreement,Thanking,Agreement,Thanking","119,135",119,"
I concur. Thanks.
",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6796,TLS 15+,145,361,InformationProviding,,119,"
6) The diagram in section 7.1 was a bit cryptic. Maybe explain that when you",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6797,TLS 15+,145,362,"Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse,Social",140,140,"
This is in the first paragraph after the diagram. Would you prefer it
elsewhere?

If a given secret is not available, then the 0-value consisting of a
string of Hash.length bytes set to zeros is used.  Note that this

-Ekr",<CABcZeBOFCfNS1UXVVwAkkTMi2yOUUyhhh-K-vP2yDOWts6-4wA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 06:16:01
6798,TLS 15+,145,442,"Agreement,NeutralResponse",349,349,I think this will address my concern.,<1520436425.2931603.1294823864.41E99D18@webmail.messagingengine.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 15:27:05
6799,TLS 15+,145,538,"Social,Social",,-1,"Hi Ekr,
",<1520436425.2931603.1294823864.41E99D18@webmail.messagingengine.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 15:27:05
6800,TLS 15+,145,541,"Question,NeutralResponse,ProposeAction,ProposeAction",355,355,"
Ok. So I suggest use ""discard"" and possibly delete or reword the ""untill
it is able"" part. Maybe split into 2 sentences?",<1520436425.2931603.1294823864.41E99D18@webmail.messagingengine.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 15:27:05
6801,TLS 15+,145,543,"NeutralResponse,ProposeAction,ProposeAction",357,357,"
Ok. Maybe say that in the document.",<1520436425.2931603.1294823864.41E99D18@webmail.messagingengine.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 15:27:05
6802,TLS 15+,145,545,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ProposeAction,UnderstandingNegative",362,362,"
Maybe it was lack of sleep, but I didn't understand that you were
talking about the same thing. This also seems to apply more generically
then on the diagram. I suggest clarify:
In the diagram, the value '0' denotes a string of Hash.length bytes
set to zeros.
Or something like that.",<1520436425.2931603.1294823864.41E99D18@webmail.messagingengine.com>,aamelnikov@fastmail.fm,0.0,1,1,2018-03-07 15:27:05
6803,TLS 15+,145,793,"Agreement,StateDecision,Agreement,StateDecision",541,541,"
Sure, I can do something here.
",<CABcZeBOgPhgD0WOHrg5Myujgb7n5Hr9Qg0k0ZDaGDqbPsz=OVA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 09:44:41
6804,TLS 15+,145,795,"NeutralResponse,StateDecision,StateDecision",543,543,"
OK, I'll try to clarify this.
",<CABcZeBOgPhgD0WOHrg5Myujgb7n5Hr9Qg0k0ZDaGDqbPsz=OVA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 09:44:41
6805,TLS 15+,145,797,"Agreement,Agreement",545,545,"
Sure.

-Ekr",<CABcZeBOgPhgD0WOHrg5Myujgb7n5Hr9Qg0k0ZDaGDqbPsz=OVA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 09:44:41
6806,TLS 15+,145,1029,"InformationProviding,NeutralResponse,InformationProviding",128,353,"
I just double-checked and this actually is: under ECDSA.
",<CABcZeBM3jpAgGONratG0OEN=z8W_xtLSxNM7AyXKg3LsvhtT+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:41:53
6807,TLS 15+,145,1032,"InformationProviding,StateDecision,NeutralResponse,Social",362,362,"
I believe I dealt with this.

-Ekr
",<CABcZeBM3jpAgGONratG0OEN=z8W_xtLSxNM7AyXKg3LsvhtT+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-09 14:41:53
6808,TLS 15+,147,40,"InformationProviding,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the DNS PRIVate Exchange of the IETF.",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6809,TLS 15+,147,41,"InformationProviding,InformationProviding,ExtensionOfPrevious",40,-1,"
Title           : Usage and (D)TLS Profiles for DNS-over-(D)TLS
Authors         : Sara Dickinson
Daniel Kahn Gillmor
Tirumaleswar Reddy
Filename        : draft-ietf-dprive-dtls-and-tls-profiles-10.txt
Pages           : 29
Date            : 2017-06-16",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6810,TLS 15+,147,42,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",41,-1,"
Abstract:
This document discusses Usage Profiles, based on one or more
authentication mechanisms, which can be used for DNS over Transport
Layer Security (TLS) or Datagram TLS (DTLS).  These profiles can
increase the privacy of DNS transactions compared to using only clear
text DNS.  This document also specifies new authentication mechanisms
- it describes several ways a DNS client can use an authentication
domain name to authenticate a (D)TLS connection to a DNS server.
Additionally, it defines (D)TLS protocol profiles for DNS clients and
servers implementing DNS-over-(D)TLS.  This document updates RFC
7858.",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6811,TLS 15+,147,43,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",42,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-dprive-dtls-and-tls-profiles/",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6812,TLS 15+,147,44,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",43,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-ietf-dprive-dtls-and-tls-profiles-10
https://datatracker.ietf.org/doc/html/draft-ietf-dprive-dtls-and-tls-profiles-10",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6813,TLS 15+,147,45,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",44,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-dprive-dtls-and-tls-profiles-10",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6814,TLS 15+,147,46,"InformationProviding,InformationProviding,ExtensionOfPrevious,Social",45,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6815,TLS 15+,147,47,"InformationProviding,ContextSetting,InformationProviding,ExtensionOfPrevious",46,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<149760298355.24202.1993259713348794426@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-06-16 01:49:43
6816,TLS 15+,148,0,"Social,Social",,-1,"Hi,",<20170803112619.GA35785@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-03 13:26:19
6817,TLS 15+,148,12,"InformationProviding,InformationProviding,ContextSetting",,-1,"
I took a look at both documents today and I am attaching my two
reviews.  Since the structure of the documents is quite similar, the
review comments are also quite similar.",<20170803112619.GA35785@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-03 13:26:19
6818,TLS 15+,148,13,Social,,-1,"
/js",<20170803112619.GA35785@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-03 13:26:19
6819,TLS 15+,148,48,"ContextSetting,ProposeAction,InformationProviding,Social,InformationProviding,ContextSetting,ProposeAction",12,12,"
One more thing:

Since ietf-ssh-client, ietf-ssh-server, ietf-ssh-common essentially
define only groupings (one grouping per module) and identities, I
suggest to merge these definitions into a single module, say
ietf-ssh-common. This way, the module name ietf-ssh-server can be used
(later) to define an instantiation of the groupings for a standalone
SSH server.

I would suggest the same for the ietf-tls-* modules (even though there
is not a common standalone TLS server).

Since these modules will have conformance-type 'import' in YANG
library, I do not really see what the benfit of splitting things
into multiple modules. What you implement is defined by the modules
using the groupings.

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20170803135414.GA35984@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-03 15:54:14
6820,TLS 15+,148,50,"Social,Social",,-1,"Hi Juergen,",<87F7E555-91B9-4E58-8771-8A16368B304F@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-25 22:25:09
6821,TLS 15+,148,98,"Question,NeutralResponse,ProposeAction,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",48,-1,"
I just noticed this comment went unanswered before.  I don't feel
strongly about this, but 1) I would call it ""ietf-ssh-groupings"",
2) it will have a large impact on the structure of the draft (what
would the ToC be?), and 3) it definitely will break downstream
modules (as their imports will fail as the old names disappear).",<87F7E555-91B9-4E58-8771-8A16368B304F@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-25 22:25:09
6822,TLS 15+,148,129,"ClarificationElicitation,Question",98,98,"
Because you are sure you will never put typedefs or identity
definition there?
",<20171026061637.gszpxousxoqvijgg@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-10-26 08:16:37
6823,TLS 15+,148,131,"Answer,Answer",98,98,"
The ToC falls out of the content.
",<20171026061637.gszpxousxoqvijgg@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-10-26 08:16:37
6824,TLS 15+,148,133,"NeutralResponse,Social,InformationProviding,NeutralResponse",98,98,"
Nothing got published so far. I think the number of IDs affected are
close to the number of IDs dealing with NC configuration, all in the
hand of one editor.

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20171026061637.gszpxousxoqvijgg@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-10-26 08:16:37
6825,TLS 15+,148,179,"Social,Social",,-1,"Hi Juergen,
",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6826,TLS 15+,148,181,"Answer,ContextSetting,Answer,ContextSetting",129,129,"
Not to say there wouldn't be, but that the reason for importing
the module would be for the groupings.   BTW, I want to update my
previous comment, I now have a preference (see bottom).
",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6827,TLS 15+,148,183,"NeutralResponse,ProposeAction,InformationSeeking,Question,NeutralResponse,ProposeAction",131,131,"
The question was/is how to structure the draft, it's not obvious.
It would great if you could provide an example ToC for what you
had in mind.
",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6828,TLS 15+,148,185,"Disagreement,InformationProviding,InformationProviding,Disagreement",133,133,"
Not true, if you saw Benoit's recent dependency graph, there's ~6 drafts
authored by others that depend on ietf-tls-server or ietf-tls-client.
",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6829,TLS 15+,148,186,"ExtensionOfPrevious,ProposeAction,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",185,133,"
That said, I'm beginning to think that this is not a good idea.  The
impact to the drafts (four of them) is enormous, and all just so that
some future definition can use the module name ""ietf-ssh-server"".  How
about instead, at that time, a bis of this document is produced to add
in the missing ""ieft-ssh-server"" container?  That produces an equally
good result (better, I think) and is much less work now.
",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6830,TLS 15+,148,187,Social,,133,"
K.  // contributor",<418126A6-52B3-415C-B523-C9CAF10A7FD8@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-26 18:14:20
6831,TLS 15+,148,487,"Social,Social",,-1,"Hi Juergen,
",<2465A343-16D3-4DD1-9AF8-6007D108084A@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-10 20:11:11
6832,TLS 15+,148,489,"Thanking,ContextSetting,ContextSetting,StateDecision,Thanking",12,12,"
Thanks!  And, to make responding easier, I've copied/pasted both
sets of comments in below.
",<2465A343-16D3-4DD1-9AF8-6007D108084A@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-10 20:11:11
6833,TLS 15+,148,492,"Social,Social",,-1,"Hi Kent/Juergen,",<08F8FEA9-A298-469F-9B41-849E308C713D@cisco.com>,garywu@cisco.com,0.0,0,56,2017-08-10 23:10:22
6834,TLS 15+,148,865,"ContextSetting,ContextSetting",12,-1,"
My responses in-line.",<08F8FEA9-A298-469F-9B41-849E308C713D@cisco.com>,garywu@cisco.com,0.0,0,56,2017-08-10 23:10:22
6835,TLS 15+,148,866,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction",865,-1,"
BTW, I've updated the github addressing some of the previous comments,
you might want to merge your local copies.",<08F8FEA9-A298-469F-9B41-849E308C713D@cisco.com>,garywu@cisco.com,0.0,0,56,2017-08-10 23:10:22
6836,TLS 15+,148,968,"Question,InformationProviding",,-1,"> <GARY>
> They are SSH-specific in that they come from the IANA registry for
> the SSH protocol.  It would be difficult to come up with
> protocol-independent identities as different protocols have
> different ideas as to an algorithm 'unit' is.  For example, in SSH
> you specify KEX algorithms separate from MAC algorithms, but in TLS
> the combination of those plus other algorithm types constitute a
> cipher suite.  If we move the identities to an iana-* module, I
> suppose the expectation is that every IANA number has an associated
> YANG identity.  In that case, do we want to have an if-feature for
> every identity (there are hundreds and they are almost all
> optional-to-implement)?  Or do we want to get rid of if-features
> altogether and let the management agent return an error when it
> can't support the requested configuration?
> </GARY>",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6837,TLS 15+,148,969,"NeutralResponse,InformationSeeking,InformationProviding,Answer",968,-1,"
This is what I expected (that the identities are protocol specific).
Personally, I do not think it is useful to define large numbers of
features and servers should reject identities not supported. The
question is whether there should be config false list of identities
supported so that a client does not have to do trial and error.
",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6838,TLS 15+,148,970,"InformationProviding,ContextSetting,ProposeAction",,-1,">     > - I think it is a good practice to introduce for every base identity a
>     >  corresponding specific identityref type so that tree diagrams etc
>     >  have a more readable type. The pattern is:
>     >  identity foo {
>     >    description
>     >     ""Abstract base identity for foos."";
>     >  typedef foo-ref {
>     >    type identifyref { base foo; }
>     >    description
>     >      ""A foo identity reference."";
>     >  And then you use foo-ref as the type in the data models that refer to
>     >  foo identities.
>     All of the identities are in the ""ietf-*-common"" modules (Gary, can you
>     please take care of this one?).  That said, there's still the larger
>     issue of us moving all the identities into some other module.
> <GARY>
> I had suggested defining types for the leafrefs to (trusted-){keys, certs} in
> the keystore module, so that modules using keystore won't need to refer to
> paths in keystore and removes their coupling to the structure of keystore.
> There isn't as big a benefit to encapsulating identityrefs.  The node
> identifiers are descriptive of their type and I kind of like knowing that a type
> is an identityref without referring to the typedef, but I think a case can be
> made for consistency.
> </GARY>",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6839,TLS 15+,148,971,"Agreement,Agreement",970,-1,"
I agree that identities for the references into the keystore lists are
even more useful.
",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6840,TLS 15+,148,972,"InformationProviding,ContextSetting,ProposeAction",,-1,"> <GARY>
> We haven't explored virtual hosting.  I think the server grouping could be used
> as it currently is, because each virtual host could have a separate TLS
> configuration, although I don't know if any real-world implementations support
> the full set of TLS configurations for each virtual host.
> Here's a hypothetical web server config, the SNI would be inferred from
> 'server-name', which is an application-level config.
> e.g.:
>   <web-server>
>     <use-tls>true</use-tls>
>     <ip-address>0.0.0.0</ip-address>
>     <port>443</port>
>     <virtual-host>
>       <server-name>foo.com</server-name>
>       <tls-server-cfg>
>         <certificate>foo_cert_1</certificate>
>         <certificate>foo_cert_2</certificate>
>       </tls-server-cfg>
>     </virtual-host>
>     <virtual-host>
>       <server-name>bar.org</server-name>
>       <tls-server-cfg>
>         <certificate>bar_cert_1</certificate>
>         <certificate>bar_cert_2</certificate>
>       </tls-server-cfg>
>     </virtual-host>
>   </web-server>
> </GARY>",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6841,TLS 15+,148,973,"Agreement,Social,NeutralResponse",972,-1,"
This might work.

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20170811143130.GE46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:31:30
6842,TLS 15+,148,1224,"InformationSeeking,InformationProviding,UnderstandingNegative",,-1,"On Thu, Aug 10, 2017 at 08:11:11PM +0000, Kent Watsen wrote:
> Hi Juergen,
> > I took a look at both documents today and I am attaching my two
> > reviews.  Since the structure of the documents is quite similar, the
> > review comments are also quite similar.
> Thanks!  And, to make responding easier, I've copied/pasted both
> sets of comments in below.
> Kent
> For the ssh-client-server draft
> > - The overall setup is somewhat complicated but I do understand why.
> >  Obviously, the attempts to make things generic come with a price
> >  since many YANG definitions interact with other definitions that
> >  need to be understood. And while the end result is that we can
> >  configure SSH clients and servers for NETCONF, we only have a
> >  collection of groupings to configure a regular SSH client or
> >  server. Should we have an instantiation of these groupings for
> >  regular SSH clients and servers as well?
> I'm hoping to not have to do this, but can see that there might be
> value in doing so in order to further proof-out the model.  To do
> this right would entail something like what Clyde did for the syslog
> model in evaluating many vendor's implementations to find a common
> denominator.  I can imagine the WG undertaking such an analysis for
> an SSH-server container, but I fail to see how it could be done for
> an SSH-client container.  Also, when thinking about symmetry to the
> tls-client-server draft, note that the idea of creating a container
> for a TLS-server doesn't make sense (which one, right?)",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6843,TLS 15+,148,1225,"NeutralResponse,Agreement,Question,Question,ClarificationElicitation,InformationProviding,Agreement",1224,-1,"
Yes, for TLS there is no a common standalone TLS service. For SSH,
there is however since SSH was created for a specific service (while
TLS was created as a plugin to secure another existing service).

The client question we discussed before and I tend to agree that
usually a client you configure is embedded into some other
functionality that likely has its own configuration, so having a
grouping is OK.

But since there are SSH servers out there, do we expect this ID to
just provide groupings and we hope that some other module later comes
along and picks up the groupings and turns them into a more general
SSH server configuration model?

My understanding is that NC implementations actually come in different
forms, some simply running behind a regular SSH server while others
come with their own integrated SSH server. Does this affect the data
model?
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6844,TLS 15+,148,1226,Agreement,,-1,"> >  To create a YANG model for a regular SSH server (for system level or
> >  CLI access), one would have to implement the ietf-keystore model,
> >  write a YANG module to suitably instantiate the
> >  ietf-ssh-server:ssh-server-grouping and likely use some
> >  endpoints-container grouping (well this has not been factored out
> >  yet but I get to this in a different review).
> Yes, it would be an exercise like this.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6845,TLS 15+,148,1227,"ClarificationElicitation,NeutralResponse",1226,-1,"
So you are saying I guess this is the direction you see this to evolve.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6846,TLS 15+,148,1228,"ContextSetting,StateDecision",,-1,"> >  Obviously, reusability comes with a certain price in complexity and
> >  I guess this is why we often had WG meetings where Kent asked
> >  questions but nobody felt to respond. Anyway, if we create these
> >  reusable components, we need to find a name for them.  Saying these
> >  are SSH client and server models (as the title does) is likely
> >  confusing people since the definitions are really only meaningful if
> >  instantiated in other contexts. The simplest change might be to
> >  change the title to ""YANG Groupings for SSH Clients and SSH
> >  Servers"".
> Yes, awkward silence, and now here we are.  For now, I've change
> the title as suggested.  I also made the similar change for the
> tls-client-server draft.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6847,TLS 15+,148,1229,"NeutralResponse,NeutralResponse",1228,-1,"
OK
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6848,TLS 15+,148,1231,"ClarificationElicitation,InformationProviding,ContextSetting",,-1,"> We could copy/paste the keystore example, but isn't the following
> note just above the example good enough?
>    This example is consistent with the
>    examples presented in Section 2.2 of [I-D.ietf-netconf-keystore].",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6849,TLS 15+,148,1232,"NeutralResponse,Question,Question,InformationProviding,NeutralResponse",1231,-1,"
As a reader, having to look at multiple RFCs is a bit harder. During
production of the RFCs, how do we make sure things stay aligned? Well,
this problem exists in any case.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6850,TLS 15+,148,1233,"InformationProviding,Agreement,ContextSetting",,-1,"> > - The identities in ietf-ssh-common probably need to be moved to IANA
> >   and there likely need to be proper procedures for managing the
> >   identities.  Are the identities clearly SSH specific? If not, the
> >   management will likely be more complex.
> Right, and this is related to the keystore identity issue as well.
> https://github.com/netconf-wg/keystore/issues/8.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6851,TLS 15+,148,1234,"Agreement,Agreement",1233,-1,"
Yes.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6852,TLS 15+,148,1235,"InformationProviding,NeutralResponse,ProposeAction",,970,"> > - I think it is a good practice to introduce for every base identity a
> >  corresponding specific identityref type so that tree diagrams etc
> >  have a more readable type. The pattern is:
> >  identity foo {
> >    description
> >     ""Abstract base identity for foos."";
> >  typedef foo-ref {
> >    type identifyref { base foo; }
> >    description
> >      ""A foo identity reference."";
> >  And then you use foo-ref as the type in the data models that refer to
> >  foo identities.
> All of the identities are in the ""ietf-*-common"" modules (Gary, can you
> please take care of this one?).  That said, there's still the larger
> issue of us moving all the identities into some other module.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6853,TLS 15+,148,1236,"NeutralResponse,Question,ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction",1235,970,"
It is not clear whether one module is the answer, i.e., whether the
identities are identical between security protocols or whether they
traditionally all do their own little soup. If the later, then this is
likely how it works in practice. So the security WGs actually
coordinate when they need a new name / label for a security mechanism?
If not, creating a central module is going to lead to headaches for
those in charge to maintain it.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6854,TLS 15+,148,1237,"InformationProviding,ContextSetting",,970,"> > - Security considerations: This may need some rewriting since there is
> >  really no data tree. The general template does not really work well
> >  for modules only defining reusable groupings. I think what is really
> >  needed here are guidelines for authors of documents using the
> >  groupings. Also remove text that clearly is irrelevant (there are no
> >  RPC so why spent a paragraph on them).
> I added this sentence (to both drafts):
>   Since the modules defined in this document define only groupings,
>   these considerations are primarily for the designers of other
>   modules that use these groupings.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6855,TLS 15+,148,1238,"NeutralResponse,NeutralResponse",1237,970,"
OK
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6856,TLS 15+,148,1239,"InformationProviding,ContextSetting,StateDecision",,970,"> I also change ""module"" to ""modules"", since the draft defines more
> than one.
> I left the ""RPC"" paragraph (and both the RPC and ""readable nodes""
> paragraphs in the tls-client-server draft).  These paragraphs have
> a place where a list of nodes are to be supplied.  In this case,
> my putting ""NONE"" seems to 1) preserve the template and 2) indicate
> that the consideration was analyzed.  This is unchartered waters
> but, it seems that we'd want the considerations to be explicit in
> what all it considered.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6857,TLS 15+,148,1240,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",1239,970,"
Personally, I prefer to not see text that does not apply in the final
document. Perhaps decorate this with an RFC editor instruction to
remove the text during the final stages of the process.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6858,TLS 15+,148,1241,"Question,ClarificationElicitation,InformationProviding,Answer,ContextSetting",,970,"> > - In section 2, should there be text that says what happens if there
> >   is not client authentication configured or how to extend this for
> >   authentication types commonly found on the web for instance?
> Why should there be, isn't that a protocol-specific issue?  For instance,
> per comments from before, the ietf-netconf-client and ietf-restconf-client
> models add 'must' statements asserting client-authentication is configured.
> Is this something that should be mentioned in Security Considerations?",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6859,TLS 15+,148,1242,"ProposeAction,Answer,ProposeAction",1241,970,"
I think it would help to spell out 'if no client auth configured,
there is no client auth; if you want to always have client auth, a
must statement can be used'.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6860,TLS 15+,148,1243,"InformationProviding,ProposeAction,UnderstandingNegative",,970,"> > - Does the TLS server not need to know which key to use? I only see
>     a reference to a certificate to use.
> I don't know which node you're looking at, but there is one reference
> to a certificate that is under a specific key, and there is another
> reference to a set of certificates that is not associated with any key.",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6861,TLS 15+,148,1244,"NeutralResponse,InformationProviding,NeutralResponse",1243,970,"
Ah, it is a leafref to .../key/certificates/certificate - I did not
catch that.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6862,TLS 15+,148,1245,"ClarificationElicitation,NeutralResponse",,970,"> > - With web servers, things are often more complicated since you only
> >   know which key/certificate to use once you know which site is being
> >   accessed. The Server Name Indication (SNI) TLS extension [RFC 6066]
> >   deals with this. How could this be factored into the YANG server
> >   grouping?
> I'm unsure what you're saying.  A client is configured to connect to a
> specific site, but it doesn't know what site it will actually connect
> to, and hence can't be configured to know which certificate to use?",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6863,TLS 15+,148,1246,"InformationProviding,Answer,InformationProviding,Answer",1245,970,"
No, the server starts a TLS handshake but it does not yet know which
site hosted on the server the client goes to and hence the server does
not know which certificate to use. In HTTP, it is the Host: header
that tells the server which virtual host you talk to. TLS happens
before that and hence the TLS server either has to guess the right
certificate (bad) or the TLS client uses SNI to let the server know
during the TLS exchange which Host: he wants to talk to. The point
here is that the assumption that a listing transport endpoint maps to
a specific certificate in general is not true.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6864,TLS 15+,148,1247,"ClarificationElicitation,InformationProviding,NeutralResponse,StateDecision",,970,"> This sounds a lot like what was discussed before about configuring
> NC/RC clients to authentication to call-home connections.  We decided
> to just support a single set of auth params that would be used for all
> servers (and not define a server-id to client-auth mapping).  So, this
> grouping may not work well in some examples.  Is it okay?",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6865,TLS 15+,148,1248,"Answer,InformationProviding,Answer",1247,970,"
Perhaps not supporting SNI is sufficient for network management
purposes but then also pretty clearly the TLS groupings are not
generally usable.
",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6866,TLS 15+,148,1249,"InformationProviding,NeutralResponse,ContextSetting",,970,"> > - The description of the list certificate says ""unordered list of
> >   certificates the TLS server can pick from when sending its Server
> >   Certificate message."". So how does the server pick the certificate?
> >   Is the idea that the somewhat vague text takes care of SNI? What if
> >   SNI is not used, which certificate is picked? How does the server
> >   pick the corresponding key? (Or are these certificates assumed to
> >   all be associated with the same key?)
> I'm looking at https://tools.ietf.org/html/rfc5246#section-7.4.2:
>    If the server has multiple certificates, it chooses one of them based
>    on the above-mentioned criteria (in addition to other criteria, such
>    as transport layer endpoint, local configuration and preferences,
>    etc.).",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6867,TLS 15+,148,1250,"NeutralResponse,Social,InformationProviding,NeutralResponse",1249,970,"
So the server magically picks one. This may be OK for the TLS spec to say,
not sure this is sufficient for a configuration spec.

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20170811142428.GD46402@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-11 16:24:28
6868,TLS 15+,148,1252,"Social,Social",,-1,"Hi Juergen,",<BDEA59B2-46EF-4A67-BA30-410A2B1D30AE@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-17 20:42:11
6869,TLS 15+,148,1498,"InformationProviding,InformationProviding,ContextSetting,StateDecision",,-1,"
I've trimmed all but the ongoing threads...",<BDEA59B2-46EF-4A67-BA30-410A2B1D30AE@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-17 20:42:11
6870,TLS 15+,148,1670,"Question,ClarificationElicitation,InformationProviding,Answer,ProposeAction",,-1,"On Thu, Aug 17, 2017 at 08:42:11PM +0000, Kent Watsen wrote:
> Hi Juergen,
> I've trimmed all but the ongoing threads...
> Kent
> >> For the ssh-client-server draft
> >> > - The overall setup is somewhat complicated but I do understand why.
> >> >  Obviously, the attempts to make things generic come with a price
> >> >  since many YANG definitions interact with other definitions that
> >> >  need to be understood. And while the end result is that we can
> >> >  configure SSH clients and servers for NETCONF, we only have a
> >> >  collection of groupings to configure a regular SSH client or
> >> >  server. Should we have an instantiation of these groupings for
> >> >  regular SSH clients and servers as well?
> >> I'm hoping to not have to do this, but can see that there might be
> >> value in doing so in order to further proof-out the model.  To do
> >> this right would entail something like what Clyde did for the syslog
> >> model in evaluating many vendor's implementations to find a common
> >> denominator.  I can imagine the WG undertaking such an analysis for
> >> an SSH-server container, but I fail to see how it could be done for
> >> an SSH-client container.  Also, when thinking about symmetry to the
> >> tls-client-server draft, note that the idea of creating a container
> >> for a TLS-server doesn't make sense (which one, right?)
> > Yes, for TLS there is no a common standalone TLS service. For SSH,
> > there is however since SSH was created for a specific service (while
> > TLS was created as a plugin to secure another existing service).
> > The client question we discussed before and I tend to agree that
> > usually a client you configure is embedded into some other
> > functionality that likely has its own configuration, so having a
> > grouping is OK.
> > But since there are SSH servers out there, do we expect this ID to
> > just provide groupings and we hope that some other module later comes
> > along and picks up the groupings and turns them into a more general
> > SSH server configuration model?
> This is my hope, so as to limit the scope of this document.
> > My understanding is that NC implementations actually come in different
> > forms, some simply running behind a regular SSH server while others
> > come with their own integrated SSH server. Does this affect the data
> > model?
> I think JUNOS is an example where the NC server runs ""behind an SSH
> server"", but it's not really ""behind"" so much as a fork/exec of an
> sshd process running the ""netconf"" subsystem (i.e., the NC server).
> Is this what you meant?
> Regardless, I don't see a need to change either the ietf-netconf-server
> or ietf-ssh-server data models to support either the fork/exec or
> link-to-library implementation strategies.  Do you?",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6871,TLS 15+,148,1671,"ClarificationElicitation,NeutralResponse,ClarificationElicitation,InformationProviding,Answer",1670,-1,"
Well, if your server is running as a subsystem of your regular SSH
daemon, then I think your SSH daemon configuration and your NETCONF
specific SSH configuration are essentially the same, no? Or more
precisely, you have an SSH daemon configuration plus a statement that
enables NETCONF as a subsystem, but you do not have a NETCONF specific
SSH configuration.
",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6872,TLS 15+,148,1672,"InformationProviding,Answer,StateDecision",1227,-1,"> >> >  To create a YANG model for a regular SSH server (for system level or
> >> >  CLI access), one would have to implement the ietf-keystore model,
> >> >  write a YANG module to suitably instantiate the
> >> >  ietf-ssh-server:ssh-server-grouping and likely use some
> >> >  endpoints-container grouping (well this has not been factored out
> >> >  yet but I get to this in a different review).
> >> Yes, it would be an exercise like this.
> > So you are saying I guess this is the direction you see this to evolve.
> Yes, I'm hoping to not increase the scope of this draft.  I do see it
> as a possible future item to define a concrete SSH server data model.
> That effort would entail evaluating various implementations to ensure
> it captures the most commonly used bits in the base model, and using
> features for the less-used parts.",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6873,TLS 15+,148,1673,"NeutralResponse,ProposeAction,Agreement,ContextSetting,ProposeAction",1672,-1,"
Yes, this should not be in this draft but at least it should be clear
how this all would integrate, see my comment above.
",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6874,TLS 15+,148,1674,"Question,InformationProviding,ContextSetting,Apologising",,-1,"> >> > - In section 2, should there be text that says what happens if there
> >> >   is not client authentication configured or how to extend this for
> >> >   authentication types commonly found on the web for instance?
> >> Why should there be, isn't that a protocol-specific issue?  For
> >> instance, per comments from before, the ietf-netconf-client and
> >> ietf-restconf-client models add 'must' statements asserting
> >> client-authentication is configured. Is this something that
> >> should be mentioned in Security Considerations?
> > I think it would help to spell out 'if no client auth configured,
> > there is no client auth; if you want to always have client auth, a
> > must statement can be used'.
> Sorry, I misspoke before.  The 'must' statements were used elsewhere.
> For section 2, /ietf-ssh-client:ssh-client/client-auth/auth-type is
> set to mandatory true.  So, in this case, client-auth is always
> configured, and your original concern unwarranted?",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6875,TLS 15+,148,1675,"Answer,Answer",1674,-1,"
Likely.
",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6876,TLS 15+,148,1676,"InformationSeeking,InformationProviding,ContextSetting,ProposeAction",,-1,"> >> This sounds a lot like what was discussed before about configuring
> >> NC/RC clients to authentication to call-home connections.  We decided
> >> to just support a single set of auth params that would be used for all
> >> servers (and not define a server-id to client-auth mapping).  So, this
> >> grouping may not work well in some examples.  Is it okay?
> > Perhaps not supporting SNI is sufficient for network management
> > purposes but then also pretty clearly the TLS groupings are not
> > generally usable.
> Thinking about this some more, it seems my previous response
> wasn't on target.  This isn't about what auth-credentials the
> client passes, so much as how the client indicates the server
> it wants to connect to in its client hello message.  It
> seems like something to configure SNI should be added to
> ietf-tls-client, how about this?
>   +-- server-name-indication
>     +-- server-name* [name-type]
>       +-- name-type  enumeration (e.g., 'hostname')
>       +-- name-value anydata     (e.g., foobar.example.com)
> And likewise to ietf-tls-server, though I have less idea
> how to do it (suggestions welcome!)  or, like mentioned above,
> maybe it's just how ietf-tls-server is used.",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6877,TLS 15+,148,1677,"NeutralResponse,ProposeAction,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",1676,-1,"
On the server side, based on the SNI received, you have to pick the
right key and certificate. So there needs to be some mapping.
",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6878,TLS 15+,148,1678,"Question,ProposeAction",1250,-1,"> >> > - The description of the list certificate says ""unordered list of
> >> >   certificates the TLS server can pick from when sending its Server
> >> >   Certificate message."". So how does the server pick the certificate?
> >> >   Is the idea that the somewhat vague text takes care of SNI? What if
> >> >   SNI is not used, which certificate is picked? How does the server
> >> >   pick the corresponding key? (Or are these certificates assumed to
> >> >   all be associated with the same key?)
> >> I'm looking at https://tools.ietf.org/html/rfc5246#section-7.4.2:
> >>    If the server has multiple certificates, it chooses one of them based
> >>    on the above-mentioned criteria (in addition to other criteria, such
> >>    as transport layer endpoint, local configuration and preferences,
> >>    etc.).
> > So the server magically picks one. This may be OK for the TLS
> > spec to say, not sure this is sufficient for a configuration spec.
> Do you want the configuration spec to have a pointer to this part of
> the TLS spec?",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6879,TLS 15+,148,1679,"Answer,Social,InformationProviding,Answer",,-1,"
Well, the TLS spec text does not help me to configure this such that I
get the right certificate selected for the SNI presented...

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20170821092717.menstdafm6dpw6at@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-21 11:27:17
6880,TLS 15+,148,1881,"Social,Social",,-1,"Hi Juergen,
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6881,TLS 15+,148,1882,"ClarificationElicitation,InformationProviding,Answer",1670,1671,">> >> For the ssh-client-server draft
>> >> > - The overall setup is somewhat complicated but I do understand why.
>> >> >  Obviously, the attempts to make things generic come with a price
>> >> >  since many YANG definitions interact with other definitions that
>> >> >  need to be understood. And while the end result is that we can
>> >> >  configure SSH clients and servers for NETCONF, we only have a
>> >> >  collection of groupings to configure a regular SSH client or
>> >> >  server. Should we have an instantiation of these groupings for
>> >> >  regular SSH clients and servers as well?
>> >> I'm hoping to not have to do this, but can see that there might be
>> >> value in doing so in order to further proof-out the model.  To do
>> >> this right would entail something like what Clyde did for the syslog
>> >> model in evaluating many vendor's implementations to find a common
>> >> denominator.  I can imagine the WG undertaking such an analysis for
>> >> an SSH-server container, but I fail to see how it could be done for
>> >> an SSH-client container.  Also, when thinking about symmetry to the
>> >> tls-client-server draft, note that the idea of creating a container
>> >> for a TLS-server doesn't make sense (which one, right?)
>> > Yes, for TLS there is no a common standalone TLS service. For SSH,
>> > there is however since SSH was created for a specific service (while
>> > TLS was created as a plugin to secure another existing service).
>> > The client question we discussed before and I tend to agree that
>> > usually a client you configure is embedded into some other
>> > functionality that likely has its own configuration, so having a
>> > grouping is OK.
>> > But since there are SSH servers out there, do we expect this ID to
>> > just provide groupings and we hope that some other module later comes
>> > along and picks up the groupings and turns them into a more general
>> > SSH server configuration model?
>> This is my hope, so as to limit the scope of this document.
>> > My understanding is that NC implementations actually come in different
>> > forms, some simply running behind a regular SSH server while others
>> > come with their own integrated SSH server. Does this affect the data
>> > model?
>> I think JUNOS is an example where the NC server runs ""behind an SSH
>> server"", but it's not really ""behind"" so much as a fork/exec of an
>> sshd process running the ""netconf"" subsystem (i.e., the NC server).
>> Is this what you meant?
>> Regardless, I don't see a need to change either the ietf-netconf-server
>> or ietf-ssh-server data models to support either the fork/exec or
>> link-to-library implementation strategies.  Do you?
> Well, if your server is running as a subsystem of your regular SSH
> daemon, then I think your SSH daemon configuration and your NETCONF
> specific SSH configuration are essentially the same, no? Or more
> precisely, you have an SSH daemon configuration plus a statement that
> enables NETCONF as a subsystem, but you do not have a NETCONF specific
> SSH configuration.",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6882,TLS 15+,148,1883,"Answer,Disagreement,NeutralResponse,InformationProviding,Answer,Disagreement,ProposeAction","1671,1882",1671,"
Not exactly.  There's SSH listening on port 22 and then there is SSH
listening on port 830.  When listening on 830, it can be a separate
instance of `sshd` and given unique startup parameters (e.g., the
sshd_config file).  It is not expected that this configuration
(ietf-netconf-server) would ever influence the SSH listening on
port 22.

Back to if the implementation strategy can affects the data model, my
assertion is that the startup parameters are equally applicable, whether
using the fork/exec (e.g., instances of `sshd`) or the link-to-library
(e.g., a python script), and therefore I don't think the implementation
strategy affects the data model.
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6883,TLS 15+,148,1885,"Agreement,NeutralResponse,InformationProviding,Agreement",1673,1673,"
Yup, not in this draft.  Your comment above is still being discussed...
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6884,TLS 15+,148,1887,"Question,NeutralResponse,ClarificationElicitation,NeutralResponse","1673,1676",1676,"
Second guessing myself here, does this really need to be configuration
or is the client-side of SNI just a function of how the code works?
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6885,TLS 15+,148,1889,"NeutralResponse,ContextSetting,NeutralResponse,ContextSetting",1677,1677,"
hmmm, see below...
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6886,TLS 15+,148,1891,"ExtensionOfPrevious,Question,ProposeAction,InformationSeeking,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction","1679,1889",1679,"
Peaking at TLS 1.3, draft-ietf-tls-tls13-21#section-4.4.2.2 says:

-  The ""server_name"" and ""certificate_authorities"" extensions
[RFC6066] are used to *guide certificate selection*.

and in S4.2.4 it says:

The ""trusted_ca_keys"" extension, which serves a similar purpose
[RFC6066], but is more complicated, is not used in TLS 1.3 (although
it may appear in ClientHello messages from clients which are offering
prior versions of TLS).

So, there's at least 3 different ways that the server can go about
selecting which certificates it sends.  To me, this again seems like
something maybe the server's code does internally - e.g., it sifts
through all the certs it has (i.e. list certificate in the YANG model),
sending the subset matching protocol-level criteria.  Do you know?

Peaking at NGINX config, it seems to have a config like:

+--- server* [ <not sure what the key might be> ]
+--- listen inet:port    // 443
+--- server_name string  // example.com
+--- root        string  // /usr/share/nginx/www
+--- ssl         Boolean // on
+--- ssl_certificate     // /etc/nginx/ssl/example.org/server.crt;
+--- ssl_certificate_key // /etc/nginx/ssl/example.org/server.key;

Note that the TLS-part of the config has been splayed across the
app-specific config.  By contrast, the groupings we have now are more
for a single SSL host (not virtual hosting).  We could add 'sni-to-name'
mapping structures, but we it be helpful to complex TLS apps like NGINX?
",<3676A0F4-4631-42C6-B1E6-259ADA247C37@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-08-21 23:09:27
6887,TLS 15+,148,2058,"ClarificationElicitation,NeutralResponse,Question,NeutralResponse",1883,1883,"
So are you running a separate SSH server just for NETCONF or not? I am
not asking about 'it _can_ be given unique parameters'.
",<20170822062203.tpisslwgbstdout2@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-22 08:22:03
6888,TLS 15+,148,2060,"Question,NeutralResponse,Question,ClarificationElicitation",1883,1883,"
The question is whether there is a separate SSH daemon for NETCONF or
NETCONF is just hooked up the SSH daemon also used for other services.
I think this does make a difference, no?
",<20170822062203.tpisslwgbstdout2@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-22 08:22:03
6889,TLS 15+,148,2062,"Answer,NeutralResponse",1887,1887,"
It is the server side that matters I think.
",<20170822062203.tpisslwgbstdout2@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-22 08:22:03
6890,TLS 15+,148,2064,"NeutralResponse,Social,InformationProviding,Answer",1891,1891,"
I think the key here is server_name as this allows nginx to multiplex
incoming connections to the ""right"" list instance, i.e., I can have
multiple server configured to listen on the same port and the TLS SNI
indication provides a hint which list instance is used and this
implies the correct security parameters.

/js

Juergen Schoenwaelder           Jacobs University Bremen gGmbH
Phone: +49 421 200 3587         Campus Ring 1 | 28759 Bremen | Germany
Fax:   +49 421 200 3103         <http://www.jacobs-university.de/>",<20170822062203.tpisslwgbstdout2@elstar.local>,j.schoenwaelder@jacobs-university.de,0.0,0,1,2017-08-22 08:22:03
6891,TLS 15+,148,2226,"Question,InformationProviding,ContextSetting,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision",2064,-1,"In preparation for posting an update to this draft (to resolve most of
the validation issues caught by Benoit's tools), I reviewed this entire
thread again.

First, it looks like the fork in the thread with Gary is still open
(Gary, can you see about closing out these issues?)   Here are the
topics being discussed there:
- add a config false list of identities in ietf-ssh-common?
- rather than moving them to an iana-* module...
- add a typedef to ietf-keystore that wraps the leafrefs to
keystore?
- SNI/virtual-hosting (this is picked up below as well)
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6892,TLS 15+,148,2227,"ContextSetting,ExtensionOfPrevious,ContextSetting",2226,-1,"
Continuing with this discussion:
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6893,TLS 15+,148,2229,"Answer,Answer",2058,2058,"
Yes, sshd running on port 22 and sshd running on port 830 can be completely
different instances of sshd.  The can even be different executables, maybe
port 830 is listened to by a Ruby-based application...
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6894,TLS 15+,148,2231,"Answer,Answer",2060,2060,"
Each NETCONF server implementation is free to choose their SSH strategy.
But this is why the ietf-ssh-* modules have been careful to just focus on
the lowest common denominator and, specifically, not be openssl-specific.
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6895,TLS 15+,148,2233,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting",2062,2062,"
According to https://tools.ietf.org/html/rfc6066#section-3, the client
is sending this data to the server.  My original idea was that this
needed to be client-side configuration.  But, as I second-guessed
myself, I'm now thinking that the client might do this automatically.
For instance, `wget https://example.com` may very well cause the client
to send SNI info in the TLS handshake, even though it wasn't configured.
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6896,TLS 15+,148,2235,"NeutralResponse,Question,InformationProviding,Question,ClarificationElicitation,InformationProviding,Agreement",2064,2064,"
Yes, ""server_name"" would be the key for the server-side SNI lookup.  But
where are we going with this?  I think that we concluded that the current
groupings are more for a single SSL host and not amazingly useful to a
server that wants to do virtual hosting.  Is this a problem we need to
solve now?

PS: Gary also replied regarding the server-side of SNI.
",<C575634E-5D28-4735-9DA9-D21E939977CD@juniper.net>,kwatsen@juniper.net,0.0,1,3,2017-10-19 20:24:59
6897,TLS 15+,149,0,"Social,Social",,-1,"Dear all,",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6898,TLS 15+,149,91,"InformationProviding,StateDecision,InformationProviding,ContextSetting",,-1,"
In a recent work, we analyzed the ephemeral Diffie--Hellman-based
handshake protocol in two drafts of TLS 1.3 which were available at the
time of our research project in May: draft-ietf-tls-tls13-05 as well as
the variant proposal draft-ietf-tls-tls13-dh-based
(https://github.com/ekr/tls13-spec/blob/ietf92_materials/draft-ietf-tls-tls13-dh-based.txt).
At this point in time, these have been integrated into the latest draft
08.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6899,TLS 15+,149,92,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",91,-1,"
Our research paper will be published at the ACM Conference on Computer
and Communications Security (CCS 2015) in October; a full version is now
available in the IACR Cryptology ePrint Archive
(https://eprint.iacr.org/2015/914). We show that, for both drafts, the
full and resumption handshakes achieve the main goal of providing secure
authenticated key exchange in a ""multi-stage"" setting using a game-based
approach toward provable security (in the style of Bellare and Rogaway).",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6900,TLS 15+,149,93,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",92,-1,"
On a high level, this means that the handshakes establish record layer
keys, resumption keys, and exporter keys that look random to an
adversary. This holds with sessions that run concurrently and if the
adversary controls the whole network, is able to corrupt the long-term
secret keys of other parties, and allowed to reveal keys established in
other sessions, thus providing quite strong security guarantees for
practice. Moreover, we show that even leakage of record layer or
exporter keys in the same handshake session do not compromise each
other's security.
Our results hold based on standard cryptographic assumptions, namely
collision resistance of hash functions, unforgeability of signatures,
pseudorandomness of the key derivation function, and the Decisional
Diffie--Hellman assumption, and without resorting to an idealized model
such as the random oracle model.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6901,TLS 15+,149,94,"ContextSetting,InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",93,-1,"
Before sharing some technical insights and comments arising from our
work, let us shortly state precisely the scope of our work:
* TLS 1.3 of course is still a work in progress, hence our analysis is
inevitably limited to the draft specifications at the time of writing
and should hence be considered as a contribution to the ongoing
discussion rather than a definitive analysis of TLS 1.3.
* Our work focuses on the full and resumption handshakes, but does not
capture 0-RTT handshakes which were still un(der)specified at the time
of writing.
* We do not analyze the record layer protocol (which is outside of the
scope of this work, and has been worked on by others), but rather follow
a compositional approach by showing that the full handshake securely
composes with any symmetric-key protocol. Extending this result to
encompass also the (non-forward-secret) resumption handshake is left for
future work due to a technicality in the compositional framework that
depends on forward secrecy.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6902,TLS 15+,149,95,"ContextSetting,ExtensionOfPrevious,ContextSetting,ProposeAction",94,-1,"
Our main comments can be summarized as follows (see Section 3 of our
paper for a more detailed version):",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6903,TLS 15+,149,96,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",95,-1,"
1. Soundness of key separation
Using separate keys for the encryption of handshake messages and
application data (compared with previous versions of TLS that encrypted
the Finished messages using the session key) allows the protocol to
achieve standard key secrecy/indistinguishability notions using standard
cryptographic assumptions (i.e., DDH rather than PRF-ODH).",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6904,TLS 15+,149,97,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",95,-1,"
2. Key independence
The key schedule which derives each output key (in particular the
two traffic keys) through an application of the key derivation function
with a unique label/info input allows us to prove that these keys are
computationally independent: neither is affected by the other's
compromise. This in particular contributes to the compositional approach
of treating the (security of the) handshake and record layer separately.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6905,TLS 15+,149,98,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",95,-1,"
3. Session hash in online signatures
Including the full transcript/session hash in the CertificateVerify
signature makes the security proof easier and contributes to
establishing security based on standard assumptions.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6906,TLS 15+,149,99,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting",95,-1,"
4. Encryption of handshake messages
The handshake traffic key is secure against passive adversaries and
hence encryption within the handshake can indeed increase privacy. We
confirm that this approach does not have negative effects on the main
key secrecy/indistinguishability goal of the key exchange.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6907,TLS 15+,149,100,"InformationProviding,InformationProviding,ContextSetting,StateDecision",,-1,"
While our paper addresses older drafts (draft-05 and draft-dh), we
expect that our analysis of the full handshake in draft-dh can be
adapted to cover the full handshake in the latest draft-08 version. As
the handshake stabilizes, we hope to update our work. At this point in
time, we hope that our analysis can provide some cryptographic insights
for the so-far achieved and further development of TLS 1.3.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6908,TLS 15+,149,101,"ProposeAction,InformationSeeking,ProposeAction",,-1,"
We welcome your comments and suggestions.",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6909,TLS 15+,149,102,Social,,-1,"
Benjamin Dowling, Marc Fischlin, Felix Günther, and Douglas Stebila
(Queensland University of Technology and Technische Universität Darmstadt)",<560256F9.6060107@cs.tu-darmstadt.de>,guenther@cs.tu-darmstadt.de,0.0,,,2015-09-23 09:38:33
6910,TLS 15+,150,7,"Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"How about removing the RSA/ECDSA from the cipher suite, and making the
SigAlgs extension mandatory for connections requiring authentication?
That halves the number of cipher suites and eliminates an unnecessary
redundancy, while keeping the rest of the cipher suite negotiation
logic intact.",<CAJU8_nXOTBTX+zLBH6a=dr2oxWUn_Wf9p13WHZiQt=38js2ijg@mail.gmail.com>,krose@krose.org,0.0,1,3,2015-07-22 10:30:24
6911,TLS 15+,150,30,"InformationProviding,Answer,ContextSetting,NeutralResponse",7,7,"
This is already a part of the current a la carte proposal that's been under discussion.

recent summary of changes:
https://www.ietf.org/mail-archive/web/tls/current/msg17156.html
current WIP text:
https://github.com/davegarrett/tls13-spec/blob/alacarte/draft-ietf-tls-tls13.md#cipher-suites
diff from PR #201:
https://github.com/davegarrett/tls13-spec/compare/alertsandcerts...davegarrett:alacarte

Both the supported groups and signature algorithms extensions are mandatory in this proposal, and they are the sole methods to select key exchange and certificates, with the ECDHE_ECDSA prefix being essentially frozen for certificate authenticated cipher suites.
",<201507221301.08518.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-22 13:01:08
6912,TLS 15+,151,0,"ContextSetting,InformationProviding",,-1,In https://trac.tools.ietf.org/wg/core/trac/ticket/395 Klaus provided,<56F58BF2.2070203@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-03-25 20:05:22
6913,TLS 15+,151,33,"Question,Answer,ContextSetting,Question,ProposeAction",,-1,"
Should each connection be independent from all other connections, or
should it be possible to set up a connection (e.g., registering to
observe multiple resources), disconnect and resume the connection at a
later time?
(I'm leaning towards independent connections.)

When DTLS / TLS client communicates with a server then it typically
establishes a session cache to allow session resumption. This is a
feature that is recommended to be used in the DTLS profile document.
There is also an additional version of the session resumption that does
not require the server to maintain any session state but the state is
stored in a ticket, cached at the client and later presented. This
feature is called 'session resumption without server-side state' and
defined in RFC 5077.

In any case, if there is already cached information established from a
prior exchange then the client should try to re-use that information to
accelerate the TLS handshake. The performance benefit are large when a
ciphersuite with public key cryptography is used during the full handshake.

My recommendation is to follow the guidance given in the DTLS profile. I
do, however, believe it would be useful to reference the DTLS profile
draft and to reference the appropriate section.

Did I correctly address your feedback?

Ciao",<56F58BF2.2070203@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-03-25 20:05:22
6914,TLS 15+,151,55,"Question,NeutralResponse,Question,InformationProviding",,-1,"
To clarify, the question is about sessions at the CoAP level, not at
the DTLS/TLS level.

Should it be possible to send a CoAP request, close the TCP
connection, reconnect and receive the response?
",<CAAzbHvYWwbxtEJg5aQdrEHBryokWM0j7ntHj1ypxA1gbHYXY9Q@mail.gmail.com>,hartke@tzi.org,0.0,0,9,2016-03-28 18:33:52
6915,TLS 15+,151,79,"Answer,InformationProviding,Answer",55,55,"
Without a checkpointing protocol, this is hard to ensure.

The requesting endpoint cannot be really sure that its request made it
before the connection closure.  Similarly, the responding end might have
to resend the response after resumption.  Finally, the server could have
lost the state in the time there was no connection.
Similarly, the client might have crashed between the time it received
the response and was able to process it.

(A true session layer protocol can solve this.  But there seems to be a
reason these are rarely used in the Web today.)

I don't mind if someone wants to work on such a session layer protocol,
but this should not be part of base CoAP-over-TCP; the CoAP-level
protocol state should share the fate of the TCP connection.

Grüße, Carsten",<56F95F77.5060405@tzi.org>,cabo@tzi.org,0.0,1,0,2016-03-28 18:44:39
6916,TLS 15+,151,90,"Agreement,Agreement",79,79,"
+1
",<CAAzbHvbeje9Xr0yS2g2brO=XAv4vzo99z_YTm9nDipyNaQY=Jg@mail.gmail.com>,hartke@tzi.org,0.0,0,9,2016-03-28 18:46:32
6917,TLS 15+,151,142,"NeutralResponse,InformationProviding,ProposeAction",33,-1,"My understanding is that TLS1.3
(https://tools.ietf.org/html/draft-ietf-tls-tls13-12)is deprecating
session resumption. So it may not be good to rely on that mechanism.",<56FA29C2.9040307@nteczone.com>,Christian.Groves@nteczone.com,0.0,0,6,2016-03-29 18:07:46
6918,TLS 15+,153,0,Social,,-1,"Hi CFRG,",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6919,TLS 15+,153,17,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The TLS WG is nearing the end of our journey moving EC-based algorithms for TLS 1.2 (and earlier) from Informational to Standards track [0].  While we were doing that we also added in 25519 and x448 as well as EdDSA.",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6920,TLS 15+,153,18,"InformationProviding,ContextSetting,ProposeAction,ContextSetting",,-1,"
I’d like to get some input from the CFRG on the use of contexts; the ""context label"" is a way to provide domain separation between signatures made in different contexts, avoiding cross-protocol attacks.  s10.3 of draft-irtf-cfrg-eddsa includes the following:",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6921,TLS 15+,153,19,"InformationProviding,InformationProviding",,-1,"
Contexts SHOULD NOT be used opportunistically, as that kind of use
is very error-prone.  If contexts are used, one SHOULD require all
signature schemes available for use in that purpose support
contexts.",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6922,TLS 15+,153,20,"Question,InformationProviding,ExtensionOfPrevious,Question,ExtensionOfPrevious",19,-1,"
This is great advice for new protocols because it’s easy to make all the schemes the same, but for existing protocols like TLS where there’s zero chance of obsoleting the existing signature schemes and defining new signature schemes with contexts it makes you wonder what “opportunistically” means. I.e., would setting a context parameter for Ed448 and no other already defined signature scheme be considered opportunistic?",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6923,TLS 15+,153,21,InformationProviding,,-1,"
spt
(as document Shepherd for draft-ietf-tls-rfc4492bis)",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6924,TLS 15+,153,22,"InformationProviding,ExtensionOfPrevious",17,-1,"
[0] https://datatracker.ietf.org/doc/draft-ietf-tls-rfc4492bis/",<E3C4D457-2407-4295-9F45-B3CA0AE715DD@sn3rd.com>,sean@sn3rd.com,0.0,1,1,2017-01-04 16:55:44
6925,TLS 15+,153,24,Social,,-1,"Dear CFRG,",<D4A2C31D.7E0C6%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-16 18:37:17
6926,TLS 15+,153,69,"InformationProviding,ProposeAction,ProposeAction",,-1,"
Please chime in asap if you have a view on the issue of signature contexts
in TLS 1.3, as described by Sean below. Otherwise, chairs will make a
possibly ill-informed decision...",<D4A2C31D.7E0C6%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-16 18:37:17
6927,TLS 15+,153,118,Answer,20,20,"
Domain separation for signed values is important and TLS already defines
context strings for signature operations:
https://tools.ietf.org/html/draft-ietf-tls-tls13-18#section-4.4.2

The way that this is constructed (due to me) is generic for any signature
scheme. (Basically just have the context string be NUL-terminated at the
beginning of the signed message.)

So for TLS I believe that the issue is already taken care of. It would also
probably just add pain for implementers if the context string were to be
duplicated as an input to the signature scheme where signature schemes
support it.
",<CAMfhd9WgPYfiCULuQpFOVeoLEEX__dZCa=ZoZuzdSJ_i9da5PQ@mail.gmail.com>,agl@imperialviolet.org,0.0,0,4,2017-01-16 10:45:34
6928,TLS 15+,153,121,InformationProviding,,-1,Adam Langley writes:,<20170116200948.6535.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2017-01-16 20:09:48
6929,TLS 15+,153,153,"InformationProviding,ProposeAction,Question,Question,NeutralResponse,ProposeAction",118,118,"
In other words, there's still a simple sign-a-message layer that uses
the standard signature API, that works with all signature systems, and
that minimizes costs for implementors and auditors. On top of this
there's a universal

def sign_a_context_and_data(c,d):
if '\0' in c: raise Exception('NUL not allowed in contexts')
return sign(c + '\0' + d)

layer used by the protocol (and by any other protocols that want it).
Everyone can see how this works from a spec perspective and from a
software-engineering perspective.

For comparison, trying to modify the interface and specification of
every sign() function creates a transition nightmare, with nobody able
to answer basic questions about how this approach is actually supposed
to work. What's the advantage supposed to be?

I would really like to see this unnecessary complexity eliminated from
CFRG's signature specifications. Please see

https://www.ietf.org/mail-archive/web/cfrg/current/msg08167.html

for further comments.

---Dan",<20170116200948.6535.qmail@cr.yp.to>,djb@cr.yp.to,0.0,0,8,2017-01-16 20:09:48
6930,TLS 15+,153,186,"InformationProviding,NeutralResponse,NeutralResponse,ProposeAction",153,153,"
I'm relatively neutral on the use or non-use of contexts,
but lean more towards Dan's position that the API changes
involved mean that practically, it's better to not demand
contexts.

However, I really do wish that CFRG specs would not offer
both choices - that will simply lead to repeating this
discussion each time an IETF protocol wants to use the CFRG
spec. And of course, different decisions will be made over
time, leading to slightly more mess than would otherwise
exist. That's not a showstopper thing, but life will be
better if the choice is not offered.

So, I'd support eliminating contexts from CFRG specs and
saying something like ""if you want that, and it's not a
bad idea for avoiding cross-protocol attacks, then do it
at a layer above the crypto API.""
",<5eeb3d4d-1fc0-35ba-6f47-87fa0d808edc@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2017-01-17 11:48:38
6931,TLS 15+,153,189,InformationProviding,,-1,"On Jan 17, 2017 3:48 AM, ""Stephen Farrell"" <stephen.farrell@cs.tcd.ie>",<CACsn0ckLeQmNiJAzHuNBxV_X1NDqWhjrWh+-R_Z-umtXUTb9ow@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-17 07:06:45
6932,TLS 15+,153,237,"InformationProviding,Answer",153,153,"
I'm relatively neutral on the use or non-use of contexts,
but lean more towards Dan's position that the API changes
involved mean that practically, it's better to not demand
contexts.

However, I really do wish that CFRG specs would not offer
both choices - that will simply lead to repeating this
discussion each time an IETF protocol wants to use the CFRG
spec. And of course, different decisions will be made over
time, leading to slightly more mess than would otherwise
exist. That's not a showstopper thing, but life will be
better if the choice is not offered.

So, I'd support eliminating contexts from CFRG specs and
saying something like ""if you want that, and it's not a
bad idea for avoiding cross-protocol attacks, then do it
at a layer above the crypto API.""
",<CACsn0ckLeQmNiJAzHuNBxV_X1NDqWhjrWh+-R_Z-umtXUTb9ow@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-17 07:06:45
6933,TLS 15+,153,286,"Agreement,Agreement",19,19,"
Me too.
",<AA42E783-43FC-4C9B-A387-623B5B18B4FB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-17 17:56:06
6934,TLS 15+,153,288,"InformationProviding,Disagreement,NeutralResponse",186,186,"
Not over time. In the next few months the IESG is going to get documents about EdDSA signatures from TLS, IPsecME and curdle for signatures in TLS, IKE, and PKIX respectively.  If the decision is not the same in all of them, I think (hope) that the IESG would ask why.
",<AA42E783-43FC-4C9B-A387-623B5B18B4FB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-17 17:56:06
6935,TLS 15+,153,307,"Question,Question,NeutralResponse",288,288,"
So now that RFC 8032 is out and does include both choices, what is our advice to TLS, IPsecME and Curdle?  Contexts or no?
",<708C8E8E-37AE-4B8F-9843-B0F8CDB29229@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-25 09:02:26
6936,TLS 15+,153,338,"Question,Question,Answer",,-1,"
No contexts. Why did we ever include them?

""Man is born free, but everywhere he is in chains"".
--Rousseau.",<CACsn0cm22h8_61CEZjKYyHfnd7vvnC39ZMjhusjWcZKu_Z0zhw@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2017-01-29 14:33:39
6937,TLS 15+,153,375,"InformationProviding,Answer,Answer,NeutralResponse",338,338,"
Seemed like a good idea at the time. The thread begins here:

https://mailarchive.ietf.org/arch/msg/cfrg/GOPQ6lgJcfrXboexQmgNk_ZIZW8 <https://mailarchive.ietf.org/arch/msg/cfrg/GOPQ6lgJcfrXboexQmgNk_ZIZW8>

Regardless, ISTM that almost nobody is advocating for using contexts now for Ed448 in any of the above applications, or for using Ed25519ctx in there.
",<DA141A39-05C2-4B87-92FA-AE8C5421E104@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-01-30 01:24:06
6938,TLS 15+,153,389,"InformationProviding,NeutralResponse",375,375,"
If cfrg decided to revisit the decision and eliminate contexts,
I don't think anyone would really suffer. (And any sufferer
can always write an RFC too if that's really needed.)
",<0435210f-0aa4-1c34-89d6-0f7a2aef0621@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2017-01-29 23:37:34
6939,TLS 15+,153,392,Social,,-1,"Dear CFRG,",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
6940,TLS 15+,153,437,"InformationProviding,ProposeAction,Thanking,ProposeAction,Thanking",,-1,"
Thanks to those who already expressed their views on this. We should close
this one out in the next few days. The current rough consensus seems to
lean towards ""no to contexts in this instance"". (The wider question of
whether contexts are a good idea or not is, formally, out of scope here,
but I don't think I can expect y'all to resist discussing it!)",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
6941,TLS 15+,153,438,"Question,ContextSetting,Question,ExtensionOfPrevious",437,-1,"
So: does anyone else want to offer an opinion on the question of contexts?
The original request for input from Sean Turner can be found below.",<D4B4D5E4.82A6D%kenny.paterson@rhul.ac.uk>,Kenny.Paterson@rhul.ac.uk,0.0,1,6,2017-01-30 11:40:59
6942,TLS 15+,153,441,InformationProviding,,-1,"On 30 January 2017 at 12:40, Paterson, Kenny <Kenny.Paterson@rhul.ac.uk>",<CA+yVaTxTbqDUBbX2oTgC6BT2LprOz8uqAbhTRukuqfZD124kSA@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-03 09:16:11
6943,TLS 15+,153,463,"InformationProviding,Answer,ProposeAction,Answer",438,438,"Contexts are a clean and relatively simple way to prevent cross-protocol
attacks, in particular when implemented in an as simple way as proposed
by Adam and Dan.

The cross-protocol attacks we have seen so far were mostly rather
academic and not too practical. However, with an increasing number of
cryptographic protocols in use the occurrence of practical
cross-protocol attacks becomes much more likely, as the number of
possible combinations grows quadratically. At some point it will become
infeasible to analyze all possible combinations thoroughly enough.

I think at some point in the future we will have to deal with the
prevention of cross-protocol attacks by using contexts, and doing this
as early as possible is a good idea - following the ""better safe than
sorry"" principle is always a good idea when designing security protocols.",<CA+yVaTxTbqDUBbX2oTgC6BT2LprOz8uqAbhTRukuqfZD124kSA@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-03 09:16:11
6944,TLS 15+,153,511,"InformationProviding,Disagreement,Disagreement,NeutralResponse",463,463,"
Unfortunately, in practice those are anything but clean and simple.

Yes, the theoretical notion is pretty simple (where (context,message)
tuple replaces the message in standard notion of signature security).

The biggest practical problem: Backwards compatiblity, the ever-present
nemsis of security.

There are basically two major problems:

- Non-contextualized schemes, which leave the system wide open for
any possible attacks. Hopefully nothing major.
- The standard signature API can't accomodiate contexts.

When it comes to TLS, AFAIK the most significant target for possible
cross-protocol attacks is PKIX CSR mechanism.
",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-03 14:55:33
6945,TLS 15+,153,512,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","463,511",463,"
What I think it would take to deploy contextualization to TLS and
closely associated technologies (PKIX mainly):

- New RSA-PSS (possibly original RSA-PSS), ECDSA and EdDSA signature
schemes (X.509 algorithms) that are contextualized.
- New RSA and ECDSA key types (X.509 key types; EdDSA can reuse keys)
- New TLS SignatureScheme values to go with these.

One advantage of having different RSA key type would be that the old
standard one has been jinxed by the broken RSA-PKCS#1v1.5 encryption.
However, there is already standard RSA-PSS key type, which does not
have the same problem AFAIK.
",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-03 14:55:33
6946,TLS 15+,153,513,InformationProviding,463,463,"
-Ilari",<20170203125533.GA11515@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-03 14:55:33
6947,TLS 15+,153,522,Question,438,438,contexts?,<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
6948,TLS 15+,153,610,"InformationProviding,Disagreement",463,463,"
Unfortunately, in practice those are anything but clean and simple.

Yes, the theoretical notion is pretty simple (where (context,message)
tuple replaces the message in standard notion of signature security).

The biggest practical problem: Backwards compatiblity, the ever-present
nemsis of security.

There are basically two major problems:

- Non-contextualized schemes, which leave the system wide open for
any possible attacks. Hopefully nothing major.
- The standard signature API can't accomodiate contexts.
",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
6949,TLS 15+,153,611,"Question,InformationProviding,ProposeAction,Question,NeutralResponse",463,463,"
Couldn't we go the other way and suggest that people don't simply use the
raw signature primitive, and instead only use a message format that
includes room for contexts? Because in general, only cryptographers should
deal with the raw primitives.

Can anybody find a flaw with the following?

Sign(<private key>;
SHAKE256(<output length parameter>;
<[hexadecimal encoded output length in bits],
[Base64(Signature algorithm + format identifier],
[Base64(Context identifier)],
[hexadecimal encoded message hash]>))

= message signature, context

You feed in the message, key and context, the rest is hardcoded in the
context aware software.

Question: should the public key be included among the above inputs?
Depending on the signature scheme it may not always be formatted as
expected by the verifier (malleability, etc), and must thus be forwarded
along with every message.
This could perhaps be algorithm specific, since those algorithms with a
deterministic public key encoding can hash it without publishing it with
the message, and still validate.

The signature algorithm description could use predefined ciphersuite
identifiers (much like TLS does), defining the exact choices in use.

The above SHAKE256 inputs should also be encoded with prefixes like a null
byte to guarantee there can be no manufactured collision spanning across
them.
",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
6950,TLS 15+,153,612,"Question,InformationProviding,ProposeAction,Apologising,Question,ExtensionOfPrevious,Apologising",463,463,"
This should in theory provide a context-equipped signature that will not
collide accidentally with context-less messages, and will not collide
across unique signature algorithms/formats, and in particular will not
collide across contexts.

It should also resist most imaginable attacks including length extension
attacks and similar, while also naturally being able to generate arbitary
length hashes (SHAKE256) for the signing primitives (which may use unusual
input lengths). It even achieves this without truncation or padding!
Another question, should we prefix the SHAKE256 output? Is there any
attacks that would stop?

This format should also stop context-unaware software (which can be
presumed to be intended to NOT be able to parse these message) from being
able to validate these signatures, preventing these signatures from
enabling cross-protocol attacks elsewhere.
While one could verify the signature of the raw SHAKE256 output, it would
be meaningless to most unaware software.

Software only expecting signatures with contexts also wouldn't accept
context-less signatures, as they would be extremely unlikely to validate
(assuming SHAKE256 is secure).
The exception is if a context-less program would be insecure and behave as
a signature oracle or even be malicious and thus could be manipulated to
generate such a SHAKE256 output to be signed, to be used against context
aware software.

(Sorry if anything is incoherent, my phone keyboard app Swiftkey bugged out
and started deleting text. Had to rewrite a lot.)",<CAAt2M18=P3WyA-NBZ9S8VS9Q7LsVyOu39+bGFKZbVP5k5AjsKg@mail.gmail.com>,natanael.l@gmail.com,0.0,0,17,2017-02-03 15:41:37
6951,TLS 15+,153,620,Question,438,438,contexts?,<CA+yVaTzr+9rFM_GX--6B+M8hyz5O-bWFmjDwEiPKeOyCM17zXQ@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-05 08:48:01
6952,TLS 15+,153,657,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",511,511,"
We do not have to change old protocols in order to enable domain separation
via contexts in new protocols:

- Old protocols: keep signing messages as before: sig = Sign(sk, m)
- New protocols: sign messages as sig = Sign(sk, ctx||m)

Here, ctx is a ""unique"" and sufficiently large context string, which even
in presence of an attacker is unlikely to occur in the message m of any
existing protocol. For example, one could use the ASCII string ""TLS 1.3 TLS
1.3 TLS 1.3 ..."", repeating ""TLS 1.3"" a suitable number of times. The
symbol || denotes concatenation of bytes, possibly with a NULL-byte as a
separator.

This is how I understand the solution pointed to by Adam and explained by
Dan, and it seems similar in spirit to (but simpler than) what Natanael
described. In particular, it seems not to break backwards compatibility
with existing protocols, but would allow a smooth transition to the use of
contexts to achieve domain separation, and thus help to prevent
cross-protocol attacks.",<CA+yVaTzr+9rFM_GX--6B+M8hyz5O-bWFmjDwEiPKeOyCM17zXQ@mail.gmail.com>,tibor.jager@gmail.com,0.0,0,43,2017-02-05 08:48:01
6953,TLS 15+,153,727,"InformationProviding,ProposeAction,NeutralResponse",657,657,"
The problem is, that keys need to be separated as well.

If it is just a protocol that stands alone, then one may just declare
its keys to be suitable.

However, if it uses external keys, you are faced with separating these
keys, which means changes to the key format. And if external keys are
critically used in some other way, you need to modify this use as well.

Implication of above for TLS:

- TLS critically relies in practice on X.509 SPKI key format and X.509
CSRs.
- Reliance on SPKI impiles that new SPKI key type would be needed.
- Reliance on CSR would mean new X.509 signature type would be required.

Yes, the new key type and new signature type are not difficult to
define, but still need to be done for the scheme to give security.
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-05 14:35:37
6954,TLS 15+,153,729,"InformationProviding,NeutralResponse,Disagreement",657,657,"
Fails the basic notion of security of contextualized signatures.
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-05 14:35:37
6955,TLS 15+,153,731,"InformationProviding,NeutralResponse","18,657",18,"
I don't think they described the catch with this type of construction...
",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-05 14:35:37
6956,TLS 15+,153,732,InformationProviding,18,18,"
-Ilari",<20170205123537.GA13710@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-02-05 14:35:37
6957,TLS 15+,153,776,"Question,InformationProviding,Agreement,ProposeAction,Question,Agreement,NeutralResponse",153,-1,"I agree with Dan Bernstein's suggestion and reasoning below against CFRG's currently contextualization of signature schemes, though I would also understand if CFRG does not want to reverse its decisions.

Further points:

Protocol designers should be responsible to enforce uniqueness of protocol messages (within and between honest protocols), not just for digital signatures but for all forms of authentication.  How much is this to ask? Isn't that kind of reliability their bread-and-butter?  If there hadn't been non-uniqueness, then cross-protocol attacks would have failed, right?

Adding a context to signatures is a complexity that is (1) not guaranteed to help (no formal security definition, no security proof? And no, I do not volunteer), (2) potentially collides with non-contextualized signatures (must signers now also track whether each non-context signature corresponds to some contextual signature?), (3) blames crypto for too much ;)
",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
6958,TLS 15+,153,778,InformationProviding,,-1,"
Adam Langley writes:",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
6959,TLS 15+,153,780,"Question,InformationProviding,ProposeAction",,118,"
In other words, there's still a simple sign-a-message layer that uses the standard signature API, that works with all signature systems, and that minimizes costs for implementors and auditors. On top of this there's a universal

def sign_a_context_and_data(c,d):
if '\0' in c: raise Exception('NUL not allowed in contexts')
return sign(c + '\0' + d)

layer used by the protocol (and by any other protocols that want it).
Everyone can see how this works from a spec perspective and from a software-engineering perspective.

For comparison, trying to modify the interface and specification of every sign() function creates a transition nightmare, with nobody able to answer basic questions about how this approach is actually supposed to work. What's the advantage supposed to be?

I would really like to see this unnecessary complexity eliminated from CFRG's signature specifications. Please see

https://www.ietf.org/mail-archive/web/cfrg/current/msg08167.html

for further comments.

---Dan

Cfrg mailing list
Cfrg@irtf.org
https://www.irtf.org/mailman/listinfo/cfrg",<810C31990B57ED40B2062BA10D43FBF5010A7486@XMB116CNC.rim.net>,danibrown@blackberry.com,0.0,0,7,2017-01-17 17:24:26
6960,TLS 15+,154,0,Social,,-1,"Hi Ekr, Hi all,",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6961,TLS 15+,154,70,"InformationProviding,InformationProviding,ContextSetting",,-1,"
reading through https://tools.ietf.org/html/draft-ietf-tls-tls13-14 I
noticed the TLS ExtensionType Registry on page 77 & page 78.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6962,TLS 15+,154,71,"ContextSetting,InformationProviding",,-1,"
The ""TLS 1.3"" column has one of four values, namely",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6963,TLS 15+,154,72,"InformationProviding,InformationProviding",,-1,"
- ""Client"", indicating that the server shall not send them.
- ""Clear"", indicating that they shall be in the ServerHello.
- ""Encrypted"", indicating that they shall be
in the EncryptedExtensions block
- ""No"" indicating that they are not used in TLS 1.3.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6964,TLS 15+,154,73,"ContextSetting,InformationProviding,ProposeAction,ContextSetting",,-1,"
The following values deserve a closer look:",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6965,TLS 15+,154,74,"InformationProviding,ExtensionOfPrevious",,-1,"
| Extension                     | Recommend |               TLS 1.3 |
|                               |        ed |                       |
| server_name [RFC6066]         |       Yes |             Encrypted |
| max_fragment_length [RFC6066] |       Yes |             Encrypted |
| key_share [[this document]]   |       Yes |                 Clear |
| pre_shared_key [[this         |       Yes |                 Clear |
| document]]                    |           |                       |
| cookie [[this document]]      |       Yes | Encrypted/HelloRetryR |
|                               |           |                equest |",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6966,TLS 15+,154,75,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
The server_name extension is sent in the initial ClientHello and will
not be encrypted since it will be used to select the right server in a
hosting environment.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6967,TLS 15+,154,76,"InformationProviding,InformationProviding",,-1,"
The max_fragment_length extension is sent in the initial ClientHello but
is not as essential as the server_name extension. Still, in most cases
there is no security context established at the time of sending the
ClientHello (at least not in the full handshake when ECDHE is used).",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6968,TLS 15+,154,77,"InformationProviding,InformationProviding",,-1,"
The key_share & the pre_shared_key extension is sent in clear in the
ClientHello and in the ServerHello.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6969,TLS 15+,154,78,"InformationProviding,InformationProviding",,-1,"
The cookie is not sent encrypted in the HelloRetryRequest since the
HelloRetryRequest is sent when the client has not provided a suitable
""key_share"" value. The DoS protection feature used in the
HelloRetryRequest is most likely useful only in context of an unreliable
transport protocol. If you want DoS protection then the server should
not store per-session state, which establishing security context would
require.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6970,TLS 15+,154,79,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
I believe the definition of 'clear' should be changed to:",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6971,TLS 15+,154,80,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
""Clear"", indicating that they shall be sent in clear
in the ClientHello and in the ServerHello.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6972,TLS 15+,154,81,"InformationProviding,InformationProviding",,-1,"
I fear that the use of extension in the encrypted block may be dependent
on where they can first be used and also in what handshake variant. It
is also a question whether it makes sense to send an extension encrypted
in the ServerHello when it first appeared in clear in the ClientHello.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6973,TLS 15+,154,82,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
I wonder whether the ""TLS 1.3"" column in this table could actually be
simplified to only provide information about extensions that can be used
in TLS 1.3. Whether something is sent in clear, encrypted or only be the
client is something that should be described in the protocol
specification itself.",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6974,TLS 15+,154,83,Social,,-1,"
Ciao",<f5bbef49-6c37-8118-731d-9581ed7db877@gmx.net>,hannes.tschofenig@gmx.net,0.0,1,0,2016-08-11 20:56:25
6975,TLS 15+,154,164,"NeutralResponse,InformationProviding,NeutralResponse",75,75,"
Actually, the server_name could be made into 'client', since the only
thing server sends about server_name is an ACK, meaning it has taken it
into ""consideration"" (in some vague way).
",<20160811190929.bowe75bhjeks6bqf@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-11 22:09:29
6976,TLS 15+,154,166,"NeutralResponse,ProposeAction,InformationProviding,NeutralResponse",76,76,"
I think max_fragement_length should be made into 'clear', given what
it is used for.
",<20160811190929.bowe75bhjeks6bqf@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-11 22:09:29
6977,TLS 15+,154,168,"NeutralResponse,InformationProviding,NeutralResponse",78,78,"
The ""encrypted"" seems to be leftover from time when there were inter-
connection cookies (which were removed).
",<20160811190929.bowe75bhjeks6bqf@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-11 22:09:29
6978,TLS 15+,154,171,"NeutralResponse,InformationProviding,Disagreement",82,82,"
Actually, in that wide sense, all extensions can be used. TLS 1.3
just forbids negotiation of some extensions. But it does not forbid
client sending any extension if downnegotiation is supported.
",<20160811190929.bowe75bhjeks6bqf@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-11 22:09:29
6979,TLS 15+,154,172,InformationProviding,82,82,"
-Ilari",<20160811190929.bowe75bhjeks6bqf@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-11 22:09:29
6980,TLS 15+,154,213,"Disagreement,InformationProviding,Disagreement,ProposeAction",164,164,"
I disagree.  If it can be encrypted, then it should be.  (I don't
believe that we ack this in NSS, so it's moot there.)
",<CABkgnnUugwSOvMGQ+eAipkVOGcFHVxoQqJcFEDoEME7s-ggnCg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-08-12 16:39:51
6981,TLS 15+,154,215,"Disagreement,InformationProviding,Disagreement,ProposeAction",166,166,"
I disagree.  The client doesn't need to use this value until it has
read all of the server's first flight, so it can be encrypted.  The
server can still act on the client's value until that time.  (I know
that you might make an argument that it could appear in
HelloRetryRequest to force the client to cut its second ClientHello
smaller, but that's really tricky to get right, and I think that
servers should just be prepared to swallow an entire ClientHello.)
",<CABkgnnUugwSOvMGQ+eAipkVOGcFHVxoQqJcFEDoEME7s-ggnCg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-08-12 16:39:51
6982,TLS 15+,154,217,"Agreement,InformationProviding,Agreement,ProposeAction",168,168,"
Yep, this needs to be Client* with a note that it appears in the
HelloRetryRequest (a category in which this is currently the only
resident).",<CABkgnnUugwSOvMGQ+eAipkVOGcFHVxoQqJcFEDoEME7s-ggnCg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-08-12 16:39:51
6983,TLS 15+,154,254,"NeutralResponse,Question",213,213,"
Well, I was more like ""do we need this at all?"".
",<20160812090231.76bskgj4wkoymvyh@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-12 12:02:32
6984,TLS 15+,154,256,"NeutralResponse,InformationProviding,Disagreement",215,215,"
Actually, the client can just abort if it observes server generating
larger fragments than it requested, so it doesn't really need the
ACK for anything (and if it could handle full 16k fragments, it
presumably wouldn't use the extension).
",<20160812090231.76bskgj4wkoymvyh@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-12 12:02:32
6985,TLS 15+,154,257,InformationProviding,215,215,"
-Ilari",<20160812090231.76bskgj4wkoymvyh@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-08-12 12:02:32
6986,TLS 15+,154,264,"Agreement,InformationProviding,Agreement",254,254,"
Yep, there is that :)",<CABkgnnUAeRqKS9VaNoxmf-fdx9WfvmyB-MQ+azn2SmrFRqUFeA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-08-12 19:47:15
6987,TLS 15+,155,0,InformationProviding,,-1,"AVTCORE and TLS,",<56A8904D.10307@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-01-27 10:39:25
6988,TLS 15+,155,23,"InformationProviding,InformationProviding,ContextSetting",,-1,"
TLS WG, you are included in this WG last call, as this document affects
the TLS ContentType IANA registry.",<56A8904D.10307@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-01-27 10:39:25
6989,TLS 15+,155,24,"InformationProviding,InformationProviding,ContextSetting",,-1,"
This email starts a two week WG last call, that ends on the 10th of
February. The intended status of this document is standards track
(Proposed Standard).",<56A8904D.10307@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-01-27 10:39:25
6990,TLS 15+,155,25,"ExtensionOfPrevious,InformationProviding",24,-1,"
The document can be retrieved here:
https://datatracker.ietf.org/doc/draft-ietf-avtcore-rfc5764-mux-fixes/",<56A8904D.10307@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-01-27 10:39:25
6991,TLS 15+,155,71,"NeutralResponse,InformationProviding,ProposeAction",25,-1,"This document is relevant to the TLS working because it reserves a large
portion of the TLS content type space.  The values 0-19 and 64-255 cannot
be used without checking for conflicts with SRTP-DTLS's wacky
demultiplexing scheme.   In TLS 1.3 we will move more encrypted content
types which should limit the impact this unfortunate design on TLS
evolution, but the working group should be aware of this.",<CAOgPGoBU+h6cA9RDxBX2m1AR-3-GnC7OYcfDLTpDepX00g73dA@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-02-07 21:21:02
6992,TLS 15+,155,74,"InformationProviding,InformationProviding",,-1,"Permanently gobbling up the majority of the codespace feels like excessive force here. For TLS 1.3, the first byte will always be one of alert(21), handshake(22), or application_data(23), even for custom types. The stated type for TLSCiphertext has been frozen to application_data(23) with the actual type for the payload now in the encrypted fragment. (this is of course assuming we don't eventually drop the frozen type & version here, which now sounds unlikely if we're having to deal with design flaws like this) Even handshake records after the hellos will have an opaque_type of application_data(23), with the encrypted fragment.type containing the actual handshake(22) designation. All TLS 1.3+ packets will be detected with the RFC 5764 Section 5.1.2 algorithm even if new types are allocated in the proposed reserved ranges.",<201602080117.57742.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-02-08 01:17:57
6993,TLS 15+,155,109,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",74,-1,"
Locking down the <1.2 registry seems fine, however 1.3+ should be able to do whatever it needs as its encrypted type is not going to get accidentally read & misinterpreted by anything.",<201602080117.57742.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-02-08 01:17:57
6994,TLS 15+,155,110,"ExtensionOfPrevious,InformationProviding",109,-1,"
https://tools.ietf.org/html/draft-ietf-tls-tls13-11#section-5.2.2
https://tools.ietf.org/html/rfc5764#section-5.1.2
https://tools.ietf.org/html/draft-ietf-avtcore-rfc5764-mux-fixes-05#section-4",<201602080117.57742.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-02-08 01:17:57
6995,TLS 15+,155,196,InformationProviding,,-1,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
",<56CA239F.6010107@acm.org>,petithug@acm.org,0.0,0,3,2016-02-21 13:52:47
6996,TLS 15+,155,198,"NeutralResponse,InformationProviding,Disagreement,ProposeAction",74,74,"
This is not what the RFC-to-be is proposing.  We are just marking the values that can create an issue when used with RFC 5764 as reserved, with a note in the IANA registry that ask to read the RFC-to-be to understand the problem.  If a new proposed ContentType codepoint will never ever be used in the context of RTCWeb, then it can be allocated in the reserved range.
",<56CA239F.6010107@acm.org>,petithug@acm.org,0.0,0,3,2016-02-21 13:52:47
6997,TLS 15+,155,202,Social,,-1,"Hi Dave and TLS WG,",<56D7076A.1020703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-02 16:31:54
6998,TLS 15+,155,325,"InformationProviding,InformationProviding",,-1,"
To my understanding the changes proposed by the
draft-ietf-avtcore-rfc5764-mux-fixes is not an issue if any TLS 1.3+
extension, i.e. any TLS extension that is not to be used in 1.0-1.2 can
safely be allocated in the reserved range as they will not be externally
visible. Such a simple motivation fulfil the coordination requirement as
I see it.",<56D7076A.1020703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-02 16:31:54
6999,TLS 15+,155,326,"ProposeAction,InformationProviding,ProposeAction",,-1,"
As the AVTCORE WG chair and document shepherd I will continue with a
publication request as soon as I done the paper work for it. If you have
any additional feedback on this, then please provide it now.",<56D7076A.1020703@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-02 16:31:54
7000,TLS 15+,155,480,"InformationProviding,InformationProviding",,-1,"Reserving large portions of other protocols number spaces is not a good way
to do things.   This will quickly become unworkable if other protocols
decide to do the same thing.  This type of behavior needs to be
discouraged.  There is no guarantee that the multiplexing scheme prompting
this registration request will work with TLS 1.3 or any future version of
TLS.
",<CAOgPGoB669zcdqMYXd0yD4Tkqx7yuj6dc0y1byv3bw1ZN_qv6Q@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-03-02 14:08:28
7001,TLS 15+,155,629,"Disagreement,NeutralResponse,InformationProviding,NeutralResponse",480,480,"
draft-ietf-avtcore-rfc5764-mux-fixes does not reserve large portions of the ContentType codepoints, RFC 5764 did.  The damage is already done as RFC 5764 is deployed as a component of RTCWeb.

This draft just put an emphasis on the fact that allocating ContentType codepoints in the ranges that *RFC5764* reserved can have consequences.
",<56D76716.1090506@acm.org>,petithug@acm.org,0.0,0,3,2016-03-02 15:20:06
7002,TLS 15+,155,657,"NeutralResponse,ProposeAction,Apologising,InformationProviding,ProposeAction,Apologising",629,629,"
I think that we can resolve this by saying this instead:

RFC 5764 describes a narrow use of DTLS that works as long as the
specific DTLS version used abides by the restrictions on the first
byte (the ones that mux-fixes wants to put in the TLS registry).  Any
extension or revision to DTLS that no causes DTLS to no longer meet
these constraints prevents that extension or version from being used
in the fashion RFC 5764 describes.

That means that DTLS 1.2 is safe.  Thus far.  DTLS 1.3 is also safe so
far, though we're a lot further from done there[3].

I'm sorry that I didn't see this option before; I figured that with
content type encryption in TLS 1.3, we wouldn't need those code
points.  However, Joe is right to protest the incursion onto sovereign
territory.

[3]  I actually hope that we can change DTLS 1.3 so that it won't mux
properly.  That will have a size benefit that should outweigh the cost
of having to rev 5764 for 1.3.",<CABkgnnUxeQbVfaWuGwg=5qk-0Urky5uFA_2GxGkKYFKQu=AZfA@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-03-03 09:48:00
7003,TLS 15+,155,732,"ContextSetting,StateDecision,InformationProviding,ProposeAction,StateDecision",,-1,"Hi,

To be clear I will not continue with a publication request while we are
having a discussion. I hope we can resolve this with an agreement on how
to proceed.
",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7004,TLS 15+,155,734,InformationProviding,480,480,"of the ContentType codepoints, RFC 5764 did. The damage is already done
as RFC 5764 is deployed as a component of RTCWeb.",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7005,TLS 15+,155,736,"ClarificationElicitation,UnderstandingNegative,Question,UnderstandingNegative,Apologising",657,657,"
Sorry, I am not certain I understand what you suggest. Do you want the
above text in RFC 5764, or as a comment in the TLS content type
registry, or what?
",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7006,TLS 15+,155,738,"NeutralResponse,InformationProviding,NeutralResponse",657,657,"
It is ""Thus far"" comment for DTLS 1.2 that is one reason that we want to
put in sufficient warnings into the TLS content type registry. And
clearly DTLS 1.3 will also have to take into account this. It is one out
of many usages of DTLS, but it is not insignificant amount of usage that
relies on the possibility to separate the protocols on first byte.
",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7007,TLS 15+,155,740,"NeutralResponse,InformationProviding,NeutralResponse",657,657,"
I want to make it clear that the goal is to have something that is
mutually agreeable here. The situation with the multiplexing is already
existing and widely deployed, whatever one thinks of it. The goal with
the update is to clarify the situation, resolve uncertainties and points
of confusion, as well as reducing the risk for future issues due to
ignorance.
",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7008,TLS 15+,155,742,"NeutralResponse,ProposeAction,InformationProviding",657,657,"
I really hope before that decision is taken that one analyse and propose
a solution for how to handle the need for multiplexing so that
discussion has happened.
",<56D85763.7070000@ericsson.com>,magnus.westerlund@ericsson.com,0.0,0,0,2016-03-03 16:25:23
7009,TLS 15+,155,775,"NeutralResponse,ContextSetting,ProposeAction,InformationProviding,ProposeAction",657,657,"
I thought about this a bit...

It occurs to me that a way to compress most headers to 2 bytes (from
present 5) is:

Unencrypted: 16 03 01 xx xx or 15 03 01 xx xx
Encrypted: 80|xx xx

Where xx xx is the length bytes.

The unencrypted headers need to be kept for backward compatiblity.

The ranges don't overlap, since the first xx can be at most 0x41
(which occurs for maximum 16640 byte encrypted record payload),
so the first byte would be 0x80-0xC1, which doesn't overlap with
0x15 and 0x16 (which are used for unencrypted packets).

That would interfere with muxing however (requring at least
changing how muxing is done, e.g. by inserting a marker byte
for DTLS packets).
",<20160303164309.GA13882@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 18:43:09
7010,TLS 15+,155,776,InformationProviding,657,657,"
-Ilari",<20160303164309.GA13882@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 18:43:09
7011,TLS 15+,155,781,"ClarificationElicitation,Question",775,775,"
Even for a new protocol revision?",<d77f827469d748d68b8f58100a4c627c@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-03-03 16:44:30
7012,TLS 15+,155,806,"Answer,ProposeAction,InformationProviding,Answer",781,781,"
Well, actually, it might be possible to compress everything except
ClientHello headers. One should still avoid the 15 and 16 values (and
presumably also 17) if one does.

E.g.:

For ClientHello: 16 03 vv xx xx
For ServerHello: 3F+xx xx
For Alert on *Hello: 3E xx  (Alerts are short)
For encrypted message: 80|xx xx
",<20160303170442.GB13882@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 19:04:42
7013,TLS 15+,155,807,"ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction","781,806",781,"
(If one wanted to get fancy, one could even try to negotiate this via
vv byte (a'la: ""record version: TLS 1.3"").

-Ilari",<20160303170442.GB13882@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 19:04:42
7014,TLS 15+,155,818,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",806,806,"
ServerHello too, just to make it easy.  Might as well include
HelloRetryRequest at the same time, so that all unencrypted packets
have the same header.",<CABkgnnV4oEFDn1Q4FsbUNGtTjP99nnjyCOwRkefxaEYRFfvbDQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-03-04 08:38:05
7015,TLS 15+,155,846,"NeutralResponse,InformationProviding,NeutralResponse",480,480,"
Well, outside of some very exotic extensions (none are defined to date,
and I'm having problems even imagining what such things would actually
do), it would work in TLS 1.3 Editor's Draft (since it only ever uses
21, 22 and 23[1]).

Future versions of TLS are another matter...

And even if there was some extension to omit the version from record
header, it would still work (the demuxer would however need to be
aware of that extension).
",<20160302222216.GA12028@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 00:22:16
7016,TLS 15+,155,847,"ExtensionOfPrevious,InformationProviding","480,846",480,"
[1] For comparision, TLS 1.2 uses 21-23 and also 20 and in presence of
certain (infamous) extension, 24.
",<20160302222216.GA12028@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 00:22:16
7017,TLS 15+,155,848,InformationProviding,480,480,"
-Ilari",<20160302222216.GA12028@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-03 00:22:16
7018,TLS 15+,155,893,"Agreement,NeutralResponse,InformationProviding,Agreement",847,847,"[Joe] Yes you are correct that the current draft includes a dummy header,
however the working group has discussed not using the dummy header which I
believe would cause problems for the multiplexing scheme because the
location where the contentType was would no longer contain the contentType.
It seems unlikely that we would make this change at this point, however
there are some folks who would like to get rid of the dummy header.
",<CAOgPGoBRqcUq4ivb+y5hhpm7gm1QAJkKs9ByQ0X2ascax_psxg@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-03-02 14:43:59
7019,TLS 15+,155,895,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",25,-1,I think this draft needs WGLC in all the WGs where it limits the existing code space.,<C87BA1C8-7ADE-4777-BE9D-F8680C00C4B0@cisco.com>,fluffy@cisco.com,0.0,0,0,2016-03-15 19:40:19
7020,TLS 15+,155,997,"NeutralResponse,InformationProviding,NeutralResponse",895,895,"
Somehow hit send trying to move this from one computer to another before finishing it. But what I was going on to say was ...

but that was happening and given the current rate of usage of TLS, this did not seem like a restriction that was likely to significantly limit TLS future extensions.
",<4CA82554-6060-4B66-8B29-7D12E65EAA00@cisco.com>,fluffy@cisco.com,0.0,0,0,2016-03-15 19:44:11
7021,TLS 15+,157,14,ContextSetting,,-1,> Header,<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7022,TLS 15+,157,22,ContextSetting,,-1,> 1. (Introduction),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7023,TLS 15+,157,26,ContextSetting,,-1,> 1.2. (Major Differences from TLS 1.2),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7024,TLS 15+,157,31,ContextSetting,,-1,> 4.9.1. (Digital Signing),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7025,TLS 15+,157,44,ContextSetting,,-1,> 4.9.2. (Authenticated Encryption with Additional Data (AEAD)),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7026,TLS 15+,157,49,ContextSetting,,-1,> 5. (The TLS Record Protocol),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7027,TLS 15+,157,57,ContextSetting,,-1,> 5.2.1. (Fragmentation),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7028,TLS 15+,157,63,ContextSetting,,-1,> 5.2.2. (Record Payload Protection),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7029,TLS 15+,157,73,ContextSetting,,-1,> 6. (The TLS Handshaking Protocols),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7030,TLS 15+,157,78,ContextSetting,,-1,> 6.1.1. (Closure Alerts),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7031,TLS 15+,157,83,ContextSetting,,-1,> 6.1.2. (Error Alerts),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7032,TLS 15+,157,88,ContextSetting,,-1,> 6.2.1. (Incorrect DHE Share),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7033,TLS 15+,157,104,ContextSetting,,-1,> 6.2.2. (Cached Server Configuration),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7034,TLS 15+,157,113,ContextSetting,,-1,> 6.2.3. (Zero-RTT Exchange),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7035,TLS 15+,157,128,ContextSetting,,-1,> 6.3. (Handshake Protocol),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7036,TLS 15+,157,132,ContextSetting,,-1,> 6.3.1.1. (Client Hello),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7037,TLS 15+,157,144,ContextSetting,,-1,> 6.3.1.2. (Server Hello),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7038,TLS 15+,157,153,ContextSetting,,-1,> 6.3.1.3. (Hello Retry Request),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7039,TLS 15+,157,172,ContextSetting,,-1,> 6.3.1.4. (Hello Extensions),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7040,TLS 15+,157,203,ContextSetting,,-1,> 6.3.1.4.1. (Signature Algorithms),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7041,TLS 15+,157,222,ContextSetting,,-1,> 6.3.1.4.2. (Negotiated Groups),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7042,TLS 15+,157,243,ContextSetting,,-1,> 6.3.1.5.4. (Pre-Shared Key Extension),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7043,TLS 15+,157,254,ContextSetting,,-1,> 6.3.1.5.5. (Early Data Indication),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7044,TLS 15+,157,294,ContextSetting,,-1,> 6.3.2. (Server Key Share),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7045,TLS 15+,157,299,ContextSetting,,-1,> 6.3.3. (Encrypted Extensions),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7046,TLS 15+,157,327,ContextSetting,,-1,> 6.3.6. (Server Configuration),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7047,TLS 15+,157,338,ContextSetting,,-1,> 6.3.7. (Server Certificate Verify),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7048,TLS 15+,157,348,ContextSetting,,-1,> 6.3.9. (Client Certificate),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7049,TLS 15+,157,355,ContextSetting,,-1,> 6.3.10. (Client Certificate Verify),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7050,TLS 15+,157,360,ContextSetting,,-1,> 6.3.11. (New Session Ticket Message),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7051,TLS 15+,157,366,ContextSetting,,-1,> 7.2.3. (Elliptic Curve Diffie-Hellman),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7052,TLS 15+,157,372,ContextSetting,,-1,> 11. (IANA Considerations),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7053,TLS 15+,157,381,ContextSetting,,-1,> A.4. (The Cipher Suite),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7054,TLS 15+,157,386,ContextSetting,,-1,> C.1. (Random Number Generation and Seeding),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7055,TLS 15+,157,394,ContextSetting,,-1,> C.4. (Implementation Pitfalls),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7056,TLS 15+,157,403,ContextSetting,,-1,> E.1.1. (Authentication and Key Exchange),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7057,TLS 15+,157,414,ContextSetting,,-1,> E.1.2. (Version Rollback Attacks),<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7058,TLS 15+,157,421,"InformationProviding,ProposeAction,StateDecision,ContextSetting",,-1,"Let's review: draft-ietf-tls-tls13-07

This is abridged version of mail I sent earlier, but was too large for
the list due to its sheer size.

(Note: I omitted some stuff I saw recently discussed (e.g. pruning
unused crypto algorithms) or I remember discussed. I didn't explicitly
check issue list when doing this).

Note: The issue list could use some cleanup. It has multiple duplicate
issues (especially about fixing THS) and also some issues that no longer
look applicable.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7059,TLS 15+,157,422,"Question,ClarificationElicitation,ProposeAction,Question,InformationProviding",,-1,"
Isn't 4346 already obsoleted by 5246, which this document also obsoletes?

4366 seems to be jointly obsoleted by 5246 and 6066.

5246 and 5077 are not in numerical order, whereas the rest are.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7060,TLS 15+,157,423,"Question,ProposeAction,ProposeAction",,-1,"
DSA should be replaced by ECDSA (DSA is pretty much obsolete)?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7061,TLS 15+,157,424,"ClarificationElicitation,InformationProviding,Question,InformationProviding",,-1,"
Is this meant to be changelog or list of changes? It in current form
looks more like a changelog.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7062,TLS 15+,157,425,"Question,InformationProviding,Question,InformationProviding",,-1,"
I think someone wanted randoms back here in order to support privilege
separation (which I think is important to support, I consider it much
more important than being ""HSM friendly"")?

Reading what current draft of 4492-bis says, the hash function used is
determined by signature_algorithms (or presumably the corresponding
mechanism in CertificateRequest for client certs).

Also, to my knowledge, there is no mechanism to indicate in ECDSA
certificate what hash algorithms are allowed.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7063,TLS 15+,157,426,"InformationProviding,ProposeAction,InformationProviding",,-1,"
The example looks like it belongs to section 4.9.1, as it is about
signatures, not AEAD construct.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7064,TLS 15+,157,427,"Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Documenting the security properties of TLS would be useful...

The lack of record length hiding may be problematic in protocols that
have no place for cover traffic (e.g. can DNS requests contain padding,
DPRIVE WG is apparently planning on putting DNS into (D)TLS?).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7065,TLS 15+,157,428,"InformationProviding,InformationProviding",,-1,"
Zero-length fragments of application data are very much visible in
ciphertext (unless record padding is added), so those are not currently
useful as traffic analysis countermeasure.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7066,TLS 15+,157,429,"InformationProviding,InformationProviding,ProposeAction",,-1,"
There looks to be latter limits that restrict ciphertext size to 2^14
+1024, which is smaller than 2^14+2048 here (but those limits might be
tightened further).

As for amount of expansion needed for length-hiding, I think that being
able to represent 16384-byte record with no padding would be enough
(since record sizes cap at 16384 bytes anyway).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7067,TLS 15+,157,430,"Question,Question",,-1,"
Are encryption keys, finished value (tls-unique) and exporter secret
part of session or not?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7068,TLS 15+,157,431,"InformationProviding,InformationProviding",,-1,"
The semantics of closure alerts seem incompatible with half-closes,
which some protocols actually use.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7069,TLS 15+,157,432,"Question,ProposeAction",,-1,"
Could use another example of warning alert, now that no_renegotiation
is not a warning anymore?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7070,TLS 15+,157,433,"Question,InformationProviding,ProposeAction,InformationProviding,UnderstandingNegative",,-1,"
EncryptedExtensions is marked optional in Figure 2, but not Figure 1?

The relationship between session hash and handshake restarts seems
like a hairy problem.

Also, I figured out a downgrade attack that works against careless
_server_ (not requiring client to do anything else than have weak
crypto enabled). Continuing hashes looks to block that attack.

It involves attacker sending ClientHello with arbitrary parameters
that triggers a retry (very easy to trigger a retry), eating the
reply, followed by sending client's original ClientHello. That
could trigger crypto downgrade in some badly made servers.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7071,TLS 15+,157,434,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Issue #184 manifests here too. I think both accepting and provoding
configuration in the same handshake is sensible (key rollover), and
later the draft talks about exactly that case.

Also, maybe note that provoding the message does not alter the
configuration hash (even if there is no existing one) could be useful.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7072,TLS 15+,157,435,"Question,InformationProviding,Question,InformationProviding",,-1,"
No EncryptedExtensions?

How would the server know when 0-RTT data ended, so it could send its
ServerHello?

Also, how is the 0-RTT data bound to session if accepted, or is there
a security analysis for leaving this binding out?

Can anyone expand on the note about impersonation with compromised
server key? I can't offhand figure out how attacker can calculate
server-side ES (without having also compromised (possibly former)
client or (current) server exchange key).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7073,TLS 15+,157,436,"Question,Question",,-1,"
Missing encrypted_extensions (it is a handshake message, right)?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7074,TLS 15+,157,437,"Question,ClarificationElicitation,InformationProviding,Question,InformationProviding",,-1,"
The non-match case gives HelloRetryRequest, not ServerHello, right?

s/should/SHOULD/ in description of session_id?

I don't think client extensions are optional anymore in TLS 1.3 (being
required for successful handshake.

Also, TLS 1.2 servers that care about security (are there actually any?)
already require extensions for successful handshake.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7075,TLS 15+,157,438,"InformationProviding,InformationProviding",,-1,"
Well, at least it wouldn't be backward compatiblity hazard to remove
session_id_len, since it comes after server version.

Note: Unlike client extensions, I think server extensions might be empty
in TLS 1.3 handshake (since extensions required for GDHE_CERT type key
exchanges are not replied to by server).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7076,TLS 15+,157,439,"Question,InformationProviding,Disagreement,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
server_version and cipher_suite in HRR seem bit dangerous to me. If
HashAlgorithm contained all PRF hashes (currently it does), one could
use that to designate PRF hash.

Merging DTLS cookies might be a good idea. However, then group mismatch
wouldn't be the only source of failure (which needs some text adjustment
about the selected_group check).

s/use for/add to/ in description of selected_group?

What happens if Ciphersuite and NamedGroup don't match between HRR
and SH/SKS? I expect there be clients that don't check, no matter if it
is MUST or not.

Heck, I recently heard of servers that only partially(!!!) check client
Finished (or omit the check entierely).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7077,TLS 15+,157,440,"Question,ClarificationElicitation,InformationProviding,Question,ProposeAction",,-1,"
supported_groups is 10, right?

Also, for matter of protocol testing, could be useful to give some
free values to temporary squat on for extensions that aren't stable
yet.

The restriction on extensions appearing also holds for
EncryptedExtensions, not just SH or HRR.

It could also be useful to deprecate some extensions (client MAY send
for backwards compat, server MUST NOT select).

Some candidates:
- truncated_hmac: Block modes have been removed.
- encrypt_then_mac: Block modes have been removed.
- extended_master_secret: The THS bug is fixed anyway.
- sessionticket TLS: Session tickets are deprecated.
- renegotiation_info: The renego bug is fixed anyway.

The interaction of some extensions with PSK-based resumption isn't
that clear. This is further complicated by the fact that PSK can also
start a new session.

Reference to ""error alerts"". Should that be ""fatal alerts""?

The part about being careful with extensions modifying handshake
presumably also goes for functions that are sometimes used for
authentication like TLS-EXPORTER or TLS-UNIQUE.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7078,TLS 15+,157,441,"Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Anonymous should be removed. It is apparently not used (there is reference
to another section saying that section uses it, but I can't find in that
section how it is actually used).

Description of signature refers to 6.3,2, which is about SKS, which does
not seem to have anything to do with signatures (leftover from TLS 1.2?)

Then in description of the extensions there is reference to 6.3.4 and
6.3.2. 6.3.4 looks relevant, 6.3.2. doesn't look so.

Also, making signature_algorithms mandatory would allow dropping the
backward compatiblity special cases from here.

There is text that talks about ""offering prior versions"". Does that
refer to insecure version downgrade (I don't suppose TLS 1.1 maximum
client would care about what TLS 1.3 spec says).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7079,TLS 15+,157,442,"InformationProviding,ProposeAction,ProposeAction",,-1,"
One chould add Curve25519 and Curve448, and the corresponding
signature groups (signature groups when CFRG signatures become
stable).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7080,TLS 15+,157,443,ContextSetting,,-1,"> 6.3.1.5.1. (Diffie-Hellman Parameters)
> 6.3.1.5.2. (ECDHE Parameters)",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7081,TLS 15+,157,444,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
Drop the wrappers? Then DHE and ECDHE could be unified (the unification
is currently blocked by different lengths of the length field).

The point description might make it more clear that encodings are per-
curve (altough most curves use X9.62).

Does the note about only single point format apply to signatures too
(if so, ec_point_formats could be deprecated).

Regarding CFRG curves, the current draft (for TLS 1.2) specifies use
of the native point format (32/56 octets) as if it was uncompressed.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7082,TLS 15+,157,445,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
Client SHOULD offer at most two PSK identities (one for DH-PSK,
the other for pure-PSK)?

This would imply that one can't resume pure-PSK sessions, but that
does not look to be useful anyway.

Also, could be useful to state that the PSK identity hint from
previous versions has been deprecated.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7083,TLS 15+,157,446,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
s/MUST not/MUST NOT/ in description of early_data with client auth?

Also, I would say that 0-RTT data with 0-RTT auth is more dangerous than
0-RTT data with 1-RTT auth (for reasons mentioned earlier in the draft).

Eeh, the rule for detecting end of 0RTT data, isn't the next client
handshake message from the next flight at least in some cases (and
waiting would obviously deadlock)?

Again, how is binding of early handshake messages done (or security
analysis showing this unnecressary)?

Client receiving rejection knows that auth failed and data failed, it
might try to fix things up in its next flight.

As for what to sign for client auth, the ClientHello and Certificate
(at least)? One thing to note is that if verify contains randoms, then
server_random isn't available.

Regarding finished, isn't Finished in second flight? Or is this another
client Finished?

Regarding cryptographic parameter set, I think one better prepare for
failure (there are multiple causes of server failing to compute keys or
decrypt data).

Also, how does known_configuration interact with PSK (other than
configurations seemingly not being usable with PSK)?

Also, the record protection used for early handshake messages should be
indicated.

I think there are basically two things to signal for 0RTT:
- What key material is used (either by PSK ID or configuration ID)
- What record protection (and KDF to derive keys) is used?

Tying the latter to client offered ciphersuites is probably not wanted.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7084,TLS 15+,157,447,"Question,InformationProviding,ProposeAction,ProposeAction",,-1,"
Add that connection will be rekeyed immediately after this message, and
that it MUST be the last message in record it is in?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7085,TLS 15+,157,448,"Question,ProposeAction,Question,InformationProviding,ContextSetting,ProposeAction",,-1,"
Some of the figures have this as mandatory, some optional. Which is it?

Yeah, would be good to have explicit list of what goes to SH, and what
goes to EE.

Also, the list is affected by #184, as some extensions introduce extra
messages (esp. status_request{,_v2} and signed_certificate_timestamp).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7086,TLS 15+,157,449,ContextSetting,,-1,"> 6.3.4. (Server Certificate)
>       The certificate MUST be appropriate for the negotiated cipher
>       suite's key exchange algorithm and any negotiated extensions.",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7087,TLS 15+,157,450,"Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
If signature_algorithms is mandatory, this would then key to that for
signature algorithm, not ciphersuites (and even if it isn't, it would
then key to its fallback default).

Could change example of alternative certificate formats to RFC7250 (it
seems better designed than RFC5081).

Doesn't TLS 1.3 always use the certificate for signing, with indicated
algorithm (which obviously needs to be supported by peer)? Wouldn't it
make more sense to talk about signature algorithms instead of key
exchange algorithms. (Unless some key exchange that uses non-signing
certificates is added).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7088,TLS 15+,157,451,"Question,InformationProviding,ProposeAction,Question,ProposeAction",,-1,"
Use TTL instead of of explicit time for expiration, as broken clocks
are abound (also, just 32-bit field that only goes up to 2106 or so)?

Also, considering the dangers of configuration, it might be appropriate
to have other permission flags (especially client and server auth) too?

Also, Could be useful for client to know what ciphers it can use for
0-RTT data?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7089,TLS 15+,157,452,"Question,InformationProviding,ProposeAction,Question,ProposeAction",,-1,"
Should PRF hash designation be added in order to avoid attacks from
weak PRF hashes?

I think note about checking signature algorithm against ciphersuite
should be removed.

Also, with regards to complications of DSA, just dump it? :-)
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7090,TLS 15+,157,453,"Question,InformationProviding,ProposeAction,Question,ProposeAction",,-1,"Doesn't CertificateRequest override algorithms anyway (and CR isn't an
extension)?

Again, could use RFC7250 instead of RFC5081 as an example?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7091,TLS 15+,157,454,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Similar problems as in DSA for server auth. And missing identifier
for PRF too.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7092,TLS 15+,157,455,"Question,Question",,-1,"
Eh, if server starts transmitting immediately without waiting for
client Finished (as is permitted for case where 1-RTT client auth
is not performed), it can't resume the session?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7093,TLS 15+,157,456,"ProposeAction,ProposeAction",,-1,"
Probably needs different description for Curve25519 and Curve448.
Those are functions that take in octet strings and output octet strings
(32 or 56 bytes).
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7094,TLS 15+,157,457,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Yeah, looks to need a rewrite. Doesn't register the new stuff, and
furthermore has problems like:

- signature_algorithms is already defined by RFC5246.
- SignatureAlgorithm registry is already defined.
- HashAlgorithm registry is already defined.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7095,TLS 15+,157,458,"InformationProviding,ProposeAction,ProposeAction",,-1,"
Probably remove note about 001C and 001D, since lots of ciphersuites are
now reserved to avoid collisions with old ones.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7096,TLS 15+,157,459,"Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"
Replace SHA-1 with SHA-256?

The example is completely obsolete. Any sort of modern PCs have much
faster timers (some reaching multi-GHz rates) and one really should use
Operating System for (seeding) random numbers.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7097,TLS 15+,157,460,"Question,ProposeAction,Question,ProposeAction",,-1,"
- Do you handle required handshake messages being missing or handshake
messages being in wrong order properly (i.e. terminate the connection)?

Also, ECDSA signing operations need timing protection.

s/DSA/ECDSA/ in seeding? And shouldn't k be determinstically generated?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7098,TLS 15+,157,461,"InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
Would be useful to list what can be used to authenticate peers, in
practicular, are the following valid:

- Signing TLS-Unique value?
- Signing value from TLS-EXPORTER?

Both have been seen in the wild, so these better be secure ways. This
also goes for ""anonymous"" key exchange.
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7099,TLS 15+,157,462,"Question,Question",,-1,"
Is the note about PKCS #1 block type 2 about RSA key exchange, which is
deprecated?
",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7100,TLS 15+,157,463,InformationProviding,,-1,"
-Ilari",<20150715141523.GA13669@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-15 17:15:23
7101,TLS 15+,157,577,"InformationProviding,NeutralResponse,ContextSetting",421,421,"
Eric obviously does all the heavy lifting here, but I can reply to a
few bits in the areas I've touched.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7102,TLS 15+,157,579,"InformationProviding,StateDecision,NeutralResponse",421,421,"
Some of these already do have issues/PRs so I'll cite them here along
with the bits I have fixed in my WIP branch for the discussions we've
been having about alerts and certs.

I have quite a few PRs pending review by ekr, at the moment. Note that
PR 195 is under my name, but is mostly Sean Turner's commits. It's large
and was bitrotted severely over time, so ekr and I had to clean it up.
(the original is PR 152 with bits from 150)
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7103,TLS 15+,157,581,"InformationProviding,ContextSetting,Answer,Answer,NeutralResponse,ProposeAction",422,422,"
I have a pending PR that fixes this:
https://github.com/tlswg/tls13-spec/pull/198/files
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7104,TLS 15+,157,583,"InformationProviding,ProposeAction,Answer,Answer,ProposeAction",424,424,"
It is just a changelog for now. Will definitely need to be replaced by a
summary for final RFC.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7105,TLS 15+,157,585,"InformationProviding,NeutralResponse,NeutralResponse",429,429,"
https://github.com/tlswg/tls13-spec/issues/55
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7106,TLS 15+,157,587,"InformationProviding,StateDecision,NeutralResponse,StateDecision",437,437,"
I'll address this in my WIP branch for changes we've been discussing on-list.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7107,TLS 15+,157,589,"InformationProviding,ProposeAction,NeutralResponse",438,438,"
There's a comment in there from ekr asking if we should remove. The answer
is a clear yes, seeing as backwards compatibility is already gone here.

https://tools.ietf.org/html/rfc5246#section-7.4.1.3

The compression field was already dropped, so there's no point in having a
placeholder for this unless a new placeholder is added for that too.

This message does not need to maintain backwards compatibility, though.
It can never be sent to a pre-TLS 1.3 client, as the client has to offer 1.3+
for the server to negotiate it. A note that this structure has changed since
1.2 is probably warranted for servers that want to also know how to send
a proper one for backwards compatibility, but modifying it here isn't helpful.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7108,TLS 15+,157,591,"InformationProviding,NeutralResponse,NeutralResponse",440,440,"
I have bits for both of these on my WIP branch. (not in any of my PRs pending
ekr's review, yet)
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7109,TLS 15+,157,593,"InformationProviding,Answer,StateDecision,Answer,StateDecision",446,446,"
I fixed that in my WIP for all the alert and certs changes we've been
discussing on list.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7110,TLS 15+,157,595,"InformationProviding,NeutralResponse,NeutralResponse,StateDecision",458,458,"
I have a pending PR that updates the whole section.
This bit is already dropped.

https://github.com/tlswg/tls13-spec/pull/180/files
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7111,TLS 15+,157,597,"InformationProviding,StateDecision,Agreement,StateDecision",459,459,"
Done in my WIP along with rest of SHA-1 deprecation,
as was discussed very recently.
",<201507151227.27894.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-15 12:27:27
7112,TLS 15+,157,1715,"InformationProviding,Thanking,Thanking",,-1,"Ilari,

Thanks for your detailed comments.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7113,TLS 15+,157,1717,"Answer,StateDecision,Answer",422,422,"
This was updated in a recent PR by Dave Garrett.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7114,TLS 15+,157,1719,"InformationProviding,Answer,Agreement,Agreement,StateDecision",423,423,"
Yes, I can do that. I'm happy to remove DSA entirely if the
chairs declare consensus on this.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7115,TLS 15+,157,1721,"InformationProviding,Answer,Answer,ProposeAction",424,424,"
It's just a changelog. I'll eventually make it a real list in the
final version.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7116,TLS 15+,157,1723,"InformationProviding,Answer,ProposeAction,NeutralResponse,ProposeAction",425,425,"
I think it was Nikos. Nikos, if you'd like to submit a PR that
we can discuss, that would be great.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7117,TLS 15+,157,1725,"InformationProviding,Answer,NeutralResponse",425,425,"
Well, it's negotiated by that, but indicated in the message.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7118,TLS 15+,157,1727,"InformationProviding,Agreement,Agreement",425,425,"
I am also unaware of one.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7119,TLS 15+,157,1729,"InformationProviding,Agreement,ProposeAction,Agreement,StateDecision",426,426,"
Oops. Yeah, I'll fix that.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7120,TLS 15+,157,1731,"Agreement,ProposeAction,Agreement,StateDecision",427,427,"
Agreed. I intend to rewrite the entire security analysis soon.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7121,TLS 15+,157,1733,"Agreement,Agreement,NeutralResponse",428,428,"
Agreed. We have PRs for adding padding, but they haven't been merged
yet because I wanted to get key management squared away.

See: https://github.com/tlswg/tls13-spec/pull/147
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7122,TLS 15+,157,1735,"Agreement,ProposeAction,Agreement,NeutralResponse,ProposeAction",429,429,"
Yes. As you can see there is an open issue marker here. If you wanted
to submit a PR, that would be great.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7123,TLS 15+,157,1737,"InformationProviding,Answer,StateDecision,NeutralResponse,StateDecision",430,430,"
I'm planning to remove/rewrite this entire section, as I don't think
it's useful.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7124,TLS 15+,157,1739,"Question,InformationProviding,Question,NeutralResponse",431,431,"
True, but this has been in TLS since the beginning, so there presumably
should not be any TLS-using apps which depend on it. Do you think this
is a feature which we should add.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7125,TLS 15+,157,1741,"InformationProviding,Answer,ProposeAction",432,432,"
Will see what I can find.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7126,TLS 15+,157,1743,"InformationProviding,Answer,Thanking,NeutralResponse,Thanking",433,433,"
It's not optional. I just got confused. Thanks.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7127,TLS 15+,157,1745,"Question,InformationProviding,ClarificationElicitation,UnderstandingNegative",433,433,"
Do you think you could walk through this in more detail? I'm having
trouble understanding the issue.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7128,TLS 15+,157,1747,"Agreement,Agreement",434,434,"
I agree.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7129,TLS 15+,157,1749,"Agreement,StateDecision,Agreement",434,434,"
Agreed. Will see what I can do.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7130,TLS 15+,157,1751,"InformationProviding,Answer,Answer",435,435,"
Pilot error.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7131,TLS 15+,157,1753,"Question,Answer,ClarificationElicitation,NeutralResponse",435,435,"
Is there a reason it needs to know? It needs to be able to distinguish
the 0-RTT from the 1-RTT data, but the Finished allows that.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7132,TLS 15+,157,1755,"Question,ClarificationElicitation",435,435,"
Can you say more about what you mean here?
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7133,TLS 15+,157,1757,"StateDecision,Answer,StateDecision",435,435,"
Will see what I can do.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7134,TLS 15+,157,1759,"InformationProviding,Answer,Answer",436,436,"
Yeah, pilot error.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7135,TLS 15+,157,1761,Answer,437,437,"
Yes.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7136,TLS 15+,157,1763,"Agreement,ProposeAction,Agreement,ProposeAction",437,437,"
I agree. We should mandate these.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7137,TLS 15+,157,1765,"InformationProviding,Agreement,Agreement",438,438,"
I'm sold.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7138,TLS 15+,157,1767,"InformationProviding,Answer,ProposeAction,NeutralResponse,ProposeAction",439,439,"
I think we only need the minimum information, so maybe we could skip
these...
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7139,TLS 15+,157,1769,"Answer,StateDecision,Agreement,StateDecision,Agreement,StateDecision",439,439,"
Yes, I can fix this.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7140,TLS 15+,157,1770,"InformationProviding,Answer,Thanking,Agreement,Thanking",439,439,"
Thanks. Yes.
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7141,TLS 15+,157,1772,"ClarificationElicitation,InformationProviding,Answer,Question,Answer",439,439,"
Depends on if we continue the hash. If not, I would imagine that the
handshake
succeeds. With that said, this is intended to be a client-side enforcement
of correct server behavior. Since the client's offered parameters are
the same as the ones it offered before (with just a new key in
ClientKeyShare)
the server should be picking the same parameters as before, no?
",<CABcZeBO0PCB43Mtkd9FL6nt4o4sRaWk3roZTz66rbdRzF7wSAA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-15 14:29:09
7142,TLS 15+,157,2141,"InformationProviding,ContextSetting",,-1,"
Firstly, the 0-RTT binding and how does server know it ended thing:

Assume that if 0-RTT is accepted, the contents affect crypto keys,
channel binding values, finished messages, etc...
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7143,TLS 15+,157,2142,"Question,InformationProviding,ExtensionOfPrevious,Question",,-1,"data before sending its own Finished. But the server would need
a non-0RTT message from client to know it has ended. Unfortunately,
the next client message after 0RTT is client Finished, and that is
waiting on server Finished. Which is obvious deadlock.

In contrast, assume the assumption is not true, that is, contents
of accepted 0-RTT do not affect crypto keys, etc. Where is the
security analysis for that (e.g. with regards to modifying 0-RTT
data)?
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7144,TLS 15+,157,2144,"InformationProviding,Answer,ProposeAction,Answer,NeutralResponse",1739,1739,"
Maybe not, the protocols using half-closes are pretty obscure (I think
I have run into only one).

(I did run such over TLS, possibly due to TLS library allowing breaking
of TLS specifications here, but it sucked for various reasons, and I
eventually ended up replacing the encryption layer. This was years
ago).

But there's also ""stunnel"" which is intended for tuneling protocols
over TLS (I did try that too, it sucked even worse). And if protocol
uses half-closes, those better work there.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7145,TLS 15+,157,2146,"InformationProviding,Answer,Answer",1745,1745,"
Assume server is bit poorly coded: It latches cryptographic parameters
(ciphersuite, exchange group, etc...) on first ClientHello.

Then attacker sending its own ClientHello that elicts HelloRetryRequest,
eating that and then forwarding real ClientHello might result the
server choosing weaker algorithms than if real ClientHello got sent
directly.

And unless handshake hash covers earlier tries, the handshake hash
would still match on both sides (since the attacker-sent message and
reply to it have been reset away from hash on server side, and
client side never knows about the attacker), despite the fact that
connection has been downgraded.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7146,TLS 15+,157,2148,"InformationProviding,NeutralResponse",1749,1749,"
Well, this was more me being interested on how such attack would
work.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7147,TLS 15+,157,2150,"InformationProviding,NeutralResponse,NeutralResponse",1765,1765,"
However, that would change ServerHello parsing.

Thinking about it, if one decides to be careful with message parsing, one
needs to assign all new/modified TLS 1.3 handshake messages new IDs.

Currently there is only one offending message type w.r.t. that: 14, which
is server_configuration in 1.3 and server_hello_done in 1.2.

Some other messages share IDs, but I think those are compatible (even
CertificateVerify, as it is just one digital signature in both).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7148,TLS 15+,157,2152,"InformationProviding,Answer,NeutralResponse",1772,1772,"
Unless there is attacker interfering...
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7149,TLS 15+,157,2154,"Question,InformationProviding,Answer,NeutralResponse,ProposeAction",1772,1772,"
Might be good idea to stay good bit away from existing registrations,
at least in forward direction, in case a new extension comes along.

Maybe starting from 13000? And maybe something like:

""early_data(TBD), //For testing: 13000"", and similarly for others
(except supported_groups, as that already has a codepoint).

(The language might need some improvement).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7150,TLS 15+,157,2156,"InformationProviding,NeutralResponse,NeutralResponse","1772,2154",1772,"
Well, extensions that don't respect the client advertisment restriction
seem to fall into two classes:

- Truly advisory extensions. Can't change key computations nor introduce
messages. These are obvious candidates for EncryptedExtensions.
- Extended fatal alerts: Extensions that contain additional data about
rejected connection, since fatal alerts themselves can't seem to
contain extra data, and sending such thing to client not supporting
one isn't bad, since the connection already can't work. Obviously
go to ServerHello.

Can't produce examples of first. Crazy idea for second would be
""captive portal"" indication (note, some captive portals have whitelist
of HTTPS sites they allow access to).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7151,TLS 15+,157,2158,"InformationProviding,NeutralResponse",,1772,"
I don't think there are any extensions currently that affect those
directly (and even the indirect ones are to be deprecated anyway).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7152,TLS 15+,157,2160,"Question,InformationProviding,Question,NeutralResponse",,1772,"
Anonymous is meant for program-internal placeholder for DH_anon? I
can't find any place it is used on the wire.

And sharing ciphersuites for DH_CERT and DH_ANON is kinda dangerous.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7153,TLS 15+,157,2162,"Question,ProposeAction,Question,NeutralResponse",1772,1772,"
Should it be rephrased in terms of MUST NOT offer unless offering at least
TLS 1.2 or something like that?
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7154,TLS 15+,157,2164,"InformationProviding,NeutralResponse",,1772,"
There was brief exchange (not finished) if ECDH and ECSIG grops should
be the same or not.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7155,TLS 15+,157,2166,"InformationProviding,NeutralResponse,NeutralResponse",,1772,"
Well, I think offering more than two identities (potential resumption
of DH-PSK case) is pretty exotic.

But there might be cases where more than two is usable.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7156,TLS 15+,157,2168,"InformationProviding,NeutralResponse",,1772,"
That was in reference to restriction that if client auth is desried
with 0-RTT data, it has to be 0-RTT too.

And the danger is from acting on ""authenticated"" data (it is replayable
after all).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7157,TLS 15+,157,2170,"Question,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting",,1772,"
It was regarding this:

""    -  Whether we really want the Finished to not include the server's
data at all.""

The diagram has Finished be in 2nd flight, so it should include
server's data?
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7158,TLS 15+,157,2172,"InformationProviding,NeutralResponse,Answer",,1772,"
Well:
- Client expecting resumption, which doesn't pan out.
- Server having ECC certificate, and wanting to save bit of CPU under
load (ECDH + sign is cheaper than 2xECDH.).
- Client using configuration that has been revoked by server for
some reason.
- Client trying to use ciphersuite server does not support.
- Client request being routed to new server that doesn't have the
config keys.

All those cause decrypt failure. Some are pretty unlikely, some are
less so.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7159,TLS 15+,157,2174,"Question,Answer",1772,1772,"
How does the client know what record protection algorithms are valid
for 0RTT transmission for that server?
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7160,TLS 15+,157,2176,"InformationProviding,Answer",,1772,"
Configs can do both server auth (which can be quite dangerous) and 0-RTT,
which is much less so.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7161,TLS 15+,157,2178,"Question,InformationProviding,ProposeAction,Answer",1755,1772,"
If server or client supports some very weak PRF algorithm (they shouldn't,
but we know how practice looks like), could it be possible to forge
signatures by causing the weak hash value collide with one from strong
hash peer accepts?

Also known as ""hash firewalling"" (too bad most firewall schemes in
signatures are broken).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7162,TLS 15+,157,2180,"InformationProviding,NeutralResponse",,1772,"
And also EdDSA / CFRG-whatever. Reusing ciphersuites seems to
assume explicit signaling overrides ciphersuites.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7163,TLS 15+,157,2182,"InformationProviding,NeutralResponse",,1772,"
As datapoint, either the scan that was used as basis of that curve
pruning doesn't support DSA, or there are no servers that even have
DSA certs.

I think I heard some time back that there are only 4 (or some other very
small number) valid DSA SSL certs in the entiere public Internet.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7164,TLS 15+,157,2184,"InformationProviding,NeutralResponse",,1772,"
"" 6.3.9.  Client Certificate

This message conveys the client's certificate chain to the server;
the server will use it when verifying the CertificateVerify
message (when the client authentication is based on signing).  The
certificate MUST be appropriate for the negotiated cipher suite's
key exchange algorithm, and any negotiated extensions.""

I thought what algorithms are valid for client certificate is dictated
by CertificateRequest, and the same for every ciphersuite that allows
client certificates at all. And CertificateRequest is not an extension
nor message negotiated by extension.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7165,TLS 15+,157,2186,"InformationProviding,Answer",,1772,"
The same as for server certificate verify:
- DSA hash algorithms edge cases.
- Signing hash without indicating what hash it is from.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7166,TLS 15+,157,2188,"InformationProviding,NeutralResponse",,1772,"
Note that server needs to wait for client Finished before issuing
the ticket, or resumption can get screwy (even just with random network
failures).
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7167,TLS 15+,157,2190,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",,1772,"
Due to backward compatiblity, I think that value should be given as
TLS-Unique (i.e. change the definition for TLS 1.3).

TLS spec can freely change how it is is defined provoded that:
- Both sides agree about computation.
- It is auth-critical, so one needs to be careful not to allow
attacker to screw things by causing mismatched extensions or
somesuch.
",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7168,TLS 15+,157,2191,InformationProviding,,1772,"
-Ilari",<20150716150937.GA30989@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-16 18:09:38
7169,TLS 15+,157,2251,"InformationProviding,NeutralResponse",2150,2150,"
Server Key Exchange for DHE, ADH, SRP, etc. not to mention TLS1.1 vs TLS1.2

it's not uncommon to have different parsers for ""same"" message type
",<3965440.JCWWbo1jAa@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-07-24 17:22:08
7170,TLS 15+,157,2253,"Question,InformationProviding,ClarificationElicitation,NeutralResponse,ProposeAction",2174,2174,"
And how does the client know that the algorithms came from the server. We
should have a ""client MUST wait for the full handshake to finish before
recording this information"" or we will have a very nice cipher downgrade. Just
having it signed is likely not a good idea, as they may depend on ciphersuites
advertised by client.
",<3965440.JCWWbo1jAa@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-07-24 17:22:08
7171,TLS 15+,157,2255,"InformationProviding,NeutralResponse",2182,2182,"
that scan uses Mozilla trust roots and reports only trusted servers (to weed
out unmaintained ones out), Microsoft list is a bit bigger
",<3965440.JCWWbo1jAa@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2015-07-24 17:22:08
7172,TLS 15+,159,14,"ContextSetting,ProposeAction",,-1,"We seem to have good consensus on moving to RSA-PSS and away from PKCS-1.5
in TLS 1.3.  However, there is a problem that it may take some hardware
implementations some time to move to RSA-PSS.  After an off list discussion
with a few folks here is a proposal for moving forward.",<CAOgPGoD=AAFDUXN8VkOHwTMEUm+-qi548NsicoD=1yQKSu-sng@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-02-29 09:32:04
7173,TLS 15+,159,15,"ExtensionOfPrevious,ProposeAction",14,-1,"
We make RSA-PSS mandatory to implement (MUST implement instead of MUST
offer).   Clients can advertise support for PKCS-1.5 for backwards
compatibility in the transition period.
Please respond on the list on whether you think this is a reasonable way
forward or not.",<CAOgPGoD=AAFDUXN8VkOHwTMEUm+-qi548NsicoD=1yQKSu-sng@mail.gmail.com>,joe@salowey.net,0.0,1,3,2016-02-29 09:32:04
7174,TLS 15+,159,36,NeutralResponse,15,15,"
My instinct is to mandate PSS and let PKCS#1 rest in peace.

Viktor.",<20160229173944.GK12869@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2016-02-29 17:39:45
7175,TLS 15+,159,60,"InformationProviding,FollowOnComment",40,36,"> On 29 Feb 2016, at 7:39 PM, Viktor Dukhovni <ietf-dane@dukhovni.org> wrote:
> On Mon, Feb 29, 2016 at 09:32:04AM -0800, Joseph Salowey wrote:
>> We seem to have good consensus on moving to RSA-PSS and away from PKCS-1.5
>> in TLS 1.3.  However, there is a problem that it may take some hardware
>> implementations some time to move to RSA-PSS.  After an off list discussion
>> with a few folks here is a proposal for moving forward.
>> We make RSA-PSS mandatory to implement (MUST implement instead of MUST
>> offer).   Clients can advertise support for PKCS-1.5 for backwards
>> compatibility in the transition period.
>> Please respond on the list on whether you think this is a reasonable way
>> forward or not.
> My instinct is to mandate PSS and let PKCS#1 rest in peace.",<C425EE29-6FC7-481A-B0F2-6518A420D614@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-02-29 20:48:34
7176,TLS 15+,159,61,"Agreement,NeutralResponse",36,36,"
+1

As always, certificates are fine to be signed with PKCS#1, because we are not specifying certificate signatures, but in-protocol signatures *are* up to us.
",<C425EE29-6FC7-481A-B0F2-6518A420D614@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-02-29 20:48:34
7177,TLS 15+,159,119,"NeutralResponse,Question",15,15,"
I recently already saw the message here asking for PKCS #1 1.5
compatibilty and was quite angry about it, but as there wasn't much
discussion I thought this issue would go away. It seems it did not.

RSA-PSS was specified as RFC 3447 in 2003. That was 13 years ago.

Therefore we can conclude:
* Whoever created that hardware implementation either did so more than
13 years ago (probably unlikely) or deliberately created hardware
crypto with sub-standard algorithm support.
* This can mean a couple of things:
a) The hardware vendor knew about it and expected that they could
prevent a move to RSA-PSS by lobbying standardization bodies (this is
what they seem to do right now). In this case they deliberately want to
weaken security and that behavior should not be encouraged.
b) They didn't know about RFC 3447. That probably means they shouldn't
develop crypto products at all.
c) Something else?
whatever the reason was, I can't find any reason I would find in any
way acceptable. I think the TLS working group should not encourage such
vendor behavior. Instead I think the opposite should happen: A clear
statement that deploying sub-standard crypto technologies isn't
acceptable and whoever does it has to expect breakage in the future.

TLS suffered a lot in the past from misguided attempts to provide
backwards compatiblity to weak algorithms. Most of the fancy
named vulns in the past years can somehow be traced back to this
problem.

PKCS #1 1.5 is a real problem. The last PKCS #1 1.5 signature related
vuln that could've been prevented by using RSA-PSS was found 2 months
ago [1]. The last one in a major implementation (BERserk) was in 2014.

tl;dr: I don't think supporting PKCS #1 1.5 in TLS 1.3 is reasonable.
Let's not repeat the mistakes from the past.

[1]
https://blog.filippo.io/bleichenbacher-06-signature-forgery-in-python-rsa/
",<20160229190021.59516808@pc1>,hanno@hboeck.de,0.0,0,8,2016-02-29 19:00:21
7178,TLS 15+,159,133,Agreement,119,119,"
I agree, we started 1.3 by removing old and deprecated stuff. We should not allow it now and risk weakening our work...

B.",<54D9A4D3-98A1-4C5D-A5BE-F880C4F80FD7@inria.fr>,benjamin.beurdouche@inria.fr,0.0,0,15,2016-02-29 19:10:54
7179,TLS 15+,159,171,Answer,119,119,"
Yeah, such as all of their customers are using PKCS#1 because that is what everybody uses in all current versions of TLS and several other protocols?

Regardless, hardware vendors should rejoice. We’re giving their customers a good reason to buy new hardware.
",<88D3CE68-E034-4433-8EA2-B09AC8801E6B@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-02-29 20:53:33
7180,TLS 15+,159,215,NeutralResponse,119,119,"
RSA-PSS signatures are crap, and they're pretty close to useless.

What should have adopted for TLSv1.2 already, however, is the less
forgiving PKCS#1 v1.5 signature check, that re-creates the encoding
and then compares the recreated inner encoding with the RSA-decrypted
encoding only.  Get rid of the de-padding and get rid of the ASN.1
decoding of the contents.  This is also the recommended fashion
for PKCS#1 v1.5 signature verification in rfc3447.
",<20160304134513.EED9E1A45C@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-03-04 14:45:13
7181,TLS 15+,159,216,ExtensionOfPrevious,215,119,"
The *huge* advantage of PKCS#1 v1.5 signatures over RSA-PSS and ECDSA
signatures is that one can clearly distinguish ""wrong public key""
from ""signature does not fit plaintext"" errors, and loosing this
capability makes certain kinds of programming goofs (plus a few
admin configuration goofs) much harder to distinguish from
data corruption during transfer.  XMLdsig and XML canonicalization
is another source of endless fun, where being able to distinguish
these causes for signature verification failure facilitates
troubleshooting.
",<20160304134513.EED9E1A45C@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-03-04 14:45:13
7182,TLS 15+,159,217,ExtensionOfPrevious,216,119,"
Signature verification itself is a public key operation, so RSA-PSS
is a wholly different beast than RSA-OAEP.
",<20160304134513.EED9E1A45C@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-03-04 14:45:13
7183,TLS 15+,159,260,"Disagreement,NeutralResponse",215,215,"
The Problem with this is that you're relying on the implementor to get
it right. Sure, you're giving them a receip how they could implement
the check to be correct, but you have no way of checking whether they
actually follow that receip.
Given all past experiences I'd bet you can write whatever you want in
your new standards document, no implementor will replace their
(seemingly working, but insecure) PKCS #1 1.5 implementation as long
as it works, just because you say they have to do it in a
different way than they did in the past.
",<20160304145525.1fe5cb63@pc1>,hanno@hboeck.de,0.0,0,8,2016-03-04 14:55:25
7184,TLS 15+,159,262,Disagreement,216,216,"
Actually I see this as a disadvantage. Separating different error
states has been the source of a whole number of vulnerabilities. The
original Bleichenbacher attack (and all its variants including drown)
is based on separating different errors, the Vaudenay attack is.
",<20160304145525.1fe5cb63@pc1>,hanno@hboeck.de,0.0,0,8,2016-03-04 14:55:25
7185,TLS 15+,159,289,Disagreement,262,262,"
I'm sorry, but this is clueless.
Signature verification is a PUBLIC KEY operation.
You're not creating an oracle with a public key operation.

The examples you cite are about secret key and private key operations
which create oracles.  That isn't even in the same universe.

-Martin",<20160304142024.2A7191A45C@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-03-04 15:20:24
7186,TLS 15+,159,316,Agreement,15,15,"
I agree with the others that TLS should use exclusively RSA-PSS (with all
the parameters fixed according to the digest function used to digest the
data) when RSA is used in the protocol. Implementations that can't support
PSS in hardware can either implement it in software or use ECDSA or keep on
using TLS 1.2.
",<CAFewVt5VprOHLbDV6x_r0QZCkJC4Tke7zwyzMUDXyhPGNTwU4A@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2016-02-29 09:00:54
7187,TLS 15+,159,321,NeutralResponse,316,-1,"I originally was okay with the proposal, but Brian made me think about the timeline.  And I liked Yoav’s sentiment ☺
RSA-PSS only for TLS 1.3",<6dc90ded30e84b048cbbdbdb2ffb19f3@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2016-02-29 19:15:49
7188,TLS 15+,159,359,"NeutralResponse,ProposeAction",15,15,"
I think that supporting PKCS1.5 fallback is the right thing to do for
faster adoption of TLS 1.3, as specified above.

PKCS #1.5 is allowed by
https://tools.ietf.org/html/draft-ietf-tls-tls13-11#section-6.3.2.1 in
X.509 certificates. X.509 certificate chain is a part of TLS handshake.
The above proposal is about not restricting one type of signature, the
end-entity signature, to PSS. This applies to client authentication,
server authentication, or both.

Without a generous advance warning about PKCS#1.5 removal by TLS 1.3, we
have to deal with already deployed hardware. Had vendors and customers
knew that TLS 1.3 will remove PKCS #1.5, we probably would have ended up
with more PSS-friendly Internet. PKCS#1.5 is still fine for FIPS 140,
Common Criteria, and in CA certificates in TLS 1.3.

The WG can chose to remove PSS from one type of signature in TLS1.3. The
affected implementations will need to cap negotiation at TLS 1.2.

For more details:
https://www.ietf.org/mail-archive/web/tls/current/msg19096.html",<56D49646.1050806@brainhub.org>,crypto@brainhub.org,0.0,0,7,2016-02-29 11:04:38
7189,TLS 15+,159,399,"NeutralResponse,ProposeAction",15,15,"
I think that supporting PKCS1.5 fallback is the right thing to do for
wider adoption of TLS 1.3, as specified above.

PKCS #1.5 is allowed by
https://tools.ietf.org/html/draft-ietf-tls-tls13-11#section-6.3.2.1 in
X.509 certificates. X.509 certificate chain is a part of TLS handshake.
The above proposal is about not restricting one type of signature, the
end-entity signature, to PSS. This applies to client authentication,
server authentication, or both.

Without a generous advance warning about PKCS#1.5 removal by TLS 1.3, we
have to deal with already deployed hardware. Had vendors and customers
knew that TLS 1.3 will remove PKCS #1.5, we probably would have ended up
with more PSS-friendly Internet. Even now PKCS#1.5 is allowed by FIPS
140, Common Criteria, and in CA certificates in TLS 1.3, and earlier TLS.

The WG can chose to remove PSS from one type of signature in TLS1.3.
This will result in affected implementations capping negotiation at TLS
1.2. There is no other fix in some cases.

For more details:
https://www.ietf.org/mail-archive/web/tls/current/msg19096.html

(I posted earlier, but don't see the message. Sending this one more
time, slightly edited)",<56D4ABAD.90902@brainhub.org>,crypto@brainhub.org,0.0,0,7,2016-02-29 12:35:57
7190,TLS 15+,159,410,NeutralResponse,399,399,"
I think it's long past the time where everyone has to acknowledge that within protocols, there's no such thing as a ""fallback"" specified as an option. There's simply allowed and not allowed, with the former having no incentive to go away. Arguing to keep it now is equivalent to arguing to keep it forever.
",<201602291728.07214.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-02-29 17:28:06
7191,TLS 15+,159,441,"Question,NeutralResponse,UnderstandingNegative",,359,"
Ok, look, I really would like to understand what you're trying to say
here.

What would such a warning look like? We have an RFC for PSS since 2003.
We had several attacks showing the weakness of PKCS #1 1.5. Wasn't that
warning enough? If not, how would such a warning look like? I'd really
like to know, because we will have similar situations in the future
and I'd like to avoid people lobbying in the background to continue
supporting weak crypto.

There will be some new TLS version some day and we will try to get
better algorithms into it. So how do we warn you next time?
",<20160229233617.5466ebd3@pc1>,hanno@hboeck.de,0.0,0,8,2016-02-29 23:36:17
7192,TLS 15+,159,460,"Question,NeutralResponse",441,441,"
In the face of such danger, what's your opinion on PKCS #1.5 signatures
being perfectly fine in TLS 1.3 ? I refer to signatures in X.509 certs
in the latest https://tools.ietf.org/html/draft-ietf-tls-tls13-11.

Why not ban PKCS #1.5 altogether from TLS 1.3? It will not only make TLS
1.3 more secure, but code simpler and footprint smaller. Besides, it's
reasonable: TLS 1.2 already allows PSS in X.509 certs.

You are arguing for the benefit of suddenly mandating a steel door on a
grass hut. Joseph Salowey's proposal gives an option for the door,
consistent with how TLS 1.2 does this for X.509 certs.",<56D51FFB.9050909@brainhub.org>,crypto@brainhub.org,0.0,0,7,2016-02-29 20:52:11
7193,TLS 15+,159,476,NeutralResponse,460,460,"
It would be cool to ban PKCS#1.5 from certificates, but we are not the PKIX working group. Nor are we the CA/Browser forum. When a CA issues a certificate it has to work with every client and server out there, When we use TLS 1.3, the other side supports TLS 1.3 as well, so it’s fair to assume that it knows PSS.
",<DE710794-CA42-48E1-9AB9-A2BE2899E071@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-01 13:35:26
7194,TLS 15+,159,530,NeutralResponse,441,441,"
And so (maybe not entirely coincidentally!): another attack, dubbed
DROWN, just emerged¹, using SSLv2 as - you guessed it - a
Bleichenbacher padding oracle against RSA PKCS#1 v1.5!

(Please do stop me if you've heard this one before! <g>)
",<56D5DE1D.3000708@akr.io>,akr@akr.io,0.0,0,6,2016-03-01 18:23:25
7195,TLS 15+,159,532,Agreement,441,359,"
A very strong +1 as far as I'm concerned.
",<56D5DE1D.3000708@akr.io>,akr@akr.io,0.0,0,6,2016-03-01 18:23:25
7196,TLS 15+,159,534,"Question,NeutralResponse",476,476,"
Perhaps the PKIX working group and CAB/Forum could both use a friendly
reminder not to ignore how perilous using RSA PKCS#1 v1.5 still remains?
[1] <https://drownattack.com/drown-attack-paper.pdf>

/akr
-----BEGIN PGP SIGNATURE-----

iQIcBAEBCgAGBQJW1d4SAAoJEOyEjtkWi2t6kIQP/2Ziaeu2RGqHqV1Oa6dB0+Go
iPbrrHe9C7l7yHxWfhur6ldGUnqAKyzhD5X0RHby0lbpXTcBFQjWPQ3shZE8CUV2
mM4N2UyoAu5w1kOkSvHImeWrtdOPDTBTZhwFJjzEHtLkri6+CXzKE82B94WfhX8/
ddQxg9uaV7eDEcW4um+vn0NG/+IuiJvfVTX7YtNj0yVSvEO7bm6/WRHsWV0FaQ+C
HtNawk+KP966PLUPH1N6vBvhNpiZkMtv3QUsKbzAQDn8SPfXHWGy2CBxPLjtIv2w
dTmY9dOxJsc7KswtM7DJQqx7azgeGAlLc8MV1PyXw1fIq2qtVI4Fk1+DNrMteC5B
cNkez/nPwR01FFj3QV5OnbpcqIX1v9nmGrpDuFw+99xcMjgRrSRc3boclV8/H0PA
k8XllkgmXj75TkqSkPV1YXVwOJAT65Uwke7tKHf4TwXSwz+qZVji+y8ZqZ7ACs2/
Pp3IrlNLuJUmFjE+p8zhhEQU6fQjEdkAxT/3KY8/1nKxlXByFVHu1p1jZk7aWBtw
aSEDLCI4XKKAJ118yXRtHXxA7LGNujsBYCoSp1A4Rkce57Ea7iuVd4pmctbMgiTA
g3UAb7cE4NflzRyQd1Gbycu6wenovj9bOD4HRdTuADRdfGpXv8HMEG+eOUuE7DHx
Af4y+IDpfW7HTraWjiKX
=iX03
-----END PGP SIGNATURE-----",<56D5DE1D.3000708@akr.io>,akr@akr.io,0.0,0,6,2016-03-01 18:23:25
7197,TLS 15+,159,600,"NeutralResponse,ProposeAction",530,530,"
PSS doesn't help against Bleichenbacher attacks on encryption. The attack
still can compute a private key operation.

What we really need is key seperation or use of ECC certs only.
",<CACsn0c=BOOf9z0fASaE_D_Nv1Bbck3bRj_JDZZaHnk-5d5x0LQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-03-01 10:26:35
7198,TLS 15+,159,642,"Question,NeutralResponse",600,600,"
Yes, fortunately TLS 1.3 eliminates RSA key transport.  Otherwise,
for key transport we'd want OAEP rather than PSS.

Still, even though DROWN does not attack RSA signatures, we cannot
say that ongoing use of PKCS#1 v1.5 signatures is particularly
wise.

http://www.automatednetworkedstorage.biz/emc-plus/rsa-labs/historical/raising-standard-rsa-signatures-rsa-pss.htm

Burt Kaliski, RSA Laboratories
February 26, 2003

Executive Summary

RSA-PSS is a new signature scheme that is based on the RSA
cryptosystem and provides increased security assurance. It was
added in version 2.1 of PKCS #1.

While the traditional and widely deployed PKCS #1 v1.5 signature
scheme is still appropriate to use, RSA Laboratories encourages
a gradual transition to RSA-PSS as new
applications are developed.

So the question is how ""gradual"" we want the transition to be.  If
v1.5 is negotiable, in TLS 1.3, we're looking at another decade or
two, perhaps by then QC will make RSA obsolete?

Viktor.",<20160301183816.GH12869@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2016-03-01 18:38:17
7199,TLS 15+,159,650,"Disagreement,NeutralResponse",642,642,"
It does not.  It just doesn't *use* RSA key transport.  That's the
unfortunate part.  Hence the call for key separation.",<CABkgnnV8EYaUM5=cGWCMgunXvA_rxoCm2wxieeu9WGtG-jRbVg@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-03-02 09:46:32
7200,TLS 15+,159,671,Answer,534,534,"
Neither you nor I can post in any of the CA/Browser forum’s lists, because neither of us has either a browser or a public CA.

There are some people who are active there and are reading this list, so they might take such a proposal there. I’m not very optimistic, though. While only CAs and browsers are members, they are keenly aware that even the public CAs have a wide variety of relying parties, running all sorts of software. And it’s much harder to scan clients than it is to scan servers, so it’s difficult to say how many clients will not be able to connect to a server with a certificate signed with RSA-PSS. Probably far too many for the CA/BF to be comfortable deprecating PKCS#1.

The PKIX working group has shut down several years ago. The Curdle WG is a new working group whose charter includes deprecating obsolete stuff. Perhaps they might be interested.
",<BBA8149E-114A-49D3-8159-A87ADB545482@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-01 21:20:39
7201,TLS 15+,159,724,"Question,NeutralResponse",,62,"
The removal of PKCS #1.5 signature support in TLS 1.3 is a client issue
when client authentication is used. See examples here:
https://www.ietf.org/mail-archive/web/tls/current/msg19096.html .

Regarding server-only authentication, it seems that there is assumption
that TLS 1.3 will continue to use PKCS#1.5 for a long time in X.509
certs. Then why ""break Internet"" or slow down adoption of TLS 1.3 by
mandating PSS in one field of handshake?

Imagine that there is PSS#2 in the future. Is the intent to issue new
TLS 1.4 that bans PSS and hardwires PSS#2? If not, there may still be a
signature negotiation mechanism in TLS 1.3 in the future.

The reasons CAs are cold to adoption of PSS are similar to these of TLS
servers or clients: 3d-party dependence, prior investment, FIPS 140
certification, cost.

TLS WG can ban PKCS #1.5 in CA certs in TLS 1.3, but it wisely doesn't.
Why one signature field is an exception? IMO this will lead to slower
adoption of TLS 1.3, on balance. Nothing prevents e.g. OpenSSL from
implementing PSS in HS (which is proposed as MUST anyway). Nothing
prevents servers from not negotiating TLS 1.3.
",<56D63BC7.5010302@brainhub.org>,crypto@brainhub.org,0.0,0,7,2016-03-01 17:03:03
7202,TLS 15+,159,773,"Answer,NeutralResponse",724,724,"
The easy answer is: because we can. We can’t mandate for the CA industry what kind of certificates they should issue, or rather, we can, but they’ll rightly ignore us. We *can* mandate how a new TLS 1.3 implementation signs for another new TLS 1.3 implementation. Mandating that the certificates are signed with PSS would definitely slow down the adoption of TLS 1.3. Mandating what algorithm is used within the protocol does not.

As long as the spec allows PKCS#1 all implementations will support it and many implementors will delay PSS because it’s not needed for interoperability. That’s what a rational manager would do: implement TLS 1.3 with PKCS#1 now, and place implementing PSS “on the roadmap”. I don’t think we should give them that incentive.
",<BC718116-64C4-46C0-870C-D82DE64B4C63@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 08:37:46
7203,TLS 15+,159,774,"Question,Answer",724,724,"
That depends. Did we find that PSS is insecure in this future?
",<BC718116-64C4-46C0-870C-D82DE64B4C63@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 08:37:46
7204,TLS 15+,159,775,NeutralResponse,724,724,"
Both servers and clients tend to use libraries that implement both the protocol and the algorithms. OpenSSL springs to mind, as do NSS, GNUTLS, SChannel and whatever Apple calls their library. Sure there are separate libraries with software handshakes and hardware algorithms. Even OpenSSL does this with their “engines”. I don’t think this is reason enough to keep dragging obsolete algorithms with us.
",<BC718116-64C4-46C0-870C-D82DE64B4C63@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 08:37:46
7205,TLS 15+,159,776,Answer,724,724,"
Because this is a particular field that we control.
",<BC718116-64C4-46C0-870C-D82DE64B4C63@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 08:37:46
7206,TLS 15+,159,789,NeutralResponse,776,776,"
Which is in itself a reasonable argument for leaving legacy behind,
...  but also because adaptive attacks are I think a greater potential
threat against interactive TLS than against a bunch of CA-authored
bits at rest.

Viktor.",<20160302065747.GC10917@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2016-03-02 06:57:48
7207,TLS 15+,159,798,Agreement,789,789,"
+1",<201603021616.15731.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2016-03-02 16:16:15
7208,TLS 15+,159,826,Question,,-1,"
Why don't we use an even more elegant RSA signature called "" full-domain hash RSA signature"" ?",<BN1PR09MB12407B52B773981DB214919F3BD0@BN1PR09MB124.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2016-03-03 13:35:46
7209,TLS 15+,159,827,ExtensionOfPrevious,826,-1,"
As you know, a SHAKE (as a variable output-length hash function) naturally produces a hash value which fits any given modulus size. Therefore, no paddings are needed which avoids any potential issues with the paddings and the signature algorithm would be very simple.",<BN1PR09MB12407B52B773981DB214919F3BD0@BN1PR09MB124.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2016-03-03 13:35:46
7210,TLS 15+,159,873,Answer,826,826,"
Full Domain Hashing was originally developed by Rogaway and Bellare and
then later dismissed because they found that they could do better. Then
they developed PSS.

See
http://web.cs.ucdavis.edu/~rogaway/papers/exact.pdf

So in essence FDH is a predecessor of PSS and the authors of both
schemes came to the conclusion that PSS is the superior scheme.
",<20160303144947.0402bad9@pc1>,hanno@hboeck.de,0.0,0,8,2016-03-03 14:49:47
7211,TLS 15+,159,875,NeutralResponse,827,827,"
You could also use SHAKE in PSS to replace MGF1. This is probably
desirable if you intent to use PSS with SHA-3.

PSS doesn't really have any padding in the traditional sense. That is,
all the padding is somehow either hashed or xored with a hashed value.
I don't think any of the padding-related issues apply in any way to
PSS, if you disagree please explain.

(shameless plug: I wrote my thesis about PSS, in case anyone wants to
read it: https://rsapss.hboeck.de/ - it's been a while, don't be too
hard on me if I made mistakes)
",<20160303144947.0402bad9@pc1>,hanno@hboeck.de,0.0,0,8,2016-03-03 14:49:47
7212,TLS 15+,159,933,NeutralResponse,,-1,"Hi Hanno,

I think the PSS uses a random salt to get the hashing probabilistic.

A customized version of a SHAKE can/may take a domain-separation string or/and a random salt.

Quynh.
",<BN1PR09MB12436A713F9675B8A62A089F3BD0@BN1PR09MB124.namprd09.prod.outlook.com>,quynh.dang@nist.gov,0.0,0,9,2016-03-03 14:21:01
7213,TLS 15+,159,991,"NeutralResponse,ProposeAction",875,875,"Please see the paper ""Another Look at ``Provable Security''"" from Neal
Koblitz and Alfred Menezes.

https://eprint.iacr.org/2004/152

Section 7: Conclusion

""There is no need for the PSS or Katz-Wang versions of RSA;
one might as well use just the basic “hash and exponentiate” signature
scheme (with a full-domain hash function).""
",<56D9BB9F.5090102@azet.sk>,fedor.brunner@azet.sk,0.0,0,30,2016-03-04 17:45:19
7214,TLS 15+,159,1011,Thanking,991,991,"
Thanks a million for adding some clue to this discussion!

-Martin",<20160304170121.01C9A1A45C@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2016-03-04 18:01:20
7215,TLS 15+,159,1053,"Disagreement,NeutralResponse",476,476,"
That doesn't have to be true.  For example, many OpenSSL-based servers
can be configured to serve an ECC certificate to TLS clients that
indicate support for ECC, and to serve an RSA certificate to other TLS
clients.
",<56D6AE21.7050108@comodo.com>,rob.stradling@comodo.com,0.0,0,5,2016-03-02 09:10:57
7216,TLS 15+,159,1055,Agreement,534,534,"
+1
",<56D6AE21.7050108@comodo.com>,rob.stradling@comodo.com,0.0,0,5,2016-03-02 09:10:57
7217,TLS 15+,159,1057,"NeutralResponse,ProposeAction",671,671,"
Please don't give up without even trying!

If you have a proposal, I'd be happy to post it to the
public@cabforum.org list on your behalf.

Alternatively, you could post it to the questions@cabforum.org list
yourself.

<snip>
",<56D6AE21.7050108@comodo.com>,rob.stradling@comodo.com,0.0,0,5,2016-03-02 09:10:57
7218,TLS 15+,159,1083,NeutralResponse,1057,1057,"
Oh, somebody else beat me to it:

https://cabforum.org/pipermail/public/2016-March/006910.html
",<56D6AF5B.5010103@comodo.com>,rob.stradling@comodo.com,0.0,0,5,2016-03-02 09:16:11
7219,TLS 15+,159,1114,NeutralResponse,1083,1083,"
Right. And the response was that while PSS in in NSS, it’s not in Firefox. No word on the other browsers out there, and definitely no word on a bunch of non-browser clients that connect to servers using certificates from the public CA.

I totally understand that the commercial CAs cannot afford to deprecate PKCS#1 now. It might be prudent to announce some long-term deprecation plan such as the one for SHA-1 signatures.

We can hope that by the time the transition is complete RSA will have been abandoned in favor of ECDSA and/or EDDSA, but I would not bet on it.
",<7BA6CABC-077A-4DAA-BF9C-FE1209FD32C0@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 11:25:07
7220,TLS 15+,159,1169,NeutralResponse,671,671,"
For what it's worth, I expect PSS support to appear in Firefox sometime in
the
not too distant future, since it's clear we need it for 1.3 and it's not
much effort
to add it for 1.2 and below.

-Ekr

I totally understand that the commercial CAs cannot afford to deprecate",<CABcZeBM_qHe58W9=zughbEt0c++QnzoJujhAUH+ZsWqN5E46yg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-03-02 07:57:24
7221,TLS 15+,159,1208,NeutralResponse,1169,1169,"
I expect the version of our firewall that comes out in 2017 will support PSS as well in TLS and the PKI. The enterprise CA part of the product?  Probably not because it has to support the legacy.
",<9A7EEFD6-1D76-4583-9C3E-EC7F6768FE16@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-02 19:08:10
7222,TLS 15+,159,1235,NeutralResponse,530,530,"
To be fair, the issues surrounding RSA encryption are different ones
than the ones about RSA signatures.
We already agreed to deprecate RSA encryption entirely. Therefore DROWN
is irrelevant for the discussion here.

(What causes often confusion is that Daniel Bleichenbacher is
responsible for *two* major and completely unrelated attacks against
RSA PKCS #1 1.5, one against encryption and one against - badly
implemented - signatures)
",<20160301214506.639ee3d4@pc1>,hanno@hboeck.de,0.0,0,8,2016-03-01 21:45:06
7223,TLS 15+,159,1254,"NeutralResponse,ProposeAction",15,15,"ever support PKCS#1.5 for TLS 1.3, but I think that I would rather
have users on 1.3 with PKCS#1.5 than have them stuck on 1.2.

It seems like others are taking the position that we should say ""MUST
NOT use PKCS#1.5"".  I would love for that to be the case, but I want
to separate decision path for that, preferably one that is somewhat
under my control.  Once we have information about usage for each
signature scheme, I'll be happy to arrange for another ""break the web""
day.",<CABkgnnX4Orgk7dvOtKN5FLryepf7Pb_bJtkxDiN+L7UUfthvSw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-03-01 15:56:53
7224,TLS 15+,159,1272,NeutralResponse,1254,1254,"
It is much easier to mandate PSS in TLS 1.3 now, than to remove it
later.  Servers that can't do PSS will use TLS 1.2.  This avoids
a break-the-web day.

Viktor.",<20160301045947.GV12869@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2016-03-01 04:59:47
7225,TLS 15+,159,1285,NeutralResponse,1272,1272,"
Sorry, ... than to remove *PKCS#1.5* later ...

Viktor.",<20160301050647.GW12869@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2016-03-01 05:06:47
7226,TLS 15+,159,1301,"Agreement,NeutralResponse,ProposeAction",1272,1285,"
Yes, this is true for some people, and likely it will be more true in
the future.  However, a MUST implement PSS is enough for me.  If it
seems like consensus is against this position, I'll back that all the
way.  However, on the web side of things, we've some experience with
killing stuff that we don't like.  It's not always painless (see
SHA-1), but I'd rather rely on that system than risk holding back 1.3.",<CABkgnnVPz_7UH0y1-N_SRgfd7hxX85WxD1i-NvXzWhjZ_v1POw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-03-01 20:20:38
7227,TLS 15+,159,1323,"NeutralResponse,ProposeAction",1254,-1,"
I’d go even further. I’d remove the rsapss(4) value from SignatureAlgorithm, leaving just rsa(1), and say that in TLS 1.3 an RSA signature is PSS just as it was PKCS#1.5 in TLS 1.2.

Certificates are a different issue altogether.
",<E3F402CD-24B4-4E86-B57B-45F6442645FB@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2016-03-01 13:32:20
7228,TLS 15+,159,1348,Agreement,1323,1323,"
I strongly agree to Yoav's proposal!  No need to have both RSA(-PKCS)
and RSA-PSS numbers in SignatureAlgorithms.
",<56DD876D.2060001@mehnert.org>,hannes@mehnert.org,0.0,0,31,2016-03-07 13:51:41
7229,TLS 15+,159,1382,"Question,NeutralResponse",1348,1348,"
Doesn't SignatureAlgorithms also negotiate the algorithms supported for
the cert chain? If it does, I think that complicates things.

Also, making the same ClientHello mean two different things depending
on yet-unnegotiated version seems odd to me.
",<20160307160423.GA15882@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-03-07 18:04:23
7230,TLS 15+,159,1407,"NeutralResponse,ProposeAction",15,15,"
The mandatory to implement approach didn't help TLS 1.0 (which had a
DHE-RSA ciphersuite implemented by no-one for several years). If you
want to push for RSA-PSS, then please only define RSA-PSS. That, in
addition would allow to prevent that sharing of keys between TLS 1.2
and TLS 1.3 (i.e., prevent any cross-protocol attacks).
",<1456826530.3417.31.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2016-03-01 11:02:10
7231,TLS 15+,161,0,"ContextSetting,InformationProviding,ContextSetting",,-1,In -tls13-11 section 7.2 [1] there is this..,<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7232,TLS 15+,161,35,"ContextSetting,InformationProviding,ExtensionOfPrevious",,-1,"
7.2.  Updating Traffic Keys and IVs",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7233,TLS 15+,161,36,"InformationProviding,InformationProviding",,-1,"
Once the handshake is complete, ...",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7234,TLS 15+,161,37,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",36,-1,"
Once traffic_secret_N+1 and its associated traffic keys have been
computed, implementations SHOULD delete traffic_secret_N.  Once the
directional keys are no longer needed, they SHOULD be deleted as
well.",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7235,TLS 15+,161,38,"Question,ExtensionOfPrevious,ClarificationElicitation,InformationProviding",37,-1,"
..and it isn't clear to me what is meant by ""directional keys"" in the
paragraph above (that is the only occurance of the term I find)?",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7236,TLS 15+,161,39,"Question,ContextSetting,Question",,-1,"
is the term meant as a forward reference to this table in S 7.3 and thus
to the notion of ""client write key"" and ""server write key"" ?",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7237,TLS 15+,161,40,"InformationProviding,InformationProviding",,-1,"
| Key Type         | Purpose            |
| Client Write Key | ""client write key"" |
| Server Write Key | ""server write key"" |",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7238,TLS 15+,161,41,"Thanking,Thanking",,-1,"
thx,",<56C4C40C.5090508@KingsMountain.com>,Jeff.Hodges@KingsMountain.com,0.0,0,3,2016-02-17 11:03:40
7239,TLS 15+,161,91,"Answer,InformationProviding,Answer",39,39,"
Yes.

-Ben
",<56C4C9E5.9050206@akamai.com>,bkaduk@akamai.com,0.0,1,2,2016-02-17 13:28:37
7240,TLS 15+,162,13,"InformationProviding,InformationProviding",,-1,"Rules for CCS messages in record layer are missing, allowing in theory sending
multiple CCS messages in a single record layer",<48986853.OUDrGe6E9e@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-02-12 15:10:18
7241,TLS 15+,162,14,"InformationProviding,InformationProviding,ProposeAction",,-1,"
I've proposed a PR that requires the same kind of processing rules for CCS and
Alert messages: https://github.com/tlswg/tls13-spec/pull/1146 - no
fragmentation and no coalescing. That automatically solves the empty CCS
record case.",<48986853.OUDrGe6E9e@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-02-12 15:10:18
7242,TLS 15+,162,66,"NeutralResponse,InformationProviding,NeutralResponse",14,14,"
https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#record-protocol

""An implementation may receive an unencrypted record of type
change_cipher_spec consisting of the single byte value 0x01 at any time
after the first ClientHello message has been sent or received and before
the peer’s Finished message has been received and MUST simply drop it
without further processing. Note that this record may appear at a point at
the handshake where the implementation is expecting protected records and
so it is necessary to detect this condition prior to attempting to
deprotect the record. An implementation which receives any other
change_cipher_spec value...""

And of course Alert already has this rule:
""Alert messages (Section 6
<https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#alert-protocol>)
MUST NOT be fragmented across records and multiple Alert messages MUST NOT
be coalesced into a single TLSPlaintext record. In other words, a record
with an Alert type MUST contain exactly one message.""

-Ekr
",<CABcZeBMeRDFdHQCXoBaAyZ6Cd5VAEmEfTnW+59ZO_iK4iMiTxg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-02-12 06:37:55
7243,TLS 15+,163,54,"InformationProviding,InformationProviding",,-1,"Mirja Kühlewind has entered the following ballot position for
draft-ietf-tls-tls13-26: No Objection",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7244,TLS 15+,163,55,"InformationProviding,ProposeAction,ProposeAction",,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7245,TLS 15+,163,56,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7246,TLS 15+,163,57,"InformationProviding,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7247,TLS 15+,163,58,"InformationProviding,ContextSetting",,-1,"
COMMENT:",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7248,TLS 15+,163,59,"InformationProviding,ProposeAction,UnderstandingNegative,ContextSetting,ProposeAction",,-1,"
1) I'm a bit uncertain if obsoleting is the right approach as many other
protocols usually do not obsolete older versions. However, I understand that
this has been the approach TLS has previously taken and is supported by the way
the document is written. Still, I find it especially confusing that also two
TLS1.2 extensions are deprecated which are not needed with TLS1.3 anymore but
still probably valid to be used with TLS1.2, right? I would recommend for this
version to at least already note in the abstract or very early in the intro
that it changes the versioning mechanism itself, and thereby basically declares
the TLS handshake as an invariant for all future versions and extensibility is
only provided using extensions anymore.",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7249,TLS 15+,163,60,"Question,Question",,-1,"
2) Can you provide further explanation (potentially in the draft) why the
Pre-Shared Key Exchange Modes are provided in an extra/separate extension?",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7250,TLS 15+,163,61,"Question,InformationProviding,Question,ContextSetting",,-1,"
3) I know previous versions of TLS didn't say that much either, but I find it a
bit wired that there are NO requirements for the underlaying transport in this
document. Previous version this at least said in the intro that a reliable
transport (like TCP) is assumed, but even this minimal information seems to
have gotten lost in this document. However, I would usually also expect to seen
some minimal text about connection handling, e.g. is it okay to transparently
try to reestablish the connection by the underlying transport protocol if it
broke for some reason? Or it is okay to use the same TCP connection to first
send other data and then start the TLS handshake?",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7251,TLS 15+,163,62,"Question,InformationProviding,ContextSetting,ProposeAction",,-1,"
4) Regarding the registration policies: I assume the intend of changing them is
to make it easier to specify and use new extensions/mechanism. However, I am
wondering why the policies have been changed to ""Specification Required"" and
not ""IETF consensus"" or RFC Required""?",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7252,TLS 15+,163,63,"InformationProviding,Disagreement,InformationProviding",,-1,"
5) I find it a bit strange that basically the whole working group is listed as
contributors. My understanding was that Contributors are people that have
contributed a ""significant"" amount of text, while everybody else who e.g.
brought ideas in during mailing list discussion would be acknowledged only.",<152044072045.17779.18123788753031746068.idtracker@ietfa.amsl.com>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 08:38:40
7253,TLS 15+,163,223,"InformationProviding,Answer,NeutralResponse",59,59,"
Well:
https://www.ietf.org/iesg/statement/designating-rfcs-as-historic.html
says:
A document is obsolete when there is a newer version that replaces it.

I believe that that's the relationship between TLS 1.3 and TLS 1.2.
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7254,TLS 15+,163,225,"Question,ClarificationElicitation",59,59,"
Which extensions are you referring to.
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7255,TLS 15+,163,227,"InformationProviding,Answer,NeutralResponse",59,59,"
It's true that we are deprecating the version mechanism, but that
does not mean that it is the only extension mechanism.
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7256,TLS 15+,163,229,"Question,InformationProviding,Apologising,Answer,ClarificationElicitation,UnderstandingNegative",60,60,"
I'm sorry, I'm not following this. As opposed to what?
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7257,TLS 15+,163,231,"InformationProviding,Answer,Answer,ProposeAction",61,61,"
This is pretty explicitly outside the scope of TLS. It's just the job
of the underlying transport to simulate a reliable stream. I can add
some text that that's expected.
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7258,TLS 15+,163,233,"InformationProviding,Answer,NeutralResponse,Answer",62,62,"
The changes aren't in this document, but the WG feeling was that
both of those were creating bad incentives for people to publish
RFCs just to get a code point. The ""Recommended"" flag was intended
to address that need instead.
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7259,TLS 15+,163,235,"InformationProviding,Disagreement,Disagreement,NeutralResponse",63,63,"
I don't think we have any IETF-wide standard here, but traditionally
we have adopted a pretty generous attitude towards acknowledgements
of this type. Given that electrons are basically free, I don't see a real
problem here.

-Ekr
",<CABcZeBML9yhXvzA53QxVNk0-3pis=8pF9LYzYXqTmUvCaVRisQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 10:05:16
7260,TLS 15+,163,424,"InformationProviding,Thanking,ContextSetting,Thanking",,-1,"Thanks for your review, Mirja.  I will just add one comment inline
from WG discussion and consensus.
",<CAHbuEH6FW6AKKMeO1z_wm891z5qbz+7vNxwUB9tU1pRrM=1dJg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2018-03-07 13:36:33
7261,TLS 15+,163,426,"InformationProviding,NeutralResponse",233,233,"
The working group explicitly feels that a draft that is not published
is adequate, falling into the specification required category where
informal documentation is acceptable.
",<CAHbuEH6FW6AKKMeO1z_wm891z5qbz+7vNxwUB9tU1pRrM=1dJg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2018-03-07 13:36:33
7262,TLS 15+,163,620,"InformationProviding,ContextSetting,ProposeAction,ContextSetting",,-1,"Hi,

see below
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7263,TLS 15+,163,622,"InformationProviding,NeutralResponse,InformationProviding",223,223,"
I looked at this and was wondering if this is meant to rather mean newer version of the same document than actual protocol version.

I found this in RFC2223 (which is obsoleted by 7322 which however doesn’t give a definition):

""Obsoletes

To be used to refer to an earlier document that is replaced by
this document.  This document contains either revised information,
or else all of the same information plus some new information,
however extensive or brief that new information is; i.e., this
document can be used alone, without reference to the older
document.“

Anyway, as I said I know why you did this; it still seem wired to me.
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7264,TLS 15+,163,624,"InformationProviding,Answer,Answer",225,225,"
RFC5077 and RFC6961 (maybe extension is not the wrong term for the first one)",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7265,TLS 15+,163,626,"Question,ClarificationElicitation",227,227,"
Which others do you have?
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7266,TLS 15+,163,628,"InformationProviding,Answer,Answer",229,229,"
You could implicitly make assumptions depending on which extension are present or you can add one field to the pre_shared_key extension to indicate the mode. I’m always careful is something says „if this think is present, that must also be present“ as it can be an source of error that could have been avoided.
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7267,TLS 15+,163,630,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",231,231,"
If that is the only requirement, it would still be good to spell that out.",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7268,TLS 15+,163,632,"InformationProviding,NeutralResponse,NeutralResponse,ProposeAction",233,233,"
Hm, I think I would actually prefer to see things documented in RFCs instead of just having some spec somewhere. Not sure if an RFC on the ISE stream is that much more effort than writing a spec somewhere else but then at least the IESG would get to see it for a conflict review...
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7269,TLS 15+,163,634,"InformationProviding,ContextSetting,NeutralResponse,ContextSetting",235,235,"
I just would have expected to see all these names in an acknowledgment section and not in an contributor section.

RFC7322 again says:

""4.11.  Contributors Section
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7270,TLS 15+,163,635,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","235,634",235,"
This optional section acknowledges those who have made significant
contributions to the document.“
",<7556C17C-A6F5-4FCD-8FB6-DFC85D1C1E92@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-07 19:32:01
7271,TLS 15+,163,709,"InformationProviding,StateDecision,Agreement,StateDecision",630,630,"Sure, I can add something.",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7272,TLS 15+,163,859,"InformationProviding,NeutralResponse,NeutralResponse",624,624,"
OK. I'm not really sure of a better way to handle this.
",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7273,TLS 15+,163,861,"InformationProviding,Answer,Answer",626,626,"
Once you have negotiated a new version you can change the messages in any
way you please, just as you always could have.
",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7274,TLS 15+,163,863,"InformationProviding,StateDecision,NeutralResponse",628,628,"
Yes, we considered this design, and rejected it because we wanted a way to
indicate which kinds of PSKs the client would be willing to accept.
",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7275,TLS 15+,163,866,"InformationProviding,StateDecision,Disagreement,NeutralResponse",632,632,"
Well, I can see how you would feel that way, but it was the consensus of
the WG that that was not the right approach.
",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7276,TLS 15+,163,868,"InformationProviding,NeutralResponse,NeutralResponse",635,635,"
I think this is within WG and Editor discretion.

-Ekr
",<CABcZeBPHvWF-4RUFqX0cDdaW6dpjt+0fNYyjY1j+vjSVSLuo7Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-03-07 11:03:36
7277,TLS 15+,163,1122,InformationProviding,,-1,"Mirja,
",<CAHbuEH6p8iwTcmKBmhOLTFGZ_KdMsRL1PFP2JmVdBdUoogkSOg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2018-03-07 14:52:42
7278,TLS 15+,163,1124,"InformationProviding,Agreement,StateDecision,Thanking,Agreement,Thanking",866,866,"
I agree with Eric and poked at this in my AD review of the recent
policy changes.  There is strong WG consensus to allow for informal
documentation such as an unpublished draft.  As such, I support that
consensus as sponsoring AD since our procedures allow for this
flexibility and it makes sense.

Thanks for your review and comments, it's helpful.",<CAHbuEH6p8iwTcmKBmhOLTFGZ_KdMsRL1PFP2JmVdBdUoogkSOg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2018-03-07 14:52:42
7279,TLS 15+,163,1156,"InformationProviding,ContextSetting",,-1,"Hi Ekr,

just one more comment on this part
",<D4D34FDE-76C8-4562-A6F3-6C044CF70DDC@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-13 09:06:54
7280,TLS 15+,163,1158,"Question,ClarificationElicitation",709,709,"
Just to double-check, there is also no requirement or maybe recommend to not send cleartext and 0-RTT data in the same packet?
",<D4D34FDE-76C8-4562-A6F3-6C044CF70DDC@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-13 09:06:54
7281,TLS 15+,163,1169,"ClarificationElicitation,InformationProviding,Answer,NeutralResponse",1158,1158,"
You mean in the same TCP segment?  We do nothing to prevent that, and
nor should we.  It would mess with intended uses of TCP fast open.  In
DTLS, that extends to having a ClientHello and 0-RTT in the same UDP
datagram, which is permitted and similarly beneficial.",<CABkgnnVWiR5MBYnPR6TPeQ=WtcXaJ4g88eCE=Xf-WC7eY7Yixw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-03-13 08:30:33
7282,TLS 15+,163,1171,"InformationProviding,NeutralResponse",1169,-1,"Okay, just wanted to check!",<F000FBF3-212D-4E42-AB39-11A3E29B04EC@kuehlewind.net>,ietf@kuehlewind.net,0.0,1,0,2018-03-13 10:21:15
7283,TLS 15+,164,36,InformationProviding,,-1,"
I've published
https://tools.ietf.org/id/draft-yasskin-http-origin-signed-responses-01.html
to follow up on
https://lists.w3.org/Archives/Public/ietf-http-wg/2017JulSep/0385.html with
a concrete proposal for the Signature header.",<CANh-dXkgss_Mt0F4hv5fBcrHUJ6=BO7o5u2OCWzxJom=xAiJ0w@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 21:19:43
7284,TLS 15+,164,37,"InformationProviding,ProposeAction",,-1,"
I made several choices in this design where another tradeoff would be
totally plausible. Let me know where you'd prefer something different.",<CANh-dXkgss_Mt0F4hv5fBcrHUJ6=BO7o5u2OCWzxJom=xAiJ0w@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 21:19:43
7285,TLS 15+,164,38,ContextSetting,,-1,"
Some interesting aspects of this update:",<CANh-dXkgss_Mt0F4hv5fBcrHUJ6=BO7o5u2OCWzxJom=xAiJ0w@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 21:19:43
7286,TLS 15+,164,39,InformationProviding,,-1,"
* The signature covers the URL, so it's really a signed ""exchange"" rather
than just a signed response.
* To simplify the Signed-Headers header, it's not possible to customize
which parts of the request are included in the signature. Exactly the
method and effective request URI are included.
* The signing key can either be a certificate's key or a raw ed25519 public
key. The first supports origin-trusted certificates and other complex forms
of trust, while the second supports
https://github.com/mikewest/signature-based-sri and other ways a public key
might be trusted out-of-band. Attentive folks will notice that this means
signed exchanges are no longer necessarily *origin*-signed.
* Certificate chains are fetched and cached from a URL rather than bundled
into the Signature header. Normal use is likely to Push the chain for a
group of signed exchanges.
* There's a way to update the signatures for a response without re-fetching
the whole response.",<CANh-dXkgss_Mt0F4hv5fBcrHUJ6=BO7o5u2OCWzxJom=xAiJ0w@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 21:19:43
7287,TLS 15+,164,40,ProposeAction,,-1,"
I'll be updating
https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html
as you point out things I should change.",<CANh-dXkgss_Mt0F4hv5fBcrHUJ6=BO7o5u2OCWzxJom=xAiJ0w@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 21:19:43
7288,TLS 15+,164,73,"Question,NeutralResponse,Apologising",36,36,"
Sorry if this was already discussed, but do you know about JWS / JWK?

https://tools.ietf.org/html/rfc7515
https://tools.ietf.org/html/rfc7517

ACME uses them

https://datatracker.ietf.org/doc/draft-ietf-acme-acme/

So there are an increasing number of implementations of this.

There seems to be a lot of crossover with what you're trying to do there
(encode key type and parameters).

It's B64url encoding but it will let you put everything in one header.

-Andy
",<75aacd42-b7b0-34aa-be11-3b571d15a0fa@warmcat.com>,andy@warmcat.com,0.0,0,20,2017-12-06 06:23:23
7289,TLS 15+,164,127,Answer,73,73,"
When I've asked Chrome's security folks about JWS (and CMS and COSE),
they've advised that I stay far away from the general formats. We want to
keep implementations simple in order to reduce their bug counts, so we'd
need to profile the general format, but then we don't get to take advantage
of existing implementations. At most, we take advantage of any security
thinking that went into the JWS spec itself, but there are enough mistakes
in JWS that this doesn't help.

ACME uses them",<CANh-dXkft+Fw6MsZoTU-T-OFgpPOthV2UGb17Wg_j9JQgQB2pg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 23:34:57
7290,TLS 15+,164,129,"NeutralResponse,ContextSetting",73,73,"
Kinda:
1. JWS makes the mistake of letting the attacker control the verification
algorithm. Since the key and its type are already known to the verifier,
there's no need to encode the type in the signature.
2. Only one or two parameters defined in JWS overlap with the ones I
need: x5t#S256 and possibly crit. x5u is close, but I believe it doesn't
include the SCT and OCSP stapling that we'll want before trusting the
certificates.
",<CANh-dXkft+Fw6MsZoTU-T-OFgpPOthV2UGb17Wg_j9JQgQB2pg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-05 23:34:57
7291,TLS 15+,164,167,"Agreement,NeutralResponse,ProposeAction,Thanking",37,-1,"Thanks, Jeffrey.  In parallel with other work that’s going on to make push actually usable, I’m excited about the ability to push non-authoritative resources in a secure way.

A few smaller points on the draft, most of which wind up being feedback on Structured Headers more than your doc:

*   3.1:  The usual format is “section <foo> of [BAR]”; I think if you use that format, the html-ized copy will actually deep-link to the relevant section.  You’re following the format from draft-ietf-header-structure, so we should fix it there instead.
*   3.1:  MUST not => MUST NOT
*   3.2.1:  You’re not the first to ask about lists in Structured Headers; the resolution nine months ago was that there’s nothing in Structured Headers to support that.  You’re demonstrating that there probably needs to be.  My solution in HTTP/QUIC was to violate the prohibition on repeated keys, but we need to resolve this before either Structure Headers and HTTP/QUIC lock down.
*   3.6.1:  If you’re saying a client MAY do something other than what it MUST do per RFC7540, you might want to frame this as an extension.  In that vein, an HTTP/2 setting advertising support for this from the client might be in order.  You could also define a more specific error code for invalid unauthoritative pushes.

In 3.4, the pseudo-map of arrays alternating keys and values feels odd.  I assume the reason you did this is so you have a normalized order for the signature, as CBOR “does not allow ascribing semantics to the order….”  However, “[a] CBOR-based protocol can prescribe a specific order of serialization, such as for canonicalization,” and you already are.  (You specifically call out that you’re not using CBOR maps, so I presume you’ve been down this road.)  The advantage of your current scheme is that you can preserve the original order of the headers in the signature, meaning a client could detect changes / reconstruct them.  I’m not sure how critical that is, but this is the right list to give feedback on the semantic content of header ordering….

On the whole, I’m really interested in this direction, and this is a solid starting point for a way to get there.

From: Jeffrey Yasskin [mailto:jyasskin@google.com]
Sent: Tuesday, December 5, 2017 1:20 PM
To: HTTP Working Group <ietf-http-wg@w3.org>
Subject: Concrete format for signed responses

Hi all,

I've published https://tools.ietf.org/id/draft-yasskin-http-origin-signed-responses-01.html to follow up on https://lists.w3.org/Archives/Public/ietf-http-wg/2017JulSep/0385.html with a concrete proposal for the Signature header.

I made several choices in this design where another tradeoff would be totally plausible. Let me know where you'd prefer something different.

Some interesting aspects of this update:

* The signature covers the URL, so it's really a signed ""exchange"" rather than just a signed response.
* To simplify the Signed-Headers header, it's not possible to customize which parts of the request are included in the signature. Exactly the method and effective request URI are included.
* The signing key can either be a certificate's key or a raw ed25519 public key. The first supports origin-trusted certificates and other complex forms of trust, while the second supports https://github.com/mikewest/signature-based-sri and other ways a public key might be trusted out-of-band. Attentive folks will notice that this means signed exchanges are no longer necessarily *origin*-signed.
* Certificate chains are fetched and cached from a URL rather than bundled into the Signature header. Normal use is likely to Push the chain for a group of signed exchanges.
* There's a way to update the signatures for a response without re-fetching the whole response.

I'll be updating https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html as you point out things I should change.

Thanks,
Jeffrey",<MWHPR08MB2432A0444DA51B186951F44BDA320@MWHPR08MB2432.namprd08.prod.outlook.com>,mbishop@evequefou.be,0.0,0,3,2017-12-06 18:42:00
7292,TLS 15+,164,193,"Agreement,NeutralResponse,StateDecision",,-1,https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.1,<CANh-dXnO-2Kv-NckDJu6bkdvETe-nWZrwyfCmt4X5C2tqy1xgg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 22:20:05
7293,TLS 15+,164,258,Thanking,167,167,Thanks (\o/),<CANh-dXnO-2Kv-NckDJu6bkdvETe-nWZrwyfCmt4X5C2tqy1xgg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 22:20:05
7294,TLS 15+,164,325,"NeutralResponse,ProposeAction",,-1,"has a deep link written like ([RFC7540], Section 9.1.2), so it's not
primarily my syntax. I'm happy to use the 'of' syntax though if folks
prefer. https://github.com/WICG/webpackage/pull/92
",<CANh-dXnO-2Kv-NckDJu6bkdvETe-nWZrwyfCmt4X5C2tqy1xgg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 22:20:05
7295,TLS 15+,164,329,"Question,Agreement,NeutralResponse",167,-1,"Origin Frame is close, but it merely defines something that
https://tools.ietf.org/html/rfc7230#section-9.1 leaves vague, unlike this
extension that explicitly reverses a MUST from RFC7540.
",<CANh-dXnO-2Kv-NckDJu6bkdvETe-nWZrwyfCmt4X5C2tqy1xgg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 22:20:05
7296,TLS 15+,164,331,"Question,NeutralResponse,ProposeAction",167,167,"I was avoiding maps for two reasons, the second of which I think I've
mostly removed from the draft:

1) CBOR map canonicalization is a bit of a mess right now, with 3 errata
proposing different changes to the suggested canonical map ordering, and
the CBORbis effort not really sure which to pick:
https://www.ietf.org/mail-archive/web/cbor/current/msg00264.html. If I were
to pick a canonical order, I'd prefer
https://www.rfc-editor.org/errata_search.php?rfc=7049&eid=4964, pure
lexicographic order ignoring item lengths. Does that sound good to you?

2) I was thinking of a CBOR format for transmitting the exchange to the
client. For that, it's probably important to send the response headers
before the response payload, but 'response' sorts after 'payload' in either
canonical map ordering. This *may* also be useful for
https://tools.ietf.org/id/draft-yasskin-http-origin-signed-responses-01.html#cbor-representation,
where an implementation could stream the request and response into the
signature verifier before receiving the payload, with the current ordering,
but couldn't if it had to put the payload first. Do we want to 1) play
spelling games to put things in the right order, 2) use arrays in only the
places this matters, 3) use arrays everywhere, or 4) ignore this since it's
not in the current proposal?
",<CANh-dXnO-2Kv-NckDJu6bkdvETe-nWZrwyfCmt4X5C2tqy1xgg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 22:20:05
7297,TLS 15+,164,335,"ContextSetting,StateDecision",,-1,"Hm, then I’m not sure what sets up the deep links.  I’ll defer to those who know the tools better than I.",<MWHPR08MB243229BA34463C63100B4174DA320@MWHPR08MB2432.namprd08.prod.outlook.com>,mbishop@evequefou.be,0.0,0,3,2017-12-06 22:45:08
7298,TLS 15+,164,425,ProposeAction,,-1,"
https://tools.ietf.org/html/draft-ietf-httpbis-http2-secondary-certs-00 requires the client to advertise support for the new frame types; you could steal the general structure from there.  I’d just say that servers MAY push signed resources for domains for which they aren’t authoritative only if the client has set the newly-defined setting.  Secondary Certs also defines new error codes, if you wanted to steal that.",<MWHPR08MB243229BA34463C63100B4174DA320@MWHPR08MB2432.namprd08.prod.outlook.com>,mbishop@evequefou.be,0.0,0,3,2017-12-06 22:45:08
7299,TLS 15+,164,426,Question,,-1,"
What about omitting the tags entirely, and just have a two-element array with each element being a map?  [ request, response ].",<MWHPR08MB243229BA34463C63100B4174DA320@MWHPR08MB2432.namprd08.prod.outlook.com>,mbishop@evequefou.be,0.0,0,3,2017-12-06 22:45:08
7300,TLS 15+,164,626,"NeutralResponse,StateDecision,Thanking",425,425,"
Thanks. I'll look at that and draft-kerwin-http2-encoded-data, and
send y'all a PR Friday.
",<CANh-dXm-qBfMj3gQ08-gSPUuYtNF3u=gAAi-QRb_H8P6Q7XXKw@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 16:40:57
7301,TLS 15+,164,628,"Question,Answer",426,426,"
Positional arguments are definitely plausible. I avoided them in order
to make it easier to extend this in the future if we need to. For
example, are we totally sure that we'll never want to represent
request payloads or trailers in a signed exchange?
",<CANh-dXm-qBfMj3gQ08-gSPUuYtNF3u=gAAi-QRb_H8P6Q7XXKw@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 16:40:57
7302,TLS 15+,164,884,"NeutralResponse,Thanking",626,626,"
Here you go: https://github.com/WICG/webpackage/pull/94. Thanks for the
example drafts.
",<CANh-dX=po0+ocp8FUceUynSfCkbVbix2d0XMtdwa65eUHAxyxw@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-09 00:36:15
7303,TLS 15+,164,913,NeutralResponse,329,329,"
A while back I was working on an extension that adds a new flavour of
DATA frame[1], including changes to the state machine, flow control,
etc. and a setting to advertise support.  It might be useful as a
draft, even if it's not particularly useful as a H2 extension :)

[1]: https://tools.ietf.org/html/draft-kerwin-http2-encoded-data-09
",<CACweHNDW8ZoJ616HtUR-qRcdUb7DHNpi8qEvSOXD5oJNZpW2pQ@mail.gmail.com>,matthew@kerwin.net.au,0.0,0,3,2017-12-07 09:30:50
7304,TLS 15+,164,936,NeutralResponse,,-1,"
I recently started an, as yet, unpublished extension document and found Patrick’s Websocket proposal quite a nice example to base mine on. It’s available at https://tools.ietf.org/html/draft-mcmanus-httpbis-h2-websockets-02",<7CF7F94CB496BF4FAB1676F375F9666A3BAA10FD@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-12-07 11:42:06
7305,TLS 15+,164,958,"Question,ContextSetting",167,167,"Pulling this out to its own thread since it's more general than the
signed-exchange proposal:

Is the order of HTTP headers semantically significant? Should future
proposals be careful to preserve header order, or is it ok to do things
like sort headers while processing them?
",<CANh-dXm-PXzW3u0vLXKcvuO-Zz7vbzLgM=R2Qnp90+f5BJmtAQ@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-19 00:59:40
7306,TLS 15+,164,1005,Answer,958,958,"
The order in which header fields with differing field names are
received is not significant.  However, it is good practice to send
header fields that contain control data first, such as Host on
requests and Date on responses, so that implementations can decide
when not to handle a message as early as possible.

Note that this is only true for ""differing field names"":

A recipient MAY combine multiple header fields with the same field
name into one ""field-name: field-value"" pair, without changing the
semantics of the message, by appending each subsequent field value to
the combined field value in order, separated by a comma.  The order
in which header fields with the same field name are received is
therefore significant to the interpretation of the combined field
value; a proxy MUST NOT change the order of these field values when
forwarding a message.

Set-Cookie is a special case.

https://tools.ietf.org/html/rfc7230#section-3.2.2
",<CAF6rxg=hjYdGwz2FFRmzw46t-xy4hkHM44Yw8znr6p63P1G2aA@mail.gmail.com>,lists@eitanadler.com,0.0,0,28,2017-12-18 20:07:57
7307,TLS 15+,164,1059,Answer,958,958,"
RFC 7230 section 3.2.2:
The order in which header fields with differing field names are
received is not significant.

but also:
A recipient MAY combine multiple header fields with the same field
name ... The order
in which header fields with the same field name are received is
therefore significant to the interpretation of the combined field
value; a proxy MUST NOT change the order of these field values when
forwarding a message.

So both yes and no. Depending on the particular message and headers
involved.
",<69fa820b-6f33-de1f-9262-f0441183cbb9@treenet.co.nz>,squid3@treenet.co.nz,0.0,0,5,2017-12-19 17:26:00
7308,TLS 15+,164,1060,ExtensionOfPrevious,1059,958,"
That same section also has this advise on header ordering for
applications that generate new messages, or do modifications:
... However, it is good practice to send
header fields that contain control data first, such as Host on
requests and Date on responses, so that implementations can decide
when not to handle a message as early as possible.
",<69fa820b-6f33-de1f-9262-f0441183cbb9@treenet.co.nz>,squid3@treenet.co.nz,0.0,0,5,2017-12-19 17:26:00
7309,TLS 15+,164,1219,"Question,InformationProviding,ContextSetting",40,40,"
Looking at the draft some comments:

Section 3.4:

"" Followed by the appended items from, for each response header field in

exchange, in order: ""

Errant paragraph break?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7310,TLS 15+,164,1220,"Question,ContextSetting",40,40,"
Section 3.6:

""and parsing it as a TLS 1.3 Certificate message ([I-D.ietf-tls-tls13],
section 4.4.2) containing X.509v3 certificates.""

Does this include four-byte TLS message header? I have seen some
confusion with this in case of exported authenticators.

Also, TLS 1.3 Certificate message contains a context field. How that
should be set? always empty string?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7311,TLS 15+,164,1221,"Question,ContextSetting",40,40,"
""1. The text string “certSha256”.
2. The byte string certSha256.""

This field does not seem if raw Ed25519 key (ed25519Key) is used?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7312,TLS 15+,164,1222,"Question,InformationProviding",40,40,"
This section does not seem to clearly define signature format. The
signature format is the same as used by TLS 1.3 (JOSE and COSE have
different format for ECDSA signatures)?

Also, should mapping entries for Ed25519 and Ed448 keys be specified
(even if not MTI)?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7313,TLS 15+,164,1223,"InformationProviding,ContextSetting",40,40,"
Section 3.6.1:

""Validate that all certificates in path include “status_request”
extensions with valid OCSP responses.""

While CA certificates might have OCSP responses, in practice these
have unusuably long lifetime (months!).
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7314,TLS 15+,164,1224,"Question,Answer,ContextSetting",40,40,"
Section 3.6.2:

""TLS 1.3 signs the entire certificate chain, but doing that here would
preclude updating the OCSP signatures without replacing all signatures
using that chain at the same time. What attack do I allow by hashing
only the end-entity certificate?""

That probably depends on if upper certificates can alter the
interpretation of the end-entity certificate, instead of just having
""pass or fail"" effect.

X.509 has all sorts of extensions that have all sorts of odd
semantics. The computational complexity of X.509 chain validation
is unknown, and might not be solvable in polynomial time.
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7315,TLS 15+,164,1225,"Question,Answer,ContextSetting",40,40,"
Section 4.1:

""The use of a single Signed-Headers header field prevents us from
signing aspects of the request other than its effective request URI
([RFC7230], section 5.5). For example, if an author signs both
Content-Encoding: br and Content-Encoding: gzip variants of a response,
what’s the impact if an attacker serves the brotli one for a request
with Accept-Encoding: gzip?""

Assuming receiver and all intermediates on path properly support
Content-Encoding, that would just be a busted response, no? However
if something does not get C-E right, things get a lot more complicated.

Also, Signing Content-Encoding (and Content-Type) if any is a good
idea...

""Section 3.6 can succeed when some delivered headers aren’t included
in the signed set. This accommodates current TLS-terminating
intermediates and may be useful for SRI ""

Nit: There are TLS-terminating intermediates that just terminate TLS
and pass the stream. Maybe you meant reverse proxies?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7316,TLS 15+,164,1226,"InformationProviding,ContextSetting",40,40,"
Section B.1.2:

The problem with RsaEncryption keys is not so much confusion with
non-TLS protocols. The problem arises if:

- Some server with private key supports TLS (or SSL) static RSA.
- That server does not properly hide decryption failures. This is
hard, and the advice up to TLS 1.1 on this was flawed.

If those two conditions are met, then attacker can use the
Bleichenbacher attack to forge signature for arbitrary message with the
relevant key.

Note that I said ""Some server"", not ""the server"". DROWN showed how
common shared keys are. And often they were shared with some pretty
badly configured servers.
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7317,TLS 15+,164,1227,ExtensionOfPrevious,1226,40,"
There have been some wrong use security bugs with ECDSA keys as well,
but those did not let attacker forge signatures.
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7318,TLS 15+,164,1228,"Question,ContextSetting",40,40,"
Section B.2:

Not signing accept-* does not seem to create worse problems than
servers with busted negotiation (and there are probably a LOT of
those)?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7319,TLS 15+,164,1229,"Question,ContextSetting",40,40,"
Section B.2.1:

Again ""TLS-terminating proxies"". You mean reverse proxies?
",<20171206211554.GA17237@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-06 23:15:54
7320,TLS 15+,164,1435,Answer,1219,1219,"
Yes, but appears to be a problem with xml2rfc rather than my
kramdown-rfc2629 source. The XML is <t><list>...</list>Text
<spanx>exchange</spanx> Text<list>...</list></t>.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7321,TLS 15+,164,1437,"Answer,StateDecision",1220,1220,"
I didn't think very hard about this, but if I wanted to include the
4-byte message header, I think I'd have to say that it's a Handshake
message containing a Certificate
(https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#handshake-protocol).
I'll add a note clarifying.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7322,TLS 15+,164,1439,Answer,1220,1220,"
I think so, since it's not in response to a CertificateRequest.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7323,TLS 15+,164,1441,Agreement,1221,1221,"
Good catch.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7324,TLS 15+,164,1443,"ClarificationElicitation,NeutralResponse",1222,1222,"
I do say that the signing algorithm is as defined by TLS 1.3 section
4.2.3. Is there something more I should say?
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7325,TLS 15+,164,1445,Answer,1222,1222,"
(""MTI""?) I believe that Ed25519 and Ed448 keys don't exist in the Web
PKI yet, although that could be out of date. Once they do, yes they
should have mandatory mapping entries.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7326,TLS 15+,164,1447,"Question,NeutralResponse,ProposeAction",1223,1223,"
Ah, so I need to set a maximum lifetime here. I'd vaguely heard that
Microsoft set a maximum lifetime for OCSP responses of 7 or 10 days.
Is that right? I'd like to match that.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7327,TLS 15+,164,1449,NeutralResponse,1224,1224,"
Ryan Sleevi said that signing just the end-entity certificate was the
right thing to do: https://github.com/WICG/webpackage/pull/91.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7328,TLS 15+,164,1451,Answer,1225,1225,"
Attacks usually consist of something not getting something else quite
right, and a goal here is to make attacks as difficult as possible
even in the face of some bugs.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7329,TLS 15+,164,1453,NeutralResponse,1225,1225,"
Right now I say that ""Higher-level protocols SHOULD place requirements
on the minimum set of headers to include in the Signed-Headers header
field."" I think it would make sense to give an example of a particular
protocol's decision here, but I'd want that to be a complete set of
required headers and not just one or two that we happen to call out.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7330,TLS 15+,164,1455,NeutralResponse,1225,1225,"
I'd imagined that reverse proxies were just one kind of
TLS-terminating intermediary, and may not be the only kind that add
headers. If that's wrong, I can switch to the narrower term.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7331,TLS 15+,164,1457,"NeutralResponse,UnderstandingNegative",1227,1227,"
It seems like you're talking about accidental signing oracles here,
which are covered in
https://tools.ietf.org/id/draft-yasskin-http-origin-signed-responses-01.html#rfc.section.4.p.4.
Beyond that, I'm not sure what else to write in this section.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7332,TLS 15+,164,1459,ClarificationElicitation,1228,1228,"
That is, you're comfortable signing only the URL?
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7333,TLS 15+,164,1461,"InformationProviding,StateDecision,Thanking",1229,1229,"
See above.

Thanks for the comments! I've sent a PR at
https://github.com/WICG/webpackage/pull/93.
",<CANh-dX=HVaTOyc6eZ8A2itu_DAdx1Gae=H0Fk0HpLEoQPhpguA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-06 15:59:34
7334,TLS 15+,164,1613,Agreement,1443,1443,"
Oh, good.
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7335,TLS 15+,164,1615,NeutralResponse,1445,1445,"
I think after curdle-pkix goes to RFC, CABForum will probably allow Ed*
keys for EE certificates (but not CA certificates due to issues with
key protection). And EE certificates are the one that matters here.
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7336,TLS 15+,164,1617,Answer,1447,1447,"
That is EE certificates only. And it is 7 days.

Poking around a bit, it seems that the OCSP response on the native LE
X3 intermediate has lifetime of 1 year(!!!).
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7337,TLS 15+,164,1619,NeutralResponse,1449,1449,"
Well, it probably is OK if nothing can affect interpretation (only
validity) of the end entity certificates.
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7338,TLS 15+,164,1621,NeutralResponse,1451,1451,"
If something doesn't get C-E right, the impact is tring to decompress
brotli data as gzip data. It is possible that there exists some piece
of data that decompresses as both (obviously to something different).
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7339,TLS 15+,164,1623,"NeutralResponse,ContextSetting",1455,1455,"
Well, there are really three kind of things here:

- Just terminate TLS, leave data alone in both directions.
- Terminate TLS, mangle inbound data but not outbound data (usually
to insert source address markers).
- Reverse proxy, mangles inbound and outbound data.
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7340,TLS 15+,164,1625,Answer,1459,1459,"
Yes.
",<20171207171826.GA23149@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-12-07 19:18:26
7341,TLS 15+,164,1680,"NeutralResponse,StateDecision,Thanking",1615,1615,"
Thanks for pointing out that curdle-pkix is now close to being published.
I've added those key types in https://github.com/WICG/webpackage/pull/96. I
picked the pre-hashed variant of the signing algorithms, but I'm happy to
hear if that's the wrong choice.
",<CANh-dXnQ0ktp7BaxBiZ_4GGyewkwK66ZeJzq0ww5VwdNKCKaxg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-11 22:45:47
7342,TLS 15+,164,1682,"NeutralResponse,StateDecision",1617,1617,"
Ouch. I'll limit the check to the end-entity certificate, and assume that
systems like OneCRL can handle revoked intermediates without needing help
from the signature format.

https://github.com/WICG/webpackage/pull/93
",<CANh-dXnQ0ktp7BaxBiZ_4GGyewkwK66ZeJzq0ww5VwdNKCKaxg@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-12-11 22:45:47
7343,TLS 15+,166,27,"ContextSetting,InformationProviding",,-1,"Hello,

I'm not sure if this should be included, so not making a PR yet.

Complete examples for requests may help implementers (of both servers
and clients) to understand the specifications. All existing examples
have pseudo-code like base64url({...}) and no untruncated keys or
signatures.

I wrote two examples, one for account creation, another for key
roll-over to demonstrate nested JWS:

https://github.com/joernheissler/acme/commit/a8a303ddbe3280b49ce8f10508dcdf95a6dc6de9

That commit also adds ""--- back"" (Backmatter to get Appendices in the
rendered document) and I'm not happy with the wording on top.

To check correctness of the signatures and make the requests",<20180304213623.GJ2161@carrot.tutnicht.de>,acme-specs@joern.heissler.de,0.0,0,36,2018-03-04 22:36:23
7344,TLS 15+,166,28,"Question,Question,InformationProviding",,-1,"
https://gist.github.com/joernheissler/04d9dcfb3a99e318871e451c9043f2dc

Do you think those examples should be included? And if so, is there any
time left to actually do it?
",<20180304213623.GJ2161@carrot.tutnicht.de>,acme-specs@joern.heissler.de,0.0,0,36,2018-03-04 22:36:23
7345,TLS 15+,166,86,"Answer,ProposeAction,InformationProviding,Answer,ProposeAction",28,-1,"Hey Joern,

This is a probably a good thing to have.  I think that rather than putting
these in the main spec, it might be better to have them in a second draft.
This is a pretty common pattern.  For example, for TLS 1.3, there's a ""test
vectors"" document separate from the main spec [0].  There are a few
documents with example ""call flows"" for SIP [1][2].  ACME is probably
somewhere in the middle of those two cases.

--Richard

[0] https://tools.ietf.org/html/draft-ietf-tls-tls13-vectors-03
[1] https://tools.ietf.org/html/rfc3665
[2] https://tools.ietf.org/html/rfc5589
",<CAL02cgSnmKHLUK-SM6tF7bOvkXfDdh5qmgQd+jf1Dcarz9_Z5w@mail.gmail.com>,rlb@ipv.sx,0.0,0,0,2018-03-04 17:17:50
7346,TLS 15+,166,103,"Agreement,Agreement,ProposeAction",86,86,"I agree; the test vectors are a good idea, and should be part of another
document.",<f23bf41b-e498-0780-510d-1b60bf99297b@eff.org>,jsha@eff.org,0.0,0,7,2018-03-05 14:23:36
7347,TLS 15+,168,0,Social,,-1,Dear TLS WG members.,<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7348,TLS 15+,168,74,"ContextSetting,InformationProviding,ProposeAction",,-1,"
I am doing my final copy-edits for the TLS 1.3 RFC and I noted one
technical point and two points I would like to edit for clarity but I
wanted more eyes on.",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7349,TLS 15+,168,75,ContextSetting,,-1,"
1. https://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-4.1.2",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7350,TLS 15+,168,76,"InformationProviding,InformationProviding",,-1,"
If the client is attempting a PSK key
establishment, it SHOULD advertise at least one cipher suite
indicating a Hash associated with the PSK.",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7351,TLS 15+,168,77,"Question,ExtensionOfPrevious,ProposeAction,Question,ExtensionOfPrevious",76,-1,"
This seems like it would be better as a MUST. It's not a disaster
if we don't change it, but can anyone think of a reason it should
be a SHOULD?",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7352,TLS 15+,168,78,"ContextSetting,InformationProviding",,-1,"
2. https://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-7.4.2",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7353,TLS 15+,168,79,"ContextSetting,InformationProviding,ContextSetting",,-1,"
The following block comes *after* the description of how to compute
ECDH for the NIST curves but before stuff about the CFRG curves.",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7354,TLS 15+,168,80,"InformationProviding,InformationProviding,ContextSetting",,-1,"
ECDH functions are used as follows:",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7355,TLS 15+,168,81,"ExtensionOfPrevious,InformationProviding",80,-1,"
-  The public key to put into the KeyShareEntry.key_exchange
structure is the result of applying the ECDH scalar multiplication
function to the secret key of appropriate length (into scalar
input) and the standard public basepoint (into u-coordinate point
input).",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7356,TLS 15+,168,82,"ExtensionOfPrevious,InformationProviding",81,-1,"
-  The ECDH shared secret is the result of applying the ECDH scalar
multiplication function to the secret key (into scalar input) and
the peer's public key (into u-coordinate point input).  The output
is used raw, with no processing.",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7357,TLS 15+,168,83,"Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,UnderstandingNegative",,-1,"
So it's not clear from the text which it applies to. I'm not the expert
here, but it seems like this is at least confusing in the context
of NIST curves, so perhaps we need to rescope it in to the CFRG
curves. This seems to be Ilari's text. Ilari?",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7358,TLS 15+,168,84,"ContextSetting,ContextSetting",,-1,"
3. The following text:",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7359,TLS 15+,168,85,"InformationProviding,InformationProviding,ProposeAction",,-1,"
Key derivation in TLS 1.3 uses the HKDF function defined in [RFC5869]
and its two components, HKDF-Extract and HKDF-Expand.  The full
rationale for the HKDF construction can be found in [Kraw10] and the
rationale for the way it is used in TLS 1.3 in [KW16].  Throughout
this document, each application of HKDF-Extract is followed by one or
more invocations of HKDF-Expand.  This ordering should always be
followed (including in future revisions of this document), in
particular, one SHOULD NOT use an output of HKDF-Extract as an input
to another application of HKDF-Extract without an HKDF-Expand in
between.  Consecutive applications of HKDF-Expand are allowed as long
as these are differentiated via the key and/or the labels.
to another application of HKDF-Extract without an HKDF-Expand in",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7360,TLS 15+,168,86,"ContextSetting,InformationProviding,ContextSetting",,-1,"
In context, this suggests that we're talking about:",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7361,TLS 15+,168,87,"InformationProviding,InformationProviding",,-1,"
HKDF-Expand-Label(HKDF-Expand-Label())",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7362,TLS 15+,168,88,"ExtensionOfPrevious,ContextSetting,InformationProviding,UnderstandingNegative,StateDecision",87,-1,"
but that's confusing because obviously those differ by key. I think we
are not trying to talk about this but rather about two HKDF-Expand-Labels
on related inputs. to that end, I changed it to:",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7363,TLS 15+,168,89,"InformationProviding,ProposeAction,ExtensionOfPrevious",,-1,"
Multiple applications of HKDF-Expand to some of the same inputs are
allowed as long as these are differentiated via the key and/or the
labels.",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7364,TLS 15+,168,90,"Question,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
We could also say that you can HKDF-Expand-Label() repeatedly as
above, but we don't actually do this, I believe, so no point in
saying it. Objections?",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7365,TLS 15+,168,91,InformationProviding,,-1,"
-Ekr",<CABcZeBOB+s_a1X_WvbOkJo49-LE2EUFqd0m+a1AA-ss7g3uH-g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-27 16:20:43
7366,TLS 15+,168,171,"Answer,InformationProviding,Answer",83,83,"
There are basically three types of asymmetric key exchange TLS 1.3 can
currently use:

- Multiplicative Diffie-Hellman.
- Elliptic-Curve Diffie-Hellman with (x,y) point coordinates.
- ""ECDH functions"".

And then the term ""ECDH function"" is seemingly not defined anywhere.
But that definition is certainly intended to encompass X25519 and
X448, being any function f from pair of octet strings to a
octet string plus octet string G, such that:

- f is easy to compute.
- f(a,f(b,G)) = f(b,f(a,G))
- It is hard to compute any f(a,f(b_i,G)) from f(a,G) and all f(b_i,G),
for some index i, except with very small probability.

These condtions imply that one can construct Diffie-Hellman type key
exchange safe for multiple uses. For both X25519 and X448, one can find
such f and G. There are also other such function + base pairs (not
necressarily derived from elliptic curves).

And then there are key exchanges that are thought to be secure, but can
not be expressed in such framework, even with extra transforms. E.g. key
exchanges based on Key Encapsulation Mechanisms (which are important for
post-quantum, thus PQ would need a fourth type).
",<20180728074851.GA14017@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-28 10:48:51
7367,TLS 15+,168,172,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction","171,83",83,"
Looks like the text after it was considerably expanded from when that
text was originally introduced. It initially said ""For X25519 and X448,
see [RFC7748]."" (and in -11, it was a reference to the draft that
became RFC7748). Now it has considerably expanded text:

For X25519 and X448, implementations SHOULD use the approach
specified in [RFC7748] to calculate the Diffie-Hellman shared secret.
Implementations MUST check whether the computed Diffie-Hellman shared
secret is the all-zero value and abort if so, as described in
Section 6 of [RFC7748].  If implementors use an alternative
implementation of these elliptic curves, they SHOULD perform the
additional checks specified in Section 7 of [RFC7748].
",<20180728074851.GA14017@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-28 10:48:51
7368,TLS 15+,168,173,"Question,ProposeAction,Question",83,83,"
Might make sense to split the section and define the dangling term
somewhere?
",<20180728074851.GA14017@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-28 10:48:51
7369,TLS 15+,168,174,InformationProviding,83,83,"
-Ilari",<20180728074851.GA14017@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-28 10:48:51
7370,TLS 15+,168,280,"Question,Agreement,ProposeAction,Thanking,Question,InformationProviding,ProposeAction,Thanking",173,173,"
Thanks. This helps.

The text here isn't totally generic, as it refers to scalar multiplication
and u-coordinate
point input. So, if we had some other ECDH-type thing that didn't have these
concepts, then we would have yet new text.

In the interest of the minimal change, I suggest:

""For X25519 and X448, the calculations are as follows""

""For these curves, implementations SHOULD use...""

How does that sound?

-Ekr
",<CABcZeBML+aBpaZ90cv3OU2cKg9RgFnV=T_Z4cexmtuAYbMYY_w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-28 06:41:09
7371,TLS 15+,168,309,"Agreement,NeutralResponse,InformationProviding,Agreement,ProposeAction",280,280,"
Yeah, passable.

I do not think it is likely we need to add another DH function (due
to threat of QC making ((H)EC)DH go away), and even if we do, it is
just some extra text. The PQC asymmetric key exchanges will be KEMs,
which have pretty different behavior from existing things.
",<20180729151017.GA8266@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-29 18:10:17
7372,TLS 15+,168,310,InformationProviding,280,280,"
-Ilari",<20180729151017.GA8266@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2018-07-29 18:10:17
7373,TLS 15+,168,346,"Thanking,Thanking",309,-1,"Thanks!
",<CABcZeBO6L9wy-+EMJ358+Cjxr6VwA2dEZH5LUPTn6TDnXW-j-Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-07-29 15:28:48
7374,TLS 15+,168,379,"Answer,ProposeAction,InformationProviding,Answer,ProposeAction",77,77,"
It can be a MUST, but then we need to add a MUST for a server not to
overinterpret lack of them (as in MUST NOT abort) - client may send a PSK
associated with a hash in a ciphersuite that the server does not know
",<3272838.bFeZ0KHCYb@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-07-30 16:55:39
7375,TLS 15+,169,0,"InformationProviding,ProposeAction,ContextSetting,ProposeAction",,-1,"TLS has supported a number of different cipher types for protecting the record layer.   In TLS 1.3 these include Stream Cipher, CBC Block Cipher and AEAD Cipher.  The construction of the CBC mode within TLS has been shown to be flawed and stream ciphers are not generally applicable to DTLS. Using a single mechanism for cryptographic transforms would make security analysis easier.   AEAD ciphers can be constructed from stream ciphers and block ciphers and are defined as protocol independent transforms.  The consensus in the room at IETF-89 was to only support AEAD ciphers in TLS 1.3. If you have concerns about this decision please respond on the TLS list by April 11, 2014.",<86E69268-DC0A-43E7-8CF5-0DAE39FD4FD5@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-03-26 18:43:07
7376,TLS 15+,169,8,"ClarificationElicitation,ContextSetting",,-1,I'd like to ask a clarifying question.,<3EAC453F-7902-48FC-B255-4416F50BBF82@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2014-03-27 02:32:27
7377,TLS 15+,169,24,"Question,InformationProviding,ProposeAction,Question,ContextSetting,ProposeAction",,-1,"
Please look at RFC 6476.  In that document, Peter Gutmann uses traditional encryption and integrity functions to make an AEAD cipher.  Does this decision allow or prohibit such ciphers?",<3EAC453F-7902-48FC-B255-4416F50BBF82@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2014-03-27 02:32:27
7378,TLS 15+,169,52,"InformationProviding,Answer,Question,Answer",24,24,"
[Joe]  The AEAD specification is TLS 1.2 is built from RFC 5116.  This does not restrict the type of algorithms used to build the AEAD cipher  as long as the result  meets RFC 5116.   I'm not sure that RFC 6476 can be used directly, but you should be able to build an AEAD cipher out of the same algorithms.

Is your concern using RFC 6476 exactly or just being able to build a TLS compliant AEAD mode out of traditional functions?
",<A1B08507-CCDE-4616-9D8A-CA1A2C053DDC@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-03-27 14:59:07
7379,TLS 15+,169,71,"InformationProviding,StateDecision,NeutralResponse,StateDecision",0,-1,"The consensus from the IETF-89 meeting holds, TLS 1.3 will only use record layer protection of type AEAD. The Editor is requested to make the appropriate changes to the draft on github.

Joe
[For the chairs]",<84C4848E-7843-4372-93AA-C1F017C3E088@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-04-26 15:24:22
7380,TLS 15+,169,140,InformationProviding,,-1,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512",<535F6684.1040701@azet.sk>,fedor.brunner@azet.sk,0.0,0,30,2014-04-29 10:44:52
7381,TLS 15+,169,141,"Question,InformationProviding,Question,ContextSetting",,-1,"
The Mandatory Cipher Suite for TLS 1.2 was TLS_RSA_WITH_AES_128_CBC_SHA.
What is the mandatory cipher in TLS 1.3 ?",<535F6684.1040701@azet.sk>,fedor.brunner@azet.sk,0.0,0,30,2014-04-29 10:44:52
7382,TLS 15+,169,142,"Question,Question",,-1,"
Maybe TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 using Curve25519 for
ECDHE ?",<535F6684.1040701@azet.sk>,fedor.brunner@azet.sk,0.0,0,30,2014-04-29 10:44:52
7383,TLS 15+,169,230,Social,,-1,"Hi,
",<535FE210.40909@net.in.tum.de>,holz@net.in.tum.de,0.0,0,11,2014-04-29 19:32:00
7384,TLS 15+,169,232,"Answer,ProposeAction,Answer,ProposeAction",142,142,"
For current TLS 1.2, the UTA BCP [1] suggests
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256. It also asks for
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, and
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 to be supported by implementations.

It might be nice to keep the BCP in line with TLS 1.3 suggestions.

As for the symmetric ciphers... I acknowledge there is resistance
against GCM due to sidechannel issues, but really, with the current
combination of encryption and MACs, I see no alternative there bar the
new stream ciphers.

Maybe it's time Peter's draft is finally moved forward - although I
still object to the use of extensions to indicate encrypt-then-mac.

(Part of my reasoning is that using extensions complicates the
protocol, which leads to more complexity in implementations)
",<535FE210.40909@net.in.tum.de>,holz@net.in.tum.de,0.0,0,11,2014-04-29 19:32:00
7385,TLS 15+,169,341,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",232,232,"
Another alternative would be AES-CTR + HMAC....
",<CABcZeBOKbtzQZtiWx8p-q41w4tVxVv9rWYvBUubhN_E3cafK3w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-04-29 10:37:00
7386,TLS 15+,169,343,"InformationProviding,NeutralResponse,NeutralResponse",232,232,"
The WGLC for this ended Monday. I would expect Peter to produce a new
draft relatively soon and then we should be able to send it to the IESG.

-Ekr
",<CABcZeBOKbtzQZtiWx8p-q41w4tVxVv9rWYvBUubhN_E3cafK3w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-04-29 10:37:00
7387,TLS 15+,169,379,"InformationProviding,Answer,NeutralResponse,NeutralResponse",142,142,"
Support for ECC is/was a mere option in TLSv1.2.
The specification of Curve25519 for use with rfc4492 is not yet
standardized, same for ChaCha and Poly1035.

What you're asking for is something that has very little in common
with any prior version of TLS, and in particular ZERO interop with
the currently installed base.

TLSv1.2 (rfc5246) had the intention to be backwards-interoperable
with the installed base (otherwise they would have not added the
silly definition of an (md5,rsa) digital signature to TLSv1.2
(you may want to remove that bogosity from the v1.3 draft),
but the amount of interoperability problems with the installed
base was significantly enough to deter adoption of the protocol
for >4 years.
",<20140429182744.DDA501ACE8@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-04-29 20:27:44
7388,TLS 15+,169,380,"InformationProviding,Answer,ExtensionOfPrevious,InformationProviding",142,142,"
Looking at the amount of changes that are being considered and
discussed here for TLSv1.3, I would not be surprised if the
resulting adoption rate for TLSv1.3 would make the IPv6 adoption rate
appear blazing fast...
",<20140429182744.DDA501ACE8@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-04-29 20:27:44
7389,TLS 15+,169,381,InformationProviding,142,142,"
-Martin",<20140429182744.DDA501ACE8@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-04-29 20:27:44
7390,TLS 15+,169,430,"Question,InformationProviding,Apologising,Question,NeutralResponse,Apologising",71,71,"
Sorry - I'm coming late here.  Does this also imply the complete
elimination of the integrity only cipher suites?

With respect to the AEAD approach and with respect to composited AEAD
cipher suites (e.g. AES_CBC_CMAC reformed as an AEAD cipher per Guttman
for example), does this also imply that the key expansion phase will
never be used to generate MAC keys, and that the cipher suite has to
provide whatever mechanisms that are required to split the AEAD key into
underlying encryption/integrity keys if required?

Next (reading from the commited editors copy), this refers to 5116 which
uses a one-size fits all approach that doesn't really fit all sizes,
especially for composited AEAD.  E.g.  the draft describes this
generally as an incrementing value.  For AEAD suites that comply with
5116, that should be part of the suite specification - not TLS.  For
TLS, this just needs to be an normatively opaque, per-message field.
Instead,  place an Informative section which recommends how to do this
with AEAD suites that currently exist.

And finally, as I've noted many times before, deriving IV/nonce
material from the master_secret at the same time as deriving keys is not
securely supportable in hardware.
",<535FE558.2090306@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-04-29 13:46:00
7391,TLS 15+,169,433,"InformationProviding,NeutralResponse",430,-1,I never got an answer or response on the following.,<5367DBEB.7030802@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-05 14:43:55
7392,TLS 15+,169,499,InformationProviding,,-1,"
Mike",<5367DBEB.7030802@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-05 14:43:55
7393,TLS 15+,169,514,"InformationProviding,Answer,Answer",430,430,"[Joe] Yes, the cipher suite would be responsible for deriving the appropriate keys from the key material it is given.",<C7763F74-94D4-4E18-86FC-F0E70488B5BD@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-05-06 05:32:13
7394,TLS 15+,169,519,"InformationProviding,Answer,UnderstandingNegative,NeutralResponse,UnderstandingNegative",430,430,[Joe] I think I'm missing your point here. I thought the existing cipher suites did define how the nonce is generated and the TLS document just provides some guidance on nonce generation.,<C7763F74-94D4-4E18-86FC-F0E70488B5BD@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-05-06 05:32:13
7395,TLS 15+,169,553,"InformationProviding,Answer,Answer",430,430,"
[Joe] Its possible to have AEAD modes that provide only authentication, however I don't think that the currently defined AEAD ciphers support authentication only so its possible that some modification may need to be made to support this.
",<C7763F74-94D4-4E18-86FC-F0E70488B5BD@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-05-06 05:32:13
7396,TLS 15+,169,554,"Question,Answer,Question,NeutralResponse",430,430,"
[Joe]  So currently with AES-GCM and AES-CCM then nonce is  partially derived from the Client and Server IV.   If I remember correctly the TLS derivation by splitting up the derived key material into secret keys and IVs is problematic.  Can this part of the problem be solved by changing the way TLS derives keys and IVs?
",<C7763F74-94D4-4E18-86FC-F0E70488B5BD@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-05-06 05:32:13
7397,TLS 15+,169,557,Social,,-1,Hi Joe:,<5368DAED.3020000@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2014-05-06 08:51:57
7398,TLS 15+,169,624,"InformationProviding,NeutralResponse,NeutralResponse",553,-1,"
In general, an AEAD mode takes as input two strings a and m and a key k,
and authenticates a and m, while encrypting m. If m is the empty string,
this results in an authentication-only mode.",<5368DAED.3020000@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2014-05-06 08:51:57
7399,TLS 15+,169,625,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",624,-1,"
Thus, AEAD modes can be used to provide suitable combinations of
authentication and/or encryption. Examples hereof include the GCM mode
and CCM mode.",<5368DAED.3020000@gmail.com>,rstruik.ext@gmail.com,0.0,0,5,2014-05-06 08:51:57
7400,TLS 15+,169,698,"InformationProviding,Disagreement,NeutralResponse",625,625,"
[Joe] Yes, but I don't think any of the defined cipher suites for AES-GCM or AES-CCM support an authentication-only mode.  If authentication-only support is desired then additional cipher suites would have to be defined.
",<5528AE3F-2483-42EA-949F-E3FC6774A4FC@cisco.com>,jsalowey@cisco.com,0.0,1,3,2014-05-06 15:11:00
7401,TLS 15+,169,718,"InformationProviding,Disagreement,NeutralResponse",698,698,"
If a message consists of 100 bytes of AAD and 0 bytes of plaintext, then the output of an AEAD cipher is the integrity tag over the 100 bytes of AAD and no cipher text.  That's pretty much authentication-only.

Not optimized for that though.

Mike",<53690CB5.1060704@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:24:21
7402,TLS 15+,169,741,"InformationProviding,NeutralResponse,NeutralResponse",718,718,"Sure, but as Joe said, within TLS you would need new ciphersuites for that.
While AES-GCM and AES-CCM in general can do authentication-only, in TLS
currently they can't because there is no way to include the payload in the AAD
and to send it in the clear.

Manuel.",<5369172F.8090102@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:09:03
7403,TLS 15+,169,781,"InformationProviding,Agreement,ProposeAction,Apologising,Agreement,NeutralResponse,Apologising",741,741,"
Ah.  Sorry - didn't understand that was the point being made.   And an
absolutely correct one.

So the crypto is the same, but how its used by TLS would change as TLS
currently defines what part of the message is encrypted and what part is
AAD.  And to do that you'd have to define a variant of the current
suites - OR - define some sort of extension to negotiate this.

*bleah*
",<536918F1.7070502@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 13:16:33
7404,TLS 15+,169,782,InformationProviding,741,741,"
Mike
",<536918F1.7070502@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 13:16:33
7405,TLS 15+,169,812,"InformationProviding,ContextSetting",,-1,"I can not correlate your most recent response to the prior question:
",<20140506162032.AEC6A1ACF7@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-05-06 18:20:32
7406,TLS 15+,169,814,"InformationProviding,Answer,InformationProviding,ContextSetting",430,430,"
I understand this to refer to these cipher suites:
CipherSuite TLS_RSA_WITH_NULL_MD5                  = { 0x00,0x01 };
CipherSuite TLS_RSA_WITH_NULL_SHA                  = { 0x00,0x02 };

which provide authentication PLUS integrity, but no confidentiality.
",<20140506162032.AEC6A1ACF7@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-05-06 18:20:32
7407,TLS 15+,169,816,"InformationProviding,NeutralResponse,InformationProviding",625,625,"
Now this seems to refer to an idea to provide only (initial) authentication,
but no integrity protection of the actual application data (m).
",<20140506162032.AEC6A1ACF7@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-05-06 18:20:32
7408,TLS 15+,169,817,InformationProviding,625,625,"
-Martin",<20140506162032.AEC6A1ACF7@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2014-05-06 18:20:32
7409,TLS 15+,169,860,NeutralResponse,814,814,"
That and about 2 dozen others that are WITH_NULL.
",<53690F62.408@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:35:46
7410,TLS 15+,169,862,"Disagreement,NeutralResponse",816,816,"
Nope.  AEAD ciphers provide integrity protection across the entire
message, plaintext and associated data.  So if the message consists only
of associated data, that associated data data is still protected.

(m) and (a) together are the application data, not solely (m).  (m) is
just the data to be encrypted.

Mike
",<53690F62.408@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:35:46
7411,TLS 15+,169,936,"InformationProviding,ContextSetting",,-1,"In line
",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7412,TLS 15+,169,938,"Question,InformationProviding,ProposeAction,NeutralResponse,Question",553,553,"
Actually, both CCM and GCM support authentication only.  Simply provide
AAD and no plain or cipher text.

But what I probably should have asked was whether we were obsoleting all
of the current integrity only suites (and I think from what I read in
other responses the answer is yes), and if so what we were going to
replace them with?

I don't know that CCM and GCM will be able to fill the existing niches,
and I don't know that the composited AEAD functions make sense for this use.
",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7413,TLS 15+,169,940,"InformationProviding,ProposeAction,NeutralResponse",514,514,"
Note for action:  Provide a generic method for use with composited
functions that's related to the way session keys are derived.
Rationale:  KDFs are *hard* to get right.
",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7414,TLS 15+,169,942,"InformationProviding,ContextSetting,ContextSetting",519,519,"
From the document :
",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7415,TLS 15+,169,943,InformationProviding,519,519,"> AEAD ciphers take as input a single key, a nonce, a plaintext, and
> ""additional data"" to be included in the authentication check, as
> described in Section 2.1 of [RFC5116]
> <http://tlswg.github.io/tls13-spec/#RFC5116>.",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7416,TLS 15+,169,944,"InformationProviding,UnderstandingNegative,NeutralResponse",519,519,"
It's unclear to me that a composited AEAD function will always take a
nonce.  And that the IV from one message to the next will be a simple
increment of an IV field (e.g. if the underlying encryption mode for a
composited AEAD function is something like CBC then the IV really needs
to be more random).

The section in the editors draft 6.2.3.3 uses RFC5116 as its definition
of how an AEAD cipher needs to look, and that was fine as long as there
were other ways of looking at ciphers (stream, block), but its unclear
this section is generic enough to deal with anything except CCM and GCM
style AEAD ciphers.

My point with this section is to remove 5116 language, and abstract the
hell out of the AEAD interface into something that will work with more
than just CCM and GCM.  Or at least I believe this has to be done if all
but AEAD ciphers are being removed.
",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7417,TLS 15+,169,946,"InformationProviding,Answer,Answer",554,554,"
Yup.  I've got a current draft on that.  The issue here is mostly about
how the IV/nonce is generated as a keyed PRNG approach is problematic in
a number of ways.

Mike",<53690B4B.5060507@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2014-05-06 12:18:19
7418,TLS 15+,169,1001,"Question,InformationProviding,Question,Answer",938,938,"It seems to me there should be no problem defining new functions
NULL-HMAC-SHAXXX fitting the the AEAD interface (though the ""E"" would not really
mean encryption) that would do exactly the same as the current NULL ciphersuites.

Am I missing something?
",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7419,TLS 15+,169,1003,"InformationProviding,Answer,NeutralResponse",944,944,"
Not taking a nonce can probably be seen as taking a nonce of length zero. So,
AEAD constructs without nonces would define SecurityParameters.record_iv_length
and SecurityParameters.fixed_iv_length as 0.
",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7420,TLS 15+,169,1005,"InformationProviding,UnderstandingNegative,NeutralResponse,ContextSetting",944,944,"I may be misunderstanding the document, but I'm under the impression that
incrementing the IV (or a field inside it) is only a suggestion. More precisely:
",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7421,TLS 15+,169,1006,InformationProviding,,944,"> Each AEAD cipher suite MUST specify how the nonce supplied to the AEAD
> operation is constructed,",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7422,TLS 15+,169,1007,"InformationProviding,ExtensionOfPrevious","1006,944",944,"
seems to imply an AEAD suite can specify another method.
",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7423,TLS 15+,169,1009,"InformationProviding,Agreement,Agreement,NeutralResponse",944,944,"I agree that we should really make sure that the AEAD interface used covers all
the constructs one might want to use. But right now I don't see where more
generality would be needed.

Manuel.",<53691B7B.3070100@polarssl.org>,mpg@polarssl.org,0.0,0,9,2014-05-06 19:27:23
7424,TLS 15+,169,1064,"InformationProviding,StateDecision,ContextSetting,StateDecision",,-1,"Per the direction below I have made the appropriate edits as a pull request:
https://github.com/tlswg/tls13-spec/pull/44.",<CABcZeBOXo=3sMEyjMUT+MSgoquXgWdYiqyRL7rnRQwoHEER9qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-06-09 09:25:44
7425,TLS 15+,169,1065,"InformationProviding,ProposeAction,ExtensionOfPrevious,ProposeAction,StateDecision",1064,-1,"
I'll merge it in on Wednesday. Please let me know before then if
this seems substantially wrong. As usual, minor editorial issues
can be done by pull requests.",<CABcZeBOXo=3sMEyjMUT+MSgoquXgWdYiqyRL7rnRQwoHEER9qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-06-09 09:25:44
7426,TLS 15+,169,1066,"InformationProviding,InformationProviding",,-1,"
Note that the changes here were a little more involved and left a
few loose ends (e.g. issue #10). I'd like to try to handle any other
loose ends people find as separate issues if possible.",<CABcZeBOXo=3sMEyjMUT+MSgoquXgWdYiqyRL7rnRQwoHEER9qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-06-09 09:25:44
7427,TLS 15+,169,1139,"InformationProviding,InformationProviding",,-1,"The draft was in a sort of halfway state between whether TLSCiphertext
has a fragment that is a selection or just embedding the AEAD elements
directly.  This should normalize it to the embedded view without the
extra GenericAEADCipher struct definition.",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7428,TLS 15+,169,1140,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
(i don't think this changes the logic of the draft at all)
draft-ietf-tls-tls13.md | 25 +++++--------------------
1 file changed, 5 insertions(+), 20 deletions(-)",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7429,TLS 15+,169,1141,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
This is https://github.com/tlswg/tls13-spec/pull/45",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7430,TLS 15+,169,1142,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
diff --git a/draft-ietf-tls-tls13.md b/draft-ietf-tls-tls13.md
index 2c21189..2a7f244 100644
--- a/draft-ietf-tls-tls13.md
+++ b/draft-ietf-tls-tls13.md
@@ -985,7 +985,7 @@ of {{RFC5116}}. The key is either the client_write_key or the server_write_key.
opaque nonce_explicit[SecurityParameters.record_iv_length];
aead-ciphered struct {
opaque content[TLSPlaintext.length];
+           } fragment;
} TLSCiphertext;",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7431,TLS 15+,169,1143,"InformationProviding,ExtensionOfPrevious",1142,-1,"
type
@@ -1000,19 +1000,10 @@ length",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7432,TLS 15+,169,1144,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ExtensionOfPrevious","1143,1144",-1,"
fragment
: The AEAD encrypted form of TLSPlaintext.fragment.
-{:br }
-       struct {
-          opaque nonce_explicit[SecurityParameters.record_iv_length];
-          aead-ciphered struct {
-              opaque content[TLSPlaintext.length];
-       } GenericAEADCipher;",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7433,TLS 15+,169,1145,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1144,-1,"
Each AEAD cipher suite MUST specify how the nonce supplied to the AEAD
operation is constructed, and what is the length of the
-GenericAEADCipher.nonce_explicit part. In many cases, it is appropriate to use
+TLSCiphertext.nonce_explicit part. In many cases, it is appropriate to use
the partially implicit nonce technique described in Section 3.2.1 of
{{RFC5116}}; with record_iv_length being the length of the explicit part. In
this case, the implicit part SHOULD be derived from key_block as
@@ -2731,18 +2722,12 @@ This section describes protocol types and constants.
ContentType type;
ProtocolVersion version;
uint16 length;
-        select (SecurityParameters.cipher_type) {
-            case aead:   GenericAEADCipher;
+        opaque nonce_explicit[SecurityParameters.record_iv_length];
+        aead-ciphered struct {
+            opaque content[TLSPlaintext.length];
} fragment;
} TLSCiphertext;",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7434,TLS 15+,169,1146,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1145,-1,"
-    struct {
-       opaque nonce_explicit[SecurityParameters.record_iv_length];
-       aead-ciphered struct {
-           opaque content[TLSPlaintext.length];
-    } GenericAEADCipher;
##  Change Cipher Specs Message",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7435,TLS 15+,169,1147,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",1146,-1,"
struct {
2.0.0",<1403118174-13024-1-git-send-email-dkg@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:02:54
7436,TLS 15+,169,1155,"InformationProviding,Agreement,Agreement,NeutralResponse",1141,1141,"
It looks like a good change to me.  But it's probably not the sort of
thing we need to discuss that much, it's purely editorial.",<CABkgnnWvbXyyf90-10o3VLBxupbVxW8cC-So_PppnUproj+pNQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2014-06-18 12:07:23
7437,TLS 15+,169,1179,"InformationProviding,Agreement,StateDecision,Agreement,StateDecision",1141,-1,"This looks basically sound to me. I'll give it a once-over on github and
assuming
it still looks ok, merge it in.

-Ekr
",<CABcZeBMBE051A9fdYzVgUwJ-KPZ9kgDNq1rZT0EAA3vyBNP-kw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-06-18 12:17:15
7438,TLS 15+,169,1196,"InformationProviding,Agreement,Agreement,NeutralResponse",1155,1155,"
I agree this shouldn't need much discussion.  i posted it to the list
here because there was no feedback in 6 days after submitting the
initial pull request.

--dkg",<53A1E68A.9060004@fifthhorseman.net>,dkg@fifthhorseman.net,0.0,0,2,2014-06-18 15:20:42
7439,TLS 15+,169,1231,"InformationProviding,NeutralResponse,NeutralResponse",1196,1196,"
That was just me doing batch processing :)

-Ekr
",<CABcZeBO-6b_HOjGQ3GETaGromVJbv6NGPXbg_-RuqcSkbP2usQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-06-18 12:26:15
7440,TLS 15+,170,0,Social,,-1,"Hithere,",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7441,TLS 15+,170,50,"InformationProviding,InformationProviding",,-1,"
While looking into leveraging early data, it occurred to me that the
actual effectiveness of 0-RTT is going to be highly dependent on
implementationdetails.",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7442,TLS 15+,170,51,"ContextSetting,InformationProviding,ContextSetting",,-1,"
In section 2.3 (Zero-RTT Data) -tls13-21 [1], the first sentence says
""TLS 1.3 allows clients to send data on the first flight (""early data"")""
which I initially interpreted as ""you can send data in the
ClientHelloitself.Part of figure 4 (reproduced below), seemed to confirm
my perceptionthat Application Data is indeed in the ClientHello msg:",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7443,TLS 15+,170,52,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
ClientHello
+ early_data
+ key_share*
+ psk_key_exchange_modes
+ pre_shared_key
(Application Data*)",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7444,TLS 15+,170,53,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
Alas, upon experimentation (using latest OpenSSL), we've observed that
our early data (no matter how small) gets shipped in a separate TCP
packet after the TCP packet containing the ClientHello. This becomes a
significant performance hit when the underlying network stack uses
something like the Nagle algorithm (or similar [2]) because the TCP
packet with early data will only be sent *after* a server TCP ACK (for
the ClientHello) has been received by the client. So much for zero
roundtrip in that case.",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7445,TLS 15+,170,54,"InformationProviding,InformationProviding",,-1,"
It is not a lot of effort to modify the OpenSSL client (and server) to
not delay the early data TCP packet but it something not everyone will
be comfortable doing, esp. in an enterprise setting.",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7446,TLS 15+,170,55,"InformationProviding,InformationProviding",,-1,"
Looking into the data structure of ClientHello, I could not find a place
to put early data either: the ClientHello early_data extension can only
contain an empty EarlyDataIndication structure.",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7447,TLS 15+,170,56,"Question,Question,InformationProviding",,-1,"
I wonder what was the rationale for not allowing the early_data
extension to contain actual data?
Was the intent to preserve protocol cleanliness? i.e., ClientHello is a
handshake protocol message and the early data is a Record protocol message?",<72964498-cbde-2bb1-75fa-cf8d2551e8aa@levangong.org>,hubert@levangong.org,0.0,0,57,2017-08-11 14:56:03
7448,TLS 15+,170,144,"Disagreement,NeutralResponse,InformationProviding,Disagreement",52,52,"
No, it's not. That's the meaning of the phrase ""first flight"" as opposed to
""in the ClientHello""
",<CABcZeBO4R-CtvmHdqfvNCv3qO5b_z_kCnMwvASNBc3qOzzoweQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-08-11 15:34:45
7449,TLS 15+,170,146,"NeutralResponse,InformationProviding,Disagreement",54,54,"
This seems like a not that appropriate test: anyone who is doing 0-RTT
really needs to know what they are doing (for reasons the draft lays out in
pretty excruciating detail) and should at least be capable of managing
their writes to TCP. It's not like they're using s_client.
",<CABcZeBO4R-CtvmHdqfvNCv3qO5b_z_kCnMwvASNBc3qOzzoweQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-08-11 15:34:45
7450,TLS 15+,170,147,InformationProviding,54,54,"
Looking into the data structure of ClientHello, I could not find a place to",<CABcZeBO4R-CtvmHdqfvNCv3qO5b_z_kCnMwvASNBc3qOzzoweQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-08-11 15:34:45
7451,TLS 15+,170,149,"Answer,InformationProviding,Answer",56,56,"
Amongst other things. In particular, we wanted to enable streaming of early
data and then it obviously can't be part of the ClientHello, unless you
want to allow it in two places. We actually did have some support for this
kind of thing in early versions but it was really hard to reason about and
implement.

-Ekr
",<CABcZeBO4R-CtvmHdqfvNCv3qO5b_z_kCnMwvASNBc3qOzzoweQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-08-11 15:34:45
7452,TLS 15+,173,18,"InformationProviding,ContextSetting,InformationProviding",,-1,"Brian Smith posted an RFE to GitHub a few months ago requesting ""A mechanism is needed to indicate that a session will not be resumed"":
https://github.com/tlswg/tls13-spec/issues/137",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7453,TLS 15+,173,19,"InformationProviding,ExtensionOfPrevious",18,-1,"
The goal is to provide a simple way for either endpoint to request that the master secret be forgotten ASAP to provide a greater assurance of confidentiality.",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7454,TLS 15+,173,20,"InformationProviding,StateDecision,ExtensionOfPrevious",19,-1,"
I've written up a short proposal with idea about how I'd suggest going about this:
https://github.com/tlswg/tls13-spec/compare/master...davegarrett:resetnotify",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7455,TLS 15+,173,21,"InformationProviding,ExtensionOfPrevious",20,-1,"
The idea is to simply add a new ""reset_notify"" alert (generally a warning) which may be sent by either endpoint as soon as record protection is available, after which both endpoints would stop caching shared secrets after completion of traffic key completion. This could be sent right from the start, at the end of a connection just prior to a standard ""close_notify"", or at any point in between.",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7456,TLS 15+,173,22,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",21,-1,"
This seems like a simple route that does what is specified in issue #137 without the creation of any new extensions or messages; just one new alert value.",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7457,TLS 15+,173,23,"Question,Question",,-1,"
Comments? Suggestions? Any reason this would break everything?",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7458,TLS 15+,173,24,"InformationProviding,InformationProviding",,-1,"
No PR yet. Just a WIP branch to spec out the idea, so far.",<201507180037.56413.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 00:37:55
7459,TLS 15+,173,93,"InformationProviding,Disagreement,ProposeAction,Answer",23,23,"
I don't think this is that useful or practical with the current structure
of TLS 1.3.

- Unless I've missed something, this is primarily an issue of PFS for the
original
connection, since compromise of either endpoint probably allows
impersonation
attacks going forward.

- Because the resumption master secret is cryptographically independent
of the master secret that initiated the connection, its existence in the
server's
database or in a ticket isn't a threat to the originating connection.

- The server can opt not to allow resumption by declining to provide
a NewSessionTicket message.

-  The client has the option of never initiating a new connection with the
provided ticket (assuming that the server opts to supply one). Note
also that because the ticket is encrypted with the original traffic keys,
if the client never tries to resume the connection, the ticket never
appears on the wire (which is relevant for self-encrypted tickets, but
not so much for tickets which are database lookup keys).

- Because many implementations use self-encrypted  tickets, it's not
practical
to require   them to delete keying material once it's been established.
Once such
a ticket has been transmitted on the wire, the server can't really
forget it
without deleting the ticket encryption key (it can of course mark the
ticket invalid in some local database, but that doesn't reduce the risk
from compromise of the ticket encryption key.)

-Ekr",<CABcZeBMv693fqYenRH9ix6zXpxFUtwPEq+wxCc3gKpDUxY97eQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-17 21:50:40
7460,TLS 15+,173,149,"InformationProviding,NeutralResponse,NeutralResponse",93,93,"
Ok, it looks like this late night idea isn't really needed anymore for at least this set of use-cases.
",<201507180136.23158.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 01:36:22
7461,TLS 15+,173,151,"InformationProviding,StateDecision,NeutralResponse",93,93,"
Ah, so just a simple empty extension would suffice for your main concern. I went with a simple alert to satisfy your 3rd point in the RFE along with 1 and 2.
",<201507180136.23158.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 01:36:22
7462,TLS 15+,173,153,"InformationProviding,StateDecision,NeutralResponse",93,93,"
Ok, then I'll move the other little wording fixes/simplifications in there into my main WIP branch and set this idea aside for the time being. If the ability to easily request an ephemeral TLS session at-will sounds particularly useful to anyone, then we can discuss it further and I could submit a PR.
",<201507180136.23158.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 01:36:22
7463,TLS 15+,173,205,"InformationProviding,ProposeAction,Disagreement,NeutralResponse",21,21,"
This is not really what I was intending when I suggested the feature. I was
intending for their to be an indication, in the ClientHello, that the
server should not do any of the work that it would normally do to make the
session resumable. That is, the server MUST NOT create a session ticket,
and the server MUST NOT add the connection to any session cache, the server
SHOULD forget the epheneral (EC)DHE key and master secret ASAP during
handshaking. (And, so should the client.)

An alert like you suggest may be useful for some cases, but it wouldn't be
useful for what I was suggesting because it would occur after the server
has already done all the things to cache a session that add needless risk
and waste resources when the client has no intention of resuming the
connection.

In the context of web browsers, I believe that the Tor Browser would prefer
to have this, since it disables session resumption to prevent the leaking
of the tracking identifier inherent in it. It would also be useful for any
(non-browser) application for which a 1-RTT handshake per connection is
good enough, which is probably most applications, especially many
server-to-server applications.
",<CAFewVt72efH+9qYzCSBh1heM7N9Ki-6VrVxbAc0=4UcSf5XbVg@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-07-18 01:06:33
7464,TLS 15+,173,208,"InformationProviding,Agreement,Disagreement,Agreement,Disagreement","205,21",-1,Brian's description makes much more sense to me than Dave's suggestion.  I'd +1 the former and -1 the latter.,<c91664bb0cb24b3da95662dc5bb9095a@ustx2ex-dag1mb2.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2015-07-18 18:21:49
7465,TLS 15+,173,227,"InformationProviding,StateDecision,NeutralResponse,StateDecision",205,150,"
Ok, I might as well write up the generic solution then:

https://github.com/tlswg/tls13-spec/compare/master...davegarrett:sessionrequest

This is an extension to allow a client to optionally request a specific session ticket lifetime. It can request a zero lifetime to disable session resumption and have the server not cache anything, request a max uint32 lifetime to request the maximum lifetime the server is willing to offer (up to the server if it wants to allow a longer lifetime than default), or request any specific lifetime (again, honoring is optional).

The extension is just a single uint32 value; including overhead, this is a total of 8 bytes.
",<201507181428.40766.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-18 14:28:40
7466,TLS 15+,173,248,"Question,Disagreement,Question,NeutralResponse",227,227,"
Are the features besides ""don't bother making resumable session, I won't
resume."" needed?

E.g. For what would client hinting session lifetime be useful for?
",<20150719125016.GA17542@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-19 15:50:16
7467,TLS 15+,173,249,InformationProviding,227,227,"
-Ilari",<20150719125016.GA17542@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-07-19 15:50:16
7468,TLS 15+,173,295,"Question,InformationProviding,Disagreement,UnderstandingNegative,Question,Answer,NeutralResponse",248,-1,"I'm not seeing a lot of value here. Remember that servers are not
required (and have never been required) to do session resumption, but
much of the overhead of doing it (having to have a database, session
ticket machinery) is associated with being willing to do session
resumption at all, so if a small fraction of clients would tell
you that they're not interested in resumption, it's not clear that
buys you much.

Are there any server operators who think this is a useful feature
and can explain why?

-Ekr
",<CABcZeBMDujpLqQBtsWG+vutVM8V3g69Ys0_teZ4or=dU-uRwNQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 14:56:22
7469,TLS 15+,173,322,"InformationProviding,Answer,Answer",295,295,"
These days, I'm operating servers that only support session tickets
(no server-side cache).  If the client does not send the session
ticket extension, no session is cached.

So for servers that elect the same strategy, there's no need for
a separate means to signal the client's intentions.

Viktor.",<20150719171657.GL28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 17:16:57
7470,TLS 15+,173,369,"InformationProviding,UnderstandingNegative,NeutralResponse",322,322,"
First, I think that there should be only one way to do resumption in TLS
1.3 anyway. All I'm asking for is that the client have some way of
indicating whether or not it supports resumption. Viktor's method seems
fine with me.

Maybe I'm misunderstanding, but it looks like the current TLS 1.3 draft
actually contains a regression here. It seems like it is no longer possible
for the server to indicate how long a PSK should be held by the client to
resume a session, and it seems like it is no longer possible for the server
to indicate that it doesn't support resumption.

I don't know that the lifetime hint is valuable, but being able to reduce
attack surface by being disabling resumption for a session seems clearly
useful. See https://www.secure-resumption.com/, CVE-2014-1490 in
Firefox/NSS, and CVE-2015-1791 in OpenSSL, which show that it can be useful
to avoid resumption in many cases.
",<CAFewVt7qc6pE_NNdO16FOAhohD=YCmiX1VmSYgpHzbjqtxJevw@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-07-19 16:17:10
7471,TLS 15+,173,425,"InformationProviding,NeutralResponse,NeutralResponse",369,369,"
Not unless I've made a mistake. NewSessionTicket contains a lifetime_hint
value.

http://tlswg.github.io/tls13-spec/#rfc.section.6.3.12
",<CABcZeBPT2RZe1nR5hZCxSgO+GoHoYAPpmuV7FucZrX6TyRB-qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:26:45
7472,TLS 15+,173,426,"InformationProviding,ExtensionOfPrevious",369,369,"
and it seems like it is no longer possible for the server to indicate that",<CABcZeBPT2RZe1nR5hZCxSgO+GoHoYAPpmuV7FucZrX6TyRB-qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:26:45
7473,TLS 15+,173,427,"InformationProviding,NeutralResponse,NeutralResponse",369,369,"
Well, it can't indicate it, but if it doesn't supply a session ticket,
there's no way for
the client to do it.

-Ekr",<CABcZeBPT2RZe1nR5hZCxSgO+GoHoYAPpmuV7FucZrX6TyRB-qQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:26:45
7474,TLS 15+,173,471,"InformationProviding,Disagreement,UnderstandingNegative,Question,NeutralResponse,ClarificationElicitation",427,427,"
Great. I was misunderstanding. Here's the part that is not is still not
clear to me: Is the SessionTicket extension still to be used or not? It
seems not, AFAICT. If the SessionTicket extension were to be used, then
everything would work perfectly as Viktor suggested in his message: the
absense of the SessionTicket extension in the ClientHello would be the way
that a client can indicate that it doesn't want the session to be cached.

It seems weird that the server can supply a lifetime hint but the client
can't, especially in cases like WebRTC where there is no functional
difference between the two. But, that's a smaller issue than the lack of an
indication that resumption machinery isn't wanted at all.
",<CAFewVt7tuJBpKggc2MND4m_LxLHb+iGupOAVAKRJBRPZMDVo3g@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-07-19 16:40:15
7475,TLS 15+,173,528,"InformationProviding,Answer,NeutralResponse",471,471,"
No, it's not used.
",<CABcZeBNpvf-rqYeevWxErhe3Queq76+jmvXZFssoDu7quNah_Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:49:10
7476,TLS 15+,173,529,InformationProviding,471,471,"
It seems weird that the server can supply a lifetime hint but the client",<CABcZeBNpvf-rqYeevWxErhe3Queq76+jmvXZFssoDu7quNah_Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:49:10
7477,TLS 15+,173,531,"InformationProviding,Disagreement,Disagreement,NeutralResponse,ContextSetting",471,471,"
I don't think it's *that* odd, since tickets have at least two fundamental
asymmetries:

- The client needs to actually keep state and the server does not
(that being the point of tickets)
- The client (because they speak first) gets to offer the ticket for
resumption and the server can accept it or reject it.

-Ekr",<CABcZeBNpvf-rqYeevWxErhe3Queq76+jmvXZFssoDu7quNah_Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 22:49:10
7478,TLS 15+,173,550,"InformationProviding,NeutralResponse",528,528,"
This draft spec explicitly obsoletes RFC 5077. (listed up top)
https://tools.ietf.org/html/rfc5077#section-3.2
",<201507191658.02625.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-19 16:58:02
7479,TLS 15+,173,569,"InformationProviding,NeutralResponse,Disagreement,NeutralResponse",550,550,"
However, part of RFC 5077 remains applicable:

https://tools.ietf.org/html/draft-ietf-tls-tls13-07#section-6.3.11

The ticket itself is an opaque label.  It MAY either be a
database lookup key or a self-encrypted and self-authenticated
value.  Section 4 of [RFC5077] describes a recommended ticket
construction mechanism.

Viktor.",<20150719210940.GR28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:09:41
7480,TLS 15+,173,611,"InformationProviding,ProposeAction,UnderstandingNegative,Disagreement,NeutralResponse",531,531,"
It depends on how the server implements tickets. The server could implement
tickets the same way that it implements session ID-based resumption. That's
not a good idea, but I don't think the spec should prohibit that type of
implementation either since it unenforceable. Thus, because of that
possibility, it is valuable to have the client be able to say ""don't cache
the session"" and/or limit the session's lifetime, so the client can help
direct the level of forward secrecy for the session. Right now, only the
server has a say in how long a session will be forward-secret.

Note also that the NewSessionTicket extension precedes any application
data, so without a way to prevent an unwanted NewSessionTicket message from
being sent, the client has to waste effort and time to consume the
NewSessionTicket before it can do anything useful.

Anyway, I don't understand why you keep directing your question to server
vendors. The people that would be interested in such a feature are client
software vendors, for client software that wants to control the level of
forward secrecy for a session.
",<CAFewVt7cyF=7yXqYKHE=RK6x3_n8dgV_6fe2LD9-g-WU-z8BeA@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-07-19 17:28:27
7481,TLS 15+,173,652,"InformationProviding,Disagreement,Disagreement,NeutralResponse",611,611,"
I think this is too much complexity, for too little gain.  Servers
will limit the lifetime of local session storage rather severely
to avoid running out of space.
",<20150719214257.GU28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:42:57
7482,TLS 15+,173,654,"InformationProviding,NeutralResponse,NeutralResponse",611,611,"
This is typically much smaller than the server certificate chain,
so the cost saving is marginal.
",<20150719214257.GU28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:42:57
7483,TLS 15+,173,656,"InformationProviding,Agreement,NeutralResponse",611,611,"
I don't think the client would gain much if any control by signalling
a lifetime hint.  With actual session tickets, the key rotation
lifecycle determines the effective forward-secrecy exposure (to
server state compromise before a key is retired) of the ticket,
and no client hint can influence that in any way.

So I agree with Eric that the issue is fundamentally a server-side
issue, modulo the fact that the CPU and bandwidth cost of processing
the unwanted ticket is borne on both sides.

Viktor.",<20150719214257.GU28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:42:57
7484,TLS 15+,173,684,"Question,InformationProviding,ProposeAction,NeutralResponse,ProposeAction,StateDecision",611,611,"
If the general ticket lifetime request route is not needed, here's the simplest route: just don't drop the Session Ticket extension.

https://github.com/tlswg/tls13-spec/compare/master...davegarrett:recycleticketextension

This keeps it with the same semantics for requesting a ticket, thus allowing TLS 1.3 clients to request tickets from both TLS 1.3+ and TLS 1.2 servers with no additional effort. TLS 1.3 sessions would be resumed using the new PSK-based method and TLS 1.2 sessions would be resumed using the old session ticket extension.

Should I submit this as a PR? It seems like the obvious route if all we want is to just keep the ability for a client to not request a ticket. No need to write a new extension at all.
",<201507191812.55108.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-19 18:12:54
7485,TLS 15+,173,731,"ClarificationElicitation,Disagreement,UnderstandingNegative,Disagreement",684,684,"
As I said initially, I'm having trouble seeing why this is particularly
useful.

-Ekr",<CABcZeBN63_DknAPnbrD0RH3xor0RarKbrNqu31SrOQ5d84fHmA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 06:27:46
7486,TLS 15+,173,790,"InformationProviding,Agreement",611,611,"
I don't think that the current spec does so.
",<CABcZeBNArRwpPp9Q5Wjupnhqnw5OssSsmzvpsXNAYJ_Bjfef=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 06:27:42
7487,TLS 15+,173,792,"InformationProviding,NeutralResponse,NeutralResponse,UnderstandingNegative",611,611,"
I think perhaps you have misunderstood the forward secrecy properties of the
current draft. Unlike TLS 1.2 and previous, the current draft has a separate
resumption master secret which is independently derived from the master
secret used for the connection keys in the original connection. This means
that if you don't resume the connection, you have forward secrecy for the
original connection regardless of whether the server stores the session in
the session cache or sends the client a ticket.

-Ekr",<CABcZeBNArRwpPp9Q5Wjupnhqnw5OssSsmzvpsXNAYJ_Bjfef=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 06:27:42
7488,TLS 15+,173,825,"Question,ClarificationElicitation,InformationProviding,ProposeAction,StateDecision,Question,NeutralResponse,ProposeAction",792,792,"
We've got lots of keys and secrets now. Could you please clarify the exact points where these are each to be discarded? If I am understanding it correctly, the master_secret, prior intermediate secrets, and finished_secret are to be discarded as soon as the keys, resumption_secret, and possibly exporter_secret (which currently has no explanation in the doc) are derived, the handshake is finished, and we're ready for application traffic? It would help if you provided a table/chart laying out the timeline of secret & key lifetimes, from derivation to discard. It should state in the spec explicitly what needs to be kept around for how long and require things be discarded as soon as viable.

I think these various values need to be named more consistently in the doc to make searching for them easier. For example, ""resumption_secret"" is used in the computation part but the words ""resumption master secret"" are used when actually using this value. (also noted in issue #191 by Martin Thomson) I've pushed a small PR to correct this case along with a few tweaks that I think makes it a bit clearer.
https://github.com/tlswg/tls13-spec/pull/205

Also, some other questions about various computations:

https://tools.ietf.org/html/draft-ietf-tls-tls13-07#section-7.1
https://tlswg.github.io/tls13-spec/#key-schedule

HKDF(,,,) doesn't seem to be fully defined here, just HKDF-Expand-Label(,,,) which is based on HKDF-Expand(,,) from RFC 5869. Could you please clarify this?

Why is finished_secret derived from extracted static secret instead of master_secret? There's a TODO about changes to use of the master_secret here; could you explain this bit please? (I assume this is a work in progress)

Are there two finished_secret in the event that the client sends a certificate?

The computation of verify_data could probably be moved up to the same section so this is all in the same place. Am I correct in reading that it could be simplified a bit? (e.g. HKDF-Expand-Label(master_secret, finished_label, handshake_hash, L) without the extra HMAC currently defined for verify_data)
",<201507200304.24847.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-20 03:04:24
7489,TLS 15+,173,914,"InformationProviding,Answer,StateDecision,Agreement",825,825,"
Yes, I can do something along these lines.
",<CABcZeBM9c+jBTRfOhJUJDbC3jJ9Uu8Uod3LK4D-RhA9S=51Q_A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 09:10:42
7490,TLS 15+,173,916,"InformationProviding,Answer,Answer",825,825,"
Yes.
",<CABcZeBM9c+jBTRfOhJUJDbC3jJ9Uu8Uod3LK4D-RhA9S=51Q_A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 09:10:42
7491,TLS 15+,173,918,"InformationProviding,Answer,ProposeAction,Answer",825,825,"
The rationale here is that the Finished message also serves to authenticate
the server's ephemeral DH share (when in known_configuration mode) and
because the master secret depends on the ephemeral DH keys, this creates
an odd authentication logic. Hugo can expand on this some more, perhaps.
",<CABcZeBM9c+jBTRfOhJUJDbC3jJ9Uu8Uod3LK4D-RhA9S=51Q_A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 09:10:42
7492,TLS 15+,173,920,"InformationProviding,Answer,StateDecision,Answer,StateDecision",825,825,"
No, this shouldn't be necessarily. You just use the first one. I'll try to
clarify.
",<CABcZeBM9c+jBTRfOhJUJDbC3jJ9Uu8Uod3LK4D-RhA9S=51Q_A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 09:10:42
7493,TLS 15+,173,922,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",825,825,"
See above.

-ekr",<CABcZeBM9c+jBTRfOhJUJDbC3jJ9Uu8Uod3LK4D-RhA9S=51Q_A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-20 09:10:42
7494,TLS 15+,173,1055,"Question,InformationProviding,Agreement,NeutralResponse",918,918,"
​Eric's explanation is correct.
Your question boils down to: Why is finished_secret derived from SS only
and not from ES?

First note that the issue only arises in the known_configuration case since
in other cases ES and SS are the same.
For the known_configuration case there are t
wo important reasons
​ to build on SS and not on ES:
1. Only SS can authenticate the handshake as it is the only element to
involve the server's (semi) static private key.
2. One of the main elements to be authenticated by the server (via the
Finished message) is the ServerKeyShare, thus deriving the key for the
Finished message (i.e. finished_secret) from ES (calculated using
ServerKeyShare) would create a circularity issue in the logic of the
derivation.

Note that the derivation of application keys (and other key material
remaining after the end of the handshake) do involve both SS and ES, but in
that case involving ES is crucial to achieve forward secrecy.
",<CADi0yUMODP-zfmmkRDvKx_-DTVNVMONSa92Bw1kW1+-hgRn27Q@mail.gmail.com>,hugo@ee.technion.ac.il,0.0,0,13,2015-07-20 10:31:15
7495,TLS 15+,173,1086,"InformationProviding,Answer,Thanking,NeutralResponse,Thanking",1055,1055,"
Thanks for the explanation.

Using the master secret could work, but adding the ES isn't productive so using the SS directly makes more sense than mixing SS+ES first.
",<201507201419.37691.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-20 14:19:37
7496,TLS 15+,173,1178,"InformationProviding,Answer,Answer",471,471,"
While we now have

https://tools.ietf.org/html/draft-ietf-tls-tls13-07#section-6.2.4

In TLS 1.2 and below, this functionality was provided by ""session
resumption"" and ""session tickets"" [RFC5077].  Both mechanisms are
obsoleted in TLS 1.3.

at the same time we also have:

https://tools.ietf.org/html/draft-ietf-tls-tls13-07#section-6.3.11

After the server has received the client Finished message, it MAY
send a NewSessionTicket message.  This message MUST be sent before
the server sends any application data traffic, and is encrypted under
the application traffic key.  This message creates a pre-shared key
(PSK) binding between the resumption master secret and the ticket
label.  The client MAY use this PSK for future handshakes by
including it in the pre_shared_key extension in its ClientHello
(Section 6.3.1.5.4) and supplying a suitable PSK cipher suite.

struct {
uint32 ticket_lifetime_hint;
opaque ticket<0..2^16-1>;
} NewSessionTicket;

ticket_lifetime_hint
Indicates the lifetime in seconds as a 32-bit unsigned integer in
network byte order.  A value of zero is reserved to indicate that
the lifetime of the ticket is unspecified.

ticket
The value of the ticket to be used as the PSK identifier.

and

https://tools.ietf.org/html/draft-ietf-tls-tls13-07#section-6.3.1.5.4

The pre_shared_key extension is used to indicate the identity of the
pre-shared key to be used with a given handshake in association with
a PSK or (EC)DHE-PSK cipher suite (see [RFC4279] for background).

opaque psk_identity<0..2^16-1>;

struct {
select (Role) {
case client:
psk_identity identities<0..2^16-1>;

case server:
psk_identity identity;

} PreSharedKeyExtension;

identifier
An opaque label for the pre-shared key.

So indeed it is no longer possible for the client to signal the
ability/desire to resume sessions, and servers will generate session
tickets absent any indication that the client intends to use them.

This does not impose a space penalty on the server, but some CPU
and bandwidth may be wasted on clients that don't or can't resume.
",<20150719210356.GQ28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:03:56
7497,TLS 15+,173,1180,"InformationProviding,Answer,NeutralResponse",471,471,"
In the current 1.3 draft, there is indeed no client signal.
",<20150719210356.GQ28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:03:56
7498,TLS 15+,173,1182,"InformationProviding,Answer,NeutralResponse",471,471,"
The client lifetime is not that useful with session tickets anyway,
whether the client caches at all, could be, but it is not clear
that the resulting ""inefficiency"" needs to be fixed.  The fix would
be for the client to send an empty extension of some sort to signal
its desire to elicit a session ticket.

Viktor.",<20150719210356.GQ28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:03:56
7499,TLS 15+,173,1300,"Question,InformationProviding,Agreement,Question,Agreement",1178,1178,"
Yes.

So my question is whether there are an appreciably large number of servers
each of which have an appreciably large fraction of *both* caching and
non-caching clients to make an optimization like this worthwhile (servers
which only have non-caching or only caching clients can just send
or not send a ticket as appropriate)

-Ekr
",<CABcZeBPsvYumumz5F5rc1mo+KJuwGutmuFrUz30STYVt8CtG+Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-07-19 23:10:42
7500,TLS 15+,173,1333,"InformationProviding,Answer,ProposeAction,Answer",1300,1300,"
Such a mixture of clients is not at all uncommon with SMTP.  Not
all MTAs implement client-side TLS session caches (no such cache
in Exim or Sendmail).  However, sending a session ticket either
way is not a major burden for SMTP servers.  It would however be
nice to not waste resources doing so, if an appropriate extension
(say the existing one) were used to signal client support.

This is not an absolutely compelling argument in favour of client
signalling, more of an observation that it could be useful.

Viktor.",<20150719213520.GT28047@mournblade.imrryr.org>,ietf-dane@dukhovni.org,0.0,0,1,2015-07-19 21:35:20
7501,TLS 15+,173,1346,"Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse",1182,1182,"
Why is the SessionTicket TLS Extension being deprecated at all? Sure, obsolete the RFC, but include the same extension in the TLS 1.3 spec with the same semantics for requesting a ticket from the server (0-length to request). This could be backwards compatible easily enough.
",<201507191714.14645.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2015-07-19 17:14:14
7502,TLS 15+,174,31,"InformationProviding,InformationProviding",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security Working Group of the IETF.",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7503,TLS 15+,174,32,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-11.txt
Pages           : 115
Date            : 2015-12-28",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7504,TLS 15+,174,33,"InformationProviding,InformationProviding",,-1,"
Abstract:
This document specifies Version 1.3 of the Transport Layer Security
(TLS) protocol.  The TLS protocol allows client/server applications
to communicate over the Internet in a way that is designed to prevent
eavesdropping, tampering, and message forgery.",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7505,TLS 15+,174,34,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7506,TLS 15+,174,35,"InformationProviding,InformationProviding",,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-11",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7507,TLS 15+,174,36,"InformationProviding,InformationProviding",,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-11",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7508,TLS 15+,174,37,"InformationProviding,ExtensionOfPrevious",35,-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7509,TLS 15+,174,38,"InformationProviding,InformationProviding",,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<20151228193446.28197.26273.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2015-12-28 11:34:46
7510,TLS 15+,175,0,Social,,-1,"Hello,",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7511,TLS 15+,175,48,"InformationProviding,InformationProviding",,-1,"
Looking at the history of TLS implementation attacks we see that many
result from the standard not strictly enough prescribing behavior,
particularly of the state machine. This draft does not actually fix
this problem, but continues to present example flows without
explicitly requiring them to be the only possible flows.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7512,TLS 15+,175,49,"Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction",,-1,"
For example, consider HelloRetryRequest. Do servers only send one of
these per connection, or can it be resent multiple times? Obviously
there is a DoS possibility here, but I do not see where this behavior
is explicitly defined. I think we should require that the server only
ever sends one HelloRetryRequest, and then terminates the connection
if the ClientHello is unacceptable. At no point is it stated that only
the example flows should be supported. I would prefer more clarity
about what messages are to be expected when, especially with alerts.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7513,TLS 15+,175,50,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
ECDSA cannot be used with x25519 or x448, but the draft seems to
require support in TLS 1.2 for this as a consequence of its
description of the fallback mode. The mandated use of uncompressed
points invites easy wrong-curve attacks: mandating support and use for
compressed points would solve this problem. I think at minimum we
should fix the text to make clear what we mean about TLS 1.2.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7514,TLS 15+,175,51,"InformationProviding,InformationProviding,UnderstandingNegative",,-1,"
ALPN, resumption, and 0-RTT remain problematic. For instance we see
that 0-RTT data is sent with the same ALPN state when the PSK was
derived, but this could be different from the ALPN transmitted and
negotiated during the handshake, which is explicitly allowed later in
the document. I do not understand what is supposed to happen in this
scenario.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7515,TLS 15+,175,52,"InformationProviding,InformationProviding,ProposeAction",,-1,"
Appendix B removes the text about upper-layer protocol interactions
with 0-RTT I provided, merely discussing the API. I think this is a
mistake: how 0-RTT should be used safely depends on the upper-layer
protocol, and can be complex. API guidance is not enough.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7516,TLS 15+,175,53,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
There is still a note about needing a channel binding mechanism in the
text. I think this should be resolved soon so it can be analyzed,
probably built on top of the exporter mechanism. Either that, or we
consciously punt and remove the note and replace with something else.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7517,TLS 15+,175,54,"ProposeAction,InformationProviding",,-1,"
As for process, I support the idea of having a last call on November
20th, and then completing the security analysis by January 20th (or
whatever date was decided). This will prevent a flurry of changes
potentially breaking things.",<CACsn0ckbKRRy0sQ+i8bNLSqh-mqAb0UMHY13CyzmonGj8cL-qQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-10-31 11:41:46
7518,TLS 15+,175,110,"NeutralResponse,InformationProviding,NeutralResponse",50,50,"
Just as note: Point compression does not completely fix wrong-curve
attacks.

The reason is that for Weierstrass curves and the usual square square
root algorithm, the ""square roots"" for QNRs, if the code does not check,
don't result points on the twist, but all sorts of strange points, on
variety of different curves.

(With one-coordinate Montgomery ladder on montgomery curves, the invalid
points all map to the twist, which is a single curve and can be arranged
to have a large prime factor in its order).

Oh, and thanks to different message order in TLS 1.3 compared to TLS
1.2, wrong-curve attacks look more exploitable.
",<20161031192813.GB23357@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-31 21:28:13
7519,TLS 15+,175,112,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",51,51,"
Well, the spec prohibits accepting 0-RTT data if ALPN does not match,
but this looks bit error prone to me.

I proposed forcing the ALP to the previous value, and not allowing it
to be negotiated via any method. This would eliminate this sort of
edge case check.
",<20161031192813.GB23357@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-31 21:28:13
7520,TLS 15+,175,114,"NeutralResponse,ProposeAction,InformationProviding,NeutralResponse",53,53,"
I think this is a replacement for the tls-unique channel binding. While
the definition of tls-unique does still make sense for TLS 1.3, the
definition has security problems with TLS 1.2.

Thus, need for replacment.
",<20161031192813.GB23357@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-31 21:28:13
7521,TLS 15+,175,115,InformationProviding,53,53,"
-Ilari",<20161031192813.GB23357@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2016-10-31 21:28:13
7522,TLS 15+,175,251,"Thanking,Thanking",,-1,"Watson,

Thanks for your comments!
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7523,TLS 15+,175,253,"Question,InformationProviding",48,48,"
For example, consider HelloRetryRequest. Do servers only send one of",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7524,TLS 15+,175,255,"Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision",49,49,"
The server is forbidden to send multiple HRRs and the client is required
to enforce it. See:

https://tlswg.github.io/tls13-spec/#hello-retry-request

I agree that we don't require the server to behave this way. I can fix the
draft to say this.
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7525,TLS 15+,175,256,InformationProviding,49,49,"
At no point is it stated that only",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7526,TLS 15+,175,258,"Question,Agreement,Disagreement,NeutralResponse,Question,InformationProviding,Agreement,Disagreement",49,49,"
Actually the text does say something here:
https://tlswg.github.io/tls13-spec/#handshake-protocol

""Protocol messages MUST be sent in the order defined below (and shown in
the diagrams in Section 2
<https://tlswg.github.io/tls13-spec/#protocol-overview>). A peer which
receives a handshake message in an unexpected order MUST abort the
handshake with an “unexpected_message” alert. Unneeded handshake messages
are omitted, however.""

However, this text was also in 5246, so I think there's a fair argument
that it's not strong enough. I'm not quite sure how to make it better.
Suggestions?
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7527,TLS 15+,175,259,InformationProviding,49,49,"
ECDSA cannot be used with x25519 or x448, but the draft seems to",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7528,TLS 15+,175,261,"ClarificationElicitation,Disagreement,Question,InformationProviding,Disagreement",50,50,"
I don't *think* that that's true: can you point to the specific text that
you are concerned with?
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7529,TLS 15+,175,262,InformationProviding,50,50,"
ALPN, resumption, and 0-RTT remain problematic. For instance we see",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7530,TLS 15+,175,264,"Question,NeutralResponse,Question,InformationProviding",51,51,"
Here's the relevant text:
https://tlswg.github.io/tls13-spec/#early-data-indication

""If any of these checks fail [ALPN is in the list above] the server MUST
NOT respond with the extension and must discard all the remaining first
flight data (thus falling back to 1-RTT). If the client attempts a 0-RTT
handshake but the server rejects it, it will generally not have the 0-RTT
record protection keys and must instead trial decrypt each record with the
1-RTT handshake keys until it finds one that decrypts properly, and then
pick up the handshake from that point.""

Is there anything else you'd like to see here?

Appendix B removes the text about upper-layer protocol interactions",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7531,TLS 15+,175,266,"Question,NeutralResponse,Question,InformationProviding",52,52,"
This ended up in the main text:
https://tlswg.github.io/tls13-spec/#zero-rtt-data

""Protocols MUST NOT use 0-RTT data without a profile that defines its use.
That profile needs to identify which messages or interactions are safe to
use with 0-RTT. In addition, to avoid accidental misuse, implementations
SHOULD NOT enable 0-RTT unless specifically requested. Special functions
for 0-RTT data are RECOMMENDED to ensure that an application is always
aware that it is sending or receiving data that might be replayed.""

Is this missing pieces you think we need?
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7532,TLS 15+,175,267,InformationProviding,52,52,"
There is still a note about needing a channel binding mechanism in the",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7533,TLS 15+,175,269,"NeutralResponse,ProposeAction,InformationProviding,ProposeAction",53,53,"
The idea here is that we need a separate draft that just says ""use
exporters with
label X"". I think we remove the note and see if we can get someone to write
that draft.
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7534,TLS 15+,175,270,"InformationProviding,Agreement",53,53,"
As for process, I support the idea of having a last call on November",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7535,TLS 15+,175,272,"Agreement,InformationProviding",54,54,"
That's the idea.

-Ekr
",<CABcZeBOGc0rfEFB8BYwtSw6-EJ5bFav5mLCz4a2T7XXUHN5sDA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2016-10-31 14:28:00
7536,TLS 15+,175,436,"Agreement,NeutralResponse,InformationProviding,Agreement",255,255,"
That sounds good. The more we can turn bugs into ones that violate the
spec, the easier it will be to get them fixed. (Hopefully)
",<CACsn0c=QYM7TZwWFzifYLa0ebsGaKdAVtjJ9XapX6T6HvGiV8w@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 08:45:15
7537,TLS 15+,175,438,"Answer,ProposeAction,Question,InformationProviding,ProposeAction",258,258,"
So I was reading in order, so I saw the diagrams first, which seemed
like examples and then missed this sentence in the draft. Maybe a
sentence in section 2 would help?
",<CACsn0c=QYM7TZwWFzifYLa0ebsGaKdAVtjJ9XapX6T6HvGiV8w@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 08:45:15
7538,TLS 15+,175,440,"Answer,InformationProviding,Answer",261,261,"
It's the interaction between
https://tlswg.github.io/tls13-spec/#negotiated-groups and the
statement that ECDSA needs to be supported with any curve appearing in
the supported_groups extension when negotating a TLS 1.2 hello. We
explicitly call x25519 an elliptic curve there. Yes, I doubt anyone
will end up making an implementation that does this (except by
accident).
",<CACsn0c=QYM7TZwWFzifYLa0ebsGaKdAVtjJ9XapX6T6HvGiV8w@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 08:45:15
7539,TLS 15+,175,442,"Answer,Thanking,InformationProviding,Thanking",266,266,"
Yes, thanks for pointing out where I missed it.",<CACsn0c=QYM7TZwWFzifYLa0ebsGaKdAVtjJ9XapX6T6HvGiV8w@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 08:45:15
7540,TLS 15+,175,444,InformationProviding,266,266,"
""Man is born free, but everywhere he is in chains"".
--Rousseau.",<CACsn0c=QYM7TZwWFzifYLa0ebsGaKdAVtjJ9XapX6T6HvGiV8w@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 08:45:15
7541,TLS 15+,175,457,"NeutralResponse,InformationProviding,NeutralResponse",436,436,"
failure to interoperate >> violate the spec

I know that NSS rejects multiple HRRs.  I expect that Boring does too
(couldn't be bothered to check).  That means you have to be even
lazier than I am with interop testing to make this mistake :)",<CABkgnnXXesHQVbsCRFFg1NQKBHcBL42tx9qanaG0uq6j=MVCEQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-11-02 15:30:39
7542,TLS 15+,175,479,"NeutralResponse,InformationProviding,NeutralResponse",457,457,"
A conforming client will not produce Client Hellos that trigger
multiple HRRs: it will listen the first time.
",<CACsn0c=tXjfVQ=p_rp9qv9dA=guO7GpfDtQF-WZ35tDbmc97wg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 21:57:19
7543,TLS 15+,175,480,"InformationProviding,ExtensionOfPrevious",457,457,"
""Man is born free, but everywhere he is in chains"".
--Rousseau.",<CACsn0c=tXjfVQ=p_rp9qv9dA=guO7GpfDtQF-WZ35tDbmc97wg@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2016-11-01 21:57:19
7544,TLS 15+,175,490,"Agreement,NeutralResponse,InformationProviding,Agreement",479,479,"
Good point. And most clients will elicit none.  I don't know how to
force this one into a failure to interoperate without taking the
approach Adam did with roughtime, and that's a tough call to make.",<CABkgnnUc5gNorYsc5Ov7SPfAdDzDJKeFWMjkrMPWoSBWfmdWCQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2016-11-02 17:04:28
7545,TLS 15+,176,0,InformationProviding,,-1,"Folks,",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7546,TLS 15+,176,40,"ContextSetting,InformationProviding,ContextSetting",,-1,"
I have just submitted draft-02 of TLS 1.3. You can find it at:",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7547,TLS 15+,176,41,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
http://tools.ietf.org/html/draft-ietf-tls-tls13-02",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7548,TLS 15+,176,42,"ExtensionOfPrevious,InformationProviding",41,-1,"
(when it goes up).",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7549,TLS 15+,176,43,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
This is obviously a WIP, but it would be good to get people's review
so we can improve it and discuss in Toronto.",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7550,TLS 15+,176,44,"ContextSetting,InformationProviding,ContextSetting",,-1,"
Here is a list of the major changes:",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7551,TLS 15+,176,45,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
- Increment version number
- Reworked handshake to provide 1-RTT mode.
- Remove custom DHE groups
- Removed support for compression.
- Removed support for static RSA key exchange
- Removed support for static DH key exchange
- Removed support for non-AEAD ciphers",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7552,TLS 15+,176,46,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",45,-1,"
Note that not all the changes here have had WG consensus declarations,
but they reflect my sense of the WG discussion.",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7553,TLS 15+,176,47,"ProposeAction,InformationProviding,ProposeAction",,-1,"
If you find something that you think is wrong, please raise those
topics on the list.",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7554,TLS 15+,176,48,"ContextSetting,ProposeAction,InformationProviding,ProposeAction",,-1,"
For editorial or minor issues, it's easier if you file an issue or
send me a pull request.  As always, the current state is on Github at:",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7555,TLS 15+,176,49,"InformationProviding,InformationProviding",,-1,"
Repo:           https://github.com/tlswg/tls13-spec
Editor's draft: https://tlswg.github.io/tls13-spec/",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7556,TLS 15+,176,50,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
As noted above, this is still a WIP, so expect to see more pull requests
proposed resolutions, and issues raised between now and Toronto.",<CABcZeBOrZ3=n9Pvdb4Px2riUdzRej1Cwsbn7osf68Sn0sePMnQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2014-07-07 18:10:05
7557,TLS 15+,177,50,"InformationProviding,ProposeAction,InformationProviding,ProposeAction",,-1,"Adam Roach has entered the following ballot position for
draft-ietf-tls-tls13-vectors-06: No Objection

When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7558,TLS 15+,177,51,"InformationProviding,ProposeAction,InformationProviding",,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7559,TLS 15+,177,52,"InformationProviding,ContextSetting,InformationProviding",,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13-vectors/
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7560,TLS 15+,177,53,"InformationProviding,Thanking,InformationProviding,ContextSetting,Thanking",,-1,"
COMMENT:

Thanks for all the work that went into this document. I think it's very useful
to have a set of test vectors for future implementations to develop against. I
have a couple of minor comments.

§1:
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7561,TLS 15+,177,55,"InformationProviding,Disagreement,ProposeAction,NeutralResponse,ProposeAction",54,-1,"
This doesn't parse. Probably should say ""...through the use of labels..."" or
something similar.
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7562,TLS 15+,177,56,"InformationProviding,ContextSetting",,-1,"
§6:
",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7563,TLS 15+,177,58,"Question,InformationProviding,ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,ProposeAction",57,-1,"
I'm not sure what to make of this. Should it say ""...private RSA keys for this
example..."" or something like that? It may also be useful to include a sentence
or clause explaining why the omitted private key is not useful for users of this
document.",<153299001967.7842.14757350576096250364.idtracker@ietfa.amsl.com>,adam@nostrum.com,0.0,0,1,2018-07-30 15:33:39
7564,TLS 15+,177,74,"InformationProviding,StateDecision,NeutralResponse,StateDecision",53,53,"
The private keys for certificates weren't included (as you noticed,
the key exchange keys are).

Both fixed in https://github.com/tlswg/draft-ietf-tls-tls13-vectors/commit/ca4896c7a3b3cc6d214a1e6fe94b64ba1b1230e8",<CABkgnnWpN6tJ0ATpKnavtGyo8u4kCvZtef8VALwBV7GUZZc53w@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2018-07-31 09:13:20
7565,TLS 15+,177,95,"Thanking,Thanking",74,74,"
Thanks!

/a",<07cac7dd-d518-87d9-a94a-7bd1ec2b0ef3@nostrum.com>,adam@nostrum.com,0.0,0,1,2018-07-30 18:21:51
7566,TLS 15+,179,0,Social,,-1,"Hi all,",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7567,TLS 15+,179,90,"InformationProviding,ContextSetting,ContextSetting",,-1,"
The following reviewers have assignments:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7568,TLS 15+,179,91,"InformationProviding,ExtensionOfPrevious,ContextSetting",,-1,"
For telechat 2018-08-02",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7569,TLS 15+,179,92,"InformationProviding,ExtensionOfPrevious,InformationProviding",,-1,"
Reviewer               Type      LC end     Draft
Elwyn Davies           Telechat  2018-02-26 draft-ietf-anima-autonomic-control-plane-16 *
Wassim Haddad          Telechat  2018-05-21 draft-ietf-v6ops-conditional-ras-05 *",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7570,TLS 15+,179,93,"InformationProviding,ContextSetting",,-1,"
Last calls:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7571,TLS 15+,179,94,"InformationProviding,InformationProviding",,-1,"
Reviewer               Type      LC end     Draft
Vijay Gurbani          Last Call 2018-06-25 draft-ietf-6man-rfc6434-bis-08
Jouni Korhonen         Last Call 2018-07-09 draft-ietf-netmod-acl-model-19
Matthew Miller         Last Call 2018-07-30 draft-sahib-451-new-protocol-elements-01
Pete Resnick           Last Call 2018-07-13 draft-ietf-extra-imap-objectid-03
Ines Robles            Last Call 2018-08-13 draft-york-p-charge-info-08
Meral Shirazipour      Last Call 2018-07-24 draft-ietf-tls-tls13-vectors-06",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7572,TLS 15+,179,95,"InformationProviding,ExtensionOfPrevious",94,-1,"
* Other revision previously reviewed
** This revision already reviewed",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7573,TLS 15+,179,96,"InformationProviding,ContextSetting,ContextSetting",,-1,"
Next in the reviewer rotation:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7574,TLS 15+,179,97,"InformationProviding,InformationProviding",,-1,"
Robert Sparks
Dale Worley
Peter Yee
Jari Arkko
Stewart Bryant
Brian Carpenter
Elwyn Davies
Linda Dunbar
Francis Dupont
Roni Even",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7575,TLS 15+,179,98,"InformationProviding,ContextSetting,ContextSetting",,-1,"
The LC and Telechat review templates are included below:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7576,TLS 15+,179,99,"InformationProviding,ProposeAction,InformationProviding",,-1,"
-- Begin LC Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair.  Please treat these comments just
like any other last call comments.",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7577,TLS 15+,179,100,ExtensionOfPrevious,99,-1,"
For more information, please see the FAQ at",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7578,TLS 15+,179,101,"InformationProviding,ExtensionOfPrevious",100,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7579,TLS 15+,179,102,"InformationProviding,ExtensionOfPrevious",101,-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7580,TLS 15+,179,103,"InformationProviding,ExtensionOfPrevious",102,-1,"
Summary:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7581,TLS 15+,179,104,"InformationProviding,ExtensionOfPrevious",103,-1,"
Major issues:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7582,TLS 15+,179,105,"InformationProviding,ExtensionOfPrevious",104,-1,"
Minor issues:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7583,TLS 15+,179,106,"InformationProviding,ExtensionOfPrevious",105,-1,"
Nits/editorial comments:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7584,TLS 15+,179,107,"InformationProviding,ExtensionOfPrevious",106,-1,"
-- End LC Template --",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7585,TLS 15+,179,108,"InformationProviding,ProposeAction,InformationProviding",,-1,"
-- Begin Telechat Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair. Please wait for direction from your
document shepherd or AD before posting a new version of the draft.",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7586,TLS 15+,179,109,"InformationProviding,ProposeAction,ExtensionOfPrevious",108,-1,"
For more information, please see the FAQ at",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7587,TLS 15+,179,110,"InformationProviding,ExtensionOfPrevious",109,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7588,TLS 15+,179,111,"InformationProviding,ExtensionOfPrevious",110,-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7589,TLS 15+,179,112,"InformationProviding,ExtensionOfPrevious",111,-1,"
Summary:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7590,TLS 15+,179,113,"InformationProviding,ExtensionOfPrevious",112,-1,"
Major issues:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7591,TLS 15+,179,114,"InformationProviding,ExtensionOfPrevious",113,-1,"
Minor issues:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7592,TLS 15+,179,115,"InformationProviding,ExtensionOfPrevious",114,-1,"
Nits/editorial comments:",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7593,TLS 15+,179,116,"InformationProviding,ExtensionOfPrevious",115,-1,"
-- End Telechat Template --",<153140866926.6538.17015799789372121506.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-07-12 08:17:49
7594,TLS 15+,181,0,"InformationProviding,ContextSetting,ContextSetting",,-1,Section 6.3 of draft-ietf-tls-tls13-05 describes the key calculation from the current master secret (MS).  First a key block is computed:,<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7595,TLS 15+,181,19,"InformationProviding,ExtensionOfPrevious,InformationProviding",0,-1,"
key_block = PRF(MS,
""key expansion"",
SecurityParameters.server_random +
SecurityParameters.client_random);",<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7596,TLS 15+,181,20,"InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting",19,-1,"
Then, the key block is divided into keys and IVs:",<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7597,TLS 15+,181,21,"InformationProviding,ExtensionOfPrevious,InformationProviding",20,-1,"
client_write_key[SecurityParameters.enc_key_length]
server_write_key[SecurityParameters.enc_key_length]
client_write_IV[SecurityParameters.fixed_iv_length]
server_write_IV[SecurityParameters.fixed_iv_length]",<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7598,TLS 15+,181,22,"InformationProviding,ExtensionOfPrevious,InformationProviding",21,-1,"
If one wants to implement the cryptographic functions in a Hardware Security Module (HSM), this structure is far from ideal.  In general I would expect the client_write_key and server_write_key to stay inside the protected boundary of the HSM, but the client_write_IV and server_write_IV do not need this protection.  Both of these coming from the same key_block makes this separation very difficult to implement.",<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7599,TLS 15+,181,23,"InformationSeeking,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,Question,ProposeAction",22,-1,"
Can we get these values from different invocations of the PRF?  I'd like to see one invocation for values that are expected to remain secret and a separate invocation for values that do not need to remain secret.",<0694C3DB-FB87-42A2-BCC4-CC0F761E9A03@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2015-04-17 14:59:30
7600,TLS 15+,181,66,"Answer,StateDecision,NeutralResponse",23,-1,"We should defer this issue until we know whether we are generating an IV
at all.

-Ekr
",<CABcZeBOh08+8bz3Wk+xXYp9myVHpk6R70QMWdRjs1h7Y7ghEeQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-17 12:40:25
7601,TLS 15+,181,69,"InformationProviding,ContextSetting,NeutralResponse",66,-1,Note also that this is a known issue.  Mike StJohns raised it previously.,<CABkgnnX-s+T8NHRkJQmx9hicOCkBOSRPh9NxuxgErouZ=NgQqQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-04-17 12:44:59
7602,TLS 15+,181,122,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",69,-1,"
https://github.com/tlswg/tls13-spec/issues/5",<CABkgnnX-s+T8NHRkJQmx9hicOCkBOSRPh9NxuxgErouZ=NgQqQ@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2015-04-17 12:44:59
7603,TLS 15+,181,137,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",66,66,"
The client_write_iv and server_write_iv are needed, and I’m not aware of any contention about them. In AES-GCM they are used for the “salt” value, and the chacha20-poly1305 draft uses the same terminology for a 32-bit fixed part of the nonce that is derived from the key buffer.

This is not the same as the per-record IV that we *are* considering dropping.
",<A1051B9F-8186-4151-A209-D1B9808CEE43@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2015-04-17 23:32:22
7604,TLS 15+,181,163,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,UnderstandingNegative",137,137,"
I think you're misunderstanding what is being discussed. As far as I
know, nobody objects to using the record sequence number in a way that
turns the nonce into a counter. The only thing being debated is
whether client_write_iv and server_write_iv are used. See the actual
pull request [1]. The proposal put forth in that pull request is that
the nonce will consist *only* of the per-record sequence number,
padded with zeros, and without the part that was comprised of
client_write_iv and server_write_iv.
",<CAFewVt4ERdQmWrvPooZ2X4TVLAw62Hzs=0JqCqdzvRBzivds=Q@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2015-04-17 11:18:12
7605,TLS 15+,181,203,"Agreement,InformationSeeking,NeutralResponse,ProposeAction,Agreement,ProposeAction","137,163",-1,"That's correct. Yoav, if you're sad about that, then now is the time to say
that :)

-Ekr
",<CABcZeBM2iMO3BU9VN5pivHRKv++iHWDgkTS4U2ULVcAB9PY_HA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-17 15:14:27
7606,TLS 15+,181,250,"NeutralResponse,NeutralResponse",22,22,"
While if the encryption algorithm is strong, there is no real
difference between public and private nonces (if algorithm is not
strong, then all bets are off), having untrusted parts pick nonces
with non-MR AE (especially something so hair trigger as AES-GCM)
seems like asking for trouble.
",<20150417200000.GA6274@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-17 23:00:00
7607,TLS 15+,181,252,"InformationProviding,Answer,Answer,NeutralResponse",23,23,"
That would certainly work. Note that to implement full TLS, one
already needs to derive ""public"" values out of ""private"" ones.
",<20150417200000.GA6274@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-17 23:00:00
7608,TLS 15+,181,253,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",252,23,"
On another thought, TLS library authors might not appreciate
key expansion being changed (nor KDF changes)...
",<20150417200000.GA6274@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-17 23:00:00
7609,TLS 15+,181,275,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",22,22,"
Weelll... it's far from ideal if you want to use traditional/historic PKCS #11
mechanisms, but since a new PRF will need updated HSM support anyway it
shouldn't be any problem to accommodate it, and now that PKCS #11 is being
managed by OASIS rather than RSADSI/EMC and things have got moving again in
advancing the spec, it shouldn't be that big a deal.  If you look at how
CKM_TLS_PRF works, it's a significant change from how C_DeriveKey() normally
functions that was made in order to accommodate how TLS wants to do things.
For the TLS 2.0 (a.k.a. 1.3) PRF the PKCS #11 folks can make the same
accommodation.  It's an issue for the HSM vendors to adapt, not the TLS spec
to adapt.

Peter.",<9A043F3CF02CD34C8E74AC1594475C73AB000B0C@uxcn10-tdc05.UoA.auckland.ac.nz>,pgut001@cs.auckland.ac.nz,0.0,0,3,2015-04-19 04:22:59
7610,TLS 15+,181,300,Social,,-1,"Hi,
",<CEE16DF6-6D45-4B1C-ABA0-C7A659E728E4@inria.fr>,benjamin.beurdouche@inria.fr,0.0,0,15,2015-04-19 10:27:14
7611,TLS 15+,181,302,"InformationProviding,Agreement,ProposeAction,Agreement,NeutralResponse",275,275,"
I agree with Peter. Anyway, everyone will have to spend some time and money to update their HSMs at some point.
That said, if we can sync all major changes in a batch, we should try to do so.

But in general it should not be our concern, else we can never improve the crypto and the protocol.",<CEE16DF6-6D45-4B1C-ABA0-C7A659E728E4@inria.fr>,benjamin.beurdouche@inria.fr,0.0,0,15,2015-04-19 10:27:14
7612,TLS 15+,181,389,"Disagreement,Disagreement",275,275,"
And that's where we differ I think.",<5533F8D6.9070500@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-19 14:49:58
7613,TLS 15+,181,391,"InformationProviding,Disagreement,ContextSetting,ProposeAction,Disagreement,NeutralResponse",275,275,"
It's not exactly that.   If you go back and look at PKCS11 2.20 , you'll
note that they just placed the TLS/SSL  functionality in by rote -
mainly by hacking the PKCS11 mechanism construct to provide a way of
outputting multiple keys.

There are actually SSL mechanisms:

CKM_SSL3_MASTER_KEY_DERIVE
CKM_SSL3_KEY_AND_MAC_DERIVE
CKM_SSL3_PRE_MASTER_KEY_GEN
CKM_SSL3_MASTER_KEY_DERIVE_DK

And TLS mechanisms

CKM_TLS_PRE_MASTER_KEY_GEN
CKM_TLS_MASTER_KEY_DERIVE
CKM_TLS_KEY_AND_MAC_DERIVE
CKM_TLS_MASTER_KEY_DERIVE_DH
",<5533F8D6.9070500@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-19 14:49:58
7614,TLS 15+,181,392,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",391,275,"
They also handily provided the CKM_TLS_PRF  mechanism which basically
allowed you to extract ANY key stream material from a given master
secret (since all the bytes from a call using this mechanism were
provided nicely packaged in the place specified in the mechanism
structure).  But that was as was requested by TLS implementers and
probably didn't get enough vetting by the security deep thinkers.

CKM_SSL_KEY_AND_MAC_DERIVE, CKM_TLS_KEY_AND_MAC_DERIVE and CKM_TLS_PRF
are insecure in that they allow trivial extraction of material from a
derived key stream.   That is an artifact of multiple things:  how the
TLS KDF function is currently defined, the use of key exporters with out
a model for cryptographic separation; the use of TLS specific functions.
",<5533F8D6.9070500@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-19 14:49:58
7615,TLS 15+,181,393,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",392,275,"
PKCS11 tries to fix the worst of these in the new version when it added
support for TLS1.2: 2.40 deprecates CKM_TLS_PRF, adds a CKM_TLS_MAC
function for signing the finished messages, deprecates
CKM_TLS_KEY_AND_MAC_DERIVE in favor of CKM_TL12_KEY_SAFE_DERIVE. There
is a CKM_TLS12_KEY_AND_MAC_DERIVE, but it comes with a black box
warning.  Its there only because the current AEAD suites require a
source of session nonce information and they get it from the IV production.
",<5533F8D6.9070500@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-19 14:49:58
7616,TLS 15+,181,394,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction",393,275,"
What I would love to see for TLS1.3 is NO TLS specific mechanisms being
added to PKCS11.    That if we still sign the finished message, we use a
true MAC function.  That if we derive keys, we use a bog standard KDF.
That we stomp on every TLS specific twist unless there is a specific
security need to keep TLS secure.

At this point the set of KDFs in PKCS11 is very protocol specific and
constitute a good part of the non-common mechanisms.  Most of the rest
seem to relate to one family or another (e.g. suite b, GOST, etc).  It
would be great if we could pick a standardized KDF of family of KDFs for
the IETF and not go through this again.

Mike
",<5533F8D6.9070500@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-19 14:49:58
7617,TLS 15+,181,416,"InformationProviding,NeutralResponse,Disagreement,NeutralResponse",394,394,"
Not possible. There are features (e.g. extractor and resumption/unique
interaction) that can't be feasibly removed (or even deprecated) and which
need PRF'ing secret keys into public data.

Also, true MAC functions just aren't enough for some places (such as
deriving the various master secrets or unique value).
",<20150420064243.GA7322@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-20 09:42:43
7618,TLS 15+,181,460,"ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,Disagreement,NeutralResponse,UnderstandingNegative",416,416,"
I'm not quite sure how you've come to this conclusion.  The underlying
function for a KDF is generally a MAC function which by definition produces
public data.  It's only when bound into a KDF that it by definition
produces secret data.  The main problem we've encountered is that we use
the same key to produce public (IV) data and private key material.   Fixing
this is more an issue of how to cryptographically isolate products of the
diverse operations in a way that enhances security.

Replacing the current functions with off the shelf ones along with a few
tweaks to the key derivation mixins and key tree can be done without
removing any functionality.

Mike
",<CANeU+ZAL6oT6tP7OcL_8j6kp4oZB9V89R-0PrCdv-N27qVb0HQ@mail.gmail.com>,msj@nthpermutation.com,0.0,0,2,2015-04-20 12:09:56
7619,TLS 15+,181,498,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",460,460,"
Maybe I used bad terminology, but...

There are other places in TLS that fundamentally need to (indirectly) derive
public data out of secret key material.

E.g. extractor and unique/resumption-interaction. There might be others as
well.
",<20150420163755.GA15511@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-20 19:37:55
7620,TLS 15+,181,571,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",498,498,"That's not a a problem. The problem is using the same mechanism to
derive the public data that we use to derive the keys.
It's even OK to use the same secret key for both (from an HSM POV).

What Michael is saying is that there are existing functions for both KDF
(secret material -> key) and Mac (secret material-> unique public data).
He's requesting that TLS not have it's own versions of these functions.

So there are really 3 things being discussed here and there is some
conflation:

1) The use of the same mechanism to create both secret and public data.
This is the most serious issue because there is no work around for
HSM's, today people with access to HSM's can use the existing mechanism
for IV to leak actual keys protected by the HSM.
2) The use of a single mechanism to generate multiple keys (and IVs) in
a single operation. This isn't HSM pain, it's more a PKCS #11 pain. I
think this is more of a 'cleanliness' issue. PKCS #11  may still choose
to provide a single mechanism for performance reasons.
3) The use of yet another KDF and MAC. The world has lots of KDF's and
MAC's out there, we does TLS need another. I'm a bit ambivalent about
this. In an ideal world we would all use the same KDFs rather than
inventing a new one for each protocol. On the other hand TLS is a big
enough fish I don't see a big issue having it's own. I'd rather someone
propose exactly what other KDF TLS would use. Currently I don't support
many KDF's myself, TLS being the main one.

For me 1) is the only show stopper, 2 and 3 are basically bike shedding
(though I admit we are talking some pretty ugly bike sheds;).

bob",<5537D43A.9080802@REDHAT.COM>,rrelyea@redhat.com,0.0,0,47,2015-04-22 10:02:50
7621,TLS 15+,181,598,"Question,InformationProviding,Question,NeutralResponse",571,571,"
So would using two different PRF functions, one for parts that don't
downgrade and another for parts that do downgrade (e.g. IV derivation,
unique / finished calculations, exporter calculations, etc..) solve the
issue?

(Of course, the two functions should be closely related, so not to
annoy software implementations too much)...
",<20150422173526.GA14496@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-22 20:35:26
7622,TLS 15+,181,639,"Question,Question",571,-1,"If we're using HKDF-Extract, can we just key off different labels?

-Ekr
",<CABcZeBPN33DM_C0sAmCTFCTdNrcQ7y7eEBcZgPe+2f1EaxtXzA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-22 13:37:45
7623,TLS 15+,181,733,"InformationProviding,Answer,Answer,NeutralResponse",639,66,"
Basically, no.

The Extract function is really not designed to be used standalone but as
a way of concentrating entropy for input to the expansion phase.  Its
dangerous to talk of these functions as separately callable.  They are
steps not separate functions.

The extract step's only non-key input - salt - is not the same as the
""info"" input used in the expand phase - 'salt' is supposed to be missing
or random,  not a fixed string like a label.

""info"" is where the various labels go and that's only present in the
expand phase.
",<55381302.5030307@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-22 17:30:42
7624,TLS 15+,181,734,"InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",733,66,"
What you want to do is specify as part of the mixins (e.g. 'info' - e.g.
the collection of label and context)  a set of fields that describe 1)
how the key stream is going to be broken up (eg. lengths of the sub
keys), 2) what algorithms will use each of the parts of the key stream,
and 3) whether or not those parts are allowed to be exported/extracted.

A software module will basically ignore these because - really - its all
the same memory although it should really make sure the key lengths and
types matc.  An HSM will look at these and be able to make policy
decisions for protection of the segments (e.g. preventing export of
material that was created to be non-exportable).

Having all of these in the mixins means that the key stream expansion
completely changes if ANY of these mixins change which in turn means
that the various ways you can use to extract truly secret key material
(as differentiated from exportable material) from an HSM using the
currently defined mechanism can be eliminated.  (I can explain my
reasoning if necessary).
",<55381302.5030307@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-22 17:30:42
7625,TLS 15+,181,748,"ProposeAction,Apologising,NeutralResponse,Apologising",639,66,"Sorry, read that as ""HKD-Expand"".",<CABcZeBN1W-KyNnPd9qU9dFP3dG8E=F1hOyK1NoeH-tsQT8XrFw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-22 19:03:05
7626,TLS 15+,181,859,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",748,748,"Actually, use HKDF as the term with no expand or extract suffix.",<553925F7.5010704@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 13:03:51
7627,TLS 15+,181,1107,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",859,859,"
I discussed this extensively with Hugo and Hoeteck and their advice was to
use
them separately in a similar way to what's here (though they suggested a
slightly
different hierarchy which I have to edit in). Perhaps Hugo will weigh in as
to
the reasoning.

-Ekr
",<CABcZeBNx0AvTSXAEfr1pCt-+d_8nztuCZCmVgJ8UxoLtRsfZ1g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 16:07:17
7628,TLS 15+,181,1265,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1107,1107,"
​I've just addressed this issue in an email in the
""confirming the room’s consensus: adopt HKDF PRF for TLS 1.3"" thread
(it's the first point in the list of issues in that email).
",<CADi0yUPahzbqSNwu6t_1=CenK2P737A6c4Rmpa8Y_TG6J1iX+w@mail.gmail.com>,hugo@ee.technion.ac.il,0.0,0,13,2015-04-24 17:36:45
7629,TLS 15+,181,1352,"ClarificationElicitation,NeutralResponse,ProposeAction,ClarificationElicitation,NeutralResponse",734,734,"
In TLS 1.2 P_hash (which underlies TLS PRF), the corresponding field is seed,
right?

So inside that (or whatever the equivalent), serialize:
- Label
- Lengths, types and exportable flags of subkeys
- Context
",<20150423084201.GA21246@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 11:42:01
7630,TLS 15+,181,1353,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",1352,734,"
Properly serializing that would avoid the well-known TLS 1.2 screwup in
PRF defintion (which got copied to ""dh based key exchange"" draft).
",<20150423084201.GA21246@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 11:42:01
7631,TLS 15+,181,1354,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",1353,734,"
One possible structure in TLS notation:

struct prf_output
0x0000 => For key derivation
0x0001 => For AEAD keying
0x8002 => For AEAD IV
0x8003 => For octet string (exporters, unique)
uint16 type;
uint16 length;  /* In bytes. */

struct prf_seed
opaque label<0..65535>
prf_output outputs<4..65532>
opaque context<0..65535>

Fixed expansion is 6 bytes and each subkey is 4 bytes.

The key expansion for AES-256-GCM a'la TLS 1.2 would look like:

00 0d 6b 65 79 20 65 78 70 61 6e 73 69 6f 6e
00 10 00 01 00 20 00 01 00 20 80 02 00 04 80 02 00 04
00 40 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX
XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX
XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX
XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX

Where XX is the random data. One can see this extracts total of 72
bytes.

TLS 1.2 extended master secret with SHA-256 prf-hash looks like:

00 16 65 78 74 65 6e 64 65 64 20 6d 61 73 74 65 72 20 73 65 63 72 65 74
00 04 00 00 00 30
00 20 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX
XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX

Where XX is the session hash up to that point. Output size can be seen
to be 48 bytes.
",<20150423084201.GA21246@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 11:42:01
7632,TLS 15+,181,1355,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction","1354,734",734,"
Also, it occurs to me that if PRF has salt input (like HKDF), one should
stick something non-secret but variable there (e.g. client random, or
suitable handshake hash, or something). Some outputs share a (key,salt)
pair. Keys should be combined by serialization.
",<20150423084201.GA21246@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 11:42:01
7633,TLS 15+,181,1431,"Question,InformationProviding,ClarificationElicitation,NeutralResponse",1353,1353,"
Can elaborate on this?

The DH-based key exchange draft uses HKDF and uses separate
labels for each use of HKDF-Expand so that (for instance) exporters
and key generation have different labels.
",<CABcZeBMcy_C0TWgOfw6480ZV28GTfEsgABf5b9-hKPbRGkTCMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 05:54:02
7634,TLS 15+,181,1433,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1355,1355,"
Based on talking to Hugo, my understanding is that the best way
to do this is by incorporating the handshake hash at the HKDF-Expand
stage, as in:

client_write_key = HKDF-Expand(Secret, ""client write key"" + session_hash,
SecurityParameters.enc_key_length)
",<CABcZeBMcy_C0TWgOfw6480ZV28GTfEsgABf5b9-hKPbRGkTCMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 05:54:02
7635,TLS 15+,181,1435,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1355,1355,"
If you're referring to how we combine (say) the static DH and the ephemeral
DH, what we had discussed was running K1 through HKDF-Extract to
generate PRK1 and then using PRK1 as the salt for HKDF-Extract on
PRK2. I.e.,

PRK1 = HKDF-Extract(0, K1)
PRK2 = HKDF-Extract(0, K2)

-Ekr",<CABcZeBMcy_C0TWgOfw6480ZV28GTfEsgABf5b9-hKPbRGkTCMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 05:54:02
7636,TLS 15+,181,1552,"Answer,NeutralResponse",1431,1431,"
The label+seed thing.
",<20150423110214.GA21716@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 14:02:14
7637,TLS 15+,181,1554,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1433,1433,"
Except that now nothing preturbs the secret extraction. Even HKDF RFC
says things like ""adds significantly to the strength"" and ""strengthening
the analytical results that back[...]design"".

Also, in where I try to work the simplest key derivation that I think
will work at all (supports 0RTT and (DHE-)PSK, but not fixedDH), I have:

master_secret = PRF(premaster_secret, ""TLS1.3 master secret"", hash_1)
client_hs_key = PRF(master_secret, ""Client Key expansion"")
client_app_key = PRF(master_secret, ""Client Key expansion"", hash_5)

hash_1 is hash of unencrypted parts, hash_5 is hash of the entiere
handshake. One can stick hash_1 into client_hs_key derivation if one
wants to (but it is still needed in master_secret).

(the rekeying is to deal with kp attacks from key exchange or if
somebody does dumb things with DTLS).

Also, if it had client_application_master_secret, then derivation
of that would have the hash_5.
",<20150423110214.GA21716@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 14:02:14
7638,TLS 15+,181,1556,"InformationProviding,ContextSetting,ProposeAction,NeutralResponse,ContextSetting",1355,1355,"
Ah, I just remembered what the ""Keys should be combined by serialization.""
meant: If one has multiple keys one needs to feed in, one should serialize
those into a block and then feed that as a key input (not doing things
like feeding secret keys as salts).

The ""Some outputs share a (key,salt) pair."" means that there may be places
where multiple keys are derived at the same point out of the same master key.

E.g. on the thingy I was working on, there are 3 keys using (MS,hash3) and
2 using (MS,hash5). And if there is no client certificate, hash3=hash5.
",<20150423110214.GA21716@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 14:02:14
7639,TLS 15+,181,1558,"InformationProviding,NeutralResponse,NeutralResponse",1435,1435,"
AFAIK, nobody really uses FixedDH. And I think it was Adrei Popov who
described how to do 0RTT in simpler way.

Also, maybe the only interesting application of FixedDH is deniable
key exchange. Except that supporting that would cause major issues
elsewhere (and ""DH based key exchange"" is not deniable).
",<20150423110214.GA21716@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 14:02:14
7640,TLS 15+,181,1667,"NeutralResponse,ProposeAction,NeutralResponse",1552,1552,"
My proposal for HKDF is to have null-terminated labels (in the same
way as for the signing contexts.
",<CABcZeBNPmssXgLW70Kk+v3rELaYbar_rkdDZAexYoshXoDAm-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 16:05:52
7641,TLS 15+,181,1669,"ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse",1554,1554,"
Can you explain what you mean by ""perturbs""? If you include the session hash
it includes the randoms.
",<CABcZeBNPmssXgLW70Kk+v3rELaYbar_rkdDZAexYoshXoDAm-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 16:05:52
7642,TLS 15+,181,1671,"InformationProviding,NeutralResponse,NeutralResponse",1558,1558,"
It's not FixedDH, it's the servers semi-static DH and the client's
ephemeral.

-Ekr
",<CABcZeBNPmssXgLW70Kk+v3rELaYbar_rkdDZAexYoshXoDAm-A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-04-23 16:05:52
7643,TLS 15+,181,1731,"Answer,Answer",1669,1669,"
HKDF RFC seems to essentially say 'if you can use salt, do so'
",<20150424051829.GA3821@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 08:18:29
7644,TLS 15+,181,1733,"ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,ClarificationElicitation,NeutralResponse",1671,1671,"
Which semi-static DH (x client's ephemeral)?
- Current
- Previous (may not be available!)
- Both

For current, the only even semi-sane use I can come up with is server
fixedDH certs (this input not a good place to stick PSKs if one wants
""unified"" something).

For previous, it is useful if 0RTT group can differ from main exchange
group (but server has to signal if this is to be included or not, since
it may not be computable).

(And both for when both of above apply).
",<20150424051829.GA3821@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 08:18:29
7645,TLS 15+,181,1734,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding","1671,1733",1671,"
Also, it occurs to me that trying to stick keying data into non-key
PRF inputs may not be a good idea...

And the signature looks more complicated in draft ""DH based key exchange"",
because the params are in the same message as certificate verify, instead
of separate message (where hash would get it instead of having to be
included separatedly).
",<20150424051829.GA3821@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 08:18:29
7646,TLS 15+,181,1843,"Agreement,Agreement",1352,1352,"
Pretty much.",<55392D3D.1020101@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 13:34:53
7647,TLS 15+,181,1845,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1354,1354,"
I ended up with a bit larger set of key types:

Master Secret (can only be used with KDFs)
AES-CMAC
AES-AEAD
AES-ENCRYPT
HMAC-SHA1
HMAC-SHA2
GENERIC-DATA (different that PKCS11 generic secret - could be IV
material for example).

as a starting point.

It turns out that you want to subdivide AES AEAD uses from non AEAD AES
functions because you don't want to be able to use AES-CTR to get around
the AES-CCM and GCM ""don't let the data come out unless its been
verified"" policy.
",<55392D3D.1020101@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 13:34:53
7648,TLS 15+,181,1914,"Agreement,Agreement",1845,1845,"
Right.
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7649,TLS 15+,181,1915,"InformationProviding,NeutralResponse,NeutralResponse",1845,1845,"
Not used anywhere (insufficient security).
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7650,TLS 15+,181,1916,"Question,ClarificationElicitation,ClarificationElicitation",1845,1845,"
Is there ment to be XXX-AEAD for different encryption algorithms?
Do AES-CCM and AES-GCM share a key type? What about AES-CCM8?
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7651,TLS 15+,181,1917,"InformationProviding,NeutralResponse,NeutralResponse",1845,1845,"
Not used. Encryption always pairs with authentication (AEAD).
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7652,TLS 15+,181,1918,"ClarificationElicitation,InformationProviding,NeutralResponse,ClarificationElicitation",1845,1845,"
A NULL cipher key? That one wouldn't be directly used for anything else.
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7653,TLS 15+,181,1919,"ClarificationElicitation,ClarificationElicitation",1845,1845,"
NULL cipher keys are per algorithm?
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7654,TLS 15+,181,1921,"InformationProviding,NeutralResponse,NeutralResponse",1845,1845,"
This is ""octet string"" above (except IVs are ""AEAD IV"").
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7655,TLS 15+,181,1922,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1845,1845,"
Depending on view, you also need special type for exporter secret, since
it behaves somewhat unlike others.
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7656,TLS 15+,181,1924,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1845,1845,"
As said, encryption always pairs with authentication.
",<20150423175244.GA26942@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-23 20:52:44
7657,TLS 15+,181,2047,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1915,1915,"
For this and the comment below..... I'm not just thinking about TLS.
And I am thinking about how to retrofit this to TLS1.2 which doesn't
require this to be an AEAD function.  And then there's the composed AEAD
suites (e.g. AES-CBC with AES-CMAC wrapped as an AEAD function).   So
while they may not be used by TLS directly, I want to get code points
for all the possibilities.",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7658,TLS 15+,181,2049,"InformationProviding,Answer,ProposeAction,Answer,NeutralResponse,ProposeAction",1916,1916,"
Generally yes for xxx-aead having different types per algorithm. Because
you don't want to (for example) be able to use material for both AES and
say GOST.   For modes, AEAD modes are mostly supersets or combinations
of non-AEAD modes and there's an attempt to enforce ""releasability only
after verification"" type policies on the CCM and GCM modes.   It would
be good to have different codes for CCM and GCM (or even other modes),
but I don't know that adds markedly to security.",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7659,TLS 15+,181,2051,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1917,1917,"
See above - one of the questions is how does a composed AEAD suite
derive subkeys.  Generically it seems to be ""split the stream wherever
you want"" and as noted, that has a few problems.",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7660,TLS 15+,181,2053,"InformationProviding,Answer,NeutralResponse",1918,1918,"
For TLS1.2 and before, being able to tag that you're deriving an
integrity key...  ditto for below.",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7661,TLS 15+,181,2055,"InformationProviding,Disagreement,ContextSetting,ProposeAction,Disagreement,NeutralResponse",1921,1921,"
Not quite. (<begin pedantic mode>  :-) )

One of the problems we have is a lack of common language.  And IV is one
of those that's very slippery.

TLS - incorrectly - called what's being produced by the master secret
expansion an ""IV"".   What it actually was was the ""first IV"" of the
session for cipher suites that included  CBC as a mode and a ""session
nonce"" for suites with counter based ciphers.

An IV is the common data injected by both sender and receiver to ensure
that the same data doesn't encrypt the same way if identical data
happens to occur in the plaintext stream multiple times.  For counter
based ciphers, the IV is used with the block counter to form the block
nonce(s) that (is/are) encrypted to form the XOR key stream.

An counter-based IV  (e.g. for CTR, CCM and GCM) is generally composed
of the concatenation of the session nonce (or as we've been discussing a
fixed length of zeros) plus a per-message value (and we've been
discussing always using the message sequence number as that per-message
value).

Due to the way TLS is constructed, what comes out of the master secret
expansion can only be a ""first IV"" or a session nonce.  It would be
possible to change this so an expansion is done with each message (e.g.
same master secret, different mixins such as the sequence number) to
generate a true per-message IV, but that's expensive and provides little
security benefit.

</pedantic mode>
",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7662,TLS 15+,181,2057,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",1922,1922,"
I think the easiest way to accomplish this is to use a flag saying
whether or not its exportable (generally removable from an HSM) that
gets mixed in.  That way you have the common language of what you want
to generate and then only have to decide on handling criteria.
",<55394191.1050203@nthpermutation.com>,msj@nthpermutation.com,0.0,0,2,2015-04-23 15:01:37
7663,TLS 15+,181,2229,"InformationSeeking,ClarificationElicitation,InformationProviding,ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,ProposeAction,UnderstandingNegative",2057,2057,"[Joe] I've having trouble understanding what exactly you are designing
here, is it the interface to a specific HSM or is it the TLS 1.3 key
derivation or is it something else? I think we need to make sure that we
have the requirements defined for the TLS 1.3 key derivation.

Its not clear to me what the problem is with just including the context
label, session hash and possibly length.   The context label would
differentiate between derived key material for different purposes.  For
example, public and private data would use different context labels.  One
would also probably want to include the cipher suite ID in the context
label for keys derived for encryption.
",<CAOgPGoC4AcoQ1nSoqA20NSqnd1YXt=CTvLj2DVi6DXnxincJjg@mail.gmail.com>,joe@salowey.net,0.0,1,3,2015-04-24 10:13:24
7664,TLS 15+,181,2425,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",2047,2047,"And I am thinking about how to retrofit this to TLS1.2 which doesn't
require this to be an AEAD function.  And then there's the composed AEAD
suites (e.g. AES-CBC with AES-CMAC wrapped as an AEAD function).   So while
they may not be used by TLS directly, I want to get code points for all the
possibilities.",<CACsn0cm2cXgt1==r9DgK5a8ezOFx=4QMtwNB-sEyM17EgihbyQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-04-24 10:28:32
7665,TLS 15+,181,2440,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",2229,2229,"label, session hash and possibly length.   The context label would
differentiate between derived key material for different purposes.  For
example, public and private data would use different context labels.  One
would also probably want to include the cipher suite ID in the context
label for keys derived for encryption.

The issue is the hardware has to enforce the usage of the derived keys. I
think this will restrict our encoding significantly,  perhaps turning it
into some bitfields. Asking hardware to understand context labels is going
to make it not hardware anymore.

Of course, there are other approaches that offer most of the gains without
these costs like separate fixed function terminators, or keeping only a few
keys secret.
",<CACsn0cm2cXgt1==r9DgK5a8ezOFx=4QMtwNB-sEyM17EgihbyQ@mail.gmail.com>,watsonbladd@gmail.com,0.0,0,2,2015-04-24 10:28:32
7666,TLS 15+,181,2496,"NeutralResponse,ProposeAction,NeutralResponse",2229,2229,"
It looks to boil down to designing how to encode inputs to the underlying
KDF.

(""looks"", because I think I am just beginning to figure out what the heck
is actually wanted).
",<20150424175346.GA25396@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 20:53:46
7667,TLS 15+,181,2498,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",2229,2229,"
Well, in one mail, Mike says that context labels are not enough.

He apparently wants for KDF to take type(s), export flag(s) and length(s)
of key(s) to generate as parameters. And then stuff those to info/seed
field (along label and such).

Also, looks like he would prefer that different encryption algorithms
have different types (e.g. AES-GCM vs. Chacha20-Poly1305).

(Again, the comment above applies).
",<20150424175346.GA25396@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 20:53:46
7668,TLS 15+,181,2500,"InformationProviding,NeutralResponse,NeutralResponse",2440,2440,"
Well, most of the ""Hardware"" here is actually ""software"", just running on
special-purpose hardware.
",<20150424175346.GA25396@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 20:53:46
7669,TLS 15+,181,2502,"Question,InformationProviding,ClarificationElicitation,NeutralResponse",2440,2440,"
Fixed function terminators? Also, what keys to keep secret does not fix
things, since there are some fundamential secret->public derivations.
",<20150424175346.GA25396@LK-Perkele-VII>,ilari.liusvaara@elisanet.fi,0.0,0,3,2015-04-24 20:53:46
7670,TLS 15+,183,0,Social,,-1,Hi!,<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7671,TLS 15+,183,56,"InformationProviding,ContextSetting,ContextSetting",,-1,"
While working on adding RSASSA-PSS support to Go's crypto/tls library
(TLS 1.2), I have noticed something that may cause interop problems
later.",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7672,TLS 15+,183,57,"InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting",56,-1,"
The current draft says the following about Server Certificate Selection
(https://tools.ietf.org/html/draft-ietf-tls-tls13-21#section-4.4.2.2):",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7673,TLS 15+,183,58,"InformationProviding,ExtensionOfPrevious,InformationProviding",57,-1,"
-  The certificate MUST allow the key to be used for signing (i.e.,
the digitalSignature bit MUST be set if the Key Usage extension is
present) with a signature scheme indicated in the client's
""signature_algorithms"" extension.",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7674,TLS 15+,183,59,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",58,-1,"
In TLS 1.2, the cipher suite was responsible for selecting the hash
function and signature algorithm (e.g. for ServerKeyExchange) while
""signature_algorithms"" directed what certificate signatures are
accepted.  But in TLS 1.3, this also influences what algorithms can be
used for signing handshake messages (CertificateVerify).",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7675,TLS 15+,183,60,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",59,-1,"
This results in possible interop problem: while implementations
advertise RSASSA-PSS support in ""supported_algorithms"" because they can
indeed sign/verify handshake messages with said algorithm, they might
not be able to accept certificates with a RSASSA-PSS signature (because
the PKI library does not implement it for example). And because PSS
certificates are non-existent now, it will only be discovered later.",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7676,TLS 15+,183,61,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",60,-1,"
Some implementations I have checked wrt RSASSA-PSS support:
- Go crypto/tls (TLS 1.2) - no RSASSA-PSS yet.
- tls-tris (TLS 1.3) - accepts PSS for CV, but not certificates.
- BoringSSL - failed, ""bssl server"" rejects cert.
- OpenSSL - failed, s_server rejects cert. Related:
https://github.com/openssl/openssl/issues/2878
- NSS - not checked, but I think it has the same problem as tls-tris.
Related: https://bugzilla.mozilla.org/show_bug.cgi?id=158750",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7677,TLS 15+,183,62,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ExtensionOfPrevious,ProposeAction",61,-1,"
These implementations will require fixing, but at the moment it is just
broken. Is this the expected behavior/intention?",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7678,TLS 15+,183,63,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,Question,ContextSetting",62,-1,"
While RSASSA-PSS is quite well understood for handshake messages, its
restrictions for certificates are not explicit. Currently the draft
limits the salt length for handshake messages, but what about certs?
What is needed for a TLS implementation to claim support for RSASSA-PSS?",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7679,TLS 15+,183,64,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,ContextSetting",63,-1,"
In particular, for certificates:",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7680,TLS 15+,183,65,"Question,ExtensionOfPrevious,Question",64,-1,"
- Limitations on salt length?
- What AlgorithmIdentifier OID to use?
- Whether to constrain other AlgorithmIdentifier Params? (MGF, hash
algorithm, trailerField)?",<20170908225948.GC31695@al>,peter@lekensteyn.nl,0.0,0,30,2017-09-08 23:59:48
7681,TLS 15+,183,78,"Answer,ContextSetting,ContextSetting","63,64",64,In the implementation I wrote:,<20170909113731.dxiu65q5wsfgj6qn@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-09 14:37:31
7682,TLS 15+,183,113,"Answer,InformationProviding,ExtensionOfPrevious,Answer","65,78",65,"
Salt must be the same length as hash output.
",<20170909113731.dxiu65q5wsfgj6qn@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-09 14:37:31
7683,TLS 15+,183,114,"InformationProviding,Answer,ContextSetting,Answer",65,65,"
The following are used:

1.2.840.113549.1.1.10		RSA-PSS
1.2.840.113549.1.1.8		MGF1
2.16.840.1.101.3.4.2.1		SHA-256 (NULL optional)
2.16.840.1.101.3.4.2.2		SHA-384 (NULL optional)
2.16.840.1.101.3.4.2.3		SHA-512 (NULL optional)
2.16.840.1.101.3.4.2.8		SHA3-256 (Parameters absent)
2.16.840.1.101.3.4.2.9		SHA3-384 (Parameters absent)
2.16.840.1.101.3.4.2.10		SHA3-512 (Parameters absent)
",<20170909113731.dxiu65q5wsfgj6qn@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-09 14:37:31
7684,TLS 15+,183,116,"InformationProviding,Answer,ContextSetting,Answer",65,65,"
The other constraints:

- Only MGF1 is supported.
- The MGF hash must be the same as the data hash.
- TrailerField must be absent (indicating default).
",<20170909113731.dxiu65q5wsfgj6qn@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-09 14:37:31
7685,TLS 15+,183,117,"InformationProviding,ExtensionOfPrevious,InformationProviding",116,65,"
Basically, that implementation supports exact matches (and variants
with SHA-2 substituted by SHA-3) of the TLS schemes.
",<20170909113731.dxiu65q5wsfgj6qn@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-09 14:37:31
7686,TLS 15+,183,140,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",65,65,"
Note that you have to check any PSS restrictions in the certificates themselves
too. For signatures on certificates this should be handled as part of the normal
chain validation process. For restrictions on the EE key this would add
additional complications on the digests the key can sign with in the handshake.

Steve.
Dr Stephen N. Henson.
Founder member of the OpenSSL project: http://www.openssl.org/",<b29ac2b1-04c1-87e6-7161-c8e50a906f01@drh-consultancy.co.uk>,lists@drh-consultancy.co.uk,0.0,0,12,2017-09-10 15:38:32
7687,TLS 15+,183,172,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",140,140,"
That being said, the RFC specifying RSA-PSS recommends that EE certificates
should not have limitations.

But yes, if you want to support all valid certificates, you need to check
limitations of the EE certificate before you select signing algorithm.
But that is also the case if you are using HSM for signing and it doesn't
support necessary algorithms (in extreme case, it may even require disabling
TLS 1.3 support completely).",<1767684.kJgKWaMCIt@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-11 12:57:22
7688,TLS 15+,183,265,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ContextSetting,ProposeAction",59,-1,"Ugh.

Generally, the idea with signature schemes is that they are supposed to
reflect both the capabilities of your TLS stack and the capabilities of
your PKI verifier [0]. So, yes, if you advertise this it is supposed to
work. So, ideally we would just say that it's as Ilari says in his followup.

It seems like there are really two choices:

1. Only advertise algorithm X if you support algorithm X in both places
2. Invent a new extension whose semantics are ""if present, this tells you
what the PKI validator accepts, otherwise look at signature schemes""

I hate to be suggesting #2 at this stage in the process, but maybe it's
right anyway...

-Ekr

[0] I recognize that there are people who think that TLS shouldn't say
anything about the PKI verifier,
but I don't think that this is viable, for exactly the reason shown here:
it's possibly to have an algorithm which is widely supported in TLS stacks
but not in PKI verifiers.
",<CABcZeBNYoqpWx_3V42wut3FUUt3xELv5J5YayvcrhwzJKqgcyg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-09-11 11:42:03
7689,TLS 15+,183,402,"Question,InformationProviding,NeutralResponse,NeutralResponse",265,-1,"This situation is likely to arise every time a new signature algorithm is
introduced. Suppose a TLS client library is updated to support Ed25519
certificates, but that the PKIX library only supports validating Ed25519
certificates signed by RSA or ECDSA, which signature schemes should the
client present? This is similar to the 2014 issue with ECDSA and Chrome on
XP (https://bugs.chromium.org/p/chromium/issues/detail?id=409901), in which
the PKIX library didn't support ECDSA, but the TLS stack did. As long as
TLS and PKIX libraries are decoupled, the dual meaning of the signature
scheme makes the addition of a new algorithm to one or the other a bit
messy.",<CAOjisRwFKCoh9kmmmQbXO9eudOwjHVH9heaZn86AddhwWU1m9g@mail.gmail.com>,nicholas.sullivan@gmail.com,0.0,0,8,2017-09-12 00:39:02
7690,TLS 15+,183,403,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious",402,-1,"
For example: In the current situation, it is mandatory to support
rsa_pss_sha256, but how many of these clients support certificates signed
with PSS? Not many -- including OpenSSL (
https://github.com/openssl/openssl/issues/2878#issuecomment-328576616).
Without PSS certificate support, if we chose EKR's option 1, these clients
would not be able to support TLS 1.3 according to the spec. This seems like
an unnecessary dependency.",<CAOjisRwFKCoh9kmmmQbXO9eudOwjHVH9heaZn86AddhwWU1m9g@mail.gmail.com>,nicholas.sullivan@gmail.com,0.0,0,8,2017-09-12 00:39:02
7691,TLS 15+,183,404,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ExtensionOfPrevious",403,-1,"
An easy fix would be to use a different extension for PSS certificates, but
this makes the naming and code point definitions more troublesome. Will all
new signature schemes get two codepoints, one for the handshake and one for
the certificate? The other option, EKR's option 2, seems more promising.",<CAOjisRwFKCoh9kmmmQbXO9eudOwjHVH9heaZn86AddhwWU1m9g@mail.gmail.com>,nicholas.sullivan@gmail.com,0.0,0,8,2017-09-12 00:39:02
7692,TLS 15+,183,405,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious,ProposeAction",404,-1,"
This option could be implemented as follows:
- keep the old hash and signature algorithm extension from TLS 1.2 to
indicate certificate signature support
- add a new extension for handshake signature scheme support",<CAOjisRwFKCoh9kmmmQbXO9eudOwjHVH9heaZn86AddhwWU1m9g@mail.gmail.com>,nicholas.sullivan@gmail.com,0.0,0,8,2017-09-12 00:39:02
7693,TLS 15+,183,406,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",405,-1,"
This would have the additional advantage of allowing us to clean up some of
the issues that have been raised before on this list around the numbering
of new TLS 1.3 signatureSchemes, specifically the fact that the byte order
is backwards for RSA-PSS relative to existing TLS 1.2 values.",<CAOjisRwFKCoh9kmmmQbXO9eudOwjHVH9heaZn86AddhwWU1m9g@mail.gmail.com>,nicholas.sullivan@gmail.com,0.0,0,8,2017-09-12 00:39:02
7694,TLS 15+,183,478,"InformationProviding,Disagreement,Answer",403,403,"
Actually OpenSSL does support certificates signed with RSA-PSS, it doesn't
support RSA-PSS keys in certificates.
",<3748802.M0zyvroJV0@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-12 15:16:45
7695,TLS 15+,183,480,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",403,403,"
With RSA-PSS the situation is even more complex, as you have it in two places,
in the signature and in the public key id.

So the possibilities are as follows:
- CA key: rsa; EE signature: rsa; EE key: rsa
- that certificate can be used with any version of TLS and can make both
rsa-pss and rsa signatures
- CA key: rsa; EE signature: rsa; EE key: rsa-pss
- that certificate can be used only with TLS 1.3 or TLS 1.2 that was
updated to support TLS 1.3 signatures, does not require support for
RSA-PSS in PKIX (with the assumption that the library allows the TLS
library to extract the RSA-PSS parameters from the certificate)
- CA key: rsa; EE signature: rsa-pss; EE key: rsa
- that certificate can be used again only with TLS 1.3 or TLS 1.2 but
that's because RFC compliant peer can send only certificates that have
signatures listed in SignatureAlgorithms. Can sign using both rsa and
rsa-pss but it DOES require RSA-PSS support in PKIX
- CA Key; rsa; EE signature: rsa-pss; EE key: rsa-pss
- similarly to the above, but does limit the usage of certificate to
TLS 1.2 with rsa-pss or TLS 1.3, cannot be used to make RSA-PKCS#1 v1.5
signatures in TLS 1.2
- CA Key: rsa-pss; EE signature: rsa-pss; EE key: rsa
- exactly as with CA key: rsa; EE signature: rsa-pss; EE key: rsa
- CA Key; rsa-pss; EE signature: rsa-pss; EE key: rsa-pss
- similarly to the above, but cannot be used to make RSA-PKCS#1 v1.5
signatures in TLS 1.2, thus requires RSA-PSS support in TLS 1.2 from
the TLS part of the library

Now, if a client sends only rsa_pss_sha256, I'd say, that all of the following
need to work:
- CA key: rsa; EE signature: rsa-pss; EE key: rsa
- CA Key; rsa; EE signature: rsa-pss; EE key: rsa-pss
- CA Key: rsa-pss; EE signature: rsa-pss; EE key: rsa
- CA Key; rsa-pss; EE signature: rsa-pss; EE key: rsa-pss

If both rsa_pss_sha256 and rsa_pkcs1_sha256 are sent, then all 6 combinations
should be supported by client.
",<3748802.M0zyvroJV0@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-12 15:16:45
7696,TLS 15+,183,525,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",265,265,"
In practice, I find it perfectly reasonable for stacks which do not
support that algorithm in both PKI and TLS not to advertise it. The
option (1) brings simplicity to a rather complex protocol, while (2)
bloats the protocol for the benefit of helping not up-to-date stacks
claim TLS 1.3 compliance.

In theory, the only reason for having RSA-PSS is its security proof.
Mixing RSA (certificates) and RSA-PSS (handshake) in a protocol may
hardly bring any benefit; it looks like it will make a convoluted
protocol without particular goal or focus.
",<1505195169.4161.4.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-09-12 07:46:09
7697,TLS 15+,183,605,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",525,525,"
Unfortunately, I have seen behavior like the following (this is
modified client and one of the test servers (the mod_nss @draft-20 one)
in the wiki):

[State ClientHello] Sending client_hello:
┌─────┬──────────────┨ Payload ┠──────────────┬────────────────┐
│    0│0303 CBD9 FD89 B99E 292A E0F4 791D 0C29│........)*..y..)│
│    1│07F2 0C62 7D94 6ED6 7C93 59EA BD6F 72F6│...b}.n.|.Y..or.│
│    2│0CF9 0000 12CC A9C0 2BC0 2CCC A8C0 2FC0│........+.,.../.│
│    3│3013 0313 0113 0201 0000 9900 2B00 0D0C│0...........+...│
│    4│7F15 7F14 7F13 7F12 7F11 0303 000A 000C│................│
│    5│000A 001D 0017 001E 0018 0019 0028 0026│.............(.&│
│    6│0024 001D 0020 C02A 8D3E 32F4 ED55 9F6B│.$... .*.>2..U.k│
│    7│9ADF 772C 1F8C 39FE D6D3 D03A 179A 14A1│..w,..9....:....│
│    8│8180 F41A 8C58 0000 0018 0016 0000 1366│.....X.........f│
│    9│7261 6E7A 6973 6B75 736B 6965 6665 722E│ranziskuskiefer.│
│    A│6465 0005 0005 0100 0000 0000 1200 0000│de..............│
│    B│0D00 1200 1008 0708 0804 0305 0306 0306│................│
│    C│0105 0104 0100 1700 00FF 0100 0100 1053│...............S│
│    D│0002 4000                              │..@.            │
└─────┴─────────────┨ 212 bytes ┠─────────────┴────────────────┘
... snip ...
Chosen configuration: Version: TLS 1.3-draft20, Protection:Aes128Gcm, Hash: Sha256, Exchange group: X25519, Extended Master Secret: N/A
[State Tls13CertificateVerify] Received (borrowed) certificate_verify:
┌─────┬──────────────┨ Payload ┠──────────────┬────────────────┐
│   00│0401 0100 2716 5FF4 5A0B 9F05 5B42 8609│....'._.Z...[B..│
...snip...
│   10│BACC 04E5                              │....            │
└─────┴─────────────┨ 260 bytes ┠─────────────┴────────────────┘
do_local_abort: #42:CertificateVerify contains bad signature
",<20170912074917.n4gjvz3zrz7s4rnf@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 10:49:17
7698,TLS 15+,183,606,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",605,525,"
That is Client Hello that does not advertise RSA-PSS, but does
advertise RSA-PKCS#1.

The server responds with TLS 1.3 and signature scheme 0x0401, which
is RSA-PKCS#1 with SHA-256. And then client aborts because it does
not like that scheme.
",<20170912074917.n4gjvz3zrz7s4rnf@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 10:49:17
7699,TLS 15+,183,683,"InformationProviding,Disagreement,ContextSetting,ProposeAction,Disagreement,NeutralResponse",265,265,"
I believe you got it backwards.

A new TLS extension to convey acceptable signatures on certs would be
needed, and for this, it would be preferable to pass along ASN.1
OIDs from AlgIds (not full AlgIds, this would be too messy with RSA-PSS).

The text in rfc5246 which suggests that contents of the ""signature_algorithm""
extension should be applied to certificates is a defect of rfc5246, and
only a small fraction of implementors seems to have gotten this wrong,
and created implementations that erroneously abort by making flawed
assumptions on what the peer might support (or not).

The signature_algorithms extensions must only be applied to transforms
used within the TLS protocol itself (digitally_signed), because only this
transform can be negotiated and produced at will by communication peers.

Certificates will, in most real-world usage cases, be created out-of-band
by third party entities (CAs), and can typically not be created by the
TLS communication endpoints.  It is OK to use ""signature_algorithms""
as a selection hint.  It is a dumb idea for a TLS communication peer
to abort a TLS handshake by making flawed assumptions about whether
a communication peer does or does not support a particular signature
scheme on certificates.

TLS handshake failures based on flawed assumptions are unconditionally BAD.
If the peer has a certain policy, it is up to that peer to apply this
policy during _verification_.  TLS handshake failures are unprotected,
they can not be recovered from at the TLS level (transparently), but require
app-level acrobatics, and may require repeated proxy traversals.  And
they create downgrade vulnerabilities, such as the silly ""downgrade dance""
implemented by a number of browsers, which creates the POODLE vulnerability.
",<20170912110219.61B741A6F4@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2017-09-12 13:02:19
7700,TLS 15+,183,684,"InformationProviding,NeutralResponse,ProposeAction,ExtensionOfPrevious","265,683",265,"
btw. some PKIs are currently switching to using RSA-PSS signatures
on certificate chains.  But they do use rsaEncryption for the key
in the endEntity certificate.  Because they want to use end-entity
certs for both, PKCS#7/CMS (and maybe SOAP) signatures as well as
SSL/TLS client certificates.  For use with TLSv1.2 as client certs,
they're hardwired to RSA PKCS#1 v1.5 signatures, which precludes tagging
the keys in client end-entity certs as RSA-PSS.

TLSv1.3 needs to avoid more ""MUST"" mistakes around algorithms that
work just fine with earlier version of TLS.  It is perfectly OK to
created RSA-PSS signatures with keys that are tagged as rsaEncryption,
and adding words or semantics to TLSv1.3 that suggests this is not
OK, would be terribly bad.
",<20170912110219.61B741A6F4@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2017-09-12 13:02:19
7701,TLS 15+,183,797,"InformationProviding,NeutralResponse,ContextSetting,StateDecision,NeutralResponse",683,683,"
With RSA-PSS, there is also the parametrization signature by hashes.

The implementation I have supports the following six sets of parameters
for RSA-PSS:

- hash=SHA-256, mgf=MGF1[SHA-256], salt=256, trailer=1
- hash=SHA-384, mgf=MGF1[SHA-384], salt=384, trailer=1
- hash=SHA-512, mgf=MGF1[SHA-512], salt=512, trailer=1
- hash=SHA3-256, mgf=MGF1[SHA3-256], salt=256, trailer=1
- hash=SHA3-384, mgf=MGF1[SHA3-384], salt=384, trailer=1
- hash=SHA3-512, mgf=MGF1[SHA3-512], salt=512, trailer=1

The first three are the TLS 1.3 RSA-PSS schemes. The last three are the
same, except with SHA-2 hash replaced by correspoding SHA-3 hash.

(I mostly implemented those SHA-3 algorithms as to test of the
architecture.)
",<20170912122506.qa56yifturgbxadw@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 15:25:06
7702,TLS 15+,183,799,"InformationProviding,NeutralResponse,ProposeAction,StateDecision,NeutralResponse",683,683,"
This is mostly not about peers aborting on bad assumptions. It is peers
making bad assumptions and then sending something that the peer does not
support.

The TLS server I wrote does abort on some certificates (e.g., all
signature algorithms must be recognized). However, all checks except
ones on exchange signatures are independent of the capabilities
advertised by peer.

The TLS 1.3 has SHOULD on that signature algorithm selection. I wrote
my implementation to outright immediately abort, since I do not see
that there is any way things can work if that SHOULD is broken.

The default (can be overridden) certificate selection code prefers
certificates signed by algorithms appearing in signature_algorithms,
but if no suitable certificate is found, expands the search to all
algorithms. Unlike in previous point, there is a chance things will
work even if unadvertised algorithm is chosen (e.g.,
ECDSA-P256-SHA3-256 certificate being sent to the corresponding
client implementation... Those are in fact supported).
",<20170912122506.qa56yifturgbxadw@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 15:25:06
7703,TLS 15+,183,801,"InformationProviding,NeutralResponse,NeutralResponse",683,683,"
There are restrictions from end-entity certificates the server has.
E.g. 0x804 and 0x403 require different end-entity certificates.
",<20170912122506.qa56yifturgbxadw@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 15:25:06
7704,TLS 15+,183,803,"InformationProviding,Agreement,NeutralResponse",683,683,"
Yes, most of the time, the server only has one or two certificate
chains available.
",<20170912122506.qa56yifturgbxadw@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 15:25:06
7705,TLS 15+,183,805,"InformationProviding,NeutralResponse,NeutralResponse",683,683,"
As far as I understand this issue, this is not _server_ aborting
because it can't select a chain, it is _client_ aborting because it can
not deal with what the server sent (because the server had no idea that
the client could not deal with what it sent).
",<20170912122506.qa56yifturgbxadw@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-12 15:25:06
7706,TLS 15+,183,837,"InformationProviding,NeutralResponse,NeutralResponse",797,797,"
The salt length is supposed to be in bytes, not bits, and for SHA-1
defaults to 20.  The salt length suggested in the standard is the
output size of the underlying hash length in bytes.

But it seems that some existing implementations use weird/unusual salt
values for RSA-PSS signature with hash algs other than SHA-1.

-Martin",<20170912132129.AB29E1A6F4@ld9781.wdf.sap.corp>,mrex@sap.com,0.0,0,2,2017-09-12 15:21:29
7707,TLS 15+,183,878,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",265,265,"
It's rather more than just certificate signatures.

The problem here is that there is no way to indicate an implementation supports
rsaEncryption keys but not RSASSA-PSS keys and the current draft requires that
implementations support both AFAICS.

RSASSA-PSS keys are pretty rare at the moment. There are some complications
involved with supporting them not present with other key types: more complex
parameter sets and key restrictions for example. Implementors might feel
(despite what the draft says) that the added complexity is not justified because
no one will ever want to use RSASSA-PSS keys.

At the same time if important implementations abort the handshake when they see
an RSASSA-PSS key then this is a strong reason for a server to not deploy
RSASSA-PSS keys: it will cause interoperability issues.

Steve.
Dr Stephen N. Henson.
Founder member of the OpenSSL project: http://www.openssl.org/",<cafe5f94-f2f8-98d7-c536-fbc59e94fb97@drh-consultancy.co.uk>,lists@drh-consultancy.co.uk,0.0,0,12,2017-09-12 14:41:16
7708,TLS 15+,183,951,"InformationProviding,Agreement,ProposeAction,Agreement,NeutralResponse",878,878,"
Right, that is indeed a significant complexity, and unfortunately the
RSASSA-PSS parameters in certificates/keys are quite uniquely in PKIX.
However, these are optional parameters, and one could support RSA-PSS
keys without such parameters/restrictions relatively easily. Moreover,
keys without paramters, are the keys which are typically expected to be
used by TLS.

That is, because a TLS server would typically sign with whatever
algorithm the client supports and would very rarely be interested to
utilize the security advantages of including the parameters (which,
advantages, are quite unclear even to a crypto expert). Otherwise, a
certificate restricted to SHA-384 and 48-bytes of salt, will not be
able to serve a client which only supports RSASSA-PSS with SHA-256.

As such, it would make sense for TLS 1.3 to recommend no parameters for
such RSASSA-PSS certificates, to ease their deployment.
",<1505225444.4161.35.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-09-12 16:10:44
7709,TLS 15+,183,953,"ClarificationElicitation,InformationProviding,NeutralResponse,ProposeAction,Question,NeutralResponse,ProposeAction",878,878,"
If an implementation does not support RSASSA-PSS-only keys, it means it
will (as a server) not be able to use separate keys for RSASSA-PSS and
RSA PKCS#1 v1.5 operations, right? That's quite a fundamental
limitation and if it exists in popular implementations it makes the TLS
1.3 move to RSASSA-PSS quite questionable. It may be better to support
RSA PKCS#1 v1.5 in TLS1.3 alongside RSASSA-PSS (for the implementations
that chose to opt-in), rather than forcing a move to RSASSA-PSS without
providing any of the benefits of using it.
",<1505225444.4161.35.camel@redhat.com>,nmav@redhat.com,0.0,0,4,2017-09-12 16:10:44
7710,TLS 15+,183,1000,"InformationProviding,Answer,ContextSetting,ProposeAction,NeutralResponse,ProposeAction","951,953",951,"
Well restrictions in CA keys would be handled by the PKI verifier: if there is a
violation the chain should be rejected and it's a problem with the chain itself
and an error by the CA that issued it. A different case is where the
restrictions are legal from a PKIX standpoint but not allowed by TLS 1.3, though
again it's a CA error issuing such a chain for TLS 1.3 use.

A restriction on the EE key isn't quite the same. There are two cases.

One is that the parameters are not permitted by TLS 1.3 at all (e.g. MGF1 digest
doesn't match signing digest or minimum salt length exceeds digest length). In
this case a server should never present the chain or if it does a client would
justifiably reject it and abort the handshake. Again this is an error by the
issuing authority which should be corrected.

The second case is that the parameter restriction is permitted by TLS 1.3 and
this limits the digest which the key can sign with. Say the restriction is
SHA384 and the client only supports rsa_pss_sha256. The server might then use to
a different PSS key (and certificate chain) that supports rsa_pss_sha256 or fall
back to an RSA key to use rsa_pss_sha256. Again if a client sees a TLS message
signed with parameters that violate the restrictions it could (with some
justification) abort the handshake.

This could get pretty messy: it requires a logic not used in any other
algorithm. I'd be more than happy to have an outright prohibition on EE PSS key
parameter restrictions in TLS 1.3 so implementers don't have to bother with this.

Steve.
Dr Stephen N. Henson.
Founder member of the OpenSSL project: http://www.openssl.org/",<68691b3c-3496-527c-e211-2a17a7c7b555@drh-consultancy.co.uk>,lists@drh-consultancy.co.uk,0.0,0,12,2017-09-12 16:42:31
7711,TLS 15+,183,1078,"InformationSeeking,Question,NeutralResponse,ProposeAction,Question,Agreement",1000,1000,"
This sounds plausible to me. Would you be willing to send a PR?

-Ekr
",<CABcZeBO8iar+BwfPf9sUH=cTAar+W6cUXYqfB1z2410MLPSHrg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-09-12 09:02:27
7712,TLS 15+,183,1131,"Question,ClarificationElicitation,InformationProviding,Question",1000,1000,"
what about hardware tokens that support only specific hashes or signatures?
(I've seen ones that can do only RSA with SHA256 and SHA-1, but not SHA-384 or
SHA-512) Isn't it basically the same code path (though the limitation does
come from slightly different place).",<5159391.MM5YjT3ssF@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-12 19:30:30
7713,TLS 15+,183,1149,"InformationSeeking,Answer,ContextSetting,ProposeAction,UnderstandingNegative,Question,NeutralResponse","1000,1131",1000,"
what about hardware tokens that support only specific hashes or signatures?
(I've seen ones that can do only RSA with SHA256 and SHA-1, but not SHA-384 or
SHA-512) Isn't it basically the same code path (though the limitation does
come from slightly different place).

I think that the requirement of having the same hash everywhere in this certificate takes care of this problem.

If I’m missing the actual problem you’re pointing at – please outline the use case where it might manifest, and let’s take it from there.",<21C4A934-8B10-40A8-950F-0E7B61F08613@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 17:36:04
7714,TLS 15+,183,1205,"InformationSeeking,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,UnderstandingNegative,Question",1149,1149,"
What Stephen is pointing at, is a server certificate (End Entity certificate)
when using RSA-PSS public key id in the X.509 certificate can have RSA-PSS
parameters in the public key id or can have them omitted. When the parameters
are omitted, it means that that key can be used for signing with any hash
(SHA-1, SHA-256, SHA-384, SHA3-256, etc.) but must be used with rsa-pss
padding scheme. When the parameters are present the hash is set in stone and
that key can then be used to sign with one hash and one hash only - the hash
that is specified in certificate (and rsa-pss padding).

Now, if the certificate specifies in parameters SHA384 hash and client
advertises support only for SHA256 with RSA-PSS, the server should switch to
(e.g.) ECDSA certificate that does not have that limitation and continue
connection instead of aborting the connection (very bad) or sending
certificate which most likely will be rejected by client as not
understandable/unverifiable (bad).

What I've added is that that limitation may not come from the certificate but
may come from the cryptographic module (software or hardware) that implements
rsa-pss with just one or two hashes, irrespective of rsa-pss parameters in the
certificate public key id.

So, I'm not sure what hash you are suggesting should be ""the same everywhere"".
I'm quite sure you're not suggesting that we should limit TLS 1.3 to SHA256
only (no SHA384 or SHA512), are you?",<10457521.MfgfQs1Zne@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-12 20:06:55
7715,TLS 15+,183,1257,"InformationProviding,Agreement,ContextSetting,Agreement,NeutralResponse",1205,-1,"
Yes. And I concur with him that it is better to omit them, enforcing the default. The default being:
- Hash algorithm the same as specified in Signature Algorithm
- MGF1 hash is the same as above
- Salt length same as digest length above",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7716,TLS 15+,183,1259,"InformationProviding,Disagreement,Agreement,NeutralResponse",1205,-1,"
Not quite. Since this key is a part of the given certificate – RSA-PSS padding scheme should be used with the same hash as “Signature Algorithm” specifies.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7717,TLS 15+,183,1261,"InformationProviding,NeutralResponse,NeutralResponse",1205,-1,"
I think the point Stephen was making is that Signature Algorithm specifies a hash – and there’s no reason to use a different one for MGF1.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7718,TLS 15+,183,1263,"InformationProviding,NeutralResponse,NeutralResponse",1205,-1,"
This is a different question. The point being addressed here is that each certificate is internally consistent, using the same hash for all the purposes within that certificate.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7719,TLS 15+,183,1264,"InformationProviding,NeutralResponse,ExtensionOfPrevious","1205,1263",-1,"
If the server’s certificate is signed with SHA384, so be it. There’s no reason for a client to not support SHA384 *for signature verification*, as hardware token restrictions shouldn’t apply here – it’s software-based validation.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7720,TLS 15+,183,1266,"InformationProviding,NeutralResponse,NeutralResponse",1205,-1,"
The cryptographic module would perform RSA-PSS *signature* with whatever hashes it can. It won’t bother with *validation*, so this module’s limitations shouldn’t matter.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7721,TLS 15+,183,1268,"Answer,NeutralResponse",1205,-1,"
Within one certificate – one hash. I.e., *no* SHA512 in Signature Algorithm, SHA384 for message hash in SHA384-RSA-PKCS-PSS, SHA256 for MGF1.",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7722,TLS 15+,183,1270,"Answer,Answer",1205,-1,"
Oh no – I’m eccentric but not quite insane yet. ;-)",<C63A6903-6F5E-4975-A160-94312A549D79@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-12 18:33:21
7723,TLS 15+,183,1380,"NeutralResponse,NeutralResponse",1257,1257,"
and I'm saying that such limitation on EE certificate won't help much if you
also support hardware tokens as they can limit supported signature schemes too
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7724,TLS 15+,183,1382,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1257,1257,"
No problem with that being recommendation, but I've seen people claiming that
some applications don't follow that salt length requirement, so I'd say it
would cause unnecessary problems if it was set too strict
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7725,TLS 15+,183,1384,"NeutralResponse,ProposeAction,NeutralResponse",1261,1261,"
this is not a problem we're talking about, I don't have any kind of problem
with MGF1 requirement to be the same as the signature hash
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7726,TLS 15+,183,1386,"InformationProviding,NeutralResponse,Disagreement,NeutralResponse",1263,1263,"
and what you're talking about is a non-issue. Binding MGF1 hash with signature
hash is sensible and unlikely to cause problems.
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7727,TLS 15+,183,1388,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse,UnderstandingNegative",1264,1264,"
I'm talking about subjectPublicKeyInfo field, *not* about signatureAlgorithm
field from RFC 3280

and there are clients that advertise only a subset of hashes:
https://www.ssllabs.com/ssltest/viewClient.html?
name=Safari&version=6&platform=iOS%206.0.1&key=33
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7728,TLS 15+,183,1390,"NeutralResponse,Disagreement",1266,1266,"
but it can't perform that signature using hash
*that the client didn't advertise*
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7729,TLS 15+,183,1392,"Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Question,NeutralResponse",1268,1268,"
There are four places in which different hashes can be in a certificate:
subjectPublicKeyInfo.algorithm.parameters.hashAlgorithm
subjectPublicKeyInfo.algorithm.parameters.maskGenAlgorithm
signatureAlgorithm.algorithm.parameters.hashAlgorithm
signatureAlgorithm.algorithm.parameters.maskGenAlgorithm

Now, because the subjectPublicKeyInfo is chosen by the person generating the
key (user) and signatureAlgorithm is chosen by the CA, and it is quite common
already that e.g. a P-384 CA signs with SHA384 a P-256 intermediate CA that
then signs EE with a SHA-256. I really don't think that *all* hashes should be
the same.

How exactly using more secure parameters for longer lived keys is a bad idea?
",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7730,TLS 15+,183,1394,"NeutralResponse,NeutralResponse",1270,1270,"
well, we do work on ASN.1 stuff... ;)",<11673774.J8OL2FLGDl@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 12:55:42
7731,TLS 15+,183,1445,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,Thanking,Question,ClarificationElicitation,InformationProviding,NeutralResponse","1382,1388",1257,"
No problem with that being recommendation, but I've seen people claiming that
some applications don't follow that salt length requirement, so I'd say it
would cause unnecessary problems if it was set too strict

I’m sure some apps follow, and some don’t. I’m simply saying that it makes sense for TLS to pick a sensible default (like the above) and stick with it. Other apps may do what they think is best.

As for above, in view of the following discussion I think it would be better to replace “Signature Algorithm” above with “subjectPublicKeyInfo.algorithm.parameters.hashAlgorithm”.
I still think that only the necessary minimum of parameters should be passed explicitly.

I'm talking about subjectPublicKeyInfo field, *not* about signatureAlgorithm
field from RFC 3280

OK, point taken. Thanks for clarifying.

and there are clients that advertise only a subset of hashes:
https://www.ssllabs.com/ssltest/viewClient.html?
name=Safari&version=6&platform=iOS%206.0.1&key=33

Seriously? iOS 6? Why not iOS 5 or 4? I think I still have an iOS 5 device somewhere. ;-)
",<FD577598-B505-4266-9B83-ED51BA4F59B7@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-13 14:35:25
7732,TLS 15+,183,1447,"InformationSeeking,Question,Agreement,ProposeAction,Agreement,ContextSetting,ClarificationElicitation,Agreement,Agreement","1390,1392",1266,"
but it can't perform that signature using hash
*that the client didn't advertise*

You’re probably right. But for my benefit, could you please outline the scenario how this would/could be used? To make sure I completely understand the use case?

Now, because the subjectPublicKeyInfo is chosen by the person generating the
key (user) and signatureAlgorithm is chosen by the CA, and it is quite common
already that e.g. a P-384 CA signs with SHA384 a P-256 intermediate CA that
then signs EE with a SHA-256. I really don't think that *all* hashes should be
the same.

OK, you convinced me here. I missed that. :-(
",<FD577598-B505-4266-9B83-ED51BA4F59B7@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-13 14:35:25
7733,TLS 15+,183,1448,"Question,ContextSetting,Question,NeutralResponse",1394,1270,"
well, we do work on ASN.1 stuff... ;)

And I start developing liking of ASN.1. Does it mean it’s time to get my head examined? ;-)",<FD577598-B505-4266-9B83-ED51BA4F59B7@ll.mit.edu>,uri@ll.mit.edu,0.0,0,4,2017-09-13 14:35:25
7734,TLS 15+,183,1546,"InformationProviding,NeutralResponse,NeutralResponse",1445,1445,"
hmm, thing is, that while certificates with subjectPublicKeyInfo of rsa-pss
are still pink unicorns in production deployments, certificates with
signatureAlgorithm of rsa-pss are fairly common in Microsoft shops - it is the
default signature method for MS AD for good few years now.

I do not know what hashes, how consistent with MGF1 and what salts sizes do MS
CAs select for those signatures.

I'm quite sure that people will want to use those existing CA certificates and
intermediate CA certificates on new servers that will be deploying TLS 1.3...
",<2444518.Frf4kAzPhz@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 17:57:17
7735,TLS 15+,183,1548,"InformationProviding,Agreement,ProposeAction,Disagreement,NeutralResponse",1445,1445,"
And I would agree, if we didn't have PKCS#11 tokens. If you work on pure-
software implementation it will be much easier to have EE that cannot have
limitations specified in subjectPublicKeyInfo. But as soon as you have to work
with any kind of hardware implementations of RSA, that assumption goes out the
window. Because even if your HSM does do all combinations, different one may
not.
",<2444518.Frf4kAzPhz@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 17:57:17
7736,TLS 15+,183,1550,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",1445,1445,"
my point is that if a client from a major technological company, largely
focused on security, can make such decisions, I don't see why other developers
couldn't follow the same logic that makes them do what Apple did.
",<2444518.Frf4kAzPhz@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 17:57:17
7737,TLS 15+,183,1552,"InformationProviding,Answer,ProposeAction,Answer",1447,1447,"
The use case may be of a limited client that implements only one hash
algorithm and because it's low power, doesn't have a software fallback -
allowing SHA256 only, everywhere (both on TLS level and on certificate
signature level).

That client can then, exactly as the standard prescribes, advertise support
only for signature schemes that support sha256:
* rsa_pkcs1_sha256
* rsa_pss_sha256
* ecdsa_secp256r1_sha256

Server side can be limited by policy, to have just sha384 signing in rsa with
big key sizes (e.g. because some part of the web site is considered 'Top
secret' and need to use keys more resistant to quantum computers) but also
have P-256 ECDSA certificate for the public part of the web site as a
fallback.

That server policy can be encoded in the subjectPublicKeyInfo.

In such situation we want the server to sign Certificate Verify with the ECDSA
key - ecdsa_secp256r1_sha256 - even if the client advertises preference for
RSA and server wants to respect it.

Situation with two RSA keys with different limitations is not much different.
We still want to pick a certificate that can be used to make a signature that
client claims it will be able to verify - rsa_pss_sha256.
",<2444518.Frf4kAzPhz@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2017-09-13 17:57:17
7738,TLS 15+,187,0,Social,,-1,"Folks,",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7739,TLS 15+,187,26,"InformationProviding,ContextSetting,ContextSetting",,-1,"
I've just published draft-04
(https://tools.ietf.org/html/draft-ietf-tls-tls13-04
<https://tools.ietf.org/id/draft-ietf-tls-tls13-04>). This includes the
following
changes based on WG discussion.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7740,TLS 15+,187,27,"InformationProviding,ExtensionOfPrevious,InformationProviding",26,-1,"
- Modify key computations to include session hash.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7741,TLS 15+,187,28,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","26,27",-1,"
- Remove ChangeCipherSpec",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7742,TLS 15+,187,29,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","26,28",-1,"
- Renumber the new handshake messages to be somewhat more
consistent with existing convention and to remove a duplicate
registration.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7743,TLS 15+,187,30,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","26,29",-1,"
- Remove renegotiation.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7744,TLS 15+,187,31,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","26,30",-1,"
- Update format of signatures with context.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7745,TLS 15+,187,32,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious","26,31",-1,"
- Remove point format negotiation.",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7746,TLS 15+,187,33,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Thanking,ExtensionOfPrevious","26,32",-1,"
And of course a bunch of editorial changes. Thanks to all who sent in
comments and PRs. Comments welcome!",<CABcZeBNHMGYYeU_hXFU2QAn3gJWBPthDhuqqKXgLZPO9UDAjjg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-01-03 14:02:12
7747,TLS 15+,188,192,"InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction",,-1,"Rich version of this review at:
https://mozphab-ietf.devsvcdev.mozaws.net/D4544

This document has a huge amount of duplicated material which makes it
very hard to read. Please refactor so that the common material is in
one place.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7748,TLS 15+,188,193,"ExtensionOfPrevious,ContextSetting,ContextSetting",192,-1,"
COMMENTS",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7749,TLS 15+,188,194,InformationProviding,,-1,">      Due to security concerns with SHA-1 [RFC6194] and with MODP groups
>      with less than 2048 bits [NIST-SP-800-131Ar1]  we propose the use of
>      the SHA-2 based hashes with DH group14, group15, group16, group17 and
>      group18 [RFC3526].  Additionally we add support for key exchange
>      based on Elliptic Curve Diffie Hellman with NIST P-256, P-384 and
>      P-521 as well as X25519 and X448 curves.  Following the rationale of",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7750,TLS 15+,188,195,"ProposeAction,NeutralResponse",194,-1,"
""the X25519...""
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7751,TLS 15+,188,196,InformationProviding,,-1,">          | Key Exchange Method Name | Implementation Recommendations |
>          | gss-group14-sha256-*     | SHOULD/RECOMMENDED             |
>          | gss-group15-sha512-*     | MAY/OPTIONAL                   |
>          | gss-group16-sha512-*     | SHOULD/RECOMMENDED             |",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7752,TLS 15+,188,197,"Question,ClarificationElicitation,ClarificationElicitation",196,-1,"
Why are you only specifying SHA-512 with 4096-bit groups. SHA-256 is
still reasonable at that size?
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7753,TLS 15+,188,198,NeutralResponse,,-1,">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman
>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-256
>      as HASH, and the group defined in Section 8.2 of [RFC4253] The method
>      name for each method is the concatenation of the string ""gss-
>      group14-sha256-"" with the Base64 encoding of the MD5 hash [RFC1321]",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7754,TLS 15+,188,199,"Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse","198,199",-1,"
Why is this MD5? Is there some legacy reason for this? It's not
necessarily bad but it's odd to modern eyes.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7755,TLS 15+,188,200,InformationProviding,,-1,">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman
>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-512
>      as HASH, and the group defined in Section 7 of [RFC3526] The method
>      name for each method is the concatenation of the string ""gss-
>      group18-sha512-"" with the Base64 encoding of the MD5 hash of the
>      ASN.1 DER encoding of the underlying GSS-API mechanism's OID.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7756,TLS 15+,188,201,"InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse",200,-1,"
These all seem to be boilerplate. is there a way to refactor into a
single paragraph with a table that describes the substitutions?
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7757,TLS 15+,188,202,InformationProviding,,-1,">      ASN.1 DER encoding of the underlying GSS-API mechanism's OID.
>   5.  New Elliptic Curve Diffie-Hellman Key Exchange methods
>      In [RFC5656] new SSH key exchange algorithms based on Elliptic Curve
>      Cryptography are introduced.  We reuse much of section 4 to implement",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7758,TLS 15+,188,203,"ProposeAction,NeutralResponse",202,-1,"
s/implement/define/
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7759,TLS 15+,188,204,InformationProviding,,-1,">      This section defers to [RFC7546] as the source of information on GSS-
>      API context establishment operations, Section 3 being the most
>      relevant.  All Security Considerations described in [RFC7546] apply
>      here too.
>      The Client:",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7760,TLS 15+,188,205,"ProposeAction,NeutralResponse,ProposeAction",204,-1,"
This section should be refactored to put all the EC mechanics (which
are symmetrical) in one place.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7761,TLS 15+,188,206,InformationProviding,,-1,">            and then y coordinate.  The coordinate coversion MUST preserve
>            leading zero octets.  Thus for nistp521 curve the encoded x
>            coordinate will always have a length of 66 octets while the Q_C
>            representation will be 133 octets long.  This is the
>            uncompressed representation specified in Section 4.3.6 of
>            [ANSI-X9-62-2005].",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7762,TLS 15+,188,207,"Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting",206,-1,"
I have two questions about this:  1. Why are you specifying the
detailed computation of the public key? This seems like you could
defer it to another spec. 2. Why are you specifying uncompressed
representations for NIST curves? We did this in TLS because people
already supported them, but in general they are worse. Is there a
reason here?
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7763,TLS 15+,188,208,"InformationProviding,InformationProviding",,-1,">            by 31 zero octets for curve255519 and as an octect of value
>            0x05 followed by 55 zero octets.
>            Calculating Q_C as the result of the call to X25519 or X448
>            function, respectively for curve25519 and curve448 key
>            exchange, with parameters d_C and g.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7764,TLS 15+,188,209,"InformationProviding,ProposeAction,NeutralResponse",208,-1,"
This material all seems to be in RFC 7748 S 6.1 and 6.2.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7765,TLS 15+,188,210,InformationProviding,,-1,">         For NIST curves, the server verifies that the q_C is not a point
>         at infinity, that both coordinates are in the interval [0, p - 1],
>         where p is the prime associated with the curve of the selected key
>         exchange and that the point lies on the curve (satisfies the curve
>         equation).",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7766,TLS 15+,188,211,"ProposeAction,NeutralResponse,ProposeAction",210,-1,"
You should probably cite to the X9.62 or SP-800 for this procedure.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7767,TLS 15+,188,212,InformationProviding,,-1,">         For curve25519, the server verifies that the the high-order bit of
>         the last octet is not set - this prevents distinguishing attacks
>         between implementations that use Montgomery ladder implementation
>         of the curve and ones that use generic elliptic-curve libraries.
>         If the bit is set, the key exchange SHOULD fail.  For curve448 any
>         bit can be set.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7768,TLS 15+,188,213,"ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse",212,-1,"
I'm not following what this is supposed to do. If you are worried
about this, why don't you just mask off the top bit.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7769,TLS 15+,188,214,InformationProviding,,-1,">            For NIST curves, the peers perform point multiplication using
>            d_U and q_V to get point P.
>            For NIST curves, peers verify that P is not a point at
>            infinity.  If P is a point at infinity, the key exchange MUST
>            fail.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7770,TLS 15+,188,215,"Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse",214,-1,"
Why is this text here? It describes the client's behavior.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7771,TLS 15+,188,216,InformationProviding,,-1,">            and q_V.  The result of the function is the shared secret.
>            For curve25519 and curve448, if all the octets of the shared
>            secret are zero octets, the key exchange MUST fail.
>         H = hash(V_C || V_S || I_C || I_S || K_S || Q_C || Q_S || K).",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7772,TLS 15+,188,217,"InformationProviding,ProposeAction,NeutralResponse,ProposeAction",216,-1,"
This kind of just comes out of nowhere. You probably want some
prefatory text.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7773,TLS 15+,188,218,InformationProviding,,-1,">      7.  C verifies that the key Q_S is valid the same way it is done in
>      step 3.  If the key is not valid the key exchange MUST fail.
>      8.  C computes the shared secret K and H and verifies that it is
>      valid the same way it is done in step 5.  It then calls",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7774,TLS 15+,188,219,"InformationProviding,NeutralResponse",218,-1,"
This check only applies to CFRG curves.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7775,TLS 15+,188,220,InformationProviding,,-1,">          string    server public host key and certificates (K_S)
>      Since this key exchange method does not require the host key to be
>      used for any encryption operations, this message is OPTIONAL.  If the
>      ""null"" host key algorithm described in Section 5 of [RFC4462] is
>      used, this message MUST NOT be sent.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7776,TLS 15+,188,221,"ClarificationElicitation,ClarificationElicitation",220,-1,"
I am assuming in this situation there is some other form of
authentication?
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7777,TLS 15+,188,222,InformationProviding,,-1,">          string    I_C, payload of the client's SSH_MSG_KEXINIT
>          string    I_S, payload of the server's SSH_MSG_KEXINIT
>          string    K_S, server's public host key
>          string    Q_C, client's ephemeral public key octet string
>          string    Q_S, server's ephemeral public key octet string
>          mpint     K,   shared secret",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7778,TLS 15+,188,223,"InformationProviding,ProposeAction,NeutralResponse",222,-1,"
The actual equation is way up above this in the document, which is
presumably not great.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7779,TLS 15+,188,224,InformationProviding,,-1,">      Each key exchange method is implicitly registered by this document.
>      The IESG is considered to be the owner of all these key exchange
>      methods; this does NOT imply that the IESG is considered to be the
>      owner of the underlying GSS-API mechanism.
>   5.2.1.  gss-nistp256-sha256-*",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7780,TLS 15+,188,225,"ProposeAction,ProposeAction",224,-1,"
Again, can you refactor this section so it's not so duplicative.
",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7781,TLS 15+,188,226,InformationProviding,,-1,">      the target the user intended.  Some mechanisms implementations (like
>      commonly used krb5 libraries) may use insecure DNS resolution to
>      canonicalize the target name; in these cases spoofing a DNS response
>      that points to an attacker-controlled machine may results in the user
>      silently delegating credentials to the attacker, who can then
>      impersonate the user at will.",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7782,TLS 15+,188,227,"Question,ClarificationElicitation",226,-1,"
Is this something new in this document?",<CABcZeBNCUSpGihHz6bPBSALS4-34Tm7W36BCZ_Ev8OQz3KtVag@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 16:24:27
7783,TLS 15+,188,525,"InformationProviding,ContextSetting,ContextSetting",197,-1,"Eric:

I'm not an author of this draft, but I can respond with respect to the
following:
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7784,TLS 15+,188,526,Answer,197,197,"> > | gss-group14-sha256-*     | SHOULD/RECOMMENDED
> > | gss-group15-sha512-*     | MAY/OPTIONAL
> > | gss-group16-sha512-*     | SHOULD/RECOMMENDED
> Why are you only specifying SHA-512 with 4096-bit groups.
> SHA-256 is still reasonable at that size?",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7785,TLS 15+,188,527,"InformationProviding,Answer,ProposeAction,Answer",197,197,"
There exist NSA recommendations aimed at ""organizations that run classified
or unclassified national security systems (NSS) and vendors that build
products used in NSS.""

https://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf

These recommendations cover a usage case for software that implements the
above algorithms. These recommendations call for the following minimums:

- Diffie Hellman: 3072-bit or larger

- Hashing: SHA-384 or larger

These recommendations are most effectively met by associating group15 and
group16 with SHA-512.

Otherwise, products that wanted to meet these recommendations would have to
use much larger and more expensive DH groups in order to meet the
SHA-384-or-better requirement.
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7786,TLS 15+,188,528,"InformationProviding,Answer,ProposeAction,Answer",199,199,"
Yes, legacy versions of these algorithms use MD5. This has no security
implications and the hash can be statically encoded in the implementation.
The implementation does not have to implement MD5 at run-time.

If a different hash is chosen for new algorithms, MD5 is still in place for
older algorithms, so applications would have to hardcode both the MD5 and
newer hashes. There does not appear to be a compelling reason for this
since there is no security benefit from using a stronger hash.
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7787,TLS 15+,188,529,"InformationProviding,Answer,ContextSetting,Answer",207,207,"
If the author is aiming for consistency with use of ECC in SSH, it would be
consistent to allow, but not require, compressed representation.

Precedent in RFC 5656, ""Elliptic Curve Algorithm Integration in the Secure
Shell Transport Layer"":

Q is the public key encoded from an elliptic curve point into an
octet string as defined in Section 2.3.3 of [SEC1
<https://tools.ietf.org/html/rfc5656#ref-SEC1>]; point compression
MAY be used.
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7788,TLS 15+,188,530,"InformationProviding,ExtensionOfPrevious","207,529",207,"
https://tools.ietf.org/html/rfc5656#section-3.1
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7789,TLS 15+,188,532,"InformationProviding,Answer,Answer",221,221,"
Yes, the purpose of all of these GSS key exchange methods is to allow host
authentication to be performed through some external mechanism via GSSAPI.
Kerberos is a common usage case. When used with these key exchange methods
it can authenticate the host to the client without the use of SSH host keys.
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7790,TLS 15+,188,533,"InformationProviding,ExtensionOfPrevious,InformationProviding","221,532",221,"
The other issues seem relevant to raise.
",<CADPMZDDjFghyj=1L+kq_XAXiea1W2LNEG9d13YY+OSyyd61niA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 21:52:50
7791,TLS 15+,188,806,"ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse",527,527,"
My question is why these groups are only specified with SHA-512, and not
SHA-256. I think it's fine to specify them for SHA-512.
",<CABcZeBN=aHSTGusNWaCDcyv5BtnCjTU9jaTcohY4L-PHYk8e2Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-06 20:03:15
7792,TLS 15+,188,1101,"InformationProviding,Answer,Answer",806,-1,"Well, to avoid algorithm spam. There exist objections to have as many
algorithms as we do, to begin with.

The added value of a SHA256 version when there already exists a SHA512
version for the same DH group appears particularly small.
",<CADPMZDAe0HVz8NKCEPthV6AfZHJPuvk_S7-vMmVZQpyy_0F+vw@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-06 22:07:23
7793,TLS 15+,188,1415,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1101,1101,"
The value here would be allowing you to have a 4096-bit DH group without
having to also have a SHA-512 implementation.

I recognize that the NSA recommendations you point to say you should use
SHA-512, however

(a) NSA recommendations don't have any special authority in IETF
(b) they say you should use SHA-512 for *integrity* but assuming I
understand these documents correctly, here H is being used as a KDF, so
it's not clear that the same reasoning applies (especially given that the
document you cite doesn't provide much in the way of reasoning).

-Ekr
",<CABcZeBM-XKUjAWA7jX=ShnQaRdXmAChxNis_PCrqfMXd+yfRmg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-07 07:19:23
7794,TLS 15+,188,1418,"Question,NeutralResponse,Question,Disagreement",1415,-1,I see no point in adding another hash.  What’s the reason?,<186956AD-4D35-4CA4-9864-81B57080E0EA@akamai.com>,rsalz@akamai.com,0.0,1,1,2018-04-07 14:23:24
7795,TLS 15+,188,1430,"Answer,Answer",1418,1418,"
So that you can have an implementation that spans a variety of groups with
just SHA-256.
",<CABcZeBOnd7yBgYf4-bfK1vLoX5DdeKafG8GeX+95dn6YrXW7bg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-07 16:38:21
7796,TLS 15+,188,1477,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Disagreement,NeutralResponse",1430,-1,"I think this misunderstands the scope of the GSS draft.

The GSS draft discusses GSS key exchange methods for SSH. These are not the
main key exchange methods for SSH, they are a *version* of the main key
exchange methods for use with GSS.

Because these are a *version* of the main key exchange methods, the main
value of this draft is that it updates the GSS key exchange methods to be
in line with how the main key exchange methods for SSH have evolved.

As Mark has pointed out, we have already added these key exchange methods
to SSH in RFC 8268:

diffie-hellman-group14-sha256
diffie-hellman-group15-sha512
diffie-hellman-group16-sha512
diffie-hellman-group17-sha512
diffie-hellman-group18-sha512

The whole argument about which groups and which hashes we should have has
already been staged, multiple times, and this is what we arrived at.

The GSS draft is merely mirroring what we have already done for use with
the GSS key exchange methods. It does not make sense for the GSS key
exchange methods to do something entirely different than what the main key
exchange methods do. It makes sense for the GSS key exchange methods to be
consistent with what we have already done for the main ones.
",<CADPMZDAvxqd0SGb2QomxuoBTjM=V96FR8qVTFnsWG5EjJvQ0JA@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-07 21:19:22
7797,TLS 15+,188,1537,"NeutralResponse,ContextSetting,NeutralResponse",1477,1477,"
OK. I regret not noticing this when I reviewed the SSH document, but as you
say, it's too late now.

-Ekr
",<CABcZeBOeEqUY-sfxqccsbppysrRmTYbXYmY0f87ZtEaX_abxUw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-08 06:59:49
7798,TLS 15+,188,1572,"InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction,UnderstandingNegative",527,527,"
I do not quite understand this response.  I can understand a desire to include a ciphersuite that aligns with the NSA guidance so that anyone that needs to follow it can easily do so, but that does not seem to be what you are suggesting.  Looking at page 2 of the document that you cite, a ciphersuite that uses the NIST P-384 curve, SHA-384, and AES-256 is needed.

I would be in favor os adding such a ciphersuite as MAY/OPTIONAL.
",<ED376226-E1BA-4ED5-9254-DF2B75E93965@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2018-04-07 11:10:55
7799,TLS 15+,188,1645,"Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",1572,1572,"
The key exchange ECDH NISTP-384 with SHA-384 is already in RFC 5656 along with ECDSA NISTP-384 with SHA-384 as a public key algorithm.

AES256-CBC is OPTIONAL in RFC4250 and RFC4253 as a symmectric cipher.

AES256-CTR is RECOMMENDED in RFC4344 as a symmectric cipher.

RFC3526 groups are provided for SSH in RFC8268:

group14 with sha256 is SHOULD/RECOMMENDED in RFC8268

group15 with sha512 is OPTIONAL in RFC8268

group16 with sha512 is OPTIONAL in RFC8268

group17 with sha512 is OPTIONAL in RFC8268

group18 with sha512 is OPTIONAL in RFC8268

Should we have decomposed the group with the hash? Or, should we have used shorter key exchange algorithm names?
Well, perhaps both would have been better, but that should have been done some years ago.

The negotation list is getting a bit long these days and the SSH implementors did not seem to fancy adding SHA256, SHA384, and SHA512 variations of each of the new diffie-hellman groups being added, so the longest one (SHA512) was chosen as it slightly faster to implement on 64-bit architecture machines.

I am given to understand that NIST SP 800-56A revision 3 and FIPS PUB 186-5 may address the use of Finite Field Cryptography safe primes for Diffie-Hellman key exchange sometime this year. (see also URL:
https://csrc.nist.gov/CSRC/media/Publications/sp/800-56a/rev-3/draft/documents/sp800-56ar3-draft.pdf
section 5.5.1 and Appendix E which allow RFC3526 and RFC7919 groups)

For myself, I tend to think that using 2048-bit prime P FFC Diffie-Hellman provable primes that are generated on a bi-weekly basis with Q as a large subgroup of approximately P/2 bits in length and G is a proper generator of q-ordered subgroups. If changed often enough, then there would be no big push to try to precalcualte the majority of the factors of such parameters. Even if we have sufficient sieves to help in factorization, there is still a lot of computation behind breaking a large subgroup. In a Post-Quantum Cryptography world, I tend to trust large FFC calculations over small ECC calculations. Although something better than either would be welcome... always allowing it is desirable to still be able to connect to small embedded devices too.

With RFC4419 and RFC8270 we get safe primes generated with P being a 2048-bits or larger prime. The only downside is that the example calcuation does not always choose a generator g which generates a q-ordered subgroup.
",<5523BEF7-49BC-42B9-8E11-9D5FB635DECF@juniper.net>,mdb@juniper.net,0.0,0,17,2018-04-07 16:59:08
7800,TLS 15+,188,1646,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Agreement,NeutralResponse",1572,1572,"
I think this may already be present, depending on what you are asking.

For myself, I see no problems with the GSS variations of diffie-hellman using the same groups and hashes as RFC8268.
For gss-group14-sha256-* I support RECOMMENDED to move away from the SHA1 variation. I am okay with
gss-group16-sha512-* as either OPTIONAL or RECOMMENDED.

-- Mark",<5523BEF7-49BC-42B9-8E11-9D5FB635DECF@juniper.net>,mdb@juniper.net,0.0,0,17,2018-04-07 16:59:08
7801,TLS 15+,188,1889,"ContextSetting,StateDecision,Apologising,ContextSetting",192,-1,"Chiming in as one of the Authors, sorry for not responding earlier, I've bene
busy and I will follow up with more answers later on as I ge tmore time to
address them.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7802,TLS 15+,188,1891,"InformationProviding,NeutralResponse,StateDecision,NeutralResponse",192,192,"
In general we strived to maintain the same structure as the docuemnt we are
extending. This is why some sections seem repetitive. They are but they also
are consistent with the previous document. We think this is more beneficial
than trying to be more synthetic.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7803,TLS 15+,188,1893,"ClarificationElicitation,ClarificationElicitation",195,195,"
Does this imply it should also be ""the NIST P-256, ..."" ?
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7804,TLS 15+,188,1895,"Answer,NeutralResponse",197,197,"
I thik this has been sactisfactorily discussed later in the thread.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7805,TLS 15+,188,1897,"Answer,Answer,NeutralResponse",199,199,"
Also discussed later, this is just an identifier, and we a re just being
consistent with previous naming which can be hardcoded, no need to implement
MD5.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7806,TLS 15+,188,1899,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",201,201,"
See my explanantion above.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7807,TLS 15+,188,1901,"Question,StateDecision,ClarificationElicitation,NeutralResponse",205,205,"
Is there a reason? We wanted to give implementers a clear linear explanation
without having to jump back and forth to reference what is happening at any
given point.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7808,TLS 15+,188,1903,"Answer,ContextSetting,ProposeAction,Answer,ProposeAction",207,207,"
I think this is because we did not have any good normative reference, but I'll
let Hubert chime in.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7809,TLS 15+,188,1905,"Answer,ContextSetting,Answer",207,207,"
I may be wrong but some compression algorithms have had IPR issues, so this may
derive from a willingness to avoid those, I'll let Hubert chime in here too.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7810,TLS 15+,188,1907,"ProposeAction,StateDecision,NeutralResponse",209,209,"
I think we wanted it explicitly here, to avoid too much referencing and risk of
errors, but I guess we can reference if you feel strongly about this.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7811,TLS 15+,188,1909,"Answer,Answer",221,221,"
As explained elswhere, GSS key exchange assumes GSSAPI authentication.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7812,TLS 15+,188,1911,"InformationProviding,Answer,Answer",227,227,"
No, we just thought important to note, as it was missing in the original
document but it is a know factor to be aware of when dealing with Krb5 which is
de facto the only used GSSAPI mechanism for SHH GSS Key exchanges.

Simo.
",<1523302318.10955.2.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-09 15:31:58
7813,TLS 15+,188,2217,"Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse",1911,1911,"
Just a side note: ""de facto"" are key words there. In practice Kerberos is
the most widely supported GSSAPI mechanism used in SSH. However, GSSAPI key
exchange works equally well with other mechanisms. For example, I believe
we've had someone (either on this list, or on the mostly-zombie SSH list)
mention that they use GSSAPI with X.509 (possibly?) as well as other
mechanisms.
",<CADPMZDDrqhH4U9=omaB98j-2VQys_ybwG+Hy1L194GMqTJ04Zw@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-10 03:02:35
7814,TLS 15+,188,2567,"InformationProviding,Agreement,Answer",2217,2217,"
Yes, there are other mechanisms, but the warning applies to the Krb5 mechanism
explicitly.

Simo.
",<1523361875.10955.15.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-04-10 08:04:35
7815,TLS 15+,188,2592,"InformationProviding,NeutralResponse,ContextSetting,Thanking,NeutralResponse,ContextSetting,Thanking",2217,2217,"
I had almost replied with a similar note, so thanks -- this prompted
me to actually find a link for the ""GSI"" mechanism I remember
hearing about:

http://toolkit.globus.org/toolkit/docs/latest-stable/gsic/
and as used in ssh:
http://grid.ncsa.illinois.edu/ssh/

-Ben",<20180410130112.GI89183@kduck.kaduk.org>,kaduk@mit.edu,0.0,1,0,2018-04-10 08:01:13
7816,TLS 15+,188,2839,"ContextSetting,Apologising,ContextSetting,Apologising",192,-1,"Sorry for the delay in replying was swamped with other work, I should have no
problem replying quickly now.
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7817,TLS 15+,188,2841,"InformationProviding,Answer,ContextSetting,NeutralResponse",197,197,"
I think that was already discussed at length - short version: mirroring of the
regular (non-gss) version of those KEX methods
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7818,TLS 15+,188,2843,"InformationProviding,Answer,Answer",199,199,"
it has no impact on security, it's used only to limit length of the method
name and because MD5 was always used for that
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7819,TLS 15+,188,2845,"InformationProviding,Answer,StateDecision,NeutralResponse",201,201,"
while valid point, it follows the style established in RFC 4462

for a programmer familiar with the old gss KEX methods and general IETF
terminology, the names of the new algorithms alone are sufficient to implement
them

for a programmer just learning it, it's sufficiently detailed to hand-hold the
implementation process (and resolve disputes in case of minor differences)
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7820,TLS 15+,188,2847,"InformationProviding,UnderstandingNegative,NeutralResponse,UnderstandingNegative",205,205,"
I don't think I understand what changes you'd like to see

both FFDH and ECDH are symmetrical... both client and server need to perform
the same operations...
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7821,TLS 15+,188,2849,"InformationProviding,Answer,Answer",207,207,"
because this allows to verify the sanity of the share when it is being parsed,
before the cryptographic routines are processing it, limiting the attack area
(and the implementation may want to handle a clearly malformed key share
and a invalid-value malformed key share differently).
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7822,TLS 15+,188,2851,"InformationProviding,Answer,ContextSetting,Answer",207,207,"
same reason – the uncompressed is the only format that is guaranteed to be
supported and there is no mechanism in SSH to negotiate the supported formats

e.g. the implementation shipped in Red Hat Enterprise Linux does not support
compressed representations

since it's also the same (and only) format used in TLS 1.3, it allows better
cryptographic code reuse

(as Simo pointed out, because the standards allow for compressed
representation, neither is explicit in expected sizes of serialised point
representation so they are listed here, also as a simple sanity check to
perform)
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7823,TLS 15+,188,2853,"InformationProviding,NeutralResponse,StateDecision,NeutralResponse",209,209,"
we do need local nomenclature for the inputs and outputs though

also, having all the necessary checks in a single document allows for easier
code review and verification if they are performed.

I opted for verbosity in the name of security. RFC 7748 is already referenced
in the definitions of the methods.
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7824,TLS 15+,188,2855,"Agreement,Agreement",211,211,"
+1
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7825,TLS 15+,188,2857,"Answer,Answer",213,213,"
because debugging mismatch in key calculation is harder to do than rejection
of a malformed message
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7826,TLS 15+,188,2859,"Answer,Answer",215,215,"
both client and server need to perform that operation
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7827,TLS 15+,188,2861,"Agreement,Agreement",217,217,"
good point
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7828,TLS 15+,188,2863,"InformationProviding,Disagreement,Disagreement,NeutralResponse",219,219,"
no, for CFRG curves the invalid value is a point at infinity, for X25519
invalid value is an all-zero string

so the check if the shared secret is valid must be performed irrespective of
curve used
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7829,TLS 15+,188,2865,"InformationProviding,Answer,Agreement,Answer",221,221,"
yes, Kerberos is not the sole implementation of GSS API
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7830,TLS 15+,188,2867,"InformationProviding,NeutralResponse,StateDecision,NeutralResponse",223,223,"
1. those are equivalent
2. this approach is inherited from RFC 4462; intention being to quickly show
no difference to the underlying inputs (for FFDHE only the hash, prime
and generators are changed)
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7831,TLS 15+,188,2869,"NeutralResponse,NeutralResponse",225,225,"
same replay as with FFDHE methods
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7832,TLS 15+,188,2871,"InformationProviding,Answer,Agreement,Answer",227,227,"
Yes, those are additional security considerations, from discussions with Ben
on Curve-WG ML.
",<1555475.KUsr8aTfev@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-12 20:29:28
7833,TLS 15+,188,3204,"Agreement,Agreement",2841,2841,"
Yes, OK.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7834,TLS 15+,188,3206,"NeutralResponse,Agreement",2843,2843,"
OK.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7835,TLS 15+,188,3208,"NeutralResponse,ContextSetting,ProposeAction,Disagreement",2845,2845,"
Well, I'm a pretty experienced programmer, and I find it pretty hard to
follow.
It's exactly this kind of boilerplate that leads to confusion.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7836,TLS 15+,188,3210,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse",2847,2847,"
Yes, That's why it's confusing to describe their operations in order rather
than
the behavior that a DH peer does and then just the points where they are
inserted in the protocol. Compare, for instance, the TLS 1.3 specification,
where both KeyShare (https://tools.ietf.org/html/d
raft-ietf-tls-tls13-28#page-53) and
the DH computations (https://tools.ietf.org/html/d
raft-ietf-tls-tls13-28#section-7.4) are
described in an endpoint agnostic manner. DH is inherently symmetrical.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7837,TLS 15+,188,3212,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,UnderstandingNegative",2849,2849,"
I think you're misunderstanding me. My point is that there are already
documents
which describe how to generate the private and public keys for EC. You
should
be referring to them, not recapitulating their contents here.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7838,TLS 15+,188,3214,"InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse",2851,2851,"
Well, in TLS 1.3 this was an unfortunate concession to backward
compatibility
with a very widely deployed installed base. I'm trying to determine if
that's true
here. As for negotiation, this can be fixed by creating a new code point.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7839,TLS 15+,188,3216,"InformationProviding,NeutralResponse,ProposeAction,Social,NeutralResponse,ProposeAction",2853,2853,"
It's also an opportunity for new mistakes to be made as these documents are
less thoroughly reviewed than RFC 7748, as well as having two normative
specifications for ostensible the same algorithm, which we try not to do.
Please
defer the algorithms to the original sources.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7840,TLS 15+,188,3218,"Question,NeutralResponse,Question,NeutralResponse",2857,2857,"
This is explicitly justified as ""preventing distinguishing attacks"". How
does it do so?
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7841,TLS 15+,188,3220,"InformationProviding,Agreement,ProposeAction,NeutralResponse",2859,2859,"
Yes, that's why it's very confusing to have it in the middle of the
server's operations.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7842,TLS 15+,188,3222,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse,ProposeAction",2863,2863,"
Hmm... TLS 1.3 does not specify that one must validate the output of the DH
computation. So, the IETF should be consistent on this point. If you think
that
TLS 1.3 is wrong, please explain why.

Second, the specific check you are requiring for the CFRG curves is the
one applicable if you do the recommended DH computations. Here's the
relevant text for TLS 13.

For X25519 and X448, implementations SHOULD use the approach
specified in [RFC7748 <https://tools.ietf.org/html/rfc7748>] to
calculate the Diffie-Hellman shared secret.
Implementations MUST check whether the computed Diffie-Hellman shared
secret is the all-zero value and abort if so, as described in
Section 6 of [RFC7748]
<https://tools.ietf.org/html/rfc7748#section-6>.  If implementors use
an alternative
implementation of these elliptic curves, they SHOULD perform the
additional checks specified in Section 7 of [RFC7748]
<https://tools.ietf.org/html/rfc7748#section-7>.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7843,TLS 15+,188,3224,"NeutralResponse,StateDecision,ProposeAction",2867,2867,"
I'll take a look at your revision and see what I think.
",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7844,TLS 15+,188,3226,"NeutralResponse,Disagreement",2869,2869,"
Yes. and I have the same objection.

-Ekr",<CABcZeBP5LRFuH37166YMiXKce-GgJhnji_msYMrac=eQ531AMQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-13 06:41:37
7845,TLS 15+,188,3576,"InformationProviding,ContextSetting,InformationProviding",3226,-1,"For the record, I think most of Eric's recommendations here are very
sensible.
",<CADPMZDAELH--xDdfs9Fri0GkG+46m9u6HpJ=O2z-AynEousn7w@mail.gmail.com>,denisbider.ietf@gmail.com,0.0,0,7,2018-04-13 21:51:14
7846,TLS 15+,188,3879,"StateDecision,NeutralResponse,StateDecision",3208,3208,"
done
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7847,TLS 15+,188,3881,"InformationProviding,NeutralResponse,NeutralResponse",3210,3210,"
the actions performed in context of GSSAPI-infused key exchange aren't
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7848,TLS 15+,188,3883,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",3212,3212,"
proposed in https://github.com/simo5/ietf/pull/24
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7849,TLS 15+,188,3885,"InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",3214,3214,"
or can be fixed by mandating the most-widely supported format, and if somebody
is interested in supporting compressed, he or she can propose that extension
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7850,TLS 15+,188,3887,"InformationProviding,NeutralResponse,NeutralResponse",3216,3216,"
https://github.com/simo5/ietf/pull/24
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7851,TLS 15+,188,3889,"StateDecision,NeutralResponse,StateDecision",3218,3218,"
removed
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7852,TLS 15+,188,3891,"NeutralResponse,NeutralResponse",3220,3220,"
the client part is referencing the server part
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7853,TLS 15+,188,3893,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ContextSetting,UnderstandingNegative",3222,3222,"
Section 4.2.8.1:

Peers MUST validate each other's public key Y by ensuring that 1 < Y
< p-1.  This check ensures that the remote peer is properly behaved
and isn't forcing the local system into a small subgroup.

and section 4.2.8.2 of draft-28:

For the curves secp256r1, secp384r1 and secp521r1, peers MUST
validate each other's public value Q by ensuring that the point is a
valid point on the elliptic curve.  The appropriate validation
procedures are defined in Section 4.3.7 of [X962] and alternatively
in Section 5.6.2.3 of [KEYAGREEMENT].  This process consists of three
steps: (1) verify that Q is not the point at infinity (O), (2) verify
that for Q = (x, y) both integers x and y are in the correct
interval, (3) ensure that (x, y) is a correct solution to the
elliptic curve equation.  For these curves, implementers do not need
to verify membership in the correct subgroup.

seem to me to be more relevant and quite detailed.

RFC 7748 says that the verification is optional, I don't see why making it
mandatory is incorrect for SSH. For nist curves, the verification is about
public key, not shared secret, it's just performed in the same step.
",<3446969.zDdGGYQIsg@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-25 20:53:57
7854,TLS 15+,188,4150,"InformationProviding,NeutralResponse,NeutralResponse",3881,3881,"
Neither are they in TLS, but we managed to put the DH part in one place.
",<CABcZeBPeNGVy51uz78dk2REYKG8yugFvB3XdZ5PBLLFnrALTRA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-25 12:55:21
7855,TLS 15+,188,4152,"NeutralResponse,StateDecision,ProposeAction",3883,3883,"
I will review this.
",<CABcZeBPeNGVy51uz78dk2REYKG8yugFvB3XdZ5PBLLFnrALTRA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-25 12:55:21
7856,TLS 15+,188,4154,"InformationProviding,Agreement,Disagreement",3885,3885,"
Yes, but then you have both.
",<CABcZeBPeNGVy51uz78dk2REYKG8yugFvB3XdZ5PBLLFnrALTRA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-25 12:55:21
7857,TLS 15+,188,4157,"Agreement,NeutralResponse,ProposeAction,NeutralResponse",3891,3891,"
Yes, that's why I said you should put all the DH operations in one place.
",<CABcZeBPeNGVy51uz78dk2REYKG8yugFvB3XdZ5PBLLFnrALTRA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-25 12:55:21
7858,TLS 15+,188,4160,"InformationSeeking,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ClarificationElicitation,NeutralResponse",3893,3893,"
I think we're talking past each other. The TLS spec requires that:

- You do public key validation for FFDHE and NIST curves
- You do output validation for CFRG curves.

Unless I am misreading your text, you are requiring that you also do output
validation for the NIST curves. Is that correct? If so, can you provide a
source for why?

-Ekr",<CABcZeBPeNGVy51uz78dk2REYKG8yugFvB3XdZ5PBLLFnrALTRA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-04-25 12:55:21
7859,TLS 15+,188,4323,"InformationProviding,Disagreement,Disagreement,ContextSetting",4150,4150,"
That's not true:
https://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-7.4
https://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-4.2.8.1
https://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-4.2.8.2
",<1822880.CWREsZFPS8@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-26 13:46:24
7860,TLS 15+,188,4325,"InformationProviding,Answer,NeutralResponse",4160,4160,"
http://www.secg.org/sec1-v2.pdf Section 3.3.1. step 2 of the ""Calculate a
shared secret value as follows"" algorithm.
",<1822880.CWREsZFPS8@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-04-26 13:46:24
7861,TLS 15+,188,4425,"InformationProviding,NeutralResponse,NeutralResponse",4323,4323,"
My point was that they're not separated between Client and Server,
",<CABcZeBPSZBa78hM-t+p2dcmiD5=Q=-pqFHvNuqJ-sj_Vh7=-=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-18 14:09:46
7862,TLS 15+,188,4429,"InformationProviding,ContextSetting,ProposeAction,Apologising,NeutralResponse,Apologising",4325,4325,"
Sorry for the delay on this. I've been asking cryptographers. What I
understand
is that this is redundant for these NIST curves as long as you check
the input points, which we do. However, maybe for other curves it is a
problem.
I guess it's OK to leave here.

-Ekr",<CABcZeBPSZBa78hM-t+p2dcmiD5=Q=-pqFHvNuqJ-sj_Vh7=-=A@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-18 14:09:46
7863,TLS 15+,188,4451,"Question,Social,Question",4152,4152,"
Hi Eric,
did you have time to look at this ?
Or do you prefer to get a new draft with these changes ?

Simo.",<1525201687.32101.39.camel@redhat.com>,ssorce@redhat.com,0.0,0,15,2018-05-01 15:08:07
7864,TLS 15+,188,4481,"NeutralResponse,NeutralResponse",4451,-1,"These changes look fine, though they only address some of my comments.
",<CABcZeBOnQDS=+Uz+Ue-6ytP+bu13+PfKhAmCHqna6C858jrymg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-18 14:12:05
7865,TLS 15+,188,4522,"Question,ClarificationElicitation,ClarificationElicitation",4481,4481,"
Just for clarity, is the change to describe the whole DH exchange in
one place what you see missing ? Is that a deal breaker ?
Anything else ?

Simo.
",<1526923646.10011.43.camel@redhat.com>,ssorce@redhat.com,0.0,0,15,2018-05-21 13:27:26
7866,TLS 15+,188,4580,"Question,InformationProviding,Answer,Question,Answer,NeutralResponse",4522,4522,"
That and the repeated text that is the same for each group.

I'm not sure it's a dealbreaker, but it's a real point of concern for me.
Is there
strong WG consensus to retain the current structure, or is this just what
happens
to be there.

-Ekr
",<CABcZeBO9fhkjcfqomnmyY8YJw93u9t7B=QC05aDGBwGgAOpd_w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-29 12:27:34
7867,TLS 15+,188,4648,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",4580,4580,"
the fix for repeated text about groups is already merged to master, for ECDHE:
https://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/
draft-ietf-curdle-gss-keyex-sha2.xml#L537-L553
and for FFDHE:
https://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/
draft-ietf-curdle-gss-keyex-sha2.xml#L148-L164
",<34725207.E0R9U7BB6Z@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-05-30 12:25:19
7868,TLS 15+,188,4683,"Thanking,InformationSeeking,ProposeAction,ProposeAction,Thanking","4580,4648",4648,"
Thanks Hubert.

Eric,
it be nice if you could give guidance on how you would like to see the
DH exchange explanation changed, assuming that's the only thing of
concern left for you, feel free to point out anything else as well.

If you prefer to have a new draft submitted, with the changes above, as
a baseline for further discussion, I can submit one.

Simo.",<1527683712.25240.42.camel@redhat.com>,ssorce@redhat.com,0.0,0,15,2018-05-30 08:35:12
7869,TLS 15+,188,4753,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",4683,-1,"Sure. I was thinking something like this

5.1.
5.1.1. Generic Procedures
- Generating a DH ephemeral
- Verifying the peer's ephemeral
- Computing the shared key
- Verifying the output
- Computing the key hash and MIC

5.1.2. GSS Key Exchange Steps
Client calls GSS_Init_sec_context()... [5.1.1 step 2]
Server verifies Q_C and calls GSS_Accept_sec_context [5.1.1, step 4]
Server generates ephemeral and computes the shared key [reduced 5.1.1 step
5]
Server call to GSS_Accept_sec_context [5.1.1 step 6]
Client verifies Q_S and computes the shared key [5.1.1 step 7++]
Client calls GSS_VErifyMIC [5.1.1. step 8]

It's hard for me to see if you caught everything else. If you want to
submit a new draft, I can take a look, either before or after this
change.

-Ekr
",<CABcZeBNq3kDq5=0K4ov1yOCEAX8sqPHfYZDsNz1V6dn+WPBb0g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2018-05-30 06:24:10
7870,TLS 15+,188,4846,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,NeutralResponse,ProposeAction,StateDecision",4753,4753,"
Ok, I guess will try to get the change above in first; to cut on draft
churn.
in the meanwhile if you want to see the current text we are working on
it is available here[1], with commit history (so you can diff [2] for
the previous draft [3] if you wish).

Simo.

[1] https://github.com/simo5/ietf/blob/master/draft-ietf-curdle-gss-key
ex-sha2.xml
[2] https://github.com/simo5/ietf/compare/cbb10832e376e3abab3164f9bb7d2
e759c2bea0b...6057b9920920640f8f193160d00150890adc222b
[3] https://github.com/simo5/ietf/blob/cbb10832e376e3abab3164f9bb7d2e75
9c2bea0b/draft-ietf-curdle-gss-keyex-sha2.xml
",<1527690292.25240.46.camel@redhat.com>,ssorce@redhat.com,0.0,0,15,2018-05-30 10:24:52
7871,TLS 15+,188,4936,"InformationProviding,Social,NeutralResponse,StateDecision",4753,-1,"Hi Eric,
I posted a new draft with extensive modification to Section 5,
hopefully they meet your requests.",<79c83729b7778cab8f823d9e8dd85488e9482156.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-07-02 11:54:06
7872,TLS 15+,188,4937,"ExtensionOfPrevious,StateDecision",4936,-1,"
nothing has changed of the described protocol itself, just stuff got
shuffled around and I also provided a little artwork consistent with
RFC 5656 to hopefully aid at better understanding of the flow.",<79c83729b7778cab8f823d9e8dd85488e9482156.camel@redhat.com>,simo@redhat.com,0.0,0,15,2018-07-02 11:54:06
7873,TLS 15+,189,31,"ContextSetting,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security of the IETF.",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7874,TLS 15+,189,32,"InformationProviding,InformationProviding,ExtensionOfPrevious",31,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-15.txt
Pages           : 113
Date            : 2016-08-17",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7875,TLS 15+,189,33,"InformationProviding,InformationProviding,ExtensionOfPrevious",32,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7876,TLS 15+,189,34,"InformationProviding,InformationProviding,ExtensionOfPrevious",33,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7877,TLS 15+,189,35,"InformationProviding,InformationProviding,ExtensionOfPrevious",34,-1,"
There's also a htmlized version available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-15",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7878,TLS 15+,189,36,"InformationProviding,InformationProviding,ExtensionOfPrevious",35,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-15",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7879,TLS 15+,189,37,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,Social","35,36",-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7880,TLS 15+,189,38,"InformationProviding,InformationProviding,ExtensionOfPrevious",37,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<147146945808.23788.9425861240254855670.idtracker@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2016-08-17 14:30:58
7881,TLS 15+,190,0,Social,,-1,"Hi all,",<CANh-dXkbqBpGUrr-dXceQ5HzDjC6mSrrudTKjWwaBQcSO584ug@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-01 09:35:27
7882,TLS 15+,190,16,"ContextSetting,InformationProviding,ContextSetting",,-1,"
When I brought web packaging to IETF99 DISPATCH
(https://datatracker.ietf.org/doc/minutes-99-dispatch/), several
people said they wanted to see what it would look like split into
layers. https://tools.ietf.org/id/draft-yasskin-http-origin-signed-responses-00.html
discusses use cases and an outline of what the signing layer needs to
look like, but doesn't include an actual proposal for signatures yet.",<CANh-dXkbqBpGUrr-dXceQ5HzDjC6mSrrudTKjWwaBQcSO584ug@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-01 09:35:27
7883,TLS 15+,190,17,"Question,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction",16,-1,"
What do you think? Is splitting the packaging proposal still the right approach?",<CANh-dXkbqBpGUrr-dXceQ5HzDjC6mSrrudTKjWwaBQcSO584ug@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-01 09:35:27
7884,TLS 15+,190,18,"ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious,ContextSetting",17,-1,"
I've also started a thread in art@ to talk about the packaging use
cases overall: https://mailarchive.ietf.org/arch/msg/art/gaS8EHxsdzcyPCaSqSyWSh-WbMY",<CANh-dXkbqBpGUrr-dXceQ5HzDjC6mSrrudTKjWwaBQcSO584ug@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-01 09:35:27
7885,TLS 15+,190,21,Social,,-1,"Hi Jeffrey,",<7CF7F94CB496BF4FAB1676F375F9666A37766651@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:04:02
7886,TLS 15+,190,72,"ContextSetting,InformationProviding,ContextSetting,Thanking",16,-1,"
I spotted this yesterday and found it an interesting read, so thanks for starting a discussion.",<7CF7F94CB496BF4FAB1676F375F9666A37766651@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:04:02
7887,TLS 15+,190,73,"NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting","16,72",-1,"
Your draft references draft-cavage-http-signatures, which we have been using on a project to add some authenticity to HTTP/2 pushed content. I'm still processing your draft but can see how it might complement our approach or help satisfy the higher goal.",<7CF7F94CB496BF4FAB1676F375F9666A37766651@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:04:02
7888,TLS 15+,190,74,"InformationProviding,InformationProviding,ExtensionOfPrevious,Answer","17,73",-1,"
Meanwhile, web packaging is beyond the scope of my needs.",<7CF7F94CB496BF4FAB1676F375F9666A37766651@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:04:02
7889,TLS 15+,190,75,"Agreement,InformationProviding,ExtensionOfPrevious,Answer","17,74",-1,"
Therefore I support the split because it's provides a more compelling document to consider, in my particular use case.",<7CF7F94CB496BF4FAB1676F375F9666A37766651@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:04:02
7890,TLS 15+,190,95,"Question,NeutralResponse,InformationSeeking,Question,ContextSetting,ProposeAction",73,73,"
I'm glad to hear it. :) What kind of software winds up checking that
authenticity? How do you transmit the public key? Do you need to
revoke keys or prevent downgrade attacks? (I'd be happy to read a
document about this, if you have one, rather than making you retype it
on the mailing list.)
",<CANh-dX=AFEmJ-yuHxnSYycxN2Rv8V40LzwYeDHGtgZEoJeVHog@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-01 10:18:01
7891,TLS 15+,190,98,"Answer,InformationProviding,Answer",95,-1,We've written up some of it in the I-D draft-pardue-quic-http-mcast. Section 6 and appendix B are particularly relevant.,<7CF7F94CB496BF4FAB1676F375F9666A3776666B@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:36:33
7892,TLS 15+,190,126,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",98,-1,"
We expect the checks to happen in the application code, running in or above a HTTP UA of some sort. E.g. an app that incorporates libcurl, or JavaScript application code executing in a browser.",<7CF7F94CB496BF4FAB1676F375F9666A3776666B@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-01 17:36:33
7893,TLS 15+,190,181,"NeutralResponse,Thanking,InformationProviding,ContextSetting,ProposeAction,Thanking",98,-1,"Thanks. In draft-pardue-quic-http-mcast-01 you do have enough of a channel
in the Alt-Svc header to transmit a signing key, so you could use
draft-cavage-http-signatures, but the spec and examples show the public key
being identified alongside the signature, which isn't enough to establish
that the expected sender is actually the one that signed the message.",<CANh-dX=ocTOOq1xnTEf9Da5vPEaXo3qJu3QDD00T4nsuoMx_7A@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:47:22
7894,TLS 15+,190,182,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious",181,-1,"
draft-yasskin-http-origin-signed-responses would be harder to use
incorrectly inside higher-level protocols, since it insists that the key is
trusted for the example.com domain.",<CANh-dX=ocTOOq1xnTEf9Da5vPEaXo3qJu3QDD00T4nsuoMx_7A@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:47:22
7895,TLS 15+,190,185,Social,,-1,"Hi Jeffrey,",<7CF7F94CB496BF4FAB1676F375F9666A37766C6F@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-06 19:51:57
7896,TLS 15+,190,236,"Agreement,NeutralResponse,InformationProviding,Agreement,ContextSetting","181,182",-1,"
You make a good observation. draft-pardue-quic-http-mcast-01 skips some details, we have an implementation that does some additional things that aren't explain anywhere (yet). Since this is Alt-Svc, we try to follow those security expectations in our implementation, to form a bit of a closed loop. The sender's signature keyID is in the form of a certificate that is valid for the sender's source IP and the origin.",<7CF7F94CB496BF4FAB1676F375F9666A37766C6F@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-06 19:51:57
7897,TLS 15+,190,237,"Question,Question,ExtensionOfPrevious",236,-1,"
Is that similar to draft-yasskin-http-origin-signed-responses?",<7CF7F94CB496BF4FAB1676F375F9666A37766C6F@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-06 19:51:57
7898,TLS 15+,190,238,"ContextSetting,ProposeAction,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction",237,-1,"
draft-cavage-http-signatures leaves the usage of KeyId open, so looking ahead we'd have to profile or mandate our approach. If your proposal is stricter, that could help simplify things for us in terms of documentation and getting wider adoption/support.",<7CF7F94CB496BF4FAB1676F375F9666A37766C6F@bgb01xud1012>,Lucas.Pardue@bbc.co.uk,0.0,0,13,2017-09-06 19:51:57
7899,TLS 15+,190,328,"Answer,InformationProviding,Answer,ProposeAction",237,-1,"draft-yasskin-http-origin-signed-responses does plan to require that the
certificate is trusted for the sender's origin. My proposal doesn't require
the certificate to include the sender's source IP, so if you need that in
addition to the origin, you'd wind up profiling mine too.
",<CANh-dX=zeFx=s9zPp9pcM-2UM84SotERd4bsyX-U7tyvkjP7jQ@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 17:20:56
7900,TLS 15+,190,410,"NeutralResponse,InformationSeeking,InformationProviding,Answer,ContextSetting,ProposeAction","16,17",17,"
Some random comments (in no practicular order nor connection):

- The main problem seems to be freshness: How to ensure that the signed
responses are not stale (this appears to be connected to the HTTP
caching model).

- Regarding Extended Key Usage: I do not think EKU would be good for
use-case like this even if it was decided that one needed to flag
certificates for this kind of usage.

The reason is that while by specification EKU only appiles to usage
of the certificate itself, de-facto interpretation (which browsers
actually rely on security!) is that EKU is inherited down the
chain. Thus to add a new EKU to end-entity certificates, it may be
necressary to re-issue intermediates, which is quite lengthy process
for a reason.

Having a certificate extension would be another possibility, however
that also has its problems (will likely take quite long time to be
available and is of questionable benefit, because either the
certificate does not actually need it, or it can be used in dangerous
ways anyway).

- The main risk in just using server PKI keys is server accidentially
signing a valid response. Such accidential signatures can come from
two sources:

1) Confusion with some other type of key exchange.
2) Confusion with some other type of signature.

The first is mainly risk for OID 1.2.840.113549.1.1.1 generic RSA
keys, as due to server misconfiguration, those can be used with
various broken key exchanges that may be exploitable to create valid
signatures. Other key algorithms, like 1.2.840.113549.1.1.10
(RSA-PSS), 1.2.840.10045.2.1 (generic ECC), 1.3.101.112 (Ed25519)
and 1.3.101.113 (Ed448) are not affected, or are affected much less.

According to spec, the KeyUsage could be used to disable the
problematic uses without affecting non-problematic ones.
Unfortunately, in practice KeyUsage is not implemented correctly
enough to serve in that role.

The second is mitigated fairly well by using the TLS 1.3 signature
construction with custom label/context, as pointed out in section
4.1 (Proof of Origin).

- Be careful with passing URLs to certificates. There are at least two
kinds of pitfalls here:

1) One needs to hash or MAC the certificate to avoid attacks.
2) The URL could point to some rather sensitive place (for probing or
exploiting bad GET handling).

- On stapling things to certificates, there is presumably also stapling
Certificate Transparency SCTs (and also STHs for interactive
clients).

- If application/http2 type format is used, it obviously can not use
the main header compression state. Less obviously, it does not seem
like it can use any header compression state, and thus, each pair of
sets of headers (request-response pair) needs to be compressed
independently.
",<20170902153253.ugxzbfdtz6pvs7za@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-02 18:32:53
7901,TLS 15+,190,548,"InformationProviding,ContextSetting,Thanking",410,-1,"Thanks for the comments! I have updates for this in
https://github.com/WICG/webpackage/pull/84, and responses inline below.
",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7902,TLS 15+,190,552,"Agreement,InformationProviding,Agreement,ContextSetting",410,410,"
Indeed.

- Regarding Extended Key Usage: I do not think EKU would be good for",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7903,TLS 15+,190,554,"Agreement,StateDecision,NeutralResponse,ProposeAction,StateDecision",410,410,"
Good point. I'll add this to the reasons to avoid an EKU.

Having a certificate extension would be another possibility, however",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7904,TLS 15+,190,556,"NeutralResponse,StateDecision,Thanking,InformationProviding,ProposeAction,StateDecision,Thanking",410,410,"
Thanks for pointing that out. I'll add it as a possibility for
completeness, but I do still prefer just allowing a server PKI key.

- The main risk in just using server PKI keys is server accidentially",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7905,TLS 15+,190,557,"NeutralResponse,InformationProviding,NeutralResponse",410,410,"
The second risk is that server PKI keys have to be stored online, so
they're easier to steal than an offline key, and that's an unnecessary risk
for packages which could be signed with an offline key.
",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7906,TLS 15+,190,559,"NeutralResponse,StateDecision,Thanking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Thanking",410,410,"
Thanks. It sounds like I need to restrict the kinds of keys that are
allowed to be used for these signatures instead of allowing the key from
any trusted certificate. I think I forgot to say it in the draft, but I'm
also expecting to identify exactly one signing algorithm for each key type,
instead of letting attackers specify the algorithm.

According to spec, the KeyUsage could be used to disable the",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7907,TLS 15+,190,561,"ClarificationElicitation,Disagreement,NeutralResponse,UnderstandingNegative,Question,ClarificationElicitation,InformationProviding,ProposeAction,UnderstandingNegative,Apologising",410,410,"
I don't follow this, sorry.

1) You're saying that if the attacker gets to specify their own
certificate, they can a) attack the verifying software or b) cause their
own package to be accepted for the origin?
2) Is this more sensitive than an attacker's page being able to write an
<img src=https://sensitive.info/>? I don't really see how. I can imagine
that we'll need a failed certificate fetch to have the same result as a
successfully-fetched but untrusted certificate.

- On stapling things to certificates, there is presumably also stapling",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7908,TLS 15+,190,563,"ClarificationElicitation,NeutralResponse,InformationSeeking,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",410,410,"
Yeah ... I'd expected folks would be including SCTs into the certificates
themselves, but I see they can also be transmitted through TLS or OCSP
extensions: https://tools.ietf.org/html/rfc6962#section-3.3. Would it be
sensible for this draft to require the SCTs to be embedded in the
certificate or OCSP, or do we need to allow them to appear separately too?

- If application/http2 type format is used, it obviously can not use",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7909,TLS 15+,190,565,"Agreement,NeutralResponse,InformationProviding,Agreement,ContextSetting,ProposeAction",410,410,"
Yes. I've been talking to the Brotli folks about sharing compression state
across bundled sets of requests, but for a single request, it has to be a
pristine state for each one.
",<CANh-dXn_cO36P9OhQ4dBcsKe22jeSQEcptLMY5k6f91eJoj1EA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-06 11:48:49
7910,TLS 15+,190,686,"NeutralResponse,InformationProviding,Agreement",557,557,"
Oh yeah, there is no technical reason to require signatures to be with
the same certificates the server uses.
",<20170906193010.2i5u4yx2l67or5d6@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-06 22:30:10
7911,TLS 15+,190,688,"NeutralResponse,InformationProviding,NeutralResponse",559,559,"
These attacks against generic RSA keys aren't actually confusing
signature algorithm with another signature algorithm, but exploiting
non-signature algorithms to forge signatures.

There were some key type confusion attacks against generic ECC keys too
(there is apparently no ""ECDSA"" key type), but IIRC those did not allow
forging signatures, unlike the attacks on generic RSA keys.

I have seen some papers about confusions between signature algorithms,
but those are seemingly about exploiting weak hash algorithms or
trivial collisions.
",<20170906193010.2i5u4yx2l67or5d6@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-06 22:30:10
7912,TLS 15+,190,690,"Answer,NeutralResponse,InformationProviding,Answer",561,561,"
Well, being able to replace the certificate with different one with the
same key in key exchange is regarded to break the key exchange
security.

Such certificate replacement is especially bad if client trusts other
attributes besides the key and the domain names.

TLS does have extension for sending the client certificate as URL. That
extension does carry SHA-1 (yeah, I know) hash of the certificate in
order to defend against certificate substitution.
",<20170906193010.2i5u4yx2l67or5d6@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-06 22:30:10
7913,TLS 15+,190,692,"Answer,Answer,ContextSetting,ProposeAction",561,561,"
Not really. I meant more references to resources that are not available
in globally routed addresses (especially local LAN addresses).

Requiring CORS preflights for external chains would likely take care of
most of it.
",<20170906193010.2i5u4yx2l67or5d6@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-06 22:30:10
7914,TLS 15+,190,694,"Answer,InformationProviding,NeutralResponse,ContextSetting",563,563,"
The base certificate transprancy has three transport modes, and the
specification requires clients to support all three:

- Stapled in certificate.
- Stapled in OCSP.
- Dedicated TLS extension.

The last is especially significant if the CA does not actually support
CT. And stapling to certificate is technically more difficult to
implement than stapling to OCSP (if webservers actually properly
supported OCSP stapling, I would think that CAs would much rather
staple CT to OCSP than certificates... If they did the stapling at
all.)
",<20170906193010.2i5u4yx2l67or5d6@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-06 22:30:10
7915,TLS 15+,190,833,"NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision",688,688,"
Ah, got it. I've refined that note in my draft.

There were some key type confusion attacks against generic ECC keys too",<CANh-dX=3aJP-4aVPvQki177Y7_jhDQZuLRrgR9QAttGgrtb0oA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-07 10:24:35
7916,TLS 15+,190,835,"Agreement,NeutralResponse,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",690,690,"
That's an odd threat, but sure, it looks straightforward to include the
certificate chain in the signed bytes, like TLS does (
https://tools.ietf.org/html/draft-ietf-tls-tls13-21#section-4.4.3).
",<CANh-dX=3aJP-4aVPvQki177Y7_jhDQZuLRrgR9QAttGgrtb0oA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-07 10:24:35
7917,TLS 15+,190,837,"Question,NeutralResponse,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",692,692,"
An <img> tag can also refer to resources that aren't available in
globally-routed addresses, and we only require CORS for those if the page
wants to read the content of the image. Since we're not letting the
attacker (author of the ""signed"" response) read the content of the
certificate, just use it to validate the signature, I don't yet see the
need for CORS. What's the attack here?

I think the attacks along these lines in
https://tools.ietf.org/html/rfc6066#section-11.3 don't apply, since an
attacker who can get a client to download a package and then retrieve
certificates referenced from it, can also get the client to perform the
same fetches in other ways.
",<CANh-dX=3aJP-4aVPvQki177Y7_jhDQZuLRrgR9QAttGgrtb0oA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-07 10:24:35
7918,TLS 15+,190,839,"NeutralResponse,InformationProviding,NeutralResponse,ProposeAction",694,694,"
I'm not sure it's worth supporting the use case of a CA that doesn't
support CT, since Chrome's going to require them all to support CT in 7
months (
https://groups.google.com/a/chromium.org/d/topic/ct-policy/sz_3W_xKBNY/discussion).
That said, if we staple OCSP responses using the TLS CertificateEntry
format, SCTs fit in exactly the same place.
",<CANh-dX=3aJP-4aVPvQki177Y7_jhDQZuLRrgR9QAttGgrtb0oA@mail.gmail.com>,jyasskin@google.com,0.0,0,16,2017-09-07 10:24:35
7919,TLS 15+,190,922,"Agreement,NeutralResponse,InformationProviding,Agreement",835,835,"
Yes, it is odd, but considering key exchange vulernable to similar
issue is considered broken...
",<20170910124610.hmrrhnurjrgql3b4@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-10 15:46:10
7920,TLS 15+,190,924,"NeutralResponse,Answer",837,837,"
I think there are proposals to require (special) CORS for all requests
to local scope (LAN, localhost) from global scope.
",<20170910124610.hmrrhnurjrgql3b4@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-10 15:46:10
7921,TLS 15+,190,926,"NeutralResponse,InformationProviding,NeutralResponse,ContextSetting",839,839,"
AFAIK, Chrome will accept staples via dedicated TLS extension, which
does not need CA support.

And to extend the argument, if webservers actually properly supported
CT stapling, there would probably be CAs that did not do anything with
CT, even after Chrome switching to require CT for all new certs.
",<20170910124610.hmrrhnurjrgql3b4@LK-Perkele-VII>,ilariliusvaara@welho.com,0.0,0,2,2017-09-10 15:46:10
7922,TLS 15+,191,67,"InformationProviding,ContextSetting,ContextSetting",,-1,"Stephen Farrell has entered the following ballot position for
draft-ietf-netconf-restconf-17: No Objection",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7923,TLS 15+,191,68,"InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social,ProposeAction",67,-1,"
When responding, please keep the subject line intact and reply to all
email addresses included in the To and CC lines. (Feel free to cut this
introductory paragraph, however.)",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7924,TLS 15+,191,69,"InformationProviding,ExtensionOfPrevious,ContextSetting,Social,InformationProviding",68,-1,"
Please refer to https://www.ietf.org/iesg/statement/discuss-criteria.html
for more information about IESG DISCUSS and COMMENT positions.",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7925,TLS 15+,191,70,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",69,-1,"
The document, along with other ballot positions, can be found here:
https://datatracker.ietf.org/doc/draft-ietf-netconf-restconf/",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7926,TLS 15+,191,71,"ExtensionOfPrevious,ContextSetting,ContextSetting",70,-1,"
COMMENT:",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7927,TLS 15+,191,72,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ContextSetting,ProposeAction",71,-1,"
- What about tls1.3 0RTT/replayable-data? There may be a case
to be made to mention this here and e.g. to say that only
idempotent requests (or none) are allowed use 0RTT early data.
Equally you could argue to not say anything since tls1.3 isn't
yet finished. I'd argue that saying something here is better
(and that saying to not use 0RTT at all is best) since
RESTCONF will use standard https libraries, which will at some
point soon support 0RTT and that might even make that happen
more easily than they ought. (This isn't a discuss as tls1.3
isn't yet done so I'd not feel right blocking on this basis,
but were tls1.3 done, which it will be soon I hope, this
would be a definite discuss as RESTCONF differs enough from
a browser for this to be a cause of possibly really bad
security problems.)",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7928,TLS 15+,191,73,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",71,-1,"
1.4: ""Note that there are no interactions at all between the
NETCONF protocol and RESTCONF protocol.  It is possible that
locks are in use on a RESTCONF server, even though RESTCONF
cannot manipulate locks.  In such a case, the RESTCONF
protocol will not be granted write access to data resources
within a datastore."" What you mean is clear, but the text is,
I think, self-contradictory - what is described is an
interaction between the two protocols. (And so is the fact
that access controls need to be commensurate between the two
protocols.)",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7929,TLS 15+,191,74,"InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,ProposeAction",71,-1,"
- section 2: would it be useful to add a reference to BCP195
and say that adhering to that is a good idea?  I think you
could maybe actually lose some (but not all) of the text here
via that single reference. (That might help a bit with
Alexey's discuss, not sure.)",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7930,TLS 15+,191,75,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction",71,-1,"
- 2.5: ""MUST use tls-cilent-auth or MUST use any HTTP
authentication scheme"" is (as Kathleen noted) wishy washy.
And that leaves out html-form-based client auth methods too it
seems. I think you could word this better. (Not that that's
likely to affect the reality that clients here will just use
web engines so there's probably no point in expecting that
RESTCONF can use anything out of the ordinary.) The same
comment applies to section 12 where the same wishy-washy
statement occurs.",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7931,TLS 15+,191,76,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction",71,-1,"
- 12: ""There are many patterns of attack..."" that screams
out for references, please add some to give the reader
a chance to understand if they don't already know.",<147631879723.6373.4811934777234946594.idtracker@ietfa.amsl.com>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-12 17:33:17
7932,TLS 15+,191,147,"ContextSetting,Social,ContextSetting",71,-1,"Hi Stephen,

Just picking out your comments that affect my sections:
",<9C1A4E60-85EE-4BFF-9697-189B59B0EAB6@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-13 19:48:10
7933,TLS 15+,191,149,"Question,InformationProviding,Answer,ContextSetting,ProposeAction,Question,NeutralResponse,ProposeAction",72,72,"
How about this in the Security Considerations section?

Section 2.1 states “A RESTCONF server MUST support the TLS
protocol [RFC5246]”.  This language leaves open the possibility
that a RESTCONF server might also support future versions of the
TLS protocol.   Of specific concern, TLS 1.3 [draft-ietf-tls-tls13]
introduces support for 0-RTT handshakes that can lead to security
issues for REST APIs, as described in the Appendix of the TLS 1.3
RFC.  It is therefore RECOMMENDED that RESTCONF servers do not
support 0-RTT at all (not even for idempotent requests) until an
update to this RFC guides otherwise.
",<9C1A4E60-85EE-4BFF-9697-189B59B0EAB6@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-13 19:48:10
7934,TLS 15+,191,151,"InformationSeeking,Question,InformationProviding,Answer,ContextSetting,ProposeAction,Social,Question,ContextSetting,ProposeAction",74,74,"
Currently section 2 has the sentence: “A RESTCONF server MUST
support the TLS protocol [RFC5246].”   Would it be acceptable
to add to that sentence “, and SHOULD adhere to BCP 195.”?

As for removing text after referencing BCP 195, I don’t see much
overlap.  For instance, BCP 195 has a whole section to recommend
TLS 1.2, but already RESTCONF is using TLS 1.2.  Please let me
know if you had an idea for which text could be removed.
",<9C1A4E60-85EE-4BFF-9697-189B59B0EAB6@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-13 19:48:10
7935,TLS 15+,191,153,"InformationSeeking,Question,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction,Question,Agreement,Disagreement,NeutralResponse",75,75,"
Weird, I searched my mail and I can’t find Kathleen calling
out that “wishy washy” sentence.  Regardless, I looked at it
again and don’t see how to word it better.  FWIW, the current
wording is the result of WG wordsmithing; the sentence use
to have MAY instead of MUST, but folks felt that it wasn’t
accurate enough.  Do you have a suggestion for wording it better?

As for leaving out html-form based auth, this is fine, RESTCONF
doesn’t support forms.
",<9C1A4E60-85EE-4BFF-9697-189B59B0EAB6@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-13 19:48:10
7936,TLS 15+,191,278,Social,,-1,"Hi Kent,
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7937,TLS 15+,191,280,"Agreement,Agreement",149,149,"
I like that.
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7938,TLS 15+,191,282,"Answer,Agreement",151,151,"
Again, that's an improvement I think.
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7939,TLS 15+,191,284,"Agreement,NeutralResponse,ContextSetting,ProposeAction,Agreement,NeutralResponse,Apologising",151,151,"
Haven't had time to do that sorry and won't have today so
you're probably right to not delete anything at this point.
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7940,TLS 15+,191,286,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",153,153,"
I meant Kathleen's ballot comment [1]

She didn't say ""wishy washy"" though:-)

[1]
https://datatracker.ietf.org/doc/draft-ietf-netconf-restconf/ballot/#kathleen-moriarty
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7941,TLS 15+,191,288,"ClarificationElicitation,InformationProviding,Answer,ContextSetting,ProposeAction,Question,NeutralResponse,ProposeAction",153,153,"
So the current (-17) text is:

To authenticate a client, a RESTCONF server MUST use TLS based client
certificates (Section 7.4.6 of [RFC5246]), or MUST use any HTTP
authentication scheme defined in the HTTP Authentication Scheme
Registry (Section 5.1 in [RFC7235]).

The construct ""MUST use <good-thing> or MUST use <bad-thing>""
is what I meant by wishy washy since that really means ""use
<good-thing> or <bad-thing>"" doesn't it?

If it was acceptable then I'd go for:

To authenticate a client, a RESTCONF server SHOULD require TLS
client authentication (Section 7.4.6 of [RFC5246]).

If TLS client authentication is not feasible (e.g. because
one cannot build the required PKI for clients) then HTTP
authentication can be used. In the latter case one of the HTTP
authentication scheme defined in the HTTP Authentication Scheme
Registry (Section 5.1 in [RFC7235]) MUST be used.
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7942,TLS 15+,191,290,"Agreement,NeutralResponse",153,153,"
Ack.
",<033b5ee8-1286-74d2-e148-33e90a332cc4@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 11:42:09
7943,TLS 15+,191,353,"ContextSetting,Social,ContextSetting",278,-1,"Hi Stephen,

Skipping straight to the open points:
",<87D96CEC-79D9-42F4-B5A6-E1A26F50FC90@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-14 18:30:52
7944,TLS 15+,191,355,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",286,286,"
I see, this is where she and I settled on this text:

Client
authentication MUST be implemented using client certificates or MUST
be implemented using an HTTP authentication scheme.  The strength of
these methods vary greatly.  For example, use of a client certificate
is RECOMMENDED, while HTTP Basic authentication [RFC7617] is
NOT RECOMMENDED.
",<87D96CEC-79D9-42F4-B5A6-E1A26F50FC90@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-14 18:30:52
7945,TLS 15+,191,357,"InformationSeeking,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Question,Agreement,ProposeAction",288,288,"
To be honest, I think your text states the recommendation more clearly.  I think we should use your text for this section in the draft, and then add to the Security Considerations section something like the following to capture Kathleen’s comment:

Section 2.5 recommends TLS client certificate based authentication,
but allows the use of any authentication scheme defined in the HTTP
Authentication Scheme Registry.  Implementations need to be aware
that the strength of these methods vary greatly, and that some may be
considered experimental.  Selection of any of these schemes SHOULD
be performed after reading the Security Considerations section of
the RFC associated with the scheme’s registry entry.

What do you think?
",<87D96CEC-79D9-42F4-B5A6-E1A26F50FC90@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-14 18:30:52
7946,TLS 15+,191,358,"Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ExtensionOfPrevious,Question,ProposeAction","288,357",288,"
Actually, I’d like to modify your text above just a little to:

To authenticate a client, a RESTCONF server SHOULD require TLS
client certificate based authentication (Section 7.4.6 of [RFC5246]).
If certificate based authentication is not feasible (e.g. because
one cannot build the required PKI for clients) then an HTTP
authentication MAY be used. In the latter case one of the HTTP
authentication schemes defined in the HTTP Authentication Scheme
Registry (Section 5.1 in [RFC7235]) MUST be used.

Okay?
",<87D96CEC-79D9-42F4-B5A6-E1A26F50FC90@juniper.net>,kwatsen@juniper.net,0.0,1,3,2016-10-14 18:30:52
7947,TLS 15+,191,361,Social,,-1,"Hi Kent,",<fb03a5b9-2588-8f8a-5802-4d3e60d2512d@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 20:51:53
7948,TLS 15+,191,433,"Answer,Agreement,Answer,Agreement,Agreement","357,358",-1,"
That all works for me,",<fb03a5b9-2588-8f8a-5802-4d3e60d2512d@cs.tcd.ie>,stephen.farrell@cs.tcd.ie,0.0,1,0,2016-10-14 20:51:53
7949,TLS 15+,192,0,"InformationProviding,ContextSetting,ProposeAction",,-1,This would make implementations a lot easier (especially ACK generation).,<quicwg/base-drafts/issues/832@github.com>,notifications@github.com,0.0,0,4,2017-10-03 23:29:14
7950,TLS 15+,192,6,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",0,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832",<quicwg/base-drafts/issues/832@github.com>,notifications@github.com,0.0,0,4,2017-10-03 23:29:14
7951,TLS 15+,192,8,Agreement,0,-1,I agree,<quicwg/base-drafts/issues/832/334067548@github.com>,notifications@github.com,0.0,0,4,2017-10-04 00:04:31
7952,TLS 15+,192,14,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",6,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334067548",<quicwg/base-drafts/issues/832/334067548@github.com>,notifications@github.com,0.0,0,4,2017-10-04 00:04:31
7953,TLS 15+,192,16,"Disagreement,ProposeAction",0,-1,"Personally, I don't think it makes it easier. If we add this restriction, we would have to update our implementation to add **extra special case logic** for packet number randomization to not allow 0, and then on the receive side of things, always check to see if packet number was 0 and drop it.",<quicwg/base-drafts/issues/832/334158240@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:40:00
7954,TLS 15+,192,22,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",16,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334158240",<quicwg/base-drafts/issues/832/334158240@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:40:00
7955,TLS 15+,192,24,"InformationProviding,NeutralResponse",0,-1,"That's a little extra logic (one if for generating and one if for receiving). By allowing 0 with the probability of 2^-31 we lose the ability to check that `highest received packet number != 0`, which will already is problem for several implementations, and will produce some really nasty corner cases in the future.",<quicwg/base-drafts/issues/832/334160224@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:46:28
7956,TLS 15+,192,30,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",24,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334160224",<quicwg/base-drafts/issues/832/334160224@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:46:28
7957,TLS 15+,192,40,"Question,ClarificationElicitation,ProposeAction",,-1,"But why do you need this? Are you just trying to track if you have received any packet? If so, wouldn't a separate flag for that case work just as easily? Or a counter for number of packets received?
",<quicwg/base-drafts/issues/832/334163264@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:56:02
7958,TLS 15+,192,41,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",40,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334163264",<quicwg/base-drafts/issues/832/334163264@github.com>,notifications@github.com,0.0,0,4,2017-10-04 13:56:02
7959,TLS 15+,192,43,"Answer,Agreement",,-1,"Correct, the alternative would be creating bools to track if the first packet was already received, just to cover an extremely improbable corner case in the packet number randomisation.",<quicwg/base-drafts/issues/832/334164612@github.com>,notifications@github.com,0.0,0,4,2017-10-04 14:00:05
7960,TLS 15+,192,49,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",43,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334164612",<quicwg/base-drafts/issues/832/334164612@github.com>,notifications@github.com,0.0,0,4,2017-10-04 14:00:05
7961,TLS 15+,192,51,"NeutralResponse,ProposeAction",,-1,"If you don't like using a Boolean, keep a counter, which could have other uses, such as a statistical measurement.",<quicwg/base-drafts/issues/832/334165337@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:02:19
7962,TLS 15+,192,57,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",51,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334165337",<quicwg/base-drafts/issues/832/334165337@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:02:19
7963,TLS 15+,192,59,"NeutralResponse,ContextSetting,InformationProviding,Agreement",,-1,"Stats are useful, but it'd nice to keep my stats code separate from my framing code.  Marten's right, this is definitely annoying to deal with, probably on the send side as well, since our code initializes packet numbers to 0 everywhere under the thought that 0 is an invalid packet number.",<quicwg/base-drafts/issues/832/334166761@github.com>,notifications@github.com,0.0,0,4,2017-10-04 14:06:54
7964,TLS 15+,192,67,"InformationProviding,ExtensionOfPrevious,ProposeAction",59,-1,"
It's really nice to have an invalid packet number constant, and using 0 as an invalid packet number is a lot better than using some other value in my opinion(ie: 2^64-1)",<quicwg/base-drafts/issues/832/334166761@github.com>,notifications@github.com,0.0,0,4,2017-10-04 14:06:54
7965,TLS 15+,192,68,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",67,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334166761",<quicwg/base-drafts/issues/832/334166761@github.com>,notifications@github.com,0.0,0,4,2017-10-04 14:06:54
7966,TLS 15+,192,70,"InformationProviding,NeutralResponse,ProposeAction",,-1,"If we really must have an invalid packet number I would also prefer 2^64-1, as that would never be initialized to, since we use 32 random bits, and we would essentially limit the maximum number allowed by 1. Really, no additional logic required.",<quicwg/base-drafts/issues/832/334167698@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:09:54
7967,TLS 15+,192,76,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",70,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334167698",<quicwg/base-drafts/issues/832/334167698@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:09:54
7968,TLS 15+,192,106,"InformationProviding,Agreement,ContextSetting",,-1,"I agree with @nibanks, but it's worth noting that it's also easy to produce
a value that is nonzero:

33s | <30 random bits> | 1
",<quicwg/base-drafts/issues/832/334174957@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:31:49
7969,TLS 15+,192,108,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",106,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334174957",<quicwg/base-drafts/issues/832/334174957@github.com>,notifications@github.com,0.0,0,4,2017-10-04 07:31:49
7970,TLS 15+,192,158,Agreement,,-1,"I also completely agree with the idea that 0 is an invalid packet number to
simplify tracking.
",<quicwg/base-drafts/issues/832/334191017@github.com>,notifications@github.com,0.0,0,4,2017-10-04 08:19:25
7971,TLS 15+,192,160,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",158,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334191017",<quicwg/base-drafts/issues/832/334191017@github.com>,notifications@github.com,0.0,0,4,2017-10-04 08:19:25
7972,TLS 15+,192,162,"InformationProviding,Agreement",,-1,"Zero should not be allowed. Zero is a special number, it should be treated as such.",<quicwg/base-drafts/issues/832/334218462@github.com>,notifications@github.com,0.0,0,4,2017-10-04 16:48:12
7973,TLS 15+,192,168,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",162,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334218462",<quicwg/base-drafts/issues/832/334218462@github.com>,notifications@github.com,0.0,0,4,2017-10-04 16:48:12
7974,TLS 15+,192,170,"InformationProviding,NeutralResponse",,-1,Any special packet number precludes packet number wraparound in future.,<quicwg/base-drafts/issues/832/334218694@github.com>,notifications@github.com,0.0,0,4,2017-10-04 16:48:50
7975,TLS 15+,192,176,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",170,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334218694",<quicwg/base-drafts/issues/832/334218694@github.com>,notifications@github.com,0.0,0,4,2017-10-04 16:48:50
7976,TLS 15+,192,198,"InformationProviding,Disagreement",,-1,"Not really, it just requires careful handling.
",<quicwg/base-drafts/issues/832/334240615@github.com>,notifications@github.com,0.0,0,4,2017-10-04 18:03:45
7977,TLS 15+,192,200,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",198,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-334240615",<quicwg/base-drafts/issues/832/334240615@github.com>,notifications@github.com,0.0,0,4,2017-10-04 18:03:45
7978,TLS 15+,192,211,"InformationProviding,NeutralResponse",,-1,"1. s/largest_packet_number_I_will_automatically_discard/smallest_packet_number_I_might_accept/g
2. profit",<quicwg/base-drafts/issues/832/336313368@github.com>,notifications@github.com,0.0,0,4,2017-10-12 17:00:08
7979,TLS 15+,192,212,"InformationProviding,ExtensionOfPrevious,ProposeAction",211,-1,"
Special values are almost never a good idea.  If we mandate 1, then we might have code that either can't properly handle a 0 if one is sent.  We certainly will have a lot of unused special case code for that number.",<quicwg/base-drafts/issues/832/336313368@github.com>,notifications@github.com,0.0,0,4,2017-10-12 17:00:08
7980,TLS 15+,192,213,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",212,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-336313368",<quicwg/base-drafts/issues/832/336313368@github.com>,notifications@github.com,0.0,0,4,2017-10-12 17:00:08
7981,TLS 15+,192,215,"InformationProviding,NeutralResponse",,-1,we have stream id 0 (though it is special for the connection - its not special for stream manipulation).. and offset 0.. and a connection id sequence number that starts at 0.,<quicwg/base-drafts/issues/832/336469662@github.com>,notifications@github.com,0.0,0,4,2017-10-13 14:30:37
7982,TLS 15+,192,223,"InformationProviding,ExtensionOfPrevious,ProposeAction",215,-1,"
If we go with martin's proposal re 62 bit integer encoding, there are billions of integers to use as sentinels in an implementation with a 64 bit int without overloading ones that can be transferred on the wire and cause interop pain.",<quicwg/base-drafts/issues/832/336469662@github.com>,notifications@github.com,0.0,0,4,2017-10-13 14:30:37
7983,TLS 15+,192,224,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",223,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-336469662",<quicwg/base-drafts/issues/832/336469662@github.com>,notifications@github.com,0.0,0,4,2017-10-13 14:30:37
7984,TLS 15+,192,226,"InformationProviding,NeutralResponse,ProposeAction",,-1,"I see the argument of avoiding sentinels, but at least in the C programming language, there is a massive amount of boilerplate code to initialize various structs that could just have been zeroed. There there are numerous additional checks to see if a value is uninitialized instead of just comparing with the previously received value. A much simpler check is to ensure that whatever you receive is larget than what you have: it then becomes illegal to send zero. But it is also illegal to send something smaller in many cases, for example data limits. In this context treating 0 as special makes a lot sense. From an algebraic point of view, 0 also has special signficance amongst the countable objects.",<quicwg/base-drafts/issues/832/336472424@github.com>,notifications@github.com,0.0,0,4,2017-10-13 14:40:17
7985,TLS 15+,192,232,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",226,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-336472424",<quicwg/base-drafts/issues/832/336472424@github.com>,notifications@github.com,0.0,0,4,2017-10-13 14:40:17
7986,TLS 15+,192,234,"ClarificationElicitation,InformationProviding,ContextSetting",,-1,"Maybe I'm too much of a TCP guy, but I had implicitly assumed that packet numbers were like TCP sequence numbers and operated on with modular arithmetic? Any reason this is not a good idea?",<quicwg/base-drafts/issues/832/337820785@github.com>,notifications@github.com,0.0,0,4,2017-10-19 07:17:25
7987,TLS 15+,192,240,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",234,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337820785",<quicwg/base-drafts/issues/832/337820785@github.com>,notifications@github.com,0.0,0,4,2017-10-19 07:17:25
7988,TLS 15+,192,242,"InformationProviding,NeutralResponse,ProposeAction",,-1,"The packet number is input to the AEAD nonce.  If you wrap around, you use the same nonce twice.  That's basically fatal for the ciphers we use.  We could allow a wrap around, maintain a counter on each wrap around and concatenate the two, but these are really big numbers and maybe it's not worth it.  You would also need to rekey many times with some ciphers (AES) or the cipher essentially wears out.",<quicwg/base-drafts/issues/832/337838510@github.com>,notifications@github.com,0.0,0,4,2017-10-19 08:35:14
7989,TLS 15+,192,248,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",242,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337838510",<quicwg/base-drafts/issues/832/337838510@github.com>,notifications@github.com,0.0,0,4,2017-10-19 08:35:14
7990,TLS 15+,192,250,"InformationProviding,NeutralResponse,ProposeAction",,-1,You could also consider a packet number wrap to be a rekeying event. Once you have new keys the AEAD nonce concern is gone.,<quicwg/base-drafts/issues/832/337892734@github.com>,notifications@github.com,0.0,0,4,2017-10-19 12:31:07
7991,TLS 15+,192,256,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",250,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337892734",<quicwg/base-drafts/issues/832/337892734@github.com>,notifications@github.com,0.0,0,4,2017-10-19 12:31:07
7992,TLS 15+,192,258,"InformationProviding,NeutralResponse,ProposeAction",,-1,"To be more specific - AES-GCM should only use the same key for at most 2^32-2 nonces, i.e. packet numbers and in praxis less than that due to some possible attacks on GCM tags (the hash is computed on plain text for maxium parallelization, but that apparently has a cost in security).",<quicwg/base-drafts/issues/832/337941692@github.com>,notifications@github.com,0.0,0,4,2017-10-19 15:19:17
7993,TLS 15+,192,264,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",258,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337941692",<quicwg/base-drafts/issues/832/337941692@github.com>,notifications@github.com,0.0,0,4,2017-10-19 15:19:17
7994,TLS 15+,192,266,ContextSetting,,-1,"""To be more specific - AES-GCM should only use the same key for at most 2^32-2 nonces, i.e. packet numbers and in praxis less than that due to some possible attacks on GCM tags (the hash is computed on plain text for maximum parallellization, but that apparently has a cost in security).""",<quicwg/base-drafts/issues/832/337958330@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:12:18
7995,TLS 15+,192,281,"InformationProviding,NeutralResponse,StateDecision",266,-1,"
The limit we converged on for TLS is: 2^{24.5}
https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#limits-on-key-usage",<quicwg/base-drafts/issues/832/337958330@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:12:18
7996,TLS 15+,192,282,"InformationProviding,ExtensionOfPrevious,ContextSetting",281,-1,"
You can find the reference that led us to that here:
http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf",<quicwg/base-drafts/issues/832/337958330@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:12:18
7997,TLS 15+,192,283,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",282,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337958330",<quicwg/base-drafts/issues/832/337958330@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:12:18
7998,TLS 15+,192,285,"InformationProviding,NeutralResponse,ProposeAction,Thanking",,-1,"@ekr thanks for links. FWIW I thinks those limits on key usage in the TLS spec ought to be a MUST, not a SHOULD. Maybe 2^24.5 is conservative, but there is a point where GCM it falls apart more so than some ciphers. (GCM is fine, but only when respect its limits).",<quicwg/base-drafts/issues/832/337963262@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:29:20
7999,TLS 15+,192,291,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",285,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-337963262",<quicwg/base-drafts/issues/832/337963262@github.com>,notifications@github.com,0.0,0,4,2017-10-19 16:29:20
8000,TLS 15+,192,293,"Question,InformationProviding,Answer",,-1,@larseggert because there's no reason to repeat that mistake? It's annoying and bug-attracting to do modulo arithmetic everywhere in the code.,<quicwg/base-drafts/issues/832/339441734@github.com>,notifications@github.com,0.0,0,4,2017-10-25 19:21:01
8001,TLS 15+,192,299,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",293,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-339441734",<quicwg/base-drafts/issues/832/339441734@github.com>,notifications@github.com,0.0,0,4,2017-10-25 19:21:01
8002,TLS 15+,192,301,"Agreement,ProposeAction",,-1,"There's that. And I'm OK if we do it otherwise, but then let's be very clear about it, to avoid confusing TCP-heads like myself.",<quicwg/base-drafts/issues/832/339571246@github.com>,notifications@github.com,0.0,0,4,2017-10-26 00:01:33
8003,TLS 15+,192,308,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",301,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-339571246",<quicwg/base-drafts/issues/832/339571246@github.com>,notifications@github.com,0.0,0,4,2017-10-26 00:01:33
8004,TLS 15+,192,310,"InformationProviding,NeutralResponse,ProposeAction",,-1,"With the new packet number encoding, we end up needing only 62 bis for the packet number, which means you can use a signed int for representing it and < 0 as a sentinel value. I'll be ok with either 0 or 1 as the initial value.",<quicwg/base-drafts/issues/832/344827895@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:23:21
8005,TLS 15+,192,318,"InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction",310,-1,"
Can we agree on something here and wrap this issue up? I'll be happy whichever way we go, but let's choose one and move on.",<quicwg/base-drafts/issues/832/344827895@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:23:21
8006,TLS 15+,192,319,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",318,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344827895",<quicwg/base-drafts/issues/832/344827895@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:23:21
8007,TLS 15+,192,321,"ContextSetting,ProposeAction",,-1,"To be clear: Given we can have a < 0 sentinel value, I'm fine with 0 as the initial number.",<quicwg/base-drafts/issues/832/344828280@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:25:47
8008,TLS 15+,192,327,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",321,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344828280",<quicwg/base-drafts/issues/832/344828280@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:25:47
8009,TLS 15+,192,329,"InformationSeeking,NeutralResponse,ProposeAction,Thanking",,-1,Let's explicitly disallow wraparound then with the recognition that we then put a limit on the amount of data a QUIC connection can transfer whereas there is no such limit in TCP. I think if a received packet causes a change in the connection state machine then we don't need a Boolean or stats counter to detect this and we do not need any sentinel values. Also I can't think of any other use cases for sentinel values so if anyone else has any ideas please speak out soon.,<quicwg/base-drafts/issues/832/344830311@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:39:16
8010,TLS 15+,192,335,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",329,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344830311",<quicwg/base-drafts/issues/832/344830311@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:39:16
8011,TLS 15+,192,337,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction",,-1,"Thinking about this a bit more and chatting with @ianswett, not randomizing will risk ossification of the initial packet number.  I'm wondering if it's valuable to randomize anyways, just to avoid issues, and in the interest of making more fields unpredictable. Thoughts?",<quicwg/base-drafts/issues/832/344832127@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:51:05
8012,TLS 15+,192,343,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",337,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344832127",<quicwg/base-drafts/issues/832/344832127@github.com>,notifications@github.com,0.0,0,4,2017-11-16 06:51:05
8013,TLS 15+,192,345,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction",,-1,"In the context of connection migration I just sent a mail to the QUIC WG list suggesting to avoid gaps such that the packer numbers cannot effectively be exhausted. One option is to encode/encrypt packet numbers, the other was to reset packet numbers during migration. Encoding would deal with ossification issues. Randomizing early would work against keeping the packet number space large, though not as much as for migrations since it is a one off.",<quicwg/base-drafts/issues/832/344845807@github.com>,notifications@github.com,0.0,0,4,2017-11-16 08:07:43
8014,TLS 15+,192,351,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",345,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344845807",<quicwg/base-drafts/issues/832/344845807@github.com>,notifications@github.com,0.0,0,4,2017-11-16 08:07:43
8015,TLS 15+,192,353,"InformationProviding,NeutralResponse,ProposeAction",,-1,The ossification question is why - I think - we added the randomization in the first place.  We should pick something.,<quicwg/base-drafts/issues/832/344848231@github.com>,notifications@github.com,0.0,0,4,2017-11-16 08:19:18
8016,TLS 15+,192,361,"ExtensionOfPrevious,ProposeAction,StateDecision",353,-1,"
Happy to prohibit wrapping as @pravb requests.",<quicwg/base-drafts/issues/832/344848231@github.com>,notifications@github.com,0.0,0,4,2017-11-16 08:19:18
8017,TLS 15+,192,362,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",361,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-344848231",<quicwg/base-drafts/issues/832/344848231@github.com>,notifications@github.com,0.0,0,4,2017-11-16 08:19:18
8018,TLS 15+,192,364,"InformationSeeking,NeutralResponse,ContextSetting,ProposeAction,StateDecision",,-1,"Ok, we've chosen a random initial number now, and that includes 0 as a possible value. Given the recent discussion on this issue, I'm going to close it as resolved. If anyone has strong arguments, please re-open.",<quicwg/base-drafts/issues/832/348871606@github.com>,notifications@github.com,0.0,0,4,2017-12-03 22:29:47
8019,TLS 15+,192,370,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",364,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#issuecomment-348871606",<quicwg/base-drafts/issues/832/348871606@github.com>,notifications@github.com,0.0,0,4,2017-12-03 22:29:47
8020,TLS 15+,192,372,StateDecision,,-1,Closed #832.,<quicwg/base-drafts/issue/832/issue_event/1369822761@github.com>,notifications@github.com,0.0,0,4,2017-12-04 06:29:47
8021,TLS 15+,192,378,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction",372,-1,"
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/quicwg/base-drafts/issues/832#event-1369822761",<quicwg/base-drafts/issue/832/issue_event/1369822761@github.com>,notifications@github.com,0.0,0,4,2017-12-04 06:29:47
8022,TLS 15+,193,27,"ContextSetting,ContextSetting",,-1,"While reviewing the latest TLS 1.3 draft (revision 10), the description
in section 6.3.3 uses the following wording:",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8023,TLS 15+,193,28,"ExtensionOfPrevious,ContextSetting,InformationProviding",27,-1,"
When this message will be sent:",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8024,TLS 15+,193,29,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",28,-1,"
If this message is sent, it MUST be sent immediately after the
ServerHello message.  This is the first message that is encrypted
under keys derived from ES.",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8025,TLS 15+,193,30,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,ContextSetting",29,-1,"
The use of the word ""if"" implies this is an optional message. However,
Figure 1 in section 6.2 implies the EncryptedExtensions message is not
optional since it's not footnoted with an asterisk. The asterisk
footnote is described as:",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8026,TLS 15+,193,31,"InformationProviding,ExtensionOfPrevious,InformationProviding",30,-1,"
Indicates optional or situation-dependent messages that are not always sent.",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8027,TLS 15+,193,32,"InformationSeeking,Question,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,Question",31,-1,"
Can anyone comment on whether the EncryptedExtensions message is
optional?  If it is, should Figure 1 be updated to reflect this? Or,
should the the text in section 6.3.3 be updated to indicated this
message is required?",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8028,TLS 15+,193,33,"InformationProviding,ExtensionOfPrevious,InformationProviding",32,-1,"
This is an important detail for implementors, since the client-side
state machine will need to know whether to expect the
EncryptedExtensions message after the ServerHello, or to expect another
one of the subsequent messages.",<5669B920.9080001@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 12:40:48
8029,TLS 15+,193,79,"Agreement,InformationProviding,Answer,Agreement,NeutralResponse","32,33",33,"
Yes, I agree.

It is mandatory. Pilot error on my part.

-Ekr
",<CABcZeBOdbKEF-MDw3fVvA76nicS0g4OdSscdn-VjdCjAno+U5w@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-10 12:55:49
8030,TLS 15+,193,133,"InformationProviding,ContextSetting,NeutralResponse",79,-1,"https://github.com/tlswg/tls13-spec/issues/362 so this doesn't get lost.
",<CABcZeBOnKYXzGQ0QENR514BjGsXH6dUi33yuHrLN7mVX5E9-VQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2015-12-10 12:56:22
8031,TLS 15+,193,178,"NeutralResponse,Thanking,NeutralResponse,Thanking",79,79,Thanks for clarifying this.  I appreciate the prompt response.,<5669BF2A.2070306@cisco.com>,foleyj@cisco.com,0.0,0,43,2015-12-10 13:06:34
8032,TLS 15+,194,0,Social,,-1,"Hi,",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8033,TLS 15+,194,152,"InformationProviding,ContextSetting,InformationProviding",,-1,"
Our next IPP WG call will be Thursday 2 August 2018 at
12:00-1:30pm US Pacific / 3:00pm-4:30pm US Eastern",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8034,TLS 15+,194,153,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,ContextSetting",152,-1,"
NOTE: Please USE the *new* WebEx and Audio Bridge below",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8035,TLS 15+,194,154,"InformationProviding,ExtensionOfPrevious,InformationProviding",153,-1,"
Meeting information
Topic: IPP WG
Every 2 weeks on Thursday, from Thursday, May 11, 2017, to no end date
3:00 pm  |  Eastern Standard Time (New York, GMT-05:00)  |  1 hr 30 mins",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8036,TLS 15+,194,155,"InformationProviding,ExtensionOfPrevious,InformationProviding",154,-1,"
WebEx online meeting (join first, before audio bridge)
1. Go to https://ieee-isto.webex.com/ieee-isto/j.php?MTID=m0359478143
ca01e059a570ada91f3573
2. If requested, enter your name and email address.
3. If a password is required, enter the meeting password: Printing123
4. Click ""Join"".",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8037,TLS 15+,194,156,"InformationProviding,ExtensionOfPrevious,InformationProviding",155,-1,"
Audio Bridge (join second w/ unique access code from WebEx)
Call-in toll-free number (US/Canada): +1 866 469-3239 <%28866%29%20469-3239>
Call-in toll number (US/Canada): +1 650 429-3300 <%28650%29%20429-3300>
Call-in toll number (US/Canada): +1 408 856-9570 <%28408%29%20856-9570>",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8038,TLS 15+,194,157,"InformationProviding,ExtensionOfPrevious,InformationProviding",156,-1,"
Global toll-free call in numbers and other audio options (""Call Me Back"" or
VoIP) are listed once you join the WebEx meeting.",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8039,TLS 15+,194,158,"InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding",157,-1,"
Unique attendee access code:  Displayed in the WebEx meeting",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8040,TLS 15+,194,159,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",152,-1,"
Agenda:
(1) PWG IP Policy, Minute Taker, Roll Call, and Agenda Review
- Mike as minute taker?",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8041,TLS 15+,194,160,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",159,-1,"
(2) Approve IPP minutes from previous meetings
- http://ftp.pwg.org/pub/pwg/ipp/minutes/ippv2-concall-minutes-20180719.pdf
-- IPP WG call on 07/19/18",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8042,TLS 15+,194,161,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,160",-1,"
(3) TLS/1.3 in Auth48 in RFC Editor's Queue📣
- https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/
-- 10 years after publication of TLS/1.2 (RFC 5246)...",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8043,TLS 15+,194,162,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,161",-1,"
(4) Review of IPP WG slides for PWG F2F? (Mike)
- if available",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8044,TLS 15+,194,163,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,162",-1,"
(5) Status of Open Printing WG GSoC 2018 (Ira)
- https://ftp.pwg.org/pub/pwg/liaison/openprinting/presentatio
ns/TheLinuxFoundationGSoC-2018.pdf
-- good progress on all projects - good questions are all getting resolved
-- DONE - 14 May - GSoC coding begins
-- DONE - 11-15 June - GSoc Phase 1 evaluations by Mentors and Students
-- DONE - 9-13 July - GSoc Phase 2 evaluations by Mentors and Students
-- 6-14 August - GSoC final week!
-- 14-21 August - Mentors submit final Student evaluations
-- 22 August - GSoC announces final results",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8045,TLS 15+,194,164,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",163,-1,"
(6) Status of AMSC and ISO liaisons w/ PWG (Paul)
- https://ftp.pwg.org/pub/pwg/general/sc/pwg-sc-call-minutes-20180702.htm
-- see PWG SC minutes from 2 July 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8046,TLS 15+,194,165,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,164",-1,"
(7) Status of Safe G-Code (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-pwgsafegcode10-20180704-rev.pdf
- http://www.pwg.org/archives/ipp/2018/019661.html
-- Prototype draft - IPP WG review on 7 June 2018
-- Schedule - IPP WG Last Call Q4 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8047,TLS 15+,194,166,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,165",-1,"
(8) Status of IPP 3D Printing Extensions v1.1 (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ipp3d11-20180704-rev.pdf
- http://www.pwg.org/archives/ipp/2018/019660.html
-- Prototype draft - IPP WG review on 7 June 2018
-- Schedule - PWG Last Call Q4 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8048,TLS 15+,194,167,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,166",-1,"
(9) Status of How to Print Using the IPP (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ippguide-20180430.html
- https://github.com/istopwg/pwg-books
-- IPP WG review during PWG F2F May 2018
-- Current HTML draft available in Github repository
-- Schedule - TBD",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8049,TLS 15+,194,168,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,167",-1,"
(10) Status of IPP HTTP Authentication whitepaper (Smith)
- https://ftp.pwg.org/pub/pwg/ipp/whitepaper/tb-ippauth-20180510.pdf
-- Interim draft - IPP WG review during PWG F2F May 2018
-- Schedule - TBD",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8050,TLS 15+,194,169,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,168",-1,"
(11) Status of IPP Encrypted Jobs and Documents (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ipptrustnoone10-20180328-rev.pdf
- http://www.pwg.org/archives/ipp/2018/019613.html
- https://lists.gnupg.org/pipermail/gnupg-users/2018-May/060315.html
-- Interim draft - IPP WG review during PWG F2F May 2018
-- good news - PGP-based path forward on 06/04/18!
-- Schedule - Mike to work on updated draft w/ just PGP this summer",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8051,TLS 15+,194,170,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,169",-1,"
(12) Status/Review of IPP System Service (Ira/Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ippsystem10-20180701-rev.pdf
- http://www.pwg.org/archives/ipp/2018/019657.html
- https://github.com/istopwg/ippsample/projects/1
-- Prototype draft - IPP WG review during PWG F2F May 2018
-- Prototyping tasks being tracked as a Github project
-- Schedule - prototype in ""ippserver"" - Stable draft in Q3/Q4 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8052,TLS 15+,194,171,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,170",-1,"
(13) Status of IPP Reprint Password (Smith)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ippreprintpwd-20180620-rev.pdf
- http://www.pwg.org/archives/ipp/2018/019631.html
-- Stable draft - IPP WG review on 07/19/18
-- PWG process check - back to Prototype next
-- Schedule - TBD",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8053,TLS 15+,194,172,"Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,171",-1,"
(14) Status of IPP Everywhere Printer Self-Certification 1.0 Update 3?
- http://ftp.pwg.org/pub/pwg/ipp/minutes/ippv2-f2f-minutes-20180515.pdf
-- Goals, ipptool and ippfind updates
-- Now have code signing certificate!
-- Schedule - Mike to release beta of update 3 for testing soon",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8054,TLS 15+,194,173,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,172",-1,"
(15) Status of IPP Everywhere 1.1 (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ippeve11-20180704-rev.pdf
-- Prototype - IPP WG review during PWG F2F May 2018
-- Schedule - Q3/Q4 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8055,TLS 15+,194,174,"InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,173",-1,"
(16) Status of IPP Everywhere 1.1 Self-Certification Manual 1.1 (Mike)
- https://ftp.pwg.org/pub/pwg/ipp/wd/wd-ippeveselfcert11-20180704-rev.pdf
-- Prototype draft - IPP WG review during PWG F2F May 2018
-- Schedule - Q3/Q4 2018",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8056,TLS 15+,194,175,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious","159,174",-1,"
(17) Next steps",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8057,TLS 15+,194,176,"InformationProviding,ExtensionOfPrevious,InformationProviding",175,-1,"
- IPP sessions on Wed/Thu 15-16 August 2018
-- PWG Virtual F2F",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8058,TLS 15+,194,177,"InformationProviding,ExtensionOfPrevious,InformationProviding",176,-1,"
- IPP WG call on Thu 30 August 2018 at 3:00-4:30pm US Eastern
-- regular topics",<CAN40gSs5Xy7xmOnBySPr+QpVg0eBAB3gNa-ob9uHz_TRfTasqw@mail.gmail.com>,blueroofmusic@gmail.com,0.0,0,6,2018-08-01 18:49:01
8059,TLS 15+,196,32,"ContextSetting,InformationProviding,ContextSetting",,-1,"A New Internet-Draft is available from the on-line Internet-Drafts directories.
This draft is a work item of the Transport Layer Security of the IETF.",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8060,TLS 15+,196,33,"InformationProviding,InformationProviding,ExtensionOfPrevious",32,-1,"
Title           : The Transport Layer Security (TLS) Protocol Version 1.3
Author          : Eric Rescorla
Filename        : draft-ietf-tls-tls13-20.txt
Pages           : 137
Date            : 2017-04-28",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8061,TLS 15+,196,34,"InformationProviding,InformationProviding,ExtensionOfPrevious",33,-1,"
Abstract:
This document specifies version 1.3 of the Transport Layer Security
(TLS) protocol.  TLS allows client/server applications to communicate
over the Internet in a way that is designed to prevent eavesdropping,
tampering, and message forgery.",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8062,TLS 15+,196,35,"InformationProviding,InformationProviding,ExtensionOfPrevious",,-1,"
The IETF datatracker status page for this draft is:
https://datatracker.ietf.org/doc/draft-ietf-tls-tls13/",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8063,TLS 15+,196,36,"InformationProviding,InformationProviding,ExtensionOfPrevious",35,-1,"
There are also htmlized versions available at:
https://tools.ietf.org/html/draft-ietf-tls-tls13-20
https://datatracker.ietf.org/doc/html/draft-ietf-tls-tls13-20",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8064,TLS 15+,196,37,"InformationProviding,InformationProviding,ExtensionOfPrevious",36,-1,"
A diff from the previous version is available at:
https://www.ietf.org/rfcdiff?url2=draft-ietf-tls-tls13-20",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8065,TLS 15+,196,38,"ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,Social","36,37",-1,"
Please note that it may take a couple of minutes from the time of submission
until the htmlized version and diff are available at tools.ietf.org.",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8066,TLS 15+,196,39,"InformationProviding,InformationProviding,ExtensionOfPrevious",38,-1,"
Internet-Drafts are also available by anonymous FTP at:
ftp://ftp.ietf.org/internet-drafts/",<149339733821.2963.2565052977577512706@ietfa.amsl.com>,internet-drafts@ietf.org,0.0,,,2017-04-28 09:35:38
8067,TLS 15+,197,0,Social,,-1,"Hi,",<CAPZZOTgizE2n06V9wEtARFCXB7FP_eikW-K1k67bZG11kNhSAw@mail.gmail.com>,sankalp.nitt@gmail.com,0.0,0,24,2017-05-19 15:04:49
8068,TLS 15+,197,170,"InformationProviding,ContextSetting,InformationProviding",,-1,"
I would like to mention that TLS can be used with non-X.509 certificates
also.
In particular, it can be used with ITS ETSI and IEEE certificates.
https://datatracker.ietf.org/doc/html/draft-serhrouchni-tls-certieee1609",<CAPZZOTgizE2n06V9wEtARFCXB7FP_eikW-K1k67bZG11kNhSAw@mail.gmail.com>,sankalp.nitt@gmail.com,0.0,0,24,2017-05-19 15:04:49
8069,TLS 15+,197,171,"ExtensionOfPrevious,ContextSetting,ProposeAction,ProposeAction",170,-1,"
So, in my opinion, TLS should be very loosely or not at all coupled with
RFC 5280.",<CAPZZOTgizE2n06V9wEtARFCXB7FP_eikW-K1k67bZG11kNhSAw@mail.gmail.com>,sankalp.nitt@gmail.com,0.0,0,24,2017-05-19 15:04:49
8070,TLS 15+,197,172,"Social,Thanking,Thanking",,-1,"
Thanks and Regards,",<CAPZZOTgizE2n06V9wEtARFCXB7FP_eikW-K1k67bZG11kNhSAw@mail.gmail.com>,sankalp.nitt@gmail.com,0.0,0,24,2017-05-19 15:04:49
8071,TLS 15+,197,214,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse","170,171",171,"
Just commenting on that draft, I don't see anything that would specify
how the certificate message itself is formatted in TLS 1.2 if those
types are used (I presume the same as the usual TLS 1.2 X.509
certificate message[1][2]). If the formatting is the same as X.509 one,
mapping that to TLS 1.3 will be straightforward. If it is not the same,
then the mapping to TLS 1.3 has to be explicitly defined.
",<20170519101239.GB30080@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-19 13:12:39
8072,TLS 15+,197,215,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ExtensionOfPrevious",214,171,"
The reason formatting for TLS 1.2 is significant is that for TLS 1.2, it
looks like each certificate type defines its own format (and none of the
three formats so fare is the same). Also, avoid putting in any non-
certificate fields, as that causes major problems with TLS 1.3 (as seen
with OpenPGP type[3]).
",<20170519101239.GB30080@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-19 13:12:39
8073,TLS 15+,197,216,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",215,171,"
[1] This is list (24-bit length) of non-empty octet strings (24 bit
length).

[2] That the message formatting is the same does not imply that the
octets string contents is in any way the same.

[3] Also, RPK had its own format in TLS 1.2, but TLS 1.3 specification
explicitly gives RPK type a new format.
",<20170519101239.GB30080@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-19 13:12:39
8074,TLS 15+,197,292,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",171,171,"
Which brings us to some more undesirable layer violation in the current
draft.  The language in question is appropriate for updates to RFC5280,
but does not belong in TLS.  The problems in question are largely
already addressed elsewhere (as CAs no longer issue MD5, SHA1, ...
certificates, browsers no longer support them, ...) and continue to
be further remediated in the appropriate standards and products.

Therefore delete:

Section 4.2.3 (Legacy algorithms paragraph final sentence):

...                                       TLS 1.3 servers
MUST NOT offer a SHA-1 signed certificate unless no valid
certificate chain can be produced without it (see
Section 4.4.2.2).

Section 4.4.2.2:

...          This fallback chain MAY use the deprecated SHA-1 hash
algorithm only if the ""signature_algorithms"" extension provided by
the client permits it.  If the client cannot construct an acceptable
chain using the provided certificates and decides to abort the
handshake, then it MUST abort the handshake with an
""unsupported_certificate"" alert.

Section 4.4.2.4:

Any endpoint receiving any certificate signed using any signature
algorithm using an MD5 hash MUST abort the handshake with a
""bad_certificate"" alert.  SHA-1 is deprecated and it is RECOMMENDED
that any endpoint receiving any certificate signed using any
signature algorithm using a SHA-1 hash abort the handshake with a
""bad_certificate"" alert.  All endpoints are RECOMMENDED to transition
to SHA-256 or better as soon as possible to maintain interoperability
with implementations currently in the process of phasing out SHA-1
support.

I note that TLS 1.3 does not have any language prohibiting MD2, MDC2DES,
MD4, RIPEMD160, private signature oids, ... that may be weaker than SHA-1
or even MD5.

Opportunistic unauthenticated TLS ignores the peer certificate and should
not have to fall back to cleartext just because some certificate in the
chain is not sufficiently sexy.  There are other legitimate use cases where
the restrictions above are inappropriate.

The reason I am pointing this out is that I just had to waste a bunch of
time convincing the rest of the OpenSSL team to ignore the draft language
in question, and just stick with whatever ""security level"" (floor on
algorithm strength) the application or default settings requested.  This
already excludes MD5 by default, and we'll likely adjust the collision
resistance rating of SHA-1 from 2^80 to its reported ~2^64 strength (from
the recent Google collision announcement), after which SHA-1 will also
be excluded at security level 1.  This will be done in the X.509 ala PKIX
code and not the TLS code, and applications that ignore the chain or do
DANE-EE(3), ... will not be affected.

I propose that the current draft language is just a landmine for TLS
implementations, that addresses a non-problem (or more precisely a
problem that is more properly and well addressed elsewhere).

Viktor.",<44AED5C2-B21C-442A-8412-9134D1C10BCD@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 16:51:21
8075,TLS 15+,197,362,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse",292,292,"
+1

Grounds:

- layering violation (though arguably this TLS 1.3 could be made to
update RFC5280, we shouldn't want to do that)

- banning some, but not all weak algorithms is a knee-jerk reaction --
it's reactionary

- this hurts applications that don't care for TLS server
authentication -- applications which either don't care for server
authentication at all, or which will use channel binding

- it's much better to have a security level knob that disables weak
algorithms

(apps which don't care for TLS server authentication... need two such
knobs: one for server authentication (on/off) and one for security
level for key agreement, PRF, and ciphersuite negotiation)
",<20170519213526.GL10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-19 16:35:27
8076,TLS 15+,197,364,"NeutralResponse,ProposeAction,NeutralResponse",292,292,"
That could be fixed, of course.  But let's not.
",<20170519213526.GL10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-19 16:35:27
8077,TLS 15+,197,366,"NeutralResponse,ProposeAction,NeutralResponse",292,292,"
I much prefer the idea that there MUST be a security level knob for the
user/application.
",<20170519213526.GL10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-19 16:35:27
8078,TLS 15+,197,368,"InformationProviding,Agreement,ProposeAction,NeutralResponse",292,292,"
That's right: for PKIX server authentication, the security level
enforcement should be done in PKIX code, not in TLS code.  This is an
excellent example of how layering in Internet protocols should translate
into layering into implementations.  Conversely, this is also an example
of how layering violations in Internet protocols lead to layering
violations in implementations.
",<20170519213526.GL10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-19 16:35:27
8079,TLS 15+,197,370,"Agreement,Agreement",292,292,"
+1.
",<20170519213526.GL10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-19 16:35:27
8080,TLS 15+,197,458,"Disagreement,Disagreement",292,292,"
No. I strongly oppose stripping all off this out.
",<201705192143.19490.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-19 21:43:19
8081,TLS 15+,197,460,"InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse",292,292,"
They're not listed as possible field values anywhere directly in the TLS spec.
If someone wants to add a line to one of the ""MUST NOT"" lists somewhere for
all hashes weaker than SHA-1, that sounds fine to me.
",<201705192143.19490.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-19 21:43:19
8082,TLS 15+,197,462,"InformationProviding,NeutralResponse,ProposeAction,Disagreement,NeutralResponse",292,292,"
Opportunistic unauthenticated TLS isn't the protocol we're defining here.
If your goal isn't authentication, then by all means violate the requirements
laid out for authentication. I have no problem making that explicit, if desired,
however this is not the primary desired operating mode of TLS.
",<201705192143.19490.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-19 21:43:19
8083,TLS 15+,197,464,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",292,292,"
TLS is already a minefield of problems. Enumerating many of them explicitly
is a step forward to avoiding them more easily in the future. In a complex
system, just fixing something in one place is not enough. If we list it as
a possible option in the spec, we should be _very_ clear when it is crap.

I'm aware that this is unavoidably messy. Viktor, your input has greatly
helped improve the language here to accommodate varying use-cases,
and I would personally prefer we work together to make the mess correct,
rather than give up and delete the relevant text.
",<201705192143.19490.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-19 21:43:19
8084,TLS 15+,197,550,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",460,460,"
That list was not intended to be take as a serious suggestion.  Note that
it is NOT the job of TLS to specify a comprehensive list of X.509 certificate
signature algorithm OIDS, which are MTI, which deprecated, and so on.  The
security floor you're looking for needs to be set in update to RFC5280
via the ""curdle"" WG or wherever else such an update belongs.
",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8085,TLS 15+,197,552,"InformationProviding,Disagreement,ContextSetting,Disagreement,NeutralResponse",462,462,"
Actually, it very much is.  This WG defines TLS (period).  That includes
opportunistic unauthenticated TLS, opportunistic DANE TLS, TLS with
pre-shared public key fingerprints, TLS with TOFU key pinning and so on.

One reason TLS is complicated is its versatility.
",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8086,TLS 15+,197,554,"InformationProviding,NeutralResponse,NeutralResponse",462,462,"
There is no requirement for authentication.  There is only a mechanism
to make it possible.  And opportunistic TLS is NOT a violation of the
TLS specification.
",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8087,TLS 15+,197,556,"InformationProviding,Disagreement,ProposeAction,NeutralResponse",462,462,"
Yes, the ""primary mode"" is authentication via a profusion of CAs,
with most certificates being ""DV"" certificates, which are issued
after perfunctory verification by the CA and memoized in the form
of a certificate for the world to trust.  This means that the MiTM
BGP route injection attack has to target the route between some
trusted CA and the victim domain, rather than between the user
and the victim domain.  It's not much better than opportunistic
TLS, but yes, it does protect against low-tech attacks that only
subvert the user's network (coffee-shop, airport WiFi, ...).

So the X.509 PKI in TLS is not entirely a case of the emperor's new
clothes, but we need to be a bit more realistic about the resulting
security, and not forget that it is far from airtight, and that the
non-mainstream use-cases sometimes yield more actual security than
one might get from an all-or-nothing approach.
",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8088,TLS 15+,197,558,"InformationProviding,NeutralResponse,NeutralResponse",464,464,"
PKIX (RFC5280 via X.509) is already a minefield of problems.  The fixes
and ratcheting up the associated security parameters belong there, and
NOT in TLS.  The TLS 1.3 draft does a reasonabl job of improving the actual
TLS security design and parameters, and should properly stick to that.

[ Yes, it also adds a potential pitfall in the form of 0-RTT, but that
is of course another thread. ]
",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8089,TLS 15+,197,560,"InformationProviding,Agreement,NeutralResponse,ProposeAction",464,464,"
I'd be  happy to review relevant changes in an RFC5280 update where this
belongs, and would also benefit S/MIME, CMS, etc and not just TLS.

Viktor.",<A2D38B2D-645A-4F8B-A3AE-5535B1D0CDB7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-19 22:15:31
8090,TLS 15+,197,598,"InformationProviding,NeutralResponse,NeutralResponse",460,460,"
That's because it wouldn't be TLS that mentions them but PKIX, so _of
course_ TLS doesn't reiterate everything that PKIX says.
",<20170520054117.GM10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-20 00:41:18
8091,TLS 15+,197,600,"InformationProviding,Disagreement,Disagreement",462,462,"
TLS certainly can be used that way.  And it is.
",<20170520054117.GM10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-20 00:41:18
8092,TLS 15+,197,602,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",462,462,"
Then state the requirements in such a way that it is still possible to
use TLS in this way.

""When using TLS to authenticate the server, certificate signature
algorithms weaker than <list of weakest acceptable signature algs here>
MUST NOT be used.""
",<20170520054117.GM10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-20 00:41:18
8093,TLS 15+,197,631,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ClarificationElicitation,NeutralResponse",602,602,"
Minor correction, perhaps you really mean to say ""when using RFC5280 (PKIX)
to authenticate... (the [server or client?]).  TLS is just the transport
after all.

This formulation does correctly place the security floor in the proper
context, namely PKIX authentication, and does not inappropriately
mandate aborting connections and the like.

A peer presenting certificates with deprecated algorithms would then
not pass PKIX authentication.  It is then up to the other party to
decide whether this matters and how to react.

This would amount in essence to a TLS-specific ""profile"" for PKIX.
If such a thing is really needed, so be it.  So long as we have no
text mandating connection termination based on potentially irrelevant
certificate details I can go along with a compromise in which a more
narrow prohibition of MD5 and SHA-1 remains along the lines above.

Viktor.",<80AB5C55-41BA-471E-A55A-86E98299B652@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-20 01:55:07
8094,TLS 15+,197,649,"InformationProviding,Disagreement,Disagreement",631,631,"
No, I meant what I said, as in ""as opposed to using TLS
opportunistically"".
",<20170522145008.GN10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 09:50:09
8095,TLS 15+,197,705,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",649,649,"
While we are quibbling over terminology and not substance:

Note that opportunistically != unauthenticated.  Opportunistic DANE TLS
still authenticates when the peer has TLSA records, and even uses PKIX
when the TLSA record certificate usage is DANE-TA(2).  And sufficiently
strong algorithms are desirable even under those conditions:

https://github.com/vdukhovni/postfix/blob/master/postfix/src/tls/tls_client.c#L955

So it seems the phrase ""using TLS to authenticate"" in fact means using
RFC5280 (PKIX) to authenticate the peer via its signature over its
Cerificate Verify message:

https://tools.ietf.org/html/draft-ietf-tls-tls13-20#section-4.4.3

The phrase used to describe the situation in that section of the draft is
""when authenticating via a certificate"", which is part of the story, what
would need to be added to that to get the right context for setting a floor
on acceptable certificate signature algorithms is something along the lines
of ""with PKIX chain verification"".

Still, all of this belongs in an update of RFC5280, but if we just can't
resist saying something here along the lines you suggest then it might be:

""When peer authentication is via a certificate, with RFC5280 (PKIX) chain
verification, certificate signature algorithms weaker than <list of weakest
acceptable signature algs here> MUST NOT be trusted.""

I carefully say ""MUST NOT be trusted"" rather than ""MUST NOT be used"", it is
the relying party that decides what minimal algorithm strength is acceptable.
The peer may send whatever chain it has (lacking one that meets the advertised
supported signature algorithms).

Peers that desire broadly interoperable RFC5280 authentication via their
certificate chain should of course be configured to present chains that avoid
deprecated certificate signature algorithms (except in self-signatures of
trust-anchors).

Viktor.",<2D45C128-BF84-481C-AC28-87A9793B5E00@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 11:35:31
8096,TLS 15+,197,724,"ContextSetting,ProposeAction,NeutralResponse,ProposeAction",705,705,"
I want to reiterate, that the simplest approach, and the one that I
would prefer, is not to repurpose the TLS 1.3 specification to carry
language that properly belongs in PKIX.  The ""MUST NOT"" language
related to MD5 and SHA-1 in *certificate signatures* should be removed.

Viktor.",<D716A296-07DD-49B9-99E5-51388131D3E7@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 11:53:10
8097,TLS 15+,197,743,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",631,631,"
Given the apparent strength of opinion against removing these supposed
restrictions entirely, it seems like this text (or something similar) is
probably the best we can do.

-Ben",<f262447d-5bd1-68c8-dac6-ad2224733235@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-05-22 12:06:47
8098,TLS 15+,197,763,"Question,InformationProviding,Agreement,ContextSetting,ProposeAction,StateDecision,Agreement,Question,NeutralResponse,ProposeAction",743,743,"
Perhaps so, but I saw only one strong objection from Dave Garrett.  Is that
sufficient for ""apparent strength of opinion""?  Removal is simpler, and it
sure does not look like people are determined to continue to support MD5
and SHA-1 in certificates, but would be willing to relent if TLS 1.3 told
them not to.  Isn't the language in question tackling a non-problem?

That said, if the only way to rough consensus is a properly qualified
requirement to not rely on such certificate signatures for authentication,
(rather than must hang up with a fatal alert when you see these, must not
send these, ...) then I'll go along with a compromise.

Viktor.",<35E448DD-7F74-4563-9707-DFAB66125FAA@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 13:17:18
8099,TLS 15+,197,791,"InformationProviding,Answer,NeutralResponse",763,763,"
There was also some discussion when this text was originally going in,
IIRC.  But I do not remember well enough to say who/how many people
wanted it.
",<89704888-5f4d-0021-74cb-4cea28c773bd@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-05-22 12:27:52
8100,TLS 15+,197,793,"Answer,Agreement,Answer",763,763,"
It probably is, but I don't feel a need to spend a lot of my time
pushing for it to be removed.

-Ben
",<89704888-5f4d-0021-74cb-4cea28c773bd@akamai.com>,bkaduk@akamai.com,0.0,1,2,2017-05-22 12:27:52
8101,TLS 15+,197,796,"InformationProviding,InformationProviding",763,-1,"I assert that most uses of TLS are server-authenticated using a PKIX-compliant certificate, no matter if you count users/servers, connections, bytes transferred, or e-commerce dollar value.",<ac704db142c04e7b8a836df711e9bc7f@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2017-05-22 17:37:49
8102,TLS 15+,197,806,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",796,-1,"
It has been this way forever and that is why the TLS RFC’s have always talked about certificates, although left the chain validation up to separate RFC’s.  Note that those RFCs really only talked about *naming* not crypto.",<ac704db142c04e7b8a836df711e9bc7f@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2017-05-22 17:37:49
8103,TLS 15+,197,807,"InformationProviding,NeutralResponse,ProposeAction,ProposeAction",793,-1,"
I strongly believe the text should stay as it is, for the most good to the most people.  Viktor is in the weeds, arguably by himself.",<ac704db142c04e7b8a836df711e9bc7f@usma1ex-dag1mb1.msg.corp.akamai.com>,rsalz@akamai.com,0.0,1,1,2017-05-22 17:37:49
8104,TLS 15+,197,827,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse",807,807,"
Right, all by myself...  With support from Nico, Ilari, and others who've upthread
accepted that certificate verification is properly RFC5280 and not TLS, before I
suggested removal of the text in question (which solves no real problem, but does
create needless interoperability issues for various TLS use-cases).

The dominant use case is not the only one that needs consideration,
and text that breaks other use-cases is NOT just fine, and the TLS
WG really does need to think more broadly than the Web PKI.  This is
not the HTTPS working group.

Viktor.",<1A619330-282A-44F0-871B-DF6D15850394@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 13:46:58
8105,TLS 15+,197,876,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,NeutralResponse,ProposeAction",827,-1,"Well, I certainly think past the Web PKI, because one of the cases I care
about
is WebRTC, which doesn't do any PKI validation at all.

In any case, I think there are two issues:
1. Forbid TLS 1.3 implementations from accepting MD5 and SHA-1.
2. Require a specific failure if the peer presents such a certificate.

There was pretty strong consensus to do #1 and I don't support removing
it. That seems like a pretty modest layering violation. If people think that
the mandate for this specific alert is too onerous, I could live with
removing
that.

-Ekr
",<CABcZeBOvRGar9ZLTo=tu+oUxRWtMucwr5Bk1dPY8C1mAa9asTg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 04:42:45
8106,TLS 15+,197,924,"InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction,UnderstandingNegative",876,558,"
I don't understand how you can have (1) and not (2).

Unlike Viktor (though I also don't like the layering violation) I'm not
proposing removing that text altogether, but tweaking it to allow
opportunistic and other TLS usage.

Instead of altogether forbidding certs with MD5 signatures, forbid them
when the application expects TLS to authenticate the server [with PKIX,
as opposed to certain DANE usage values, or with pre-shared certs,
etc.].  I.e., a server authentication security level knob is needed.
",<20170522201729.GO10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 15:17:30
8107,TLS 15+,197,1000,"NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",924,924,"
As Ilari suggests, you could just treat the algorithms as unknown.
",<CABcZeBMx5wbfchzonxQ5E6N2cOSAXSFX5JpEdTQMMaTnoCb7Dg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 05:26:28
8108,TLS 15+,197,1003,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",924,924,"
I don't think that the current text prohibits that, because of :

The signatures on certificates that are self-signed or certificates
that are trust anchors are not validated since they begin a
certification path (see [RFC5280], Section 3.2).  A certificate that
begins a certification path MAY use a signature algorithm that is not
advertised as being supported in the ""signature_algorithms""
extension.

In this case, I think one can argue are treating this as a trust anchor.
Feel free to propose
new text that you think makes that clearer.

-Ekr
",<CABcZeBMx5wbfchzonxQ5E6N2cOSAXSFX5JpEdTQMMaTnoCb7Dg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 05:26:28
8109,TLS 15+,197,1070,"ClarificationElicitation,ClarificationElicitation",1000,1000,"
How does that square with (1)?
",<20170522204326.GP10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 15:43:26
8110,TLS 15+,197,1072,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1003,1003,"
That takes care of DANE and pre-shared cert uses, but not of
opportunistic use.  And maybe not of TOFU either: since on first use the
server's cert won't be known to the client, it's not a ""trust anchor""
yet and cannot fall under this safe-harbor.
",<20170522204326.GP10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 15:43:26
8111,TLS 15+,197,1074,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1003,1003,"
Proposal:

Clients SHOULD/MUST NOT accept server certificates, or certificate
validation paths, where the server certificate or intermediate
certificates (but not trust anchors) are signed with ""weak"" signature
algorithms, unless the client is not expecting TLS to strongly
authenticate the server (e.g., for opportunistic use) or where the
client has previously learned and cached the server's certificate.

A ""weak"" signature algorithm is any of <list1>, or any that isn't on
<list2> and was introduced prior to publication date of this
document.

The last is a way to eliminate any old hash.  List some of them in
<list1>, list all the allowable ones that we know about today in
<list2>, and the publication date will take care of any that should have
been on <list1> but was not listed in it, while future-proofing <list2>.
",<20170522204326.GP10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 15:43:26
8112,TLS 15+,197,1169,"ProposeAction,UnderstandingNegative,Answer,UnderstandingNegative",1070,1070,"
I don't understand the question. If you treat them as unknown then either
your path construction code will route around them or once you try to
verify,
it will fail.
",<CABcZeBM1SWnganpX_VyDRiVm+ZFSoA6tZpCWX+Ec-D6So6RUGw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 05:49:47
8113,TLS 15+,197,1171,"NeutralResponse,NeutralResponse",1072,1072,"
I wouldn't have any trouble interpreting it that way.
",<CABcZeBM1SWnganpX_VyDRiVm+ZFSoA6tZpCWX+Ec-D6So6RUGw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 05:49:47
8114,TLS 15+,197,1173,"Disagreement,ContextSetting,ProposeAction,NeutralResponse",1074,1074,"
I don't think ""strongly authenticate"" is useful here. I think the
requirement
is that the RP must not accept these algorithms in any context which would
require validating signatures made using them.

-Ekr
",<CABcZeBM1SWnganpX_VyDRiVm+ZFSoA6tZpCWX+Ec-D6So6RUGw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 05:49:47
8115,TLS 15+,197,1252,"NeutralResponse,NeutralResponse",1169,1169,"
That *really* seems like a layer violation!
",<20170522210018.GQ10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 16:00:20
8116,TLS 15+,197,1254,"Question,ClarificationElicitation",1171,1171,"
Why not be clear?
",<20170522210018.GQ10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 16:00:20
8117,TLS 15+,197,1256,"InformationSeeking,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",1173,1173,"
Well, I want it to be crystal clear that the ""not MD5 and such""
requirement need not apply to opportunistic TLS usage.  If you don't
like my text, maybe you can propose your own.
",<20170522210018.GQ10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 16:00:20
8118,TLS 15+,197,1327,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1252,1252,"
As I said, I don't have a problem with it. It's TLS giving instructions to
the PKI subsystem.
",<CABcZeBMMfp4DUcNCFUYCCP6B+UQn85bq2LSoumJdywy=0GOq4Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 06:22:30
8119,TLS 15+,197,1329,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,ProposeAction",1256,1256,"
I don't think ""opportunistic"" is a clearly enough defined category to be
useful
here. Rather, I think the relevant criterion is the one I listed above. If
people
agree, I'd be happy to make that change (and can produce text) because I
think it conforms to the WG consensus.

-Ekr",<CABcZeBMMfp4DUcNCFUYCCP6B+UQn85bq2LSoumJdywy=0GOq4Q@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 06:22:30
8120,TLS 15+,197,1360,"ContextSetting,ContextSetting",462,462,"
If you mean:
",<E3BB180E-EC66-4F92-868B-E04F9E63CDF6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 17:31:55
8121,TLS 15+,197,1362,"NeutralResponse,Agreement",1173,1173,"
That's fine.
",<E3BB180E-EC66-4F92-868B-E04F9E63CDF6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 17:31:55
8122,TLS 15+,197,1364,"NeutralResponse,ProposeAction,StateDecision,Agreement,ProposeAction",1329,1329,"
The above formulation (where the relying party does not accept certain
signature algorithms as valid in the context of validating issuer
signatures) works for me.  All I'm looking for is not requiring the
RP to abort the handshake as soon as the algorithm is encountered,
even when the signature would never be checked!

So if putting the consensus to ban MD5/SHA-1 in its *proper context*
is consistent with the WG consensus, let's do that.

Viktor.",<E3BB180E-EC66-4F92-868B-E04F9E63CDF6@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 17:31:55
8123,TLS 15+,197,1417,"Agreement,ContextSetting,Social,Agreement,ContextSetting",1364,1364,"
Yes, please.

Citing discussion elsewhere in this thread (that probably should've all
been forked off with a different subject long before now...):
",<201705222019.46521.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-22 20:19:46
8124,TLS 15+,197,1419,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1256,1256,"
My issue with this area is that we've got this fairly weird two tiered
problem where we're still pretending SHA-1 is vaguely acceptable in some
scenarios where certificates are being validated, and thus we need two
sets of language: one for weak hash MUST NOTs and another for weak hash
SHOULD NOT. The current text was written before SHA-1 was broken back in
February, so, while the topic of changing language we had consensus on is
up, I'd really like to make SHA-1 completely banned for standard certificate
authenticated TLS 1.3+ connections alongside MD5. To do this in a
non-messy way, we'd have to delete the SHA-1 special-casing and state
that TLS 1.3+ implementations can only use deprecated hashes
(MD5/SHA1/SHA224/etc) if explicitly doing opportunistic encryption or some
scenario where trust can be established without validating them. Again,
the trust anchor gets an exception here due to it being trusted directly
without need for validation, and they can get away with just a ""NOT
RECOMMENDED"". If we can agree to this, then the resulting text will end up
being far less problematic. If we can't get a consensus for this, I seriously
propose citing RFC 6919 s3.
",<201705222019.46521.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-22 20:19:46
8125,TLS 15+,197,1459,"InformationProviding,Agreement,ProposeAction,Agreement,NeutralResponse",1419,1419,"
Works for me.  In all the use-cases I care about the hash algorithm in
question is never actually used to validate any certificate signatures,
but the spec seems to require that the handshake be aborted anyway, just
because the codepoint is present in the chain.

I have no objections to banning *actual* use for making verification
decisions of all hash functions with collision resistance less than
say 120 bits (128 - modest fuzz for attacks that don't significantly
damage the algorithm).

What I am trying to avoid is having implementations just hang up
because the peer's certificate message contains ""toxic"" codepoints,
that will never actually get used, because verification is not
performed at all, or performed by means other than PKIX, or with
different intermediate certificates than presented.

Setting a collision-resistance floor rather than naming some list
of algorithms makes more sense to me, but if the WG really feels
that naming some ""verbotten"" algorithms is better, so be it.

Viktor.",<F589FF5F-3F77-4125-B8F0-B9701925B9EF@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 20:29:13
8126,TLS 15+,197,1473,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",1459,1459,"
My preference would be to do both. Call out the ones we have
codepoints for by name (MD5/SHA1/SHA224), then have a general
collision-resistance floor value for everything else.
",<201705222057.30588.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-22 20:57:30
8127,TLS 15+,197,1494,"InformationProviding,Agreement,ContextSetting,Agreement,NeutralResponse",1473,1473,"
OK by me, with previous proviso on the appropriate context,
namely actual use by the relying party, not mere appearance
on the wire.  That is, effectively the RP behaves as though
the code points are unknown, but with ""lazy evaluation""[1].

Viktor.

[1] With ""lazy evaluation"" one is not forced to fail to parse
the certificate if parsing requires having known code points.
So long as no use of the underlying algorithm is made, the
intent of the prohibition is accomplished.",<BFED1B82-DDEB-4B59-9C85-68D8FF65156F@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 21:06:37
8128,TLS 15+,197,1547,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse,ProposeAction",1473,1473,"
Sure.

In general I prefer setting floors, as Viktor says.  That's because
listing all forbidden algorithms is easy to flub up, and because it's
much easier from an API point of view to specify security levels than to
go listing things that are allowed/forbidden.

I think we should have standard algorithm security profile names that
can be used in multiple protocols.  E.g.,

- weak         (obsolete weak algorithms allowed)
- interim      (certain obsolete weak algorithms allowed during migrations)
- default      (default security floors, no obsolete weak algorithms allowed)
- stronger     (like standard but with higher security floors)

- <URN?>       (local/custom security level, perhaps specified
additively from standard security levels)

The meaning of each of these would be updated over time by updating the
RFCs for the relevant protocols.  Thus configurations would not have to
change.

Specifying such a security level to TLS would have it apply that level
to its ciphersuite, PRF, key agreement, PSK, and signature algorithms,
and pass it to PKIX when using PKIX.

Specifying such a security level to PKIX would have it apply that level
to certificate public key and certificate signature algorithms, as well
as to path construction and validation.

Specifying such a security level to Kerberos, SSHv2, ... would ...
And so on.

This would make security level configuration much easier in the common
case.  And would avoid periodically having to update configurations to
adjust for recent cryptanalysis advances: just update the meanings of
these standard security levels and update software.
",<20170523180710.GU10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-23 13:07:11
8129,TLS 15+,197,1584,"Agreement,Agreement",1417,1417,"
+1
",<20170523175154.GT10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-23 12:51:55
8130,TLS 15+,197,1586,"Agreement,Agreement",1419,1419,"
Works for me!
",<20170523175154.GT10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-23 12:51:55
8131,TLS 15+,197,1588,"InformationProviding,Agreement,Agreement",1419,1419,"
Yes, trust anchors are and should always be excepted (and need not be in
the form of certificates anyways).
",<20170523175154.GT10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-23 12:51:55
8132,TLS 15+,197,1623,"NeutralResponse,NeutralResponse",1327,1327,"
It implies more APIs.
",<20170522233040.GR10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 18:30:41
8133,TLS 15+,197,1625,"InformationProviding,NeutralResponse,NeutralResponse",1329,1329,"
Opportunistic == ""If the server got authenticated great, if not, that's fine too""

If the server was not authenticated, the app might use channel binding,
or learn the server's cert (TOFU), or just use the connection because
the only thing the application cares about is key agreement (defeat
eavesdropers, but not active attackers).  The last one is Viktor's use
case (SMTP).
",<20170522233040.GR10188@localhost>,nico@cryptonector.com,0.0,0,1,2017-05-22 18:30:41
8134,TLS 15+,197,1691,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1252,1252,"
The code I have tries to route around (with equivalent to exhaustive
search of all paths).

And altough the code I have has the TLS and certificate code more
tightly bound togethe than most libraries, the certificate validation
algorithm handling is wholly inside the certificate handling part.

The algorithm handling being inside certificate code is even true for
SHA-1 signatures, which have nontrivial validity rules (only allowed
for dedicated OCSP responders).

The certificate code does not concern itself about TLS version it
is running on. The exchange signature (which has differences between
TLS versions) is direct signature validation and does not involve
certificate code.
",<20170523092921.GA13966@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-23 12:29:22
8135,TLS 15+,197,1692,"InformationProviding,ContextSetting,ProposeAction,ExtensionOfPrevious,ProposeAction",1691,1252,"
BTW:

Section 4.4.3. seemingly allows use of unadvertised exchange signature
schemes if advertised one can't be used. This should be fixed: There
is no way that can actually work (even pinning the server's key doesn't
make that work, unlike say EE certificate being signed with something
unknown).
",<20170523092921.GA13966@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-23 12:29:22
8136,TLS 15+,197,1732,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse",292,292,"
The operative word here is *was*.  Time has passed, and things have changed:

1.  The motivating problem (broad use of weak hashes in Web PKI
certificates) has become a non-problem.  The CAs and the browsers
have moved on.

2.  We've since had many discussions that make it clearer still that
layer violation into RFC5280 space is suboptimal.

3.  While did not object strongly at the time, I've since seen that the
language in question temps TLS stack authors to implement checks against
the specific certificate algorithms at the TLS layer, instead of at the
X509 verification layer where X509 security checks belong.

Surely there are some old GOST signature algorithms that could appear in certificates,
that TLS 1.3 does not prohibit, but which are not much stronger than SHA-1, and if not
GOST then something else.  Plucking out the specific code-points in question is both
insufficient and counter-productive.

It is time to revisit the previous consensus, because its motivation is no longer
relevant, and its negative consequences are more apparent.

Viktor.",<44D307FD-DBF7-4979-B4E0-76104F64D159@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 17:02:20
8137,TLS 15+,197,1799,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction",1732,-1,"This document has WGLC and so has a presumption of consensus. If you want
to re-raise that, this is a process question which is the province of the
chairs, so if you feel strongly, as it appears you do, I would encourage
you raise it with them.

-Ekr
",<CABcZeBMizNkL9uYz-d+AkVWYwUx4Vaq_+ZFguVXAzz0x+e80XQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-23 06:20:18
8138,TLS 15+,197,1833,"InformationProviding,ContextSetting,ProposeAction,Social,NeutralResponse,Agreement",827,827,"
Please allow me to add my voice to Viktor's. When I wrote the E
language communication protocol, many people said I should use
SSL. Some of the reasons we did not use SSL are in a 1998
document <http://www.erights.org/elib/distrib/vattp/SSLvsDataComm.html>.

Our protocol started with a hash of the peer's public key. With
that bit of information, other authentications are unnecessary.
If I were starting today, we could use TLS with PSKs by asking
the other side for it's key and then using it with a TLS library
(I think).
",<r470Ps-10124i-4126E6020A9F407EB18E86674748440A@Williams-MacBook-Pro.local>,frantz@pwpconsult.com,0.0,0,8,2017-05-22 21:19:30
8139,TLS 15+,197,1861,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",793,793,"
Well, the reason for this sub-thread is that I just to waste a bunch of cycles
to avoid new code in OpenSSL that would implement the spec as written and
needlessly break applications that don't care about PKIX certificates.

A nameless team member suggested casually that such applications can just
disable TLS 1.3...

And yet TLS 1.3 brings desirable improvements, and should not have needless
restrictions on the supported use cases.

Therefore, the language should go, or needs to be amended to make it clear
that TLS does not prohibit (mandate connection abort, ...) the appearance
of any certificate signature algorithms in the certificate message.  Advice
to not trust such algorithms for authentication is unnecessary, but acceptable.

Viktor.",<DFF38A8D-2052-400B-BC77-BACE1AB40A4D@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-22 13:38:52
8140,TLS 15+,197,1879,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",791,791,"
This came up in one of the F2F meetings. I believe I argued that we shouldn’t have PKIX policy in a TLS document, because if signing certificates with SHA-1 is bad, it’s bad for all users of certificates, and should be prohibited by a PKIX document, not a TLS document.

The room was against me then. So it may look now like it’s just Dave (and now Rich), there was more support for this at the time.
",<2120907F-7488-46DA-B5BA-76A89A2E6236@gmail.com>,ynir.ietf@gmail.com,0.0,1,0,2017-05-22 20:45:41
8141,TLS 15+,197,1962,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse",458,458,"
This requirement is bad layering violation.

It is even further made problematic by:

- TLS and PKIX libraries are often decoupled, making this difficult to
implement.
- It requires code to support MD5, which as weak algorithm is hazardous.

I do have written TLS implementation. It does not follow this, because I
regard the aborting requirements as insane (it does not have any code to
support MD5, and is not architecturally capable of aborting based on
signature algorithm).

The code treats MD5 as unknown signature algorithm, which does not
require hazardous code. Pathbuilding avoids MD5 signatures and it is
not possible to validate signatures using MD5 (algorithm conversion
will return an error).

(The SHA-1 handling is more complex, as RSA-PKCS#1v1.5-SHA1 is actually
validateable, but only in certain context. Suffice to say, I would
love to just dump the SHA-1 code).
",<20170520082855.GA32428@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-20 11:28:56
8142,TLS 15+,197,1964,"InformationProviding,NeutralResponse,ProposeAction,NeutralResponse",460,460,"
These are values internal to PKIX. And the draft _does_ allow sending a
certificate contaning those (hint: If the server does not have any
other chain using only signaled algorithms).

And MD5 isn't listed as possible field value either.
",<20170520082855.GA32428@LK-Perkele-V2.elisa-laajakaista.fi>,ilariliusvaara@welho.com,0.0,0,2,2017-05-20 11:28:56
8143,TLS 15+,198,32,ContextSetting,,-1,"(fixing missed ietf@ietf.org)
",<1668935.r1rRzccTBq@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-02-21 15:23:31
8144,TLS 15+,198,33,"InformationProviding,ContextSetting",,-1,"On Friday, 16 February 2018 18:06:41 CET The IESG wrote:
> The IESG has received a request from the Transport Layer Security WG (tls)
> to consider the following document: - 'The Transport Layer Security (TLS)
> Protocol Version 1.3'
>   <draft-ietf-tls-tls13-24.txt> as Proposed Standard",<1668935.r1rRzccTBq@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-02-21 15:23:31
8145,TLS 15+,198,34,"Question,ContextSetting,InformationProviding,ContextSetting,ProposeAction",33,-1,"
The current draft states that if the server recognises an identity but is
unable to verify corresponding binder, it ""MUST abort the handshake""
at the same time, they ""SHOULD select as single PSK and validate solely the
binder that corresponds to that PSK""
(Page 60, draft-ietf-tls-tls13-24).

That allows for trivial enumeration of externally established identities - the
attacker just needs to send to the server a list of identity guesses, with
random data as binders, if the server recognises any identity it will abort
connection, if it doesn't, it will continue to a non-PSK handshake.

Behaviour like this is generally considered a vulnerability:
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-5229

I was wondering if the document shouldn't recommend ignoring any and all
identities for which binders do not verify to prevent this kind of attack.
",<1668935.r1rRzccTBq@pintsize.usersys.redhat.com>,hkario@redhat.com,0.0,0,6,2018-02-21 15:23:31
8146,TLS 15+,199,0,Social,,-1,"Hello,",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8147,TLS 15+,199,95,"ContextSetting,Thanking,InformationProviding,Thanking",,-1,"
Thank you all for your work on TLS 1.3.  The list has still been
active on a few topics, so I want to see how that all settles out in
addition to the questions I have on the draft below.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8148,TLS 15+,199,96,"ExtensionOfPrevious,ContextSetting,ContextSetting",95,-1,"
Introduction:",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8149,TLS 15+,199,97,"Question,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,ContextSetting",96,-1,"
1. Since this is going for IETF last call soon and there has been
review of the draft (workshop, but is clearly ongoing from the list
discussions), should the first sentence of the Introductions be
removed?",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8150,TLS 15+,199,98,"ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious",97,-1,"
DISCLAIMER: This is a WIP draft of TLS 1.3 and has not yet seen
significant security analysis.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8151,TLS 15+,199,99,"InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,ContextSetting,ProposeAction",95,-1,"
2. Section 4.2.9 - There should be some mention or pointer to the
security considerations and recommendations on replay attacks for
0-RTT from this section.  I don't see any mention of discouraging
0-RTT from being a default and think that would be good for
applications that use TLS expecting replay protection.  I know the WG
agreed to keeping 0-RTT, but I think it's very important to make the
issues clear and not have this come up as a default in any
implementation/deployment for unsuspecting users.  Part of this will
get down to implementation specifics and configuration options, but
offering some guidance is important. This document will be read by
many, not just developers.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8152,TLS 15+,199,100,"Question,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ContextSetting,ProposeAction",99,-1,"
Since clients have to initiate 0-RTT, the user has to have some idea
that replay attacks are possible and accept that risk.  If this were
used in web applications, then all servers that don't want to see
replay attacks (banking, etc.), would have to have explicitly reject
this usage.  As such, there needs to be very strong guidance to this
point. Would it be that browsers configure this as a default or
something users would have to turn on or just leave it as an option
(with warnings) for a client to enable?  Would servers have clear
information in configuration files (or setup) about the implications
of this option for those that don't read the RFC and are not aware of
this problem?",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8153,TLS 15+,199,101,"InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding",100,-1,"
Most of this discussion belongs directly in the security consideration
section, but there has to be mention of it with a reference from
section 4.2.9.  It's not just an API consideration, this is for
developers, implementers, and users of the protocol. Many other
protocols use TLS beside HTTP and do so with the expectation of replay
protection.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8154,TLS 15+,199,102,"ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding",101,-1,"
While Appendix C1 is helpful, I don't think it's enough.  It's
disappointing to see a protocol with a replay attack written as a
prominent feature of TLS 1.3 and little discouragement from use.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8155,TLS 15+,199,103,"ExtensionOfPrevious,ContextSetting,ContextSetting",95,-1,"
3. Section 4.2.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8156,TLS 15+,199,104,"ExtensionOfPrevious,ContextSetting,InformationProviding",103,-1,"
""In general, detailed certificate validation procedures are out of
scope for TLS (see [RFC5280]).  This section provides TLS-specific
requirements.""",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8157,TLS 15+,199,105,"ExtensionOfPrevious,ProposeAction,InformationProviding",104,-1,"
I don't see an explanation of why it is out-of-scope.  The reference
is just to RFC5280, which seems odd.  I would expect the reference to
be to something that explains why it is out-of-scope.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8158,TLS 15+,199,106,"Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ContextSetting,ProposeAction",105,-1,"
RFC7525 has use of RFC5280 as a best practice for server identity
verification and revocation checks for TLS 1.2.  Is this just for TLS
1.3?  Why?
RFC3280 is cited for revocation in the TLS 1.2 RFC.  I think a little
explanation here would be helpful since this seems to be a departure
(or reference to the changes section).",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8159,TLS 15+,199,107,"ExtensionOfPrevious,ContextSetting,ProposeAction,ContextSetting,ProposeAction",106,-1,"
If RFC5280 remains out-of-scope, this section should fully describe
the certificate validation process for TLS 1.3. I think you need to
list out everything that should be checked as opposed to just
including one example:",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8160,TLS 15+,199,108,"ExtensionOfPrevious,ContextSetting,InformationProviding",107,-1,"
""Also, if some aspect of the certificate chain was
unacceptable (e.g., it was not signed by a known, trusted CA), the
server MAY at its discretion either continue the handshake
(considering the client unauthenticated) or abort the handshake.""",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8161,TLS 15+,199,109,"ExtensionOfPrevious,ContextSetting,ContextSetting",95,-1,"
4. Section 6.2 Error Alerts",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8162,TLS 15+,199,110,"ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,Question,ContextSetting,ProposeAction",109,-1,"
In addition to sending the error, I don't see any mention of the error
being logged on the server side, shouldn't that be specified?  Logging
errors (at least in debug modes when needed) provides valuable
troubleshooting information and many applications don't do an adequate
job of logging, so I think it's important to call that out here as a
recommendation.",<CAHbuEH4PXU5569RYJ1uPcriQruCewmRrXUU3MVBZ+GtpyceiAw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-12 22:07:37
8163,TLS 15+,199,374,"Social,Thanking,Thanking",95,-1,"Hi Kathleen,

Thanks for your review.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8164,TLS 15+,199,376,"Answer,Agreement,StateDecision,Agreement,StateDecision","97,98",98,"
Yeah, we'll remove this.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8165,TLS 15+,199,378,"Agreement,ContextSetting,ProposeAction,StateDecision,Agreement,ProposeAction,StateDecision",102,102,"
I agree this should figure more prominently. I'm working on a PR
for this now which addresses at least some of these points, so
I'll hold off on responding to this for now and maybe we can
revisit once that PR has been completed.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8166,TLS 15+,199,380,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",105,105,"
In general, TLS's policy (dating back to TLS 1.0) has been that the
job of TLS is to carry the certificates and other authentication
material but to leave it up to other parts of the system to
interpret them. It's been a long time since that decision was made,
but from my perspective, there are a number of major reasons:

1. Most of PKI processing (path construction, etc.) is generic and
not specific to TLS. What is specific to TLS is:

* How to indicate what your PKI capabilities are
(see, e.g, S 4.2.4 and 4.3.2)
* How to stuff the PKI material into the protocol
(principally S 4.4.2)
* How to determine whether a given certificate is suitable for
use in TLS 4.4.4.2 and 4.3.2.1).

So we want to outsource the generic PKI part
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8167,TLS 15+,199,381,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",380,105,"
2. It matches the software architecture that people often use,
which is to have a TLS stack but separate PKI validation. For
instance, Firefox uses NSS for TLS but moz::pkix for
validation. Similarly, Chrome uses BoringSSL for TLS
but the system PKI libraries for validation.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8168,TLS 15+,199,382,"ExtensionOfPrevious,ContextSetting,ProposeAction,ContextSetting,ProposeAction","105,381",105,"
In this case, I think that this text was more intended to
say ""and go read 5280 to learn how to do this"". To that end,
I suggest we say""
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8169,TLS 15+,199,383,"InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious",382,105,"
""In general detailed certificate validation procedures are out of
scope for TLS. [RFC5280] provides general procedures for
certificate validation. This section provides TLS-specific
requirements.""
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8170,TLS 15+,199,385,"InformationProviding,Answer,Answer",106,106,"
I think that these requirements apply equally to TLS 1.3, it's
just that 7525 is older.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8171,TLS 15+,199,387,"InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,StateDecision",106,106,"
This is part of our generalized attempt to update to point to
the latest RFCs in our references. I'll add something to the
references section.
https://github.com/tlswg/tls13-spec/issues/1015
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8172,TLS 15+,199,389,"InformationProviding,NeutralResponse,NeutralResponse",108,108,"
In general, I think we'd prefer to avoid providing a catalog of
all the ways that things can go wrong, because there are a lot.
The point of the text here is just supposed to be that servers
don't have to fail if they ask for client auth but they are then
sad about what the client provides. That's actually generally kind
of true, but it's more obvious with client auth because in many
cases the server has many ways of authenticating the client and
can fall back if it doesn't like the cert.
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8173,TLS 15+,199,391,"InformationProviding,Agreement,ProposeAction,StateDecision,Agreement,NeutralResponse,StateDecision",110,110,"
I agree. I think it would be useful to say something about this. I've
filed https://github.com/tlswg/tls13-spec/issues/1014 to track this.

-Ekr
",<CABcZeBMMQ8kNWUA4Y6ssMw7h54fPbBxrLbgZtxSkYc7-fzypSA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-13 11:09:20
8174,TLS 15+,199,696,"ContextSetting,StateDecision,Social,Thanking,Apologising,ContextSetting,Thanking,Apologising",374,-1,"Hi Eric,

Thanks for your response.  Sorry for the delay, I'v been traveling.
The responses sound good, I do have a clarification and will respond
inline.
",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8175,TLS 15+,199,698,"Thanking,Thanking",378,378,"
Thank you.",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8176,TLS 15+,199,700,"ClarificationElicitation,InformationProviding,NeutralResponse,Thanking,ClarificationElicitation,Agreement,NeutralResponse,Thanking",104,104,"
This reads much better, thank you.  However, shouldn't it say TLS1.3
since TLS 1.2 referenced RFC3280 and subsequently in RFC7525 includes
use of RFC5280 as a best practice.  It may be true for TLS 1.0 and
1.1, but it changed for TLS 1.2/
",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8177,TLS 15+,199,702,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",385,385,"
I think this was poor phrasing on my part for the point.  and is
hopefully clarified in my response above.  RFC7525 came after TLS 1.2
and updated it's guidance recommending 5280.
",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8178,TLS 15+,199,704,"InformationSeeking,NeutralResponse,ProposeAction,StateDecision,Thanking,NeutralResponse,StateDecision,Thanking",389,389,"interoperability problems.  Maybe a response to the list discussion
with this point will result in something to improve this section and
clarity for developers.  I'll look in the next update.  Thank you.
",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8179,TLS 15+,199,706,"InformationProviding,Thanking,Agreement,Thanking",391,391,"
Thank you, this is very helpful.
",<CAHbuEH540KqHrj7BparyasoSuZrH71od6oLvn04o9UqzKvz9iw@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-15 12:46:56
8180,TLS 15+,199,770,"ContextSetting,ContextSetting",103,-1,"Just commenting on Section 4.2 …
",<9C0E15E5-E852-47E0-B9A6-F807034ECFB8@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-05-15 15:38:43
8181,TLS 15+,199,772,"NeutralResponse,ProposeAction,Agreement,NeutralResponse,ProposeAction",105,105,"
I think the the separation of certificate path validation from the TLS protocol is correct, but perhaps this can be explained differently.  Perhaps the approach should be that TLS depends upon certificate path validation as described in RFC 5280.
",<9C0E15E5-E852-47E0-B9A6-F807034ECFB8@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-05-15 15:38:43
8182,TLS 15+,199,774,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,Disagreement,ProposeAction","105,383",105,"
I agree with the reasoning, however the dependency on RFC 5280 should be called out in a MUST statement.  I suggest something like:

""TLS depends on certificate path validation, and a conformant
TLS implementation MUST implement certificate paths validation
in a manner that achieves the same result as [RFC5280]. This
section provides TLS-specific requirements.”

Note that RFC 5280 is already a normative reference.
",<9C0E15E5-E852-47E0-B9A6-F807034ECFB8@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-05-15 15:38:43
8183,TLS 15+,199,803,"InformationProviding,NeutralResponse,Disagreement,NeutralResponse",772,772,"
That's not always true.  With DANE-EE(3) TLSA records there is no
path validation.  You just validate the EE certificate directly.

With DANE-EE(2), there's an RFC5280 chain, but it terminates on
a trust-anchor provided by the peer as part of its chain, with
a hash in DNS.

With unauthenticated opportunistic TLS, the peer's chain is ignored
entirely.

How and whether the peer's certificate message is used is properly
outside TLS.

Viktor.",<A599DB83-54A6-469F-9F8B-78831F0EF70F@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-15 16:19:07
8184,TLS 15+,199,883,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",774,774,"
A MUST here would be a pretty material change to historical TLS practice.
As Viktor says, there are TLS-using applications that just don't validate
the cert via 5280 at all.

-Ekr
",<CABcZeBPGK9BguF6OJo=QT3Sx1mLwBQJhh4JiBkAmws5umvctSg@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-15 16:01:53
8185,TLS 15+,199,958,"NeutralResponse,ProposeAction,NeutralResponse,ProposeAction",883,883,"
I think we want to say that if the certificates are used, then the certification path MUST be validated in a manner that is compatible with Internet X.509 certificate profile [RFC5280]; however, other approaches to validation of the public key, such as the DANE TLSA resource record [RFC6698], are also acceptable.
",<0ED5F216-365D-432E-B390-D95014ED5676@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-05-16 11:17:44
8186,TLS 15+,199,1062,"InformationProviding,NeutralResponse,Thanking,Agreement,Thanking",958,958,"
I do like this a lot better as it will help with interoperability and
security, with well defined implementation guidance.

Thank you,",<CAHbuEH7iYYrFaro9xf3bgO+i9EYgNR6xDJoUPGDf+o_cNf3+sQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-16 11:20:05
8187,TLS 15+,199,1166,"NeutralResponse,Disagreement,NeutralResponse",958,958,"
I can see how you would want to say that, but it's not really consistent
either
with historical practice or with the way that other standards track RFCs
use TLS
with certificates (see RFC 5763).

-Ekr
",<CABcZeBPnLSbNySpRoGd8gQNBDf9jAEzX8eG6WC96MTmoqdpJHA@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-16 08:23:15
8188,TLS 15+,199,1253,"NeutralResponse,Agreement,NeutralResponse",1166,1166,"
Actually, that is a great example.  I accept the need for loose coupling.
",<45BECF9F-0BBD-4E2D-B517-77709C0EAC9F@vigilsec.com>,housley@vigilsec.com,0.0,1,0,2017-05-16 11:31:27
8189,TLS 15+,199,1381,"InformationSeeking,Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Question",1253,1253,"
OK, does that put us back to the suggested wording:

""TLS depends on certificate path validation, and a conformant
TLS implementation MUST implement certificate paths validation
in a manner that achieves the same result as [RFC5280]. This
section provides TLS-specific requirements.”

For any developers following, does this help enough with any
interoperability questions?
",<CAHbuEH7djXnZv-SvOFyLxTb6UWCKj8Hn0ZMS3ccgvviuPuPFKQ@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-16 11:36:36
8190,TLS 15+,199,1422,"InformationProviding,Answer,ProposeAction,NeutralResponse",1381,1381,"
TLS does not depend on certificate path validation.  Many TLS
*applications* rely PKIX certificate path validation (along with
RFC 6125 server identity verification), but TLS itself supports
various alternative authentication (and non-authentication) modes.

* PSK or SRP without certificates
* Opportunistic unauthenticated TLS (perhaps anon-(EC)DH with TLS <= 1.2)
* TOFU public key pinning
* Static leaf key or leaf cert matching
* RFC7250 raw public keys
* DANE-EE(3) leaf certificate/key verification, without expiration
or server name checks
* DANE-EE(3) ... with name checks (where UKS attack are relevant)
* DANE-TA(2) with RFC5280 chain verification, but the trust-anchor
is part of the chain, and identified via DNS TLSA records.
* PKIX-EE(1) which is RFC5280 + DANE leaf cert ""constraint""
* PKIX-TA(0) which is RFC5280 + DANE CA ""constraint""

Keeping in mind that many implementations of RFC5280 violate that specification
by interpreting EKUs in CA certificates to constrain the kinds of certificates
that the CA may issue.  That de-facto usage is I think much more widely implemented
than the far too complex X.509 policy constraints (RFC5280 4.2.1.11).

Viktor.",<854FCD7A-B4C7-4E7A-A45E-7EECAA5E856C@dukhovni.org>,ietf-dane@dukhovni.org,0.0,0,1,2017-05-16 12:37:42
8191,TLS 15+,199,1494,"InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Apologising,NeutralResponse,ProposeAction,Apologising",1422,1422,"
Sorry, I grabbed the wrong text as I was ineffective at multi-tasking.
I think we are back to the following text and would like to confirm
that and make sure it is agreeable to the WG and implementers:

""In general detailed certificate validation procedures are out of
scope for TLS. [RFC5280] provides general procedures for
certificate validation. This section provides TLS-specific
requirements.""

There's also a thread that was discussing some interoperability
problems related to validation and I'd like to see the resolution for
that as well.
",<CAHbuEH5AxUkT_Q5mJ6SrEWkY+GG3P1XNuD_QJX8kR9CfSWw+Xg@mail.gmail.com>,kathleen.moriarty.ietf@gmail.com,0.0,1,0,2017-05-16 12:49:39
8192,TLS 15+,199,1553,"Agreement,Agreement","104,1494",104,"Yeah, I think so.",<CABcZeBP8-J0JaatQjy3DTqr4G7VwdKRKk=OQHRJPgtMvBjhH+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-16 12:01:56
8193,TLS 15+,199,1595,"InformationProviding,NeutralResponse,StateDecision,NeutralResponse,StateDecision",1494,1494,"
Matt has provided a PR for that that I'll be looking at this week.
",<CABcZeBP8-J0JaatQjy3DTqr4G7VwdKRKk=OQHRJPgtMvBjhH+g@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-16 12:01:56
8194,TLS 15+,199,1619,"InformationProviding,NeutralResponse,ContextSetting,NeutralResponse",1422,1422,"
Just as a footnote to anyone reading this discussion that may not know:
The current version of the TLS 1.3 spec explicitly recommends RFC7250
raw public keys as a viable option and provides the needed information
on how to handle this in TLS 1.3. Anonymous cipher suite support has
been dropped from TLS 1.3, and trust on first use raw public keys are
the first of the two recommended alternatives.
",<201705162205.20905.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-16 22:05:20
8195,TLS 15+,199,1620,"InformationProviding,NeutralResponse,NeutralResponse",1422,1422,"
Trust on first use public keys in unvalidated certificate chains is the
second recommended alternative.

https://tlswg.github.io/tls13-spec/#unauthenticated-operation
https://tools.ietf.org/html/draft-ietf-tls-tls13-20#appendix-C.6
",<201705162205.20905.davemgarrett@gmail.com>,davemgarrett@gmail.com,0.0,0,7,2017-05-16 22:05:20
8196,TLS 15+,199,1774,"ClarificationElicitation,Answer,Question,Answer",1381,773,"
Hmm... I don't think so. Wouldn't the fingerprint-matching prescribed by
5763
contradict this?

-Ekr
",<CABcZeBOjK_zumDd3XyNDF5TM5ckkpFoHEzxWb_H8=cF4N-CxtQ@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-16 10:44:39
8197,TLS 15+,199,1806,"InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,ProposeAction",110,110,"
I think I agree with what Kathleen wrote here, but the PR that
attempts to address this
(https://github.com/tlswg/tls13-spec/pull/1021) seems too strong in
recommending that servers send alerts. In particular, IMO logging the
alert shouldn't necessarily be the default and there should be a way
to disable such logging. I guess saying something such as ""The
implementation SHOULD provide a way to facilitate the logging of the
error"" or similar, instead of ""SHOULD log"" seems better to me.

In particular, an implementation might not do any logging itself, but
might return an error code that the higher level thing could log (if
it wants to). I would generally recommend implementations do this than
to do logging themselves.
",<CAFewVt6Ec9XuYduV5Qf9f6b8QboNjfVccgd5ZxRSEVfUDOsE5A@mail.gmail.com>,brian@briansmith.org,0.0,0,6,2017-05-17 20:10:26
8198,TLS 15+,199,1850,"InformationSeeking,Question,Agreement,ProposeAction,Question,Agreement",1806,-1,"This works for me, does anyone object to my updating the PR in this fashion?

-Ekr
",<CABcZeBNREV5X_4y3RGWpD0+ziKbhfYtbSpECuMRerFz6kjHkJw@mail.gmail.com>,ekr@rtfm.com,0.0,0,1,2017-05-18 09:08:29
8199,TLS 15+,199,1858,"Answer,Agreement",1850,1850,"
Go ahead.",<CABkgnnU=AdrJmjwSFHNiSnrJAXKXsE1z_YUAzoku04DqJN4gMw@mail.gmail.com>,martin.thomson@gmail.com,0.0,1,0,2017-05-18 10:02:20
8200,TLS 15+,200,0,Social,,-1,"Hi all,",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8201,TLS 15+,200,103,"ContextSetting,InformationProviding,ContextSetting",,-1,"
The following reviewers have assignments:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8202,TLS 15+,200,104,"ContextSetting,ExtensionOfPrevious,ContextSetting",103,-1,"
For telechat 2018-03-08",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8203,TLS 15+,200,105,"InformationProviding,InformationProviding,ExtensionOfPrevious",104,-1,"
Reviewer               Type      LC end     Draft
Stewart Bryant         Telechat  2018-03-06 draft-ietf-trill-transport-over-mpls-07
Stewart Bryant         Telechat  2018-02-27 draft-ietf-teas-rsvp-egress-protection-13 *
Brian Carpenter        Telechat  2018-03-06 draft-ietf-trill-multi-topology-05
Francis Dupont         Last Call 2018-02-28 draft-ietf-netmod-syslog-model-23
Matthew Miller         Telechat  2018-03-06 draft-ietf-trill-over-ip-15
Pete Resnick           Telechat  2018-03-07 draft-ietf-netmod-rfc6087bis-18
Meral Shirazipour      Telechat  2018-02-22 draft-ietf-bier-mvpn-10 *
Meral Shirazipour      Telechat  2018-03-06 draft-ietf-trill-multilevel-unique-nickname-05
Robert Sparks          Telechat  2018-03-06 draft-ietf-trill-smart-endnodes-09 *
Robert Sparks          Telechat  2018-03-01 draft-ietf-teas-rsvp-ingress-protection-15 *
Dale Worley            Last Call 2018-03-02 draft-ietf-tls-tls13-24",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8204,TLS 15+,200,106,"ContextSetting,ExtensionOfPrevious,ContextSetting",103,-1,"
For telechat 2018-04-05",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8205,TLS 15+,200,107,"InformationProviding,InformationProviding,ExtensionOfPrevious",106,-1,"
Reviewer               Type      LC end     Draft
Stewart Bryant         Telechat  2018-03-30 draft-ietf-i2rs-rib-data-model-10
Francis Dupont         Telechat  2018-03-20 draft-ietf-tls-record-limit-02
Vijay Gurbani          Last Call 2018-03-28 draft-ietf-teas-scheduled-resources-06
Dan Romascanu          Last Call 2018-03-16 draft-ietf-rmcat-sbd-10
Peter Yee              Telechat  2018-03-06 draft-ietf-6lo-rfc6775-update-14",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8206,TLS 15+,200,108,"ContextSetting,ExtensionOfPrevious,ContextSetting",103,-1,"
Last calls:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8207,TLS 15+,200,109,"InformationProviding,InformationProviding,ExtensionOfPrevious",108,-1,"
Reviewer               Type      LC end     Draft
Linda Dunbar           Last Call 2018-03-12 draft-ietf-tokbind-https-12",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8208,TLS 15+,200,110,"ExtensionOfPrevious,InformationProviding",109,-1,"
* Other revision previously reviewed
** This revision already reviewed",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8209,TLS 15+,200,111,"ContextSetting,ContextSetting",,-1,"
Next in the reviewer rotation:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8210,TLS 15+,200,112,"InformationProviding,InformationProviding,ExtensionOfPrevious",111,-1,"
Francis Dupont
Roni Even
Fernando Gont
Vijay Gurbani
Wassim Haddad
Joel Halpern
Christer Holmberg
Russ Housley
Jouni Korhonen
Paul Kyzivat",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8211,TLS 15+,200,113,"ContextSetting,ContextSetting",,-1,"
The LC and Telechat review templates are included below:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8212,TLS 15+,200,114,"InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction,Social",113,-1,"
-- Begin LC Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair.  Please treat these comments just
like any other last call comments.",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8213,TLS 15+,200,115,"ContextSetting,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",114,-1,"
For more information, please see the FAQ at",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8214,TLS 15+,200,116,"InformationProviding,InformationProviding,ExtensionOfPrevious",115,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8215,TLS 15+,200,117,"InformationProviding,ExtensionOfPrevious,ContextSetting",113,-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8216,TLS 15+,200,118,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,117",-1,"
Summary:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8217,TLS 15+,200,119,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,118",-1,"
Major issues:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8218,TLS 15+,200,120,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,119",-1,"
Minor issues:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8219,TLS 15+,200,121,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,120",-1,"
Nits/editorial comments:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8220,TLS 15+,200,122,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,121",-1,"
-- End LC Template --",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8221,TLS 15+,200,123,"InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",113,-1,"
-- Begin Telechat Template --
I am the assigned Gen-ART reviewer for this draft. The General Area
Review Team (Gen-ART) reviews all IETF documents being processed
by the IESG for the IETF Chair. Please wait for direction from your
document shepherd or AD before posting a new version of the draft.",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8222,TLS 15+,200,124,"ContextSetting,ExtensionOfPrevious,ContextSetting,ProposeAction,Social",123,-1,"
For more information, please see the FAQ at",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8223,TLS 15+,200,125,"InformationProviding,InformationProviding,ExtensionOfPrevious",124,-1,"
<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>.",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8224,TLS 15+,200,126,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,125",-1,"
Document:
Reviewer:
Review Date:
IETF LC End Date:
IESG Telechat date: (if known)",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8225,TLS 15+,200,127,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,126",-1,"
Summary:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8226,TLS 15+,200,128,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,127",-1,"
Major issues:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8227,TLS 15+,200,129,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,128",-1,"
Minor issues:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8228,TLS 15+,200,130,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,129",-1,"
Nits/editorial comments:",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
8229,TLS 15+,200,131,"ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting","113,130",-1,"
-- End Telechat Template --",<151994065358.21644.10605784957089695621.idtracker@ietfa.amsl.com>,mahoney@nostrum.com,0.0,1,7,2018-03-01 13:44:13
