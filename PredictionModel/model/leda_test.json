[{"current_segment": {"sid": 264, "labels": "InformationProviding", "content": "I am thinking that https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 should include a requirement that a WebRTC Browser MUST support the TURN server discovery as described in https://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00."}, "context_segments": []}, {"current_segment": {"sid": 5133, "labels": "Social", "content": "Hi,"}, "context_segments": [{"sid": 264, "labels": "InformationProviding", "content": "I am thinking that https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 should include a requirement that a WebRTC Browser MUST support the TURN server discovery as described in https://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00."}]}, {"current_segment": {"sid": 7415, "labels": "InformationProviding,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Crypto Forum of the IETF."}, "context_segments": [{"sid": 264, "labels": "InformationProviding", "content": "I am thinking that https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 should include a requirement that a WebRTC Browser MUST support the TURN server discovery as described in https://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00."}, {"sid": 5133, "labels": "Social", "content": "Hi,"}]}, {"current_segment": {"sid": 265, "labels": "NeutralResponse,InformationProviding", "content": "I\u2019d say that there\u2019s some level of implementer interest in standardising / documenting proxy.pac, but \u2014 so far \u2014 inadequate resources; I don\u2019t see *any* interest in WPAD standardization, as it\u2019s viewed as actively bad."}, "context_segments": []}, {"current_segment": {"sid": 5134, "labels": "InformationProviding", "content": "\nC.1.4.1.  MIKEY Key Establishment"}, "context_segments": [{"sid": 265, "labels": "NeutralResponse,InformationProviding", "content": "I\u2019d say that there\u2019s some level of implementer interest in standardising / documenting proxy.pac, but \u2014 so far \u2014 inadequate resources; I don\u2019t see *any* interest in WPAD standardization, as it\u2019s viewed as actively bad."}]}, {"current_segment": {"sid": 7416, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nTitle           : Edwards-curve Digital Signature Algorithm (EdDSA)\nAuthors         : Simon Josefsson\nIlari Liusvaara\nFilename        : draft-irtf-cfrg-eddsa-03.txt\nPages           : 52\nDate            : 2016-03-01"}, "context_segments": [{"sid": 265, "labels": "NeutralResponse,InformationProviding", "content": "I\u2019d say that there\u2019s some level of implementer interest in standardising / documenting proxy.pac, but \u2014 so far \u2014 inadequate resources; I don\u2019t see *any* interest in WPAD standardization, as it\u2019s viewed as actively bad."}, {"sid": 5134, "labels": "InformationProviding", "content": "\nC.1.4.1.  MIKEY Key Establishment"}]}, {"current_segment": {"sid": 266, "labels": "ProposeAction,InformationProviding", "content": "Seems like something that should go into -transports (i.e. that WebRTC\nclients SHOULD obtain a srflx address from the TURN server, in addition to\nany provided STUN servers)."}, "context_segments": []}, {"current_segment": {"sid": 5135, "labels": "InformationProviding,ProposeAction", "content": "\nThis method for using MIKEY to establish the security context for\nSRTP is initiated in the client's SETUP request, and the servers\nresponse to the SETUP carries the MIKEY response.  Thus ensuring that\nthe Security context establishment happens simultaneously with the\nestablishment of the media stream being protected.  By using MIKEY's\nRSA-R mode [RFC4738] the client can be initiator and still allow the\nserver to set the parameters in accordance with the actual media\nstream."}, "context_segments": [{"sid": 266, "labels": "ProposeAction,InformationProviding", "content": "Seems like something that should go into -transports (i.e. that WebRTC\nclients SHOULD obtain a srflx address from the TURN server, in addition to\nany provided STUN servers)."}]}, {"current_segment": {"sid": 7417, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nAbstract:\nThe elliptic curve signature scheme Edwards-curve Digital Signature\nAlgorithm (EdDSA) is described.  The algorithm is instantiated with\nrecommended parameters for the edwards25519 and edwards448 curves.\nAn example implementation and test vectors are provided."}, "context_segments": [{"sid": 266, "labels": "ProposeAction,InformationProviding", "content": "Seems like something that should go into -transports (i.e. that WebRTC\nclients SHOULD obtain a srflx address from the TURN server, in addition to\nany provided STUN servers)."}, {"sid": 5135, "labels": "InformationProviding,ProposeAction", "content": "\nThis method for using MIKEY to establish the security context for\nSRTP is initiated in the client's SETUP request, and the servers\nresponse to the SETUP carries the MIKEY response.  Thus ensuring that\nthe Security context establishment happens simultaneously with the\nestablishment of the media stream being protected.  By using MIKEY's\nRSA-R mode [RFC4738] the client can be initiator and still allow the\nserver to set the parameters in accordance with the actual media\nstream."}]}, {"current_segment": {"sid": 267, "labels": "NeutralResponse,InformationProviding", "content": "To reiterate, the TRAM draft doesn't specify what WebRTC should actually do\nwith the discovered TURN server(s).  RETURN (\nhttps://datatracker.ietf.org/doc/draft-schwartz-rtcweb-return/) attempts to\nfill in the details, and also resolve questions about priority of different\nsettings, etc.\n\nComments on the RETURN draft are appreciated, of couse.\n"}, "context_segments": []}, {"current_segment": {"sid": 5136, "labels": "InformationProviding", "content": "\nThe Security Context Establishment is done according to the following\nprocess:"}, "context_segments": [{"sid": 267, "labels": "NeutralResponse,InformationProviding", "content": "To reiterate, the TRAM draft doesn't specify what WebRTC should actually do\nwith the discovered TURN server(s).  RETURN (\nhttps://datatracker.ietf.org/doc/draft-schwartz-rtcweb-return/) attempts to\nfill in the details, and also resolve questions about priority of different\nsettings, etc.\n\nComments on the RETURN draft are appreciated, of couse.\n"}]}, {"current_segment": {"sid": 7418, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThe IETF datatracker status page for this draft is:\nhttps://datatracker.ietf.org/doc/draft-irtf-cfrg-eddsa/"}, "context_segments": [{"sid": 267, "labels": "NeutralResponse,InformationProviding", "content": "To reiterate, the TRAM draft doesn't specify what WebRTC should actually do\nwith the discovered TURN server(s).  RETURN (\nhttps://datatracker.ietf.org/doc/draft-schwartz-rtcweb-return/) attempts to\nfill in the details, and also resolve questions about priority of different\nsettings, etc.\n\nComments on the RETURN draft are appreciated, of couse.\n"}, {"sid": 5136, "labels": "InformationProviding", "content": "\nThe Security Context Establishment is done according to the following\nprocess:"}]}, {"current_segment": {"sid": 268, "labels": "Disagreement,InformationProviding", "content": "I do not believe that this is an appropriate requirement"}, "context_segments": []}, {"current_segment": {"sid": 5137, "labels": "InformationProviding", "content": "\n1.   The client determines that SAVP or SAVPF shall be used from\nmedia description format, e.g.  SDP.  If no other key management\nmethod is explicitly signalled, then MIKEY SHALL be used as\ndefined here in.  This specification does not specify an\nexplicit method for indicating this security context\nestablishment method, but future specifications may."}, "context_segments": [{"sid": 268, "labels": "Disagreement,InformationProviding", "content": "I do not believe that this is an appropriate requirement"}]}, {"current_segment": {"sid": 7419, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThere's also a htmlized version available at:\nhttps://tools.ietf.org/html/draft-irtf-cfrg-eddsa-03"}, "context_segments": [{"sid": 268, "labels": "Disagreement,InformationProviding", "content": "I do not believe that this is an appropriate requirement"}, {"sid": 5137, "labels": "InformationProviding", "content": "\n1.   The client determines that SAVP or SAVPF shall be used from\nmedia description format, e.g.  SDP.  If no other key management\nmethod is explicitly signalled, then MIKEY SHALL be used as\ndefined here in.  This specification does not specify an\nexplicit method for indicating this security context\nestablishment method, but future specifications may."}]}, {"current_segment": {"sid": 269, "labels": "ClarificationElicitation,InformationSeeking", "content": "\nCare to say why?\n"}, "context_segments": [{"sid": 268, "labels": "Disagreement,InformationProviding", "content": "I do not believe that this is an appropriate requirement"}, {"sid": 5137, "labels": "InformationProviding", "content": "\n1.   The client determines that SAVP or SAVPF shall be used from\nmedia description format, e.g.  SDP.  If no other key management\nmethod is explicitly signalled, then MIKEY SHALL be used as\ndefined here in.  This specification does not specify an\nexplicit method for indicating this security context\nestablishment method, but future specifications may."}, {"sid": 7419, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThere's also a htmlized version available at:\nhttps://tools.ietf.org/html/draft-irtf-cfrg-eddsa-03"}]}, {"current_segment": {"sid": 270, "labels": "NeutralResponse,InformationProviding", "content": "Few cents .."}, "context_segments": []}, {"current_segment": {"sid": 5138, "labels": "InformationProviding", "content": "\n2.   The client SHALL establish a TLS connection for RTSP messages,\ndirectly or hop by hop with the server.  If hop-by-hop TLS\nsecurity is used, the User method SHALL be indicated in the\nAccept-Credentials header.  We do note that using hop-by-hop\ndoes allow the proxy to insert itself as a man in the middle\nalso in the MIKEY exchange by providing one of its certificates,\nrather than the server's in the Connection-Credentials header.\nThe client shall therefore validate the server certificate."}, "context_segments": [{"sid": 270, "labels": "NeutralResponse,InformationProviding", "content": "Few cents .."}]}, {"current_segment": {"sid": 7420, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nA diff from the previous version is available at:\nhttps://www.ietf.org/rfcdiff?url2=draft-irtf-cfrg-eddsa-03"}, "context_segments": [{"sid": 270, "labels": "NeutralResponse,InformationProviding", "content": "Few cents .."}, {"sid": 5138, "labels": "InformationProviding", "content": "\n2.   The client SHALL establish a TLS connection for RTSP messages,\ndirectly or hop by hop with the server.  If hop-by-hop TLS\nsecurity is used, the User method SHALL be indicated in the\nAccept-Credentials header.  We do note that using hop-by-hop\ndoes allow the proxy to insert itself as a man in the middle\nalso in the MIKEY exchange by providing one of its certificates,\nrather than the server's in the Connection-Credentials header.\nThe client shall therefore validate the server certificate."}]}, {"current_segment": {"sid": 271, "labels": "Agreement,InformationProviding", "content": "+1 to Adam and Mo's comments which make a lot of sense to me."}, "context_segments": []}, {"current_segment": {"sid": 5139, "labels": "InformationProviding", "content": "\n3.   The client retrieves the servers certificate from a direct TLS\nconnection, or if hop by hop from Connection-Credentials header.\nThe client then checks that the server certificate is valid and\nbelongs to server."}, "context_segments": [{"sid": 271, "labels": "Agreement,InformationProviding", "content": "+1 to Adam and Mo's comments which make a lot of sense to me."}]}, {"current_segment": {"sid": 7421, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "\nPlease note that it may take a couple of minutes from the time of submission\nuntil the htmlized version and diff are available at tools.ietf.org."}, "context_segments": [{"sid": 271, "labels": "Agreement,InformationProviding", "content": "+1 to Adam and Mo's comments which make a lot of sense to me."}, {"sid": 5139, "labels": "InformationProviding", "content": "\n3.   The client retrieves the servers certificate from a direct TLS\nconnection, or if hop by hop from Connection-Credentials header.\nThe client then checks that the server certificate is valid and\nbelongs to server."}]}, {"current_segment": {"sid": 272, "labels": "Answer,InformationProviding", "content": "I think making it a requirement is probably premature until we have a WG\ndocument that explains what should happen when you discover one of these\nnetwork-provided TURN servers. Once\nhttps://tools.ietf.org/html/draft-schwartz-rtcweb-return-04 is accepted as\na WG doc, we can add a requirement for support for RETURN and server\ndiscovery."}, "context_segments": []}, {"current_segment": {"sid": 5140, "labels": "InformationProviding", "content": "\n4.   The client forms the MIKEY Initiator message using RSA-R mode in\nunicast mode as specified in [RFC4738].  The client SHOULD use\nthe same certificate for TLS and in MIKEY to enable server to\nbind the two together.  The client's certificate SHALL be\nincluded in the MIKEY message.  The client SHALL indicate its\nSRTP capabilities in the message."}, "context_segments": [{"sid": 272, "labels": "Answer,InformationProviding", "content": "I think making it a requirement is probably premature until we have a WG\ndocument that explains what should happen when you discover one of these\nnetwork-provided TURN servers. Once\nhttps://tools.ietf.org/html/draft-schwartz-rtcweb-return-04 is accepted as\na WG doc, we can add a requirement for support for RETURN and server\ndiscovery."}]}, {"current_segment": {"sid": 7422, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": [{"sid": 272, "labels": "Answer,InformationProviding", "content": "I think making it a requirement is probably premature until we have a WG\ndocument that explains what should happen when you discover one of these\nnetwork-provided TURN servers. Once\nhttps://tools.ietf.org/html/draft-schwartz-rtcweb-return-04 is accepted as\na WG doc, we can add a requirement for support for RETURN and server\ndiscovery."}, {"sid": 5140, "labels": "InformationProviding", "content": "\n4.   The client forms the MIKEY Initiator message using RSA-R mode in\nunicast mode as specified in [RFC4738].  The client SHOULD use\nthe same certificate for TLS and in MIKEY to enable server to\nbind the two together.  The client's certificate SHALL be\nincluded in the MIKEY message.  The client SHALL indicate its\nSRTP capabilities in the message."}]}, {"current_segment": {"sid": 273, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nUnclear whether it needs to be MUST-strength until we get some\nimplementation feedback though."}, "context_segments": []}, {"current_segment": {"sid": 5141, "labels": "InformationProviding", "content": "\n5.   The MIKEY message from the previous step is base64 [RFC4648]\nencoded and becomes the value of the MIKEY parameter that are\nincluded in the transport specification(s) that specifies a SRTP\nbased profile (SAVP, SAVPF) in the SETUP request."}, "context_segments": [{"sid": 273, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nUnclear whether it needs to be MUST-strength until we get some\nimplementation feedback though."}]}, {"current_segment": {"sid": 274, "labels": "NeutralResponse,InformationProviding", "content": "\n-transports already states \" WebRTC browsers MUST support configuration of STUN and TURN servers, both from browser configuration and from an application\".\n\nSo it looks like we already have a requirement but no explanation of what should happen when both are available.\n\nLooks like we need to adopt draft-schwartz-rtcweb-return and explain this stuff. I would certainly support that and put some effort into getting this done.\n\nAndy"}, "context_segments": [{"sid": 273, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nUnclear whether it needs to be MUST-strength until we get some\nimplementation feedback though."}, {"sid": 5141, "labels": "InformationProviding", "content": "\n5.   The MIKEY message from the previous step is base64 [RFC4648]\nencoded and becomes the value of the MIKEY parameter that are\nincluded in the transport specification(s) that specifies a SRTP\nbased profile (SAVP, SAVPF) in the SETUP request."}]}, {"current_segment": {"sid": 275, "labels": "NeutralResponse,InformationProviding", "content": "\nThe last times we've talked about this, people have imagined configuring\nthis via the same mechanism as configuring HTTP proxies (nonstandard\nscript at a nonstandard URL).\n\nAutodiscovery may be preferable, but it's not clear that it removes the\nneed for the script-like things.\n"}, "context_segments": [{"sid": 273, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nUnclear whether it needs to be MUST-strength until we get some\nimplementation feedback though."}, {"sid": 5141, "labels": "InformationProviding", "content": "\n5.   The MIKEY message from the previous step is base64 [RFC4648]\nencoded and becomes the value of the MIKEY parameter that are\nincluded in the transport specification(s) that specifies a SRTP\nbased profile (SAVP, SAVPF) in the SETUP request."}, {"sid": 274, "labels": "NeutralResponse,InformationProviding", "content": "\n-transports already states \" WebRTC browsers MUST support configuration of STUN and TURN servers, both from browser configuration and from an application\".\n\nSo it looks like we already have a requirement but no explanation of what should happen when both are available.\n\nLooks like we need to adopt draft-schwartz-rtcweb-return and explain this stuff. I would certainly support that and put some effort into getting this done.\n\nAndy"}]}, {"current_segment": {"sid": 276, "labels": "NeutralResponse,InformationProviding", "content": "\nIf there is, gathering that requirement seems important.  Mark Nottingham was beginning an effort around WPAD standardization (or something that resembled it).  CC'ing him in case there is useful status on that front.\n\n-d\n"}, "context_segments": [{"sid": 273, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nUnclear whether it needs to be MUST-strength until we get some\nimplementation feedback though."}, {"sid": 5141, "labels": "InformationProviding", "content": "\n5.   The MIKEY message from the previous step is base64 [RFC4648]\nencoded and becomes the value of the MIKEY parameter that are\nincluded in the transport specification(s) that specifies a SRTP\nbased profile (SAVP, SAVPF) in the SETUP request."}, {"sid": 274, "labels": "NeutralResponse,InformationProviding", "content": "\n-transports already states \" WebRTC browsers MUST support configuration of STUN and TURN servers, both from browser configuration and from an application\".\n\nSo it looks like we already have a requirement but no explanation of what should happen when both are available.\n\nLooks like we need to adopt draft-schwartz-rtcweb-return and explain this stuff. I would certainly support that and put some effort into getting this done.\n\nAndy"}, {"sid": 275, "labels": "NeutralResponse,InformationProviding", "content": "\nThe last times we've talked about this, people have imagined configuring\nthis via the same mechanism as configuring HTTP proxies (nonstandard\nscript at a nonstandard URL).\n\nAutodiscovery may be preferable, but it's not clear that it removes the\nneed for the script-like things.\n"}]}, {"current_segment": {"sid": 277, "labels": "Agreement,NeutralResponse,InformationProviding", "content": "The actual requirement (as indicated in S 3.3.5.1 of\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15#page-8)\nis for an enterprise to be able to force the use of a enterprise-controlled\nTURN server. Here, enterprise policy surely can allow for all traffic to be\nforced through said TURN server, just as it can be done for HTTP/HTTPS\nproxies today.\n\nI agree that the ISP TURN server case is different, and merits additional\ndiscussion. So while we can argue about exactly how autodiscovery should\nwork (e.g. .pac or\nhttps://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00), we\nshould be able to agree on how things should work once a local TURN server\nis found (i.e. https://tools.ietf.org/html/draft-schwartz-rtcweb-return-04\n\nThis would allow the above scenario to be satisfied when the TURN proxy\nconfiguration is set through enterprise policy, and would be a substantial\nimprovement over the current state of affairs (e.g. where many enterprises\nforce all WebRTC traffic to TCP or through a HTTPS proxy)\n"}, "context_segments": []}, {"current_segment": {"sid": 5142, "labels": "InformationProviding,ProposeAction", "content": "\nSection C.1.4 and C.1.5 recommend using MIKEY for key exchange. I think that\nsince we now have DTLS-SRTP in RFC 5764 we should look at recommending this\noption."}, "context_segments": [{"sid": 277, "labels": "Agreement,NeutralResponse,InformationProviding", "content": "The actual requirement (as indicated in S 3.3.5.1 of\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15#page-8)\nis for an enterprise to be able to force the use of a enterprise-controlled\nTURN server. Here, enterprise policy surely can allow for all traffic to be\nforced through said TURN server, just as it can be done for HTTP/HTTPS\nproxies today.\n\nI agree that the ISP TURN server case is different, and merits additional\ndiscussion. So while we can argue about exactly how autodiscovery should\nwork (e.g. .pac or\nhttps://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00), we\nshould be able to agree on how things should work once a local TURN server\nis found (i.e. https://tools.ietf.org/html/draft-schwartz-rtcweb-return-04\n\nThis would allow the above scenario to be satisfied when the TURN proxy\nconfiguration is set through enterprise policy, and would be a substantial\nimprovement over the current state of affairs (e.g. where many enterprises\nforce all WebRTC traffic to TCP or through a HTTPS proxy)\n"}]}, {"current_segment": {"sid": 5143, "labels": "InformationProviding,Agreement,ProposeAction", "content": "\nHi Roni,\n\nThis questions doesn't seem to have been answered nor commented by anyone.\n\nI think you actually have found an issue here. First of all that without\na mandated to implement keying mechanism this is actually\nunderspecified. The second a discussion on what keying mechanism to use.\n\nTo resolve this I will suggest that we change RECOMMEND to MUST in\nsection C.14 and C.1.5 on using MIKEY with these protocol identifiers.\nThat way we do get a fully specified security mechanism. The only thing\nI need to consider is if MIKEY and SRTP has at least one mandatory to\nimplement mode each so that no further about which sets of mechanism\nmust be supported.\n\nI would agree that DTLS-SRTP is a good idea for transport layer security\nif needed for RTP media streams in RTSP. However, this needs\nspecification work and some considerations. I would also like to point\nout that this do require a bit of special muxing which should be\nexpressed in the protocol string, just like in the SDP case also in\nRTSP. Thus I think using another profile, lower transport combination\nthan for SRTP directly on UDP is warranted for DTLS-SRTP. As this\nrequire job, I think anyone interested in this should define this\nseparately so that we can finish the core RTSP 2.0 spec.\n\nI don't know if the interest is so big for transport level protection,\nalthough I think we shall provide a solution. The reason is that at\nleast content protection is usually in place. Thus the need is primarily\nfor integrity and authentication between server and client.\n"}, "context_segments": [{"sid": 277, "labels": "Agreement,NeutralResponse,InformationProviding", "content": "The actual requirement (as indicated in S 3.3.5.1 of\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-15#page-8)\nis for an enterprise to be able to force the use of a enterprise-controlled\nTURN server. Here, enterprise policy surely can allow for all traffic to be\nforced through said TURN server, just as it can be done for HTTP/HTTPS\nproxies today.\n\nI agree that the ISP TURN server case is different, and merits additional\ndiscussion. So while we can argue about exactly how autodiscovery should\nwork (e.g. .pac or\nhttps://tools.ietf.org/html/draft-ietf-tram-turn-server-discovery-00), we\nshould be able to agree on how things should work once a local TURN server\nis found (i.e. https://tools.ietf.org/html/draft-schwartz-rtcweb-return-04\n\nThis would allow the above scenario to be satisfied when the TURN proxy\nconfiguration is set through enterprise policy, and would be a substantial\nimprovement over the current state of affairs (e.g. where many enterprises\nforce all WebRTC traffic to TCP or through a HTTPS proxy)\n"}, {"sid": 5142, "labels": "InformationProviding,ProposeAction", "content": "\nSection C.1.4 and C.1.5 recommend using MIKEY for key exchange. I think that\nsince we now have DTLS-SRTP in RFC 5764 we should look at recommending this\noption."}]}, {"current_segment": {"sid": 278, "labels": "InformationProviding", "content": "https://tools.ietf.org/id/draft-ietf-tram-turn-server-discovery-00.txt makes the claim that it is needed for \"WebRTC usage\" and in fact claims that it is needed by WebRTC \"immediately\"."}, "context_segments": []}, {"current_segment": {"sid": 5144, "labels": "InformationProviding,ProposeAction", "content": "\n6.   Any proxy encountering the MIKEY parameter SHALL forward it\nwithout modification.  A proxy requiring to understand transport\nspecificaation which doesn't support SAVP/SAVPF with MIKEY will\ndiscard the whole transport specification.  Most types of proxy\ncan easily support SAVP and SAVPF with MIKEY.  If possible\nbypassing the proxy should be tried."}, "context_segments": [{"sid": 278, "labels": "InformationProviding", "content": "https://tools.ietf.org/id/draft-ietf-tram-turn-server-discovery-00.txt makes the claim that it is needed for \"WebRTC usage\" and in fact claims that it is needed by WebRTC \"immediately\"."}]}, {"current_segment": {"sid": 279, "labels": "Agreement,InformationProviding", "content": "I agree we surely do need to need to cater for the case when a local TURN server is discovered or configured by the user/admin and specify how the WebRTC browser behaves in that scenario.  We have always had that requirement specified as Justin pointed out."}, "context_segments": []}, {"current_segment": {"sid": 5145, "labels": "InformationProviding", "content": "\n7.   The server upon receiving the SETUP request, while need to\ndecide upon the transport specification to use, if multiple are\nincluded by the client.  In the determination of which transport\nspecifications that are supported and preferred, the server\nshould decode the MIKEY message to take the embedded SRTP\nparameters into account.  If all transport specs require SRTP\nbut no MIKEY parameter or other supported keying method is\nincluded, the server shall respond with 403."}, "context_segments": [{"sid": 279, "labels": "Agreement,InformationProviding", "content": "I agree we surely do need to need to cater for the case when a local TURN server is discovered or configured by the user/admin and specify how the WebRTC browser behaves in that scenario.  We have always had that requirement specified as Justin pointed out."}]}, {"current_segment": {"sid": 280, "labels": "NeutralResponse,InformationProviding", "content": "\nI was just pointing out that if this is the case then it should be referenced from a RTCWEB draft."}, "context_segments": []}, {"current_segment": {"sid": 5146, "labels": "InformationProviding,ContextSetting", "content": "\n8.   Upon generating a response the following outcomes can occur:"}, "context_segments": [{"sid": 280, "labels": "NeutralResponse,InformationProviding", "content": "\nI was just pointing out that if this is the case then it should be referenced from a RTCWEB draft."}]}, {"current_segment": {"sid": 281, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf you think the discovery mechanism is not suitable for WebRTC usage then please make that comment to the TRAM WG list."}, "context_segments": []}, {"current_segment": {"sid": 5147, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n*  A transport spec not using SRTP and MIKEY is selected.  Thus\nthe answer will not contain any MIKEY parameter."}, "context_segments": [{"sid": 281, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf you think the discovery mechanism is not suitable for WebRTC usage then please make that comment to the TRAM WG list."}]}, {"current_segment": {"sid": 282, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\n1. user override\n2. app override\n3. auto discovery\n4. app fallback\n5. user fallback"}, "context_segments": []}, {"current_segment": {"sid": 5148, "labels": "InformationProviding", "content": "\n*  A transport spec using SRTP and MIKEY is selected but an\nerror is encountered in the MIKEY processing.  In that case\nan RTSP error response code of 466 \"Key Management Error\"\nSHALL be used.  A MIKEY message describing the error MAY be\nincluded."}, "context_segments": [{"sid": 282, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\n1. user override\n2. app override\n3. auto discovery\n4. app fallback\n5. user fallback"}]}, {"current_segment": {"sid": 283, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf any override is configured by the user or app, do not perform auto\ndiscovery, stop here."}, "context_segments": []}, {"current_segment": {"sid": 5149, "labels": "InformationProviding", "content": "\n*  A transport spec using SRTP and MIKEY is selected and a MIKEY\nresponse message can be created.  The server SHOULD use the\nsame certificate for TLS and in MIKEY to enable client to\nbind the two together.  If a different certificate is used it\nSHALL be included in the MIKEY message.  It is RECOMMENDED\nthat the envelope key cache type is set to 'Cache' and that a\nsingle envelope key is reused for all MIKEY messages to the\nclient.  That message is included in the MIKEY parameter part\nof the single selected transport specification in the SETUP\nresponse.  The server will set the SRTP parameters as\npreferred for this media stream within the supported range by\nthe client."}, "context_segments": [{"sid": 283, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf any override is configured by the user or app, do not perform auto\ndiscovery, stop here."}]}, {"current_segment": {"sid": 284, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf auto discovery fails, use a fallback configured by the app or user."}, "context_segments": []}, {"current_segment": {"sid": 5150, "labels": "InformationProviding", "content": "\n9.   The server transmits the SETUP response back to the client."}, "context_segments": [{"sid": 284, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIf auto discovery fails, use a fallback configured by the app or user."}]}, {"current_segment": {"sid": 285, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is a big difference between an override and a fallback, so both seem\nnecessary."}, "context_segments": []}, {"current_segment": {"sid": 5151, "labels": "InformationProviding", "content": "\n10.  The client receives the SETUP response and if the response code\nindicates a successful request it decodes the MIKEY message and\nestablish the security context from the parameters in the MIKEY\nresponse."}, "context_segments": [{"sid": 285, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is a big difference between an override and a fallback, so both seem\nnecessary."}]}, {"current_segment": {"sid": 286, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nObviously, we need some mechanism for 3 as Adam said, in case it needs to\nbe invoked."}, "context_segments": []}, {"current_segment": {"sid": 5152, "labels": "InformationProviding", "content": "\nIn the above method the client's certificate may be self-signed in\ncases where the client's identify is not necessary to establish and\nthe security goal is only to ensure that the RTSP signalling client\nis the same as the one receiving the SRTP security context."}, "context_segments": [{"sid": 286, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nObviously, we need some mechanism for 3 as Adam said, in case it needs to\nbe invoked."}]}, {"current_segment": {"sid": 287, "labels": "ExtensionOfPrevious,InformationProviding", "content": "+1 Also wondering why it is not appropriate?"}, "context_segments": []}, {"current_segment": {"sid": 5153, "labels": "InformationProviding", "content": "\nC.1.5.  SAVPF/UDP"}, "context_segments": [{"sid": 287, "labels": "ExtensionOfPrevious,InformationProviding", "content": "+1 Also wondering why it is not appropriate?"}]}, {"current_segment": {"sid": 288, "labels": "Agreement,InformationProviding", "content": "\nI tend to agree with Cullen's sentiment since as a end user I don't want to\nend up with service provider lock-in when using a TURN server."}, "context_segments": []}, {"current_segment": {"sid": 5154, "labels": "InformationProviding", "content": "\nThe RTP profile \"Extended Secure RTP Profile for RTCP-based Feedback\n(RTP/SAVPF)\" [RFC5124] is an RTP profile (SAVPF) that MAY be used in\nRTSP sessions using RTP.  All that is defined for AVP MUST also apply\nfor SAVPF."}, "context_segments": [{"sid": 288, "labels": "Agreement,InformationProviding", "content": "\nI tend to agree with Cullen's sentiment since as a end user I don't want to\nend up with service provider lock-in when using a TURN server."}]}, {"current_segment": {"sid": 289, "labels": "NeutralResponse,InformationProviding", "content": "\nSuch lock-ins might not be a bad option but It need not be enforced by\ndesign."}, "context_segments": []}, {"current_segment": {"sid": 5155, "labels": "InformationProviding", "content": "\nThe usage of SRTP requires that a security association is\nestablished.  The RECOMMENDED mechanism for establishing that\nsecurity association is to use MIKEY[RFC3830] with RTSP as defined in\nRFC 4567 [RFC4567]."}, "context_segments": [{"sid": 289, "labels": "NeutralResponse,InformationProviding", "content": "\nSuch lock-ins might not be a bad option but It need not be enforced by\ndesign."}]}, {"current_segment": {"sid": 290, "labels": "NeutralResponse,InformationProviding", "content": "\nOTOH  I am not sure how effective will be a typical not-so-technical\nend-user's decision making in choosing one turn server over the other."}, "context_segments": []}, {"current_segment": {"sid": 5156, "labels": "Social", "content": "Hi,"}, "context_segments": [{"sid": 290, "labels": "NeutralResponse,InformationProviding", "content": "\nOTOH  I am not sure how effective will be a typical not-so-technical\nend-user's decision making in choosing one turn server over the other."}]}, {"current_segment": {"sid": 291, "labels": "NeutralResponse,InformationProviding", "content": "\nBut having flexibility is not a bad idea , thus i feel the spec needs to\njust say the plausible options but mandating with MUST might not be what we\nneed here."}, "context_segments": []}, {"current_segment": {"sid": 5157, "labels": "InformationProviding", "content": "\nThe RTP profile \"Extended Secure RTP Profile for RTCP-based Feedback\n(RTP/SAVPF)\" [RFC5124] is an RTP profile (SAVPF) that MAY be used in\nRTSP sessions using RTP.  All that is defined for AVP MUST also apply\nfor SAVPF."}, "context_segments": [{"sid": 291, "labels": "NeutralResponse,InformationProviding", "content": "\nBut having flexibility is not a bad idea , thus i feel the spec needs to\njust say the plausible options but mandating with MUST might not be what we\nneed here."}]}, {"current_segment": {"sid": 292, "labels": "NeutralResponse,InformationProviding", "content": "\nI think you're falling into the trap of not distinguishing between \"MUST\nimplement\" and \"MUST use\".\n\nI'm not necessarily arguing that this is a \"MUST implement\" requirement\non browsers[1], but if we're going to figure out what makes sense, we\nneed to think about this properly.\n\n/a\n\n[1] I'd love to see this kind of discovery deployed universally, since I\nbelieve it contributes to the long-term success of WebRTC, but I'd like\nto hear other people's arguments for/against doing so before taking a\nconcrete position."}, "context_segments": [{"sid": 291, "labels": "NeutralResponse,InformationProviding", "content": "\nBut having flexibility is not a bad idea , thus i feel the spec needs to\njust say the plausible options but mandating with MUST might not be what we\nneed here."}, {"sid": 5157, "labels": "InformationProviding", "content": "\nThe RTP profile \"Extended Secure RTP Profile for RTCP-based Feedback\n(RTP/SAVPF)\" [RFC5124] is an RTP profile (SAVPF) that MAY be used in\nRTSP sessions using RTP.  All that is defined for AVP MUST also apply\nfor SAVPF."}]}, {"current_segment": {"sid": 293, "labels": "Agreement,InformationProviding", "content": "Adam, I think you are I are mostly saying the same thing. Things like there need to be incentives to deploy, the browser should tell the applications about available servers, and so on ..."}, "context_segments": []}, {"current_segment": {"sid": 5158, "labels": "InformationProviding", "content": "\nThe usage of SRTP, i.e. either SAVP or SAVPF profiles requires that a\nsecurity association is established.  The default mechanism for\nestablishing that security association is to use MIKEY[RFC3830] with\nRTSP as defined Appendix C.1.4.1."}, "context_segments": [{"sid": 293, "labels": "Agreement,InformationProviding", "content": "Adam, I think you are I are mostly saying the same thing. Things like there need to be incentives to deploy, the browser should tell the applications about available servers, and so on ..."}]}, {"current_segment": {"sid": 294, "labels": "NeutralResponse,InformationProviding", "content": "\nF20 in the requirements draft states:"}, "context_segments": []}, {"current_segment": {"sid": 5159, "labels": "Agreement,NeutralResponse,Thanking,InformationProviding,Social", "content": "Thank you, this works for me."}, "context_segments": [{"sid": 294, "labels": "NeutralResponse,InformationProviding", "content": "\nF20 in the requirements draft states:"}]}, {"current_segment": {"sid": 295, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nF20     The browser must support the use of STUN and TURN\nservers that are supplied by entities other than\nthe web application (i.e. the network provider)."}, "context_segments": []}, {"current_segment": {"sid": 5160, "labels": "Social", "content": "Hi Dan,"}, "context_segments": [{"sid": 295, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nF20     The browser must support the use of STUN and TURN\nservers that are supplied by entities other than\nthe web application (i.e. the network provider)."}]}, {"current_segment": {"sid": 296, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nSo I was thinking the need for specifying the discovery method would not be controversial."}, "context_segments": []}, {"current_segment": {"sid": 5161, "labels": "InformationProviding,Agreement,ProposeAction,Thanking,Social", "content": "\nThanks for your comment. I agree that using MIKEY is not the greatest\nfit for this and do require a certain amount of specification work that\ncurrently is missing. I am starting to lean in the direction that\ndefining DTLS-SRTP for this might be actually easier. What I see needed\nto be specified are:"}, "context_segments": [{"sid": 296, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nSo I was thinking the need for specifying the discovery method would not be controversial."}]}, {"current_segment": {"sid": 297, "labels": "NeutralResponse,InformationProviding", "content": "\nNote that draft-ietf-tram-turn-server-discovery only discovers TURN servers.  If we need to discover STUN servers, too -- and I think we do -- we need that document to expand its scope or a second document.\n\nI recently attended a talk where Matt Peterson presented Burning Man's network.  That network assigns RFC6598 addresses to each Burning Man \"camp\", and their ISP provides CGN'd addresses to Burning Man.  Each camp operates its own WiFi network, and we can all reasonably assume they are using typical consumer or SMB NAPT devices for those networks (e.g., D-Link, Linksys, Ubiquity, etc.).  To avoid tromboning camp-to-camp WebRTC traffic to their ISP's CGN, they would benefit from a STUN and a TURN server within the Burning Man network.  His presentation can be found at https://www.nanog.org/meetings/nanog62/agenda (PDF and video).\n\n-d\n"}, "context_segments": [{"sid": 296, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nSo I was thinking the need for specifying the discovery method would not be controversial."}, {"sid": 5161, "labels": "InformationProviding,Agreement,ProposeAction,Thanking,Social", "content": "\nThanks for your comment. I agree that using MIKEY is not the greatest\nfit for this and do require a certain amount of specification work that\ncurrently is missing. I am starting to lean in the direction that\ndefining DTLS-SRTP for this might be actually easier. What I see needed\nto be specified are:"}]}, {"current_segment": {"sid": 298, "labels": "NeutralResponse,InformationProviding", "content": "\nWe could say in https://tools.ietf.org/html/draft-ietf-rtcweb-transports-07#section-3.4 that WebRTC endpoints SHOULD make use of the address returned from a TURN server rather than doing a separate STUN binding.\n\nAndy"}, "context_segments": [{"sid": 296, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nSo I was thinking the need for specifying the discovery method would not be controversial."}, {"sid": 5161, "labels": "InformationProviding,Agreement,ProposeAction,Thanking,Social", "content": "\nThanks for your comment. I agree that using MIKEY is not the greatest\nfit for this and do require a certain amount of specification work that\ncurrently is missing. I am starting to lean in the direction that\ndefining DTLS-SRTP for this might be actually easier. What I see needed\nto be specified are:"}, {"sid": 297, "labels": "NeutralResponse,InformationProviding", "content": "\nNote that draft-ietf-tram-turn-server-discovery only discovers TURN servers.  If we need to discover STUN servers, too -- and I think we do -- we need that document to expand its scope or a second document.\n\nI recently attended a talk where Matt Peterson presented Burning Man's network.  That network assigns RFC6598 addresses to each Burning Man \"camp\", and their ISP provides CGN'd addresses to Burning Man.  Each camp operates its own WiFi network, and we can all reasonably assume they are using typical consumer or SMB NAPT devices for those networks (e.g., D-Link, Linksys, Ubiquity, etc.).  To avoid tromboning camp-to-camp WebRTC traffic to their ISP's CGN, they would benefit from a STUN and a TURN server within the Burning Man network.  His presentation can be found at https://www.nanog.org/meetings/nanog62/agenda (PDF and video).\n\n-d\n"}]}, {"current_segment": {"sid": 299, "labels": "NeutralResponse,InformationProviding", "content": "So, I think it's important that we have some way to encourage deployment\nof TURN servers both in the ISPs, and as part of firewalls (both\nresidential and enterprise). By putting TURN in paths that are already\ngoing to bear the traffic in question, the overall cost associated with\ncalls goes down, and call quality (latency, loss) improves."}, "context_segments": []}, {"current_segment": {"sid": 5162, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n- Use DTLS-SRTP when having negotiated that transport identifier."}, "context_segments": [{"sid": 299, "labels": "NeutralResponse,InformationProviding", "content": "So, I think it's important that we have some way to encourage deployment\nof TURN servers both in the ISPs, and as part of firewalls (both\nresidential and enterprise). By putting TURN in paths that are already\ngoing to bear the traffic in question, the overall cost associated with\ncalls goes down, and call quality (latency, loss) improves."}]}, {"current_segment": {"sid": 300, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nI'm sympathetic to the position that we don't want to give these\nentities specific hooks to force specific servers to be inserted into\nthe flow. We need to find a balance here: something that allows the\nrelevant entities to deploy and advertise such servers; something that\nallows WebRTC applications to discover and use them; and something that\nputs the ultimate decision in the hands of the users. Off the top of my\nhead, adding a browser API that allows applications to  to retrieve\nthese servers and elect to use them if it wants to would serve part of\nthe purpose; giving users a means by which they can instruct the browser\nnot to return such a list would serve the remainder."}, "context_segments": []}, {"current_segment": {"sid": 5163, "labels": "InformationProviding,ProposeAction", "content": "\n- Include a DER fingerprint of the certificates that is going to be used\nin the handshake, likely self signed on the client side in the transport\nspec. In line with the SDP TLS fingerprint in RFC 4572"}, "context_segments": [{"sid": 300, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nI'm sympathetic to the position that we don't want to give these\nentities specific hooks to force specific servers to be inserted into\nthe flow. We need to find a balance here: something that allows the\nrelevant entities to deploy and advertise such servers; something that\nallows WebRTC applications to discover and use them; and something that\nputs the ultimate decision in the hands of the users. Off the top of my\nhead, adding a browser API that allows applications to  to retrieve\nthese servers and elect to use them if it wants to would serve part of\nthe purpose; giving users a means by which they can instruct the browser\nnot to return such a list would serve the remainder."}]}, {"current_segment": {"sid": 301, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nBut that's all kind of orthogonal to the IETF issues: if we're going to\ndo *anything* in this space, we need the discovery mechanisms."}, "context_segments": []}, {"current_segment": {"sid": 5164, "labels": "InformationProviding,ProposeAction", "content": "\n- Require that one support all 4 DTLS SRTP protection profile present in\nRFC 5764. In other words SHA-1 80 or 32 bits integrity and AES 128 CM if\nencryption is used."}, "context_segments": [{"sid": 301, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nBut that's all kind of orthogonal to the IETF issues: if we're going to\ndo *anything* in this space, we need the discovery mechanisms."}]}, {"current_segment": {"sid": 302, "labels": "InformationProviding", "content": "The priority order that makes most sense to me is:"}, "context_segments": []}, {"current_segment": {"sid": 5165, "labels": "InformationProviding,ProposeAction", "content": "\n- Recommend that for media that are already confidentiality protected\nuse only authentication and integrity protection."}, "context_segments": [{"sid": 302, "labels": "InformationProviding", "content": "The priority order that makes most sense to me is:"}]}, {"current_segment": {"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}, "context_segments": []}, {"current_segment": {"sid": 5166, "labels": "Question,InformationSeeking", "content": "\nOther comments on this?"}, "context_segments": [{"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}]}, {"current_segment": {"sid": 304, "labels": "Question,Answer,InformationSeeking,InformationProviding", "content": "\nI am not aware of spec encouraging such implementations, and I don't know if everyone implementing WebRTC clients is going to be aware that TURN servers can provide useful information about the mapped IP address.  Perhaps it just needs a few sentences in an appropriate spec?\n\n-d\n"}, "context_segments": [{"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}, {"sid": 5166, "labels": "Question,InformationSeeking", "content": "\nOther comments on this?"}]}, {"current_segment": {"sid": 305, "labels": "Answer,InformationProviding", "content": "The information is buried deep down in the TURN RFC 5766 Section 6.2. It states that the allocation success response contains a XOR-MAPPED-ADDRESS attribute. (No use of SHOULD or MUST)."}, "context_segments": [{"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}, {"sid": 5166, "labels": "Question,InformationSeeking", "content": "\nOther comments on this?"}, {"sid": 304, "labels": "Question,Answer,InformationSeeking,InformationProviding", "content": "\nI am not aware of spec encouraging such implementations, and I don't know if everyone implementing WebRTC clients is going to be aware that TURN servers can provide useful information about the mapped IP address.  Perhaps it just needs a few sentences in an appropriate spec?\n\n-d\n"}]}, {"current_segment": {"sid": 5167, "labels": "Social", "content": "Hi,"}, "context_segments": [{"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}]}, {"current_segment": {"sid": 306, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIt also have a nice note:\n\"NOTE: The XOR-MAPPED-ADDRESS attribute is included in the response\nas a convenience to the client.  TURN itself does not make use of\nthis value, but clients running ICE can often need this value and\ncan thus avoid having to do an extra Binding transaction with some\nSTUN server to learn it.\u201d\n\nStating the above in some overview document will help people deploying WebRTC understand the requirements. The text in the TUNR RFC will probably only be read by TURN developers.\n\nMore importantly what is missing is text stating that deployed WebRTC turn servers should also send appropriate responses to Binding Requests; in other words act as a STUN server. Not sure about the appropriate spec, but it can go into TURNbis or some WebRTC overview document.\n\nP\u00e5l-Erik\n"}, "context_segments": [{"sid": 303, "labels": "Question,InformationSeeking", "content": "Given that TURN servers can be used for STUN, is there a need to\nautodiscover STUN-only servers?"}, {"sid": 5167, "labels": "Social", "content": "Hi,"}, {"sid": 304, "labels": "Question,Answer,InformationSeeking,InformationProviding", "content": "\nI am not aware of spec encouraging such implementations, and I don't know if everyone implementing WebRTC clients is going to be aware that TURN servers can provide useful information about the mapped IP address.  Perhaps it just needs a few sentences in an appropriate spec?\n\n-d\n"}]}, {"current_segment": {"sid": 307, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere are probably a bunch of ways to do this - for example all the arguments being made about TURN server same equally true of HTTP socks servers yet my SP can't force all my traffic via a HTTP proxy of it's choosing. So I don't think claiming the privacy problems  is orthogonal to the the IETF issues is really OK. The privacy issues are pretty important. As you suggest, I'm OK with browser tells applications about servers that are available but I would not be keen on browser automatically choosing to use those. That creates the type of incentives that it's fine for the SP to block traffic that does not go through the approved (and inherently quality reducing) TURN server."}, "context_segments": []}, {"current_segment": {"sid": 5168, "labels": "InformationProviding", "content": "\nThe usage of SRTP requires that a security association is\nestablished.  The default mechanism for establishing that security\nassociation is to use MIKEY[RFC3830] with RTSP as defined\nAppendix C.1.4.1."}, "context_segments": [{"sid": 307, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere are probably a bunch of ways to do this - for example all the arguments being made about TURN server same equally true of HTTP socks servers yet my SP can't force all my traffic via a HTTP proxy of it's choosing. So I don't think claiming the privacy problems  is orthogonal to the the IETF issues is really OK. The privacy issues are pretty important. As you suggest, I'm OK with browser tells applications about servers that are available but I would not be keen on browser automatically choosing to use those. That creates the type of incentives that it's fine for the SP to block traffic that does not go through the approved (and inherently quality reducing) TURN server."}]}, {"current_segment": {"sid": 308, "labels": "Agreement,InformationProviding", "content": "\nI support moving forward with draft-schwartz-rtcweb-return as it covers that use case."}, "context_segments": []}, {"current_segment": {"sid": 5169, "labels": "InformationProviding", "content": "\nI also included a paragraph in C.2.2:"}, "context_segments": [{"sid": 308, "labels": "Agreement,InformationProviding", "content": "\nI support moving forward with draft-schwartz-rtcweb-return as it covers that use case."}]}, {"current_segment": {"sid": 309, "labels": "NeutralResponse,InformationProviding", "content": "\nThe actual discovery mechanism is I assume something to discuss in TRAM."}, "context_segments": []}, {"current_segment": {"sid": 5170, "labels": "InformationProviding,ProposeAction", "content": "\nThere was a bit of an error in the C.1.5 part which should read:"}, "context_segments": [{"sid": 309, "labels": "NeutralResponse,InformationProviding", "content": "\nThe actual discovery mechanism is I assume something to discuss in TRAM."}]}, {"current_segment": {"sid": 310, "labels": "Question,NeutralResponse,InformationSeeking,InformationProviding", "content": "It seems that in the mobile case and many residential cases, doing that draft would allow a service provider to force all the traffic through a TURN server of the service providers choosing. Am I reading this correctly because I am pretty sure I would not be in favor of that."}, "context_segments": []}, {"current_segment": {"sid": 5171, "labels": "InformationProviding", "content": "\nC.1.5.  SAVPF/UDP"}, "context_segments": [{"sid": 310, "labels": "Question,NeutralResponse,InformationSeeking,InformationProviding", "content": "It seems that in the mobile case and many residential cases, doing that draft would allow a service provider to force all the traffic through a TURN server of the service providers choosing. Am I reading this correctly because I am pretty sure I would not be in favor of that."}]}, {"current_segment": {"sid": 311, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIt's also important to have solutions that makes business sense. Running TURN server is often sort of expensive from the bandwidth point of view so typically the TURN servers have a relation with the actual application to enable them - it's not just that someone is going to provide TURN servers for  for all webrtc applications in all networks. It's going to be a bit more complicated than that and that in helps drive some of the requirements for this. A way where applications can discover TURN servers that they are authorized to use if far more appealing to me."}, "context_segments": []}, {"current_segment": {"sid": 5172, "labels": "InformationProviding,StateDecision", "content": "\nI will send you some nits off-list."}, "context_segments": [{"sid": 311, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nIt's also important to have solutions that makes business sense. Running TURN server is often sort of expensive from the bandwidth point of view so typically the TURN servers have a relation with the actual application to enable them - it's not just that someone is going to provide TURN servers for  for all webrtc applications in all networks. It's going to be a bit more complicated than that and that in helps drive some of the requirements for this. A way where applications can discover TURN servers that they are authorized to use if far more appealing to me."}]}, {"current_segment": {"sid": 312, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe privacy implications and bandwidth usage implications are very different for STUN and TURN and thus I think the appropriate discovery mechanics for them are likely different. At least the requirements for the mechanisms are different even if there is one mechanism that meets all the requirements."}, "context_segments": []}, {"current_segment": {"sid": 5173, "labels": "InformationProviding", "content": "\n-d"}, "context_segments": [{"sid": 312, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe privacy implications and bandwidth usage implications are very different for STUN and TURN and thus I think the appropriate discovery mechanics for them are likely different. At least the requirements for the mechanisms are different even if there is one mechanism that meets all the requirements."}]}, {"current_segment": {"sid": 313, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nAs tempting as is sounds to leave the selection up to the user, I don't think that will work. I think it needs to be up to the application running on the browser with perhaps the possibility to be overridden by user."}, "context_segments": []}, {"current_segment": {"sid": 5174, "labels": "InformationProviding,StateDecision", "content": "\nI was planning on doing DTLS-SRTP key management but I realized that it\nwould take to much time and I was still uncertain that I would get it\ncorrect. Thus I did do what I could get local support with. A solution\nusing MIKEY. It is defined as the default for SAVP and SAVPF profiles.\nBut there is room to define alternatives."}, "context_segments": [{"sid": 313, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nAs tempting as is sounds to leave the selection up to the user, I don't think that will work. I think it needs to be up to the application running on the browser with perhaps the possibility to be overridden by user."}]}, {"current_segment": {"sid": 314, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is a lot of ways to do discovery  and some of them are already supported so I think we should figure out what we want then work on which of various discovery approaches help with that."}, "context_segments": []}, {"current_segment": {"sid": 5175, "labels": "InformationProviding", "content": "\nAlso I do expect DTLS to get a different transport spec identifier that\ninclude dtls due to the multiplexing in the transport port. So that\nshould easily be separated."}, "context_segments": [{"sid": 314, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is a lot of ways to do discovery  and some of them are already supported so I think we should figure out what we want then work on which of various discovery approaches help with that."}]}, {"current_segment": {"sid": 315, "labels": "Question,Agreement,InformationSeeking,InformationProviding", "content": "\nI agree we need to enable the use of TURN servers which provide the best user experience so enabling the use of TURN servers close to the clients makes sense.  At the same time there are some security considerations which we can provide some guidance on so would it make sense to do the following?"}, "context_segments": []}, {"current_segment": {"sid": 5176, "labels": "InformationProviding,ContextSetting", "content": "\nPlease see below for the suggested text in the different sections:"}, "context_segments": [{"sid": 315, "labels": "Question,Agreement,InformationSeeking,InformationProviding", "content": "\nI agree we need to enable the use of TURN servers which provide the best user experience so enabling the use of TURN servers close to the clients makes sense.  At the same time there are some security considerations which we can provide some guidance on so would it make sense to do the following?"}]}, {"current_segment": {"sid": 316, "labels": "ProposeAction,InformationProviding", "content": "\n1. Add a reference to draft-ietf-tram-turn-server-discovery in -transports- and make it a SHOULD/MAY/MUST implement (I prefer MUST but I know others probably don't)."}, "context_segments": []}, {"current_segment": {"sid": 5177, "labels": "InformationProviding", "content": "\n15.4.31. 466 Key Management Error"}, "context_segments": [{"sid": 316, "labels": "ProposeAction,InformationProviding", "content": "\n1. Add a reference to draft-ietf-tram-turn-server-discovery in -transports- and make it a SHOULD/MAY/MUST implement (I prefer MUST but I know others probably don't)."}]}, {"current_segment": {"sid": 317, "labels": "ProposeAction,InformationProviding", "content": "\n2. Add some text either inline or in the security considerations about the concerns and the need for user/app override."}, "context_segments": []}, {"current_segment": {"sid": 5178, "labels": "InformationProviding", "content": "\nThis indicates that there has been an error in a Key Management\nfunction used in conjunction with a request. For example usage of\nMIKEY according to Appendix C.1.4.1 may result in this error."}, "context_segments": [{"sid": 317, "labels": "ProposeAction,InformationProviding", "content": "\n2. Add some text either inline or in the security considerations about the concerns and the need for user/app override."}]}, {"current_segment": {"sid": 318, "labels": "NeutralResponse,InformationProviding", "content": "\nBy the way I am not sure we need the app override if we consider draft-schwartz-rtcweb-return part of the solution."}, "context_segments": []}, {"current_segment": {"sid": 5179, "labels": "InformationProviding", "content": "\n16.52 Transports"}, "context_segments": [{"sid": 318, "labels": "NeutralResponse,InformationProviding", "content": "\nBy the way I am not sure we need the app override if we consider draft-schwartz-rtcweb-return part of the solution."}]}, {"current_segment": {"sid": 5180, "labels": "InformationProviding", "content": "\nMIKEY:  This parameter is used in conjunction with transport\nspecifications that can utilize MIKEY for security context\nestablishment.  So far only the SRTP based RTP profiles SAVP\nand SAVPF can utilize MIKEY and this is defined in\nAppendix C.1.4.1.  This parameter can be included both in\nrequest and response messages.  The binary MIKEY message SHALL\nbe BASE64 [RFC4648] encoded before being included in the value\npart of the parameter."}, "context_segments": []}, {"current_segment": {"sid": 5181, "labels": "InformationProviding", "content": "\n20.2.3:"}, "context_segments": []}, {"current_segment": {"sid": 5182, "labels": "InformationProviding", "content": "\ntrns-parameter      = (SEMI ( \"unicast\" / \"multicast\" ))\n/ (SEMI \"interleaved\" EQUAL channel [ \"-\" channel ])\n/ (SEMI \"ttl\" EQUAL ttl)\n/ (SEMI \"layers\" EQUAL 1*DIGIT)\n/ (SEMI \"ssrc\" EQUAL ssrc *(SLASH ssrc))\n/ (SEMI \"mode\" EQUAL mode-spec)\n/ (SEMI \"dest_addr\" EQUAL addr-list)\n/ (SEMI \"src_addr\" EQUAL addr-list)\n/ (SEMI \"setup\" EQUAL contrans-setup)\n/ (SEMI \"connection\" EQUAL contrans-con)\n/ (SEMI \"RTCP-mux\")\n/ (SEMI \"MIKEY\" EQUAL MIKEY-Value)\n/ (SEMI trn-param-ext)"}, "context_segments": []}, {"current_segment": {"sid": 5183, "labels": "InformationProviding", "content": "\nMIKEY-Value         = base64"}, "context_segments": []}, {"current_segment": {"sid": 5184, "labels": "InformationProviding", "content": "\nC.1.4.  SAVP/UDP"}, "context_segments": []}, {"current_segment": {"sid": 5185, "labels": "InformationProviding,ProposeAction", "content": "\nThe RTP profile \"The Secure Real-time Transport Protocol (SRTP)\"\n[RFC3711] is an RTP profile (SAVP) that MAY be used in RTSP sessions\nusing RTP.  All that is defined for AVP MUST also apply for SAVP."}, "context_segments": []}, {"current_segment": {"sid": 5186, "labels": "InformationProviding", "content": "\nThe usage of SRTP requires that a security context is established.\nThe default key-management unless otherwise signalled shall be MIKEY\nin RSA-R mode as defined in Appendix C.1.4.1, and not according to\nthe procedure defined in \"Key Management Extensions for Session\nDescription Protocol (SDP) and Real Time Streaming Protocol (RTSP)\"\n[RFC4567].  The reason is that RFC 4567 sends the initial MIKEY\nmessage in SDP, thus both requiring the usage of the DESCRIBE method\nand forcing the server to keep state for client performing DESCRIBE\nin anticipation that they might require key management."}, "context_segments": []}, {"current_segment": {"sid": 5187, "labels": "InformationProviding", "content": "\nMIKEY is selected as default method for establishing security\nassociation within an RTSP session as it can be embedded in the RTSP\nmessages, while still ensuring confidentiality of content of the\nkeying material, even when using hop-by-hop TLS security for the RTSP\nmessages.  This method does also support pipelining of the RTSP\nmessages."}, "context_segments": []}, {"current_segment": {"sid": 319, "labels": "NeutralResponse,InformationProviding", "content": "\nI have some difficulties right now to judge what should be in and what\nshould be out (in terms of use cases). I think some more consensus calls\nmight be needed, but I need guidance from the chairs."}, "context_segments": []}, {"current_segment": {"sid": 7423, "labels": "InformationProviding,Question,Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "A new version was posted. Can I ask people to check if it fixed issues reported earlier? If chairs hear no objections, we will ship this version to IRSG for approval and publication."}, "context_segments": [{"sid": 319, "labels": "NeutralResponse,InformationProviding", "content": "\nI have some difficulties right now to judge what should be in and what\nshould be out (in terms of use cases). I think some more consensus calls\nmight be needed, but I need guidance from the chairs."}]}, {"current_segment": {"sid": 320, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThen there are some pieces that are discussed that are not really new\nuse cases, but things that could be added existing ones or as a separate\nsection. I keep a list of these at the *W3C* webrtc WiKi (because that\nis convenient to me, and to show that there are two stakeholders!):\n<http://www.w3.org/2011/04/webrtc/wiki/Main_Page#Use_cases_and_requirements>"}, "context_segments": []}, {"current_segment": {"sid": 7424, "labels": "Agreement,InformationProviding,Answer,Agreement", "content": "Yes, the Ed448ph test vector now looks reasonable, and is working in the test suite of my C/C++ implementation."}, "context_segments": [{"sid": 320, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThen there are some pieces that are discussed that are not really new\nuse cases, but things that could be added existing ones or as a separate\nsection. I keep a list of these at the *W3C* webrtc WiKi (because that\nis convenient to me, and to show that there are two stakeholders!):\n<http://www.w3.org/2011/04/webrtc/wiki/Main_Page#Use_cases_and_requirements>"}]}, {"current_segment": {"sid": 321, "labels": "ProposeAction,InformationProviding", "content": "\nPlease give me a heads up of the things I have missed to put in that list."}, "context_segments": []}, {"current_segment": {"sid": 7425, "labels": "Agreement,InformationProviding,NeutralResponse,ProposeAction", "content": "\nAll in all it looks good.  The security consideration on needing a good\nrandom number generator for doing batch validation is not something that I\nwould call obvious to the layman.  It would be nice to have a reference\nhere."}, "context_segments": [{"sid": 321, "labels": "ProposeAction,InformationProviding", "content": "\nPlease give me a heads up of the things I have missed to put in that list."}]}, {"current_segment": {"sid": 322, "labels": "NeutralResponse,InformationProviding", "content": "I like the idea of a general considerations section applicable to all use cases, and I think this proposed list would be a good start."}, "context_segments": []}, {"current_segment": {"sid": 7426, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nI am not going to fall on my sword to get one."}, "context_segments": [{"sid": 322, "labels": "NeutralResponse,InformationProviding", "content": "I like the idea of a general considerations section applicable to all use cases, and I think this proposed list would be a good start."}]}, {"current_segment": {"sid": 323, "labels": "ProposeAction,InformationProviding", "content": "\nI would suggest that some section for general requirements that aren't\nuse case specific is created and at least one such requirement is added."}, "context_segments": []}, {"current_segment": {"sid": 7427, "labels": "NeutralResponse,InformationProviding", "content": "Before this gets too late."}, "context_segments": [{"sid": 323, "labels": "ProposeAction,InformationProviding", "content": "\nI would suggest that some section for general requirements that aren't\nuse case specific is created and at least one such requirement is added."}]}, {"current_segment": {"sid": 324, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe requirement is the need to support IPv4 only, IPv6 only and\ndual-stack deployments as required by our charter. I think this should\nbe added into the use-case and requirement document for two reasons.\nFirst, that is located next to the other requirements, secondly because\nW3C has decided to use our document also, I think it is important that\nsuch a general requirement both on protocols and any address field in\nthe API handling both address families are covered."}, "context_segments": []}, {"current_segment": {"sid": 325, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nI think that it can also be instantiated within the specific use cases,\nsuch as:\n- Point to point call: One endpoint on IPv4, the other endpoint on IPv6\n- Multipoint call (with and without central server): One user on IPv4,\none user on IPv6\n\nThis is a limitation of the use-case-based model; it gets messy to\nshoehorn all the \"permutations\" of situations into a single set of use\ncases, without the list of use cases growing impossibly long or the use\ncases' description expanding into incomprehensibility.\n\nOn balance, I think having a \"considerations applicable to all\nscenarios\" section saying:\n\n- Clients can be on IPv4-only\n- Clients can be on IPv6-only\n- Clients can be on dual-stack\n- Clients can be on wideband (10s of Mbits/sec)\n- Clients can be on narrowband (10s to 100s of Kbits/sec)\n- Clients can be on variable-media-quality networks (wireless)\n- Clients can be on congested networks\n- Clients can be on firewalled networks with no UDP allowed\n- Clients can be on networks with cone NAT\n- Clients can be on networks with symmetric NAT\n\nmight be a good way to go forward.\n\nA particular query on v4/v6 interoperation: Should we make it a\nrequirement that dual-stack to IPv4 always use the IPv4 native path\nrather than a gateway functionality (and the converse for IPv6), or\nshould we just be silent about it?\nI think it may affect some tuning of the ICE address selection\nalgorithm, in particular if we encounter 6to4 addresses. There might be\nRFCs we can cite already.\n"}, "context_segments": [{"sid": 324, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe requirement is the need to support IPv4 only, IPv6 only and\ndual-stack deployments as required by our charter. I think this should\nbe added into the use-case and requirement document for two reasons.\nFirst, that is located next to the other requirements, secondly because\nW3C has decided to use our document also, I think it is important that\nsuch a general requirement both on protocols and any address field in\nthe API handling both address families are covered."}]}, {"current_segment": {"sid": 326, "labels": "Agreement,InformationProviding", "content": "I support adding those requirements."}, "context_segments": [{"sid": 324, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe requirement is the need to support IPv4 only, IPv6 only and\ndual-stack deployments as required by our charter. I think this should\nbe added into the use-case and requirement document for two reasons.\nFirst, that is located next to the other requirements, secondly because\nW3C has decided to use our document also, I think it is important that\nsuch a general requirement both on protocols and any address field in\nthe API handling both address families are covered."}]}, {"current_segment": {"sid": 327, "labels": "Agreement,InformationProviding", "content": "I agree"}, "context_segments": [{"sid": 324, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe requirement is the need to support IPv4 only, IPv6 only and\ndual-stack deployments as required by our charter. I think this should\nbe added into the use-case and requirement document for two reasons.\nFirst, that is located next to the other requirements, secondly because\nW3C has decided to use our document also, I think it is important that\nsuch a general requirement both on protocols and any address field in\nthe API handling both address families are covered."}]}, {"current_segment": {"sid": 328, "labels": "Agreement,InformationProviding", "content": "\n+1\nCb\n"}, "context_segments": [{"sid": 324, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe requirement is the need to support IPv4 only, IPv6 only and\ndual-stack deployments as required by our charter. I think this should\nbe added into the use-case and requirement document for two reasons.\nFirst, that is located next to the other requirements, secondly because\nW3C has decided to use our document also, I think it is important that\nsuch a general requirement both on protocols and any address field in\nthe API handling both address families are covered."}]}, {"current_segment": {"sid": 329, "labels": "InformationProviding", "content": "\nCatherine Meadows is next in the rotation."}, "context_segments": []}, {"current_segment": {"sid": 5188, "labels": "Social", "content": "Dear experts,"}, "context_segments": [{"sid": 329, "labels": "InformationProviding", "content": "\nCatherine Meadows is next in the rotation."}]}, {"current_segment": {"sid": 330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nFor telechat 2014-04-24"}, "context_segments": []}, {"current_segment": {"sid": 5189, "labels": "InformationProviding", "content": "Let me be more clear.\nI am developing the server side, and I want to be able to work with standard clients."}, "context_segments": [{"sid": 330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nFor telechat 2014-04-24"}]}, {"current_segment": {"sid": 331, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nReviewer                 LC end     Draft\nDan Harkins            T 2014-04-08 draft-ietf-idr-aigp-17\nCharlie Kaufman        T 2014-04-23 draft-ietf-precis-framework-15"}, "context_segments": []}, {"current_segment": {"sid": 5190, "labels": "InformationProviding", "content": "\nIn RFC2326 Appenix A, it is mentioned that on multicast session an explicit SETUP is not required.\nFor my understanding in that case PLAY is also not required since after the DESCRIBE reply the client got all it needs, and the clients don't actually control the stream."}, "context_segments": [{"sid": 331, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nReviewer                 LC end     Draft\nDan Harkins            T 2014-04-08 draft-ietf-idr-aigp-17\nCharlie Kaufman        T 2014-04-23 draft-ietf-precis-framework-15"}]}, {"current_segment": {"sid": 332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nLast calls and special requests:"}, "context_segments": []}, {"current_segment": {"sid": 5191, "labels": "InformationProviding,UnderstandingNegative,StateDecision", "content": "\nAll I am adding in my server side is to count PLAY/TEARDOWN commands to maintain a listener counter.\nI don't understand why this approach may not apply to the RFC2326 requirements."}, "context_segments": [{"sid": 332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nLast calls and special requests:"}]}, {"current_segment": {"sid": 5192, "labels": "InformationProviding,NeutralResponse", "content": "\nAhaa, that made things much clearer. You simply are using RTSP as media\nconfiguration deliver mechanism, like SAP or HTTP could do.\n\nThere is no support in RTSP today for your usage. The problem with RTSP\nin this use cases is that the SETUP and play/pause and teardown doesn't\naffect the media delivery. That makes it not clear cut that RTSP is the\nmost appropriate mechanism for simply saying, I am joining, I am\nleaving. I have not thought about how appropriate there would be to add\nsomething like this as an extension.\n"}, "context_segments": [{"sid": 332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nLast calls and special requests:"}, {"sid": 5191, "labels": "InformationProviding,UnderstandingNegative,StateDecision", "content": "\nAll I am adding in my server side is to count PLAY/TEARDOWN commands to maintain a listener counter.\nI don't understand why this approach may not apply to the RFC2326 requirements."}]}, {"current_segment": {"sid": 333, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07\nPhillip Hallam-Baker     2014-04-01 draft-ietf-trill-esadi-07\nSam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11\nJeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05\nJeffrey Hutzelman        2014-04-09 draft-ietf-mpls-psc-updates-03\nLeif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11\nScott Kelly              2014-04-18 draft-kivinen-ipsecme-ikev2-rfc5996bis-02"}, "context_segments": []}, {"current_segment": {"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}, "context_segments": [{"sid": 333, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07\nPhillip Hallam-Baker     2014-04-01 draft-ietf-trill-esadi-07\nSam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11\nJeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05\nJeffrey Hutzelman        2014-04-09 draft-ietf-mpls-psc-updates-03\nLeif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11\nScott Kelly              2014-04-18 draft-kivinen-ipsecme-ikev2-rfc5996bis-02"}]}, {"current_segment": {"sid": 5194, "labels": "Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "\nClearly using RTSP to retrieve the SDP with all the details it needs are\nworkable. However, here we get to the issues:\n\nA client that retrives a SDP with filled in c= lines to a multicast\naddress. What should they do? I don't think we have a clear standardized\nbehavior here. At least two alternatives exist:\n\n1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or\none downloaded the SDP in HTTP or received it over email.\n\n2. Use RTSP to perform SETUP on the media streams.\n\nIf one do 2 then one comes to the next question:\n\n3. How does I separate this case A) when I simply want to indicate that\nI am listing to a multicast group that I can't affect from B) where I\nwant to ask the server to please deliver the media to a multicast group\nof my choice. To me both A) and B) are valid use cases.\n\n4. What does it mean to perform PLAY on a multicast group where you will\nreceive media as soon as you perform the IGMP join?\n\n5. Are there well defined signaling to have the client understand that\nsending PAUSE will not do anything. Sure trying and failing will carry\nthat message, but unless the client is aware of these cases he might\nthink everything is broken and take error recovery actions.\n\nThe main point I like to make is that we clearly can support some use\ncases around multicast with RTSP. However, it needs to be written up in\nsuch a way that clients and servers are interoperable. I also think it\nwill need to be motivated correctly because otherwise client implementor\nwill not understand why they should care for a case where the client use\nSETUP as way of registering its listing to the multicast group.\n\nIf you can contribute this in draft specification text to RTSP 2.0 we\nclearly can have the WG consider to add it. I personally would like to\nsee it written up. But I have enough to work on the RTSP 2.0 core that I\ndon't going to branch out to cover this.\n"}, "context_segments": [{"sid": 333, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07\nPhillip Hallam-Baker     2014-04-01 draft-ietf-trill-esadi-07\nSam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11\nJeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05\nJeffrey Hutzelman        2014-04-09 draft-ietf-mpls-psc-updates-03\nLeif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11\nScott Kelly              2014-04-18 draft-kivinen-ipsecme-ikev2-rfc5996bis-02"}, {"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}]}, {"current_segment": {"sid": 5195, "labels": "InformationProviding,Answer,ProposeAction", "content": "\nYes.  Note, BTW, that case A) is what is already described as an\nexample in section 14.4 of RFC 2326 (RTSP 1.0); it's also the\n\"Multicast, server chooses address\" option described in section 1.6.\nSo there's really nothing weird or unusual about this.  Several\nexisting clients (including VLC and QuickTime Player) support this,\nand have done so for years.  It continues to baffle me that so many\npeople think that RTSP is used only for playing unicast streams, when\nthere both documentation and widespread use to the contrary.\n\nAs for how to do case B), once again RTSP 2326 gives an answer - in\nsection 12.39, where - in the description of the \"destination\"\nparameter, it says:\n\"The client may specify the multicast address with the\ndestination parameter.\"\nI.e., a client could specify its chosen multicast address using the\n\"destination\" parameter in the \"Transport:\" header in the RTSP\n\"SETUP\" request.  However, I don't know of any clients that support\nthis, and there are probably few (if any) servers that support it,\nbecause of the potential for denial-of-service attacks (an issue\nwhich is also described in section 12.39).\n"}, "context_segments": [{"sid": 333, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTobias Gondrom           2014-03-27 draft-ietf-pwe3-p2mp-pw-requirements-07\nPhillip Hallam-Baker     2014-04-01 draft-ietf-trill-esadi-07\nSam Hartman              2014-04-08 draft-ietf-l2vpn-vpls-ldp-mac-opt-11\nJeffrey Hutzelman      E 2013-11-21 draft-ietf-drinks-spp-protocol-over-soap-05\nJeffrey Hutzelman        2014-04-09 draft-ietf-mpls-psc-updates-03\nLeif Johansson           2014-04-15 draft-ietf-ccamp-rsvp-te-eth-oam-ext-11\nScott Kelly              2014-04-18 draft-kivinen-ipsecme-ikev2-rfc5996bis-02"}, {"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}, {"sid": 5194, "labels": "Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "\nClearly using RTSP to retrieve the SDP with all the details it needs are\nworkable. However, here we get to the issues:\n\nA client that retrives a SDP with filled in c= lines to a multicast\naddress. What should they do? I don't think we have a clear standardized\nbehavior here. At least two alternatives exist:\n\n1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or\none downloaded the SDP in HTTP or received it over email.\n\n2. Use RTSP to perform SETUP on the media streams.\n\nIf one do 2 then one comes to the next question:\n\n3. How does I separate this case A) when I simply want to indicate that\nI am listing to a multicast group that I can't affect from B) where I\nwant to ask the server to please deliver the media to a multicast group\nof my choice. To me both A) and B) are valid use cases.\n\n4. What does it mean to perform PLAY on a multicast group where you will\nreceive media as soon as you perform the IGMP join?\n\n5. Are there well defined signaling to have the client understand that\nsending PAUSE will not do anything. Sure trying and failing will carry\nthat message, but unless the client is aware of these cases he might\nthink everything is broken and take error recovery actions.\n\nThe main point I like to make is that we clearly can support some use\ncases around multicast with RTSP. However, it needs to be written up in\nsuch a way that clients and servers are interoperable. I also think it\nwill need to be motivated correctly because otherwise client implementor\nwill not understand why they should care for a case where the client use\nSETUP as way of registering its listing to the multicast group.\n\nIf you can contribute this in draft specification text to RTSP 2.0 we\nclearly can have the WG consider to add it. I personally would like to\nsee it written up. But I have enough to work on the RTSP 2.0 core that I\ndon't going to branch out to cover this.\n"}]}, {"current_segment": {"sid": 5196, "labels": "InformationProviding,Answer", "content": "\nIn this case the \"PLAY\" operation is really just a no-op (although\nthe client might still find some information in the \"PLAY\" response\nuseful - e.g., the \"Range:\" header could be used to indicate the\nstream's duration, in case such information was not already present\nin the SDP description (a \"t=...\" line)).\n"}, "context_segments": [{"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}, {"sid": 5194, "labels": "Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "\nClearly using RTSP to retrieve the SDP with all the details it needs are\nworkable. However, here we get to the issues:\n\nA client that retrives a SDP with filled in c= lines to a multicast\naddress. What should they do? I don't think we have a clear standardized\nbehavior here. At least two alternatives exist:\n\n1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or\none downloaded the SDP in HTTP or received it over email.\n\n2. Use RTSP to perform SETUP on the media streams.\n\nIf one do 2 then one comes to the next question:\n\n3. How does I separate this case A) when I simply want to indicate that\nI am listing to a multicast group that I can't affect from B) where I\nwant to ask the server to please deliver the media to a multicast group\nof my choice. To me both A) and B) are valid use cases.\n\n4. What does it mean to perform PLAY on a multicast group where you will\nreceive media as soon as you perform the IGMP join?\n\n5. Are there well defined signaling to have the client understand that\nsending PAUSE will not do anything. Sure trying and failing will carry\nthat message, but unless the client is aware of these cases he might\nthink everything is broken and take error recovery actions.\n\nThe main point I like to make is that we clearly can support some use\ncases around multicast with RTSP. However, it needs to be written up in\nsuch a way that clients and servers are interoperable. I also think it\nwill need to be motivated correctly because otherwise client implementor\nwill not understand why they should care for a case where the client use\nSETUP as way of registering its listing to the multicast group.\n\nIf you can contribute this in draft specification text to RTSP 2.0 we\nclearly can have the WG consider to add it. I personally would like to\nsee it written up. But I have enough to work on the RTSP 2.0 core that I\ndon't going to branch out to cover this.\n"}]}, {"current_segment": {"sid": 5197, "labels": "InformationProviding,Answer", "content": "\nYes, we clearly can, and in fact already do :-)\n"}, "context_segments": [{"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}, {"sid": 5194, "labels": "Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "\nClearly using RTSP to retrieve the SDP with all the details it needs are\nworkable. However, here we get to the issues:\n\nA client that retrives a SDP with filled in c= lines to a multicast\naddress. What should they do? I don't think we have a clear standardized\nbehavior here. At least two alternatives exist:\n\n1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or\none downloaded the SDP in HTTP or received it over email.\n\n2. Use RTSP to perform SETUP on the media streams.\n\nIf one do 2 then one comes to the next question:\n\n3. How does I separate this case A) when I simply want to indicate that\nI am listing to a multicast group that I can't affect from B) where I\nwant to ask the server to please deliver the media to a multicast group\nof my choice. To me both A) and B) are valid use cases.\n\n4. What does it mean to perform PLAY on a multicast group where you will\nreceive media as soon as you perform the IGMP join?\n\n5. Are there well defined signaling to have the client understand that\nsending PAUSE will not do anything. Sure trying and failing will carry\nthat message, but unless the client is aware of these cases he might\nthink everything is broken and take error recovery actions.\n\nThe main point I like to make is that we clearly can support some use\ncases around multicast with RTSP. However, it needs to be written up in\nsuch a way that clients and servers are interoperable. I also think it\nwill need to be motivated correctly because otherwise client implementor\nwill not understand why they should care for a case where the client use\nSETUP as way of registering its listing to the multicast group.\n\nIf you can contribute this in draft specification text to RTSP 2.0 we\nclearly can have the WG consider to add it. I personally would like to\nsee it written up. But I have enough to work on the RTSP 2.0 core that I\ndon't going to branch out to cover this.\n"}]}, {"current_segment": {"sid": 5198, "labels": "InformationProviding,Answer,Agreement", "content": "\nYes, I agree.\n"}, "context_segments": [{"sid": 5193, "labels": "Question,InformationProviding,ProposeAction,Thanking,InformationSeeking,Social", "content": "Thank you all for your comments.\nNow lets consider again the following scenario:\nOne media server which manage multiple live streams only - all the streams are sent by multicast to the local network.\nSeveral clients (e.g. VLC) who send DESCRIBE receive SDP with the multicast details.\nWhat is stopping them to receive the stream properly.( Even if they send SETUP and PLAY they will be answered with 200 ok)\nAll other controls are not relevant for this case (like PAUSE will not be supported -since this is live multicast)\nWhat is wrong with that? Don't forget that I control the server to do whatever I want."}, {"sid": 5194, "labels": "Question,InformationProviding,ProposeAction,StateDecision,InformationSeeking", "content": "\nClearly using RTSP to retrieve the SDP with all the details it needs are\nworkable. However, here we get to the issues:\n\nA client that retrives a SDP with filled in c= lines to a multicast\naddress. What should they do? I don't think we have a clear standardized\nbehavior here. At least two alternatives exist:\n\n1. Stop with RTSP and simple use the SDP, like RTSP describe was SAP or\none downloaded the SDP in HTTP or received it over email.\n\n2. Use RTSP to perform SETUP on the media streams.\n\nIf one do 2 then one comes to the next question:\n\n3. How does I separate this case A) when I simply want to indicate that\nI am listing to a multicast group that I can't affect from B) where I\nwant to ask the server to please deliver the media to a multicast group\nof my choice. To me both A) and B) are valid use cases.\n\n4. What does it mean to perform PLAY on a multicast group where you will\nreceive media as soon as you perform the IGMP join?\n\n5. Are there well defined signaling to have the client understand that\nsending PAUSE will not do anything. Sure trying and failing will carry\nthat message, but unless the client is aware of these cases he might\nthink everything is broken and take error recovery actions.\n\nThe main point I like to make is that we clearly can support some use\ncases around multicast with RTSP. However, it needs to be written up in\nsuch a way that clients and servers are interoperable. I also think it\nwill need to be motivated correctly because otherwise client implementor\nwill not understand why they should care for a case where the client use\nSETUP as way of registering its listing to the multicast group.\n\nIf you can contribute this in draft specification text to RTSP 2.0 we\nclearly can have the WG consider to add it. I personally would like to\nsee it written up. But I have enough to work on the RTSP 2.0 core that I\ndon't going to branch out to cover this.\n"}]}, {"current_segment": {"sid": 5199, "labels": "InformationProviding,ProposeAction", "content": "\nI am planning a sytems which had a great delay problem, so I want to\nreduce the set of RTSP commands needed to establish a connection.\nThe system sends multicast video but only if there at least one\nsubscriber."}, "context_segments": []}, {"current_segment": {"sid": 5200, "labels": "InformationProviding,StateDecision", "content": "\nMy approach is to use the DESCRIBE and TEARDOWN  commands only."}, "context_segments": []}, {"current_segment": {"sid": 5201, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nOn the first DESCRIBE, the server will initate a multicast session and\nreturn its connection details to the client (in SDP format).\nAny other DESCRIBE will receive the same sdp. All DESCRIBE commands\nincrement an internal counter by 1."}, "context_segments": []}, {"current_segment": {"sid": 5202, "labels": "InformationProviding", "content": "\nClient who wish to disconnect sends TEARDOWN. It will decrement the\ncounter by 1. If the counter is 0 the multicast will be stoppped."}, "context_segments": []}, {"current_segment": {"sid": 5203, "labels": "InformationProviding", "content": "\nAll other commands (SETUP,PLAY) will be supported as no-op for interop."}, "context_segments": []}, {"current_segment": {"sid": 5204, "labels": "Question,InformationSeeking", "content": "\nIs that possible by the standard point of view? Is such approach will be\nsupported by standard clients (QuickTime, VLC etc...)"}, "context_segments": []}, {"current_segment": {"sid": 5205, "labels": "Answer,InformationProviding", "content": "\nNot that I know.\n"}, "context_segments": [{"sid": 5204, "labels": "Question,InformationSeeking", "content": "\nIs that possible by the standard point of view? Is such approach will be\nsupported by standard clients (QuickTime, VLC etc...)"}]}, {"current_segment": {"sid": 5206, "labels": "Question,InformationProviding,InformationSeeking", "content": "\nVLC supports the (from Amino? IIRC) x-playNow SETUP undocumented proprietary\nextension on the server-side, but I would not recommend it. Besides, VLC does\nnot reference count multicast RTSP (it streams all the time, even if there's\nno client).\n"}, "context_segments": [{"sid": 5204, "labels": "Question,InformationSeeking", "content": "\nIs that possible by the standard point of view? Is such approach will be\nsupported by standard clients (QuickTime, VLC etc...)"}]}, {"current_segment": {"sid": 5207, "labels": "InformationProviding,ProposeAction", "content": "\nIn my opinion, the use case can be covered with RTSP - if you look at the\nthings a slightly different way (Please correct me if my view is wrong ;)"}, "context_segments": []}, {"current_segment": {"sid": 5208, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nFirst I'll summarize what I understood from the requirements:\nA server has a multicast stream that is available to anyone, all the time\n(the server is always in the state Playing). To save resources, the actual\nstream is sent only after the first client registers for it and stopped after\nthe last one left."}, "context_segments": []}, {"current_segment": {"sid": 5209, "labels": "Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nI'd have the DESCRIBE method not change the servers client count - it's\nsimply the question 'What do you have?'.\nInstead, the client count is a sort of state at the server, and I'd have this\nstate changed with a SETUP/TEARDOWN pair per client. When using timeouts with\nthe established session, the TEARDOWN can be omitted. The Transport header in\nthe SETUP would simply state \"RTP/AVP;multicast\" - all other parameters\ndefault to those from SDP."}, "context_segments": []}, {"current_segment": {"sid": 5210, "labels": "Social", "content": "Hello!"}, "context_segments": []}, {"current_segment": {"sid": 5211, "labels": "InformationProviding", "content": "\nAdmittedly, there is a difference to the RFC in the sense that after the\nsession has been 'created', it is already in the state Playing."}, "context_segments": []}, {"current_segment": {"sid": 5212, "labels": "InformationProviding,ProposeAction", "content": "\nThinking a bit further I'll take a different approach: There is already one\nRTSP 'session' - the one that the server created by itself (since it is\nalways in the state Playing). I'd then go ahead and require the clients to\nkeep this only one session alive (identifier is taken from SDP). The amount\nof hosts that is keeping this session alive is the amount of listeners. When\nthe server is the only one, it stops streaming.\nStill, this requires some handiwork on the client, but it looks like to be\ncovered by RTSP..."}, "context_segments": []}, {"current_segment": {"sid": 5213, "labels": "InformationProviding", "content": "\nSo far for my first post on this list :)"}, "context_segments": []}, {"current_segment": {"sid": 5214, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nIn RTSP 2.0 (draft-ietf-mmusic-rfc2326bis) there is the pipelined\nrequest that allows one to send all setup and the play request in a\nsingle sequence without waiting for any response.\n\nThis has also been defined by 3GPP for RTSP 1.0 in 3GPP TS 26.234.\n"}, "context_segments": []}, {"current_segment": {"sid": 5215, "labels": "InformationProviding,Disagreement,Thanking,Social", "content": "Thank you for your detaild answers, but I think you missed the point.\n\nI am using RTSP as media configuration delivery mechanism, as Magnus wrote, since I want to be able to use standard clients (QuickTime, VLC)\nI want than no changes should be done at the client side (otherwise I would developed a full proprietary protocol).\n\nMy goal is that a standard client will be able to communicate with my server and receive configuration as it would do with any other RTSP based media server."}, "context_segments": []}, {"current_segment": {"sid": 5216, "labels": "InformationProviding,ProposeAction", "content": "\nIf you put a multicast address in the c= line(s) and proper (non-zero) port\nnumbers in the m= line(s), VLC will try to setup the media using multicast,\nas normal (DESCRIBE, SETUP, PLAY...). I assume Quicktime does the same.\n"}, "context_segments": [{"sid": 5215, "labels": "InformationProviding,Disagreement,Thanking,Social", "content": "Thank you for your detaild answers, but I think you missed the point.\n\nI am using RTSP as media configuration delivery mechanism, as Magnus wrote, since I want to be able to use standard clients (QuickTime, VLC)\nI want than no changes should be done at the client side (otherwise I would developed a full proprietary protocol).\n\nMy goal is that a standard client will be able to communicate with my server and receive configuration as it would do with any other RTSP based media server."}]}, {"current_segment": {"sid": 5217, "labels": "Question,InformationSeeking", "content": "\nIn other words request that the streaming sever deliver media to the\nspecified multicast group?\n"}, "context_segments": [{"sid": 5215, "labels": "InformationProviding,Disagreement,Thanking,Social", "content": "Thank you for your detaild answers, but I think you missed the point.\n\nI am using RTSP as media configuration delivery mechanism, as Magnus wrote, since I want to be able to use standard clients (QuickTime, VLC)\nI want than no changes should be done at the client side (otherwise I would developed a full proprietary protocol).\n\nMy goal is that a standard client will be able to communicate with my server and receive configuration as it would do with any other RTSP based media server."}, {"sid": 5216, "labels": "InformationProviding,ProposeAction", "content": "\nIf you put a multicast address in the c= line(s) and proper (non-zero) port\nnumbers in the m= line(s), VLC will try to setup the media using multicast,\nas normal (DESCRIBE, SETUP, PLAY...). I assume Quicktime does the same.\n"}]}, {"current_segment": {"sid": 5218, "labels": "InformationProviding,Answer,ProposeAction", "content": "\nYes. At least, that's how I recall Live555 RTSP stack works (that being the\nRTSP client stack in VLC at the moment). In yet other words, the server\n(configuration) decides whether and to which group to send multicast to.\n\nIn theory, I suppose RTSP client could just try to setup multicast by default,\nand fallback to unicast... but that involve the client agent \"computing\"\nan \"appropriate\" multicast group, whatever that means. Sounds brittle :(\n"}, "context_segments": [{"sid": 5215, "labels": "InformationProviding,Disagreement,Thanking,Social", "content": "Thank you for your detaild answers, but I think you missed the point.\n\nI am using RTSP as media configuration delivery mechanism, as Magnus wrote, since I want to be able to use standard clients (QuickTime, VLC)\nI want than no changes should be done at the client side (otherwise I would developed a full proprietary protocol).\n\nMy goal is that a standard client will be able to communicate with my server and receive configuration as it would do with any other RTSP based media server."}, {"sid": 5216, "labels": "InformationProviding,ProposeAction", "content": "\nIf you put a multicast address in the c= line(s) and proper (non-zero) port\nnumbers in the m= line(s), VLC will try to setup the media using multicast,\nas normal (DESCRIBE, SETUP, PLAY...). I assume Quicktime does the same.\n"}, {"sid": 5217, "labels": "Question,InformationSeeking", "content": "\nIn other words request that the streaming sever deliver media to the\nspecified multicast group?\n"}]}, {"current_segment": {"sid": 5219, "labels": "Thanking,Social", "content": "\nThank you again.\nAmit.\n"}, "context_segments": []}, {"current_segment": {"sid": 5220, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nThe problem with your approach is that Describe is stateless. Only SETUP\ncreates RTSP sessions. Then there is the question of keep-alive.\nEverything in RTSP is built around the RTSP session concept. Thus unless\none creates an RTSP session Teardown doesn't have any context to operate on.\n\nSecondary, the problem with standard RTSP is that the meaning of RTSP\nSETUP with Transport header specifying a destination of a multicast\ngroup is ambiguous. As I see there are two alternative semantics:\n\n1. Please setup media delivery to this provided multicast group. Thus\nRTSP is the multicast group owners way of controlling media being\ndelivered to the media delivery channel.\n\n2. Bind a client to a pre-existing multicast delivery channel to allow\nfor extended unicast signalling around the provided media. Where the\nRTSP client gets a state but many operation are not allowed due to\nrestricted permissions for a regular client.\n\nI think it would be good to figure this out in the context of RTSP 2.0.\n"}, "context_segments": [{"sid": 5219, "labels": "Thanking,Social", "content": "\nThank you again.\nAmit.\n"}]}, {"current_segment": {"sid": 5221, "labels": "Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nHello!\n\nIn my opinion, the use case can be covered with RTSP - if you look at the\nthings a slightly different way (Please correct me if my view is wrong ;)\n\nFirst I'll summarize what I understood from the requirements:\nA server has a multicast stream that is available to anyone, all the time\n(the server is always in the state Playing). To save resources, the actual\nstream is sent only after the first client registers for it and stopped after\nthe last one left.\n\nI'd have the DESCRIBE method not change the servers client count - it's\nsimply the question 'What do you have?'.\nInstead, the client count is a sort of state at the server, and I'd have this\nstate changed with a SETUP/TEARDOWN pair per client. When using timeouts with\nthe established session, the TEARDOWN can be omitted. The Transport header in\nthe SETUP would simply state \"RTP/AVP;multicast\" - all other parameters\ndefault to those from SDP.\n\nAdmittedly, there is a difference to the RFC in the sense that after the\nsession has been 'created', it is already in the state Playing.\n\nThinking a bit further I'll take a different approach: There is already one\nRTSP 'session' - the one that the server created by itself (since it is\nalways in the state Playing). I'd then go ahead and require the clients to\nkeep this only one session alive (identifier is taken from SDP). The amount\nof hosts that is keeping this session alive is the amount of listeners. When\nthe server is the only one, it stops streaming.\nStill, this requires some handiwork on the client, but it looks like to be\ncovered by RTSP...\n"}, "context_segments": []}, {"current_segment": {"sid": 5222, "labels": "InformationProviding", "content": "\nSo far for my first post on this list :)"}, "context_segments": []}, {"current_segment": {"sid": 5223, "labels": "InformationProviding,Agreement", "content": "\nI agree with the ambiguity that SETUP method should cause in multicast scenarios.\nThis is exactly the case described in RFC2326 Appendix A (section A.1 and A.2) come to resolve:"}, "context_segments": []}, {"current_segment": {"sid": 5224, "labels": "InformationProviding,ContextSetting", "content": "\nAbout client state (A.1 pg. 76):\n\"If no explicit SETUP is required for the object (for example, it is available via a multicast group),\nstate begins at Ready. In this case, there are only two states, Ready and Playing. The client also\nchanges state from Playing/Recording to Ready when the end of the requested range is reached.\""}, "context_segments": []}, {"current_segment": {"sid": 5225, "labels": "InformationProviding", "content": "\nAbout server state (A.2 pg. 78):\n\"If no explicit SETUP is required for the object, the state starts at\nReady and there are only two states, Ready and Playing."}, "context_segments": []}, {"current_segment": {"sid": 5226, "labels": "InformationProviding", "content": "\nWhich means that session may be created by the server witout explicit SETUP command, (maybe by some internal configuration)."}, "context_segments": []}, {"current_segment": {"sid": 5227, "labels": "Question,InformationSeeking", "content": "\nDo you agree?"}, "context_segments": []}, {"current_segment": {"sid": 5228, "labels": "Question,Answer,ProposeAction,InformationSeeking,InformationProviding", "content": "\nI would say that this is just an example of one more case of RFC 2326\nbrokenness. Yes, re-reading the text that exist around session IDs\nindicate that the RTSP session could be generated in other ways than\nusing SETUP. However, how this is accomplished or how one actually can\nuse that state isn't specified. There is one hint that dynamic RTSP URIs\ncould be used to indicate a specific session. But, nothing is specified\nthat makes this implementable. Open issues that I directly see are:\n\n- How to go from a URI to a session ID header?\n\n- In which methods that one can use this and how the operations affect\nthe state machine?\n\n- What happens to the session identified when one does Teardown?\n\nI would also like to point out that using the same session ID for\nmultiple clients are not allowed according to this text in section 12.37:\n\nNote that a session identifier identifies a RTSP session across\ntransport sessions or connections. Control messages for more than one\nRTSP URL may be sent within a single RTSP session. Hence, it is\npossible that clients use the same session for controlling many\nstreams constituting a presentation, as long as all the streams come\nfrom the same server. (See example in Section 14). However, multiple\n\"user\" sessions for the same URL from the same client MUST use\ndifferent session identifiers.\n\nSo I would still say that there only exist an embryo to potential\nsolutions for what you want to do. And if you expect RTSP 1.0 clients to\ndo something like this then I wouldn't expect interoperability. I would\nbe surprised if any has the functionality.\n\nAs I see it the right way forward would be to discuss this in the\ncontext of changes and extensions to RTSP 2.0 that would allow what you\nwant to be worked into a coherent behavior.\n"}, "context_segments": [{"sid": 5227, "labels": "Question,InformationSeeking", "content": "\nDo you agree?"}]}, {"current_segment": {"sid": 5229, "labels": "InformationProviding,Answer", "content": "\nI'd have read this paragraph (and others) that controlling one stream from\nseveral different clients is indeed possible - especially with the first\nsentence.;\nFor example, in RFC 2326, 1.1 'Invitation of a media server to a conference':\n\"... Several parties in the conference may take turns 'pushing the remote\ncontrol buttons' \".\nSo far I have interpreted RTSP to be a control mechanism that allows sharing\nof the controls [for shared resources, such as multicast streams, where this\nmakes sense].\nHow the session identifier is distributed was out of the scope, but that I'd\nhave SDP considered for.\n\nI interpreted the last sentence of your quoted paragraph with respect to\nmultiple dedicated streams. When starting a RealPlayer twice for example on\nthe same host, requesting the same file will generate two streams (two\nsessions).\n\nThis was the base of my second idea for our use case to have all clients keep\nalive the one session the server controls; and the session identifier I'd\nhave taken from SDP (for example the 's' field).\n"}, "context_segments": [{"sid": 5227, "labels": "Question,InformationSeeking", "content": "\nDo you agree?"}, {"sid": 5228, "labels": "Question,Answer,ProposeAction,InformationSeeking,InformationProviding", "content": "\nI would say that this is just an example of one more case of RFC 2326\nbrokenness. Yes, re-reading the text that exist around session IDs\nindicate that the RTSP session could be generated in other ways than\nusing SETUP. However, how this is accomplished or how one actually can\nuse that state isn't specified. There is one hint that dynamic RTSP URIs\ncould be used to indicate a specific session. But, nothing is specified\nthat makes this implementable. Open issues that I directly see are:\n\n- How to go from a URI to a session ID header?\n\n- In which methods that one can use this and how the operations affect\nthe state machine?\n\n- What happens to the session identified when one does Teardown?\n\nI would also like to point out that using the same session ID for\nmultiple clients are not allowed according to this text in section 12.37:\n\nNote that a session identifier identifies a RTSP session across\ntransport sessions or connections. Control messages for more than one\nRTSP URL may be sent within a single RTSP session. Hence, it is\npossible that clients use the same session for controlling many\nstreams constituting a presentation, as long as all the streams come\nfrom the same server. (See example in Section 14). However, multiple\n\"user\" sessions for the same URL from the same client MUST use\ndifferent session identifiers.\n\nSo I would still say that there only exist an embryo to potential\nsolutions for what you want to do. And if you expect RTSP 1.0 clients to\ndo something like this then I wouldn't expect interoperability. I would\nbe surprised if any has the functionality.\n\nAs I see it the right way forward would be to discuss this in the\ncontext of changes and extensions to RTSP 2.0 that would allow what you\nwant to be worked into a coherent behavior.\n"}]}, {"current_segment": {"sid": 5230, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nWell, then this is one more example of the inconsistencies of RFC 2326.\n\nHaving multiple client instances control the same session may be of\ninterest, but it is not a thought through solution as one needs to\nensure consistent handling of the RTSP state and provide a working\nsecurity model for this. Something that I would claim is not in place in\neither RFC 2326 or in the RTSP 2.0 draft.\n\nIf you go read RTSP 2.0 it says in section 3.4 (version 18):\n\nIf one has an established conference or group session, it is possible\nto have an RTSP server distribute media to the whole group.\nTransmission to the group is simplest when controlled by a single\nparticipant or leader of the conference.  Shared control might be\npossible, but would require further investigation and possibly\nextensions.\n"}, "context_segments": [{"sid": 5227, "labels": "Question,InformationSeeking", "content": "\nDo you agree?"}, {"sid": 5228, "labels": "Question,Answer,ProposeAction,InformationSeeking,InformationProviding", "content": "\nI would say that this is just an example of one more case of RFC 2326\nbrokenness. Yes, re-reading the text that exist around session IDs\nindicate that the RTSP session could be generated in other ways than\nusing SETUP. However, how this is accomplished or how one actually can\nuse that state isn't specified. There is one hint that dynamic RTSP URIs\ncould be used to indicate a specific session. But, nothing is specified\nthat makes this implementable. Open issues that I directly see are:\n\n- How to go from a URI to a session ID header?\n\n- In which methods that one can use this and how the operations affect\nthe state machine?\n\n- What happens to the session identified when one does Teardown?\n\nI would also like to point out that using the same session ID for\nmultiple clients are not allowed according to this text in section 12.37:\n\nNote that a session identifier identifies a RTSP session across\ntransport sessions or connections. Control messages for more than one\nRTSP URL may be sent within a single RTSP session. Hence, it is\npossible that clients use the same session for controlling many\nstreams constituting a presentation, as long as all the streams come\nfrom the same server. (See example in Section 14). However, multiple\n\"user\" sessions for the same URL from the same client MUST use\ndifferent session identifiers.\n\nSo I would still say that there only exist an embryo to potential\nsolutions for what you want to do. And if you expect RTSP 1.0 clients to\ndo something like this then I wouldn't expect interoperability. I would\nbe surprised if any has the functionality.\n\nAs I see it the right way forward would be to discuss this in the\ncontext of changes and extensions to RTSP 2.0 that would allow what you\nwant to be worked into a coherent behavior.\n"}, {"sid": 5229, "labels": "InformationProviding,Answer", "content": "\nI'd have read this paragraph (and others) that controlling one stream from\nseveral different clients is indeed possible - especially with the first\nsentence.;\nFor example, in RFC 2326, 1.1 'Invitation of a media server to a conference':\n\"... Several parties in the conference may take turns 'pushing the remote\ncontrol buttons' \".\nSo far I have interpreted RTSP to be a control mechanism that allows sharing\nof the controls [for shared resources, such as multicast streams, where this\nmakes sense].\nHow the session identifier is distributed was out of the scope, but that I'd\nhave SDP considered for.\n\nI interpreted the last sentence of your quoted paragraph with respect to\nmultiple dedicated streams. When starting a RealPlayer twice for example on\nthe same host, requesting the same file will generate two streams (two\nsessions).\n\nThis was the base of my second idea for our use case to have all clients keep\nalive the one session the server controls; and the session identifier I'd\nhave taken from SDP (for example the 's' field).\n"}]}, {"current_segment": {"sid": 5231, "labels": "InformationProviding,UnderstandingNegative", "content": "Hello!\n\nI have to point out one paragraph since it puzzles me a bit - if not even\nthrows over my view of RTSP so far :)\n"}, "context_segments": []}, {"current_segment": {"sid": 5232, "labels": "InformationProviding", "content": "Magnus,"}, "context_segments": []}, {"current_segment": {"sid": 3434, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,ContextSetting,ProposeAction,InformationSeeking", "content": "I think Connection ID is an important enabler for end-to-end security with (D)TLS. There seems to be important use cases for connection ID in TLS as well, see https://www.ietf.org/mailman/listinfo/atlas. At the Monday afternoon TLS session, it was stated that Connection ID in TLS was unemployable in the wild due to middleboxes. Couldn't that be solved by placing the cid field after the length field? E.g."}, "context_segments": []}, {"current_segment": {"sid": 6634, "labels": "InformationProviding,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF."}, "context_segments": [{"sid": 3434, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,ContextSetting,ProposeAction,InformationSeeking", "content": "I think Connection ID is an important enabler for end-to-end security with (D)TLS. There seems to be important use cases for connection ID in TLS as well, see https://www.ietf.org/mailman/listinfo/atlas. At the Monday afternoon TLS session, it was stated that Connection ID in TLS was unemployable in the wild due to middleboxes. Couldn't that be solved by placing the cid field after the length field? E.g."}]}, {"current_segment": {"sid": 3435, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse", "content": "The issue is that the \"TLSCiphertext.length\" is the same field as\nthe \"uint16 length\", so you are saying that this field has the value\nof \"cid_length plus itself\", which is impossible in integers modulo\n[a value larger than cid_length].  In the \"formal\" grammar, you'd\nneed to define a new field."}, "context_segments": []}, {"current_segment": {"sid": 6635, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nTitle           : Real Time Streaming Protocol 2.0 (RTSP)\nAuthor(s)       : H. Schulzrinne, et al.\nFilename        : draft-ietf-mmusic-rfc2326bis-21.txt\nPages           : 283\nDate            : 2009-06-19"}, "context_segments": [{"sid": 3435, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse", "content": "The issue is that the \"TLSCiphertext.length\" is the same field as\nthe \"uint16 length\", so you are saying that this field has the value\nof \"cid_length plus itself\", which is impossible in integers modulo\n[a value larger than cid_length].  In the \"formal\" grammar, you'd\nneed to define a new field."}]}, {"current_segment": {"sid": 3436, "labels": "InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious", "content": "\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque cid[cid_length];               // New field\nopaque encrypted_record[TLSCiphertext.length];\n} TLSCiphertext;"}, "context_segments": []}, {"current_segment": {"sid": 6636, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 which is defined in RFC 2326."}, "context_segments": [{"sid": 3436, "labels": "InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious", "content": "\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque cid[cid_length];               // New field\nopaque encrypted_record[TLSCiphertext.length];\n} TLSCiphertext;"}]}, {"current_segment": {"sid": 3437, "labels": "InformationProviding,ContextSetting,ProposeAction,NeutralResponse,ProposeAction", "content": "\nThere is no field called encrypted_record.length. TLSCiphertext.length refers to the length field in the TLSCiphertext struct rather than the length of the TLSCiphertext itself (which is a few bytes longer). See Section 3, Presentation Language, for the precise definitions.\n\nSteve\n"}, "context_segments": [{"sid": 3436, "labels": "InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious", "content": "\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque cid[cid_length];               // New field\nopaque encrypted_record[TLSCiphertext.length];\n} TLSCiphertext;"}, {"sid": 6636, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 which is defined in RFC 2326."}]}, {"current_segment": {"sid": 3438, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious", "content": "\nlength  The sum of cid_length and TLSCiphertext.length"}, "context_segments": []}, {"current_segment": {"sid": 6637, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, "context_segments": [{"sid": 3438, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious", "content": "\nlength  The sum of cid_length and TLSCiphertext.length"}]}, {"current_segment": {"sid": 3439, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "\nThis defines length in terms of itself since length is TLSCiphertext.length.\n"}, "context_segments": [{"sid": 3438, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious", "content": "\nlength  The sum of cid_length and TLSCiphertext.length"}, {"sid": 6637, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}]}, {"current_segment": {"sid": 3440, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious", "content": "\n(Also draft-ietf-tls-dtls-connection-id-00 says obsoletes RFC6347, should be updates)."}, "context_segments": []}, {"current_segment": {"sid": 6638, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-21.txt"}, "context_segments": [{"sid": 3440, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious", "content": "\n(Also draft-ietf-tls-dtls-connection-id-00 says obsoletes RFC6347, should be updates)."}]}, {"current_segment": {"sid": 3441, "labels": "ClarificationElicitation,InformationProviding,Agreement,ContextSetting,ProposeAction,Question,Agreement,NeutralResponse,InformationSeeking", "content": "Correct, I just copied pasted the length of the arrays, should be length = cid_length + encrypted_record.length.\n\nThe example was taken from draft-ietf-tls-tls13-27. If I understand correctly, It seems like the same circular definition is done there as well....\n\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque encrypted_record[TLSCiphertext.length];\n} TLSCiphertext;\n\nShouldn't this be...\n\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque encrypted_record[encrypted_record.length];\n} TLSCiphertext;\n\nDoes this mean the"}, "context_segments": []}, {"current_segment": {"sid": 6639, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": [{"sid": 3441, "labels": "ClarificationElicitation,InformationProviding,Agreement,ContextSetting,ProposeAction,Question,Agreement,NeutralResponse,InformationSeeking", "content": "Correct, I just copied pasted the length of the arrays, should be length = cid_length + encrypted_record.length.\n\nThe example was taken from draft-ietf-tls-tls13-27. If I understand correctly, It seems like the same circular definition is done there as well....\n\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque encrypted_record[TLSCiphertext.length];\n} TLSCiphertext;\n\nShouldn't this be...\n\nstruct {\nContentType opaque_type = application_data; /* 23 */\nProtocolVersion legacy_record_version = 0x0303; /* TLS v1.2 */\nuint16 length;\nopaque encrypted_record[encrypted_record.length];\n} TLSCiphertext;\n\nDoes this mean the"}]}, {"current_segment": {"sid": 6640, "labels": "InformationProviding,ContextSetting,ExtensionOfPrevious", "content": "\nBelow is the data which will enable a MIME compliant mail reader\nimplementation to automatically retrieve the ASCII version of the\nInternet-Draft."}, "context_segments": []}, {"current_segment": {"sid": 6641, "labels": "InformationProviding,Agreement,Thanking,Agreement,Thanking,Social", "content": "Hi Magnus,\nThanks for your prompt response. It looks good."}, "context_segments": []}, {"current_segment": {"sid": 6642, "labels": "InformationProviding,ProposeAction,InformationProviding", "content": "Hi,\n\nIt seems that the biggest change is 'DVD Player remote control' because\nI always introduced people RTSP as a TV remote control protocol.\n\nAnd I would like to share some my comments, originally written for my\nbetter understanding, if you don't mind.\n"}, "context_segments": []}, {"current_segment": {"sid": 6643, "labels": "InformationProviding,ExtensionOfPrevious", "content": "media delivery requested using PLAY, it sends a PLAY_NOTIFY request to\nthe client.\n[jh]The right intention looks \"When the server wants to notify the\nclient about the end of the media delivery, it can send a\nPLAY_NOTIFY...\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6644, "labels": "Agreement,StateDecision,Agreement,InformationProviding", "content": "\nYes, I changed this to:\n\nWhen the server want to notify the client about the completion of the\nmedia delivery, it sends a PLAY_NOTIFY request to the client.\n"}, "context_segments": [{"sid": 6643, "labels": "InformationProviding,ExtensionOfPrevious", "content": "media delivery requested using PLAY, it sends a PLAY_NOTIFY request to\nthe client.\n[jh]The right intention looks \"When the server wants to notify the\nclient about the end of the media delivery, it can send a\nPLAY_NOTIFY...\"\n"}]}, {"current_segment": {"sid": 6645, "labels": "Question,InformationProviding,Question,ExtensionOfPrevious,InformationSeeking", "content": "RTP sequence numbers for each stream, and thus enables correct handling\nof the buffer drainage at the end.\n[jh] How about this? \"The PLAY_NOTIFY request includes the last RTP\nsequence number for each stream to help the player to empty the buffer\nsmoothly.\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6646, "labels": "Answer,Agreement,StateDecision,Agreement,InformationProviding", "content": "\nYes, reworded it somewhat:\n\nThe PLAY_NOTIFY request includes information about the stream end,\nincluding the last RTP sequence number for each stream, thus enabling\nthe client to empty the buffer smoothly.\n"}, "context_segments": [{"sid": 6645, "labels": "Question,InformationProviding,Question,ExtensionOfPrevious,InformationSeeking", "content": "RTP sequence numbers for each stream, and thus enables correct handling\nof the buffer drainage at the end.\n[jh] How about this? \"The PLAY_NOTIFY request includes the last RTP\nsequence number for each stream to help the player to empty the buffer\nsmoothly.\"\n"}]}, {"current_segment": {"sid": 6647, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page18) When the server is notifying the client about the end of the"}, "context_segments": []}, {"current_segment": {"sid": 6648, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "is displayed per second, but...\n[jh] This part could be enhanced like below. Correct me if I am wrong.\nSome 'this' are ambiguous to me.\n\n\"For video, it is possible to manipulate the framerate on the fly,\nalthough the randering capabilities are often limited to certain frame\nrates. And the allowed contents bitrate also limits the modification of\nthe framerate. Therefore, basically fast forward feature could be\nimplemented in this regards in which some subset of the frames from the\noriginal content could be picked up. However, the result of this way\nwould be different from the video encoding methods.\n\nDue to the media characteristics, possible scale ratios is commonly\nlimited. To signal right scale ratio information, RTSP has a way of\nindicating the supported Scale ratios for the content. To support\naggregated or dynamic content, where the scale may change during the\nsession and this change is dependent on the location within the content,\na mechanism for updating the media properties and the currently used\nscale factor exists.\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6649, "labels": "Question,InformationProviding,Question,NeutralResponse,InformationSeeking", "content": "\nI want to keep this reasonably non-specific when it comes to the codec.\nIs this better?\n\nFor video is possible to manipulate the frame rate, although the\nrendering capabilities are often limited to certain frame rates. Also\nthe allowed bit-rates in decoding, the structured used in the encoding\nand its dependency between frames and other capabilities of the\nrendering device limits the possible manipulations.\n\nDue to the media restrictions, the possible scale values are commonly\nrestricted to a limited set of possible scale ratios. To enable the\nclients to select from the possible scale values, RTSP can signal the\nsupported Scale ratios for the content. To support aggregated or dynamic\ncontent, where this may change during the ongoing session and dependent\non the location within the content, a mechanism for updating the media\nproperties and the current used scale factor exist.\n"}, "context_segments": [{"sid": 6648, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "is displayed per second, but...\n[jh] This part could be enhanced like below. Correct me if I am wrong.\nSome 'this' are ambiguous to me.\n\n\"For video, it is possible to manipulate the framerate on the fly,\nalthough the randering capabilities are often limited to certain frame\nrates. And the allowed contents bitrate also limits the modification of\nthe framerate. Therefore, basically fast forward feature could be\nimplemented in this regards in which some subset of the frames from the\noriginal content could be picked up. However, the result of this way\nwould be different from the video encoding methods.\n\nDue to the media characteristics, possible scale ratios is commonly\nlimited. To signal right scale ratio information, RTSP has a way of\nindicating the supported Scale ratios for the content. To support\naggregated or dynamic content, where the scale may change during the\nsession and this change is dependent on the location within the content,\na mechanism for updating the media properties and the currently used\nscale factor exists.\"\n"}]}, {"current_segment": {"sid": 6650, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "[jh] I think this parts overally should be re-reviewed. Or I would\nrevisit here again later.\n"}, "context_segments": []}, {"current_segment": {"sid": 6651, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nWell, it is a lot of new text. When it comes to this I do need feedback\nwhat is problematic with the text. Writing about speed and scale is\nproblematic.\n"}, "context_segments": [{"sid": 6650, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "[jh] I think this parts overally should be re-reviewed. Or I would\nrevisit here again later.\n"}]}, {"current_segment": {"sid": 6652, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "\nMessage Body:  The information transferred as the payload of a\nmessage.  A message body consists of meta-information in the\n(snip)\n[jh] the expression, \"either a request or a response\" should be in the\nmessage body. It helps RTSP implementers to consider message body even\nin the request which is not common in basic operation. Therefore, rather\nthe original sentence in draft20 looks better. And I think \"The\ninformation transferred as the payload of a request or response.\" could\nbe rephrased to \"The contents of the message without the message header\nin either RTSP request or response message.\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6653, "labels": "InformationProviding,Disagreement,NeutralResponse", "content": "\nI have clarified that this is either a request or a response. But your\nsuggested phrasing is a the invert that isn't fully true as there can be\nother parts in a message. I try to write what it is.\n"}, "context_segments": [{"sid": 6652, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "\nMessage Body:  The information transferred as the payload of a\nmessage.  A message body consists of meta-information in the\n(snip)\n[jh] the expression, \"either a request or a response\" should be in the\nmessage body. It helps RTSP implementers to consider message body even\nin the request which is not common in basic operation. Therefore, rather\nthe original sentence in draft20 looks better. And I think \"The\ninformation transferred as the payload of a request or response.\" could\nbe rephrased to \"The contents of the message without the message header\nin either RTSP request or response message.\"\n"}]}, {"current_segment": {"sid": 6654, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "respond if the session is in playing state with the Range header\nfilled in with the current playback point and with the corresponding\nRTP-Info values.\n[jh] Original one looks more clear. It would be enhanced like below,\nthough.\n\"The server SHALL respond if the session is in playing state. Then, that\nresponse MUST have RTP-Info value which is corresponding to the given\nRange value.\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6655, "labels": "Question,InformationProviding,Question,NeutralResponse,InformationSeeking", "content": "\nOkay, is this clearer?\n\nThe RTP-Info header and the Range header MAY be included in a\nGET_PARAMETER request from client to server without any values to\nrequest the current playback point and corresponding.RTP synchronization\ninformation. When the RTP-Info header is included in a Request also the\nRange header MUST be included (Note, Range header only MAY be used). The\nserver respons SHALL include both the Range header and the RTP-Info\nheader. If the session is in playing state, then the value of the Range\nheader SHALL be filled in with the current playback point and with the\ncorresponding RTP-Info values. If the server is another state, no values\nare included in the RTP-Info header.\n"}, "context_segments": [{"sid": 6654, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "respond if the session is in playing state with the Range header\nfilled in with the current playback point and with the corresponding\nRTP-Info values.\n[jh] Original one looks more clear. It would be enhanced like below,\nthough.\n\"The server SHALL respond if the session is in playing state. Then, that\nresponse MUST have RTP-Info value which is corresponding to the given\nRange value.\"\n"}]}, {"current_segment": {"sid": 6656, "labels": "InformationProviding,ExtensionOfPrevious", "content": "S->C: PLAY_NOTIFY rtsp://example.com/fizzle RTSP/2.0\nCSeq: 45\nNotify-Reason: end-of-stream\nRequest-Status: cseq=4 status=200 reason=\"OK\"\nRange: npt=-15\nRTP-Info:url=\"rtsp://example.com/fizzle/audiotrack\"\nssrc=0D12F123:seq=49;rtptime=39200\nSession: abcdefgh\n\nC->S: RTSP/2.0 200 OK\nCSeq: 854\nUser-Agent: PhonyClient/1.2\n[jh] CSeq looks mismatched.\n"}, "context_segments": []}, {"current_segment": {"sid": 6657, "labels": "StateDecision,Thanking,Agreement,InformationProviding,Social", "content": "\nFixed.\n\nThanks for the comments\n"}, "context_segments": [{"sid": 6656, "labels": "InformationProviding,ExtensionOfPrevious", "content": "S->C: PLAY_NOTIFY rtsp://example.com/fizzle RTSP/2.0\nCSeq: 45\nNotify-Reason: end-of-stream\nRequest-Status: cseq=4 status=200 reason=\"OK\"\nRange: npt=-15\nRTP-Info:url=\"rtsp://example.com/fizzle/audiotrack\"\nssrc=0D12F123:seq=49;rtptime=39200\nSession: abcdefgh\n\nC->S: RTSP/2.0 200 OK\nCSeq: 854\nUser-Agent: PhonyClient/1.2\n[jh] CSeq looks mismatched.\n"}]}, {"current_segment": {"sid": 6658, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page18) The PLAY_NOTIFY request includes information about the last"}, "context_segments": []}, {"current_segment": {"sid": 6659, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page19) For video is possible to manipulate the number of frames that"}, "context_segments": []}, {"current_segment": {"sid": 6660, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page20) Speed affects how much of"}, "context_segments": []}, {"current_segment": {"sid": 6661, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page25)"}, "context_segments": []}, {"current_segment": {"sid": 6662, "labels": "InformationProviding,ExtensionOfPrevious", "content": "transport.  A message is either a Request or a Response."}, "context_segments": []}, {"current_segment": {"sid": 6663, "labels": "InformationProviding,ProposeAction,StateDecision,Thanking,NeutralResponse,Thanking,Social", "content": "Hi,\n\nThanks for your comments. See inline for each individual item. The\nchanges made will be able in the 22 version.\n"}, "context_segments": []}, {"current_segment": {"sid": 6664, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page141) The server SHALL"}, "context_segments": []}, {"current_segment": {"sid": 6665, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">(Page250)"}, "context_segments": []}, {"current_segment": {"sid": 6790, "labels": "InformationProviding", "content": "\nDuring last week's RTSP teleconference, we had a discussion on how to\ndistinguish the updated RTSP (i.e., the ongoing work\naround draft-ietf-mmusic-rfc2326bis-03.txt, see\nhttp://rtsp.org/2003/drafts/draft03/draft-ietf-mmusic-rfc2326bis-03.pdf)."}, "context_segments": []}, {"current_segment": {"sid": 6791, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is enough change on the table that we feel version number should be\nincreased to avoid confusion when RTSP server and client might be\nimplementing the old (rfc2326) and the new RTSP spec (will be a new RFC)."}, "context_segments": []}, {"current_segment": {"sid": 6792, "labels": "Question,InformationSeeking", "content": "\nShould we increase the minor version to say RTSP/1.1, or should we up the\nmajor version (to say RTSP/2.0)?"}, "context_segments": []}, {"current_segment": {"sid": 6793, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nYour comments are welcome."}, "context_segments": []}, {"current_segment": {"sid": 3796, "labels": "Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction,InformationSeeking", "content": "How about removing the RSA/ECDSA from the cipher suite, and making the\nSigAlgs extension mandatory for connections requiring authentication?\nThat halves the number of cipher suites and eliminates an unnecessary\nredundancy, while keeping the rest of the cipher suite negotiation\nlogic intact."}, "context_segments": []}, {"current_segment": {"sid": 6813, "labels": "InformationProviding", "content": "The IESG has approved the following document:\n- 'Real Time Streaming Protocol 2.0 (RTSP)'\n(draft-ietf-mmusic-rfc2326bis-40.txt) as Proposed Standard"}, "context_segments": [{"sid": 3796, "labels": "Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction,InformationSeeking", "content": "How about removing the RSA/ECDSA from the cipher suite, and making the\nSigAlgs extension mandatory for connections requiring authentication?\nThat halves the number of cipher suites and eliminates an unnecessary\nredundancy, while keeping the rest of the cipher suite negotiation\nlogic intact."}]}, {"current_segment": {"sid": 3797, "labels": "InformationProviding,Answer,ContextSetting,NeutralResponse", "content": "\nThis is already a part of the current a la carte proposal that's been under discussion.\n\nrecent summary of changes:\nhttps://www.ietf.org/mail-archive/web/tls/current/msg17156.html\ncurrent WIP text:\nhttps://github.com/davegarrett/tls13-spec/blob/alacarte/draft-ietf-tls-tls13.md#cipher-suites\ndiff from PR #201:\nhttps://github.com/davegarrett/tls13-spec/compare/alertsandcerts...davegarrett:alacarte\n\nBoth the supported groups and signature algorithms extensions are mandatory in this proposal, and they are the sole methods to select key exchange and certificates, with the ECDHE_ECDSA prefix being essentially frozen for certificate authenticated cipher suites.\n"}, "context_segments": [{"sid": 3796, "labels": "Question,InformationProviding,ProposeAction,InformationProviding,ProposeAction,InformationSeeking", "content": "How about removing the RSA/ECDSA from the cipher suite, and making the\nSigAlgs extension mandatory for connections requiring authentication?\nThat halves the number of cipher suites and eliminates an unnecessary\nredundancy, while keeping the rest of the cipher suite negotiation\nlogic intact."}, {"sid": 6813, "labels": "InformationProviding", "content": "The IESG has approved the following document:\n- 'Real Time Streaming Protocol 2.0 (RTSP)'\n(draft-ietf-mmusic-rfc2326bis-40.txt) as Proposed Standard"}]}, {"current_segment": {"sid": 6814, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis document is the product of the Multiparty Multimedia Session Control\nWorking Group."}, "context_segments": []}, {"current_segment": {"sid": 6815, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe IESG contact persons are Gonzalo Camarillo and Richard Barnes."}, "context_segments": []}, {"current_segment": {"sid": 6816, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL of this Internet Draft is:\nhttp://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/"}, "context_segments": []}, {"current_segment": {"sid": 6817, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTechnical Summary"}, "context_segments": []}, {"current_segment": {"sid": 6818, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe document defines RTSP version 2.0 which obsoletes RTSP version 1.0 defined in RFC 2326."}, "context_segments": []}, {"current_segment": {"sid": 6819, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level protocol for setup and control of the delivery of data with real-time properties.  RTSP provides an extensible framework to enable controlled, on-demand delivery of real-time data, such as audio and video.  Sources of data can include both live data feeds and stored clips.  This protocol is intended to control multiple data delivery sessions, provide a means for choosing delivery channels such as UDP, multicast UDP and TCP, and provide a means for choosing delivery mechanisms based upon RTP (RFC 3550)."}, "context_segments": []}, {"current_segment": {"sid": 6820, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nWorking Group Summary"}, "context_segments": []}, {"current_segment": {"sid": 6821, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe document has been work in progress for an extended period of time dating back to 2002. Earlier versions saw decent WG participation however the later versions have primarily been driven by the document authors with limited overall discussion in the group, especially towards the end of the process. There are no known issues or major discussion points, and there has been no indication of lack of consensus in the WG."}, "context_segments": []}, {"current_segment": {"sid": 6822, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nDocument Quality"}, "context_segments": []}, {"current_segment": {"sid": 6823, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe document has been reviewed in detail several times after WGLC and in preparation for the publication request and the authors have made several updates as a result of those. The document is considered to be of high quality at this point."}, "context_segments": []}, {"current_segment": {"sid": 6824, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere is one known implementation of the specification, and many of the extensions compared to RTSP 1.0 have been implemented separately as well."}, "context_segments": []}, {"current_segment": {"sid": 6825, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA Media type review was done for \"text/parameters\". The review thread can be found at: http://www.ietf.org/mail-archive/web/ietf-types/current/msg01656.html"}, "context_segments": []}, {"current_segment": {"sid": 6826, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nPersonnel\nDocument Shepherd: Flemming Andreasen\nResponsible AD: Gonzalo Camarillo"}, "context_segments": []}, {"current_segment": {"sid": 6827, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nRFC Editor's Note:"}, "context_segments": []}, {"current_segment": {"sid": 6828, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nSection 2 of this document and its subsections provide \"an informative overview\nof the different mechanisms in the RTSP 2.0 protocol, to give the reader a high\nlevel understanding\".  As such, it's very important that it be clear and well\nwritten.  Some reviewers have found the English to be difficult.  Please take\nan especially critical pen to this section, making sure that the grammar and\nusage are correct, and that the language is clear."}, "context_segments": []}, {"current_segment": {"sid": 581, "labels": "InformationProviding,ContextSetting,ProposeAction", "content": "We would like to start a working group last call of draft-ietf-rtcweb-use-cases-and-requirements-11."}, "context_segments": []}, {"current_segment": {"sid": 7686, "labels": "InformationProviding,ContextSetting", "content": "More fun with implementing:"}, "context_segments": [{"sid": 581, "labels": "InformationProviding,ContextSetting,ProposeAction", "content": "We would like to start a working group last call of draft-ietf-rtcweb-use-cases-and-requirements-11."}]}, {"current_segment": {"sid": 582, "labels": "ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social", "content": "\nPlease send comments by the end of the day on September 21."}, "context_segments": []}, {"current_segment": {"sid": 7687, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\n2.  Zero point for the two Point Addition routines is not defined.  Without\nknowing this scalar multiplication is harder to do.  I did find the points\nneeded in the python code but if it was in the text it would be better."}, "context_segments": [{"sid": 582, "labels": "ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction,Social", "content": "\nPlease send comments by the end of the day on September 21."}]}, {"current_segment": {"sid": 583, "labels": "Thanking,Thanking,Social", "content": "\nThank you,"}, "context_segments": []}, {"current_segment": {"sid": 7688, "labels": "Question,ExtensionOfPrevious,Question,InformationProviding,ExtensionOfPrevious,InformationSeeking", "content": "\n3.  You have the point addition functions define in the text, should you\nalso have the point doubling function define in the text as well?"}, "context_segments": [{"sid": 583, "labels": "Thanking,Thanking,Social", "content": "\nThank you,"}]}, {"current_segment": {"sid": 584, "labels": "Social", "content": "Hi,"}, "context_segments": []}, {"current_segment": {"sid": 7689, "labels": "Question,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\n1.  Normalization function after point addition is implicit.  Should it be\nexplicit and mention the fun with modular inverses.  I did not have a\nproblem with this but notice it is lacking."}, "context_segments": [{"sid": 584, "labels": "Social", "content": "Hi,"}]}, {"current_segment": {"sid": 585, "labels": "Agreement,Agreement,ContextSetting,InformationProviding", "content": "I agree with Magnus's comments in large part.  A few notes:\n"}, "context_segments": []}, {"current_segment": {"sid": 586, "labels": "Agreement,Agreement,ContextSetting,ProposeAction,InformationProviding", "content": "\n[BA] +1 on this.  I found myself flipping back and forth between the requirements definition and the use cases to try to understand what the incremental functionality was and sometimes it was less than obvious why a requirement (such as \"no wiretapping\") was dropped from the basic use case.  To me, it makes more sense to lay out basic use cases, and then to focus on incremental requirement additions based on that."}, "context_segments": []}, {"current_segment": {"sid": 587, "labels": "Question,NeutralResponse,InformationSeeking,Question,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction", "content": "I want to point out that all methods suggested for RTP media through\nfirewalls that do not allow UDP traffic, by using \"always open\" https port\n443 (or http port 80) result in tunneling RTP media over TCP. That gives\nwith severe quality problems from TCP retransmissions of dropped media\npacket packets. Do we really want that for WebRTC?\n\nA quality wise better solution is already pointed out in use case 3.2.5.1\nmentioned below:\n\"An enterprise that uses a RTCWEB based web application for communication\ndesires to audit all RTCWEB based application session used from inside the\ncompany towards any external peer. To be able to do this they deploy a TURN\nserver that straddle the boundary\nbetween the internal network and the external\"\n\nI suggest the following is added to that use case:\n\"Such TURN server allows a media path, separated from the usually data\ncrowded enterprise Internet access, offering superior quality. This is a\nbetter way to enable WebRTC on a network behind a restrictive firewall not\nallowing UDP traffic, instead of tunneling RTP through always open http or\nhttps ports resulting in RTP media over TCP \u0096 with severe quality problems\nfrom TCP retransmissions of dropped packets.\n\nSuch network administrator provided auditing TURN server would also put the\nright party in control \u0096 The network administrator decides what is allowed\non his network.\"\n\nWhy should a network administrator that wants to block webrtc media, have to\ndo more than just closing his firewall for UDP, like below suggested\n\"configuring the browser not to do webrtc, normal HTTP black/white lists,\nand solutions based on putting something in the HTTP Connect sent to the\nproxy so the proxy can block it\"?\n\nAnother thing in the second half of the same use case 3.2.5.1:\nAre NAT/firewalls inside the enterprise network assumed? If not, I think the\nsecond half can be deleted.\n\n\" In cases where employees are using RTCWEB applications provided by an\nexternal service provider they still want to have the traffic to stay\ninside their internal network and in addition not load the straddling\nTURN server, \"\n\nICE establishes a direct connection in this case, not using any TURN server\nat all, doesn\u0092t it? This is then not a problem.\n\n/Karl\n\n-----Ursprungligt meddelande-----\nFr\u00e5n: rtcweb-bounces@ietf.org [mailto:rtcweb-bounces@ietf.org] F\u00f6r Hutton,\nAndrew\nSkickat: den 20 september 2013 19:58\nTill: Magnus Westerlund; Cullen Jennings (fluffy); rtcweb@ietf.org;\ndraft-ietf-rtcweb-use-cases-and-requirements@tools.ietf.org\n\u00c4mne: Re: [rtcweb] WGLC of draft-ietf-rtcweb-use-cases-and-requirements-11\n\nOn: 17 September 2013 13:01 Magnus Westerlund Wrote:"}, "context_segments": []}, {"current_segment": {"sid": 588, "labels": "Agreement,Agreement,InformationProviding", "content": "+1"}, "context_segments": []}, {"current_segment": {"sid": 589, "labels": "Question,Question,InformationSeeking", "content": "\nShouldn't we add it as a requirement also?"}, "context_segments": []}, {"current_segment": {"sid": 590, "labels": "NeutralResponse,InformationProviding", "content": "For NAT/Firewall traversal WebRTC uses ICE, where the browser today gets the\nTURN server address from the web application, or gets it configured by a LAN\nadmin via an \u0093admin policy template\u0094."}, "context_segments": []}, {"current_segment": {"sid": 591, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nHowever, there is a need (motivations below) for the TURN server address to\nbe provided via DHCP (and maybe RA - Router Advertisement - for IPv6, and\nthe OTT channel in mobiles have their own method I\u0092ve been told). Simply\nput, just as you often get your IP-address, DNS address, etc. automatically\nfrom the network access, you should also get the TURN server address."}, "context_segments": []}, {"current_segment": {"sid": 592, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nI suggest the following is added to the end of use case (which today is\nabout multiple TURN servers)\n3.2.4.  Simple Video Communication Service, global service provider\n3.2.4.1.  Description\n\"A network service provider must be able to automatically supply a TURN\nserver addresses to the browser when accessing a network. The address may\ncome via DHCP or a similar mechanism (maybe RA - Router Advertisement - for\nIPv6, an addition to the IPCP protocol like RFC1877 for PPPoE, or whatever\nmethod the mobile OTT channels use). The mechanism should be similar to\nautomatically getting the IP-address, DNS address, etc.. and need extensions\nto current recommendations/standards."}, "context_segments": []}, {"current_segment": {"sid": 593, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nThere are several reasons for a network service provider to supply a TURN\nserver as part of his offered access:\n- to keep media paths short, specifically not sending media outside its own\nnetwork to some distant application provided TURN server\n- to support mobility, i.e. you may want to move from a LAN with a\nconfigured TURN server to accessing via WiFi or 3G/4G OTT channels\n- to offer a media path with better quality (than best effort data traffic).\nGetting \u0093WebRTC-ready\u0094 access and we look forward to telepresence for\neveryone."}, "context_segments": []}, {"current_segment": {"sid": 594, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nAn enterprise network that want to keep a restrictive firewall not allowing\nUDP traffic, could provide a real-time path using a TURN server paralleling\nthe firewall, instead of tunneling RTP through always open http or https\nports resulting in RTP media over TCP \u0096 with severe quality problems from\nTCP retransmissions of dropped packets. The TURN server address is most\neasily provided in the same way as the IP address and DNS address. (That\nwould also put the right party in control \u0096 The network provider decides\nwhat is allowed on his network.)"}, "context_segments": []}, {"current_segment": {"sid": 595, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nThis browser should select which available TURN server address to use in the\nfollowing priority order, where ICE could be used to try several:"}, "context_segments": []}, {"current_segment": {"sid": 596, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n1) TURN server address configured in the browser by the user (special cases,\nnormally not used)\n2) TURN server address configured by the network administrator via an \u0093admin\npolicy template\u0094\n3) TURN server address supplied by DHCP or similar automatic network method\n4) TURN server address being supplied by the web application\""}, "context_segments": []}, {"current_segment": {"sid": 597, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nTwo new requirements can be extracted:\nF40     The browser must support retrieving TURN server addresses via\nDHCP or a similar mechanism (maybe RA - Router Advertisement - for IPv6, an\naddition to the IPCP protocol like RFC1877 for PPPoE, or whatever method the\nmobile OTT channels use). The mechanism should be similar to automatically\ngetting the IP-address, DNS address, etc..\nF42     This browser should select which available TURN server address to\nuse in the following priority order, where ICE could be used to try several:"}, "context_segments": []}, {"current_segment": {"sid": 598, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n1) TURN server address configured in the browser by the user (special cases,\nnormally not used)\n2) TURN server address configured by the network administrator via an \u0093admin\npolicy template\u0094\n3) TURN server address supplied by DHCP or similar automatic network method\n4) TURN server address being supplied by the web application"}, "context_segments": []}, {"current_segment": {"sid": 599, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI suppose this also will add to:\n5.  IANA Considerations\nTBD"}, "context_segments": []}, {"current_segment": {"sid": 600, "labels": "InformationProviding", "content": "\nWe would like to start a working group last call of\ndraft-ietf-rtcweb-use-cases-and-requirements-11."}, "context_segments": []}, {"current_segment": {"sid": 601, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nPlease send comments by the end of the day on September 21."}, "context_segments": []}, {"current_segment": {"sid": 602, "labels": "Thanking,Social", "content": "\nThank you,"}, "context_segments": []}, {"current_segment": {"sid": 603, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "\nI have reviewed the Use Case and Requirements draft (v11) in the WG last\ncall. I have the following comments on this document. I have found a\nnumber of issues that I definitely needs to be fixed prior to any\npublication request."}, "context_segments": []}, {"current_segment": {"sid": 604, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\n1. First of all I like to bring up a document structure problem. When\nreviewing this it is difficult to follow what requirements that are\nadded for the different use cases. I would propose that each Use Case or\ngeneral section that describe something that causes new requirements\nthat hasn't been listed yet in the document to define the Requirement\nthere. Something like this:"}, "context_segments": []}, {"current_segment": {"sid": 605, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3.2.2.1.  Description"}, "context_segments": []}, {"current_segment": {"sid": 606, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThis use-case is almost identical to the Simple Video Communication\nService use-case (Section 3.2.1).  The difference is that one of the\nusers is behind a NAT that blocks UDP traffic."}, "context_segments": []}, {"current_segment": {"sid": 607, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3.2.2.2.  Derived Requirements"}, "context_segments": []}, {"current_segment": {"sid": 608, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28"}, "context_segments": []}, {"current_segment": {"sid": 609, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nA1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12"}, "context_segments": []}, {"current_segment": {"sid": 610, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nNew Requirement:"}, "context_segments": []}, {"current_segment": {"sid": 611, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF29     The browser must be able to send streams and\ndata to a peer in the presence of NATs that\nblock UDP traffic."}, "context_segments": []}, {"current_segment": {"sid": 612, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThis makes the incremental use cases much more understandable in how\nthey add requirements."}, "context_segments": []}, {"current_segment": {"sid": 613, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nThis I think will also affect Section 3.1 which will need to include the\nrequirement definitions created by these general considerations."}, "context_segments": []}, {"current_segment": {"sid": 614, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nHowever, I do suggest that you leave the collection of all requirements\nin place for easy reference."}, "context_segments": []}, {"current_segment": {"sid": 615, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n2. Section 1:"}, "context_segments": []}, {"current_segment": {"sid": 616, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe document focuses on requirements related to real-time media\nstreams and data exchange.  Requirements related to privacy,\nsignalling between the browser and web server etc. are currently not\nconsidered."}, "context_segments": []}, {"current_segment": {"sid": 617, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI think this needs to be rewritten. The draft actually do consider a\nnumber of high level security and privacy concerns."}, "context_segments": []}, {"current_segment": {"sid": 618, "labels": "NeutralResponse,InformationProviding,NeutralResponse,ProposeAction", "content": "\n[BA] There is a use case (\"distributed music band\") that omits the requirement, but that omission didn't make sense to me.  Personally, I would elevate this to a universal requirement in the base use case, and all other cases."}, "context_segments": [{"sid": 617, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI think this needs to be rewritten. The draft actually do consider a\nnumber of high level security and privacy concerns."}]}, {"current_segment": {"sid": 619, "labels": "NeutralResponse,Agreement,ProposeAction,InformationProviding", "content": "[BA] I do think the document covers the security and privacy concerns (modulo some issues I had with the \"wiretapping\" definition).  So I think we can eliminate that last sentence entirely."}, "context_segments": [{"sid": 617, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI think this needs to be rewritten. The draft actually do consider a\nnumber of high level security and privacy concerns."}]}, {"current_segment": {"sid": 620, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3. Section 2:"}, "context_segments": []}, {"current_segment": {"sid": 621, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nIf you have no definitions, do remove the section, rather then leaving\nit TBD."}, "context_segments": []}, {"current_segment": {"sid": 622, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n4. Section 3.1"}, "context_segments": []}, {"current_segment": {"sid": 623, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\no  Clients can be on wideband (10s of Mbits/sec)"}, "context_segments": []}, {"current_segment": {"sid": 624, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\no  Clients can be on narrowband (10s to 100s of Kbits/sec)"}, "context_segments": []}, {"current_segment": {"sid": 625, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nDue to the usage of the terms wideband and narrowband I think you need\nto be more explicit about what is actually referred to here. My\nassumption is network throughput capability. And in these cases maybe\nexpressing this explicitly is a better choice."}, "context_segments": []}, {"current_segment": {"sid": 626, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n5. Section 3.1:"}, "context_segments": []}, {"current_segment": {"sid": 627, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\no  Clients can be on networks with any type (as described in RFC4787)\nof NAT."}, "context_segments": []}, {"current_segment": {"sid": 628, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI think \"any type\" is unclear here, as there are no types defined in\nthat RFC unless you are trying to express the difference between basic\nNAT and NAPT, which I don't believe you are. I think you should use\nsomething like this:"}, "context_segments": []}, {"current_segment": {"sid": 629, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\no  Clients can be on networks with a NAT using any type of Mapping\nand Filtering behaviors (as described in RFC4787)."}, "context_segments": []}, {"current_segment": {"sid": 630, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n6. Section 3.2.1.1:"}, "context_segments": []}, {"current_segment": {"sid": 631, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nIt is essential that the communication cannot be wiretapped\n[RFC2804]."}, "context_segments": []}, {"current_segment": {"sid": 632, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nThis sentence returns a number of times in this document. I think it is\na general security requirement that applies to probably all of the use\ncases. If there is one use case that don't need to enable protection\nagainst this, then please be explicit about that."}, "context_segments": []}, {"current_segment": {"sid": 633, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nMy Suggestion is to move this into the general considerations section."}, "context_segments": []}, {"current_segment": {"sid": 634, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n7. Section 3.2.1.1:"}, "context_segments": []}, {"current_segment": {"sid": 635, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nIn addition, it is required that browsers enable the media and data\nsecurity keys to be cryptographically bound to the user identity."}, "context_segments": []}, {"current_segment": {"sid": 636, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI think this sentence is actually subtly wrong in a couple of ways.\nFirst of all it talks about \"the identity\", where I think it should be\ntalking about \"a identity\". This can both the human users identity, but\nalso a role identity, like Police Officer."}, "context_segments": []}, {"current_segment": {"sid": 637, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nSecondly, binding it to  the security keys without putting requirements\non the keying and key-exchange mechanism to prevent man in the middles\nempties this requirement. I would recommend that you reformulate this to\na high level requirement without going into mechanism. For example:"}, "context_segments": []}, {"current_segment": {"sid": 638, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nIn addition, it is required that browsers enables binding an identity of\nthe user's choice to his end of the secured communication and that such\nmechanism prevent man in the middle attacks."}, "context_segments": []}, {"current_segment": {"sid": 639, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n8. Section 3.2.1.1"}, "context_segments": []}, {"current_segment": {"sid": 640, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nOne user has an unreliable Internet connection.  It sometimes loses\npackets, and sometimes goes down completely."}, "context_segments": []}, {"current_segment": {"sid": 641, "labels": "ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI guess the requirement here is to handle this in a graceful way from\nmedia transport and rendering perspective. The packet loss is also\nunclear as I don't know if the intention is to capture spurious packet\nlosses due to the link media, or congestion losses. I think some\nexpansion of this is needed."}, "context_segments": []}, {"current_segment": {"sid": 642, "labels": "NeutralResponse,InformationProviding,NeutralResponse,ProposeAction", "content": "\n[BA] To me, connectivity loss and packet loss are somewhat different issues.  Connectivity loss leads to addition of requirements relating to keep-alives and/or consent (e.g. if the peer drops off the Internet, the consent mechanism will detect it eventually and stop sending).   Packet loss leads to requirements relating to concealment, FEC and/or RTX.  So lumping them together doesn't make sense to me.  > 3.2.2.2.  Derived Requirements"}, "context_segments": [{"sid": 641, "labels": "ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI guess the requirement here is to handle this in a graceful way from\nmedia transport and rendering perspective. The packet loss is also\nunclear as I don't know if the intention is to capture spurious packet\nlosses due to the link media, or congestion losses. I think some\nexpansion of this is needed."}]}, {"current_segment": {"sid": 643, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n9. Section 3.2.1.1:"}, "context_segments": []}, {"current_segment": {"sid": 644, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nOne user is located behind a Network Address Translator (NAT)."}, "context_segments": []}, {"current_segment": {"sid": 645, "labels": "ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nWhat is the point being stressed here that isn't covered by the general\nconsideration in 3.1 that says:"}, "context_segments": []}, {"current_segment": {"sid": 646, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\no  Clients can be on networks with any type (as described in RFC4787)\nof NAT."}, "context_segments": []}, {"current_segment": {"sid": 647, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSection 3.2.2.2:"}, "context_segments": []}, {"current_segment": {"sid": 648, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3.2.2.2.  Derived Requirements"}, "context_segments": []}, {"current_segment": {"sid": 649, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28, F29"}, "context_segments": []}, {"current_segment": {"sid": 650, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nA1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12"}, "context_segments": []}, {"current_segment": {"sid": 651, "labels": "ExtensionOfPrevious,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nHow come this list of Derived Requirements are shorter than for the\nparent use case which has the following list:"}, "context_segments": []}, {"current_segment": {"sid": 652, "labels": "Agreement,Agreement,ContextSetting,ProposeAction,InformationProviding", "content": "\n[BA] Yes, that didn't make sense to me either.  Better to stick with the requirements of the base case and add to them as necessary for more advanced cases.  If something is deleted, I think the document needs to explain why, but in this case the deletions didn't make sense to me."}, "context_segments": [{"sid": 651, "labels": "ExtensionOfPrevious,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nHow come this list of Derived Requirements are shorter than for the\nparent use case which has the following list:"}]}, {"current_segment": {"sid": 653, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3.2.1.2.  Derived Requirements"}, "context_segments": []}, {"current_segment": {"sid": 654, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF1, F2, F3, F4, F5, F8, F9, F10, F20, F25, F28, F35, F36, F38, F39"}, "context_segments": []}, {"current_segment": {"sid": 655, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nA1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A25, A26"}, "context_segments": []}, {"current_segment": {"sid": 656, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIf each use case is listing all the requirement then it needs to be\nconsistently done and actually list all that applies. If there are\nrequirements from the parent that doesn't apply that may even be worth\nexplicitly mentioning."}, "context_segments": []}, {"current_segment": {"sid": 657, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThis comments applies to all use cases as there appears to be general\ninconsistencies."}, "context_segments": []}, {"current_segment": {"sid": 658, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n10. Section 3.2.3.1:"}, "context_segments": []}, {"current_segment": {"sid": 659, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n3.2.3.1.  Description"}, "context_segments": []}, {"current_segment": {"sid": 660, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThis use-case is almost identical to the Simple Video Communication\nService use-case (Section 3.2.1).  The difference is that one of the\nusers is behind a FW that only allows http traffic."}, "context_segments": []}, {"current_segment": {"sid": 661, "labels": "ExtensionOfPrevious,Question,Question,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIf a firewall only allows HTTP traffic, then can we really assume that\nthe firewall administrator per default will accept WebRTC Media and Data\ntraffic?"}, "context_segments": []}, {"current_segment": {"sid": 662, "labels": "Answer,InformationProviding,Answer,ProposeAction", "content": "\n[BA]  Data traffic sent as SCTP/DTLS/UDP will *not* work in this case.  Websockets might, but then I think you need to clarify whether \"HTTP only\" includes websockets (in my experience, in most cases it won't)."}, "context_segments": [{"sid": 661, "labels": "ExtensionOfPrevious,Question,Question,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIf a firewall only allows HTTP traffic, then can we really assume that\nthe firewall administrator per default will accept WebRTC Media and Data\ntraffic?"}]}, {"current_segment": {"sid": 663, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI am far from certain of this, and think on a requirement level needs to\nexpress a situation where the firewall administrator allows WebRTC\nacross its FW, or at least can easily configure a rule to block it. Thus\nresulting in that any solution for this needs to be easily identifiable\nand possible to block."}, "context_segments": []}, {"current_segment": {"sid": 664, "labels": "NeutralResponse,InformationProviding,Agreement,NeutralResponse,ContextSetting,ProposeAction,StateDecision", "content": "\nStefan already stated that this use case will be changed to take account of my comments in http://www.ietf.org/mail-archive/web/rtcweb/current/msg08264.html. So the \"only allows HTTP traffic\" is going to be removed and changed to describe the use case when the firewall requires traffic to flow via a HTTP Proxy.\n\nWe also have a use case when a network specific TURN server is deployed (3.2.5.1).\n\nIn both cases I agree that a network administrator must have a way to block webrtc but there are various ways of achieving this including just configuring the browser not to do webrtc, normal HTTP black/white lists, and also I can imagine solutions based on putting something in the HTTP Connect sent to the proxy so the proxy can block it.\n\nSo I agree that it must be possible to block webrtc traffic but we need to careful not to specify the solution in the use case.\n\nAndy"}, "context_segments": [{"sid": 663, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI am far from certain of this, and think on a requirement level needs to\nexpress a situation where the firewall administrator allows WebRTC\nacross its FW, or at least can easily configure a rule to block it. Thus\nresulting in that any solution for this needs to be easily identifiable\nand possible to block."}]}, {"current_segment": {"sid": 665, "labels": "Answer,InformationProviding", "content": "\nStefan already stated that this use case will be changed to take account of\nmy comments in\nhttp://www.ietf.org/mail-archive/web/rtcweb/current/msg08264.html. So the\n\"only allows HTTP traffic\" is going to be removed and changed to describe\nthe use case when the firewall requires traffic to flow via a HTTP Proxy.\n\nWe also have a use case when a network specific TURN server is deployed\n(3.2.5.1).\n\nIn both cases I agree that a network administrator must have a way to block\nwebrtc but there are various ways of achieving this including just\nconfiguring the browser not to do webrtc, normal HTTP black/white lists, and\nalso I can imagine solutions based on putting something in the HTTP Connect\nsent to the proxy so the proxy can block it.\n\nSo I agree that it must be possible to block webrtc traffic but we need to\ncareful not to specify the solution in the use case.\n\nAndy\n"}, "context_segments": [{"sid": 663, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI am far from certain of this, and think on a requirement level needs to\nexpress a situation where the firewall administrator allows WebRTC\nacross its FW, or at least can easily configure a rule to block it. Thus\nresulting in that any solution for this needs to be easily identifiable\nand possible to block."}]}, {"current_segment": {"sid": 666, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nSee also PNTAW@ietf.org mailing list."}, "context_segments": []}, {"current_segment": {"sid": 667, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n11. Section 3.2.8.1:"}, "context_segments": []}, {"current_segment": {"sid": 668, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nBut in addition to this, one of the users can share what is being\ndisplayed on her/his screen with a peer.  The user can choose to\nshare the entire screen, part of the screen (part selected by the\nuser) or what a selected applicaton displays with the peer."}, "context_segments": []}, {"current_segment": {"sid": 669, "labels": "Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nDoes this needs mentioning of additional high level security requirements?"}, "context_segments": []}, {"current_segment": {"sid": 670, "labels": "Answer,InformationProviding,Answer,ProposeAction", "content": "\n[BA]  The requirements may need to be *very* high level (e.g. \"without introducing other vulnerabilities\"), because this is a tricky area that may end up requiring significant work."}, "context_segments": [{"sid": 669, "labels": "Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nDoes this needs mentioning of additional high level security requirements?"}]}, {"current_segment": {"sid": 671, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n12. Section 3.2.10.1:"}, "context_segments": []}, {"current_segment": {"sid": 672, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThe service providers are interconnected by some means, but exchange\nno more information about the users than what can be carried using\nSIP."}, "context_segments": []}, {"current_segment": {"sid": 673, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nNOTE: More profiling of what this means may be needed."}, "context_segments": []}, {"current_segment": {"sid": 674, "labels": "Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nThe Note, can it be removed, or do we need additional text in this document?"}, "context_segments": []}, {"current_segment": {"sid": 675, "labels": "Answer,InformationSeeking,Answer,ProposeAction,InformationProviding", "content": "[BA] The NOTE tells me that we're not even really sure why this section is there.  So perhaps we should figure out what it adds above and beyond the gateway use case."}, "context_segments": [{"sid": 674, "labels": "Question,ExtensionOfPrevious,InformationSeeking,Question,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nThe Note, can it be removed, or do we need additional text in this document?"}]}, {"current_segment": {"sid": 676, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n13. Section 3.2.10.1:"}, "context_segments": []}, {"current_segment": {"sid": 677, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThe same issues with connectivity apply."}, "context_segments": []}, {"current_segment": {"sid": 678, "labels": "Question,ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,UnderstandingNegative,InformationSeeking,InformationProviding", "content": "\nI don't understand this comment. What is it intended to refer to?"}, "context_segments": []}, {"current_segment": {"sid": 679, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n14. Section 3.2.11.1:"}, "context_segments": []}, {"current_segment": {"sid": 680, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nBefore the game starts, and during game breaks, the talent scout and\nthe manager have a 1-1 audiovisual communication session.  Only the\nrear facing camera of the mobile phone is used.  On the display of\nthe mobile phone, the video of the club manager is shown with a\npicture-in-picture thumbnail of the rear facing camera (self-view).\nOn the display of the desktop, the video of the talent scout is shown\nwith a picture-in-picture thumbnail of the desktop camera (self-\nview)."}, "context_segments": []}, {"current_segment": {"sid": 681, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI get a bit confused with what is the front and rear of my smart phone.\nI would consider the display side the front side, and the rear the other\nbig side of my block shaped mobile phone. I suggest using other terms."}, "context_segments": []}, {"current_segment": {"sid": 682, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n15. Section 3.2.14.1:"}, "context_segments": []}, {"current_segment": {"sid": 683, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nDiscussion: This use-case was briefly discussed at the Quebec webrtc\nmeeting and it got support.  So far the only concrete requirement\n(A17) derived is that the application must be able to ask the browser\nto treat the audio signal as audio (in contrast to speech).  However,\nthe use case should be further analysed to determine other\nrequirements (could be e.g. on delay mic->speaker, level control of\naudio signals, etc.)."}, "context_segments": []}, {"current_segment": {"sid": 684, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI think this Discussion points needs to be dealt with before we can\npublish this document. I would consider the question if this needs more\nanalysis a open issue."}, "context_segments": []}, {"current_segment": {"sid": 685, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n16. Section 3.3.2.1:"}, "context_segments": []}, {"current_segment": {"sid": 686, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nAlice uses her web browser with a service that allows her to call\nPSTN numbers.  Alice calls 1-800-gofedex.  Alice should be able to\nhear the initial prompts from the fedex IVR and when the IVR says\npress 1, there should be a way for Alice to navigate the IVR."}, "context_segments": []}, {"current_segment": {"sid": 687, "labels": "Question,ExtensionOfPrevious,ProposeAction,Social,InformationSeeking,InformationProviding", "content": "\nCan you please expand IVR."}, "context_segments": []}, {"current_segment": {"sid": 688, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n17. Section 3.3.3.1:"}, "context_segments": []}, {"current_segment": {"sid": 689, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThe organization has an internal network set up with an aggressive\nfirewall handling access to the Internet.  If users cannot physically\naccess the internal network, they can establish a Virtual Private\nNetwork (VPN)."}, "context_segments": []}, {"current_segment": {"sid": 690, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI think the requirements or limitations the above paragraph try to\nexpress is not clear. There is some missing assumptions of location of\nserver related to clients that is not covered. Thus it is not clear what\nrequirements this results in."}, "context_segments": []}, {"current_segment": {"sid": 691, "labels": "Question,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social,InformationProviding", "content": "\nCan you please expand this to something that is understandable."}, "context_segments": []}, {"current_segment": {"sid": 692, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n18. Section 3.3.3.1:"}, "context_segments": []}, {"current_segment": {"sid": 693, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nThis use-case adds requirements on support for fast stream\nswitches F7, on encryption of media and on ability to traverse very\nrestrictive FWs."}, "context_segments": []}, {"current_segment": {"sid": 694, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nRegarding the restricted FWs, my comment 10) applies to also this comment."}, "context_segments": []}, {"current_segment": {"sid": 695, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n19. Section 4.2:"}, "context_segments": []}, {"current_segment": {"sid": 696, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF14     The browser must be able to measure the level"}, "context_segments": []}, {"current_segment": {"sid": 697, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF15     The browser must be able to change the level\nin audio streams."}, "context_segments": []}, {"current_segment": {"sid": 698, "labels": "Question,InformationSeeking,ExtensionOfPrevious,ProposeAction,Social,InformationProviding", "content": "\nCan you please make explicit what type level you think should be\nmeasured or changed, energy, \"voice activity\"?"}, "context_segments": []}, {"current_segment": {"sid": 699, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n20. Section 4.2"}, "context_segments": []}, {"current_segment": {"sid": 700, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nF19     Streams and data must be able to pass through\nlimited middleboxes."}, "context_segments": []}, {"current_segment": {"sid": 701, "labels": "ExtensionOfPrevious,ClarificationElicitation,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nWhat type of limitations are you considering in this requirement?"}, "context_segments": []}, {"current_segment": {"sid": 702, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n21. Section 4.2"}, "context_segments": []}, {"current_segment": {"sid": 703, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI note that F30, and F36 may be affected by earlier comments on the\nunderlying reason for these requirements and need additional text or\nclarifications."}, "context_segments": []}, {"current_segment": {"sid": 704, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\n22. Section 4.2:\nF37     The browser must be able to send streams and\ndata to a peer in the presence of FWs that only\nallows http(s) traffic."}, "context_segments": []}, {"current_segment": {"sid": 705, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nI think this requirement should have a caveat along the lines: when FW\npolicy allos WebRTC traffic."}, "context_segments": []}, {"current_segment": {"sid": 706, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n23. Section 5:"}, "context_segments": []}, {"current_segment": {"sid": 707, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nChange the TBD to a statement that there are no IANA actions in this\ndocument."}, "context_segments": []}, {"current_segment": {"sid": 708, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n24. Section 6.2:"}, "context_segments": []}, {"current_segment": {"sid": 709, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThese security considerations are really security requirements on the\nbrowser or the API. I don't know if would be better to move them to\nrelevant use case sections, or leave them in place."}, "context_segments": []}, {"current_segment": {"sid": 710, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n25. Section 7:"}, "context_segments": []}, {"current_segment": {"sid": 711, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n13.  Enable company coop without being able to decipher http://\nwww.ietf.org/mail-archive/web/rtcweb/current/msg04461.html"}, "context_segments": []}, {"current_segment": {"sid": 712, "labels": "Question,ClarificationElicitation,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nWhat is \"coop\" in the above?"}, "context_segments": []}, {"current_segment": {"sid": 713, "labels": "ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious,ProposeAction,Social,InformationProviding", "content": "\n26. Please run a spell checker on the document prior to submitting the\nupdate."}, "context_segments": []}, {"current_segment": {"sid": 714, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\n27. Ensure that the ID nits issues are not real issues:"}, "context_segments": []}, {"current_segment": {"sid": 715, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\n== Line 667 has weird spacing: '...resence  of NA...'"}, "context_segments": []}, {"current_segment": {"sid": 716, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\n== Line 785 has weird spacing: '...of that  strea...'"}, "context_segments": []}, {"current_segment": {"sid": 717, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "> 6.  Security Considerations"}, "context_segments": []}, {"current_segment": {"sid": 7690, "labels": "InformationProviding,Answer,Answer", "content": "\nI would simply take SHAKE256 and truncate the output to 512 bits. This\ngives a hash function of 512 bits with a 256-bit security strength.\n"}, "context_segments": [{"sid": 717, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "> 6.  Security Considerations"}]}, {"current_segment": {"sid": 718, "labels": "InformationProviding,InformationProviding,ContextSetting,ProposeAction,Social", "content": "I am the assigned Gen-ART reviewer for this draft. For background on\nGen-ART, please see the FAQ at\n< http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.\n\nPlease wait for direction from your document shepherd\nor AD before posting a new version of the draft.\n\nDocument: draft-ietf-rtcweb-use-cases-and-requirements-14.txt\nReviewer: Brian Carpenter\nReview Date: 2014-04-21\nIETF LC End Date: 2014-04-25\nIESG Telechat date: 2014-05-15\n\nSummary:  In good shape but still needs work.\n\nComment:\n\nThis is the same as my LC review since there is no new version yet.\n(Also see http://www.ietf.org/mail-archive/web/gen-art/current/msg10092.html)\n\nIn case there are W3C people reading this review, let me clarify that Gen-ART reviews\nare by generalists who are often encountering a topic for the first time. I haven't\nclassified the issues into \"major\" and \"minor\" but some of them really do need\nattention before the document advances. There are also some nits noted at the end.\n\nIssues:\n"}, "context_segments": []}, {"current_segment": {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}, "context_segments": [{"sid": 718, "labels": "InformationProviding,InformationProviding,ContextSetting,ProposeAction,Social", "content": "I am the assigned Gen-ART reviewer for this draft. For background on\nGen-ART, please see the FAQ at\n< http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.\n\nPlease wait for direction from your document shepherd\nor AD before posting a new version of the draft.\n\nDocument: draft-ietf-rtcweb-use-cases-and-requirements-14.txt\nReviewer: Brian Carpenter\nReview Date: 2014-04-21\nIETF LC End Date: 2014-04-25\nIESG Telechat date: 2014-05-15\n\nSummary:  In good shape but still needs work.\n\nComment:\n\nThis is the same as my LC review since there is no new version yet.\n(Also see http://www.ietf.org/mail-archive/web/gen-art/current/msg10092.html)\n\nIn case there are W3C people reading this review, let me clarify that Gen-ART reviews\nare by generalists who are often encountering a topic for the first time. I haven't\nclassified the issues into \"major\" and \"minor\" but some of them really do need\nattention before the document advances. There are also some nits noted at the end.\n\nIssues:\n"}]}, {"current_segment": {"sid": 7692, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nAfter truncation, it becomes a hash function, but indeed this is not a\nhash function approved by NIST. As far as I understood, the reason for\nthis is summarized in [FIPS 202, Section A.2], i.e., calling SHAKE with\nthe same input and different output lengths yield common output\nprefixes. However, I expect the output length of the pre-hash to be\nclearly defined in the signature scheme.\n"}, "context_segments": [{"sid": 718, "labels": "InformationProviding,InformationProviding,ContextSetting,ProposeAction,Social", "content": "I am the assigned Gen-ART reviewer for this draft. For background on\nGen-ART, please see the FAQ at\n< http://wiki.tools.ietf.org/area/gen/trac/wiki/GenArtfaq>.\n\nPlease wait for direction from your document shepherd\nor AD before posting a new version of the draft.\n\nDocument: draft-ietf-rtcweb-use-cases-and-requirements-14.txt\nReviewer: Brian Carpenter\nReview Date: 2014-04-21\nIETF LC End Date: 2014-04-25\nIESG Telechat date: 2014-05-15\n\nSummary:  In good shape but still needs work.\n\nComment:\n\nThis is the same as my LC review since there is no new version yet.\n(Also see http://www.ietf.org/mail-archive/web/gen-art/current/msg10092.html)\n\nIn case there are W3C people reading this review, let me clarify that Gen-ART reviews\nare by generalists who are often encountering a topic for the first time. I haven't\nclassified the issues into \"major\" and \"minor\" but some of them really do need\nattention before the document advances. There are also some nits noted at the end.\n\nIssues:\n"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}]}, {"current_segment": {"sid": 719, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": ">   The following considerations are applicable to all use cases:\n>   o  Clients can be on IPv4-only\n>   o  Clients can be on IPv6-only\n>   o  Clients can be on dual-stack"}, "context_segments": []}, {"current_segment": {"sid": 7693, "labels": "InformationProviding,NeutralResponse,ProposeAction,Agreement", "content": "\nRight, if you need to stick to traditional hash APIs, you would have\n\"SHAKE256@512b\" for pre-hash and \"SHAKE256@912b\" for the internal hash,\nboth calling SHAKE256 internally.\n\nWhen possible, a better solution would be to foresee a XOF API, where\nthe output bits can be taken at will (\"extendable output\", literally).\n"}, "context_segments": [{"sid": 719, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": ">   The following considerations are applicable to all use cases:\n>   o  Clients can be on IPv4-only\n>   o  Clients can be on IPv6-only\n>   o  Clients can be on dual-stack"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}]}, {"current_segment": {"sid": 7694, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nI wrote a hash library (for all sorts of experiments, it could treat\nall kinds of hashes in way uniform to the caller). With API being new\ndesign, but mostly following tried and true IUF (albeit with some\nextensions). Had to modify API in ways I'm not happy about in order\nto accomodiate variable-width stuff[1].\n\nWell yeah, one could take 912-bit SHAKE256 and truncate it to 512 bits\nto get 512-bit SHAKE256. But that property is specific to XOFs, which\naren't the only variable-width things around. With SHAKE256, one could\neven use 1088-bit variant (one full block) and truncate the answer.\nThat would be big enough even for E-521 (needs 1056-bit KDF).\n"}, "context_segments": [{"sid": 719, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": ">   The following considerations are applicable to all use cases:\n>   o  Clients can be on IPv4-only\n>   o  Clients can be on IPv6-only\n>   o  Clients can be on dual-stack"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}, {"sid": 7693, "labels": "InformationProviding,NeutralResponse,ProposeAction,Agreement", "content": "\nRight, if you need to stick to traditional hash APIs, you would have\n\"SHAKE256@512b\" for pre-hash and \"SHAKE256@912b\" for the internal hash,\nboth calling SHAKE256 internally.\n\nWhen possible, a better solution would be to foresee a XOF API, where\nthe output bits can be taken at will (\"extendable output\", literally).\n"}]}, {"current_segment": {"sid": 720, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt isn't clear whether this is intended to include the case where an\nIPv4-only client communicates with an IPv6-only node (or vice versa).\n\nIt also isn't clear about cases in which a mobile client's connectivity\nchanges dynamically during a session (e.g. from IPv4 to IPv6). This is\npartly clarified later by F17, but only partly.\n"}, "context_segments": []}, {"current_segment": {"sid": 721, "labels": "NeutralResponse,InformationProviding,ContextSetting,ProposeAction", "content": "\nI'd suggest expanding the last bullet of Section 3.1 to include various translation designs that might be involved in Ipv4-IPv6 connectivity. Eg.,\n\nOLD:\no  Clients can be on networks with a NAT using any type of Mapping\nand Filtering behaviors (as described in RFC4787).\nNEW:\no  Clients can be on networks with a NAT or IPv4-IPv6 translation devices using any type of Mapping\nand Filtering behaviors (as described in RFC4787).\n"}, "context_segments": [{"sid": 720, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt isn't clear whether this is intended to include the case where an\nIPv4-only client communicates with an IPv6-only node (or vice versa).\n\nIt also isn't clear about cases in which a mobile client's connectivity\nchanges dynamically during a session (e.g. from IPv4 to IPv6). This is\npartly clarified later by F17, but only partly.\n"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}]}, {"current_segment": {"sid": 7695, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nThis looks to be part of problem with \"exotic-and-simple\" vs. \"ordinary-\nand-complicated\" one sees a lot in diffrent contexts.\n"}, "context_segments": [{"sid": 720, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt isn't clear whether this is intended to include the case where an\nIPv4-only client communicates with an IPv6-only node (or vice versa).\n\nIt also isn't clear about cases in which a mobile client's connectivity\nchanges dynamically during a session (e.g. from IPv4 to IPv6). This is\npartly clarified later by F17, but only partly.\n"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}, {"sid": 721, "labels": "NeutralResponse,InformationProviding,ContextSetting,ProposeAction", "content": "\nI'd suggest expanding the last bullet of Section 3.1 to include various translation designs that might be involved in Ipv4-IPv6 connectivity. Eg.,\n\nOLD:\no  Clients can be on networks with a NAT using any type of Mapping\nand Filtering behaviors (as described in RFC4787).\nNEW:\no  Clients can be on networks with a NAT or IPv4-IPv6 translation devices using any type of Mapping\nand Filtering behaviors (as described in RFC4787).\n"}, {"sid": 7693, "labels": "InformationProviding,NeutralResponse,ProposeAction,Agreement", "content": "\nRight, if you need to stick to traditional hash APIs, you would have\n\"SHAKE256@512b\" for pre-hash and \"SHAKE256@912b\" for the internal hash,\nboth calling SHAKE256 internally.\n\nWhen possible, a better solution would be to foresee a XOF API, where\nthe output bits can be taken at will (\"extendable output\", literally).\n"}]}, {"current_segment": {"sid": 722, "labels": "InformationProviding,ExtensionOfPrevious", "content": ">   o  Clients can be on networks with a NAT using any type of Mapping\n>      and Filtering behaviors (as described in RFC4787)."}, "context_segments": []}, {"current_segment": {"sid": 7696, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n[1] XOFs and variant where different widths are not truncations of each\nother.\n"}, "context_segments": [{"sid": 722, "labels": "InformationProviding,ExtensionOfPrevious", "content": ">   o  Clients can be on networks with a NAT using any type of Mapping\n>      and Filtering behaviors (as described in RFC4787)."}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}, {"sid": 7693, "labels": "InformationProviding,NeutralResponse,ProposeAction,Agreement", "content": "\nRight, if you need to stick to traditional hash APIs, you would have\n\"SHAKE256@512b\" for pre-hash and \"SHAKE256@912b\" for the internal hash,\nboth calling SHAKE256 internally.\n\nWhen possible, a better solution would be to foresee a XOF API, where\nthe output bits can be taken at will (\"extendable output\", literally).\n"}]}, {"current_segment": {"sid": 723, "labels": "Question,NeutralResponse,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,InformationSeeking", "content": "\nThat document is scoped for UDP only. Is that sufficient? As I understand the\nRTCWEB transport drafts, it is aiming at connection-oriented transport.\n(How many NATs support SCTP, for example?)\n"}, "context_segments": []}, {"current_segment": {"sid": 724, "labels": "Answer,InformationProviding,Answer", "content": "\nI thought that any SCTP would be encapsulated within UDP fro that reason.\n"}, "context_segments": [{"sid": 723, "labels": "Question,NeutralResponse,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,InformationSeeking", "content": "\nThat document is scoped for UDP only. Is that sufficient? As I understand the\nRTCWEB transport drafts, it is aiming at connection-oriented transport.\n(How many NATs support SCTP, for example?)\n"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}]}, {"current_segment": {"sid": 7697, "labels": "Social", "content": "\n-Ilari"}, "context_segments": [{"sid": 723, "labels": "Question,NeutralResponse,Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,InformationSeeking", "content": "\nThat document is scoped for UDP only. Is that sufficient? As I understand the\nRTCWEB transport drafts, it is aiming at connection-oriented transport.\n(How many NATs support SCTP, for example?)\n"}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}, {"sid": 724, "labels": "Answer,InformationProviding,Answer", "content": "\nI thought that any SCTP would be encapsulated within UDP fro that reason.\n"}, {"sid": 7693, "labels": "InformationProviding,NeutralResponse,ProposeAction,Agreement", "content": "\nRight, if you need to stick to traditional hash APIs, you would have\n\"SHAKE256@512b\" for pre-hash and \"SHAKE256@912b\" for the internal hash,\nboth calling SHAKE256 internally.\n\nWhen possible, a better solution would be to foresee a XOF API, where\nthe output bits can be taken at will (\"extendable output\", literally).\n"}]}, {"current_segment": {"sid": 725, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.2.  Common requirements\n>   The requirements retrived from the Simple Video Communication Service\n>   use-case (Section 3.3.1) by default apply to all other use-cases, and\n>   are considred common.  For each individual use-case, only the\n>   additional requirements are listed."}, "context_segments": []}, {"current_segment": {"sid": 7698, "labels": "Agreement,Agreement,InformationProviding", "content": "\nI agree.\n"}, "context_segments": [{"sid": 725, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.2.  Common requirements\n>   The requirements retrived from the Simple Video Communication Service\n>   use-case (Section 3.3.1) by default apply to all other use-cases, and\n>   are considred common.  For each individual use-case, only the\n>   additional requirements are listed."}, {"sid": 7691, "labels": "InformationProviding,NeutralResponse,Agreement", "content": "\nNo objection here, provided it is truncated at (at least) 512 bits.\n\nWell, SHAKE256 isn't a hash (according to FIPS202).\n\nThe relevant property is that SHAKE256 truncated at d bits is\nadvertised to have collision resistance of min(d/2, 256) bits.  So\nSHAKE256@512b is supposed to satisfy the main property we expect of a\nprehash.\n\nIf there are concerns about sharing common outputs, we could always\nprepend `Ed448ph-SHAKE256@512b-prehash' or something to the message\nbefore feeding it SHAKE256@512b as the prehash."}]}, {"current_segment": {"sid": 726, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIn fact you duplicate the additional requirements in each use case where they\noccur. That seems like overkill. Also there's at least one mix-up as a result,\nnoted below.\n"}, "context_segments": []}, {"current_segment": {"sid": 7699, "labels": "InformationProviding,Agreement,Agreement", "content": "+1 on using just one hash function \u0160 I still have a slight preference for\nBLAKE2 for it\u00b9s speed in software."}, "context_segments": [{"sid": 726, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIn fact you duplicate the additional requirements in each use case where they\noccur. That seems like overkill. Also there's at least one mix-up as a result,\nnoted below.\n"}]}, {"current_segment": {"sid": 727, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.3.1.2.  Common Requirements\n>  F3      Transmitted streams and data must be rate\n>          controlled (meaning that the browser must, regardless\n>          of application behavior, reduce send rate when\n>          there is congestion)."}, "context_segments": []}, {"current_segment": {"sid": 728, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI think that needs to be broken into two more atomic requirements.\nSomething like\n\nF3.1    There must be a mechanism by which the transport layer\ncan signal the occurrence of congestion to the browser.\n\nF3.2    Transmitted streams and data must be rate\ncontrolled (meaning that the browser must, regardless\nof application behavior, reduce send rate while\nthere is congestion).\n\nThe change from \"when\" to \"while\" is intentional, since the browser\nshould allow the rate to increase when there is no congestion.\n"}, "context_segments": []}, {"current_segment": {"sid": 729, "labels": "Agreement,Agreement,ProposeAction,InformationProviding", "content": "\nI agree with the when=>while change, good catch. Not sure personally if the breakdown to smaller requirements is necessary.\n"}, "context_segments": [{"sid": 728, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI think that needs to be broken into two more atomic requirements.\nSomething like\n\nF3.1    There must be a mechanism by which the transport layer\ncan signal the occurrence of congestion to the browser.\n\nF3.2    Transmitted streams and data must be rate\ncontrolled (meaning that the browser must, regardless\nof application behavior, reduce send rate while\nthere is congestion).\n\nThe change from \"when\" to \"while\" is intentional, since the browser\nshould allow the rate to increase when there is no congestion.\n"}]}, {"current_segment": {"sid": 730, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": ">   F11     It must be possible to protect streams and data\n>           from wiretapping [RFC2804]."}, "context_segments": []}, {"current_segment": {"sid": 731, "labels": "NeutralResponse,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI don't see the relevance of the reference (of which I am a co-author),\nwhich mainly states that the IETF won't consider requirements *for* wiretapping.\nI'm sure you can find a reference that says encryption is a Good Thing.\n"}, "context_segments": []}, {"current_segment": {"sid": 732, "labels": "Agreement,InformationProviding,Agreement,ProposeAction", "content": "\nAgreed. I do not think this is a blocking comment, but I too would like to see a difference reference.\n"}, "context_segments": [{"sid": 731, "labels": "NeutralResponse,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI don't see the relevance of the reference (of which I am a co-author),\nwhich mainly states that the IETF won't consider requirements *for* wiretapping.\nI'm sure you can find a reference that says encryption is a Good Thing.\n"}]}, {"current_segment": {"sid": 733, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": ">   F14     The browser must make it possible to set up a\n>           call between two parties without one party\n>           learning the other party's host IP address."}, "context_segments": []}, {"current_segment": {"sid": 734, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nIt is not clear how to interpret that. I assume it's supposed to be a\nrestatement of the earlier comment:\n"}, "context_segments": []}, {"current_segment": {"sid": 735, "labels": "InformationProviding,ExtensionOfPrevious", "content": ">   The application gives the users the opportunity to stop it from\n>   exposing the host IP address to the application of the other user."}, "context_segments": []}, {"current_segment": {"sid": 736, "labels": "NeutralResponse,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,UnderstandingNegative,InformationSeeking", "content": "\nBut -- assuming the implementation model is peer-to-peer communication\nbetween the two hosts, rather than client1-server-client2 communication --\nI'm afraid I don't see how F14 can be guaranteed, since the peers must be\naware of each others' IP address. Even if the browser and app hide the\nremote address, a little Wiresharking will reveal it immediately.\nThere's not much point stating a requirement that cannot be met.\n\nI realised at this point in the document that you need to be very\nexplicit about whether communication is indeed intended to be peer-to-peer\nor via the server. And assuming it is meant to be peer-to-peer, what\nis the model for the rendez-vous between the peers? What requirements do\nyou need to solve the resulting referral problem?\n(http://tools.ietf.org/html/draft-carpenter-referral-ps-02)\n\nThis topic belongs in the Common Requirements.\n"}, "context_segments": []}, {"current_segment": {"sid": 737, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.3.7.1.  Description\n>   The user in the previous use case that starts a trip is behind a\n>   common residential router that supports prioritization of traffic."}, "context_segments": []}, {"current_segment": {"sid": 738, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction,Social", "content": "\nPlease talk about differentiated services (RFC 2474 etc.). IP doesn't\nhave simple priority. That's exactly why the DART WG was just formed.\n"}, "context_segments": []}, {"current_segment": {"sid": 739, "labels": "Agreement,Agreement,ProposeAction,InformationProviding", "content": "\nI agree that DS would be a more appropriate term, but I don't think the document should otherwise expand too much on that space, IMO.\n"}, "context_segments": [{"sid": 738, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction,Social", "content": "\nPlease talk about differentiated services (RFC 2474 etc.). IP doesn't\nhave simple priority. That's exactly why the DART WG was just formed.\n"}]}, {"current_segment": {"sid": 740, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.3.7.2.  Additional Requirements\n>   REQ-ID      DESCRIPTION\n>   F17     The communication session must survive across a\n>           change of the network interface used by the\n>           session\n>   F22     The browser must be able to receive streams and\n>           data from multiple peers concurrently."}, "context_segments": []}, {"current_segment": {"sid": 741, "labels": "Question,Disagreement,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ProposeAction,InformationSeeking", "content": "\nThis seems completely messed up. The reader expects requirements for\nQoS at this point. Isn't this \"F22\" really F24?\n"}, "context_segments": []}, {"current_segment": {"sid": 742, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 3.3.10.2.  Additional Requirements\n>   REQ-ID      DESCRIPTION\n>   F22     The browser should be able to take advantage\n>           of available capabilities (supplied by network\n>           nodes) to prioritize voice, video and data\n>           appropriately."}, "context_segments": []}, {"current_segment": {"sid": 743, "labels": "Question,ClarificationElicitation,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "\nAgain, please cite differentiated services rather than prioritization.\nAlso, you now have two different F22s. This one seems to fit 3.3.7.2 better.\n\nBelow, you also have two F25s. And other duplicates. Wasn't the idea\njust to add *new* requirements when they arose? As F22 shows, the\nduplication is error-prone.\n"}, "context_segments": []}, {"current_segment": {"sid": 744, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nI am really surprised that there isn't a sub-section on Privacy\nConsiderations. RFC 6973 describes the various types of threat and they\nseem specially relevant here.\n\nNits:\n"}, "context_segments": []}, {"current_segment": {"sid": 745, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "> 2.  Conventions\n>   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n>   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n>   document are to be interpreted as described in BCP 14, RFC 2119\n>   [RFC2119]."}, "context_segments": []}, {"current_segment": {"sid": 746, "labels": "NeutralResponse,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe change log says you removed this. Also there is no change log\nsince version 10.\n\nRFC 4787 is mentioned but not listed as an Informative Reference.\n"}, "context_segments": []}, {"current_segment": {"sid": 747, "labels": "InformationProviding,ExtensionOfPrevious", "content": ">    A17, A23\n>    A13, A14, A15, A16"}, "context_segments": []}, {"current_segment": {"sid": 748, "labels": "Question,Question,InformationProviding,ExtensionOfPrevious,ProposeAction,InformationSeeking", "content": "\nWhat are these lines that occur in a few places?\n\nRFC 2804 and RFC 5479 are Informational documents so cannot reasonably be\nNormative References."}, "context_segments": []}, {"current_segment": {"sid": 749, "labels": "Question,Thanking,InformationSeeking,ProposeAction,Social,Thanking,InformationProviding", "content": "Brian:\n\nThank your for your detailed review.\n\nAuthors:\n\nAny responses? (I personally think at least the first comment deserves a change in the document.)\n"}, "context_segments": []}, {"current_segment": {"sid": 775, "labels": "NeutralResponse,InformationProviding,ContextSetting", "content": "\nF19 was removed to the -12 version when the following text was removed\nfrom the use-case \"Video conferencing system with central server\":\n"}, "context_segments": []}, {"current_segment": {"sid": 5297, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF."}, "context_segments": [{"sid": 775, "labels": "NeutralResponse,InformationProviding,ContextSetting", "content": "\nF19 was removed to the -12 version when the following text was removed\nfrom the use-case \"Video conferencing system with central server\":\n"}]}, {"current_segment": {"sid": 7749, "labels": "Social,Social", "content": "Hello,"}, "context_segments": [{"sid": 775, "labels": "NeutralResponse,InformationProviding,ContextSetting", "content": "\nF19 was removed to the -12 version when the following text was removed\nfrom the use-case \"Video conferencing system with central server\":\n"}, {"sid": 5297, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF."}]}, {"current_segment": {"sid": 776, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n\"The organization has an internal network set up with an aggressive\nfirewall handling access to the Internet.  If users cannot physically\naccess the internal network, they can establish a Virtual Private\nNetwork (VPN).\"\n"}, "context_segments": []}, {"current_segment": {"sid": 5298, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Real Time Streaming Protocol 2.0 (RTSP)\nAuthor(s)       : Henning Schulzrinne\nAnup Rao\nRob Lanphier\nMagnus Westerlund\nMartin Stiemerling\nFilename        : draft-ietf-mmusic-rfc2326bis-33.txt\nPages           : 302\nDate            : 2013-03-22"}, "context_segments": [{"sid": 776, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n\"The organization has an internal network set up with an aggressive\nfirewall handling access to the Internet.  If users cannot physically\naccess the internal network, they can establish a Virtual Private\nNetwork (VPN).\"\n"}]}, {"current_segment": {"sid": 7750, "labels": "InformationProviding,InformationProviding", "content": "\nI am currently updating my EdDSA Java library to implement the current\nspec for key encoding [0] (previously I used\ndraft-josefsson-pkix-eddsa-04 for public keys, and the equivalent in\nPKCS#8 format for private keys). The example public key given in\ndraft-ietf-curdle-pkix-03 [1] passes my tests, however the example\nprivate key [2] does not."}, "context_segments": [{"sid": 776, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\n\"The organization has an internal network set up with an aggressive\nfirewall handling access to the Internet.  If users cannot physically\naccess the internal network, they can establish a Virtual Private\nNetwork (VPN).\"\n"}, {"sid": 5298, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Real Time Streaming Protocol 2.0 (RTSP)\nAuthor(s)       : Henning Schulzrinne\nAnup Rao\nRob Lanphier\nMagnus Westerlund\nMartin Stiemerling\nFilename        : draft-ietf-mmusic-rfc2326bis-33.txt\nPages           : 302\nDate            : 2013-03-22"}]}, {"current_segment": {"sid": 5299, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nAbstract:\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 defined in RFC 2326."}, "context_segments": []}, {"current_segment": {"sid": 7751, "labels": "InformationProviding,InformationProviding", "content": "\nIt appears that the private key material within the example is 34 bytes,\nbut according to Section 3.2 of draft-irtf-cfrg-eddsa-08 [3] (which\nAFAICT the present draft defers to for encoding), the private key is the\nb-bit seed k, which is 32 bytes."}, "context_segments": [{"sid": 5299, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nAbstract:\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 defined in RFC 2326."}]}, {"current_segment": {"sid": 5300, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, "context_segments": []}, {"current_segment": {"sid": 7752, "labels": "Question,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nAm I missing something? If the example keys in the present draft are\ncorrect, it would be helpful to add a reference that clarifies their\nexact encoding."}, "context_segments": [{"sid": 5300, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}]}, {"current_segment": {"sid": 7753, "labels": "InformationProviding,Answer,InformationProviding,Answer", "content": "\nApparently the key is wrapped in OCTET STRING twice for some reason,\nso the length is actually 32 bytes (the first 2 are second OCTET STRING\nheader).\n"}, "context_segments": [{"sid": 5300, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, {"sid": 7752, "labels": "Question,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nAm I missing something? If the example keys in the present draft are\ncorrect, it would be helpful to add a reference that clarifies their\nexact encoding."}]}, {"current_segment": {"sid": 7754, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nIs it too late to change that / was there any particular reason for this?\nNot that saving or using two bytes really matters, but it seems unnecessary\nwhen we already have an OCTET-STRING-shaped hole to put our octet string in.\n"}, "context_segments": [{"sid": 5300, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, {"sid": 7752, "labels": "Question,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nAm I missing something? If the example keys in the present draft are\ncorrect, it would be helpful to add a reference that clarifies their\nexact encoding."}, {"sid": 7753, "labels": "InformationProviding,Answer,InformationProviding,Answer", "content": "\nApparently the key is wrapped in OCTET STRING twice for some reason,\nso the length is actually 32 bytes (the first 2 are second OCTET STRING\nheader).\n"}]}, {"current_segment": {"sid": 5301, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting", "content": "\nThe IETF datatracker status page for this draft is:\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis"}, "context_segments": []}, {"current_segment": {"sid": 7755, "labels": "Social,InformationProviding", "content": "\n-Ilari"}, "context_segments": [{"sid": 5301, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting", "content": "\nThe IETF datatracker status page for this draft is:\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis"}, {"sid": 7752, "labels": "Question,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nAm I missing something? If the example keys in the present draft are\ncorrect, it would be helpful to add a reference that clarifies their\nexact encoding."}]}, {"current_segment": {"sid": 5302, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThere's also a htmlized version available at:\nhttp://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-33"}, "context_segments": []}, {"current_segment": {"sid": 7756, "labels": "Question,InformationProviding,NeutralResponse,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "So we don't end up with two variants of this floating around (this thread\ngives one data point of the current text being misinterpreted), What do you\nthink about these editorial changes?"}, "context_segments": [{"sid": 5302, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThere's also a htmlized version available at:\nhttp://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-33"}]}, {"current_segment": {"sid": 5303, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA diff from the previous version is available at:\nhttp://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-33"}, "context_segments": []}, {"current_segment": {"sid": 7757, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction", "content": "\n1. In the paragraph beginning \"For the keys defined in this document\n[...]\", add a sentence like \"Note the opaque byte sequence is wrapped in\nOCTET STRINGs twice in total.\""}, "context_segments": [{"sid": 5303, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA diff from the previous version is available at:\nhttp://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-33"}]}, {"current_segment": {"sid": 7758, "labels": "NeutralResponse,ProposeAction,Social,Question,InformationSeeking,InformationProviding", "content": "\nAnd/or have an appendix with an example of the full encoding for a given\ndummy key?\n\n-Ben"}, "context_segments": [{"sid": 5303, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA diff from the previous version is available at:\nhttp://www.ietf.org/rfcdiff?url2=draft-ietf-mmusic-rfc2326bis-33"}, {"sid": 7757, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,ProposeAction", "content": "\n1. In the paragraph beginning \"For the keys defined in this document\n[...]\", add a sentence like \"Note the opaque byte sequence is wrapped in\nOCTET STRINGs twice in total.\""}]}, {"current_segment": {"sid": 5304, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": []}, {"current_segment": {"sid": 7759, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\n2. EdPrivateKey sounds like this only applies to Ed* rather than both Ed*\nand X*. It should probably be renamed. But the best name I can come up with\nright now is PrivateKeyWrapper, which is terrible. Another option is to\navoid defining a type and just say:"}, "context_segments": [{"sid": 5304, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}]}, {"current_segment": {"sid": 5305, "labels": "InformationProviding,Social", "content": "WG,"}, "context_segments": []}, {"current_segment": {"sid": 7760, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nFor the keys defined in this document, the private key is always an\nopaque byte sequence.  This is encoded in a OneAsymmetricKey\nobject by wrapping the sequence in an ASN.1 OCTET STRING\nand placing its DER encoding in the 'privateKey' field. Note that\n'privateKey' is itself an OCTET STRING, so the original byte\nsequence is wrapped in OCTET STRINGs twice in total."}, "context_segments": [{"sid": 5305, "labels": "InformationProviding,Social", "content": "WG,"}]}, {"current_segment": {"sid": 5306, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThis is a version produced by the old XML2RFC tool. No other changes\nthen the version number."}, "context_segments": []}, {"current_segment": {"sid": 7761, "labels": "InformationProviding,NeutralResponse,InformationProviding,Agreement", "content": "Jim's proposed text seems reasonable to me. CurvePrivateKey is a much\nbetter name than PrivateKeyWrapper! Maybe \"and wrapped by the OCTET STRING\"\n=> \"which is then wrapped by the OCTET STRING\", but this is all nitpicks\nand I'm happy with whatever.\n"}, "context_segments": [{"sid": 5306, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThis is a version produced by the old XML2RFC tool. No other changes\nthen the version number."}]}, {"current_segment": {"sid": 5307, "labels": "InformationProviding,ExtensionOfPrevious,Social,InformationProviding,ProposeAction", "content": "\nPlease note that it becomes 17 pages longer with the old tool."}, "context_segments": []}, {"current_segment": {"sid": 7762, "labels": "InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction", "content": "\n1.       Changed EdPrivateKey to CurvePrivateKey.  I hope that this will not cause any confusion with the ECPrivateKey type defined in RFC5915."}, "context_segments": [{"sid": 5307, "labels": "InformationProviding,ExtensionOfPrevious,Social,InformationProviding,ProposeAction", "content": "\nPlease note that it becomes 17 pages longer with the old tool."}]}, {"current_segment": {"sid": 5308, "labels": "Social,ProposeAction,InformationProviding", "content": "\nHave a nice weekend"}, "context_segments": []}, {"current_segment": {"sid": 7763, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n2.      I have changed the last sentence in the paragraph mentioned below to\nThus when encoding a OneAsymmetricKey object, the private key is wrapped in an CurvePrivateKey object and wrapped by the OCTET STRING of the 'privateKey' field."}, "context_segments": [{"sid": 5308, "labels": "Social,ProposeAction,InformationProviding", "content": "\nHave a nice weekend"}]}, {"current_segment": {"sid": 7764, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ProposeAction", "content": "\n3.      I have also expanded the appendix with the private key example to have 1) the current PEM format, 2) an ASN.1 dump and 3) the value of the private key."}, "context_segments": []}, {"current_segment": {"sid": 7765, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,StateDecision", "content": "\nI debated using the OKP (Octet Key Pair) which was used in JOSE and COSE but decided not to."}, "context_segments": []}, {"current_segment": {"sid": 7766, "labels": "Social,Social", "content": "Hi,"}, "context_segments": []}, {"current_segment": {"sid": 7767, "labels": "InformationProviding,Answer,NeutralResponse,ContextSetting,InformationProviding,ProposeAction,ContextSetting", "content": "In my local version, I have done the following:"}, "context_segments": []}, {"current_segment": {"sid": 7768, "labels": "InformationProviding,NeutralResponse,InformationProviding,NeutralResponse", "content": "Ah, yes, I see OpenSSL has already shipped code which serializes X25519 in\nthis way, as early as OpenSSL 1.1.0 in September. That's unfortunate. It\nwould have been preferable to avoid this confusing double wrapper, but so\nit goes I guess."}, "context_segments": []}, {"current_segment": {"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, "context_segments": []}, {"current_segment": {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}]}, {"current_segment": {"sid": 7771, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nIt's a fairly frustrating feeling for a protocol designer to be hedged\nin to a particular behavior because an implementation of a draft version\nescaped into the wild and the change is not worth the pain of breaking\ninteroperability.  This happens all over the place, not just here, of course,\nwhich leads to the question of what can we do to avoid getting locked into\nthe draft interfaces.  It's easy to point fingers and say that the\nsoftware authors should know to have a transition strategy if they ship\na protocol that is explicitly a work in progress, but that doesn't really\nseem very productive.  The TLS 1.3 story seems fairly reasonable, with\na scheme to indicate support for a specific draft version as opposed to\nhaving to squat on the version number for the final protcol, but that\nseems to have evolved semi-organically as I understand it, with informal\ncontact among the early implementors.  Should all drafts burn a set of\ncodepoints and map them to the given draft versions?  Probably not.\nShould they think about it?  Maybe.  Are there other techniques that\nwe can use to help software authors avoid shooting the ecosystem in the foot?\n\n-Ben"}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}]}, {"current_segment": {"sid": 7772, "labels": "InformationProviding,Answer,NeutralResponse", "content": "\nIn this particular draft (the earlier versions which had been demo'ed\n-though not included- in gnutls), we were switching the OIDs once the\ndefinitions were modified in an incompatible way.\n"}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}, {"sid": 7771, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nIt's a fairly frustrating feeling for a protocol designer to be hedged\nin to a particular behavior because an implementation of a draft version\nescaped into the wild and the change is not worth the pain of breaking\ninteroperability.  This happens all over the place, not just here, of course,\nwhich leads to the question of what can we do to avoid getting locked into\nthe draft interfaces.  It's easy to point fingers and say that the\nsoftware authors should know to have a transition strategy if they ship\na protocol that is explicitly a work in progress, but that doesn't really\nseem very productive.  The TLS 1.3 story seems fairly reasonable, with\na scheme to indicate support for a specific draft version as opposed to\nhaving to squat on the version number for the final protcol, but that\nseems to have evolved semi-organically as I understand it, with informal\ncontact among the early implementors.  Should all drafts burn a set of\ncodepoints and map them to the given draft versions?  Probably not.\nShould they think about it?  Maybe.  Are there other techniques that\nwe can use to help software authors avoid shooting the ecosystem in the foot?\n\n-Ben"}]}, {"current_segment": {"sid": 7773, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nWhile indeed openssl has quite some user base, version 1.1.0 is still\nnot being integrated to major distributions to have significant impact.\nDo we really need to carry technical debt for that? Can't we change the\nOIDs on the final version to avoid confusion with released versions?\n"}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}]}, {"current_segment": {"sid": 7774, "labels": "Question,InformationProviding,Answer,NeutralResponse,Question,InformationProviding,Answer,InformationSeeking", "content": "\nActually, looking at the ECC keys out there, aren't most V2 keys,\nsince those contain also the public key, as public key is not subset\nof private key for ECC (unlike RSA)?\n\nLooking at the private key example in document, those look like\n(at least the Ed25519 key does) v1 keys. And I am aware of at least\none Ed25519 implementation (that I didn't write) that requires both\nprivate and public key to load a keypair.\n"}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}, {"sid": 7773, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nWhile indeed openssl has quite some user base, version 1.1.0 is still\nnot being integrated to major distributions to have significant impact.\nDo we really need to carry technical debt for that? Can't we change the\nOIDs on the final version to avoid confusion with released versions?\n"}]}, {"current_segment": {"sid": 7775, "labels": "Social,InformationProviding", "content": "\n-Ilari"}, "context_segments": [{"sid": 7769, "labels": "InformationProviding,Answer,InformationProviding", "content": "I believe that the OpenSSL people would be sad if we changed this at this time.  I did some interop testing with their developers before the last version was released and the OCTET STRING wrapper on the private key is what we were doing at the time."}, {"sid": 7770, "labels": "NeutralResponse,ProposeAction,Agreement,ProposeAction,InformationProviding", "content": "\nSpeaking as an individual, yes.  Please don\u2019t change this."}, {"sid": 7773, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nWhile indeed openssl has quite some user base, version 1.1.0 is still\nnot being integrated to major distributions to have significant impact.\nDo we really need to carry technical debt for that? Can't we change the\nOIDs on the final version to avoid confusion with released versions?\n"}]}, {"current_segment": {"sid": 7776, "labels": "InformationProviding,ProposeAction,ProposeAction", "content": "\nPlease indicate if the text added by Jim clarifies the previous confusion,\nand if we can close the thread."}, "context_segments": []}, {"current_segment": {"sid": 7777, "labels": "InformationProviding,InformationProviding", "content": "\nMy understanding of the text is:\n\"\"\"the private key is wrapped in an CurvePrivateKey object \"\"\"\nCurvePrivateKey = OCTET STRING ( private key)\n\"\"\"and wrapped by the OCTET STRING of the 'privateKey' field.\"\"\"\nprivateKey = OCTET STRING (OCTET STRING (private key))"}, "context_segments": []}, {"current_segment": {"sid": 7778, "labels": "Question,Question,InformationSeeking", "content": "\nAm I correct ?"}, "context_segments": []}, {"current_segment": {"sid": 7779, "labels": "Social,Social", "content": "\nYours,"}, "context_segments": []}, {"current_segment": {"sid": 864, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "Date:       March 2015"}, "context_segments": []}, {"current_segment": {"sid": 5327, "labels": "Social,Social", "content": "Hi,"}, "context_segments": [{"sid": 864, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "Date:       March 2015"}]}, {"current_segment": {"sid": 7790, "labels": "Question,InformationProviding,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nLet's rephrase:  Any argument *against* SHA3-512?\n\n(yes, jetlag stinks:)\n\nSHA3-512 is slow in order to attain the meaninglessly high 512-bit\npreimage resistance, whereas SHAKE256-512 provides `only' 256-bit\npreimage resistance at much higher speed.  Both provide only 256-bit\ncollision resistance.\n\nNote that draft-irtf-cfrg-eddsa doesn't use SHA3-512 at all, whereas\nit does use SHAKE256 for several purposes."}, "context_segments": [{"sid": 864, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "Date:       March 2015"}, {"sid": 5327, "labels": "Social,Social", "content": "Hi,"}]}, {"current_segment": {"sid": 865, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "A new Request for Comments is now available in online RFC libraries.\n"}, "context_segments": []}, {"current_segment": {"sid": 5328, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "\nInstead of using mechanisms such as HTTP or RTSP DESCRIBE to retrieve\nthe SDP, I've seen some implementations with SDP in the response of\nthe RTSP SETUP."}, "context_segments": [{"sid": 865, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "A new Request for Comments is now available in online RFC libraries.\n"}]}, {"current_segment": {"sid": 866, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nRFC 7478\n\nTitle:      Web Real-Time Communication Use Cases\nand Requirements\nAuthor:     C. Holmberg, S. Hakansson, G. Eriksson\nStatus:     Informational\nStream:     IETF"}, "context_segments": []}, {"current_segment": {"sid": 5329, "labels": "Question,Question,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nIs this allowed in RTSP?"}, "context_segments": [{"sid": 866, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nRFC 7478\n\nTitle:      Web Real-Time Communication Use Cases\nand Requirements\nAuthor:     C. Holmberg, S. Hakansson, G. Eriksson\nStatus:     Informational\nStream:     IETF"}]}, {"current_segment": {"sid": 5330, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ContextSetting", "content": "\nMedia initialization is a requirement for any RTSP-based system,\nbut the RTSP specification does not dictate that this must be done\nvia the DESCRIBE method. There are three ways that an RTSP client\nmay receive initialization information:\n\n* via RTSP's DESCRIBE method;\n* via some other protocol (HTTP, email attachment, etc.);\n* via the command line or standard input (thus working as a browser\nhelper application launched with an SDP file or other media\ninitialization format).\n\nRTSP's SETUP is not RTSP's DESCRIBE. It is not some other protocol, and it is\nnot the command line or standard input. Hence it is not an allowed way\nto \"receive initialization information\" in my understanding.\n"}, "context_segments": [{"sid": 866, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nRFC 7478\n\nTitle:      Web Real-Time Communication Use Cases\nand Requirements\nAuthor:     C. Holmberg, S. Hakansson, G. Eriksson\nStatus:     Informational\nStream:     IETF"}, {"sid": 5329, "labels": "Question,Question,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nIs this allowed in RTSP?"}]}, {"current_segment": {"sid": 867, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "Mailbox:    christer.holmberg@ericsson.com,\nstefan.lk.hakansson@ericsson.com,\ngoran.ap.eriksson@ericsson.com\nPages:      28\nCharacters: 64824\nUpdates/Obsoletes/SeeAlso:   None\n\nI-D Tag:    draft-ietf-rtcweb-use-cases-and-requirements-16.txt\n\nURL:        https://www.rfc-editor.org/info/rfc7478\n\nThis document describes web-based real-time communication use cases.\nRequirements on the browser functionality are derived from the use\ncases.\n\nThis document was developed in an initial phase of the work with\nrather minor updates at later stages.  It has not really served as a\ntool in deciding features or scope for the WG's efforts so far.  It\nis being published to record the early conclusions of the WG.  It\nwill not be used as a set of rigid guidelines that specifications and\nimplementations will be held to in the future.\n\nThis document is a product of the Real-Time Communication in WEB-browsers Working Group of the IETF.\n"}, "context_segments": []}, {"current_segment": {"sid": 868, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nINFORMATIONAL: This memo provides information for the Internet community.\nIt does not specify an Internet standard of any kind. Distribution of\nthis memo is unlimited.\n\nThis announcement is sent to the IETF-Announce and rfc-dist lists.\nTo subscribe or unsubscribe, see\nhttps://www.ietf.org/mailman/listinfo/ietf-announce\nhttps://mailman.rfc-editor.org/mailman/listinfo/rfc-dist\n\nFor searching the RFC series, see https://www.rfc-editor.org/search\nFor downloading RFCs, see https://www.rfc-editor.org/rfc.html\n\nRequests for special distribution should be addressed to either the\nauthor of the RFC in question, or to rfc-editor@rfc-editor.org.  Unless\nspecifically noted otherwise on the RFC itself, all RFCs are for\nunlimited distribution.\n"}, "context_segments": []}, {"current_segment": {"sid": 869, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe RFC Editor Team\nAssociation Management Solutions, LLC"}, "context_segments": []}, {"current_segment": {"sid": 4119, "labels": "InformationProviding,InformationProviding", "content": "Rules for CCS messages in record layer are missing, allowing in theory sending\nmultiple CCS messages in a single record layer"}, "context_segments": []}, {"current_segment": {"sid": 4120, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nI've proposed a PR that requires the same kind of processing rules for CCS and\nAlert messages: https://github.com/tlswg/tls13-spec/pull/1146 - no\nfragmentation and no coalescing. That automatically solves the empty CCS\nrecord case."}, "context_segments": []}, {"current_segment": {"sid": 4121, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nhttps://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#record-protocol\n\n\"An implementation may receive an unencrypted record of type\nchange_cipher_spec consisting of the single byte value 0x01 at any time\nafter the first ClientHello message has been sent or received and before\nthe peer\u2019s Finished message has been received and MUST simply drop it\nwithout further processing. Note that this record may appear at a point at\nthe handshake where the implementation is expecting protected records and\nso it is necessary to detect this condition prior to attempting to\ndeprotect the record. An implementation which receives any other\nchange_cipher_spec value...\"\n\nAnd of course Alert already has this rule:\n\"Alert messages (Section 6\n<https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#alert-protocol>)\nMUST NOT be fragmented across records and multiple Alert messages MUST NOT\nbe coalesced into a single TLSPlaintext record. In other words, a record\nwith an Alert type MUST contain exactly one message.\"\n\n-Ekr\n"}, "context_segments": [{"sid": 4120, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nI've proposed a PR that requires the same kind of processing rules for CCS and\nAlert messages: https://github.com/tlswg/tls13-spec/pull/1146 - no\nfragmentation and no coalescing. That automatically solves the empty CCS\nrecord case."}]}, {"current_segment": {"sid": 950, "labels": "InformationProviding,ContextSetting", "content": "I finally had a chance to read over"}, "context_segments": []}, {"current_segment": {"sid": 5351, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "In section 16.4 (\"Live Media Presentation Using Multicast\") there's the\nfollowing \"Editor's Note\"):"}, "context_segments": [{"sid": 950, "labels": "InformationProviding,ContextSetting", "content": "I finally had a chance to read over"}]}, {"current_segment": {"sid": 7895, "labels": "Social,Social", "content": "\nDear all,\n"}, "context_segments": [{"sid": 950, "labels": "InformationProviding,ContextSetting", "content": "I finally had a chance to read over"}, {"sid": 5351, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "In section 16.4 (\"Live Media Presentation Using Multicast\") there's the\nfollowing \"Editor's Note\"):"}]}, {"current_segment": {"sid": 951, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nRequiring that in most or all cases these two flow types be on unique\n5 tuples would give smarter queue management techniques on routers\n(like sfq, or sqf (deployed at FT), or fq_codel (deployed at\nfree.fr)), a fighting chance. In particular it gives voice much higher\nprobability for drop-and-delay free behavior, and analyzing the delta\nin drops and delay between a separate voice tuple and video tuple\ncould provide insight as to the congestion in the system."}, "context_segments": []}, {"current_segment": {"sid": 5352, "labels": "Question,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIs this example really valid? In what situations does it make sense to do a\nsetup to a multicast distribution channel, and also issue PLAY requests?"}, "context_segments": [{"sid": 951, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nRequiring that in most or all cases these two flow types be on unique\n5 tuples would give smarter queue management techniques on routers\n(like sfq, or sqf (deployed at FT), or fq_codel (deployed at\nfree.fr)), a fighting chance. In particular it gives voice much higher\nprobability for drop-and-delay free behavior, and analyzing the delta\nin drops and delay between a separate voice tuple and video tuple\ncould provide insight as to the congestion in the system."}]}, {"current_segment": {"sid": 7896, "labels": "Agreement,Agreement,InformationProviding", "content": "\n+1\n"}, "context_segments": [{"sid": 951, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nRequiring that in most or all cases these two flow types be on unique\n5 tuples would give smarter queue management techniques on routers\n(like sfq, or sqf (deployed at FT), or fq_codel (deployed at\nfree.fr)), a fighting chance. In particular it gives voice much higher\nprobability for drop-and-delay free behavior, and analyzing the delta\nin drops and delay between a separate voice tuple and video tuple\ncould provide insight as to the congestion in the system."}, {"sid": 5352, "labels": "Question,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIs this example really valid? In what situations does it make sense to do a\nsetup to a multicast distribution channel, and also issue PLAY requests?"}]}, {"current_segment": {"sid": 952, "labels": "NeutralResponse,InformationProviding,NeutralResponse,ProposeAction", "content": "\nthat's why we want to couple the congestion controllers in such cases. no need for queuing to regulate fairness, you do it in the sender!\n"}, "context_segments": [{"sid": 951, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nRequiring that in most or all cases these two flow types be on unique\n5 tuples would give smarter queue management techniques on routers\n(like sfq, or sqf (deployed at FT), or fq_codel (deployed at\nfree.fr)), a fighting chance. In particular it gives voice much higher\nprobability for drop-and-delay free behavior, and analyzing the delta\nin drops and delay between a separate voice tuple and video tuple\ncould provide insight as to the congestion in the system."}, {"sid": 5352, "labels": "Question,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIs this example really valid? In what situations does it make sense to do a\nsetup to a multicast distribution channel, and also issue PLAY requests?"}, {"sid": 7896, "labels": "Agreement,Agreement,InformationProviding", "content": "\n+1\n"}]}, {"current_segment": {"sid": 953, "labels": "Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIn current implementations, is it possible to force flows onto\ndifferent tuples? What are the other flaws in suggesting or requiring\na different tuple?"}, "context_segments": []}, {"current_segment": {"sid": 5353, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nPlease remove this \"Editor's Note\".  As I noted in a message to this\nmailing list back in August:"}, "context_segments": [{"sid": 953, "labels": "Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIn current implementations, is it possible to force flows onto\ndifferent tuples? What are the other flaws in suggesting or requiring\na different tuple?"}]}, {"current_segment": {"sid": 7897, "labels": "Agreement,InformationProviding,Agreement", "content": "+1\n\nSent\u00a0from\u00a0my\u00a0BlackBerry\u00a010\u00a0smartphone\u00a0on\u00a0the Verizon\u00a0Wireless\u00a04G\u00a0LTE\u00a0network.\nOriginal Message"}, "context_segments": [{"sid": 953, "labels": "Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIn current implementations, is it possible to force flows onto\ndifferent tuples? What are the other flaws in suggesting or requiring\na different tuple?"}, {"sid": 5353, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nPlease remove this \"Editor's Note\".  As I noted in a message to this\nmailing list back in August:"}]}, {"current_segment": {"sid": 954, "labels": "Answer,InformationProviding,Answer,ContextSetting,ProposeAction", "content": "\nThere are quite a few ways to achieve this, depending on your\nconfiguration.  All will require some fair amount of SDP cracking.\n\nIf you have browsers at both ends, try creating two RTCPeerConnection\nobjects on each, and treat one pair as audio and the other video.  You\ncan do this by telling the answerer that audio (or video) is not\nwanted in the offer (set port zero for the unwanted component).\noffer.sdp.replace(/m=audio \\d+ /, 'm=audio 0 ') should be done before\nsending the offer out (I don't know whether you can pass this to\nsetLocalDescription safely, so I wouldn't)."}, "context_segments": [{"sid": 953, "labels": "Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIn current implementations, is it possible to force flows onto\ndifferent tuples? What are the other flaws in suggesting or requiring\na different tuple?"}, {"sid": 5353, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nPlease remove this \"Editor's Note\".  As I noted in a message to this\nmailing list back in August:"}, {"sid": 7897, "labels": "Agreement,InformationProviding,Agreement", "content": "+1\n\nSent\u00a0from\u00a0my\u00a0BlackBerry\u00a010\u00a0smartphone\u00a0on\u00a0the Verizon\u00a0Wireless\u00a04G\u00a0LTE\u00a0network.\nOriginal Message"}]}, {"current_segment": {"sid": 5354, "labels": "Question,InformationProviding,Agreement,Apologising,Question,InformationProviding,Agreement,ContextSetting,ProposeAction,Apologising,InformationSeeking,Social", "content": "Yes, I don't see a big problem with removing the editors note. However\nthe question was also on a more technical level rather than on the\nprinciple level.\n\nSo have you looked at the actual example and think it is correct?\n\nI am also sorry that I didn't manage to edit the draft to the shape I\nhave desired before the meeting. There are a number of open issues not\nedited in, and this editorial note, is clearly one things that needs to\nbe concluded.\n"}, "context_segments": [{"sid": 953, "labels": "Question,Question,ClarificationElicitation,ExtensionOfPrevious,ContextSetting,InformationSeeking,InformationProviding", "content": "\nIn current implementations, is it possible to force flows onto\ndifferent tuples? What are the other flaws in suggesting or requiring\na different tuple?"}, {"sid": 5353, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nPlease remove this \"Editor's Note\".  As I noted in a message to this\nmailing list back in August:"}, {"sid": 7897, "labels": "Agreement,InformationProviding,Agreement", "content": "+1\n\nSent\u00a0from\u00a0my\u00a0BlackBerry\u00a010\u00a0smartphone\u00a0on\u00a0the Verizon\u00a0Wireless\u00a04G\u00a0LTE\u00a0network.\nOriginal Message"}, {"sid": 954, "labels": "Answer,InformationProviding,Answer,ContextSetting,ProposeAction", "content": "\nThere are quite a few ways to achieve this, depending on your\nconfiguration.  All will require some fair amount of SDP cracking.\n\nIf you have browsers at both ends, try creating two RTCPeerConnection\nobjects on each, and treat one pair as audio and the other video.  You\ncan do this by telling the answerer that audio (or video) is not\nwanted in the offer (set port zero for the unwanted component).\noffer.sdp.replace(/m=audio \\d+ /, 'm=audio 0 ') should be done before\nsending the offer out (I don't know whether you can pass this to\nsetLocalDescription safely, so I wouldn't)."}]}, {"current_segment": {"sid": 956, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\n(note I'm not suggesting bulk data traffic get unique 5 tuples per flow)"}, "context_segments": []}, {"current_segment": {"sid": 5355, "labels": "Question,InformationProviding,Question,InformationProviding,ExtensionOfPrevious,InformationSeeking", "content": "\nWhy did this even arise as an issue?  RTSP *is definitely* useful for\nplaying multicast sessions.  In particular, the RTSP \"DESCRIBE\" command is\nan excellent way for a client to get the SDP description for a multicast\nsession (even though, in this case, the subsequent \"SETUP\" and \"PLAY\"\ncommands turn out to be effectively no-ops)."}, "context_segments": [{"sid": 956, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\n(note I'm not suggesting bulk data traffic get unique 5 tuples per flow)"}]}, {"current_segment": {"sid": 957, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSome comments on section 3"}, "context_segments": []}, {"current_segment": {"sid": 5356, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nA media player client can play a stream using a \"rtsp://\" URL, without\nhaving to know in advance whether the stream is multicast or unicast.  It\nwould be silly to require that a media player use one mechanism for playing\nmulticast streams, and another for playing unicast streams."}, "context_segments": [{"sid": 957, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSome comments on section 3"}]}, {"current_segment": {"sid": 958, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nA.  If possible, it should also share information and adaptation\nwith other non-RTP flows between the same endpoints, such as\na WebRTC data channel"}, "context_segments": []}, {"current_segment": {"sid": 5357, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious,ContextSetting,ProposeAction,Social", "content": "\nIt baffles me that so many people seem to think that RTSP is for unicast\nstreams only.  Please don't perpetuate this myth by removing the multicast\nexample from the spec."}, "context_segments": [{"sid": 958, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nA.  If possible, it should also share information and adaptation\nwith other non-RTP flows between the same endpoints, such as\na WebRTC data channel"}]}, {"current_segment": {"sid": 959, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nI might argue that looking at the traffic on the whole browser would\nbe good. The browser deprioritizing background web page loads while a\nwebrtc session is active would be useful in the presence of\ncongestion."}, "context_segments": []}, {"current_segment": {"sid": 5358, "labels": "InformationProviding", "content": "\nRoss (who has implemented and deplayed several multicast streaming\napplications with built-in RTSP servers)"}, "context_segments": [{"sid": 959, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nI might argue that looking at the traffic on the whole browser would\nbe good. The browser deprioritizing background web page loads while a\nwebrtc session is active would be useful in the presence of\ncongestion."}]}, {"current_segment": {"sid": 960, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nB.  The most correlated bandwidth usage would be with other\nflows on the same 5-tuple, but there may be use in\ncoordinating measurement and control of the local link(s)."}, "context_segments": []}, {"current_segment": {"sid": 5359, "labels": "InformationProviding", "content": "\nmmusic mailing list\nmmusic@ietf.org\nhttps://www1.ietf.org/mailman/listinfo/mmusic"}, "context_segments": [{"sid": 960, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nB.  The most correlated bandwidth usage would be with other\nflows on the same 5-tuple, but there may be use in\ncoordinating measurement and control of the local link(s)."}]}, {"current_segment": {"sid": 961, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nAs I note above you can get more congestion information from a pair of\nflows than one."}, "context_segments": []}, {"current_segment": {"sid": 5360, "labels": "ProposeAction,Social,ContextSetting,Social,InformationProviding", "content": "Hi Ross,\n\nSee below:\n"}, "context_segments": [{"sid": 961, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nAs I note above you can get more congestion information from a pair of\nflows than one."}]}, {"current_segment": {"sid": 962, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nC.  Use of information about previous flows, especially on the\nsame 5-tuple, may be useful input to the algorithm,\nespecially to startup performance of a new flow."}, "context_segments": []}, {"current_segment": {"sid": 963, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nA 4 tuple may also provide insight, or even two (ip to ip)"}, "context_segments": []}, {"current_segment": {"sid": 964, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\n4B.  When additional input signals such as ECN are available,\nthey should be utilized if possible."}, "context_segments": []}, {"current_segment": {"sid": 965, "labels": "Question,ExtensionOfPrevious,InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nI would not mind seeing an implementation that negotiated ECN, but it\nis out of scope on this document. Is it discussed elsewhere, or\nimplemented elsewhere? Is an ipv6 version of webrtc implemented\nanywhere? I am under the impression it can be made to work in\nfreeswitch..."}, "context_segments": []}, {"current_segment": {"sid": 966, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\n6.   Flows managed by this algorithm and flows competed against at a\nbottleneck may have different DSCP markings depending on the\ntype of traffic.  A particular bottleneck or section of the\nnetwork path may or may not honor these markings."}, "context_segments": []}, {"current_segment": {"sid": 967, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nAnd in fact, may not preserve them. It would be good to be aware\nif they are being preserved in both directions and mark appropriately,\nand also to probe if packets with particular classifications are being\ndropped\nor treated weirdly. This includes detecting for e2e ECN awareness."}, "context_segments": []}, {"current_segment": {"sid": 968, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nA.  In WebRTC, a division of packets into 4 classes is\nenvisioned in order of priority: faster-than-audio, audio,\nvideo, best-effort, and bulk-transfer.  Typically the flows\nmanaged by this algorithm would be audio or video in that\nheirarchy, and feedback flows would be faster-than-audio."}, "context_segments": []}, {"current_segment": {"sid": 969, "labels": "Question,InformationSeeking,Question,ClarificationElicitation,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nfaster-than-audio? RTCP Signalling? what?"}, "context_segments": []}, {"current_segment": {"sid": 970, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nI still have to think about RTCP signalling as it's very hard to pick\nout of the data I have, if it's even in there."}, "context_segments": []}, {"current_segment": {"sid": 971, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\n10.  The algorithm should quickly adapt to initial network conditions\nat the start of a flow.  This should occur both if the initial\nbandwidth is above or below the bottleneck bandwidth."}, "context_segments": []}, {"current_segment": {"sid": 972, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nThe algorithm I looked over has particularly bad behavior on taking\nback bandwidth after it has been used up by another flow, taking many\nseconds to ramp up. I like the idea of periodically probing to ratchet\nup to a higher rate, with a slow-start-like burst (a higher resolution\nframe sent in parallel with lower rate data).  But in terms of the\nrequirements, adding a"}, "context_segments": []}, {"current_segment": {"sid": 973, "labels": "ExtensionOfPrevious,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nThe algorithm should quickly recover from a loss in bandwidth,\nrecovering voice first, if possible."}, "context_segments": []}, {"current_segment": {"sid": 974, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nhttp://tools.ietf.org/html/draft-ietf-rmcat-cc-requirements-01"}, "context_segments": []}, {"current_segment": {"sid": 975, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nand also work at reproducing some of the difficulties present in the\ncurrent implementation of chrome in light of the two papers presented\nat the last ietf on google congestion control. I went through tons of\ntests and packet captures that pretty much reproduced the legion of\nproblems documented in"}, "context_segments": []}, {"current_segment": {"sid": 976, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nhttps://speakerdeck.com/vr000m/evaluating-googles-congestion-control-for-webrtc\nand the other paper presented at ietf..."}, "context_segments": []}, {"current_segment": {"sid": 977, "labels": "ExtensionOfPrevious,InformationSeeking,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nand also fed webrtc traffic through the fq_codel and pie queue\nmanagement systems (with pretty good results). I have tons of captures\nfrom each experiment if anyone wants them."}, "context_segments": []}, {"current_segment": {"sid": 978, "labels": "ExtensionOfPrevious,InformationSeeking,ExtensionOfPrevious,ContextSetting,ProposeAction,Apologising,InformationProviding,Social", "content": "\nSo, I have some comments on this requirements document. (I'm new to\npaying attention on rmcat, so a few of my questions are probably\nanswered by some document I haven't read yet. Steers appreciated. for\nall I know I'm on the wrong mailing lists too. Sorry)"}, "context_segments": []}, {"current_segment": {"sid": 979, "labels": "ExtensionOfPrevious,InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction", "content": "\nIn particular, the flows I was looking at multiplexed voice and video\non the same 5 tuple. I am curious as to the justification for this, as\nvoice (without silence suppression) is isochronous and video is not.\n(is silence suppression used in webrtc?)"}, "context_segments": []}, {"current_segment": {"sid": 980, "labels": "ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nTo me, multiplexing these two very different flows on the same ports\nis not a good idea except under extreme port pressure, and not useful\nin ipv6 or in non-natted environments at all. Even in a natted\nenvironment, saving a single port is a false savings as (for example)\ndns lookups punch dozens of holes through nat on a regular basis."}, "context_segments": []}, {"current_segment": {"sid": 6871, "labels": "Social", "content": "Hi Magnus:"}, "context_segments": []}, {"current_segment": {"sid": 6872, "labels": "InformationProviding,ContextSetting", "content": "\nA belated reply is inlined."}, "context_segments": []}, {"current_segment": {"sid": 4386, "labels": "Social", "content": "Hello,"}, "context_segments": []}, {"current_segment": {"sid": 6904, "labels": "Social,Social", "content": "Hi,"}, "context_segments": [{"sid": 4386, "labels": "Social", "content": "Hello,"}]}, {"current_segment": {"sid": 4387, "labels": "InformationProviding,InformationProviding", "content": "\nLooking at the history of TLS implementation attacks we see that many\nresult from the standard not strictly enough prescribing behavior,\nparticularly of the state machine. This draft does not actually fix\nthis problem, but continues to present example flows without\nexplicitly requiring them to be the only possible flows."}, "context_segments": []}, {"current_segment": {"sid": 6905, "labels": "InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction", "content": "\nI have reviewed this document as part of the security directorate's ongoing effort to review all IETF documents being processed by the IESG.  These comments were written primarily for the benefit of the security area directors.  Document editors and WG chairs should treat these comments just like any other last call comments."}, "context_segments": [{"sid": 4387, "labels": "InformationProviding,InformationProviding", "content": "\nLooking at the history of TLS implementation attacks we see that many\nresult from the standard not strictly enough prescribing behavior,\nparticularly of the state machine. This draft does not actually fix\nthis problem, but continues to present example flows without\nexplicitly requiring them to be the only possible flows."}]}, {"current_segment": {"sid": 4388, "labels": "Question,InformationProviding,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of"}, "context_segments": [{"sid": 4387, "labels": "InformationProviding,InformationProviding", "content": "\nLooking at the history of TLS implementation attacks we see that many\nresult from the standard not strictly enough prescribing behavior,\nparticularly of the state machine. This draft does not actually fix\nthis problem, but continues to present example flows without\nexplicitly requiring them to be the only possible flows."}, {"sid": 6905, "labels": "InformationProviding,ProposeAction,InformationProviding,ContextSetting,ProposeAction", "content": "\nI have reviewed this document as part of the security directorate's ongoing effort to review all IETF documents being processed by the IESG.  These comments were written primarily for the benefit of the security area directors.  Document editors and WG chairs should treat these comments just like any other last call comments."}]}, {"current_segment": {"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, "context_segments": []}, {"current_segment": {"sid": 6906, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nThis is a re-review as I initially reviewed version -35.  I noted there that this is a very long document and I was only able to review certain sections of that document.  The subsequent revisions have not shortened this document any.  Rather than attempt a new review, I checked the diffs from the version that I had previously reviewed up to this version."}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}]}, {"current_segment": {"sid": 4390, "labels": "InformationProviding", "content": "\nAt no point is it stated that only"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 6906, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nThis is a re-review as I initially reviewed version -35.  I noted there that this is a very long document and I was only able to review certain sections of that document.  The subsequent revisions have not shortened this document any.  Rather than attempt a new review, I checked the diffs from the version that I had previously reviewed up to this version."}]}, {"current_segment": {"sid": 6907, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nAgain, I find the document to be very comprehensive and well written.  I can find no apparent security issues with this document."}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}]}, {"current_segment": {"sid": 4391, "labels": "Question,Agreement,Disagreement,NeutralResponse,Question,InformationProviding,Agreement,Disagreement,InformationSeeking", "content": "\nActually the text does say something here:\nhttps://tlswg.github.io/tls13-spec/#handshake-protocol\n\n\"Protocol messages MUST be sent in the order defined below (and shown in\nthe diagrams in Section 2\n<https://tlswg.github.io/tls13-spec/#protocol-overview>). A peer which\nreceives a handshake message in an unexpected order MUST abort the\nhandshake with an \u201cunexpected_message\u201d alert. Unneeded handshake messages\nare omitted, however.\"\n\nHowever, this text was also in 5246, so I think there's a fair argument\nthat it's not strong enough. I'm not quite sure how to make it better.\nSuggestions?\n"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 6907, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nAgain, I find the document to be very comprehensive and well written.  I can find no apparent security issues with this document."}]}, {"current_segment": {"sid": 4392, "labels": "Answer,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nSo I was reading in order, so I saw the diagrams first, which seemed\nlike examples and then missed this sentence in the draft. Maybe a\nsentence in section 2 would help?\n"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 6907, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nAgain, I find the document to be very comprehensive and well written.  I can find no apparent security issues with this document."}, {"sid": 4391, "labels": "Question,Agreement,Disagreement,NeutralResponse,Question,InformationProviding,Agreement,Disagreement,InformationSeeking", "content": "\nActually the text does say something here:\nhttps://tlswg.github.io/tls13-spec/#handshake-protocol\n\n\"Protocol messages MUST be sent in the order defined below (and shown in\nthe diagrams in Section 2\n<https://tlswg.github.io/tls13-spec/#protocol-overview>). A peer which\nreceives a handshake message in an unexpected order MUST abort the\nhandshake with an \u201cunexpected_message\u201d alert. Unneeded handshake messages\nare omitted, however.\"\n\nHowever, this text was also in 5246, so I think there's a fair argument\nthat it's not strong enough. I'm not quite sure how to make it better.\nSuggestions?\n"}]}, {"current_segment": {"sid": 4393, "labels": "InformationProviding", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}]}, {"current_segment": {"sid": 4394, "labels": "Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision", "content": "\nThe server is forbidden to send multiple HRRs and the client is required\nto enforce it. See:\n\nhttps://tlswg.github.io/tls13-spec/#hello-retry-request\n\nI agree that we don't require the server to behave this way. I can fix the\ndraft to say this.\n"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}]}, {"current_segment": {"sid": 4395, "labels": "Agreement,NeutralResponse,InformationProviding,Agreement", "content": "\nThat sounds good. The more we can turn bugs into ones that violate the\nspec, the easier it will be to get them fixed. (Hopefully)\n"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 4394, "labels": "Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision", "content": "\nThe server is forbidden to send multiple HRRs and the client is required\nto enforce it. See:\n\nhttps://tlswg.github.io/tls13-spec/#hello-retry-request\n\nI agree that we don't require the server to behave this way. I can fix the\ndraft to say this.\n"}]}, {"current_segment": {"sid": 4396, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nfailure to interoperate >> violate the spec\n\nI know that NSS rejects multiple HRRs.  I expect that Boring does too\n(couldn't be bothered to check).  That means you have to be even\nlazier than I am with interop testing to make this mistake :)"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 4394, "labels": "Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision", "content": "\nThe server is forbidden to send multiple HRRs and the client is required\nto enforce it. See:\n\nhttps://tlswg.github.io/tls13-spec/#hello-retry-request\n\nI agree that we don't require the server to behave this way. I can fix the\ndraft to say this.\n"}, {"sid": 4395, "labels": "Agreement,NeutralResponse,InformationProviding,Agreement", "content": "\nThat sounds good. The more we can turn bugs into ones that violate the\nspec, the easier it will be to get them fixed. (Hopefully)\n"}]}, {"current_segment": {"sid": 4397, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nA conforming client will not produce Client Hellos that trigger\nmultiple HRRs: it will listen the first time.\n"}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 4394, "labels": "Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision", "content": "\nThe server is forbidden to send multiple HRRs and the client is required\nto enforce it. See:\n\nhttps://tlswg.github.io/tls13-spec/#hello-retry-request\n\nI agree that we don't require the server to behave this way. I can fix the\ndraft to say this.\n"}, {"sid": 4395, "labels": "Agreement,NeutralResponse,InformationProviding,Agreement", "content": "\nThat sounds good. The more we can turn bugs into ones that violate the\nspec, the easier it will be to get them fixed. (Hopefully)\n"}, {"sid": 4396, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nfailure to interoperate >> violate the spec\n\nI know that NSS rejects multiple HRRs.  I expect that Boring does too\n(couldn't be bothered to check).  That means you have to be even\nlazier than I am with interop testing to make this mistake :)"}]}, {"current_segment": {"sid": 4399, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n\"Man is born free, but everywhere he is in chains\".\n--Rousseau."}, "context_segments": [{"sid": 4389, "labels": "Question,ContextSetting,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nFor example, consider HelloRetryRequest. Do servers only send one of\nthese per connection, or can it be resent multiple times? Obviously\nthere is a DoS possibility here, but I do not see where this behavior\nis explicitly defined. I think we should require that the server only\never sends one HelloRetryRequest, and then terminates the connection\nif the ClientHello is unacceptable. At no point is it stated that only\nthe example flows should be supported. I would prefer more clarity\nabout what messages are to be expected when, especially with alerts."}, {"sid": 4394, "labels": "Agreement,NeutralResponse,StateDecision,InformationProviding,Agreement,StateDecision", "content": "\nThe server is forbidden to send multiple HRRs and the client is required\nto enforce it. See:\n\nhttps://tlswg.github.io/tls13-spec/#hello-retry-request\n\nI agree that we don't require the server to behave this way. I can fix the\ndraft to say this.\n"}, {"sid": 4395, "labels": "Agreement,NeutralResponse,InformationProviding,Agreement", "content": "\nThat sounds good. The more we can turn bugs into ones that violate the\nspec, the easier it will be to get them fixed. (Hopefully)\n"}, {"sid": 4396, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nfailure to interoperate >> violate the spec\n\nI know that NSS rejects multiple HRRs.  I expect that Boring does too\n(couldn't be bothered to check).  That means you have to be even\nlazier than I am with interop testing to make this mistake :)"}]}, {"current_segment": {"sid": 4400, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to\nrequire support in TLS 1.2 for this as a consequence of its\ndescription of the fallback mode. The mandated use of uncompressed\npoints invites easy wrong-curve attacks: mandating support and use for\ncompressed points would solve this problem. I think at minimum we\nshould fix the text to make clear what we mean about TLS 1.2."}, "context_segments": []}, {"current_segment": {"sid": 4401, "labels": "ClarificationElicitation,Disagreement,Question,InformationProviding,Disagreement,InformationSeeking", "content": "\nI don't *think* that that's true: can you point to the specific text that\nyou are concerned with?\n"}, "context_segments": [{"sid": 4400, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to\nrequire support in TLS 1.2 for this as a consequence of its\ndescription of the fallback mode. The mandated use of uncompressed\npoints invites easy wrong-curve attacks: mandating support and use for\ncompressed points would solve this problem. I think at minimum we\nshould fix the text to make clear what we mean about TLS 1.2."}]}, {"current_segment": {"sid": 4402, "labels": "Answer,InformationProviding,Answer", "content": "\nIt's the interaction between\nhttps://tlswg.github.io/tls13-spec/#negotiated-groups and the\nstatement that ECDSA needs to be supported with any curve appearing in\nthe supported_groups extension when negotating a TLS 1.2 hello. We\nexplicitly call x25519 an elliptic curve there. Yes, I doubt anyone\nwill end up making an implementation that does this (except by\naccident).\n"}, "context_segments": [{"sid": 4400, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to\nrequire support in TLS 1.2 for this as a consequence of its\ndescription of the fallback mode. The mandated use of uncompressed\npoints invites easy wrong-curve attacks: mandating support and use for\ncompressed points would solve this problem. I think at minimum we\nshould fix the text to make clear what we mean about TLS 1.2."}, {"sid": 4401, "labels": "ClarificationElicitation,Disagreement,Question,InformationProviding,Disagreement,InformationSeeking", "content": "\nI don't *think* that that's true: can you point to the specific text that\nyou are concerned with?\n"}]}, {"current_segment": {"sid": 4403, "labels": "InformationProviding", "content": "\nALPN, resumption, and 0-RTT remain problematic. For instance we see"}, "context_segments": [{"sid": 4400, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to\nrequire support in TLS 1.2 for this as a consequence of its\ndescription of the fallback mode. The mandated use of uncompressed\npoints invites easy wrong-curve attacks: mandating support and use for\ncompressed points would solve this problem. I think at minimum we\nshould fix the text to make clear what we mean about TLS 1.2."}]}, {"current_segment": {"sid": 4404, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nJust as note: Point compression does not completely fix wrong-curve\nattacks.\n\nThe reason is that for Weierstrass curves and the usual square square\nroot algorithm, the \"square roots\" for QNRs, if the code does not check,\ndon't result points on the twist, but all sorts of strange points, on\nvariety of different curves.\n\n(With one-coordinate Montgomery ladder on montgomery curves, the invalid\npoints all map to the twist, which is a single curve and can be arranged\nto have a large prime factor in its order).\n\nOh, and thanks to different message order in TLS 1.3 compared to TLS\n1.2, wrong-curve attacks look more exploitable.\n"}, "context_segments": [{"sid": 4400, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nECDSA cannot be used with x25519 or x448, but the draft seems to\nrequire support in TLS 1.2 for this as a consequence of its\ndescription of the fallback mode. The mandated use of uncompressed\npoints invites easy wrong-curve attacks: mandating support and use for\ncompressed points would solve this problem. I think at minimum we\nshould fix the text to make clear what we mean about TLS 1.2."}]}, {"current_segment": {"sid": 4405, "labels": "InformationProviding,InformationProviding,UnderstandingNegative", "content": "\nALPN, resumption, and 0-RTT remain problematic. For instance we see\nthat 0-RTT data is sent with the same ALPN state when the PSK was\nderived, but this could be different from the ALPN transmitted and\nnegotiated during the handshake, which is explicitly allowed later in\nthe document. I do not understand what is supposed to happen in this\nscenario."}, "context_segments": []}, {"current_segment": {"sid": 4406, "labels": "Question,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nHere's the relevant text:\nhttps://tlswg.github.io/tls13-spec/#early-data-indication\n\n\"If any of these checks fail [ALPN is in the list above] the server MUST\nNOT respond with the extension and must discard all the remaining first\nflight data (thus falling back to 1-RTT). If the client attempts a 0-RTT\nhandshake but the server rejects it, it will generally not have the 0-RTT\nrecord protection keys and must instead trial decrypt each record with the\n1-RTT handshake keys until it finds one that decrypts properly, and then\npick up the handshake from that point.\"\n\nIs there anything else you'd like to see here?\n\nAppendix B removes the text about upper-layer protocol interactions"}, "context_segments": [{"sid": 4405, "labels": "InformationProviding,InformationProviding,UnderstandingNegative", "content": "\nALPN, resumption, and 0-RTT remain problematic. For instance we see\nthat 0-RTT data is sent with the same ALPN state when the PSK was\nderived, but this could be different from the ALPN transmitted and\nnegotiated during the handshake, which is explicitly allowed later in\nthe document. I do not understand what is supposed to happen in this\nscenario."}]}, {"current_segment": {"sid": 4407, "labels": "NeutralResponse,ProposeAction,InformationProviding,ProposeAction", "content": "\nWell, the spec prohibits accepting 0-RTT data if ALPN does not match,\nbut this looks bit error prone to me.\n\nI proposed forcing the ALP to the previous value, and not allowing it\nto be negotiated via any method. This would eliminate this sort of\nedge case check.\n"}, "context_segments": [{"sid": 4405, "labels": "InformationProviding,InformationProviding,UnderstandingNegative", "content": "\nALPN, resumption, and 0-RTT remain problematic. For instance we see\nthat 0-RTT data is sent with the same ALPN state when the PSK was\nderived, but this could be different from the ALPN transmitted and\nnegotiated during the handshake, which is explicitly allowed later in\nthe document. I do not understand what is supposed to happen in this\nscenario."}]}, {"current_segment": {"sid": 4408, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nAppendix B removes the text about upper-layer protocol interactions\nwith 0-RTT I provided, merely discussing the API. I think this is a\nmistake: how 0-RTT should be used safely depends on the upper-layer\nprotocol, and can be complex. API guidance is not enough."}, "context_segments": []}, {"current_segment": {"sid": 4409, "labels": "Question,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nThis ended up in the main text:\nhttps://tlswg.github.io/tls13-spec/#zero-rtt-data\n\n\"Protocols MUST NOT use 0-RTT data without a profile that defines its use.\nThat profile needs to identify which messages or interactions are safe to\nuse with 0-RTT. In addition, to avoid accidental misuse, implementations\nSHOULD NOT enable 0-RTT unless specifically requested. Special functions\nfor 0-RTT data are RECOMMENDED to ensure that an application is always\naware that it is sending or receiving data that might be replayed.\"\n\nIs this missing pieces you think we need?\n"}, "context_segments": [{"sid": 4408, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nAppendix B removes the text about upper-layer protocol interactions\nwith 0-RTT I provided, merely discussing the API. I think this is a\nmistake: how 0-RTT should be used safely depends on the upper-layer\nprotocol, and can be complex. API guidance is not enough."}]}, {"current_segment": {"sid": 4410, "labels": "Answer,Thanking,InformationProviding,Thanking,Social", "content": "\nYes, thanks for pointing out where I missed it."}, "context_segments": [{"sid": 4408, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nAppendix B removes the text about upper-layer protocol interactions\nwith 0-RTT I provided, merely discussing the API. I think this is a\nmistake: how 0-RTT should be used safely depends on the upper-layer\nprotocol, and can be complex. API guidance is not enough."}, {"sid": 4409, "labels": "Question,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nThis ended up in the main text:\nhttps://tlswg.github.io/tls13-spec/#zero-rtt-data\n\n\"Protocols MUST NOT use 0-RTT data without a profile that defines its use.\nThat profile needs to identify which messages or interactions are safe to\nuse with 0-RTT. In addition, to avoid accidental misuse, implementations\nSHOULD NOT enable 0-RTT unless specifically requested. Special functions\nfor 0-RTT data are RECOMMENDED to ensure that an application is always\naware that it is sending or receiving data that might be replayed.\"\n\nIs this missing pieces you think we need?\n"}]}, {"current_segment": {"sid": 4411, "labels": "InformationProviding", "content": "\n\"Man is born free, but everywhere he is in chains\".\n--Rousseau."}, "context_segments": [{"sid": 4408, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nAppendix B removes the text about upper-layer protocol interactions\nwith 0-RTT I provided, merely discussing the API. I think this is a\nmistake: how 0-RTT should be used safely depends on the upper-layer\nprotocol, and can be complex. API guidance is not enough."}, {"sid": 4409, "labels": "Question,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nThis ended up in the main text:\nhttps://tlswg.github.io/tls13-spec/#zero-rtt-data\n\n\"Protocols MUST NOT use 0-RTT data without a profile that defines its use.\nThat profile needs to identify which messages or interactions are safe to\nuse with 0-RTT. In addition, to avoid accidental misuse, implementations\nSHOULD NOT enable 0-RTT unless specifically requested. Special functions\nfor 0-RTT data are RECOMMENDED to ensure that an application is always\naware that it is sending or receiving data that might be replayed.\"\n\nIs this missing pieces you think we need?\n"}]}, {"current_segment": {"sid": 4412, "labels": "InformationProviding", "content": "\nThere is still a note about needing a channel binding mechanism in the"}, "context_segments": [{"sid": 4408, "labels": "InformationProviding,InformationProviding,ProposeAction", "content": "\nAppendix B removes the text about upper-layer protocol interactions\nwith 0-RTT I provided, merely discussing the API. I think this is a\nmistake: how 0-RTT should be used safely depends on the upper-layer\nprotocol, and can be complex. API guidance is not enough."}]}, {"current_segment": {"sid": 4413, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThere is still a note about needing a channel binding mechanism in the\ntext. I think this should be resolved soon so it can be analyzed,\nprobably built on top of the exporter mechanism. Either that, or we\nconsciously punt and remove the note and replace with something else."}, "context_segments": []}, {"current_segment": {"sid": 4414, "labels": "NeutralResponse,ProposeAction,InformationProviding,ProposeAction", "content": "\nThe idea here is that we need a separate draft that just says \"use\nexporters with\nlabel X\". I think we remove the note and see if we can get someone to write\nthat draft.\n"}, "context_segments": [{"sid": 4413, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThere is still a note about needing a channel binding mechanism in the\ntext. I think this should be resolved soon so it can be analyzed,\nprobably built on top of the exporter mechanism. Either that, or we\nconsciously punt and remove the note and replace with something else."}]}, {"current_segment": {"sid": 4415, "labels": "InformationProviding,Agreement", "content": "\nAs for process, I support the idea of having a last call on November"}, "context_segments": [{"sid": 4413, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThere is still a note about needing a channel binding mechanism in the\ntext. I think this should be resolved soon so it can be analyzed,\nprobably built on top of the exporter mechanism. Either that, or we\nconsciously punt and remove the note and replace with something else."}]}, {"current_segment": {"sid": 4416, "labels": "NeutralResponse,ProposeAction,InformationProviding,NeutralResponse", "content": "\nI think this is a replacement for the tls-unique channel binding. While\nthe definition of tls-unique does still make sense for TLS 1.3, the\ndefinition has security problems with TLS 1.2.\n\nThus, need for replacment.\n"}, "context_segments": [{"sid": 4413, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThere is still a note about needing a channel binding mechanism in the\ntext. I think this should be resolved soon so it can be analyzed,\nprobably built on top of the exporter mechanism. Either that, or we\nconsciously punt and remove the note and replace with something else."}]}, {"current_segment": {"sid": 4417, "labels": "InformationProviding", "content": "\n-Ilari"}, "context_segments": [{"sid": 4413, "labels": "ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThere is still a note about needing a channel binding mechanism in the\ntext. I think this should be resolved soon so it can be analyzed,\nprobably built on top of the exporter mechanism. Either that, or we\nconsciously punt and remove the note and replace with something else."}]}, {"current_segment": {"sid": 4418, "labels": "ProposeAction,InformationProviding", "content": "\nAs for process, I support the idea of having a last call on November\n20th, and then completing the security analysis by January 20th (or\nwhatever date was decided). This will prevent a flurry of changes\npotentially breaking things."}, "context_segments": []}, {"current_segment": {"sid": 4419, "labels": "Agreement,InformationProviding", "content": "\nThat's the idea.\n\n-Ekr\n"}, "context_segments": [{"sid": 4418, "labels": "ProposeAction,InformationProviding", "content": "\nAs for process, I support the idea of having a last call on November\n20th, and then completing the security analysis by January 20th (or\nwhatever date was decided). This will prevent a flurry of changes\npotentially breaking things."}]}, {"current_segment": {"sid": 4420, "labels": "Thanking,Thanking,Social", "content": "Watson,\n\nThanks for your comments!\n"}, "context_segments": []}, {"current_segment": {"sid": 4442, "labels": "Social", "content": "Hi all,"}, "context_segments": []}, {"current_segment": {"sid": 6908, "labels": "Social,InformationProviding", "content": "Dear Dr. Henning Schulzrinne, Anup Rao, Rob Lanphier, Magnus Westerlund, Martin Stiemerling:"}, "context_segments": [{"sid": 4442, "labels": "Social", "content": "Hi all,"}]}, {"current_segment": {"sid": 4443, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "\nThe following reviewers have assignments:"}, "context_segments": []}, {"current_segment": {"sid": 6909, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "\nAn IPR disclosure that pertains to your Internet-Draft entitled \"Real Time\nStreaming Protocol 2.0 (RTSP)\" (draft-ietf-mmusic-rfc2326bis) was submitted to\nthe IETF Secretariat on 2014-04-28 and has been posted on the \"IETF Page of\nIntellectual Property Rights Disclosures\"\n(https://datatracker.ietf.org/ipr/2348/). The title of the IPR disclosure is\n\"Huawei Technologies Co.,Ltd's Statement about IPR related to draft-ietf-mmusic-\nrfc2326bis-40.\"\");"}, "context_segments": [{"sid": 4443, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "\nThe following reviewers have assignments:"}]}, {"current_segment": {"sid": 4444, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nFor telechat 2018-08-02"}, "context_segments": []}, {"current_segment": {"sid": 4445, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nReviewer               Type      LC end     Draft\nElwyn Davies           Telechat  2018-02-26 draft-ietf-anima-autonomic-control-plane-16 *\nWassim Haddad          Telechat  2018-05-21 draft-ietf-v6ops-conditional-ras-05 *"}, "context_segments": []}, {"current_segment": {"sid": 4446, "labels": "InformationProviding,ContextSetting", "content": "\nLast calls:"}, "context_segments": []}, {"current_segment": {"sid": 4447, "labels": "InformationProviding,InformationProviding", "content": "\nReviewer               Type      LC end     Draft\nVijay Gurbani          Last Call 2018-06-25 draft-ietf-6man-rfc6434-bis-08\nJouni Korhonen         Last Call 2018-07-09 draft-ietf-netmod-acl-model-19\nMatthew Miller         Last Call 2018-07-30 draft-sahib-451-new-protocol-elements-01\nPete Resnick           Last Call 2018-07-13 draft-ietf-extra-imap-objectid-03\nInes Robles            Last Call 2018-08-13 draft-york-p-charge-info-08\nMeral Shirazipour      Last Call 2018-07-24 draft-ietf-tls-tls13-vectors-06"}, "context_segments": []}, {"current_segment": {"sid": 4448, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n* Other revision previously reviewed\n** This revision already reviewed"}, "context_segments": []}, {"current_segment": {"sid": 4449, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "\nNext in the reviewer rotation:"}, "context_segments": []}, {"current_segment": {"sid": 4450, "labels": "InformationProviding,InformationProviding", "content": "\nRobert Sparks\nDale Worley\nPeter Yee\nJari Arkko\nStewart Bryant\nBrian Carpenter\nElwyn Davies\nLinda Dunbar\nFrancis Dupont\nRoni Even"}, "context_segments": []}, {"current_segment": {"sid": 4451, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "\nThe LC and Telechat review templates are included below:"}, "context_segments": []}, {"current_segment": {"sid": 4452, "labels": "InformationProviding,ProposeAction,InformationProviding", "content": "\n-- Begin LC Template --\nI am the assigned Gen-ART reviewer for this draft. The General Area\nReview Team (Gen-ART) reviews all IETF documents being processed\nby the IESG for the IETF Chair.  Please treat these comments just\nlike any other last call comments."}, "context_segments": []}, {"current_segment": {"sid": 4453, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nFor more information, please see the FAQ at"}, "context_segments": []}, {"current_segment": {"sid": 4454, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>."}, "context_segments": []}, {"current_segment": {"sid": 4455, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nDocument:\nReviewer:\nReview Date:\nIETF LC End Date:\nIESG Telechat date: (if known)"}, "context_segments": []}, {"current_segment": {"sid": 4456, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nSummary:"}, "context_segments": []}, {"current_segment": {"sid": 4457, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nMajor issues:"}, "context_segments": []}, {"current_segment": {"sid": 4458, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nMinor issues:"}, "context_segments": []}, {"current_segment": {"sid": 4459, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nNits/editorial comments:"}, "context_segments": []}, {"current_segment": {"sid": 4460, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n-- End LC Template --"}, "context_segments": []}, {"current_segment": {"sid": 4461, "labels": "InformationProviding,ProposeAction,InformationProviding", "content": "\n-- Begin Telechat Template --\nI am the assigned Gen-ART reviewer for this draft. The General Area\nReview Team (Gen-ART) reviews all IETF documents being processed\nby the IESG for the IETF Chair. Please wait for direction from your\ndocument shepherd or AD before posting a new version of the draft."}, "context_segments": []}, {"current_segment": {"sid": 4462, "labels": "InformationProviding,ProposeAction,ExtensionOfPrevious", "content": "\nFor more information, please see the FAQ at"}, "context_segments": []}, {"current_segment": {"sid": 4463, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n<https://trac.ietf.org/trac/gen/wiki/GenArtfaq>."}, "context_segments": []}, {"current_segment": {"sid": 4464, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nDocument:\nReviewer:\nReview Date:\nIETF LC End Date:\nIESG Telechat date: (if known)"}, "context_segments": []}, {"current_segment": {"sid": 4465, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nSummary:"}, "context_segments": []}, {"current_segment": {"sid": 4466, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nMajor issues:"}, "context_segments": []}, {"current_segment": {"sid": 4467, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nMinor issues:"}, "context_segments": []}, {"current_segment": {"sid": 4468, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nNits/editorial comments:"}, "context_segments": []}, {"current_segment": {"sid": 4469, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n-- End Telechat Template --"}, "context_segments": []}, {"current_segment": {"sid": 1329, "labels": "InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF."}, "context_segments": []}, {"current_segment": {"sid": 5552, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "FWIW, a lot of STB's and VoD servers use the codes and syntax\nspecified in draft-stiemerling-rtsp-announce-01 with RTSP 1.0."}, "context_segments": [{"sid": 1329, "labels": "InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF."}]}, {"current_segment": {"sid": 8038, "labels": "InformationProviding,InformationProviding", "content": "On 10/8/15, 13:55 , \"Cfrg on behalf of Viktor Dukhovni\""}, "context_segments": [{"sid": 1329, "labels": "InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories. This draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF."}, {"sid": 5552, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "FWIW, a lot of STB's and VoD servers use the codes and syntax\nspecified in draft-stiemerling-rtsp-announce-01 with RTSP 1.0."}]}, {"current_segment": {"sid": 1330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt\nPages           : 15\nDate            : 2011-07-04"}, "context_segments": []}, {"current_segment": {"sid": 5553, "labels": "InformationProviding", "content": "Alex,"}, "context_segments": [{"sid": 1330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt\nPages           : 15\nDate            : 2011-07-04"}]}, {"current_segment": {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}, "context_segments": [{"sid": 1330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt\nPages           : 15\nDate            : 2011-07-04"}, {"sid": 5553, "labels": "InformationProviding", "content": "Alex,"}]}, {"current_segment": {"sid": 8040, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nOK. My preference is still SHAKE256."}, "context_segments": [{"sid": 1330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt\nPages           : 15\nDate            : 2011-07-04"}, {"sid": 5553, "labels": "InformationProviding", "content": "Alex,"}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}]}, {"current_segment": {"sid": 8041, "labels": "Question,InformationProviding,NeutralResponse,Social,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\nPresumably because this is a more natural primitive for producing\narbitrary width output.  So you're looking for a \"cleaner\" design?\n\nWhile SHA2-512 expanded to 912 bits is an \"ad-hoc\" construction?\nAnd you want to avoid legacy baggage?\n\nIf so, the choice is between a cleaner forward-looking design, and\na pragmatic what can we use with off-the-shelf code today design.\n\nThe downside of the forward-looking design is that code for both\nSHAKE256 and SHA2-256 would likely be needed in a complete protocol\nimplementation.\n\nI think a relevant question then is how soon would SHAKE256 be\nneeded anyway (because it ends up in TLS ciphersuites or other\nprotocol components in a complete system).\n\nIf SHAKE256 support is a likely near term requirement in many\napplications anyway, then we're not saving anyone code-space with\na SHA2-512 ad-hoc construction.  In the long-run, we may be imposing\na code-space cost, if SHA2-512 is mostly deprecated by SHAKE256\nsome day in the all the other algorithm slots of complete systems.\n\nIs it the group's best guess that SHAKE256 will become \"essential\"\nsoon enough, and ultimately preferred to SHA512?  If so, that seems\nthe wiser long-term choice.\n\nOr is it the case that SHA2-512 is likely with us for the long-haul\n(long enough for EC to be obsoleted by scalable Quantum Computers)?\nIn which case allowing immediate implementation with off-the-shelf\ncode without introducing a new SHAKE256 requirement may be the more\npragmatic option.\n\nViktor."}, "context_segments": [{"sid": 1330, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-01.txt\nPages           : 15\nDate            : 2011-07-04"}, {"sid": 5553, "labels": "InformationProviding", "content": "Alex,"}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}, {"sid": 8040, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nOK. My preference is still SHAKE256."}]}, {"current_segment": {"sid": 1331, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis document describes web based real-time communication use-cases.\nBased on the use-cases, the document also derives requirements\nrelated to the browser, and the API used by web applications to\nrequest and control media stream services provided by the browser."}, "context_segments": []}, {"current_segment": {"sid": 5554, "labels": "Social,InformationProviding", "content": "Hi Magnus."}, "context_segments": [{"sid": 1331, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis document describes web based real-time communication use-cases.\nBased on the use-cases, the document also derives requirements\nrelated to the browser, and the API used by web applications to\nrequest and control media stream services provided by the browser."}]}, {"current_segment": {"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, "context_segments": []}, {"current_segment": {"sid": 5555, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF."}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}]}, {"current_segment": {"sid": 1333, "labels": "ExtensionOfPrevious,InformationProviding", "content": ">4.2.6.  Multiparty video communication\n>4.2.6.1.  Description\n>    In this use case the simple video communication service is extended\n>    by allowing multiparty sessions.  No central server is involved - the\n>    browser of each participant sends and receives streams to and from\n>    all other session participants.  The web application in the browser\n>    of each user is responsible for setting up streams to all receivers.\n>    The audio sent by each participant is a mono stream.  However, in\n>    order to enhance intelligibility, the web application pans the audio\n>    from different participants differently when rendering the audio.\n>    This is done automatically, but users can change how the different\n>    participants are placed in the (virtual) room."}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5555, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Multiparty Multimedia Session Control Working Group of the IETF."}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}]}, {"current_segment": {"sid": 5556, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Real Time Streaming Protocol 2.0 (RTSP)\nAuthor(s)       : H. Schulzrinne, et al.\nFilename        : draft-ietf-mmusic-rfc2326bis-22.txt\nPages           : 282\nDate            : 2009-07-13"}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}]}, {"current_segment": {"sid": 1334, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nNote that this covers the request from Arno for peer-to-peer distribution.\n\nAlso, I would remove the audio is mono reference.  I see no need to add\nthat restriction.\n"}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5556, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Real Time Streaming Protocol 2.0 (RTSP)\nAuthor(s)       : H. Schulzrinne, et al.\nFilename        : draft-ietf-mmusic-rfc2326bis-22.txt\nPages           : 282\nDate            : 2009-07-13"}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}]}, {"current_segment": {"sid": 5557, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 which is defined in RFC 2326."}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}]}, {"current_segment": {"sid": 1336, "labels": "InformationProviding", "content": ">  A URL for this Internet-Draft is:"}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5557, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThis memorandum defines RTSP version 2.0 which obsoletes RTSP version\n1.0 which is defined in RFC 2326."}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}]}, {"current_segment": {"sid": 5558, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}]}, {"current_segment": {"sid": 1337, "labels": "ExtensionOfPrevious,InformationProviding", "content": "http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, "context_segments": [{"sid": 1332, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5558, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe Real Time Streaming Protocol, or RTSP, is an application-level\nprotocol for setup and control of the delivery of data with real-time\nproperties.  RTSP provides an extensible framework to enable\ncontrolled, on-demand delivery of real-time data, such as audio and\nvideo.  Sources of data can include both live data feeds and stored\nclips.  This protocol is intended to control multiple data delivery\nsessions, provide a means for choosing delivery channels such as UDP,\nmulticast UDP and TCP, and provide a means for choosing delivery\nmechanisms based upon RTP (RFC 3550)."}, {"sid": 8039, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "\nEd25519-with-SHA-512 is also used by Apple's HomeKit in iOS:\nhttps://ssl.apple.com/business/docs/iOS_Security_Guide.pdf\n"}]}, {"current_segment": {"sid": 1338, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": []}, {"current_segment": {"sid": 5559, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-22.txt"}, "context_segments": [{"sid": 1338, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}]}, {"current_segment": {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}, "context_segments": [{"sid": 1338, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, {"sid": 5559, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-22.txt"}]}, {"current_segment": {"sid": 8049, "labels": "InformationProviding,NeutralResponse,Question,InformationProviding,Agreement,InformationSeeking", "content": "\nTrue - unless you replace SHA-256 with SHA-3 (which is already\napproved/allowed by NIST for use in \u201cfederal\"-related products, so it\ndoesn\u2019t look like jumping the gun any more).\n\nOn the other hand, while SHA-256 is likely to stay in the code for quite a\nwhile, SHA-3 would have to be added anyway, and probably sooner rather\nthan later. So why not now\u2026\n"}, "context_segments": [{"sid": 1338, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, {"sid": 5559, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-rfc2326bis-22.txt"}, {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}]}, {"current_segment": {"sid": 1339, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis Internet-Draft can be retrieved at:\nftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, "context_segments": []}, {"current_segment": {"sid": 5560, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": [{"sid": 1339, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis Internet-Draft can be retrieved at:\nftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}]}, {"current_segment": {"sid": 8050, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,Agreement", "content": "\n...but using SHAKE256 would increase the total number of primitives needed\nto implement both Ed25519ph and Ed448ph in a single implementation.\n\nThe latest EdDSA paper:\n\nhttp://ed25519.cr.yp.to/eddsa-20150704.pdf\n\n...considers both SHAKE256 and SHA-512/912, and selects the latter because\nexisting widespread deployment of SHA-512 (e.g. in Ed25519, which isn't\ncalled out specifically in the paper but is certainly worth noting)\n\nMy vote would be for #1 (SHA-512/912 as described in the EdDSA paper) or #4\n(HKDF)\n\nI am fine with the names Ed25519ph and Ed448ph\n"}, "context_segments": [{"sid": 1339, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis Internet-Draft can be retrieved at:\nftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5560, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}]}, {"current_segment": {"sid": 8051, "labels": "InformationProviding,NeutralResponse,InformationProviding,Agreement", "content": "\nDitto, for the same reasons as Tony.\n\nSenior Architect, Akamai Technologies\nIM: richsalz@jabber.at Twitter: RichSalz"}, "context_segments": [{"sid": 1339, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThis Internet-Draft can be retrieved at:\nftp://ftp.ietf.org/internet-drafts/draft-ietf-rtcweb-use-cases-and-requirements-01.txt"}, {"sid": 5560, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}, {"sid": 8050, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,Agreement", "content": "\n...but using SHAKE256 would increase the total number of primitives needed\nto implement both Ed25519ph and Ed448ph in a single implementation.\n\nThe latest EdDSA paper:\n\nhttp://ed25519.cr.yp.to/eddsa-20150704.pdf\n\n...considers both SHAKE256 and SHA-512/912, and selects the latter because\nexisting widespread deployment of SHA-512 (e.g. in Ed25519, which isn't\ncalled out specifically in the paper but is certainly worth noting)\n\nMy vote would be for #1 (SHA-512/912 as described in the EdDSA paper) or #4\n(HKDF)\n\nI am fine with the names Ed25519ph and Ed448ph\n"}]}, {"current_segment": {"sid": 5561, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nBelow is the data which will enable a MIME compliant mail reader\nimplementation to automatically retrieve the ASCII version of the\nInternet-Draft."}, "context_segments": []}, {"current_segment": {"sid": 8052, "labels": "NeutralResponse,InformationProviding,NeutralResponse", "content": "\nIt may. So be it.\n"}, "context_segments": [{"sid": 5561, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nBelow is the data which will enable a MIME compliant mail reader\nimplementation to automatically retrieve the ASCII version of the\nInternet-Draft."}, {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}, {"sid": 8050, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,Agreement", "content": "\n...but using SHAKE256 would increase the total number of primitives needed\nto implement both Ed25519ph and Ed448ph in a single implementation.\n\nThe latest EdDSA paper:\n\nhttp://ed25519.cr.yp.to/eddsa-20150704.pdf\n\n...considers both SHAKE256 and SHA-512/912, and selects the latter because\nexisting widespread deployment of SHA-512 (e.g. in Ed25519, which isn't\ncalled out specifically in the paper but is certainly worth noting)\n\nMy vote would be for #1 (SHA-512/912 as described in the EdDSA paper) or #4\n(HKDF)\n\nI am fine with the names Ed25519ph and Ed448ph\n"}]}, {"current_segment": {"sid": 5562, "labels": "Social,InformationProviding", "content": "Hi."}, "context_segments": []}, {"current_segment": {"sid": 8053, "labels": "InformationProviding,Disagreement,NeutralResponse,InformationProviding,Disagreement", "content": "\nI haven\u2019t seen SHA-512 \u201cwidely deployed\u201d. Perhaps we operate in different\nworlds."}, "context_segments": [{"sid": 5562, "labels": "Social,InformationProviding", "content": "Hi."}, {"sid": 8048, "labels": "Question,InformationProviding,ProposeAction,Question,InformationProviding,ProposeAction,InformationSeeking", "content": "\n1) The 912-bit wide internal hash function to use for Ed448.  In the\nEDDSA2 paper we proposed SHA-512/912 because we thought use of SHA512\nwould be more convenient in existing deployments than SHAKE256.\nPersonally I am currently in favor of chosing SHAKE256 for Ed448.\n\nYes please!\n\nIf you use SHAKE256 for the hash in Ed448ph, why not use SHA3-512 for\nthe prehash?  That would reduce the number of distinct crypto\nprimitives needed for a single Ed448ph implementation.\n\n2) Naming of the pre-hashed variants of Ed25519 and Ed448 and the\nrelationship between PureEdDSA and HashEdDSA.\nI believe we definitely should not use the name 'Ed25519' to describe\nwhat we are doing in the pre-hash variant since that is already well\nestablished in deployment to refer to, eh well, Ed25519.  So another\nname is needed.\n\nYes please!\n\nDoes someone have a better suggestion, or can we settle on\n'Ed25519ph' and 'Ed448ph'?\n\nNo objection here."}, {"sid": 8050, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,Agreement", "content": "\n...but using SHAKE256 would increase the total number of primitives needed\nto implement both Ed25519ph and Ed448ph in a single implementation.\n\nThe latest EdDSA paper:\n\nhttp://ed25519.cr.yp.to/eddsa-20150704.pdf\n\n...considers both SHAKE256 and SHA-512/912, and selects the latter because\nexisting widespread deployment of SHA-512 (e.g. in Ed25519, which isn't\ncalled out specifically in the paper but is certainly worth noting)\n\nMy vote would be for #1 (SHA-512/912 as described in the EdDSA paper) or #4\n(HKDF)\n\nI am fine with the names Ed25519ph and Ed448ph\n"}]}, {"current_segment": {"sid": 5563, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,UnderstandingNegative,InformationSeeking", "content": "\nStill one thing is not clear to me: is the method PLAY_NOTIFY itself going to be kept in 2.0 as is or will it be extended with what's in the ANNOUNCE draft (and so deprecate it)? It would seem to me that if PLAY_NOTIFY and ANNOUNCE address the same functionality and have already some codes in common, like end-of-stream, so the rest of codes could also be added to it (?)"}, "context_segments": []}, {"current_segment": {"sid": 5564, "labels": "Question,InformationProviding,Answer,ContextSetting,Social,Question,InformationProviding,Answer,InformationSeeking", "content": "\nHi Jose,\n\nLets go look at the history from RTSP 1.0 to today for RTSP 2.0.\nAnnounce was removed early in the update history due to uncertanties in\nthe semantics. Primarily intended to upload session description with\nrecord. As record was removed, announce also disappeard.\n\nLater there was these suggestions for announce as in the draft. This was\nnot accepted in full, but only the parts that the RTSP 2.0 core\nspecification do needs. Some things was modified in how they work. For\nexample error codes for the PLAY request can be included in\nRequest-Status header in a PLAY_NOTIFY request. Thus a number of the\nNotice in the document are covered.\n\nThus a question to you, which from the ANNOUNCE draft do think needs to\nbe added to the RTSP core in some way?\n"}, "context_segments": [{"sid": 5563, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,UnderstandingNegative,InformationSeeking", "content": "\nStill one thing is not clear to me: is the method PLAY_NOTIFY itself going to be kept in 2.0 as is or will it be extended with what's in the ANNOUNCE draft (and so deprecate it)? It would seem to me that if PLAY_NOTIFY and ANNOUNCE address the same functionality and have already some codes in common, like end-of-stream, so the rest of codes could also be added to it (?)"}]}, {"current_segment": {"sid": 5565, "labels": "NeutralResponse,ContextSetting,Thanking,InformationProviding,Thanking,Social", "content": "\nOk, I was unaware how some of ANNOUNCE got into the base spec. Thanks for that.\n"}, "context_segments": [{"sid": 5563, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,UnderstandingNegative,InformationSeeking", "content": "\nStill one thing is not clear to me: is the method PLAY_NOTIFY itself going to be kept in 2.0 as is or will it be extended with what's in the ANNOUNCE draft (and so deprecate it)? It would seem to me that if PLAY_NOTIFY and ANNOUNCE address the same functionality and have already some codes in common, like end-of-stream, so the rest of codes could also be added to it (?)"}, {"sid": 5564, "labels": "Question,InformationProviding,Answer,ContextSetting,Social,Question,InformationProviding,Answer,InformationSeeking", "content": "\nHi Jose,\n\nLets go look at the history from RTSP 1.0 to today for RTSP 2.0.\nAnnounce was removed early in the update history due to uncertanties in\nthe semantics. Primarily intended to upload session description with\nrecord. As record was removed, announce also disappeard.\n\nLater there was these suggestions for announce as in the draft. This was\nnot accepted in full, but only the parts that the RTSP 2.0 core\nspecification do needs. Some things was modified in how they work. For\nexample error codes for the PLAY request can be included in\nRequest-Status header in a PLAY_NOTIFY request. Thus a number of the\nNotice in the document are covered.\n\nThus a question to you, which from the ANNOUNCE draft do think needs to\nbe added to the RTSP core in some way?\n"}]}, {"current_segment": {"sid": 5566, "labels": "InformationProviding,Answer,ContextSetting,InformationProviding,Answer", "content": "\nI thought of beginning-of-stream but I've been told by your colleague Jan Lindquist that this is already possible with the functionality in RTSP 2.0.\n"}, "context_segments": [{"sid": 5563, "labels": "Question,InformationProviding,ContextSetting,ProposeAction,Question,InformationProviding,UnderstandingNegative,InformationSeeking", "content": "\nStill one thing is not clear to me: is the method PLAY_NOTIFY itself going to be kept in 2.0 as is or will it be extended with what's in the ANNOUNCE draft (and so deprecate it)? It would seem to me that if PLAY_NOTIFY and ANNOUNCE address the same functionality and have already some codes in common, like end-of-stream, so the rest of codes could also be added to it (?)"}, {"sid": 5564, "labels": "Question,InformationProviding,Answer,ContextSetting,Social,Question,InformationProviding,Answer,InformationSeeking", "content": "\nHi Jose,\n\nLets go look at the history from RTSP 1.0 to today for RTSP 2.0.\nAnnounce was removed early in the update history due to uncertanties in\nthe semantics. Primarily intended to upload session description with\nrecord. As record was removed, announce also disappeard.\n\nLater there was these suggestions for announce as in the draft. This was\nnot accepted in full, but only the parts that the RTSP 2.0 core\nspecification do needs. Some things was modified in how they work. For\nexample error codes for the PLAY request can be included in\nRequest-Status header in a PLAY_NOTIFY request. Thus a number of the\nNotice in the document are covered.\n\nThus a question to you, which from the ANNOUNCE draft do think needs to\nbe added to the RTSP core in some way?\n"}]}, {"current_segment": {"sid": 5567, "labels": "ContextSetting,InformationProviding", "content": "Magnus,\n\nInline..."}, "context_segments": []}, {"current_segment": {"sid": 5568, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\nI've got a question regarding ANNOUNCE and PLAY_NOTIFY. What is the relation between ANNOUNCE,  as per http://tools.ietf.org/id/draft-stiemerling-rtsp-announce-01.txt, and  PLAY_NOTIFY specified in this draft? They have something in common, but ANNOUNCE is much more ellaborated."}, "context_segments": []}, {"current_segment": {"sid": 5569, "labels": "InformationSeeking,ExtensionOfPrevious,Question,InformationProviding", "content": "\nAre there plans to merge the two or replace one for the other?"}, "context_segments": []}, {"current_segment": {"sid": 5570, "labels": "InformationProviding,Answer,InformationProviding,Answer", "content": "\nPLAY_NOTIFY is based on the Announce draft. The base spec defines the\nparts it needs for the defined media control. Additional indications for\nreasons to deliver failures etc are not defined. However, note that the\nplay_notify with end-of-stream message do include error codes for why\ndelivery was cancelled in the \"Request-Status\" header.\n"}, "context_segments": [{"sid": 5569, "labels": "InformationSeeking,ExtensionOfPrevious,Question,InformationProviding", "content": "\nAre there plans to merge the two or replace one for the other?"}]}, {"current_segment": {"sid": 5571, "labels": "Question,Thanking,Question,Thanking,InformationSeeking,Social", "content": "\nThanks for the info. I assume these servers are in walled garden environments?"}, "context_segments": []}, {"current_segment": {"sid": 1372, "labels": "Apologising,Social", "content": "\nSorry if I'm asking a dummy question... I'm still somewhat new to\nrtcweb, and certainly quite new to this list:"}, "context_segments": []}, {"current_segment": {"sid": 1373, "labels": "InformationProviding", "content": "\nIt seems that the group's idea of data traffic is that this would be\nlatency-critical traffic, possibly combined with other real-time\ncommunication. Slide 2 of the slideset at\nhttp://trac.tools.ietf.org/wg/rtcweb/trac/attachment/wiki/WikiStart/Non-Media%20Data%20in%20RTCWEB.ppt\nsays:"}, "context_segments": []}, {"current_segment": {"sid": 1374, "labels": "Question,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nUse cases:\n-Dynamic meta data for Conference and other real-time services\n-Gaming data with low latency requirements\n-Others?"}, "context_segments": []}, {"current_segment": {"sid": 1375, "labels": "Question,InformationSeeking", "content": "\nThis makes me wonder: once we have rtcweb in place, what stops a web\nsite developer from just providing a web-based file transfer service\nbetween browsers? And: if that's a possibility, would we even want to\nprevent that? (I'd say no)"}, "context_segments": []}, {"current_segment": {"sid": 1376, "labels": "InformationProviding", "content": "\nSimilarly, I can pull files on my Skype to send e.g. photographs to a\nperson I'm chatting with. I'd imagine that this sort of thing would also\nbe attractive for rtcweb based applications, and I don't see a reason to\nprevent this."}, "context_segments": []}, {"current_segment": {"sid": 1377, "labels": "Agreement,Answer,InformationProviding", "content": "\nCorrect, support for this is a design goal.\n"}, "context_segments": [{"sid": 1376, "labels": "InformationProviding", "content": "\nSimilarly, I can pull files on my Skype to send e.g. photographs to a\nperson I'm chatting with. I'd imagine that this sort of thing would also\nbe attractive for rtcweb based applications, and I don't see a reason to\nprevent this."}]}, {"current_segment": {"sid": 1378, "labels": "Question,InformationSeeking", "content": "\nWhat's different here is that we're in these cases dealing with greedy,\nnon-latency-critical traffic, and possibly lots of it. Could this even\nbe a new use case?"}, "context_segments": []}, {"current_segment": {"sid": 1379, "labels": "Answer,InformationProviding", "content": "\nThis is the reason for the priority fields for the DataChannel objects,\nto allow the application to set the relative priorities of media\nchannels and data.  By default, we don't want data channels to starve\nmedia, but to take a share, so are reasonable for \"look at this picture\"\ncases.  Large i-don'tcare-when transfers should be given somewhat lower\npriorities, real (low-bandwidth) realtime data should be given higher.\n"}, "context_segments": [{"sid": 1378, "labels": "Question,InformationSeeking", "content": "\nWhat's different here is that we're in these cases dealing with greedy,\nnon-latency-critical traffic, and possibly lots of it. Could this even\nbe a new use case?"}]}, {"current_segment": {"sid": 1380, "labels": "Agreement,InformationProviding", "content": "I see; thanks. Sounds good to me."}, "context_segments": [{"sid": 1378, "labels": "Question,InformationSeeking", "content": "\nWhat's different here is that we're in these cases dealing with greedy,\nnon-latency-critical traffic, and possibly lots of it. Could this even\nbe a new use case?"}, {"sid": 1379, "labels": "Answer,InformationProviding", "content": "\nThis is the reason for the priority fields for the DataChannel objects,\nto allow the application to set the relative priorities of media\nchannels and data.  By default, we don't want data channels to starve\nmedia, but to take a share, so are reasonable for \"look at this picture\"\ncases.  Large i-don'tcare-when transfers should be given somewhat lower\npriorities, real (low-bandwidth) realtime data should be given higher.\n"}]}, {"current_segment": {"sid": 1381, "labels": "Answer,InformationProviding", "content": "\nThere is currently a \"Simple Video Communication Service with file\nexchange\" use case (see Section 4.2.8 in\nhttp://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-08).\nAre there additional derived requirements that are needed to support\nthis use case?"}, "context_segments": [{"sid": 1378, "labels": "Question,InformationSeeking", "content": "\nWhat's different here is that we're in these cases dealing with greedy,\nnon-latency-critical traffic, and possibly lots of it. Could this even\nbe a new use case?"}]}, {"current_segment": {"sid": 1382, "labels": "Answer,Apologising,InformationProviding,Social", "content": "First: very sorry for missing this one! I looked at this very draft\nagain just yesterday, but somehow didn't notice the file transfer bit.\nOn a side note, when looking through the requirements derived from this\nuse case now, I got the impression that it would have been more\nreader-friendly to write:\n\"In addition to the Simple Video Communication Service use-case, this\nuse-case has the following requirements:\"  and list just the new ones.\n\nSecond: I don't think that there are additional requirements derived\nfrom that, but it can have architectural implications. (i.e. what is\nderived is, perhaps, a new property).  =>  \"file transfer\" should then\nbe a part of the use cases on the list in the slide set I mentioned.\n(I'm saying that because the slide asks: \"others?\")\n\nGiven that file transfers are \"part of the plan\", I just think it's\nimportant for all of us to understand that there may be a lot of data\ntraffic too (instead of pictures, people may be sending a movie... or\nyou could even have a website offering *nothing but* a file transfer\nservice?! I have a feeling that this could even turn into an unintended\n\"killer app\" for rtcweb  :-)   ).\n"}, "context_segments": [{"sid": 1378, "labels": "Question,InformationSeeking", "content": "\nWhat's different here is that we're in these cases dealing with greedy,\nnon-latency-critical traffic, and possibly lots of it. Could this even\nbe a new use case?"}, {"sid": 1381, "labels": "Answer,InformationProviding", "content": "\nThere is currently a \"Simple Video Communication Service with file\nexchange\" use case (see Section 4.2.8 in\nhttp://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-08).\nAre there additional derived requirements that are needed to support\nthis use case?"}]}, {"current_segment": {"sid": 1383, "labels": "NeutralResponse,InformationProviding", "content": "The reason for the initial data use cases was that we wanted to focus on\nthe stuff that *couldn't* be done by bouncing data off a server;\nnon-time-sensitive bulk file transfer can certainly be done via a\nserver, even though that may not be optimal."}, "context_segments": []}, {"current_segment": {"sid": 1384, "labels": "NeutralResponse,InformationProviding", "content": "\nThat said, we've always expected that once the data transfer capability\nis in place, we'll have plenty of people wanting to use it in\n\"unexpected\" ways.\nThe important RTCWEB-specific requirement from the file transfer use\ncase is probably that IF file transfer is done in a peer-to-peer\nfashion, within the RTCWEB context, it MUST be able to run without\ndegrading the quality of the real time media."}, "context_segments": []}, {"current_segment": {"sid": 1385, "labels": "NeutralResponse,InformationProviding", "content": "\n[BA] We need to be careful about the definition of \"degrade\".   If the goal is to support the best video quality\npossible (e.g. highest frame rate/quality/resolution supportable on the path), then starting a file transfer on\nthe same path may require the video to reduce bandwidth usage.  This by itself does not seem problematic.\n\nHowever, it would be problematic if the file transfer builds a queue that results in unacceptable latency. A\nlarge file transfer over TCP via the server will tend to do this -- but a file transfer handled over the data channel\nshould not."}, "context_segments": [{"sid": 1384, "labels": "NeutralResponse,InformationProviding", "content": "\nThat said, we've always expected that once the data transfer capability\nis in place, we'll have plenty of people wanting to use it in\n\"unexpected\" ways.\nThe important RTCWEB-specific requirement from the file transfer use\ncase is probably that IF file transfer is done in a peer-to-peer\nfashion, within the RTCWEB context, it MUST be able to run without\ndegrading the quality of the real time media."}]}, {"current_segment": {"sid": 1386, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-12.txt\nPages           : 28\nDate            : 2013-10-14"}, "context_segments": []}, {"current_segment": {"sid": 5586, "labels": "Social,Social", "content": "Hi Magnus,"}, "context_segments": [{"sid": 1386, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTitle           : Web Real-Time Communication Use-cases and Requirements\nAuthor(s)       : Christer Holmberg\nStefan Hakansson\nGoran AP Eriksson\nFilename        : draft-ietf-rtcweb-use-cases-and-requirements-12.txt\nPages           : 28\nDate            : 2013-10-14"}]}, {"current_segment": {"sid": 1387, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nAbstract:\nThis document describes web based real-time communication use-cases.\nRequirements on the browser functionality are derived from use-cases."}, "context_segments": []}, {"current_segment": {"sid": 5587, "labels": "InformationProviding,ContextSetting,Thanking,InformationProviding,Thanking,Social", "content": "\nThanks for your response, to be clear when I was referring to a Control\nSocket I mean the connection that sends commands such as the DESCRIBE,\nOPTIONS, SETUP.  So to restate, it should not matter if a connection for\nthe transports comes or goes to server.  For example if a server flow to\na client is:"}, "context_segments": [{"sid": 1387, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nAbstract:\nThis document describes web based real-time communication use-cases.\nRequirements on the browser functionality are derived from use-cases."}]}, {"current_segment": {"sid": 1388, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe IETF datatracker status page for this draft is:\nhttps://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements"}, "context_segments": []}, {"current_segment": {"sid": 5588, "labels": "InformationSeeking,InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious", "content": "\nC->S - Send DESCRIBE Command, C gets 200 response from S.\nClose connection and start new connection\nC->S - Send OPTIONS command, C gets 200 response from S.\nClose connection and start new connection\nC->S - Send SETUP command, C gets ??? response from S."}, "context_segments": [{"sid": 1388, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThe IETF datatracker status page for this draft is:\nhttps://datatracker.ietf.org/doc/draft-ietf-rtcweb-use-cases-and-requirements"}]}, {"current_segment": {"sid": 1389, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere's also a htmlized version available at:\nhttp://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12"}, "context_segments": []}, {"current_segment": {"sid": 5589, "labels": "InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding", "content": "\nSo at the SETUP the response should be 200? or fail (400)?  I'm trying\nto clear up an issue I have with a vendors RTSP Server implementation\nand would like to know if the sequence above should work to a RTSP\nServer.  Based on the Section 1.1 and 1.7 seems the above should work.\nThe only issue would be after the SETUP the session id needs to\naccompany commands that follow?"}, "context_segments": [{"sid": 1389, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere's also a htmlized version available at:\nhttp://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12"}]}, {"current_segment": {"sid": 5590, "labels": "Answer,Agreement,InformationProviding,Answer", "content": "\nYes, according to my interpretation of RFC 2326 that should be\ncompletely valid and the SETUP request result in a 200 OK with a session\nID that is later used to reference that session.\n\n/Magnus\n"}, "context_segments": [{"sid": 1389, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nThere's also a htmlized version available at:\nhttp://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12"}, {"sid": 5589, "labels": "InformationSeeking,Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding", "content": "\nSo at the SETUP the response should be 200? or fail (400)?  I'm trying\nto clear up an issue I have with a vendors RTSP Server implementation\nand would like to know if the sequence above should work to a RTSP\nServer.  Based on the Section 1.1 and 1.7 seems the above should work.\nThe only issue would be after the SETUP the session id needs to\naccompany commands that follow?"}]}, {"current_segment": {"sid": 1390, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA diff from the previous version is available at:\nhttp://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-12"}, "context_segments": []}, {"current_segment": {"sid": 5591, "labels": "InformationSeeking,InformationProviding,ContextSetting,ProposeAction,Social,Question,InformationProviding", "content": "Hi this is my first time posting here.  I have a basic question about\nhow a RTSP server should handled a connect and disconnect for what I am\ncalling the control channel (connection or transport). The control\nchannel (please correct me) is what sends the DESCRIBE, SETUP, OPTIONS,\nPLAY commands to the RTSP SERVER."}, "context_segments": [{"sid": 1390, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nA diff from the previous version is available at:\nhttp://www.ietf.org/rfcdiff?url2=draft-ietf-rtcweb-use-cases-and-requirements-12"}]}, {"current_segment": {"sid": 1391, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nPlease note that it may take a couple of minutes from the time of submission\nuntil the htmlized version and diff are available at tools.ietf.org."}, "context_segments": []}, {"current_segment": {"sid": 5592, "labels": "InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,Question,InformationProviding", "content": "\nShould a server treat the first DESCRIBE connection as its session. So\nin the case where a socket connects to a RTSP server and sends a\nDESCRIBE, is disconnected either by the client or some failure on the\nserver should the following SETUP succeed?"}, "context_segments": [{"sid": 1391, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nPlease note that it may take a couple of minutes from the time of submission\nuntil the htmlized version and diff are available at tools.ietf.org."}]}, {"current_segment": {"sid": 5593, "labels": "InformationProviding,Answer,InformationProviding,Answer,ProposeAction", "content": "\nNo, DESCRIBE is a state less operation. If one needs a linkage between\nthe Describe response body and the setup, then one should use etags and\nconditional requests to ensure that one is establishing the session with\na relevant session description.\n"}, "context_segments": [{"sid": 1391, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nPlease note that it may take a couple of minutes from the time of submission\nuntil the htmlized version and diff are available at tools.ietf.org."}, {"sid": 5592, "labels": "InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,Question,InformationProviding", "content": "\nShould a server treat the first DESCRIBE connection as its session. So\nin the case where a socket connects to a RTSP server and sends a\nDESCRIBE, is disconnected either by the client or some failure on the\nserver should the following SETUP succeed?"}]}, {"current_segment": {"sid": 1392, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, "context_segments": []}, {"current_segment": {"sid": 5594, "labels": "Question,ExtensionOfPrevious,Question,InformationProviding,InformationSeeking", "content": "\nAlso if using a RTSP Proxy and in the same scenario, but after the\nDESCRIBE and closing of the socket a new socket is open to send an\nOPTIONS (for keepalive) should the following SETUP succeed?"}, "context_segments": [{"sid": 1392, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}]}, {"current_segment": {"sid": 5595, "labels": "Answer,Agreement,InformationProviding,Answer", "content": "\nYes the SETUP should succeed if otherwise valid.\n"}, "context_segments": [{"sid": 1392, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nInternet-Drafts are also available by anonymous FTP at:\nftp://ftp.ietf.org/internet-drafts/"}, {"sid": 5594, "labels": "Question,ExtensionOfPrevious,Question,InformationProviding,InformationSeeking", "content": "\nAlso if using a RTSP Proxy and in the same scenario, but after the\nDESCRIBE and closing of the socket a new socket is open to send an\nOPTIONS (for keepalive) should the following SETUP succeed?"}]}, {"current_segment": {"sid": 1393, "labels": "InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF."}, "context_segments": []}, {"current_segment": {"sid": 5596, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nFrom what I understood from the RFC2326 Section 1.7 RTSP State, it\nshould not matter how many connections are used to control the RTSP Stream."}, "context_segments": [{"sid": 1393, "labels": "InformationProviding", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Real-Time Communication in WEB-browsers Working Group of the IETF."}]}, {"current_segment": {"sid": 5597, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\n1. Control Socket is not prevent a client from connecting and\ndisconnecting to send Transport commands.\n2. The keep-alive for a session should not start until a SETUP command,\nwhich can optional report the timeout for the session."}, "context_segments": []}, {"current_segment": {"sid": 5598, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction,UnderstandingNegative", "content": "\nI am uncertain what you mean with the Control socket, if you means the\nSocket the server listens to incoming TCP connection establishments and\ntheir data, it needs to be accepting those comming and going.\n"}, "context_segments": [{"sid": 5597, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\n1. Control Socket is not prevent a client from connecting and\ndisconnecting to send Transport commands.\n2. The keep-alive for a session should not start until a SETUP command,\nwhich can optional report the timeout for the session."}]}, {"current_segment": {"sid": 5599, "labels": "InformationProviding,Agreement,ProposeAction,InformationProviding,NeutralResponse", "content": "\nExact, the keep-alive is associated with the RTSP session, not the\nsignalling connection used to send RTSP requests and response between\nthe server and client.\n\nYou might find RTSP 2.0's text on this being clearer:\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/\n"}, "context_segments": [{"sid": 5597, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\n1. Control Socket is not prevent a client from connecting and\ndisconnecting to send Transport commands.\n2. The keep-alive for a session should not start until a SETUP command,\nwhich can optional report the timeout for the session."}]}, {"current_segment": {"sid": 1394, "labels": "InformationProviding", "content": "> From: Harald Alvestrand <harald@alvestrand.no>\n> RTCWEB has a requirement (or rather: it has assumed that there was a\n> solution) for signalling over SDP that SCTP/DTLS/UDP is sent over the\n> same port pair as SRTP."}, "context_segments": []}, {"current_segment": {"sid": 5600, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nhttp://www.dmn.tzi.org/ietf/mmusic/"}, "context_segments": [{"sid": 1394, "labels": "InformationProviding", "content": "> From: Harald Alvestrand <harald@alvestrand.no>\n> RTCWEB has a requirement (or rather: it has assumed that there was a\n> solution) for signalling over SDP that SCTP/DTLS/UDP is sent over the\n> same port pair as SRTP."}]}, {"current_segment": {"sid": 8089, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction", "content": "I don't know when it needs to be done, but the other down reference in the document is also an algorithm document which I hope will get into the registry as well when it is published."}, "context_segments": [{"sid": 1394, "labels": "InformationProviding", "content": "> From: Harald Alvestrand <harald@alvestrand.no>\n> RTCWEB has a requirement (or rather: it has assumed that there was a\n> solution) for signalling over SDP that SCTP/DTLS/UDP is sent over the\n> same port pair as SRTP."}, {"sid": 5600, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nhttp://www.dmn.tzi.org/ietf/mmusic/"}]}, {"current_segment": {"sid": 8090, "labels": "InformationProviding,Agreement,InformationProviding,Agreement", "content": "\nI agree . I didn't call that out because that one _was_ mentioned in the\nlast call announcement.\n"}, "context_segments": [{"sid": 1394, "labels": "InformationProviding", "content": "> From: Harald Alvestrand <harald@alvestrand.no>\n> RTCWEB has a requirement (or rather: it has assumed that there was a\n> solution) for signalling over SDP that SCTP/DTLS/UDP is sent over the\n> same port pair as SRTP."}, {"sid": 5600, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nhttp://www.dmn.tzi.org/ietf/mmusic/"}, {"sid": 8089, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction", "content": "I don't know when it needs to be done, but the other down reference in the document is also an algorithm document which I hope will get into the registry as well when it is published."}]}, {"current_segment": {"sid": 1395, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,InformationSeeking", "content": "\nMore exactly, RTCWEB has an assumption that there is a strategy for\nsending SCTP/DTLS/UDP over the same port as SRTP, and that we will\nfigure out how to signal it.  (It appears that sending RTP and RTCP\n(or SRTP and SRTP) over the same port is already solved.)\n\nThe question is whether this is a *requirement*, and if so, to put it\nin the requirements document -- I don't see it in\ndraft-ietf-rtcweb-use-cases-and-requirements-10.\n\nHowever what I do see in that draft is:\n\nF29             The browser MUST be able to send streams and\ndata to a peer in the presence of NATs that\nblock UDP traffic.\n\nand we seem to be assuming that the carrier protocol for multiplexing\nis UDP...\n\nDale"}, "context_segments": []}, {"current_segment": {"sid": 5601, "labels": "ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting", "content": "\nAlso note the minor correction below."}, "context_segments": [{"sid": 1395, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,InformationSeeking", "content": "\nMore exactly, RTCWEB has an assumption that there is a strategy for\nsending SCTP/DTLS/UDP over the same port as SRTP, and that we will\nfigure out how to signal it.  (It appears that sending RTP and RTCP\n(or SRTP and SRTP) over the same port is already solved.)\n\nThe question is whether this is a *requirement*, and if so, to put it\nin the requirements document -- I don't see it in\ndraft-ietf-rtcweb-use-cases-and-requirements-10.\n\nHowever what I do see in that draft is:\n\nF29             The browser MUST be able to send streams and\ndata to a peer in the presence of NATs that\nblock UDP traffic.\n\nand we seem to be assuming that the carrier protocol for multiplexing\nis UDP...\n\nDale"}]}, {"current_segment": {"sid": 8091, "labels": "Thanking,Thanking,Social", "content": "Thank you, Joel!\n"}, "context_segments": [{"sid": 1395, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,InformationSeeking", "content": "\nMore exactly, RTCWEB has an assumption that there is a strategy for\nsending SCTP/DTLS/UDP over the same port as SRTP, and that we will\nfigure out how to signal it.  (It appears that sending RTP and RTCP\n(or SRTP and SRTP) over the same port is already solved.)\n\nThe question is whether this is a *requirement*, and if so, to put it\nin the requirements document -- I don't see it in\ndraft-ietf-rtcweb-use-cases-and-requirements-10.\n\nHowever what I do see in that draft is:\n\nF29             The browser MUST be able to send streams and\ndata to a peer in the presence of NATs that\nblock UDP traffic.\n\nand we seem to be assuming that the carrier protocol for multiplexing\nis UDP...\n\nDale"}, {"sid": 5601, "labels": "ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting", "content": "\nAlso note the minor correction below."}]}, {"current_segment": {"sid": 5602, "labels": "ContextSetting,InformationProviding", "content": "minor point of clarification:\n"}, "context_segments": []}, {"current_segment": {"sid": 8092, "labels": "InformationProviding,InformationProviding", "content": "Ben Campbell has entered the following ballot position for\ndraft-ietf-jose-cfrg-curves-05: No Objection"}, "context_segments": [{"sid": 5602, "labels": "ContextSetting,InformationProviding", "content": "minor point of clarification:\n"}]}, {"current_segment": {"sid": 5603, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe draft is -05:\n\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-ice-05.txt\n"}, "context_segments": []}, {"current_segment": {"sid": 8093, "labels": "InformationProviding,ProposeAction,InformationProviding,ProposeAction", "content": "\nWhen responding, please keep the subject line intact and reply to all\nemail addresses included in the To and CC lines. (Feel free to cut this\nintroductory paragraph, however.)"}, "context_segments": [{"sid": 5603, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe draft is -05:\n\nhttp://www.ietf.org/internet-drafts/draft-ietf-mmusic-ice-05.txt\n"}]}, {"current_segment": {"sid": 5604, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "Now also available (with pointers to all drafts) at"}, "context_segments": []}, {"current_segment": {"sid": 8094, "labels": "InformationProviding,ProposeAction,InformationProviding", "content": "\nPlease refer to https://www.ietf.org/iesg/statement/discuss-criteria.html\nfor more information about IESG DISCUSS and COMMENT positions."}, "context_segments": [{"sid": 5604, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "Now also available (with pointers to all drafts) at"}]}, {"current_segment": {"sid": 5605, "labels": "InformationSeeking,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction", "content": "Here's an initial draft agenda for MMUSIC at the 63rd IETF. Comments,\ncorrections or additions to the chairs please."}, "context_segments": []}, {"current_segment": {"sid": 8095, "labels": "InformationProviding,InformationProviding", "content": "\nThe document, along with other ballot positions, can be found here:\nhttps://datatracker.ietf.org/doc/draft-ietf-jose-cfrg-curves/"}, "context_segments": [{"sid": 5605, "labels": "InformationSeeking,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction", "content": "Here's an initial draft agenda for MMUSIC at the 63rd IETF. Comments,\ncorrections or additions to the chairs please."}]}, {"current_segment": {"sid": 5606, "labels": "ContextSetting,InformationProviding", "content": "Multiparty Multimedia Session Control (MMUSIC) Working Group"}, "context_segments": []}, {"current_segment": {"sid": 8096, "labels": "ContextSetting,InformationProviding", "content": "\nCOMMENT:"}, "context_segments": [{"sid": 5606, "labels": "ContextSetting,InformationProviding", "content": "Multiparty Multimedia Session Control (MMUSIC) Working Group"}]}, {"current_segment": {"sid": 5607, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCHAIRS: Joerg Ott     <jo@acm.org>"}, "context_segments": []}, {"current_segment": {"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}, "context_segments": [{"sid": 5607, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCHAIRS: Joerg Ott     <jo@acm.org>"}]}, {"current_segment": {"sid": 8098, "labels": "Question,InformationProviding,NeutralResponse,Apologising,Question,InformationProviding,Apologising,InformationSeeking,Social", "content": "\nSorry to chime in late.  I thought this was covered in the shepherd\nreport, but didn't realize there were 2 downrefs.  What do I need to\ndo at this point?  We don't need to do another last call anymore,\nright?  Sorry I am not remembering the new procedure.\n"}, "context_segments": [{"sid": 5607, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCHAIRS: Joerg Ott     <jo@acm.org>"}, {"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}]}, {"current_segment": {"sid": 8099, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ProposeAction", "content": "If you belive that the downrefs to a particular document are accepted by\nthe community you waive them and do nothing.\n\nOnce a specific down reference to a particular document has been\naccepted by the community (e.g., has been mentioned in several Last\nCalls), an Area Director may waive subsequent notices in the Last\nCall of down references to it.  This should only occur when the same\ndocument (and version) are being referenced and when the AD believes\nthat the document's use is an accepted part of the community's\nunderstanding of the relevant technical area.  For example, the use\nof MD5 [RFC1321 <https://tools.ietf.org/html/rfc1321>] and HMAC [RFC2104 <https://tools.ietf.org/html/rfc2104>] is well known among\ncryptographers.\n\nnormative downrefs to external crypto specifications documented in informational RFCs are a normal and accepted part of the process.\n"}, "context_segments": [{"sid": 5607, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCHAIRS: Joerg Ott     <jo@acm.org>"}, {"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}, {"sid": 8098, "labels": "Question,InformationProviding,NeutralResponse,Apologising,Question,InformationProviding,Apologising,InformationSeeking,Social", "content": "\nSorry to chime in late.  I thought this was covered in the shepherd\nreport, but didn't realize there were 2 downrefs.  What do I need to\ndo at this point?  We don't need to do another last call anymore,\nright?  Sorry I am not remembering the new procedure.\n"}]}, {"current_segment": {"sid": 8100, "labels": "Question,InformationProviding,NeutralResponse,Question,InformationSeeking", "content": "\nHasn't that historically still been handled on a spec by spec basis?"}, "context_segments": [{"sid": 5607, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCHAIRS: Joerg Ott     <jo@acm.org>"}, {"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}, {"sid": 8098, "labels": "Question,InformationProviding,NeutralResponse,Apologising,Question,InformationProviding,Apologising,InformationSeeking,Social", "content": "\nSorry to chime in late.  I thought this was covered in the shepherd\nreport, but didn't realize there were 2 downrefs.  What do I need to\ndo at this point?  We don't need to do another last call anymore,\nright?  Sorry I am not remembering the new procedure.\n"}, {"sid": 8099, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,ProposeAction", "content": "If you belive that the downrefs to a particular document are accepted by\nthe community you waive them and do nothing.\n\nOnce a specific down reference to a particular document has been\naccepted by the community (e.g., has been mentioned in several Last\nCalls), an Area Director may waive subsequent notices in the Last\nCall of down references to it.  This should only occur when the same\ndocument (and version) are being referenced and when the AD believes\nthat the document's use is an accepted part of the community's\nunderstanding of the relevant technical area.  For example, the use\nof MD5 [RFC1321 <https://tools.ietf.org/html/rfc1321>] and HMAC [RFC2104 <https://tools.ietf.org/html/rfc2104>] is well known among\ncryptographers.\n\nnormative downrefs to external crypto specifications documented in informational RFCs are a normal and accepted part of the process.\n"}]}, {"current_segment": {"sid": 8102, "labels": "InformationProviding,Answer,NeutralResponse,Social,InformationProviding,Answer", "content": "\nWe have been discussing the relaxation of the (repeated) last call\nrequirement, both in the IESG and in Barry's draft. I'm not sure that\ndiscussion has reached it's conclusion. I'm not sure what we should do\nin the interim (this my comment about not suggesting any particular\ncourse of action.)\n\nBy the way, I think both were mentioned in the shepherd write up, but\nnot in the last call announcement.\n\nBen.\n"}, "context_segments": [{"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}, {"sid": 8098, "labels": "Question,InformationProviding,NeutralResponse,Apologising,Question,InformationProviding,Apologising,InformationSeeking,Social", "content": "\nSorry to chime in late.  I thought this was covered in the shepherd\nreport, but didn't realize there were 2 downrefs.  What do I need to\ndo at this point?  We don't need to do another last call anymore,\nright?  Sorry I am not remembering the new procedure.\n"}]}, {"current_segment": {"sid": 8103, "labels": "InformationProviding,NeutralResponse,Question,InformationProviding,InformationSeeking", "content": "\nOK, the shepherd report was there prior to last call, so hopefully\nthat is enough to not require a second last call?\n"}, "context_segments": [{"sid": 8097, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ProposeAction", "content": "\nI note that the reference to RFC7748 is a normative downref that does not\nappear to be mentioned in the last call announcement. It\u2019s not in the\ndownref registry, but since it's an algorithm spec, it probably should\nbe. I don't suggest any particular course of action; I merely bring it up\nin case people hadn't already noticed."}]}, {"current_segment": {"sid": 4623, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "Eric:\n\nI'm not an author of this draft, but I can respond with respect to the\nfollowing:\n"}, "context_segments": []}, {"current_segment": {"sid": 6931, "labels": "Social,Social", "content": "Hi,"}, "context_segments": [{"sid": 4623, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "Eric:\n\nI'm not an author of this draft, but I can respond with respect to the\nfollowing:\n"}]}, {"current_segment": {"sid": 4624, "labels": "InformationProviding,Answer,Answer", "content": "Well, to avoid algorithm spam. There exist objections to have as many\nalgorithms as we do, to begin with.\n\nThe added value of a SHA256 version when there already exists a SHA512\nversion for the same DH group appears particularly small.\n"}, "context_segments": []}, {"current_segment": {"sid": 6932, "labels": "InformationProviding,ContextSetting,Social,InformationProviding", "content": "Hi,\n\nThis is for RTSP 2.0:\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/\n\n/Magnus\n"}, "context_segments": [{"sid": 4624, "labels": "InformationProviding,Answer,Answer", "content": "Well, to avoid algorithm spam. There exist objections to have as many\nalgorithms as we do, to begin with.\n\nThe added value of a SHA256 version when there already exists a SHA512\nversion for the same DH group appears particularly small.\n"}]}, {"current_segment": {"sid": 4625, "labels": "InformationProviding,NeutralResponse,ContextSetting,NeutralResponse", "content": "\nThe value here would be allowing you to have a 4096-bit DH group without\nhaving to also have a SHA-512 implementation.\n\nI recognize that the NSA recommendations you point to say you should use\nSHA-512, however\n\n(a) NSA recommendations don't have any special authority in IETF\n(b) they say you should use SHA-512 for *integrity* but assuming I\nunderstand these documents correctly, here H is being used as a KDF, so\nit's not clear that the same reasoning applies (especially given that the\ndocument you cite doesn't provide much in the way of reasoning).\n\n-Ekr\n"}, "context_segments": [{"sid": 4624, "labels": "InformationProviding,Answer,Answer", "content": "Well, to avoid algorithm spam. There exist objections to have as many\nalgorithms as we do, to begin with.\n\nThe added value of a SHA256 version when there already exists a SHA512\nversion for the same DH group appears particularly small.\n"}, {"sid": 6932, "labels": "InformationProviding,ContextSetting,Social,InformationProviding", "content": "Hi,\n\nThis is for RTSP 2.0:\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/\n\n/Magnus\n"}]}, {"current_segment": {"sid": 4626, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction", "content": "Sure. I was thinking something like this\n\n5.1.\n5.1.1. Generic Procedures\n- Generating a DH ephemeral\n- Verifying the peer's ephemeral\n- Computing the shared key\n- Verifying the output\n- Computing the key hash and MIC\n\n5.1.2. GSS Key Exchange Steps\nClient calls GSS_Init_sec_context()... [5.1.1 step 2]\nServer verifies Q_C and calls GSS_Accept_sec_context [5.1.1, step 4]\nServer generates ephemeral and computes the shared key [reduced 5.1.1 step\n5]\nServer call to GSS_Accept_sec_context [5.1.1 step 6]\nClient verifies Q_S and computes the shared key [5.1.1 step 7++]\nClient calls GSS_VErifyMIC [5.1.1. step 8]\n\nIt's hard for me to see if you caught everything else. If you want to\nsubmit a new draft, I can take a look, either before or after this\nchange.\n\n-Ekr\n"}, "context_segments": []}, {"current_segment": {"sid": 6933, "labels": "InformationProviding,ContextSetting,StateDecision,InformationProviding", "content": "Adding Alissa, since she still holds the AD token for this one (we\ngrandfathered it when I became responsible for MMUSIC).\n"}, "context_segments": [{"sid": 4626, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction", "content": "Sure. I was thinking something like this\n\n5.1.\n5.1.1. Generic Procedures\n- Generating a DH ephemeral\n- Verifying the peer's ephemeral\n- Computing the shared key\n- Verifying the output\n- Computing the key hash and MIC\n\n5.1.2. GSS Key Exchange Steps\nClient calls GSS_Init_sec_context()... [5.1.1 step 2]\nServer verifies Q_C and calls GSS_Accept_sec_context [5.1.1, step 4]\nServer generates ephemeral and computes the shared key [reduced 5.1.1 step\n5]\nServer call to GSS_Accept_sec_context [5.1.1 step 6]\nClient verifies Q_S and computes the shared key [5.1.1 step 7++]\nClient calls GSS_VErifyMIC [5.1.1. step 8]\n\nIt's hard for me to see if you caught everything else. If you want to\nsubmit a new draft, I can take a look, either before or after this\nchange.\n\n-Ekr\n"}]}, {"current_segment": {"sid": 4627, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,NeutralResponse,ProposeAction,StateDecision", "content": "\nOk, I guess will try to get the change above in first; to cut on draft\nchurn.\nin the meanwhile if you want to see the current text we are working on\nit is available here[1], with commit history (so you can diff [2] for\nthe previous draft [3] if you wish).\n\nSimo.\n\n[1]\u00a0https://github.com/simo5/ietf/blob/master/draft-ietf-curdle-gss-key\nex-sha2.xml\n[2] https://github.com/simo5/ietf/compare/cbb10832e376e3abab3164f9bb7d2\ne759c2bea0b...6057b9920920640f8f193160d00150890adc222b\n[3]\u00a0https://github.com/simo5/ietf/blob/cbb10832e376e3abab3164f9bb7d2e75\n9c2bea0b/draft-ietf-curdle-gss-keyex-sha2.xml\n"}, "context_segments": [{"sid": 4626, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,ProposeAction", "content": "Sure. I was thinking something like this\n\n5.1.\n5.1.1. Generic Procedures\n- Generating a DH ephemeral\n- Verifying the peer's ephemeral\n- Computing the shared key\n- Verifying the output\n- Computing the key hash and MIC\n\n5.1.2. GSS Key Exchange Steps\nClient calls GSS_Init_sec_context()... [5.1.1 step 2]\nServer verifies Q_C and calls GSS_Accept_sec_context [5.1.1, step 4]\nServer generates ephemeral and computes the shared key [reduced 5.1.1 step\n5]\nServer call to GSS_Accept_sec_context [5.1.1 step 6]\nClient verifies Q_S and computes the shared key [5.1.1 step 7++]\nClient calls GSS_VErifyMIC [5.1.1. step 8]\n\nIt's hard for me to see if you caught everything else. If you want to\nsubmit a new draft, I can take a look, either before or after this\nchange.\n\n-Ekr\n"}, {"sid": 6933, "labels": "InformationProviding,ContextSetting,StateDecision,InformationProviding", "content": "Adding Alissa, since she still holds the AD token for this one (we\ngrandfathered it when I became responsible for MMUSIC).\n"}]}, {"current_segment": {"sid": 4628, "labels": "InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction", "content": "Rich version of this review at:\nhttps://mozphab-ietf.devsvcdev.mozaws.net/D4544\n\nThis document has a huge amount of duplicated material which makes it\nvery hard to read. Please refactor so that the common material is in\none place.\n"}, "context_segments": []}, {"current_segment": {"sid": 6934, "labels": "InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nIn my AUTH48 review I found one issue around Accept header and\nGET_PARAMETER and SET_PARAMETER that I think the WG needs to know of and\nprovide input on."}, "context_segments": [{"sid": 4628, "labels": "InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction", "content": "Rich version of this review at:\nhttps://mozphab-ietf.devsvcdev.mozaws.net/D4544\n\nThis document has a huge amount of duplicated material which makes it\nvery hard to read. Please refactor so that the common material is in\none place.\n"}]}, {"current_segment": {"sid": 4629, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\nIn general we strived to maintain the same structure as the docuemnt we are\nextending. This is why some sections seem repetitive. They are but they also\nare consistent with the previous document. We think this is more beneficial\nthan trying to be more synthetic.\n"}, "context_segments": [{"sid": 4628, "labels": "InformationProviding,ContextSetting,ProposeAction,Social,ContextSetting,ProposeAction", "content": "Rich version of this review at:\nhttps://mozphab-ietf.devsvcdev.mozaws.net/D4544\n\nThis document has a huge amount of duplicated material which makes it\nvery hard to read. Please refactor so that the common material is in\none place.\n"}, {"sid": 6934, "labels": "InformationProviding,ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nIn my AUTH48 review I found one issue around Accept header and\nGET_PARAMETER and SET_PARAMETER that I think the WG needs to know of and\nprovide input on."}]}, {"current_segment": {"sid": 4630, "labels": "ExtensionOfPrevious,ContextSetting,ContextSetting,InformationProviding", "content": "\nCOMMENTS"}, "context_segments": []}, {"current_segment": {"sid": 6935, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting", "content": "\nSo lets start with what Accept says:"}, "context_segments": [{"sid": 4630, "labels": "ExtensionOfPrevious,ContextSetting,ContextSetting,InformationProviding", "content": "\nCOMMENTS"}]}, {"current_segment": {"sid": 4631, "labels": "InformationProviding", "content": ">      Due to security concerns with SHA-1 [RFC6194] and with MODP groups\n>      with less than 2048 bits [NIST-SP-800-131Ar1]  we propose the use of\n>      the SHA-2 based hashes with DH group14, group15, group16, group17 and\n>      group18 [RFC3526].  Additionally we add support for key exchange\n>      based on Elliptic Curve Diffie Hellman with NIST P-256, P-384 and\n>      P-521 as well as X25519 and X448 curves.  Following the rationale of"}, "context_segments": []}, {"current_segment": {"sid": 6936, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n18.1.  Accept"}, "context_segments": [{"sid": 4631, "labels": "InformationProviding", "content": ">      Due to security concerns with SHA-1 [RFC6194] and with MODP groups\n>      with less than 2048 bits [NIST-SP-800-131Ar1]  we propose the use of\n>      the SHA-2 based hashes with DH group14, group15, group16, group17 and\n>      group18 [RFC3526].  Additionally we add support for key exchange\n>      based on Elliptic Curve Diffie Hellman with NIST P-256, P-384 and\n>      P-521 as well as X25519 and X448 curves.  Following the rationale of"}]}, {"current_segment": {"sid": 4632, "labels": "ProposeAction,NeutralResponse,InformationProviding", "content": "\n\"the X25519...\"\n"}, "context_segments": []}, {"current_segment": {"sid": 6937, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe Accept request-header field can be used to specify certain\npresentation description and parameter media types [RFC6838] that are\nacceptable for the response to DESCRIBE and GET_PARAMETER requests."}, "context_segments": [{"sid": 4632, "labels": "ProposeAction,NeutralResponse,InformationProviding", "content": "\n\"the X25519...\"\n"}]}, {"current_segment": {"sid": 4633, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nDoes this imply it should also be \"the NIST P-256, ...\" ?\n"}, "context_segments": [{"sid": 4632, "labels": "ProposeAction,NeutralResponse,InformationProviding", "content": "\n\"the X25519...\"\n"}, {"sid": 6937, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe Accept request-header field can be used to specify certain\npresentation description and parameter media types [RFC6838] that are\nacceptable for the response to DESCRIBE and GET_PARAMETER requests."}]}, {"current_segment": {"sid": 4634, "labels": "InformationProviding", "content": ">          | Key Exchange Method Name | Implementation Recommendations |\n>          | gss-group14-sha256-*     | SHOULD/RECOMMENDED             |\n>          | gss-group15-sha512-*     | MAY/OPTIONAL                   |\n>          | gss-group16-sha512-*     | SHOULD/RECOMMENDED             |"}, "context_segments": []}, {"current_segment": {"sid": 6938, "labels": "Question,InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Question,InformationProviding,ContextSetting,InformationSeeking", "content": "\nMy first reflection was what about SET_PARAMETER? And then I review what\nSET and GET parameter actually says. The issue is that as when one want\nto use message body in GET and SET one can't do it without including the\nmessage body in the request. Thus Accept's pattern does not work. Accept\nworks fine for DESCRIBE, where one requests a resource and the response\nmessage body must be one which the requesting agent supports. For how we\ndefined SET and GET_PARAMETER the requesting agent needs to know that\nthe responding entity supports the format. This makes me conclude that\nAccept header can't be used with GET_PARAMETER or SET_PARAMETER."}, "context_segments": [{"sid": 4634, "labels": "InformationProviding", "content": ">          | Key Exchange Method Name | Implementation Recommendations |\n>          | gss-group14-sha256-*     | SHOULD/RECOMMENDED             |\n>          | gss-group15-sha512-*     | MAY/OPTIONAL                   |\n>          | gss-group16-sha512-*     | SHOULD/RECOMMENDED             |"}]}, {"current_segment": {"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, "context_segments": []}, {"current_segment": {"sid": 6939, "labels": "ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThus, I think the easiest way forward is simply to remove the existing\nindications that Accept header can be used with either."}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4636, "labels": "Answer,InformationProviding", "content": "> > | gss-group14-sha256-*     | SHOULD/RECOMMENDED\n> > | gss-group15-sha512-*     | MAY/OPTIONAL\n> > | gss-group16-sha512-*     | SHOULD/RECOMMENDED\n> Why are you only specifying SHA-512 with 4096-bit groups.\n> SHA-256 is still reasonable at that size?"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6939, "labels": "ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ProposeAction", "content": "\nThus, I think the easiest way forward is simply to remove the existing\nindications that Accept header can be used with either."}]}, {"current_segment": {"sid": 6940, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nPlease provide feedback in the next two weeks (no later than 20th of\nSeptember)."}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4637, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nThere exist NSA recommendations aimed at \"organizations that run classified\nor unclassified national security systems (NSS) and vendors that build\nproducts used in NSS.\"\n\nhttps://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf\n\nThese recommendations cover a usage case for software that implements the\nabove algorithms. These recommendations call for the following minimums:\n\n- Diffie Hellman: 3072-bit or larger\n\n- Hashing: SHA-384 or larger\n\nThese recommendations are most effectively met by associating group15 and\ngroup16 with SHA-512.\n\nOtherwise, products that wanted to meet these recommendations would have to\nuse much larger and more expensive DH groups in order to meet the\nSHA-384-or-better requirement.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6940, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nPlease provide feedback in the next two weeks (no later than 20th of\nSeptember)."}]}, {"current_segment": {"sid": 4638, "labels": "InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI do not quite understand this response.  I can understand a desire to include a ciphersuite that aligns with the NSA guidance so that anyone that needs to follow it can easily do so, but that does not seem to be what you are suggesting.  Looking at page 2 of the document that you cite, a ciphersuite that uses the NIST P-384 curve, SHA-384, and AES-256 is needed.\n\nI would be in favor os adding such a ciphersuite as MAY/OPTIONAL.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6940, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nPlease provide feedback in the next two weeks (no later than 20th of\nSeptember)."}, {"sid": 4637, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nThere exist NSA recommendations aimed at \"organizations that run classified\nor unclassified national security systems (NSS) and vendors that build\nproducts used in NSS.\"\n\nhttps://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf\n\nThese recommendations cover a usage case for software that implements the\nabove algorithms. These recommendations call for the following minimums:\n\n- Diffie Hellman: 3072-bit or larger\n\n- Hashing: SHA-384 or larger\n\nThese recommendations are most effectively met by associating group15 and\ngroup16 with SHA-512.\n\nOtherwise, products that wanted to meet these recommendations would have to\nuse much larger and more expensive DH groups in order to meet the\nSHA-384-or-better requirement.\n"}]}, {"current_segment": {"sid": 4639, "labels": "Question,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,NeutralResponse,InformationSeeking", "content": "\nThe key exchange ECDH NISTP-384 with SHA-384 is already in RFC 5656 along with ECDSA NISTP-384 with SHA-384 as a public key algorithm.\n\nAES256-CBC is OPTIONAL in RFC4250 and RFC4253 as a symmectric cipher.\n\nAES256-CTR is RECOMMENDED in RFC4344 as a symmectric cipher.\n\nRFC3526 groups are provided for SSH in RFC8268:\n\ngroup14 with sha256 is SHOULD/RECOMMENDED in RFC8268\n\ngroup15 with sha512 is OPTIONAL in RFC8268\n\ngroup16 with sha512 is OPTIONAL in RFC8268\n\ngroup17 with sha512 is OPTIONAL in RFC8268\n\ngroup18 with sha512 is OPTIONAL in RFC8268\n\nShould we have decomposed the group with the hash? Or, should we have used shorter key exchange algorithm names?\nWell, perhaps both would have been better, but that should have been done some years ago.\n\nThe negotation list is getting a bit long these days and the SSH implementors did not seem to fancy adding SHA256, SHA384, and SHA512 variations of each of the new diffie-hellman groups being added, so the longest one (SHA512) was chosen as it slightly faster to implement on 64-bit architecture machines.\n\nI am given to understand that NIST SP 800-56A revision 3 and FIPS PUB 186-5 may address the use of Finite Field Cryptography safe primes for Diffie-Hellman key exchange sometime this year. (see also URL:\nhttps://csrc.nist.gov/CSRC/media/Publications/sp/800-56a/rev-3/draft/documents/sp800-56ar3-draft.pdf\nsection 5.5.1 and Appendix E which allow RFC3526 and RFC7919 groups)\n\nFor myself, I tend to think that using 2048-bit prime P FFC Diffie-Hellman provable primes that are generated on a bi-weekly basis with Q as a large subgroup of approximately P/2 bits in length and G is a proper generator of q-ordered subgroups. If changed often enough, then there would be no big push to try to precalcualte the majority of the factors of such parameters. Even if we have sufficient sieves to help in factorization, there is still a lot of computation behind breaking a large subgroup. In a Post-Quantum Cryptography world, I tend to trust large FFC calculations over small ECC calculations. Although something better than either would be welcome... always allowing it is desirable to still be able to connect to small embedded devices too.\n\nWith RFC4419 and RFC8270 we get safe primes generated with P being a 2048-bits or larger prime. The only downside is that the example calcuation does not always choose a generator g which generates a q-ordered subgroup.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6940, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nPlease provide feedback in the next two weeks (no later than 20th of\nSeptember)."}, {"sid": 4637, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nThere exist NSA recommendations aimed at \"organizations that run classified\nor unclassified national security systems (NSS) and vendors that build\nproducts used in NSS.\"\n\nhttps://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf\n\nThese recommendations cover a usage case for software that implements the\nabove algorithms. These recommendations call for the following minimums:\n\n- Diffie Hellman: 3072-bit or larger\n\n- Hashing: SHA-384 or larger\n\nThese recommendations are most effectively met by associating group15 and\ngroup16 with SHA-512.\n\nOtherwise, products that wanted to meet these recommendations would have to\nuse much larger and more expensive DH groups in order to meet the\nSHA-384-or-better requirement.\n"}, {"sid": 4638, "labels": "InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI do not quite understand this response.  I can understand a desire to include a ciphersuite that aligns with the NSA guidance so that anyone that needs to follow it can easily do so, but that does not seem to be what you are suggesting.  Looking at page 2 of the document that you cite, a ciphersuite that uses the NIST P-384 curve, SHA-384, and AES-256 is needed.\n\nI would be in favor os adding such a ciphersuite as MAY/OPTIONAL.\n"}]}, {"current_segment": {"sid": 6941, "labels": "InformationProviding", "content": "\n/Magnus"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4640, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Agreement,NeutralResponse", "content": "\nI think this may already be present, depending on what you are asking.\n\nFor myself, I see no problems with the GSS variations of diffie-hellman using the same groups and hashes as RFC8268.\nFor gss-group14-sha256-* I support RECOMMENDED to move away from the SHA1 variation. I am okay with\ngss-group16-sha512-* as either OPTIONAL or RECOMMENDED.\n\n-- Mark"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6941, "labels": "InformationProviding", "content": "\n/Magnus"}, {"sid": 4637, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nThere exist NSA recommendations aimed at \"organizations that run classified\nor unclassified national security systems (NSS) and vendors that build\nproducts used in NSS.\"\n\nhttps://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf\n\nThese recommendations cover a usage case for software that implements the\nabove algorithms. These recommendations call for the following minimums:\n\n- Diffie Hellman: 3072-bit or larger\n\n- Hashing: SHA-384 or larger\n\nThese recommendations are most effectively met by associating group15 and\ngroup16 with SHA-512.\n\nOtherwise, products that wanted to meet these recommendations would have to\nuse much larger and more expensive DH groups in order to meet the\nSHA-384-or-better requirement.\n"}, {"sid": 4638, "labels": "InformationProviding,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI do not quite understand this response.  I can understand a desire to include a ciphersuite that aligns with the NSA guidance so that anyone that needs to follow it can easily do so, but that does not seem to be what you are suggesting.  Looking at page 2 of the document that you cite, a ciphersuite that uses the NIST P-384 curve, SHA-384, and AES-256 is needed.\n\nI would be in favor os adding such a ciphersuite as MAY/OPTIONAL.\n"}]}, {"current_segment": {"sid": 6942, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "\nBelow you find relevant Excepts from the spec:"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4641, "labels": "ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nMy question is why these groups are only specified with SHA-512, and not\nSHA-256. I think it's fine to specify them for SHA-512.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6942, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "\nBelow you find relevant Excepts from the spec:"}, {"sid": 4637, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nThere exist NSA recommendations aimed at \"organizations that run classified\nor unclassified national security systems (NSS) and vendors that build\nproducts used in NSS.\"\n\nhttps://cryptome.org/2016/01/CNSA-Suite-and-Quantum-Computing-FAQ.pdf\n\nThese recommendations cover a usage case for software that implements the\nabove algorithms. These recommendations call for the following minimums:\n\n- Diffie Hellman: 3072-bit or larger\n\n- Hashing: SHA-384 or larger\n\nThese recommendations are most effectively met by associating group15 and\ngroup16 with SHA-512.\n\nOtherwise, products that wanted to meet these recommendations would have to\nuse much larger and more expensive DH groups in order to meet the\nSHA-384-or-better requirement.\n"}]}, {"current_segment": {"sid": 6943, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nGET_PARAMETER says:"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4642, "labels": "InformationProviding,Answer,ContextSetting,NeutralResponse", "content": "\nI think that was already discussed at length - short version: mirroring of the\nregular (non-gss) version of those KEX methods\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6943, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nGET_PARAMETER says:"}]}, {"current_segment": {"sid": 4643, "labels": "Agreement,Agreement,InformationProviding", "content": "\nYes, OK.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6943, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nGET_PARAMETER says:"}, {"sid": 4642, "labels": "InformationProviding,Answer,ContextSetting,NeutralResponse", "content": "\nI think that was already discussed at length - short version: mirroring of the\nregular (non-gss) version of those KEX methods\n"}]}, {"current_segment": {"sid": 6944, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\nThe other way is to specify a message body that lists the\nparameter(s) that are desired to be retrieved.  The Content-Type\nheader (Section 18.19) is used to specify which format the message\nbody has.  If the receiver of the request does not support the media\ntype used for the message body, it SHALL respond using the error code\n415 (Unsupported Media Type).  The responder to a GET_PARAMETER\nrequest MUST use the media type of the request for the response.  For\nadditional considerations regarding message body negotiation, see\nSection 9.3."}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}]}, {"current_segment": {"sid": 4644, "labels": "Answer,NeutralResponse,InformationProviding", "content": "\nI thik this has been sactisfactorily discussed later in the thread.\n"}, "context_segments": [{"sid": 4635, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nWhy are you only specifying SHA-512 with 4096-bit groups. SHA-256 is\nstill reasonable at that size?\n"}, {"sid": 6944, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\nThe other way is to specify a message body that lists the\nparameter(s) that are desired to be retrieved.  The Content-Type\nheader (Section 18.19) is used to specify which format the message\nbody has.  If the receiver of the request does not support the media\ntype used for the message body, it SHALL respond using the error code\n415 (Unsupported Media Type).  The responder to a GET_PARAMETER\nrequest MUST use the media type of the request for the response.  For\nadditional considerations regarding message body negotiation, see\nSection 9.3."}]}, {"current_segment": {"sid": 4645, "labels": "NeutralResponse,InformationProviding", "content": ">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman\n>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-256\n>      as HASH, and the group defined in Section 8.2 of [RFC4253] The method\n>      name for each method is the concatenation of the string \"gss-\n>      group14-sha256-\" with the Base64 encoding of the MD5 hash [RFC1321]"}, "context_segments": []}, {"current_segment": {"sid": 6945, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRTSP agents implementing support for responding to GET_PARAMETER\nrequests SHALL implement the \"text/parameters\" format (Appendix F).\nThis to ensure that at least one known format for parameters is\nimplemented and, thus, prevent parameter format negotiation failure."}, "context_segments": [{"sid": 4645, "labels": "NeutralResponse,InformationProviding", "content": ">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman\n>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-256\n>      as HASH, and the group defined in Section 8.2 of [RFC4253] The method\n>      name for each method is the concatenation of the string \"gss-\n>      group14-sha256-\" with the Base64 encoding of the MD5 hash [RFC1321]"}]}, {"current_segment": {"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}, "context_segments": []}, {"current_segment": {"sid": 6946, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSET_PARAMETER says:"}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}]}, {"current_segment": {"sid": 4647, "labels": "InformationProviding,Answer,ProposeAction,Answer", "content": "\nYes, legacy versions of these algorithms use MD5. This has no security\nimplications and the hash can be statically encoded in the implementation.\nThe implementation does not have to implement MD5 at run-time.\n\nIf a different hash is chosen for new algorithms, MD5 is still in place for\nolder algorithms, so applications would have to hardcode both the MD5 and\nnewer hashes. There does not appear to be a compelling reason for this\nsince there is no security benefit from using a stronger hash.\n"}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}, {"sid": 6946, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSET_PARAMETER says:"}]}, {"current_segment": {"sid": 6947, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\nWhen using a message body to list the parameter(s) desired to be set,\nthe Content-Type header (Section 18.19) is used to specify which\nformat the message body has.  If the receiver of the request is not\nsupporting the media type used for the message body, it SHALL respond\nusing the error code 415 (Unsupported Media Type).  For additional\nconsiderations regarding message body negotiation, see Section 9.3."}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}]}, {"current_segment": {"sid": 4648, "labels": "InformationProviding,Answer,Answer", "content": "\nit has no impact on security, it's used only to limit length of the method\nname and because MD5 was always used for that\n"}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}, {"sid": 6947, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\nWhen using a message body to list the parameter(s) desired to be set,\nthe Content-Type header (Section 18.19) is used to specify which\nformat the message body has.  If the receiver of the request is not\nsupporting the media type used for the message body, it SHALL respond\nusing the error code 415 (Unsupported Media Type).  For additional\nconsiderations regarding message body negotiation, see Section 9.3."}]}, {"current_segment": {"sid": 4649, "labels": "NeutralResponse,Agreement,InformationProviding", "content": "\nOK.\n"}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}, {"sid": 6947, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\nWhen using a message body to list the parameter(s) desired to be set,\nthe Content-Type header (Section 18.19) is used to specify which\nformat the message body has.  If the receiver of the request is not\nsupporting the media type used for the message body, it SHALL respond\nusing the error code 415 (Unsupported Media Type).  For additional\nconsiderations regarding message body negotiation, see Section 9.3."}, {"sid": 4648, "labels": "InformationProviding,Answer,Answer", "content": "\nit has no impact on security, it's used only to limit length of the method\nname and because MD5 was always used for that\n"}]}, {"current_segment": {"sid": 6948, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRTSP agents implementing support for responding to SET_PARAMETER\nrequests SHALL implement the text/parameters format (Appendix F).\nThis is to ensure that at least one known format for parameters is\nimplemented and, thus, prevent parameter format negotiation failure."}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}]}, {"current_segment": {"sid": 4650, "labels": "Answer,Answer,NeutralResponse,InformationProviding", "content": "\nAlso discussed later, this is just an identifier, and we a re just being\nconsistent with previous naming which can be hardcoded, no need to implement\nMD5.\n"}, "context_segments": [{"sid": 4646, "labels": "Question,ClarificationElicitation,InformationProviding,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this MD5? Is there some legacy reason for this? It's not\nnecessarily bad but it's odd to modern eyes.\n"}, {"sid": 6948, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRTSP agents implementing support for responding to SET_PARAMETER\nrequests SHALL implement the text/parameters format (Appendix F).\nThis is to ensure that at least one known format for parameters is\nimplemented and, thus, prevent parameter format negotiation failure."}]}, {"current_segment": {"sid": 4651, "labels": "InformationProviding", "content": ">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman\n>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-512\n>      as HASH, and the group defined in Section 7 of [RFC3526] The method\n>      name for each method is the concatenation of the string \"gss-\n>      group18-sha512-\" with the Base64 encoding of the MD5 hash of the\n>      ASN.1 DER encoding of the underlying GSS-API mechanism's OID."}, "context_segments": []}, {"current_segment": {"sid": 6949, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n9.3.  Message Body Format Negotiation"}, "context_segments": [{"sid": 4651, "labels": "InformationProviding", "content": ">      Each of these methods specifies GSS-API-authenticated Diffie-Hellman\n>      key exchange as described in Section 2.1 of [RFC4462]  with SHA-512\n>      as HASH, and the group defined in Section 7 of [RFC3526] The method\n>      name for each method is the concatenation of the string \"gss-\n>      group18-sha512-\" with the Base64 encoding of the MD5 hash of the\n>      ASN.1 DER encoding of the underlying GSS-API mechanism's OID."}]}, {"current_segment": {"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}, "context_segments": []}, {"current_segment": {"sid": 6950, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe content format of the message body is provided using the Content-\nType header (Section 18.19).  To enable the responder of a request to\ndetermine which media type it should use, the requester may include\nthe Accept header (Section 18.1) in a request to identify supported\nmedia types or media type ranges suitable to the response.  In case\nthe responder is not supporting any of the specified formats, then\nthe request response will be a 406 (Not Acceptable) error code."}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}]}, {"current_segment": {"sid": 4653, "labels": "InformationProviding,Answer,StateDecision,NeutralResponse", "content": "\nwhile valid point, it follows the style established in RFC 4462\n\nfor a programmer familiar with the old gss KEX methods and general IETF\nterminology, the names of the new algorithms alone are sufficient to implement\nthem\n\nfor a programmer just learning it, it's sufficiently detailed to hand-hold the\nimplementation process (and resolve disputes in case of minor differences)\n"}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}, {"sid": 6950, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe content format of the message body is provided using the Content-\nType header (Section 18.19).  To enable the responder of a request to\ndetermine which media type it should use, the requester may include\nthe Accept header (Section 18.1) in a request to identify supported\nmedia types or media type ranges suitable to the response.  In case\nthe responder is not supporting any of the specified formats, then\nthe request response will be a 406 (Not Acceptable) error code."}]}, {"current_segment": {"sid": 4654, "labels": "NeutralResponse,ContextSetting,ProposeAction,Disagreement,InformationProviding", "content": "\nWell, I'm a pretty experienced programmer, and I find it pretty hard to\nfollow.\nIt's exactly this kind of boilerplate that leads to confusion.\n"}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}, {"sid": 6950, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe content format of the message body is provided using the Content-\nType header (Section 18.19).  To enable the responder of a request to\ndetermine which media type it should use, the requester may include\nthe Accept header (Section 18.1) in a request to identify supported\nmedia types or media type ranges suitable to the response.  In case\nthe responder is not supporting any of the specified formats, then\nthe request response will be a 406 (Not Acceptable) error code."}, {"sid": 4653, "labels": "InformationProviding,Answer,StateDecision,NeutralResponse", "content": "\nwhile valid point, it follows the style established in RFC 4462\n\nfor a programmer familiar with the old gss KEX methods and general IETF\nterminology, the names of the new algorithms alone are sufficient to implement\nthem\n\nfor a programmer just learning it, it's sufficiently detailed to hand-hold the\nimplementation process (and resolve disputes in case of minor differences)\n"}]}, {"current_segment": {"sid": 4655, "labels": "StateDecision,NeutralResponse,StateDecision,InformationProviding", "content": "\ndone\n"}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}, {"sid": 6950, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe content format of the message body is provided using the Content-\nType header (Section 18.19).  To enable the responder of a request to\ndetermine which media type it should use, the requester may include\nthe Accept header (Section 18.1) in a request to identify supported\nmedia types or media type ranges suitable to the response.  In case\nthe responder is not supporting any of the specified formats, then\nthe request response will be a 406 (Not Acceptable) error code."}, {"sid": 4653, "labels": "InformationProviding,Answer,StateDecision,NeutralResponse", "content": "\nwhile valid point, it follows the style established in RFC 4462\n\nfor a programmer familiar with the old gss KEX methods and general IETF\nterminology, the names of the new algorithms alone are sufficient to implement\nthem\n\nfor a programmer just learning it, it's sufficiently detailed to hand-hold the\nimplementation process (and resolve disputes in case of minor differences)\n"}, {"sid": 4654, "labels": "NeutralResponse,ContextSetting,ProposeAction,Disagreement,InformationProviding", "content": "\nWell, I'm a pretty experienced programmer, and I find it pretty hard to\nfollow.\nIt's exactly this kind of boilerplate that leads to confusion.\n"}]}, {"current_segment": {"sid": 6951, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe media types that may be used on requests with message bodies need\nto be determined through the use of feature-tags, specification\nrequirement, or trial and error.  Trial and error works because when\nthe responder does not support the media type of the message body, it\nwill respond with a 415 (Unsupported Media Type)."}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}]}, {"current_segment": {"sid": 4656, "labels": "NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nSee my explanantion above.\n"}, "context_segments": [{"sid": 4652, "labels": "InformationSeeking,Question,NeutralResponse,ProposeAction,Question,NeutralResponse,InformationProviding", "content": "\nThese all seem to be boilerplate. is there a way to refactor into a\nsingle paragraph with a table that describes the substitutions?\n"}, {"sid": 6951, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe media types that may be used on requests with message bodies need\nto be determined through the use of feature-tags, specification\nrequirement, or trial and error.  Trial and error works because when\nthe responder does not support the media type of the message body, it\nwill respond with a 415 (Unsupported Media Type)."}]}, {"current_segment": {"sid": 4657, "labels": "InformationProviding", "content": ">      ASN.1 DER encoding of the underlying GSS-API mechanism's OID.\n>   5.  New Elliptic Curve Diffie-Hellman Key Exchange methods\n>      In [RFC5656] new SSH key exchange algorithms based on Elliptic Curve\n>      Cryptography are introduced.  We reuse much of section 4 to implement"}, "context_segments": []}, {"current_segment": {"sid": 6952, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe formats supported and their negotiation is done individually on a\nper method and direction (request or response body) direction.\nRequirements on supporting particular media types for use as message\nbodies in requests and response SHALL also be specified on a per-\nmethod and per-direction basis."}, "context_segments": [{"sid": 4657, "labels": "InformationProviding", "content": ">      ASN.1 DER encoding of the underlying GSS-API mechanism's OID.\n>   5.  New Elliptic Curve Diffie-Hellman Key Exchange methods\n>      In [RFC5656] new SSH key exchange algorithms based on Elliptic Curve\n>      Cryptography are introduced.  We reuse much of section 4 to implement"}]}, {"current_segment": {"sid": 4658, "labels": "ProposeAction,NeutralResponse,InformationProviding", "content": "\ns/implement/define/\n"}, "context_segments": []}, {"current_segment": {"sid": 4659, "labels": "InformationProviding", "content": ">      This section defers to [RFC7546] as the source of information on GSS-\n>      API context establishment operations, Section 3 being the most\n>      relevant.  All Security Considerations described in [RFC7546] apply\n>      here too.\n>      The Client:"}, "context_segments": []}, {"current_segment": {"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}, "context_segments": []}, {"current_segment": {"sid": 4661, "labels": "InformationProviding,UnderstandingNegative,NeutralResponse,UnderstandingNegative", "content": "\nI don't think I understand what changes you'd like to see\n\nboth FFDH and ECDH are symmetrical... both client and server need to perform\nthe same operations...\n"}, "context_segments": [{"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}]}, {"current_segment": {"sid": 4662, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse", "content": "\nYes, That's why it's confusing to describe their operations in order rather\nthan\nthe behavior that a DH peer does and then just the points where they are\ninserted in the protocol. Compare, for instance, the TLS 1.3 specification,\nwhere both KeyShare (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#page-53) and\nthe DH computations (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#section-7.4) are\ndescribed in an endpoint agnostic manner. DH is inherently symmetrical.\n"}, "context_segments": [{"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}, {"sid": 4661, "labels": "InformationProviding,UnderstandingNegative,NeutralResponse,UnderstandingNegative", "content": "\nI don't think I understand what changes you'd like to see\n\nboth FFDH and ECDH are symmetrical... both client and server need to perform\nthe same operations...\n"}]}, {"current_segment": {"sid": 4663, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nthe actions performed in context of GSSAPI-infused key exchange aren't\n"}, "context_segments": [{"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}, {"sid": 4661, "labels": "InformationProviding,UnderstandingNegative,NeutralResponse,UnderstandingNegative", "content": "\nI don't think I understand what changes you'd like to see\n\nboth FFDH and ECDH are symmetrical... both client and server need to perform\nthe same operations...\n"}, {"sid": 4662, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse", "content": "\nYes, That's why it's confusing to describe their operations in order rather\nthan\nthe behavior that a DH peer does and then just the points where they are\ninserted in the protocol. Compare, for instance, the TLS 1.3 specification,\nwhere both KeyShare (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#page-53) and\nthe DH computations (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#section-7.4) are\ndescribed in an endpoint agnostic manner. DH is inherently symmetrical.\n"}]}, {"current_segment": {"sid": 4664, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nNeither are they in TLS, but we managed to put the DH part in one place.\n"}, "context_segments": [{"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}, {"sid": 4661, "labels": "InformationProviding,UnderstandingNegative,NeutralResponse,UnderstandingNegative", "content": "\nI don't think I understand what changes you'd like to see\n\nboth FFDH and ECDH are symmetrical... both client and server need to perform\nthe same operations...\n"}, {"sid": 4662, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction,Agreement,NeutralResponse", "content": "\nYes, That's why it's confusing to describe their operations in order rather\nthan\nthe behavior that a DH peer does and then just the points where they are\ninserted in the protocol. Compare, for instance, the TLS 1.3 specification,\nwhere both KeyShare (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#page-53) and\nthe DH computations (https://tools.ietf.org/html/d\nraft-ietf-tls-tls13-28#section-7.4) are\ndescribed in an endpoint agnostic manner. DH is inherently symmetrical.\n"}, {"sid": 4663, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nthe actions performed in context of GSSAPI-infused key exchange aren't\n"}]}, {"current_segment": {"sid": 4667, "labels": "Question,StateDecision,ClarificationElicitation,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nIs there a reason? We wanted to give implementers a clear linear explanation\nwithout having to jump back and forth to reference what is happening at any\ngiven point.\n"}, "context_segments": [{"sid": 4660, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nThis section should be refactored to put all the EC mechanics (which\nare symmetrical) in one place.\n"}]}, {"current_segment": {"sid": 4668, "labels": "InformationProviding", "content": ">            and then y coordinate.  The coordinate coversion MUST preserve\n>            leading zero octets.  Thus for nistp521 curve the encoded x\n>            coordinate will always have a length of 66 octets while the Q_C\n>            representation will be 133 octets long.  This is the\n>            uncompressed representation specified in Section 4.3.6 of\n>            [ANSI-X9-62-2005]."}, "context_segments": []}, {"current_segment": {"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, "context_segments": []}, {"current_segment": {"sid": 4670, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nIf the author is aiming for consistency with use of ECC in SSH, it would be\nconsistent to allow, but not require, compressed representation.\n\nPrecedent in RFC 5656, \"Elliptic Curve Algorithm Integration in the Secure\nShell Transport Layer\":\n\nQ is the public key encoded from an elliptic curve point into an\noctet string as defined in Section 2.3.3 of [SEC1\n<https://tools.ietf.org/html/rfc5656#ref-SEC1>]; point compression\nMAY be used.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4671, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nhttps://tools.ietf.org/html/rfc5656#section-3.1\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4672, "labels": "InformationProviding,Answer,Answer", "content": "\nbecause this allows to verify the sanity of the share when it is being parsed,\nbefore the cryptographic routines are processing it, limiting the attack area\n(and the implementation may want to handle a clearly malformed key share\nand a invalid-value malformed key share differently).\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4673, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI think you're misunderstanding me. My point is that there are already\ndocuments\nwhich describe how to generate the private and public keys for EC. You\nshould\nbe referring to them, not recapitulating their contents here.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4672, "labels": "InformationProviding,Answer,Answer", "content": "\nbecause this allows to verify the sanity of the share when it is being parsed,\nbefore the cryptographic routines are processing it, limiting the attack area\n(and the implementation may want to handle a clearly malformed key share\nand a invalid-value malformed key share differently).\n"}]}, {"current_segment": {"sid": 4674, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse", "content": "\nproposed in https://github.com/simo5/ietf/pull/24\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4672, "labels": "InformationProviding,Answer,Answer", "content": "\nbecause this allows to verify the sanity of the share when it is being parsed,\nbefore the cryptographic routines are processing it, limiting the attack area\n(and the implementation may want to handle a clearly malformed key share\nand a invalid-value malformed key share differently).\n"}, {"sid": 4673, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI think you're misunderstanding me. My point is that there are already\ndocuments\nwhich describe how to generate the private and public keys for EC. You\nshould\nbe referring to them, not recapitulating their contents here.\n"}]}, {"current_segment": {"sid": 4675, "labels": "NeutralResponse,StateDecision,ProposeAction,InformationProviding", "content": "\nI will review this.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4672, "labels": "InformationProviding,Answer,Answer", "content": "\nbecause this allows to verify the sanity of the share when it is being parsed,\nbefore the cryptographic routines are processing it, limiting the attack area\n(and the implementation may want to handle a clearly malformed key share\nand a invalid-value malformed key share differently).\n"}, {"sid": 4673, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,UnderstandingNegative", "content": "\nI think you're misunderstanding me. My point is that there are already\ndocuments\nwhich describe how to generate the private and public keys for EC. You\nshould\nbe referring to them, not recapitulating their contents here.\n"}, {"sid": 4674, "labels": "InformationProviding,NeutralResponse,ProposeAction,NeutralResponse", "content": "\nproposed in https://github.com/simo5/ietf/pull/24\n"}]}, {"current_segment": {"sid": 4677, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nsame reason \u2013 the uncompressed is the only format that is guaranteed to be\nsupported and there is no mechanism in SSH to negotiate the supported formats\n\ne.g. the implementation shipped in Red Hat Enterprise Linux does not support\ncompressed representations\n\nsince it's also the same (and only) format used in TLS 1.3, it allows better\ncryptographic code reuse\n\n(as Simo pointed out, because the standards allow for compressed\nrepresentation, neither is explicit in expected sizes of serialised point\nrepresentation so they are listed here, also as a simple sanity check to\nperform)\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4678, "labels": "InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nWell, in TLS 1.3 this was an unfortunate concession to backward\ncompatibility\nwith a very widely deployed installed base. I'm trying to determine if\nthat's true\nhere. As for negotiation, this can be fixed by creating a new code point.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4677, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nsame reason \u2013 the uncompressed is the only format that is guaranteed to be\nsupported and there is no mechanism in SSH to negotiate the supported formats\n\ne.g. the implementation shipped in Red Hat Enterprise Linux does not support\ncompressed representations\n\nsince it's also the same (and only) format used in TLS 1.3, it allows better\ncryptographic code reuse\n\n(as Simo pointed out, because the standards allow for compressed\nrepresentation, neither is explicit in expected sizes of serialised point\nrepresentation so they are listed here, also as a simple sanity check to\nperform)\n"}]}, {"current_segment": {"sid": 4679, "labels": "InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nor can be fixed by mandating the most-widely supported format, and if somebody\nis interested in supporting compressed, he or she can propose that extension\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4677, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nsame reason \u2013 the uncompressed is the only format that is guaranteed to be\nsupported and there is no mechanism in SSH to negotiate the supported formats\n\ne.g. the implementation shipped in Red Hat Enterprise Linux does not support\ncompressed representations\n\nsince it's also the same (and only) format used in TLS 1.3, it allows better\ncryptographic code reuse\n\n(as Simo pointed out, because the standards allow for compressed\nrepresentation, neither is explicit in expected sizes of serialised point\nrepresentation so they are listed here, also as a simple sanity check to\nperform)\n"}, {"sid": 4678, "labels": "InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nWell, in TLS 1.3 this was an unfortunate concession to backward\ncompatibility\nwith a very widely deployed installed base. I'm trying to determine if\nthat's true\nhere. As for negotiation, this can be fixed by creating a new code point.\n"}]}, {"current_segment": {"sid": 4680, "labels": "InformationProviding,Agreement,Disagreement", "content": "\nYes, but then you have both.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}, {"sid": 4677, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nsame reason \u2013 the uncompressed is the only format that is guaranteed to be\nsupported and there is no mechanism in SSH to negotiate the supported formats\n\ne.g. the implementation shipped in Red Hat Enterprise Linux does not support\ncompressed representations\n\nsince it's also the same (and only) format used in TLS 1.3, it allows better\ncryptographic code reuse\n\n(as Simo pointed out, because the standards allow for compressed\nrepresentation, neither is explicit in expected sizes of serialised point\nrepresentation so they are listed here, also as a simple sanity check to\nperform)\n"}, {"sid": 4678, "labels": "InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nWell, in TLS 1.3 this was an unfortunate concession to backward\ncompatibility\nwith a very widely deployed installed base. I'm trying to determine if\nthat's true\nhere. As for negotiation, this can be fixed by creating a new code point.\n"}, {"sid": 4679, "labels": "InformationSeeking,NeutralResponse,ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nor can be fixed by mandating the most-widely supported format, and if somebody\nis interested in supporting compressed, he or she can propose that extension\n"}]}, {"current_segment": {"sid": 4681, "labels": "Answer,ContextSetting,ProposeAction,Answer,ProposeAction,InformationProviding", "content": "\nI think this is because we did not have any good normative reference, but I'll\nlet Hubert chime in.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4682, "labels": "Answer,ContextSetting,Answer,InformationProviding", "content": "\nI may be wrong but some compression algorithms have had IPR issues, so this may\nderive from a willingness to avoid those, I'll let Hubert chime in here too.\n"}, "context_segments": [{"sid": 4669, "labels": "Question,ClarificationElicitation,InformationProviding,ContextSetting,Question,NeutralResponse,ContextSetting,InformationSeeking", "content": "\nI have two questions about this:  1. Why are you specifying the\ndetailed computation of the public key? This seems like you could\ndefer it to another spec. 2. Why are you specifying uncompressed\nrepresentations for NIST curves? We did this in TLS because people\nalready supported them, but in general they are worse. Is there a\nreason here?\n"}]}, {"current_segment": {"sid": 4683, "labels": "InformationProviding,InformationProviding", "content": ">            by 31 zero octets for curve255519 and as an octect of value\n>            0x05 followed by 55 zero octets.\n>            Calculating Q_C as the result of the call to X25519 or X448\n>            function, respectively for curve25519 and curve448 key\n>            exchange, with parameters d_C and g."}, "context_segments": []}, {"current_segment": {"sid": 4684, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThis material all seems to be in RFC 7748 S 6.1 and 6.2.\n"}, "context_segments": []}, {"current_segment": {"sid": 4685, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\nwe do need local nomenclature for the inputs and outputs though\n\nalso, having all the necessary checks in a single document allows for easier\ncode review and verification if they are performed.\n\nI opted for verbosity in the name of security. RFC 7748 is already referenced\nin the definitions of the methods.\n"}, "context_segments": [{"sid": 4684, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThis material all seems to be in RFC 7748 S 6.1 and 6.2.\n"}]}, {"current_segment": {"sid": 4686, "labels": "InformationProviding,NeutralResponse,ProposeAction,Social,NeutralResponse,ProposeAction", "content": "\nIt's also an opportunity for new mistakes to be made as these documents are\nless thoroughly reviewed than RFC 7748, as well as having two normative\nspecifications for ostensible the same algorithm, which we try not to do.\nPlease\ndefer the algorithms to the original sources.\n"}, "context_segments": [{"sid": 4684, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThis material all seems to be in RFC 7748 S 6.1 and 6.2.\n"}, {"sid": 4685, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\nwe do need local nomenclature for the inputs and outputs though\n\nalso, having all the necessary checks in a single document allows for easier\ncode review and verification if they are performed.\n\nI opted for verbosity in the name of security. RFC 7748 is already referenced\nin the definitions of the methods.\n"}]}, {"current_segment": {"sid": 4687, "labels": "InformationProviding,NeutralResponse,NeutralResponse", "content": "\nhttps://github.com/simo5/ietf/pull/24\n"}, "context_segments": [{"sid": 4684, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThis material all seems to be in RFC 7748 S 6.1 and 6.2.\n"}, {"sid": 4685, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\nwe do need local nomenclature for the inputs and outputs though\n\nalso, having all the necessary checks in a single document allows for easier\ncode review and verification if they are performed.\n\nI opted for verbosity in the name of security. RFC 7748 is already referenced\nin the definitions of the methods.\n"}, {"sid": 4686, "labels": "InformationProviding,NeutralResponse,ProposeAction,Social,NeutralResponse,ProposeAction", "content": "\nIt's also an opportunity for new mistakes to be made as these documents are\nless thoroughly reviewed than RFC 7748, as well as having two normative\nspecifications for ostensible the same algorithm, which we try not to do.\nPlease\ndefer the algorithms to the original sources.\n"}]}, {"current_segment": {"sid": 4688, "labels": "ProposeAction,StateDecision,NeutralResponse,InformationProviding", "content": "\nI think we wanted it explicitly here, to avoid too much referencing and risk of\nerrors, but I guess we can reference if you feel strongly about this.\n"}, "context_segments": [{"sid": 4684, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThis material all seems to be in RFC 7748 S 6.1 and 6.2.\n"}]}, {"current_segment": {"sid": 4689, "labels": "InformationProviding", "content": ">         For NIST curves, the server verifies that the q_C is not a point\n>         at infinity, that both coordinates are in the interval [0, p - 1],\n>         where p is the prime associated with the curve of the selected key\n>         exchange and that the point lies on the curve (satisfies the curve\n>         equation)."}, "context_segments": []}, {"current_segment": {"sid": 4690, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nYou should probably cite to the X9.62 or SP-800 for this procedure.\n"}, "context_segments": []}, {"current_segment": {"sid": 4691, "labels": "Agreement,Agreement,InformationProviding", "content": "\n+1\n"}, "context_segments": [{"sid": 4690, "labels": "ProposeAction,NeutralResponse,ProposeAction,InformationProviding", "content": "\nYou should probably cite to the X9.62 or SP-800 for this procedure.\n"}]}, {"current_segment": {"sid": 4692, "labels": "InformationProviding", "content": ">         For curve25519, the server verifies that the the high-order bit of\n>         the last octet is not set - this prevents distinguishing attacks\n>         between implementations that use Montgomery ladder implementation\n>         of the curve and ones that use generic elliptic-curve libraries.\n>         If the bit is set, the key exchange SHOULD fail.  For curve448 any\n>         bit can be set."}, "context_segments": []}, {"current_segment": {"sid": 4693, "labels": "ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nI'm not following what this is supposed to do. If you are worried\nabout this, why don't you just mask off the top bit.\n"}, "context_segments": []}, {"current_segment": {"sid": 4694, "labels": "Answer,Answer,InformationProviding", "content": "\nbecause debugging mismatch in key calculation is harder to do than rejection\nof a malformed message\n"}, "context_segments": [{"sid": 4693, "labels": "ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nI'm not following what this is supposed to do. If you are worried\nabout this, why don't you just mask off the top bit.\n"}]}, {"current_segment": {"sid": 4695, "labels": "Question,NeutralResponse,Question,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nThis is explicitly justified as \"preventing distinguishing attacks\". How\ndoes it do so?\n"}, "context_segments": [{"sid": 4693, "labels": "ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nI'm not following what this is supposed to do. If you are worried\nabout this, why don't you just mask off the top bit.\n"}, {"sid": 4694, "labels": "Answer,Answer,InformationProviding", "content": "\nbecause debugging mismatch in key calculation is harder to do than rejection\nof a malformed message\n"}]}, {"current_segment": {"sid": 4696, "labels": "StateDecision,NeutralResponse,StateDecision,InformationProviding", "content": "\nremoved\n"}, "context_segments": [{"sid": 4693, "labels": "ProposeAction,UnderstandingNegative,ClarificationElicitation,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nI'm not following what this is supposed to do. If you are worried\nabout this, why don't you just mask off the top bit.\n"}, {"sid": 4694, "labels": "Answer,Answer,InformationProviding", "content": "\nbecause debugging mismatch in key calculation is harder to do than rejection\nof a malformed message\n"}, {"sid": 4695, "labels": "Question,NeutralResponse,Question,NeutralResponse,InformationSeeking,InformationProviding", "content": "\nThis is explicitly justified as \"preventing distinguishing attacks\". How\ndoes it do so?\n"}]}, {"current_segment": {"sid": 4697, "labels": "InformationProviding", "content": ">            For NIST curves, the peers perform point multiplication using\n>            d_U and q_V to get point P.\n>            For NIST curves, peers verify that P is not a point at\n>            infinity.  If P is a point at infinity, the key exchange MUST\n>            fail."}, "context_segments": []}, {"current_segment": {"sid": 4698, "labels": "Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this text here? It describes the client's behavior.\n"}, "context_segments": []}, {"current_segment": {"sid": 4699, "labels": "Answer,Answer,InformationProviding", "content": "\nboth client and server need to perform that operation\n"}, "context_segments": [{"sid": 4698, "labels": "Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this text here? It describes the client's behavior.\n"}]}, {"current_segment": {"sid": 4700, "labels": "InformationProviding,Agreement,ProposeAction,NeutralResponse", "content": "\nYes, that's why it's very confusing to have it in the middle of the\nserver's operations.\n"}, "context_segments": [{"sid": 4698, "labels": "Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this text here? It describes the client's behavior.\n"}, {"sid": 4699, "labels": "Answer,Answer,InformationProviding", "content": "\nboth client and server need to perform that operation\n"}]}, {"current_segment": {"sid": 4701, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "\nthe client part is referencing the server part\n"}, "context_segments": [{"sid": 4698, "labels": "Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this text here? It describes the client's behavior.\n"}, {"sid": 4699, "labels": "Answer,Answer,InformationProviding", "content": "\nboth client and server need to perform that operation\n"}, {"sid": 4700, "labels": "InformationProviding,Agreement,ProposeAction,NeutralResponse", "content": "\nYes, that's why it's very confusing to have it in the middle of the\nserver's operations.\n"}]}, {"current_segment": {"sid": 4702, "labels": "Agreement,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nYes, that's why I said you should put all the DH operations in one place.\n"}, "context_segments": [{"sid": 4698, "labels": "Question,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nWhy is this text here? It describes the client's behavior.\n"}, {"sid": 4699, "labels": "Answer,Answer,InformationProviding", "content": "\nboth client and server need to perform that operation\n"}, {"sid": 4700, "labels": "InformationProviding,Agreement,ProposeAction,NeutralResponse", "content": "\nYes, that's why it's very confusing to have it in the middle of the\nserver's operations.\n"}, {"sid": 4701, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "\nthe client part is referencing the server part\n"}]}, {"current_segment": {"sid": 4703, "labels": "InformationProviding", "content": ">            and q_V.  The result of the function is the shared secret.\n>            For curve25519 and curve448, if all the octets of the shared\n>            secret are zero octets, the key exchange MUST fail.\n>         H = hash(V_C || V_S || I_C || I_S || K_S || Q_C || Q_S || K)."}, "context_segments": []}, {"current_segment": {"sid": 4704, "labels": "InformationProviding,ProposeAction,NeutralResponse,ProposeAction", "content": "\nThis kind of just comes out of nowhere. You probably want some\nprefatory text.\n"}, "context_segments": []}, {"current_segment": {"sid": 4705, "labels": "Agreement,Agreement,InformationProviding", "content": "\ngood point\n"}, "context_segments": [{"sid": 4704, "labels": "InformationProviding,ProposeAction,NeutralResponse,ProposeAction", "content": "\nThis kind of just comes out of nowhere. You probably want some\nprefatory text.\n"}]}, {"current_segment": {"sid": 4706, "labels": "InformationProviding", "content": ">      7.  C verifies that the key Q_S is valid the same way it is done in\n>      step 3.  If the key is not valid the key exchange MUST fail.\n>      8.  C computes the shared secret K and H and verifies that it is\n>      valid the same way it is done in step 5.  It then calls"}, "context_segments": []}, {"current_segment": {"sid": 4707, "labels": "InformationProviding,NeutralResponse", "content": "\nThis check only applies to CFRG curves.\n"}, "context_segments": []}, {"current_segment": {"sid": 4708, "labels": "InformationProviding,Disagreement,Disagreement,NeutralResponse", "content": "\nno, for CFRG curves the invalid value is a point at infinity, for X25519\ninvalid value is an all-zero string\n\nso the check if the shared secret is valid must be performed irrespective of\ncurve used\n"}, "context_segments": [{"sid": 4707, "labels": "InformationProviding,NeutralResponse", "content": "\nThis check only applies to CFRG curves.\n"}]}, {"current_segment": {"sid": 4709, "labels": "InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse,ProposeAction", "content": "\nHmm... TLS 1.3 does not specify that one must validate the output of the DH\ncomputation. So, the IETF should be consistent on this point. If you think\nthat\nTLS 1.3 is wrong, please explain why.\n\nSecond, the specific check you are requiring for the CFRG curves is the\none applicable if you do the recommended DH computations. Here's the\nrelevant text for TLS 13.\n\nFor X25519 and X448, implementations SHOULD use the approach\nspecified in [RFC7748 <https://tools.ietf.org/html/rfc7748>] to\ncalculate the Diffie-Hellman shared secret.\nImplementations MUST check whether the computed Diffie-Hellman shared\nsecret is the all-zero value and abort if so, as described in\nSection 6 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-6>.  If implementors use\nan alternative\nimplementation of these elliptic curves, they SHOULD perform the\nadditional checks specified in Section 7 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-7>.\n"}, "context_segments": [{"sid": 4707, "labels": "InformationProviding,NeutralResponse", "content": "\nThis check only applies to CFRG curves.\n"}, {"sid": 4708, "labels": "InformationProviding,Disagreement,Disagreement,NeutralResponse", "content": "\nno, for CFRG curves the invalid value is a point at infinity, for X25519\ninvalid value is an all-zero string\n\nso the check if the shared secret is valid must be performed irrespective of\ncurve used\n"}]}, {"current_segment": {"sid": 4710, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ContextSetting,UnderstandingNegative", "content": "\nSection 4.2.8.1:\n\nPeers MUST validate each other's public key Y by ensuring that 1 < Y\n< p-1.  This check ensures that the remote peer is properly behaved\nand isn't forcing the local system into a small subgroup.\n\nand section 4.2.8.2 of draft-28:\n\nFor the curves secp256r1, secp384r1 and secp521r1, peers MUST\nvalidate each other's public value Q by ensuring that the point is a\nvalid point on the elliptic curve.  The appropriate validation\nprocedures are defined in Section 4.3.7 of [X962] and alternatively\nin Section 5.6.2.3 of [KEYAGREEMENT].  This process consists of three\nsteps: (1) verify that Q is not the point at infinity (O), (2) verify\nthat for Q = (x, y) both integers x and y are in the correct\ninterval, (3) ensure that (x, y) is a correct solution to the\nelliptic curve equation.  For these curves, implementers do not need\nto verify membership in the correct subgroup.\n\nseem to me to be more relevant and quite detailed.\n\nRFC 7748 says that the verification is optional, I don't see why making it\nmandatory is incorrect for SSH. For nist curves, the verification is about\npublic key, not shared secret, it's just performed in the same step.\n"}, "context_segments": [{"sid": 4707, "labels": "InformationProviding,NeutralResponse", "content": "\nThis check only applies to CFRG curves.\n"}, {"sid": 4708, "labels": "InformationProviding,Disagreement,Disagreement,NeutralResponse", "content": "\nno, for CFRG curves the invalid value is a point at infinity, for X25519\ninvalid value is an all-zero string\n\nso the check if the shared secret is valid must be performed irrespective of\ncurve used\n"}, {"sid": 4709, "labels": "InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse,ProposeAction", "content": "\nHmm... TLS 1.3 does not specify that one must validate the output of the DH\ncomputation. So, the IETF should be consistent on this point. If you think\nthat\nTLS 1.3 is wrong, please explain why.\n\nSecond, the specific check you are requiring for the CFRG curves is the\none applicable if you do the recommended DH computations. Here's the\nrelevant text for TLS 13.\n\nFor X25519 and X448, implementations SHOULD use the approach\nspecified in [RFC7748 <https://tools.ietf.org/html/rfc7748>] to\ncalculate the Diffie-Hellman shared secret.\nImplementations MUST check whether the computed Diffie-Hellman shared\nsecret is the all-zero value and abort if so, as described in\nSection 6 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-6>.  If implementors use\nan alternative\nimplementation of these elliptic curves, they SHOULD perform the\nadditional checks specified in Section 7 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-7>.\n"}]}, {"current_segment": {"sid": 4711, "labels": "InformationSeeking,ClarificationElicitation,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,ClarificationElicitation,NeutralResponse", "content": "\nI think we're talking past each other. The TLS spec requires that:\n\n- You do public key validation for FFDHE and NIST curves\n- You do output validation for CFRG curves.\n\nUnless I am misreading your text, you are requiring that you also do output\nvalidation for the NIST curves. Is that correct? If so, can you provide a\nsource for why?\n\n-Ekr"}, "context_segments": [{"sid": 4707, "labels": "InformationProviding,NeutralResponse", "content": "\nThis check only applies to CFRG curves.\n"}, {"sid": 4708, "labels": "InformationProviding,Disagreement,Disagreement,NeutralResponse", "content": "\nno, for CFRG curves the invalid value is a point at infinity, for X25519\ninvalid value is an all-zero string\n\nso the check if the shared secret is valid must be performed irrespective of\ncurve used\n"}, {"sid": 4709, "labels": "InformationSeeking,InformationProviding,NeutralResponse,ContextSetting,ProposeAction,Disagreement,NeutralResponse,ProposeAction", "content": "\nHmm... TLS 1.3 does not specify that one must validate the output of the DH\ncomputation. So, the IETF should be consistent on this point. If you think\nthat\nTLS 1.3 is wrong, please explain why.\n\nSecond, the specific check you are requiring for the CFRG curves is the\none applicable if you do the recommended DH computations. Here's the\nrelevant text for TLS 13.\n\nFor X25519 and X448, implementations SHOULD use the approach\nspecified in [RFC7748 <https://tools.ietf.org/html/rfc7748>] to\ncalculate the Diffie-Hellman shared secret.\nImplementations MUST check whether the computed Diffie-Hellman shared\nsecret is the all-zero value and abort if so, as described in\nSection 6 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-6>.  If implementors use\nan alternative\nimplementation of these elliptic curves, they SHOULD perform the\nadditional checks specified in Section 7 of [RFC7748]\n<https://tools.ietf.org/html/rfc7748#section-7>.\n"}, {"sid": 4710, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,UnderstandingNegative,NeutralResponse,ContextSetting,UnderstandingNegative", "content": "\nSection 4.2.8.1:\n\nPeers MUST validate each other's public key Y by ensuring that 1 < Y\n< p-1.  This check ensures that the remote peer is properly behaved\nand isn't forcing the local system into a small subgroup.\n\nand section 4.2.8.2 of draft-28:\n\nFor the curves secp256r1, secp384r1 and secp521r1, peers MUST\nvalidate each other's public value Q by ensuring that the point is a\nvalid point on the elliptic curve.  The appropriate validation\nprocedures are defined in Section 4.3.7 of [X962] and alternatively\nin Section 5.6.2.3 of [KEYAGREEMENT].  This process consists of three\nsteps: (1) verify that Q is not the point at infinity (O), (2) verify\nthat for Q = (x, y) both integers x and y are in the correct\ninterval, (3) ensure that (x, y) is a correct solution to the\nelliptic curve equation.  For these curves, implementers do not need\nto verify membership in the correct subgroup.\n\nseem to me to be more relevant and quite detailed.\n\nRFC 7748 says that the verification is optional, I don't see why making it\nmandatory is incorrect for SSH. For nist curves, the verification is about\npublic key, not shared secret, it's just performed in the same step.\n"}]}, {"current_segment": {"sid": 4714, "labels": "InformationProviding", "content": ">          string    server public host key and certificates (K_S)\n>      Since this key exchange method does not require the host key to be\n>      used for any encryption operations, this message is OPTIONAL.  If the\n>      \"null\" host key algorithm described in Section 5 of [RFC4462] is\n>      used, this message MUST NOT be sent."}, "context_segments": []}, {"current_segment": {"sid": 4715, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nI am assuming in this situation there is some other form of\nauthentication?\n"}, "context_segments": []}, {"current_segment": {"sid": 4716, "labels": "InformationProviding,Answer,Answer", "content": "\nYes, the purpose of all of these GSS key exchange methods is to allow host\nauthentication to be performed through some external mechanism via GSSAPI.\nKerberos is a common usage case. When used with these key exchange methods\nit can authenticate the host to the client without the use of SSH host keys.\n"}, "context_segments": [{"sid": 4715, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nI am assuming in this situation there is some other form of\nauthentication?\n"}]}, {"current_segment": {"sid": 4717, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe other issues seem relevant to raise.\n"}, "context_segments": [{"sid": 4715, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nI am assuming in this situation there is some other form of\nauthentication?\n"}]}, {"current_segment": {"sid": 4718, "labels": "InformationProviding,Answer,Agreement,Answer", "content": "\nyes, Kerberos is not the sole implementation of GSS API\n"}, "context_segments": [{"sid": 4715, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nI am assuming in this situation there is some other form of\nauthentication?\n"}]}, {"current_segment": {"sid": 4719, "labels": "Answer,Answer,InformationProviding", "content": "\nAs explained elswhere, GSS key exchange assumes GSSAPI authentication.\n"}, "context_segments": [{"sid": 4715, "labels": "ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nI am assuming in this situation there is some other form of\nauthentication?\n"}]}, {"current_segment": {"sid": 4720, "labels": "InformationProviding", "content": ">          string    I_C, payload of the client's SSH_MSG_KEXINIT\n>          string    I_S, payload of the server's SSH_MSG_KEXINIT\n>          string    K_S, server's public host key\n>          string    Q_C, client's ephemeral public key octet string\n>          string    Q_S, server's ephemeral public key octet string\n>          mpint     K,   shared secret"}, "context_segments": []}, {"current_segment": {"sid": 4721, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThe actual equation is way up above this in the document, which is\npresumably not great.\n"}, "context_segments": []}, {"current_segment": {"sid": 4722, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\n1. those are equivalent\n2. this approach is inherited from RFC 4462; intention being to quickly show\nno difference to the underlying inputs (for FFDHE only the hash, prime\nand generators are changed)\n"}, "context_segments": [{"sid": 4721, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThe actual equation is way up above this in the document, which is\npresumably not great.\n"}]}, {"current_segment": {"sid": 4723, "labels": "NeutralResponse,StateDecision,ProposeAction,InformationProviding", "content": "\nI'll take a look at your revision and see what I think.\n"}, "context_segments": [{"sid": 4721, "labels": "InformationProviding,ProposeAction,NeutralResponse", "content": "\nThe actual equation is way up above this in the document, which is\npresumably not great.\n"}, {"sid": 4722, "labels": "InformationProviding,NeutralResponse,StateDecision,NeutralResponse", "content": "\n1. those are equivalent\n2. this approach is inherited from RFC 4462; intention being to quickly show\nno difference to the underlying inputs (for FFDHE only the hash, prime\nand generators are changed)\n"}]}, {"current_segment": {"sid": 4724, "labels": "InformationProviding", "content": ">      Each key exchange method is implicitly registered by this document.\n>      The IESG is considered to be the owner of all these key exchange\n>      methods; this does NOT imply that the IESG is considered to be the\n>      owner of the underlying GSS-API mechanism.\n>   5.2.1.  gss-nistp256-sha256-*"}, "context_segments": []}, {"current_segment": {"sid": 4725, "labels": "ProposeAction,ProposeAction,InformationProviding", "content": "\nAgain, can you refactor this section so it's not so duplicative.\n"}, "context_segments": []}, {"current_segment": {"sid": 4726, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "\nsame replay as with FFDHE methods\n"}, "context_segments": [{"sid": 4725, "labels": "ProposeAction,ProposeAction,InformationProviding", "content": "\nAgain, can you refactor this section so it's not so duplicative.\n"}]}, {"current_segment": {"sid": 4727, "labels": "NeutralResponse,Disagreement,InformationProviding", "content": "\nYes. and I have the same objection.\n\n-Ekr"}, "context_segments": [{"sid": 4725, "labels": "ProposeAction,ProposeAction,InformationProviding", "content": "\nAgain, can you refactor this section so it's not so duplicative.\n"}, {"sid": 4726, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "\nsame replay as with FFDHE methods\n"}]}, {"current_segment": {"sid": 4728, "labels": "InformationProviding", "content": ">      the target the user intended.  Some mechanisms implementations (like\n>      commonly used krb5 libraries) may use insecure DNS resolution to\n>      canonicalize the target name; in these cases spoofing a DNS response\n>      that points to an attacker-controlled machine may results in the user\n>      silently delegating credentials to the attacker, who can then\n>      impersonate the user at will."}, "context_segments": []}, {"current_segment": {"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}, "context_segments": []}, {"current_segment": {"sid": 4730, "labels": "InformationProviding,Answer,Agreement,Answer", "content": "\nYes, those are additional security considerations, from discussions with Ben\non Curve-WG ML.\n"}, "context_segments": [{"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}]}, {"current_segment": {"sid": 4731, "labels": "InformationProviding,Answer,Answer", "content": "\nNo, we just thought important to note, as it was missing in the original\ndocument but it is a know factor to be aware of when dealing with Krb5 which is\nde facto the only used GSSAPI mechanism for SHH GSS Key exchanges.\n\nSimo.\n"}, "context_segments": [{"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}]}, {"current_segment": {"sid": 4732, "labels": "Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse,InformationSeeking", "content": "\nJust a side note: \"de facto\" are key words there. In practice Kerberos is\nthe most widely supported GSSAPI mechanism used in SSH. However, GSSAPI key\nexchange works equally well with other mechanisms. For example, I believe\nwe've had someone (either on this list, or on the mostly-zombie SSH list)\nmention that they use GSSAPI with X.509 (possibly?) as well as other\nmechanisms.\n"}, "context_segments": [{"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}, {"sid": 4731, "labels": "InformationProviding,Answer,Answer", "content": "\nNo, we just thought important to note, as it was missing in the original\ndocument but it is a know factor to be aware of when dealing with Krb5 which is\nde facto the only used GSSAPI mechanism for SHH GSS Key exchanges.\n\nSimo.\n"}]}, {"current_segment": {"sid": 4733, "labels": "InformationProviding,Agreement,Answer", "content": "\nYes, there are other mechanisms, but the warning applies to the Krb5 mechanism\nexplicitly.\n\nSimo.\n"}, "context_segments": [{"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}, {"sid": 4731, "labels": "InformationProviding,Answer,Answer", "content": "\nNo, we just thought important to note, as it was missing in the original\ndocument but it is a know factor to be aware of when dealing with Krb5 which is\nde facto the only used GSSAPI mechanism for SHH GSS Key exchanges.\n\nSimo.\n"}, {"sid": 4732, "labels": "Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse,InformationSeeking", "content": "\nJust a side note: \"de facto\" are key words there. In practice Kerberos is\nthe most widely supported GSSAPI mechanism used in SSH. However, GSSAPI key\nexchange works equally well with other mechanisms. For example, I believe\nwe've had someone (either on this list, or on the mostly-zombie SSH list)\nmention that they use GSSAPI with X.509 (possibly?) as well as other\nmechanisms.\n"}]}, {"current_segment": {"sid": 4734, "labels": "InformationProviding,NeutralResponse,ContextSetting,Thanking,NeutralResponse,ContextSetting,Thanking,Social", "content": "\nI had almost replied with a similar note, so thanks -- this prompted\nme to actually find a link for the \"GSI\" mechanism I remember\nhearing about:\n\nhttp://toolkit.globus.org/toolkit/docs/latest-stable/gsic/\nand as used in ssh:\nhttp://grid.ncsa.illinois.edu/ssh/\n\n-Ben"}, "context_segments": [{"sid": 4729, "labels": "Question,ClarificationElicitation,InformationSeeking", "content": "\nIs this something new in this document?"}, {"sid": 4731, "labels": "InformationProviding,Answer,Answer", "content": "\nNo, we just thought important to note, as it was missing in the original\ndocument but it is a know factor to be aware of when dealing with Krb5 which is\nde facto the only used GSSAPI mechanism for SHH GSS Key exchanges.\n\nSimo.\n"}, {"sid": 4732, "labels": "Question,InformationProviding,NeutralResponse,ContextSetting,Question,NeutralResponse,InformationSeeking", "content": "\nJust a side note: \"de facto\" are key words there. In practice Kerberos is\nthe most widely supported GSSAPI mechanism used in SSH. However, GSSAPI key\nexchange works equally well with other mechanisms. For example, I believe\nwe've had someone (either on this list, or on the mostly-zombie SSH list)\nmention that they use GSSAPI with X.509 (possibly?) as well as other\nmechanisms.\n"}]}, {"current_segment": {"sid": 4735, "labels": "ContextSetting,Apologising,ContextSetting,Apologising,InformationProviding,Social", "content": "Sorry for the delay in replying was swamped with other work, I should have no\nproblem replying quickly now.\n"}, "context_segments": []}, {"current_segment": {"sid": 4736, "labels": "InformationProviding,Social,NeutralResponse,StateDecision", "content": "Hi Eric,\nI posted a new draft with extensive modification to Section 5,\nhopefully they meet your requests."}, "context_segments": []}, {"current_segment": {"sid": 4737, "labels": "ExtensionOfPrevious,StateDecision,InformationProviding", "content": "\nnothing has changed of the described protocol itself, just stuff got\nshuffled around and I also provided a little artwork consistent with\nRFC 5656 to hopefully aid at better understanding of the flow."}, "context_segments": []}, {"current_segment": {"sid": 4738, "labels": "ContextSetting,StateDecision,Apologising,ContextSetting,InformationProviding,Social", "content": "Chiming in as one of the Authors, sorry for not responding earlier, I've bene\nbusy and I will follow up with more answers later on as I ge tmore time to\naddress them.\n"}, "context_segments": []}, {"current_segment": {"sid": 4739, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "These changes look fine, though they only address some of my comments.\n"}, "context_segments": []}, {"current_segment": {"sid": 4740, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nJust for clarity, is the change to describe the whole DH exchange in\none place what you see missing ? Is that a deal breaker ?\nAnything else ?\n\nSimo.\n"}, "context_segments": [{"sid": 4739, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "These changes look fine, though they only address some of my comments.\n"}]}, {"current_segment": {"sid": 4741, "labels": "Question,InformationProviding,Answer,Question,Answer,NeutralResponse,InformationSeeking", "content": "\nThat and the repeated text that is the same for each group.\n\nI'm not sure it's a dealbreaker, but it's a real point of concern for me.\nIs there\nstrong WG consensus to retain the current structure, or is this just what\nhappens\nto be there.\n\n-Ekr\n"}, "context_segments": [{"sid": 4739, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "These changes look fine, though they only address some of my comments.\n"}, {"sid": 4740, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nJust for clarity, is the change to describe the whole DH exchange in\none place what you see missing ? Is that a deal breaker ?\nAnything else ?\n\nSimo.\n"}]}, {"current_segment": {"sid": 4742, "labels": "InformationProviding,NeutralResponse,ContextSetting,NeutralResponse", "content": "\nthe fix for repeated text about groups is already merged to master, for ECDHE:\nhttps://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/\ndraft-ietf-curdle-gss-keyex-sha2.xml#L537-L553\nand for FFDHE:\nhttps://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/\ndraft-ietf-curdle-gss-keyex-sha2.xml#L148-L164\n"}, "context_segments": [{"sid": 4739, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "These changes look fine, though they only address some of my comments.\n"}, {"sid": 4740, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nJust for clarity, is the change to describe the whole DH exchange in\none place what you see missing ? Is that a deal breaker ?\nAnything else ?\n\nSimo.\n"}, {"sid": 4741, "labels": "Question,InformationProviding,Answer,Question,Answer,NeutralResponse,InformationSeeking", "content": "\nThat and the repeated text that is the same for each group.\n\nI'm not sure it's a dealbreaker, but it's a real point of concern for me.\nIs there\nstrong WG consensus to retain the current structure, or is this just what\nhappens\nto be there.\n\n-Ekr\n"}]}, {"current_segment": {"sid": 4743, "labels": "Thanking,InformationSeeking,ProposeAction,ProposeAction,Thanking,InformationProviding,Social", "content": "\nThanks Hubert.\n\nEric,\nit be nice if you could give guidance on how you would like to see the\nDH exchange explanation changed, assuming that's the only thing of\nconcern left for you, feel free to point out anything else as well.\n\nIf you prefer to have a new draft submitted, with the changes above, as\na baseline for further discussion, I can submit one.\n\nSimo."}, "context_segments": [{"sid": 4739, "labels": "NeutralResponse,NeutralResponse,InformationProviding", "content": "These changes look fine, though they only address some of my comments.\n"}, {"sid": 4740, "labels": "Question,ClarificationElicitation,ClarificationElicitation,InformationSeeking", "content": "\nJust for clarity, is the change to describe the whole DH exchange in\none place what you see missing ? Is that a deal breaker ?\nAnything else ?\n\nSimo.\n"}, {"sid": 4741, "labels": "Question,InformationProviding,Answer,Question,Answer,NeutralResponse,InformationSeeking", "content": "\nThat and the repeated text that is the same for each group.\n\nI'm not sure it's a dealbreaker, but it's a real point of concern for me.\nIs there\nstrong WG consensus to retain the current structure, or is this just what\nhappens\nto be there.\n\n-Ekr\n"}, {"sid": 4742, "labels": "InformationProviding,NeutralResponse,ContextSetting,NeutralResponse", "content": "\nthe fix for repeated text about groups is already merged to master, for ECDHE:\nhttps://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/\ndraft-ietf-curdle-gss-keyex-sha2.xml#L537-L553\nand for FFDHE:\nhttps://github.com/simo5/ietf/blob/eb03480d5c49e7340302e4974435f382ba26a911/\ndraft-ietf-curdle-gss-keyex-sha2.xml#L148-L164\n"}]}, {"current_segment": {"sid": 4744, "labels": "Question,NeutralResponse,Question,Disagreement,InformationSeeking,InformationProviding", "content": "I see no point in adding another hash.  What\u2019s the reason?"}, "context_segments": []}, {"current_segment": {"sid": 4745, "labels": "Answer,Answer,InformationProviding", "content": "\nSo that you can have an implementation that spans a variety of groups with\njust SHA-256.\n"}, "context_segments": [{"sid": 4744, "labels": "Question,NeutralResponse,Question,Disagreement,InformationSeeking,InformationProviding", "content": "I see no point in adding another hash.  What\u2019s the reason?"}]}, {"current_segment": {"sid": 4746, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Disagreement,NeutralResponse", "content": "I think this misunderstands the scope of the GSS draft.\n\nThe GSS draft discusses GSS key exchange methods for SSH. These are not the\nmain key exchange methods for SSH, they are a *version* of the main key\nexchange methods for use with GSS.\n\nBecause these are a *version* of the main key exchange methods, the main\nvalue of this draft is that it updates the GSS key exchange methods to be\nin line with how the main key exchange methods for SSH have evolved.\n\nAs Mark has pointed out, we have already added these key exchange methods\nto SSH in RFC 8268:\n\ndiffie-hellman-group14-sha256\ndiffie-hellman-group15-sha512\ndiffie-hellman-group16-sha512\ndiffie-hellman-group17-sha512\ndiffie-hellman-group18-sha512\n\nThe whole argument about which groups and which hashes we should have has\nalready been staged, multiple times, and this is what we arrived at.\n\nThe GSS draft is merely mirroring what we have already done for use with\nthe GSS key exchange methods. It does not make sense for the GSS key\nexchange methods to do something entirely different than what the main key\nexchange methods do. It makes sense for the GSS key exchange methods to be\nconsistent with what we have already done for the main ones.\n"}, "context_segments": []}, {"current_segment": {"sid": 4747, "labels": "NeutralResponse,ContextSetting,NeutralResponse,InformationProviding", "content": "\nOK. I regret not noticing this when I reviewed the SSH document, but as you\nsay, it's too late now.\n\n-Ekr\n"}, "context_segments": [{"sid": 4746, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction,StateDecision,Disagreement,NeutralResponse", "content": "I think this misunderstands the scope of the GSS draft.\n\nThe GSS draft discusses GSS key exchange methods for SSH. These are not the\nmain key exchange methods for SSH, they are a *version* of the main key\nexchange methods for use with GSS.\n\nBecause these are a *version* of the main key exchange methods, the main\nvalue of this draft is that it updates the GSS key exchange methods to be\nin line with how the main key exchange methods for SSH have evolved.\n\nAs Mark has pointed out, we have already added these key exchange methods\nto SSH in RFC 8268:\n\ndiffie-hellman-group14-sha256\ndiffie-hellman-group15-sha512\ndiffie-hellman-group16-sha512\ndiffie-hellman-group17-sha512\ndiffie-hellman-group18-sha512\n\nThe whole argument about which groups and which hashes we should have has\nalready been staged, multiple times, and this is what we arrived at.\n\nThe GSS draft is merely mirroring what we have already done for use with\nthe GSS key exchange methods. It does not make sense for the GSS key\nexchange methods to do something entirely different than what the main key\nexchange methods do. It makes sense for the GSS key exchange methods to be\nconsistent with what we have already done for the main ones.\n"}]}, {"current_segment": {"sid": 4748, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "For the record, I think most of Eric's recommendations here are very\nsensible.\n"}, "context_segments": []}, {"current_segment": {"sid": 1400, "labels": "StateDecision,Thanking,InformationProviding,Social", "content": "\nthanks. I will update the document."}, "context_segments": []}, {"current_segment": {"sid": 5608, "labels": "InformationProviding", "content": "WG,"}, "context_segments": [{"sid": 1400, "labels": "StateDecision,Thanking,InformationProviding,Social", "content": "\nthanks. I will update the document."}]}, {"current_segment": {"sid": 8135, "labels": "Social,Social", "content": "\nDear all,\n"}, "context_segments": [{"sid": 1400, "labels": "StateDecision,Thanking,InformationProviding,Social", "content": "\nthanks. I will update the document."}, {"sid": 5608, "labels": "InformationProviding", "content": "WG,"}]}, {"current_segment": {"sid": 1401, "labels": "InformationProviding", "content": "The requirements and use cases document\ndraft-ietf-rtcweb-use-cases-and-requirements-09\nstarts with a use case 4.2.1 \"Simple Video Communication Service\"."}, "context_segments": []}, {"current_segment": {"sid": 5609, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "\nIn the Authors48 review of\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ I have\ncome to look at the authentication mechanisms used in RTSP 2.0. These\nare basically the HTTP mechanism with some clarifications that are based\non the ones for SIP."}, "context_segments": [{"sid": 1401, "labels": "InformationProviding", "content": "The requirements and use cases document\ndraft-ietf-rtcweb-use-cases-and-requirements-09\nstarts with a use case 4.2.1 \"Simple Video Communication Service\"."}]}, {"current_segment": {"sid": 8136, "labels": "InformationProviding,Agreement,InformationProviding,Agreement", "content": "\nI fully agree with Gilles here. It's true that Keccak is slower in\nsoftware than, e.g., Blake 2, but when compared to SHA-512, there's not\nmuch of a difference, except if SHA-512 has hardware acceleration [1].\nAs much as I like fast crypto, I think that simplicity is more\nimportant.\n\nSome people have argued that SHA-3 is complex to implement in software,\nbut actually, an implementation of all 6 algorithms of the FIPS-202\nstandard fits into just 9 tweets:\nhttp://keccak.noekeon.org/tweetfips202.html\n"}, "context_segments": [{"sid": 1401, "labels": "InformationProviding", "content": "The requirements and use cases document\ndraft-ietf-rtcweb-use-cases-and-requirements-09\nstarts with a use case 4.2.1 \"Simple Video Communication Service\"."}, {"sid": 5609, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "\nIn the Authors48 review of\nhttps://datatracker.ietf.org/doc/draft-ietf-mmusic-rfc2326bis/ I have\ncome to look at the authentication mechanisms used in RTSP 2.0. These\nare basically the HTTP mechanism with some clarifications that are based\non the ones for SIP."}]}, {"current_segment": {"sid": 1402, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt is not at all obvious from the text that this service provides audio\nas well as video. Audio is only mentioned in a couple of paranthesis in\nsection 4.2.1. I suggest to clearly state in section 4.2.1.1 that audio\nis included."}, "context_segments": []}, {"current_segment": {"sid": 5610, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,InformationProviding,StateDecision", "content": "\nThe draft that was approved by IESG more than 2 years ago pointed to RFC\n2617. However, since then the updated HTTP specification has been\napproved RFC7230 to RFC7235. So part of preparation for publication we\nhave updated references to the current specifications."}, "context_segments": [{"sid": 1402, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt is not at all obvious from the text that this service provides audio\nas well as video. Audio is only mentioned in a couple of paranthesis in\nsection 4.2.1. I suggest to clearly state in section 4.2.1.1 that audio\nis included."}]}, {"current_segment": {"sid": 8137, "labels": "Agreement,Agreement,InformationProviding", "content": "+1\n\nSent\u00a0from\u00a0my\u00a0BlackBerry\u00a010\u00a0smartphone\u00a0on\u00a0the Verizon\u00a0Wireless\u00a04G\u00a0LTE\u00a0network.\nOriginal Message"}, "context_segments": [{"sid": 1402, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nIt is not at all obvious from the text that this service provides audio\nas well as video. Audio is only mentioned in a couple of paranthesis in\nsection 4.2.1. I suggest to clearly state in section 4.2.1.1 that audio\nis included."}, {"sid": 5610, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,StateDecision,InformationProviding,StateDecision", "content": "\nThe draft that was approved by IESG more than 2 years ago pointed to RFC\n2617. However, since then the updated HTTP specification has been\napproved RFC7230 to RFC7235. So part of preparation for publication we\nhave updated references to the current specifications."}]}, {"current_segment": {"sid": 1403, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nProposed changed 4.2.1.1"}, "context_segments": []}, {"current_segment": {"sid": 5611, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThis has had relative minor impact as all the headers etc are copied and\nauthoritatively specified in the RTSP specification. Then there are\nsecurity considerations that are referencing issues and threats and\nremedies that are generally applicable in the new specification. This\nrequired some work, and even leaving some references to the obsolete one\nas the new one lacks corresponding text. However, this is not protocol\nspecifications."}, "context_segments": [{"sid": 1403, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nProposed changed 4.2.1.1"}]}, {"current_segment": {"sid": 1404, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\n4.2.1. Simple Video Communication Service"}, "context_segments": []}, {"current_segment": {"sid": 5612, "labels": "InformationProviding,ExtensionOfPrevious,StateDecision,InformationProviding,StateDecision", "content": "\nHowever, the references to RFC2617 they are however protocol details.\nRFC2617 has been changed to consist of a framework document (RFC7235)\nand the basic (RFC7617) and digest (RFC7616) authentication schemes.\nThis will have impact on the actual protocol implementations."}, "context_segments": [{"sid": 1404, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\n4.2.1. Simple Video Communication Service"}]}, {"current_segment": {"sid": 1405, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n4.2.1.1. Description"}, "context_segments": []}, {"current_segment": {"sid": 5613, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding,ContextSetting", "content": "\nTo give you some understanding of what has changed I have below included\nthe three RFCs changes section. I think using the latest version rather\nthan pointing to the obsoleted versions will mean an improvement in\nclarity, and also modern algorithms. I note that the RTSP 2.0\nspecification already mandates support of SHA-256 in the\nAccept-Credentials header."}, "context_segments": [{"sid": 1405, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n4.2.1.1. Description"}]}, {"current_segment": {"sid": 1406, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nTwo or more users have loaded a video communication web application\ninto their browsers, provided by the same service provider, and\nlogged into the service it provides.  The web service publishes\ninformation about user login status by pushing updates to the web\napplication in the browsers.  When one online user selects a peer\nonline user, a 1-1 communication session  with video and audio\nbetween the browsers of the two peers is initiated.  The invited\nuser might accept or reject the session."}, "context_segments": []}, {"current_segment": {"sid": 5614, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nHowever, if someone has concerns over these changes, please raise them now."}, "context_segments": [{"sid": 1406, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nTwo or more users have loaded a video communication web application\ninto their browsers, provided by the same service provider, and\nlogged into the service it provides.  The web service publishes\ninformation about user login status by pushing updates to the web\napplication in the browsers.  When one online user selects a peer\nonline user, a 1-1 communication session  with video and audio\nbetween the browsers of the two peers is initiated.  The invited\nuser might accept or reject the session."}]}, {"current_segment": {"sid": 1407, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nDuring session establishment a self-view is displayed, and once the\nsession has been established the video sent from the remote peer is\ndisplayed in addition to the self-view.  During the session, each\nuser can select to remove and re-insert the self-view as often as\ndesired.  Each user can also change the sizes of his/her two video\ndisplays during the session.  Audio is also exchanged between the\nparties.  Each user can also pause sending of media (audio, video,\nor both) and mute incoming media."}, "context_segments": []}, {"current_segment": {"sid": 5615, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRFC 7235:\nAppendix A.  Changes from RFCs 2616 and 2617"}, "context_segments": [{"sid": 1407, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\nDuring session establishment a self-view is displayed, and once the\nsession has been established the video sent from the remote peer is\ndisplayed in addition to the self-view.  During the session, each\nuser can select to remove and re-insert the self-view as often as\ndesired.  Each user can also change the sizes of his/her two video\ndisplays during the session.  Audio is also exchanged between the\nparties.  Each user can also pause sending of media (audio, video,\nor both) and mute incoming media."}]}, {"current_segment": {"sid": 1408, "labels": "InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Social", "content": "\nSimilarly, 4.3.1 Telephony terminal description would need mentioning\nthat the call provides video and audio communication.\nI can only deduct that from requirement F1 that says that the camera is\nused, and F5 saying that good audio and video rendering is required.\nNothing in 4.3.1 says what media is provided.  (Was video intended in\nthis use case?)\nPlease add."}, "context_segments": []}, {"current_segment": {"sid": 5616, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe framework for HTTP Authentication is now defined by this\ndocument, rather than RFC 2617."}, "context_segments": [{"sid": 1408, "labels": "InformationSeeking,Question,InformationProviding,ContextSetting,ProposeAction,Social", "content": "\nSimilarly, 4.3.1 Telephony terminal description would need mentioning\nthat the call provides video and audio communication.\nI can only deduct that from requirement F1 that says that the camera is\nused, and F5 saying that good audio and video rendering is required.\nNothing in 4.3.1 says what media is provided.  (Was video intended in\nthis use case?)\nPlease add."}]}, {"current_segment": {"sid": 1409, "labels": "StateDecision,InformationProviding", "content": "\n(I will return separately to the proposals from yesterday to add the\ntext medium.)"}, "context_segments": []}, {"current_segment": {"sid": 5617, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nThe \"realm\" parameter is no longer always required on challenges;\nconsequently, the ABNF allows challenges without any auth parameters.\n(Section 2)"}, "context_segments": [{"sid": 1409, "labels": "StateDecision,InformationProviding", "content": "\n(I will return separately to the proposals from yesterday to add the\ntext medium.)"}]}, {"current_segment": {"sid": 5618, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe \"token68\" alternative to auth-param lists has been added for\nconsistency with legacy authentication schemes such as \"Basic\".\n(Section 2)"}, "context_segments": []}, {"current_segment": {"sid": 5619, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThis specification introduces the Authentication Scheme Registry,\nalong with considerations for new authentication schemes.\n(Section 5.1)"}, "context_segments": []}, {"current_segment": {"sid": 5620, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRFC 7616:\nAppendix A.  Changes from RFC 2617"}, "context_segments": []}, {"current_segment": {"sid": 5621, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ContextSetting", "content": "\nThis document introduces the following changes:"}, "context_segments": []}, {"current_segment": {"sid": 5622, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  Adds support for two new algorithms, SHA2-256 as mandatory and\nSHA2-512/256 as a backup, and defines the proper algorithm\nnegotiation.  The document keeps the MD5 algorithm support but\nonly for backward compatibility."}, "context_segments": []}, {"current_segment": {"sid": 5623, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  Introduces the username hashing capability and the parameter\nassociated with that, mainly for privacy reasons."}, "context_segments": []}, {"current_segment": {"sid": 5624, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  Adds various internationalization considerations that impact the\nA1 calculation and username and password encoding."}, "context_segments": []}, {"current_segment": {"sid": 5625, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  Introduces a new IANA registry, \"Hash Algorithms for HTTP Digest\nAuthentication\", that lists the hash algorithms that can be used\nin HTTP Digest Authentication."}, "context_segments": []}, {"current_segment": {"sid": 5626, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  Deprecates backward compatibility with RFC 2069."}, "context_segments": []}, {"current_segment": {"sid": 5627, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nRFC 7617:\nAppendix A.  Changes from RFC 2617"}, "context_segments": []}, {"current_segment": {"sid": 5628, "labels": "InformationProviding,ExtensionOfPrevious,ClarificationElicitation,StateDecision,InformationSeeking", "content": "\nThe scheme definition has been rewritten to be consistent with newer\nspecifications such as [RFC7235]."}, "context_segments": []}, {"current_segment": {"sid": 5629, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nThe new authentication parameter 'charset' has been added.  It is\npurely advisory, so existing implementations do not need to change,\nunless they want to take advantage of the additional information that\npreviously wasn't available."}, "context_segments": []}, {"current_segment": {"sid": 5630, "labels": "InformationProviding,InformationProviding,StateDecision", "content": "\nI have implemented this in the specification text after having reviewed\nthe new specifications in detail."}, "context_segments": []}, {"current_segment": {"sid": 5631, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nSo this means that SHA2-256 is the mandatory hashing algorithm, rather\nthan MD5. As RTSP 2.0 already requires support of SHA2-256 the extra\nimplementation impact is minimal."}, "context_segments": []}, {"current_segment": {"sid": 5632, "labels": "Social,Social", "content": "Hi,"}, "context_segments": []}, {"current_segment": {"sid": 5633, "labels": "InformationProviding,ExtensionOfPrevious,StateDecision,InformationProviding,StateDecision", "content": "\nI have also chosen to attempt to point even more on the new RFCs 7235,\n7615, 7616, and 7617. This includes also the ABNF of the field values.\nThis is so that RTSP 2.0 will use HTTP authentication as defined, and\nnot its own variant."}, "context_segments": []}, {"current_segment": {"sid": 1415, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "Howdy,\nWith regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever."}, "context_segments": []}, {"current_segment": {"sid": 5653, "labels": "Social,Social", "content": "Hi,"}, "context_segments": [{"sid": 1415, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "Howdy,\nWith regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever."}]}, {"current_segment": {"sid": 8138, "labels": "Question,InformationProviding,Agreement,Question,InformationProviding,InformationSeeking", "content": "\nThere's been a lot of criticism for contexts, since of course they\nare redundant with prefixing the message.  I still kind of like\nthem, because in some legacy protocol you can specify the signature\nalgorithm as Ed448(context=`my legacy protocol') and it will be\nseparated from other uses of Ed448 with the same key.  But I agree\nthat the split is confusing as it is now.\n\nIn what legacy protocol can you specify a new signature scheme over a\nnew curve with a new special-purpose context parameter for existing\nkeys, yet you can't control anything else about how the existing keys\nare used for other inputs?"}, "context_segments": [{"sid": 1415, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "Howdy,\nWith regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever."}, {"sid": 5653, "labels": "Social,Social", "content": "Hi,"}]}, {"current_segment": {"sid": 1416, "labels": "Agreement,InformationProviding", "content": "\nAgree that it limits interoperability.\n"}, "context_segments": [{"sid": 1415, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "Howdy,\nWith regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever."}, {"sid": 5653, "labels": "Social,Social", "content": "Hi,"}, {"sid": 8138, "labels": "Question,InformationProviding,Agreement,Question,InformationProviding,InformationSeeking", "content": "\nThere's been a lot of criticism for contexts, since of course they\nare redundant with prefixing the message.  I still kind of like\nthem, because in some legacy protocol you can specify the signature\nalgorithm as Ed448(context=`my legacy protocol') and it will be\nseparated from other uses of Ed448 with the same key.  But I agree\nthat the split is confusing as it is now.\n\nIn what legacy protocol can you specify a new signature scheme over a\nnew curve with a new special-purpose context parameter for existing\nkeys, yet you can't control anything else about how the existing keys\nare used for other inputs?"}]}, {"current_segment": {"sid": 8139, "labels": "InformationProviding,Answer,ProposeAction,InformationProviding,Answer,NeutralResponse,Social", "content": "\nLegacy protocols get extended all the time.  Especially TLS.  They get new cryptosystems and new ways of using those cryptosystems.  They have many extension specs written by many different people, some of which may be rather unlikely to change and would therefore need to be superseded, compounding the legacy headache.\n\nContexts are there so that you can domain-separate two extensions or other uses of a key, without changing the specs to both of them \u2014 or, conceivably, to either of them, if you define a way to determine the context for a given extension.\n\nI understand that this doesn\u2019t protect people who use older signature schemes that don\u2019t have contexts.  It is merely a defense in depth, but this seems appropriate for what is already a paranoid-level curve.\n\nIf you don\u2019t use the contexts, they cost a couple paragraphs in the spec, one extra byte passed to a hash function, and (if the library supports with and without) one extra function in the library API.  I hope that this is still little enough complexity that the potential gains outweigh the risks.  If not, I don\u2019t have a huge problem with removing them, but I still think it\u2019s important to distinguish prehashed and non-prehashed modes.\n\n\u2014 Mike"}, "context_segments": [{"sid": 1415, "labels": "ClarificationElicitation,InformationProviding,ContextSetting,ProposeAction,Social,InformationSeeking", "content": "Howdy,\nWith regard to mandating ICE, such that an RTCWEB browser cannot send RTP without doing ICE successfully first... is that restriction purely to prevent the voice-hammer attacks?  If so, then it's unfortunate because obviously it would seriously reduce interop with non-RTCWEB VoIP devices.  But I think there's a way to prevent the hammer attack without using ICE, and without requiring legacy VoIP devices to change whatsoever."}, {"sid": 5653, "labels": "Social,Social", "content": "Hi,"}, {"sid": 8138, "labels": "Question,InformationProviding,Agreement,Question,InformationProviding,InformationSeeking", "content": "\nThere's been a lot of criticism for contexts, since of course they\nare redundant with prefixing the message.  I still kind of like\nthem, because in some legacy protocol you can specify the signature\nalgorithm as Ed448(context=`my legacy protocol') and it will be\nseparated from other uses of Ed448 with the same key.  But I agree\nthat the split is confusing as it is now.\n\nIn what legacy protocol can you specify a new signature scheme over a\nnew curve with a new special-purpose context parameter for existing\nkeys, yet you can't control anything else about how the existing keys\nare used for other inputs?"}, {"sid": 1416, "labels": "Agreement,InformationProviding", "content": "\nAgree that it limits interoperability.\n"}]}, {"current_segment": {"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, "context_segments": []}, {"current_segment": {"sid": 5654, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nNext meeting:\nProposal: 2nd April."}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}]}, {"current_segment": {"sid": 8140, "labels": "InformationProviding,InformationProviding", "content": "draft-irtf-"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5654, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nNext meeting:\nProposal: 2nd April."}]}, {"current_segment": {"sid": 1418, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nThis is not as safe. There are devices/software that do things upon receipt of RTP packets (like play them out through loudspeakers, or initiate ringing of the softphone), and more important RTP packets are not carefully designed to avoid imitating other types of traffic such as SNMP, whereas STUN packets contain a relatively large header with a magic number that makes them much less likely to be misinterpreted by other protocols.\n\nAdditionally the STUN connectivity check used for ICE contains short-term credentials and a transaction ID that is unknown to the signaling layer (or Javascript) that ensure that you are in fact conducting a pairwise negotiation with the far end that you are thinking of. With RTP/RTCP packets alone you can create attacks both from the browser (by sending RTP/RTCP and using something else to spoof enough replies that the test passes) or on the browser (by sending it RTP from somewhere else).\n\nAnd of course ICE, or something like it, is required anyway for doing NAT traversal.\n"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5654, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nNext meeting:\nProposal: 2nd April."}, {"sid": 8140, "labels": "InformationProviding,InformationProviding", "content": "draft-irtf-"}]}, {"current_segment": {"sid": 1419, "labels": "ClarificationElicitation,InformationProviding,Agreement,ContextSetting,ProposeAction,InformationSeeking", "content": "\nNo it's not as \"safe\", but it may be safe enough.\nWith regards to being misinterpreted by others, since the web server javascript cannot define the actual payload of the RTP (correct?), and things like sequence numbers would also be randomly chosen by the browser, so it's not like the javascript can purposefully craft an RTP packet to immitate other protocols.  For example it would be an astronmoical coincidence for any given RTP packet to be parsable as SNMP BER for a given ASN.1 dictionary.\n(Also as an aside, if I recall correctly SNMP is actually distinguishable from RTP by the first byte)\n"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5654, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nNext meeting:\nProposal: 2nd April."}, {"sid": 8140, "labels": "InformationProviding,InformationProviding", "content": "draft-irtf-"}, {"sid": 1418, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nThis is not as safe. There are devices/software that do things upon receipt of RTP packets (like play them out through loudspeakers, or initiate ringing of the softphone), and more important RTP packets are not carefully designed to avoid imitating other types of traffic such as SNMP, whereas STUN packets contain a relatively large header with a magic number that makes them much less likely to be misinterpreted by other protocols.\n\nAdditionally the STUN connectivity check used for ICE contains short-term credentials and a transaction ID that is unknown to the signaling layer (or Javascript) that ensure that you are in fact conducting a pairwise negotiation with the far end that you are thinking of. With RTP/RTCP packets alone you can create attacks both from the browser (by sending RTP/RTCP and using something else to spoof enough replies that the test passes) or on the browser (by sending it RTP from somewhere else).\n\nAnd of course ICE, or something like it, is required anyway for doing NAT traversal.\n"}]}, {"current_segment": {"sid": 5655, "labels": "InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nIf you would like to participate please send a mail and you will receive\nthe contact information."}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}]}, {"current_segment": {"sid": 8141, "labels": "Question,ContextSetting,NeutralResponse,ContextSetting,ProposeAction,InformationSeeking,InformationProviding", "content": "What if we do the following for dealing with things:"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5655, "labels": "InformationProviding,ContextSetting,ProposeAction,Social,InformationProviding,ProposeAction", "content": "\nIf you would like to participate please send a mail and you will receive\nthe contact information."}]}, {"current_segment": {"sid": 5656, "labels": "ContextSetting,Apologising,InformationProviding,Apologising,Social", "content": "\nSorry being this late. Here is the proposed agenda for tomorrow's telecon."}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}]}, {"current_segment": {"sid": 8142, "labels": "InformationProviding,Agreement,Agreement", "content": "I like this hack, though it is certainly a hack.  Does"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5656, "labels": "ContextSetting,Apologising,InformationProviding,Apologising,Social", "content": "\nSorry being this late. Here is the proposed agenda for tomorrow's telecon."}]}, {"current_segment": {"sid": 1422, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nIf we used RTCP as part of the check, the reports contain a last received sequence number which would not be known to the javascript.  (it's a hack to be sure, but if we want to handle non-RTCWEB devices, a hack's better than nothing)\n"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5656, "labels": "ContextSetting,Apologising,InformationProviding,Apologising,Social", "content": "\nSorry being this late. Here is the proposed agenda for tomorrow's telecon."}, {"sid": 8142, "labels": "InformationProviding,Agreement,Agreement", "content": "I like this hack, though it is certainly a hack.  Does"}, {"sid": 1418, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nThis is not as safe. There are devices/software that do things upon receipt of RTP packets (like play them out through loudspeakers, or initiate ringing of the softphone), and more important RTP packets are not carefully designed to avoid imitating other types of traffic such as SNMP, whereas STUN packets contain a relatively large header with a magic number that makes them much less likely to be misinterpreted by other protocols.\n\nAdditionally the STUN connectivity check used for ICE contains short-term credentials and a transaction ID that is unknown to the signaling layer (or Javascript) that ensure that you are in fact conducting a pairwise negotiation with the far end that you are thinking of. With RTP/RTCP packets alone you can create attacks both from the browser (by sending RTP/RTCP and using something else to spoof enough replies that the test passes) or on the browser (by sending it RTP from somewhere else).\n\nAnd of course ICE, or something like it, is required anyway for doing NAT traversal.\n"}]}, {"current_segment": {"sid": 5657, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\n1. Follow up:\n- draft-ietf-mmusic-rfc2326bis-03.txt\n- Interleave: Aravind to write text and post to MMUSIC to address\nall four bugs.\n- Everybody reads on offer/answer (RFC 3264) and meet in next IETF\nmeeting to take next step."}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}]}, {"current_segment": {"sid": 8143, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,NeutralResponse", "content": "I would have to go through the mailing list again to be sure, however I\nbelieve that the argument was the Ed25519 is currently being used in\nprotocols today.  For some reason I seem to remember that SSH was one such\nbut I don't have anything but a vague memory to back that up. If so, the\nversion being used in SSH does not have the context structure built into it.\nThe desire was to not deliberately have an incompatible signature scheme\ndefined here that would not match what is being done in these protocols."}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5657, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\n1. Follow up:\n- draft-ietf-mmusic-rfc2326bis-03.txt\n- Interleave: Aravind to write text and post to MMUSIC to address\nall four bugs.\n- Everybody reads on offer/answer (RFC 3264) and meet in next IETF\nmeeting to take next step."}]}, {"current_segment": {"sid": 1424, "labels": "InformationProviding,Disagreement", "content": "\nNot when communicating with legacy voip devices and the PSTN.\n"}, "context_segments": [{"sid": 1417, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nOne way would be to use the receipt of RTP as an indicator the far-end expects to receive it from you.  So have the browser generate RTP/RTCP packets, at a relatively slow rate, for a short duration (e.g., use the same rate/retransmit timers of STUN connectivity checks in ICE).  If the browser receives RTP/RTCP packets, then the far-end expected to receive them as well and the browser can do normal RTP from then on."}, {"sid": 5657, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding,ProposeAction", "content": "\n1. Follow up:\n- draft-ietf-mmusic-rfc2326bis-03.txt\n- Interleave: Aravind to write text and post to MMUSIC to address\nall four bugs.\n- Everybody reads on offer/answer (RFC 3264) and meet in next IETF\nmeeting to take next step."}, {"sid": 8143, "labels": "InformationProviding,Answer,NeutralResponse,InformationProviding,Answer,NeutralResponse", "content": "I would have to go through the mailing list again to be sure, however I\nbelieve that the argument was the Ed25519 is currently being used in\nprotocols today.  For some reason I seem to remember that SSH was one such\nbut I don't have anything but a vague memory to back that up. If so, the\nversion being used in SSH does not have the context structure built into it.\nThe desire was to not deliberately have an incompatible signature scheme\ndefined here that would not match what is being done in these protocols."}, {"sid": 1418, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nThis is not as safe. There are devices/software that do things upon receipt of RTP packets (like play them out through loudspeakers, or initiate ringing of the softphone), and more important RTP packets are not carefully designed to avoid imitating other types of traffic such as SNMP, whereas STUN packets contain a relatively large header with a magic number that makes them much less likely to be misinterpreted by other protocols.\n\nAdditionally the STUN connectivity check used for ICE contains short-term credentials and a transaction ID that is unknown to the signaling layer (or Javascript) that ensure that you are in fact conducting a pairwise negotiation with the far end that you are thinking of. With RTP/RTCP packets alone you can create attacks both from the browser (by sending RTP/RTCP and using something else to spoof enough replies that the test passes) or on the browser (by sending it RTP from somewhere else).\n\nAnd of course ICE, or something like it, is required anyway for doing NAT traversal.\n"}]}, {"current_segment": {"sid": 1426, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nIf this was a hammer attack, this doesn't generate any more load on the target than ICE, since ICE would have sent X number of STUN packets for Y time as well, and I'm suggesting the X and Y be the same values for the initial RTP packets during the \"check\" phase."}, "context_segments": []}, {"current_segment": {"sid": 5658, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n2. What to discuss during the IETF and the MMUSIC session.\n-  What to take up to the whole WG:\n+ The last changes\n+ Open issues that need input?\n- Off line session\n+ Offer Answer for RTSP?\n+\n3. New Issues:\n* Unclarities when doing resetup\nhttp://rtsp.org/bug513737"}, "context_segments": [{"sid": 1426, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nIf this was a hammer attack, this doesn't generate any more load on the target than ICE, since ICE would have sent X number of STUN packets for Y time as well, and I'm suggesting the X and Y be the same values for the initial RTP packets during the \"check\" phase."}]}, {"current_segment": {"sid": 8144, "labels": "InformationProviding,Agreement,InformationProviding,NeutralResponse", "content": "It is a hack, but as hacks go this is relatively clean and looks like it addresses the problems.  There would be a question in the Curdle group about which of the 25519 functions to support - with or w/o the context but other than that things look good."}, "context_segments": [{"sid": 1426, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nIf this was a hammer attack, this doesn't generate any more load on the target than ICE, since ICE would have sent X number of STUN packets for Y time as well, and I'm suggesting the X and Y be the same values for the initial RTP packets during the \"check\" phase."}, {"sid": 5658, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n2. What to discuss during the IETF and the MMUSIC session.\n-  What to take up to the whole WG:\n+ The last changes\n+ Open issues that need input?\n- Off line session\n+ Offer Answer for RTSP?\n+\n3. New Issues:\n* Unclarities when doing resetup\nhttp://rtsp.org/bug513737"}]}, {"current_segment": {"sid": 1427, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nProblem is that it isn't just load. Another class of attack is sending packets to things like SNMP servers behind a firewall. No matter how slow the rate, if one of the packets causes bad things to happen then you have a security problem.\n"}, "context_segments": [{"sid": 1426, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nIf this was a hammer attack, this doesn't generate any more load on the target than ICE, since ICE would have sent X number of STUN packets for Y time as well, and I'm suggesting the X and Y be the same values for the initial RTP packets during the \"check\" phase."}, {"sid": 5658, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n2. What to discuss during the IETF and the MMUSIC session.\n-  What to take up to the whole WG:\n+ The last changes\n+ Open issues that need input?\n- Off line session\n+ Offer Answer for RTSP?\n+\n3. New Issues:\n* Unclarities when doing resetup\nhttp://rtsp.org/bug513737"}, {"sid": 8144, "labels": "InformationProviding,Agreement,InformationProviding,NeutralResponse", "content": "It is a hack, but as hacks go this is relatively clean and looks like it addresses the problems.  There would be a question in the Curdle group about which of the 25519 functions to support - with or w/o the context but other than that things look good."}]}, {"current_segment": {"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, "context_segments": []}, {"current_segment": {"sid": 5659, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* Conference header underspecified\nhttp://rtsp.org/bug539040"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}]}, {"current_segment": {"sid": 8145, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nEd25519:"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5659, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* Conference header underspecified\nhttp://rtsp.org/bug539040"}]}, {"current_segment": {"sid": 1429, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "I think this approach is not paranoid enough."}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5659, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* Conference header underspecified\nhttp://rtsp.org/bug539040"}, {"sid": 8145, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting", "content": "\nEd25519:"}]}, {"current_segment": {"sid": 5660, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Clarify Range Where t0 <= t1\" & \"How to use Range when Scale is\nnegative\"\nhttp://rtsp.org/bug533691\nhttp://rtsp.org/bug513880"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}]}, {"current_segment": {"sid": 8146, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nr = SHA-512(dom(F, c) || prefix || PH(M))\nk = SHA-512(dom(F, c) || A || PH(M))"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5660, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Clarify Range Where t0 <= t1\" & \"How to use Range when Scale is\nnegative\"\nhttp://rtsp.org/bug533691\nhttp://rtsp.org/bug513880"}]}, {"current_segment": {"sid": 1430, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe attacker will negotiate a channel claiming that you can reach him on\n10.0.0.2 (your server that he wants to voice-hammer), and then send you\nthe five or so RTP packets you expect with a fake source address of\n10.0.0.2.\n\nThen you, having seen exactly the packets that \"authorize\" sending\ntraffic to 10.0.0.2, will be performing the voice-hammer attack against\nthe server that the attacker otherwise couldn't reach.\n\nYou would have to send RTP packets yourself (which will correctly be\ndropped on the floor by 10.0.0.2) until the time at which you can start\nwondering about there being no RTCP packets from 10.0.0.2 in order to\nhave a 2-way handshake - and that only works if the RTCP RR contains\nenough stuff the attacker can't predict that he can't just generate the\nRTCP too.\n\n(This doesn't work with ICE, because the ICE handshake involves the\nrecipient replying to your packet with some parameters that can only be\nfound in the request, not in the negotiation)."}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5660, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Clarify Range Where t0 <= t1\" & \"How to use Range when Scale is\nnegative\"\nhttp://rtsp.org/bug533691\nhttp://rtsp.org/bug513880"}, {"sid": 8146, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nr = SHA-512(dom(F, c) || prefix || PH(M))\nk = SHA-512(dom(F, c) || A || PH(M))"}]}, {"current_segment": {"sid": 1431, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction", "content": "\nYes, that was the weakness of the model as I described in my original email: that the malicious web-server can spoof the RTP from the device being attacked.\nAnd I proposed that instead of it being a single \"authorization\" phase at the beginning of the call, it could even be continuous/periodic.  Of course the web-server could continuously send spoofed RTP to the browser, but at that point it might as well do the attack directly spoofing the browser. (in other words, the malicious website isn't gaining a very useful botnet of attackers, since I assume that's the concern)\n"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5660, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Clarify Range Where t0 <= t1\" & \"How to use Range when Scale is\nnegative\"\nhttp://rtsp.org/bug533691\nhttp://rtsp.org/bug513880"}, {"sid": 8146, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nr = SHA-512(dom(F, c) || prefix || PH(M))\nk = SHA-512(dom(F, c) || A || PH(M))"}, {"sid": 1430, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe attacker will negotiate a channel claiming that you can reach him on\n10.0.0.2 (your server that he wants to voice-hammer), and then send you\nthe five or so RTP packets you expect with a fake source address of\n10.0.0.2.\n\nThen you, having seen exactly the packets that \"authorize\" sending\ntraffic to 10.0.0.2, will be performing the voice-hammer attack against\nthe server that the attacker otherwise couldn't reach.\n\nYou would have to send RTP packets yourself (which will correctly be\ndropped on the floor by 10.0.0.2) until the time at which you can start\nwondering about there being no RTCP packets from 10.0.0.2 in order to\nhave a 2-way handshake - and that only works if the RTCP RR contains\nenough stuff the attacker can't predict that he can't just generate the\nRTCP too.\n\n(This doesn't work with ICE, because the ICE handshake involves the\nrecipient replying to your packet with some parameters that can only be\nfound in the request, not in the negotiation)."}]}, {"current_segment": {"sid": 5661, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n* \"When can REDIRECT be received?\",\nhttp://rtsp.org/bug556061"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}]}, {"current_segment": {"sid": 8147, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nwhere\ndom(F, c) = empty string for PureEdDSA\ndom(F, c) = \"SigEd25519\" || octet(x) || octet(OLEN(y)) || y    for Prehash-EdDSA"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5661, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n* \"When can REDIRECT be received?\",\nhttp://rtsp.org/bug556061"}]}, {"current_segment": {"sid": 1432, "labels": "InformationProviding,Agreement,ProposeAction", "content": "\nYes I know ICE solves this, but since ICE doesn't exist for legacy VoIP and PSTN, a non-existent solution isn't very useful.\n\n-hadriel"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5661, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,InformationSeeking", "content": "\n* \"When can REDIRECT be received?\",\nhttp://rtsp.org/bug556061"}, {"sid": 8147, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nwhere\ndom(F, c) = empty string for PureEdDSA\ndom(F, c) = \"SigEd25519\" || octet(x) || octet(OLEN(y)) || y    for Prehash-EdDSA"}, {"sid": 1430, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe attacker will negotiate a channel claiming that you can reach him on\n10.0.0.2 (your server that he wants to voice-hammer), and then send you\nthe five or so RTP packets you expect with a fake source address of\n10.0.0.2.\n\nThen you, having seen exactly the packets that \"authorize\" sending\ntraffic to 10.0.0.2, will be performing the voice-hammer attack against\nthe server that the attacker otherwise couldn't reach.\n\nYou would have to send RTP packets yourself (which will correctly be\ndropped on the floor by 10.0.0.2) until the time at which you can start\nwondering about there being no RTCP packets from 10.0.0.2 in order to\nhave a 2-way handshake - and that only works if the RTCP RR contains\nenough stuff the attacker can't predict that he can't just generate the\nRTCP too.\n\n(This doesn't work with ICE, because the ICE handshake involves the\nrecipient replying to your packet with some parameters that can only be\nfound in the request, not in the negotiation)."}]}, {"current_segment": {"sid": 5662, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Client issues PAUSE while server ready\"\nhttp://rtsp.org/bug556295"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}]}, {"current_segment": {"sid": 8148, "labels": "ProposeAction,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nEd448:\nKeep the fomulas as they are today."}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5662, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Client issues PAUSE while server ready\"\nhttp://rtsp.org/bug556295"}]}, {"current_segment": {"sid": 1433, "labels": "Agreement,ProposeAction,InformationProviding", "content": "\nIndeed. See above.\n"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 5662, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\n* \"Client issues PAUSE while server ready\"\nhttp://rtsp.org/bug556295"}, {"sid": 8148, "labels": "ProposeAction,ExtensionOfPrevious,ProposeAction,InformationProviding", "content": "\nEd448:\nKeep the fomulas as they are today."}]}, {"current_segment": {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}]}, {"current_segment": {"sid": 1434, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nI don't believe this is the case. There's so many cases where one side sends A+V but the other side sends audio only, and sending HD-video-rate traffic to an unsuspecting endpoint is unacceptable.\n\nThis is even worse if we allow arbitrary datagrams with a relatively short header, as these will be even easier to craft into attacks on other protocols if there isn't confirmed consent.\n"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}]}, {"current_segment": {"sid": 8150, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "\nI would use some 32-byte prefix that does not decode as valid point.\nEven if I don't know any attacks if prefix can decode as a valid point,\nI'd rather not risk anything.\n"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}, {"sid": 1434, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nI don't believe this is the case. There's so many cases where one side sends A+V but the other side sends audio only, and sending HD-video-rate traffic to an unsuspecting endpoint is unacceptable.\n\nThis is even worse if we allow arbitrary datagrams with a relatively short header, as these will be even easier to craft into attacks on other protocols if there isn't confirmed consent.\n"}]}, {"current_segment": {"sid": 1435, "labels": "InformationProviding,NeutralResponse,ContextSetting,ProposeAction", "content": "\nI should probably write it up in a draft to be much more clear, but to the above point that's not an issue.  I'm not suggesting the browser be allowed to do this RTP-based verification for any and all use-cases.  I'm only suggesting it to handle the large population of legacy VoIP devices, including to the PSTN.  Video without audio, or any future data-type streams, would not apply and we don't need to handle them this way and can restrict the browser from allowing it.\n\n-hadriel"}, "context_segments": [{"sid": 1428, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe major weakness of this approach is that a malicious web-server trying to get your browser to do the voice hammer could send RTP to your browser, since it knows the address/ports of both sides, codec payload types, etc. (i.e., it can spoof being the attack target to make your browser think it's ok to do normal RTP)  But we could probably play games with RTCP SR/RR or even just require continued RTP receipt to send RTP, in order to mitigate this weakness or make it of low value to exploit."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}, {"sid": 1434, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nI don't believe this is the case. There's so many cases where one side sends A+V but the other side sends audio only, and sending HD-video-rate traffic to an unsuspecting endpoint is unacceptable.\n\nThis is even worse if we allow arbitrary datagrams with a relatively short header, as these will be even easier to craft into attacks on other protocols if there isn't confirmed consent.\n"}, {"sid": 8150, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "\nI would use some 32-byte prefix that does not decode as valid point.\nEven if I don't know any attacks if prefix can decode as a valid point,\nI'd rather not risk anything.\n"}]}, {"current_segment": {"sid": 1437, "labels": "InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nDoes anyone else care about interop-ing with legacy non-RTCWEB voip devices?  I checked draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't see it, so I'm not sure."}, "context_segments": []}, {"current_segment": {"sid": 1438, "labels": "InformationProviding,Answer,ContextSetting,ProposeAction", "content": "\nI care, but I think that the legacy devices are going to need a way to consent. At one of our first meetings prior to forming the WG I came up with additional terminology to describe devices which are legacy and cannot be upgraded vs. devices which are legacy but which can be upgraded sufficiently to add the ICE handshake... we should probably bring that back for convenience.\n"}, "context_segments": [{"sid": 1437, "labels": "InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nDoes anyone else care about interop-ing with legacy non-RTCWEB voip devices?  I checked draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't see it, so I'm not sure."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}]}, {"current_segment": {"sid": 8151, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nAlso, If one wanted to do contexts in another document, one could\njust fix the OLEN octet to 0 (so it is compatible).\n"}, "context_segments": [{"sid": 1437, "labels": "InformationSeeking,Question,ExtensionOfPrevious,ContextSetting,ProposeAction,InformationProviding", "content": "\nDoes anyone else care about interop-ing with legacy non-RTCWEB voip devices?  I checked draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't see it, so I'm not sure."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}, {"sid": 1438, "labels": "InformationProviding,Answer,ContextSetting,ProposeAction", "content": "\nI care, but I think that the legacy devices are going to need a way to consent. At one of our first meetings prior to forming the WG I came up with additional terminology to describe devices which are legacy and cannot be upgraded vs. devices which are legacy but which can be upgraded sufficiently to add the ICE handshake... we should probably bring that back for convenience.\n"}]}, {"current_segment": {"sid": 1439, "labels": "InformationProviding,Agreement,ProposeAction", "content": "[BA] Agree that it's worth exploring further, if only to document what the security requirements are, and what is required to meet them.  The problem with the gateway argument is that it can be extended too far -- it is one thing to require a gateway for signaling, and quite another to require transcoding of media, for example.  As long as we have legacy interop use cases, and aren't asserting that RTCWEB represents a \"singularity\", then we need to be able to handle them."}, "context_segments": []}, {"current_segment": {"sid": 8152, "labels": "InformationProviding,Social", "content": "\n-Ilari"}, "context_segments": [{"sid": 1439, "labels": "InformationProviding,Agreement,ProposeAction", "content": "[BA] Agree that it's worth exploring further, if only to document what the security requirements are, and what is required to meet them.  The problem with the gateway argument is that it can be extended too far -- it is one thing to require a gateway for signaling, and quite another to require transcoding of media, for example.  As long as we have legacy interop use cases, and aren't asserting that RTCWEB represents a \"singularity\", then we need to be able to handle them."}, {"sid": 8149, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThis would allow for a later definition of a 25519 context pure EdDSA in a new document.  While I would prefer to make this the one that is used in the IETF going forward, these changes will make things cleaner today and still allow for a forward path in the future if needed."}]}, {"current_segment": {"sid": 1440, "labels": "ContextSetting,ProposeAction,InformationProviding", "content": "Let me suggest a variation on this.."}, "context_segments": []}, {"current_segment": {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}, "context_segments": [{"sid": 1440, "labels": "ContextSetting,ProposeAction,InformationProviding", "content": "Let me suggest a variation on this.."}]}, {"current_segment": {"sid": 8154, "labels": "InformationProviding,NeutralResponse,InformationProviding,NeutralResponse", "content": "\nI really don't think Ed25519 should be any different from what is in the\nwild. Ed25519ph is not in the wild much.\n\nThe Chacha20-Poly1305 mess was bad enough, and that function was MUCH\nless out there than Ed25519.\n"}, "context_segments": [{"sid": 1440, "labels": "ContextSetting,ProposeAction,InformationProviding", "content": "Let me suggest a variation on this.."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}]}, {"current_segment": {"sid": 1441, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe rtcweb client can send RTP packet, voice-only, for a brief period of\ntime (say, 2x the RTCP interval). It waits to receive an RTCP packet.\nThe RTCP packet should have an RR which reflects back the SSRC sent by\nthe client, if it does, the rtcweb client continues. If not, it stops\nsending."}, "context_segments": []}, {"current_segment": {"sid": 8155, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction", "content": "\nAlso, I came up with the following cute hack:\n\n- Split Ed448 into Ed448 and Ed448ctx according to context present/not.\n- Define Ed25519ctx with hash prefix of\n\"SigEd25519 no Ed25519 collisions\"|byte(phflag)|byte(len(ctx))|ctx\n- Define Ed25519ph in terms of Ed25519ctx.\n\nLeaves Ed448(key,message) unchanged, leaves Ed25519 unchanged, that\nprefix prevents any trivial hash collisions with Ed25519[1], prevents\nEd25519 vs. Ed25519ph key mixups (that seems like a major footcannon,\nconsidering some of the use proposals I have seen).\n\nOne couldn't then compute Ed25519ph with standard Ed25519 software,\nbut I don't consider that that major problem.\n"}, "context_segments": [{"sid": 1441, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe rtcweb client can send RTP packet, voice-only, for a brief period of\ntime (say, 2x the RTCP interval). It waits to receive an RTCP packet.\nThe RTCP packet should have an RR which reflects back the SSRC sent by\nthe client, if it does, the rtcweb client continues. If not, it stops\nsending."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}]}, {"current_segment": {"sid": 8156, "labels": "Question,Question,NeutralResponse,InformationSeeking,InformationProviding", "content": "mean that Ed448 is equivalent to Ed448ctx(context=\u201c\u201d)?  I\u2019m guessing so?"}, "context_segments": [{"sid": 1441, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe rtcweb client can send RTP packet, voice-only, for a brief period of\ntime (say, 2x the RTCP interval). It waits to receive an RTCP packet.\nThe RTCP packet should have an RR which reflects back the SSRC sent by\nthe client, if it does, the rtcweb client continues. If not, it stops\nsending."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}, {"sid": 8155, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction", "content": "\nAlso, I came up with the following cute hack:\n\n- Split Ed448 into Ed448 and Ed448ctx according to context present/not.\n- Define Ed25519ctx with hash prefix of\n\"SigEd25519 no Ed25519 collisions\"|byte(phflag)|byte(len(ctx))|ctx\n- Define Ed25519ph in terms of Ed25519ctx.\n\nLeaves Ed448(key,message) unchanged, leaves Ed25519 unchanged, that\nprefix prevents any trivial hash collisions with Ed25519[1], prevents\nEd25519 vs. Ed25519ph key mixups (that seems like a major footcannon,\nconsidering some of the use proposals I have seen).\n\nOne couldn't then compute Ed25519ph with standard Ed25519 software,\nbut I don't consider that that major problem.\n"}]}, {"current_segment": {"sid": 1442, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe purpose of the RTCP SSRC check is to emulate what the STUN\ntransaction ID provides; that there is something on the media path which\nis expecting this RTP packet. Not as good as STUN which also has the\nshort term credential, but its something."}, "context_segments": []}, {"current_segment": {"sid": 1443, "labels": "InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction", "content": "\nI had considered using the SSRC before, but I think you're gonna have to let the javascript know the SSRC to handle some SIP/SDP usages (since there's an SSRC attribute for SDP, I assume someone needs it).  No?\n\n-hadriel"}, "context_segments": [{"sid": 1442, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe purpose of the RTCP SSRC check is to emulate what the STUN\ntransaction ID provides; that there is something on the media path which\nis expecting this RTP packet. Not as good as STUN which also has the\nshort term credential, but its something."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}]}, {"current_segment": {"sid": 8157, "labels": "InformationProviding,Social", "content": "\n\u2014 Mike\n"}, "context_segments": [{"sid": 1442, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe purpose of the RTCP SSRC check is to emulate what the STUN\ntransaction ID provides; that there is something on the media path which\nis expecting this RTP packet. Not as good as STUN which also has the\nshort term credential, but its something."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}, {"sid": 1443, "labels": "InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction", "content": "\nI had considered using the SSRC before, but I think you're gonna have to let the javascript know the SSRC to handle some SIP/SDP usages (since there's an SSRC attribute for SDP, I assume someone needs it).  No?\n\n-hadriel"}, {"sid": 8155, "labels": "InformationProviding,NeutralResponse,InformationProviding,ProposeAction", "content": "\nAlso, I came up with the following cute hack:\n\n- Split Ed448 into Ed448 and Ed448ctx according to context present/not.\n- Define Ed25519ctx with hash prefix of\n\"SigEd25519 no Ed25519 collisions\"|byte(phflag)|byte(len(ctx))|ctx\n- Define Ed25519ph in terms of Ed25519ctx.\n\nLeaves Ed448(key,message) unchanged, leaves Ed25519 unchanged, that\nprefix prevents any trivial hash collisions with Ed25519[1], prevents\nEd25519 vs. Ed25519ph key mixups (that seems like a major footcannon,\nconsidering some of the use proposals I have seen).\n\nOne couldn't then compute Ed25519ph with standard Ed25519 software,\nbut I don't consider that that major problem.\n"}]}, {"current_segment": {"sid": 1444, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nLacks both the short term credential and is not enough bits to protect against attackers who can generate a flurry of forged RTCP packets. See my previous email.\n"}, "context_segments": [{"sid": 1442, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe purpose of the RTCP SSRC check is to emulate what the STUN\ntransaction ID provides; that there is something on the media path which\nis expecting this RTP packet. Not as good as STUN which also has the\nshort term credential, but its something."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}]}, {"current_segment": {"sid": 8158, "labels": "InformationProviding,InformationProviding", "content": "\n[1] If one tries to use that value as R in Ed25519, which is necressary\nfor trivial collision, verification tries to calculate square root of\nQNR, which obviously fails.\n"}, "context_segments": [{"sid": 1442, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction", "content": "\nThe purpose of the RTCP SSRC check is to emulate what the STUN\ntransaction ID provides; that there is something on the media path which\nis expecting this RTP packet. Not as good as STUN which also has the\nshort term credential, but its something."}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}, {"sid": 1444, "labels": "InformationProviding,Disagreement,ProposeAction", "content": "\nLacks both the short term credential and is not enough bits to protect against attackers who can generate a flurry of forged RTCP packets. See my previous email.\n"}]}, {"current_segment": {"sid": 1445, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "> -----Original Message-----\n> From: rtcweb-bounces@ietf.org\n> [mailto:rtcweb-bounces@ietf.org] On Behalf Of Hadriel Kaplan\n> Sent: 28 July 2011 08:52\n> To: rtcweb@ietf.org\n> Subject: [rtcweb] Strawman for how to prevent voice-hammer without ICE\n> Howdy,\n> With regard to mandating ICE, such that an RTCWEB browser\n> cannot send RTP without doing ICE successfully first... is\n> that restriction purely to prevent the voice-hammer attacks?\n> If so, then it's unfortunate because obviously it would\n> seriously reduce interop with non-RTCWEB VoIP devices.  But I\n> think there's a way to prevent the hammer attack without\n> using ICE, and without requiring legacy VoIP devices to\n> change whatsoever.\n> One way would be to use the receipt of RTP as an indicator\n> the far-end expects to receive it from you.  So have the\n> browser generate RTP/RTCP packets, at a relatively slow rate,\n> for a short duration (e.g., use the same rate/retransmit\n> timers of STUN connectivity checks in ICE).  If the browser\n> receives RTP/RTCP packets, then the far-end expected to\n> receive them as well and the browser can do normal RTP from then on.\n> If this was a hammer attack, this doesn't generate any more\n> load on the target than ICE, since ICE would have sent X\n> number of STUN packets for Y time as well, and I'm suggesting\n> the X and Y be the same values for the initial RTP packets\n> during the \"check\" phase.\n> The major weakness of this approach is that a malicious\n> web-server trying to get your browser to do the voice hammer\n> could send RTP to your browser, since it knows the\n> address/ports of both sides, codec payload types, etc. (i.e.,\n> it can spoof being the attack target to make your browser\n> think it's ok to do normal RTP)  But we could probably play\n> games with RTCP SR/RR or even just require continued RTP\n> receipt to send RTP, in order to mitigate this weakness or\n> make it of low value to exploit.\n[JRE] The problem with requiring continued RTP receipt (or even ANY RTP receipt) is sessions where RTP is one-way, e.g., when mic muted, camera off. With many asymmetric possibilities coming out of the CLUE work, this could be a problem, although it perhaps goes away if everything is multiplexed onto the same port. It depends whether we can expect all legacy devices to behave in a way that would make this work.\n\nJohn\n\nJohn Elwell\nTel: +44 1908 817801 (office and mobile)\nEmail: john.elwell@siemens-enterprise.com\nhttp://www.siemens-enterprise.com/uk/\n\nSiemens Enterprise Communications Limited.\nRegistered office: Brickhill Street, Willen Lake, Milton Keynes, MK15 0DJ.\nRegistered No: 5903714, England.\n\nSiemens Enterprise Communications Limited is a Trademark Licensee of Siemens AG.\n\n> Does anyone else care about interop-ing with legacy\n> non-RTCWEB voip devices?  I checked\n> draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't\n> see it, so I'm not sure.\n> -hadriel\n> rtcweb mailing list\n> rtcweb@ietf.org\n> https://www.ietf.org/mailman/listinfo/rtcweb"}, "context_segments": []}, {"current_segment": {"sid": 1446, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction", "content": "\nYes, but they don't turn off RTCP (assuming they do RTCP).  I'm not suggesting that it's a 1:1 mechanism of receipt/send, nor that it even be very dynamic/real-time.  But sure there will be some cases that it won't work.  But that's no worse than the current state of things, since it won't work to begin with for such devices if ICE is mandated.  We can't achieve 100% interop regardless - I'm just trying for as much as possible.\n\nWith regards to CLUE, I don't consider their devices \"legacy\".  They'll be upgrading to handle CLUE's final spec, so they can be \"redeemed\".\n\n-hadriel"}, "context_segments": [{"sid": 1445, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "> -----Original Message-----\n> From: rtcweb-bounces@ietf.org\n> [mailto:rtcweb-bounces@ietf.org] On Behalf Of Hadriel Kaplan\n> Sent: 28 July 2011 08:52\n> To: rtcweb@ietf.org\n> Subject: [rtcweb] Strawman for how to prevent voice-hammer without ICE\n> Howdy,\n> With regard to mandating ICE, such that an RTCWEB browser\n> cannot send RTP without doing ICE successfully first... is\n> that restriction purely to prevent the voice-hammer attacks?\n> If so, then it's unfortunate because obviously it would\n> seriously reduce interop with non-RTCWEB VoIP devices.  But I\n> think there's a way to prevent the hammer attack without\n> using ICE, and without requiring legacy VoIP devices to\n> change whatsoever.\n> One way would be to use the receipt of RTP as an indicator\n> the far-end expects to receive it from you.  So have the\n> browser generate RTP/RTCP packets, at a relatively slow rate,\n> for a short duration (e.g., use the same rate/retransmit\n> timers of STUN connectivity checks in ICE).  If the browser\n> receives RTP/RTCP packets, then the far-end expected to\n> receive them as well and the browser can do normal RTP from then on.\n> If this was a hammer attack, this doesn't generate any more\n> load on the target than ICE, since ICE would have sent X\n> number of STUN packets for Y time as well, and I'm suggesting\n> the X and Y be the same values for the initial RTP packets\n> during the \"check\" phase.\n> The major weakness of this approach is that a malicious\n> web-server trying to get your browser to do the voice hammer\n> could send RTP to your browser, since it knows the\n> address/ports of both sides, codec payload types, etc. (i.e.,\n> it can spoof being the attack target to make your browser\n> think it's ok to do normal RTP)  But we could probably play\n> games with RTCP SR/RR or even just require continued RTP\n> receipt to send RTP, in order to mitigate this weakness or\n> make it of low value to exploit.\n[JRE] The problem with requiring continued RTP receipt (or even ANY RTP receipt) is sessions where RTP is one-way, e.g., when mic muted, camera off. With many asymmetric possibilities coming out of the CLUE work, this could be a problem, although it perhaps goes away if everything is multiplexed onto the same port. It depends whether we can expect all legacy devices to behave in a way that would make this work.\n\nJohn\n\nJohn Elwell\nTel: +44 1908 817801 (office and mobile)\nEmail: john.elwell@siemens-enterprise.com\nhttp://www.siemens-enterprise.com/uk/\n\nSiemens Enterprise Communications Limited.\nRegistered office: Brickhill Street, Willen Lake, Milton Keynes, MK15 0DJ.\nRegistered No: 5903714, England.\n\nSiemens Enterprise Communications Limited is a Trademark Licensee of Siemens AG.\n\n> Does anyone else care about interop-ing with legacy\n> non-RTCWEB voip devices?  I checked\n> draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't\n> see it, so I'm not sure.\n> -hadriel\n> rtcweb mailing list\n> rtcweb@ietf.org\n> https://www.ietf.org/mailman/listinfo/rtcweb"}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}]}, {"current_segment": {"sid": 8159, "labels": "InformationProviding,Social", "content": "\n-Ilari"}, "context_segments": [{"sid": 1445, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "> -----Original Message-----\n> From: rtcweb-bounces@ietf.org\n> [mailto:rtcweb-bounces@ietf.org] On Behalf Of Hadriel Kaplan\n> Sent: 28 July 2011 08:52\n> To: rtcweb@ietf.org\n> Subject: [rtcweb] Strawman for how to prevent voice-hammer without ICE\n> Howdy,\n> With regard to mandating ICE, such that an RTCWEB browser\n> cannot send RTP without doing ICE successfully first... is\n> that restriction purely to prevent the voice-hammer attacks?\n> If so, then it's unfortunate because obviously it would\n> seriously reduce interop with non-RTCWEB VoIP devices.  But I\n> think there's a way to prevent the hammer attack without\n> using ICE, and without requiring legacy VoIP devices to\n> change whatsoever.\n> One way would be to use the receipt of RTP as an indicator\n> the far-end expects to receive it from you.  So have the\n> browser generate RTP/RTCP packets, at a relatively slow rate,\n> for a short duration (e.g., use the same rate/retransmit\n> timers of STUN connectivity checks in ICE).  If the browser\n> receives RTP/RTCP packets, then the far-end expected to\n> receive them as well and the browser can do normal RTP from then on.\n> If this was a hammer attack, this doesn't generate any more\n> load on the target than ICE, since ICE would have sent X\n> number of STUN packets for Y time as well, and I'm suggesting\n> the X and Y be the same values for the initial RTP packets\n> during the \"check\" phase.\n> The major weakness of this approach is that a malicious\n> web-server trying to get your browser to do the voice hammer\n> could send RTP to your browser, since it knows the\n> address/ports of both sides, codec payload types, etc. (i.e.,\n> it can spoof being the attack target to make your browser\n> think it's ok to do normal RTP)  But we could probably play\n> games with RTCP SR/RR or even just require continued RTP\n> receipt to send RTP, in order to mitigate this weakness or\n> make it of low value to exploit.\n[JRE] The problem with requiring continued RTP receipt (or even ANY RTP receipt) is sessions where RTP is one-way, e.g., when mic muted, camera off. With many asymmetric possibilities coming out of the CLUE work, this could be a problem, although it perhaps goes away if everything is multiplexed onto the same port. It depends whether we can expect all legacy devices to behave in a way that would make this work.\n\nJohn\n\nJohn Elwell\nTel: +44 1908 817801 (office and mobile)\nEmail: john.elwell@siemens-enterprise.com\nhttp://www.siemens-enterprise.com/uk/\n\nSiemens Enterprise Communications Limited.\nRegistered office: Brickhill Street, Willen Lake, Milton Keynes, MK15 0DJ.\nRegistered No: 5903714, England.\n\nSiemens Enterprise Communications Limited is a Trademark Licensee of Siemens AG.\n\n> Does anyone else care about interop-ing with legacy\n> non-RTCWEB voip devices?  I checked\n> draft-ietf-rtcweb-use-cases-and-requirements-01 and I don't\n> see it, so I'm not sure.\n> -hadriel\n> rtcweb mailing list\n> rtcweb@ietf.org\n> https://www.ietf.org/mailman/listinfo/rtcweb"}, {"sid": 8153, "labels": "InformationProviding,ProposeAction,InformationProviding,NeutralResponse", "content": "It dawns on me that I should probably state that while my main worry is that\nthe two algorithms be consistent of either having or not having the context\nstructure.  My preference would be to have the context structure as it\nstrengthens the resistance to the pre-hash/pure misuse even if it means that\nthere are two different things called Ed25519 in the wild."}, {"sid": 1446, "labels": "InformationProviding,Agreement,ContextSetting,ProposeAction", "content": "\nYes, but they don't turn off RTCP (assuming they do RTCP).  I'm not suggesting that it's a 1:1 mechanism of receipt/send, nor that it even be very dynamic/real-time.  But sure there will be some cases that it won't work.  But that's no worse than the current state of things, since it won't work to begin with for such devices if ICE is mandated.  We can't achieve 100% interop regardless - I'm just trying for as much as possible.\n\nWith regards to CLUE, I don't consider their devices \"legacy\".  They'll be upgrading to handle CLUE's final spec, so they can be \"redeemed\".\n\n-hadriel"}]}, {"current_segment": {"sid": 1567, "labels": "Question,InformationSeeking", "content": "Are we done discussing it? What are the next steps?"}, "context_segments": []}, {"current_segment": {"sid": 1568, "labels": "Question,InformationSeeking", "content": "\nIs it the case that the list of deliverables is proposed to be part of the charter or are they just draft milestones?"}, "context_segments": []}, {"current_segment": {"sid": 1569, "labels": "ClarificationElicitation,InformationSeeking", "content": "Could you clarify whether the \"cloud\" elements are\n\npart of the problem (apps in cloud will find themselves behind restrictive\nNATs) or\n\npart of the solution (TURN servers hosted in the cloud) or\n\nan innocent bystander collateral damage (cloud users or suppliers need to do\nsomething)?\n"}, "context_segments": []}, {"current_segment": {"sid": 1570, "labels": "Social", "content": "\nMike\n"}, "context_segments": []}, {"current_segment": {"sid": 1571, "labels": "InformationProviding,NeutralResponse,ProposeAction", "content": "\nIf I were to propose any change to the actual charter text then maybe I would modify the paragraph below to indicate that the work may also includes other extensions to TURN."}, "context_segments": []}, {"current_segment": {"sid": 1572, "labels": "Social", "content": "Hi Simon,"}, "context_segments": []}, {"current_segment": {"sid": 1573, "labels": "Social", "content": "Hi,"}, "context_segments": []}, {"current_segment": {"sid": 1574, "labels": "InformationProviding,Answer", "content": "\nFor many engineers, \"cloud\" is a non-technical term, for managers only. But\nthis is supposed to be a very technical list.\n"}, "context_segments": []}, {"current_segment": {"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, "context_segments": []}, {"current_segment": {"sid": 1576, "labels": "Answer,InformationProviding", "content": "I think the charter looks good."}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1577, "labels": "Answer,InformationProviding", "content": "I think the charter looks good."}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1578, "labels": "NeutralResponse,InformationProviding", "content": "\nI am ok with that."}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1580, "labels": "InformationProviding,Answer", "content": "\nI think that if there's interest in enterprise deployments it's\nprobably a good idea, in terms of getting the charter through\nthe process, to spell out explicitly which features would\nbe needed, distinct from a CPE deployment.  I tend to think\nthat targeting enterprises *right now* would be a mistake,\nsince they're the ones who tend to have the most rigid policies\naround network boundary traversal and those policies are\noften driven out of the corporate auditor's department.\nI'd let webrtc lead the deployment and have network administrators\ndiscover that they've got a problem.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1581, "labels": "ClarificationElicitation,InformationProviding,ProposeAction,InformationSeeking", "content": "\nWhat do you mean by \"let webrtc lead the deployment\"?\n\nWebRTC specifically includes deployments where the webrtc client is behind firewalls this is explicit in the charter and http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12 which also explicitly mentions restricted enterprise deployments.\n\nPersonally I would like to start developing the tools and provide information to help network administrators before they discover they have a problem with webrtc.\n\nAndy"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1580, "labels": "InformationProviding,Answer", "content": "\nI think that if there's interest in enterprise deployments it's\nprobably a good idea, in terms of getting the charter through\nthe process, to spell out explicitly which features would\nbe needed, distinct from a CPE deployment.  I tend to think\nthat targeting enterprises *right now* would be a mistake,\nsince they're the ones who tend to have the most rigid policies\naround network boundary traversal and those policies are\noften driven out of the corporate auditor's department.\nI'd let webrtc lead the deployment and have network administrators\ndiscover that they've got a problem.\n"}]}, {"current_segment": {"sid": 1582, "labels": "Question,InformationProviding,InformationSeeking", "content": "\nDo you need specific reference to enterprise deployments\nto do that?  I didn't think so.  In the meantime, if\nyou go out there and tell people who are dealing with\ncorporate policies driven out of the auditor's office that\nyou're going to poke holes in their firewalls using a\nmechanism that's not managed under enterprise security\npolicy, you're going to hit resistance before you even\nstart.  As you may have noticed.\n\nI'd leave any reference to enterprise networks out of the\ncharter.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1580, "labels": "InformationProviding,Answer", "content": "\nI think that if there's interest in enterprise deployments it's\nprobably a good idea, in terms of getting the charter through\nthe process, to spell out explicitly which features would\nbe needed, distinct from a CPE deployment.  I tend to think\nthat targeting enterprises *right now* would be a mistake,\nsince they're the ones who tend to have the most rigid policies\naround network boundary traversal and those policies are\noften driven out of the corporate auditor's department.\nI'd let webrtc lead the deployment and have network administrators\ndiscover that they've got a problem.\n"}, {"sid": 1581, "labels": "ClarificationElicitation,InformationProviding,ProposeAction,InformationSeeking", "content": "\nWhat do you mean by \"let webrtc lead the deployment\"?\n\nWebRTC specifically includes deployments where the webrtc client is behind firewalls this is explicit in the charter and http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-12 which also explicitly mentions restricted enterprise deployments.\n\nPersonally I would like to start developing the tools and provide information to help network administrators before they discover they have a problem with webrtc.\n\nAndy"}]}, {"current_segment": {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1588, "labels": "Answer,NeutralResponse,InformationProviding", "content": "You are right about cloud being a bit fuzzy, and it might not bee a good idea to add buzzwords to the charter."}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}]}, {"current_segment": {"sid": 1589, "labels": "InformationProviding,NeutralResponse", "content": "\nMy goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more \u201cfeature\u201d parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.\n\nThis is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.\n\nP\u00e5l-Erik\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}]}, {"current_segment": {"sid": 1590, "labels": "InformationProviding,NeutralResponse", "content": "\nNot sure what is meant by \"more traditional enterprise folks\" but I think the group will get the attention it needs.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}, {"sid": 1589, "labels": "InformationProviding,NeutralResponse", "content": "\nMy goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more \u201cfeature\u201d parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.\n\nThis is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1591, "labels": "InformationProviding,NeutralResponse", "content": "\nMany of the items mentioned here are actually not in the charter (i.e. manageability, mobility, QoS) and I also heard one the \"traditional enterprise folks\" talking about bandwidth management which is also not currently in the charter.  So maybe we need some more work on the charter or maybe what we need is to put together a requirements document and make that the first milestone.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}, {"sid": 1589, "labels": "InformationProviding,NeutralResponse", "content": "\nMy goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more \u201cfeature\u201d parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.\n\nThis is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1593, "labels": "InformationProviding,Agreement,NeutralResponse", "content": "\nI don't know what is meant by \"feature parity between enterprise and RTCWEB\" but I would support a statement in the charter indicating that the work of the group will include adding functionality to TURN to allow the TURN server to enforce policy on WebRTC traffic such as those typically required in an enterprise deployment.\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}, {"sid": 1589, "labels": "InformationProviding,NeutralResponse", "content": "\nMy goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more \u201cfeature\u201d parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.\n\nThis is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1594, "labels": "NeutralResponse,InformationProviding", "content": "\nSuch folks should be and deserve to be ignored ;-).\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}, {"sid": 1579, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, {"sid": 1587, "labels": "Question,InformationProviding,Answer,ProposeAction,InformationSeeking", "content": "\nCould you give some detailed requirements and considerations about the \"cloud\"?that will be more helpful. It will be better this could be get benefit from or affect the deliverables.\n"}, {"sid": 1589, "labels": "InformationProviding,NeutralResponse", "content": "\nMy goal was to add a word or short sentence getting the attention of the more traditional enterprise folks. As the charter describes in the first section ICE and TURN was slow to be adopted. Adding security, authentication, manageability, mobility ,QoS  ++ extensions to TURN will hopefully lead to more enterprises deploying TURN. Getting more \u201cfeature\u201d parity between enterprise and RTCWEB deployment would benefit all. Having some wording stating that this is also intended for enterprise might help.\n\nThis is just word smithing to avoid enterprise folks that just see a red flag whenever RTCWEB is mentioned to be more happy.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1595, "labels": "Question,InformationProviding,NeutralResponse,ProposeAction,InformationSeeking", "content": "\nBeing a new-bee regarding charters I have a few questions and comments.\n\nThe first section is rather long and describes the background in length. Is the text in the first section at all necessary in a charter?\n\nCan we add something around cloud in section three? For example:\n\u201c \u2014 that make STUN and TURN more suitable for WebRTC and Cloud like\nenvironments.\u201d\n\nTRAM would also benefit more traditional enterprise deployments. By using the word \u201ccloud\u201d the charter can get some attention from that camp as well.\n\nConsider these comments as nits.\n\nP\u00e5l-Erik\n"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1596, "labels": "InformationProviding", "content": "\ntram mailing list\ntram@ietf.org<mailto:tram@ietf.org>\nhttps://www.ietf.org/mailman/listinfo/tram\n\ntram mailing list\ntram@ietf.org<mailto:tram@ietf.org>\nhttps://www.ietf.org/mailman/listinfo/tram"}, "context_segments": [{"sid": 1575, "labels": "InformationProviding", "content": "\nAs a reminder, the current version is here:\nhttps://github.com/petithug/tram-charter/blob/master/charter.txt"}]}, {"current_segment": {"sid": 1597, "labels": "InformationProviding,Agreement,ProposeAction", "content": "\nAgree. But it still be nice with some wording to get the more traditional\nenterprise folks onboard.\n"}, "context_segments": []}, {"current_segment": {"sid": 1598, "labels": "NeutralResponse,InformationProviding", "content": "\nThat's fine, unless it sounds like \"cloud-ready hard disks\" or similar."}, "context_segments": []}, {"current_segment": {"sid": 1599, "labels": "InformationProviding,ContextSetting", "content": "\nSo change the following:"}, "context_segments": []}, {"current_segment": {"sid": 1600, "labels": "InformationProviding", "content": "\nTo"}, "context_segments": []}, {"current_segment": {"sid": 1601, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n\"The goal of the TRAM Working Group is to consolidate the various initiatives\nto update TURN and STUN, including the definition of new transport,\nauthentication mechanisms, and extensions, that make STUN and TURN more suitable for the WebRTC\nenvironment\"."}, "context_segments": []}, {"current_segment": {"sid": 1602, "labels": "Agreement,InformationProviding", "content": "+1"}, "context_segments": []}, {"current_segment": {"sid": 1603, "labels": "InformationProviding,Answer", "content": "They are milestones.  I suspect that before the charter is finalized we'll simply list the milestones and drop their individual summary text."}, "context_segments": []}, {"current_segment": {"sid": 1604, "labels": "Agreement,InformationProviding", "content": "\nThat's a reasonable addition."}, "context_segments": []}, {"current_segment": {"sid": 1605, "labels": "InformationProviding,Agreement", "content": "Spencer, this is how I view it, too. If we specify a particular part of the\n\"cloud\" and if we define well what we are going to do about that, then it\nwill be fine. But then we even do not need the word \"cloud\". I think that\nwe already have a good-enough defined charter.\n"}, "context_segments": []}, {"current_segment": {"sid": 1606, "labels": "Social", "content": "Hi,\n"}, "context_segments": []}, {"current_segment": {"sid": 1607, "labels": "Agreement,ProposeAction,InformationProviding", "content": "\nIf we add word \"porn\" it will attract even more attention.\n\nMore attention or deployments?\n\nFor many engineers, \"cloud\" is a non-technical term, for managers only. But this is supposed to be a very technical list.\n\nAgree. But it still be nice with some wording to get the more traditional enterprise folks onboard.\n\nP\u00e5l-Erik\n"}, "context_segments": []}, {"current_segment": {"sid": 1608, "labels": "NeutralResponse,InformationProviding", "content": "\nThat's fine, unless it sounds like \"cloud-ready hard disks\" or similar."}, "context_segments": [{"sid": 1607, "labels": "Agreement,ProposeAction,InformationProviding", "content": "\nIf we add word \"porn\" it will attract even more attention.\n\nMore attention or deployments?\n\nFor many engineers, \"cloud\" is a non-technical term, for managers only. But this is supposed to be a very technical list.\n\nAgree. But it still be nice with some wording to get the more traditional enterprise folks onboard.\n\nP\u00e5l-Erik\n"}]}, {"current_segment": {"sid": 1609, "labels": "InformationProviding,NeutralResponse", "content": "I am not sure that we want here anybody for whom WebRTC is a red flag. I am\nnot sure that we can have a healthy discussion here, then.\n\nI think that WebRTC behind all this TURN evolution. We are not going to\nsneak TURN into the enterprise; the enterprise will adopt WebRTC - and this\nis how TURN will be included into the enterprise infrastructure. I believe\nthat this is the only realistic scenario of TURN inclusion into the\nenterprise.\n"}, "context_segments": []}, {"current_segment": {"sid": 1610, "labels": "NeutralResponse,InformationProviding", "content": "\nI was simply pointing out that many of the items Pal seemed to assume the group would cover are not in the charter."}, "context_segments": []}, {"current_segment": {"sid": 1611, "labels": "InformationProviding,NeutralResponse", "content": "\nHowever creating a charter is never that simple and we are already aware of work that people want to do in this group which is not explicitly mentioned in the charter."}, "context_segments": []}, {"current_segment": {"sid": 1612, "labels": "InformationProviding", "content": "On: 26 November 2013 09:27 Pal Martinsen Wrote:"}, "context_segments": []}, {"current_segment": {"sid": 1613, "labels": "InformationProviding,NeutralResponse", "content": "\nSo when somebody comes to the group with a draft on adding some kind of bandwidth parameter to TURN then I would be preferable for this to be a matter of adding a new milestone rather than rewriting the charter. The charter should not be so closed that it can be used to argue against other ideas being put forward otherwise we will end up with a TRAM2 and a TRAM3 working group."}, "context_segments": []}, {"current_segment": {"sid": 1614, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n\"The goal of the TRAM Working Group is to consolidate the various initiatives\nto update TURN and STUN, including the definition of new transport and\nauthentication mechanisms that make STUN and TURN more suitable for the WebRTC\nenvironment\"."}, "context_segments": []}, {"current_segment": {"sid": 1615, "labels": "InformationProviding,Agreement", "content": "\nMakes sense. Pull request sent to Marc.\n"}, "context_segments": [{"sid": 1614, "labels": "InformationProviding,ExtensionOfPrevious", "content": "\n\"The goal of the TRAM Working Group is to consolidate the various initiatives\nto update TURN and STUN, including the definition of new transport and\nauthentication mechanisms that make STUN and TURN more suitable for the WebRTC\nenvironment\"."}]}, {"current_segment": {"sid": 1616, "labels": "Agreement,InformationProviding", "content": "I agree."}, "context_segments": []}, {"current_segment": {"sid": 1617, "labels": "InformationProviding,NeutralResponse", "content": "Actually I was reasonably happy with the charter as it was until it was stated that the current list of deliverables was part of the charter rather than being draft milestones and therefore adding to the list would need a charter update. As I am often told that adding milestones is a whole lot easier than updating the charter text."}, "context_segments": []}, {"current_segment": {"sid": 1618, "labels": "Agreement,InformationProviding", "content": "+1"}, "context_segments": []}, {"current_segment": {"sid": 1619, "labels": "InformationProviding,NeutralResponse", "content": "I'm not speaking as an AD, but I am speaking as a retired IAB member who\nwas watching a year-long effort to charter something (well, really,\nanything) in the cloud space."}, "context_segments": []}, {"current_segment": {"sid": 1620, "labels": "InformationProviding,ProposeAction", "content": "\nMy suggestion would be to figure out specifically what part of \"cloud\" is\nrelevant to what you're proposing, and point to something more specific.\nFor example, the data center parts of \"cloud\" started getting more traction\nwhen they were called out specifically."}, "context_segments": []}, {"current_segment": {"sid": 1621, "labels": "InformationProviding,NeutralResponse", "content": "\nThe IESG (at that time) wasn't opposed to doing something that would be\nhelpful for clouds, but they weren't getting proposals for specific\nprotocol work, and that's pretty much what the IETF does ..."}, "context_segments": []}, {"current_segment": {"sid": 1622, "labels": "Question,InformationProviding,ProposeAction,Apologising,InformationSeeking,Social", "content": "So can someone confirm that the deliverables mentioned in the draft charter are actually draft milestones and not part of the charter text itself?\n\nSorry about last message.\n\nAndy\n"}, "context_segments": []}, {"current_segment": {"sid": 1623, "labels": "Answer,InformationProviding", "content": "\nThat's the intent, at least for me.\n"}, "context_segments": [{"sid": 1622, "labels": "Question,InformationProviding,ProposeAction,Apologising,InformationSeeking,Social", "content": "So can someone confirm that the deliverables mentioned in the draft charter are actually draft milestones and not part of the charter text itself?\n\nSorry about last message.\n\nAndy\n"}]}, {"current_segment": {"sid": 1624, "labels": "Question,ProposeAction,InformationSeeking,InformationProviding", "content": "Can someone confirm that the deliverables\n"}, "context_segments": []}, {"current_segment": {"sid": 1625, "labels": "InformationProviding", "content": "On: 26 November 2013 14:59 Melinda Shore Wrote:"}, "context_segments": []}, {"current_segment": {"sid": 1626, "labels": "Social", "content": "Hi Pal,\n"}, "context_segments": []}, {"current_segment": {"sid": 1627, "labels": "InformationProviding,Answer", "content": "If we add word \"porn\" it will attract even more attention.\n\nFor many engineers, \"cloud\" is a non-technical term, for managers only. But\nthis is supposed to be a very technical list.\n"}, "context_segments": []}, {"current_segment": {"sid": 7070, "labels": "Social,Social", "content": "Hi,"}, "context_segments": []}, {"current_segment": {"sid": 7071, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "\nIn Section 10.5 it says"}, "context_segments": []}, {"current_segment": {"sid": 7072, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\n\" RTCP:  If RTP is used for media transport RTCP SHOULD be used.\""}, "context_segments": []}, {"current_segment": {"sid": 7073, "labels": "InformationProviding,Answer,Disagreement,InformationProviding,NeutralResponse", "content": "\nThis is not suggesting sending RTP without RTCP.\n\nHowever, RTSP 2.0 gives clear guidance to implementers and operational staff how situations are handled in RTSP if RTCP is not used (for whatever reason).\n"}, "context_segments": [{"sid": 7072, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\n\" RTCP:  If RTP is used for media transport RTCP SHOULD be used.\""}]}, {"current_segment": {"sid": 7074, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\nIs there a case where RTCP is not used. RTCP is not optional according to\nRFC 3550. Why is this a SHOULD and not a MUST"}, "context_segments": []}, {"current_segment": {"sid": 7075, "labels": "InformationProviding,Answer,Question,InformationProviding,Answer,InformationSeeking", "content": "\nIs it not optional in terms of implementation or deployment? I couldn't see a statement in RFC 3550 that it is mandatory to use, while browsing RFC 3550.\n\n(I do not have the intention to initiate a fight about whether RTCP should be used at all or not!)\n\nOn the other hand, the statement suggest to use RTCP, but who can actually force people to use RTCP?\n\nThat is the reason for \"RTCP SHOULD be used\".\n\nWhich is inline with the definition of \"SHOULD\" according to RFC 2119:\n\"3. SHOULD\nThis word, or the adjective \"RECOMMENDED\", mean that there may exist valid reasons in particular circumstances to ignore a particular item, but the full implications must be understood and carefully weighed before choosing a different course.\"\n"}, "context_segments": [{"sid": 7074, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\nIs there a case where RTCP is not used. RTCP is not optional according to\nRFC 3550. Why is this a SHOULD and not a MUST"}]}, {"current_segment": {"sid": 7076, "labels": "InformationProviding,ContextSetting", "content": "\nAlso in section C.1.2 I saw the following text:"}, "context_segments": []}, {"current_segment": {"sid": 7077, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  The RTCP/UDP packets from the server to the client MUST be sent to\nthe address and port given by the second address and port pair of\nthe \"dest_addr\" parameter.  If no second pair is specified RTCP\nMUST NOT be sent."}, "context_segments": []}, {"current_segment": {"sid": 7078, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\no  The RTCP/UDP packets from the client to the server MUST be sent to\nthe address and port given by the second address and port pair of\nthe \"src_addr\" parameter.  If no second pair is given RTCP MUST\nNOT be sent."}, "context_segments": []}, {"current_segment": {"sid": 7079, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationProviding,InformationSeeking", "content": "\nDoes this mean that you suggest sending RTP without RTCP. I would expect the\nsame behavior as SDP m-line where if RTCP port is not specified it will be\nthe RTP port+1 or the same if RTP/RTCP mux are used."}, "context_segments": []}, {"current_segment": {"sid": 7080, "labels": "Social,Social", "content": "Hi Roni, all,\n"}, "context_segments": []}, {"current_segment": {"sid": 7081, "labels": "InformationProviding", "content": "\nFor telechat 2013-11-21"}, "context_segments": []}, {"current_segment": {"sid": 7082, "labels": "InformationProviding", "content": "\nReviewer                 LC end     Draft\nChris Lonvick          TR2013-10-25 draft-ietf-mmusic-rfc2326bis-38\nYoav Nir               T 2013-11-01 draft-ietf-nfsv4-labreqs-04\nRadia Perlman          TR2013-08-18 draft-ietf-karp-ops-model-09\nVincent Roca           T 2013-09-24 draft-ietf-mmusic-duplication-grouping-03\nJoe Salowey            TR2013-09-23 draft-ietf-sidr-bgpsec-threats-07\nTina TSOU              TR2013-09-27 draft-ietf-ecrit-unauthenticated-access-08\nTom Yu                 T 2013-10-01 draft-ietf-sidr-origin-ops-22"}, "context_segments": []}, {"current_segment": {"sid": 7083, "labels": "InformationProviding", "content": "\nLast calls and special requests:"}, "context_segments": []}, {"current_segment": {"sid": 7084, "labels": "InformationProviding", "content": "\nDerek Atkins             2013-11-27 draft-ietf-xrblock-rtcp-xr-qoe-12\nRob Austein              2013-11-27 draft-turner-application-cms-media-type-07\nDave Cridland            2013-11-04 draft-ietf-httpbis-p5-range-24\nDave Cridland            -          draft-dunbar-armd-arp-nd-scaling-practices-07\nPhillip Hallam-Baker     2013-10-16 draft-ietf-ccamp-gmpls-ospf-g709v3-10\nJeffrey Hutzelman        -          draft-ietf-drinks-spp-protocol-over-soap-05\nLeif Johansson           2013-11-04 draft-sin-sdnrg-sdn-approach-04\nSimon Josefsson          2013-11-04 draft-trammell-ipfix-tcpcontrolbits-revision-04"}, "context_segments": []}, {"current_segment": {"sid": 7085, "labels": "InformationProviding,ProposeAction", "content": "There is quite a lot of rereviews for the 2013-11-21 telechat, mostly\nbecause I was too busy to verify if your review comments were taken\ninto account in the new versions of the drafts. So now you need to do\nit yourself :-)"}, "context_segments": []}, {"current_segment": {"sid": 7086, "labels": "InformationProviding", "content": "\nReview instructions and related resources are at:\nhttp://tools.ietf.org/area/sec/trac/wiki/SecDirReview"}, "context_segments": []}, {"current_segment": {"sid": 7087, "labels": "InformationProviding", "content": "\nDave Cridland is next in the rotation."}, "context_segments": []}, {"current_segment": {"sid": 7108, "labels": "InformationProviding,ProposeAction,InformationProviding,ProposeAction", "content": "A draft agenda is attached. Comments, corrections and additions to the\nchairs please."}, "context_segments": []}, {"current_segment": {"sid": 7295, "labels": "Social,Social", "content": "Hey Folks,"}, "context_segments": []}, {"current_segment": {"sid": 7296, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "\nI have come up with the proposed wording for the resolution of bug\n513737 (http://rtsp.org/bug513737).  First let me cite the resolution\nthat was reached in conference call on March 5th:"}, "context_segments": []}, {"current_segment": {"sid": 7297, "labels": "InformationProviding,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nResolution: go with alternative #1 from bug report (1. Keep the old\nsetting and states as if the second SETUP never happend.)"}, "context_segments": []}, {"current_segment": {"sid": 7298, "labels": "InformationProviding,ContextSetting,InformationProviding,ContextSetting", "content": "\nHere my attempt to clarify the wording in the spec according to the\nresolution of the concall:"}, "context_segments": []}, {"current_segment": {"sid": 7299, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nWording from draft-ietf-mmusic-rfc2326bis-03.txt"}, "context_segments": []}, {"current_segment": {"sid": 7300, "labels": "InformationProviding,ContextSetting", "content": "\n11.3 SETUP"}, "context_segments": []}, {"current_segment": {"sid": 7301, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nThe SETUP request for a URI specifies the transport mechanism to be\nused for the streamed media. A client can issue a SETUP request for a\nstream that is already set up or playing in the session to change\ntransport parameters, which a server MAY allow. If it does not allow\nthis, it MUST respond with error 455 (Method Not Valid In This\nState)."}, "context_segments": []}, {"current_segment": {"sid": 7302, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nA server MAY allow a client to do SETUP while in playing state to add\nadditional media streams. If not supported the server shall responde\nwith error 455 (Method Not Allowed In This State). If supported the\nadded media shall then start to play in sync with the already playing\nmedia. To be able to sync the media with the already playing streams\nthe SETUP response MUST include a RTP-Info header with the timestamp\nvalue, and a Range header with the corresponding normal play time. To\nindicate support for this optional feature the feature-tag:\n\"setup.playing\" is defined."}, "context_segments": []}, {"current_segment": {"sid": 7303, "labels": "InformationProviding,ContextSetting,ContextSetting", "content": "\nNew proposed wording:"}, "context_segments": []}, {"current_segment": {"sid": 7304, "labels": "InformationProviding,ContextSetting", "content": "\n11.3 SETUP"}, "context_segments": []}, {"current_segment": {"sid": 7305, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nThe SETUP request for a URI specifies the transport mechanism to be\nused for the streamed media. A client can issue a SETUP request for a\nstream that is already set up or playing in the session to change\ntransport parameters, which a server MAY allow. If it does not allow\nthis, it MUST respond with error 455 (Method Not Valid In This\nState)."}, "context_segments": []}, {"current_segment": {"sid": 7306, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nA server MAY allow a client to do SETUP while in playing state to add\nadditional media streams. If not supported, the server shall respond    |\nwith error 455 (Method Not Valid in This State). If supported the       |\nadded media shall then start to play in sync with the already playing\nmedia. To be able to sync the media with the already playing streams\nthe SETUP response MUST include a RTP-Info header with the timestamp\nvalue, and a Range header with the corresponding normal play time. To\nindicate support for this optional feature the feature-tag:\n\"setup.playing\" is defined."}, "context_segments": []}, {"current_segment": {"sid": 7307, "labels": "InformationProviding", "content": "\nIf a SETUP request on a session fails for any reason, the session       |\nstate, as well as transport and other parameters for associated         |\nstreams will remain unchanged from their values as if the SETUP         |\nrequest had never been received by the server.                          |"}, "context_segments": []}, {"current_segment": {"sid": 7308, "labels": "ProposeAction,ProposeAction,InformationProviding", "content": "\nPlease send your comments."}, "context_segments": []}, {"current_segment": {"sid": 7309, "labels": "Thanking,Thanking,Social", "content": "\nThanks"}, "context_segments": []}, {"current_segment": {"sid": 7310, "labels": "InformationProviding,InformationProviding", "content": "Multiparty Multimedia Session Control (MMUSIC) Working Group Minutes"}, "context_segments": []}, {"current_segment": {"sid": 2479, "labels": "Social", "content": "Dear Team,"}, "context_segments": []}, {"current_segment": {"sid": 6463, "labels": "InformationProviding", "content": "#144: Does not allow RFC editor style guide order of sections for references"}, "context_segments": [{"sid": 2479, "labels": "Social", "content": "Dear Team,"}]}, {"current_segment": {"sid": 2480, "labels": "ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nhttps://www.rfc-editor.org/current_queue.php"}, "context_segments": []}, {"current_segment": {"sid": 6464, "labels": "InformationProviding", "content": "\nThe RFC-editor style guide:"}, "context_segments": [{"sid": 2480, "labels": "ExtensionOfPrevious,InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nhttps://www.rfc-editor.org/current_queue.php"}]}, {"current_segment": {"sid": 2481, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "\nSome of the SSL providers are already rolled out TLS 1.3 ( OpenSSL , BoringSSL etc) ."}, "context_segments": []}, {"current_segment": {"sid": 6465, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nhttp://www.rfc-editor.org/rfc-style-guide/rfc-style"}, "context_segments": [{"sid": 2481, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "\nSome of the SSL providers are already rolled out TLS 1.3 ( OpenSSL , BoringSSL etc) ."}]}, {"current_segment": {"sid": 2482, "labels": "Question,Question,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nDoes the TLS 1.3 draft is finalized yet ?"}, "context_segments": []}, {"current_segment": {"sid": 6466, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nStates that the following section order within the body of the memo:\n8.  Body of the Memo              [Required]\n8a.  Introduction               [Required]\nor equivalent\n8b.  Requirement Words (RFC 2119)\n8c.  ...\nMAIN BODY OF THE TEXT\n8t.  ...\n8u.  Security Considerations   [Required]\n8v.  IANA Considerations\n8w.  Appendixes\n8x.  References\n8y.  Contributors\n8z.  Acknowledgments\n9. Author's Address             [Required]"}, "context_segments": [{"sid": 2482, "labels": "Question,Question,ExtensionOfPrevious,InformationSeeking,InformationProviding", "content": "\nDoes the TLS 1.3 draft is finalized yet ?"}]}, {"current_segment": {"sid": 2483, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nhttps://tools.ietf.org/html/draft-ietf-tls-tls13-28"}, "context_segments": []}, {"current_segment": {"sid": 6467, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nMy issues is that the XML2RFC and likely the DTD does not allow me to\nplace the References list after the appendixes. This is problematic:"}, "context_segments": [{"sid": 2483, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nhttps://tools.ietf.org/html/draft-ietf-tls-tls13-28"}]}, {"current_segment": {"sid": 2484, "labels": "Answer,InformationProviding,Answer,ContextSetting,ProposeAction", "content": "The IESG has approved the draft, but it still needs to complete the RFC editor phase where copy editing, changing of the boilerplate, assigning an RFC #, etc gets done to make it an RFC.  You can see the RFC editor\u2019s queue here:"}, "context_segments": []}, {"current_segment": {"sid": 6468, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nFirst it is difficult to find references when having long documents. In\ndraft-ietf-mmusic-rfc2326bis, the references are on page 216 out of 284."}, "context_segments": [{"sid": 2484, "labels": "Answer,InformationProviding,Answer,ContextSetting,ProposeAction", "content": "The IESG has approved the draft, but it still needs to complete the RFC editor phase where copy editing, changing of the boilerplate, assigning an RFC #, etc gets done to make it an RFC.  You can see the RFC editor\u2019s queue here:"}]}, {"current_segment": {"sid": 2485, "labels": "Answer,InformationProviding,NeutralResponse", "content": "BoringSSL and OpenSSL have are draft versions which use different version\nnumbers from the final RFC, so as not to collide. Early experimental\ndeployment is generally useful to help inform the final standard and flush\nout any non-compliant TLS 1.2 implementations that may cause deployment\ndifficulties. (This, of course, also means that any draft versions are\nexperimental and doomed to be replaced by the final RFC once published.)\n"}, "context_segments": []}, {"current_segment": {"sid": 6469, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nI also wished I could use it as work around for ID-Nits which produces\nUnused reference warnings for any references that are only used in\nappendices."}, "context_segments": [{"sid": 2485, "labels": "Answer,InformationProviding,NeutralResponse", "content": "BoringSSL and OpenSSL have are draft versions which use different version\nnumbers from the final RFC, so as not to collide. Early experimental\ndeployment is generally useful to help inform the final standard and flush\nout any non-compliant TLS 1.2 implementations that may cause deployment\ndifficulties. (This, of course, also means that any draft versions are\nexperimental and doomed to be replaced by the final RFC once published.)\n"}]}, {"current_segment": {"sid": 6470, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nReporter:  magnus.westerlund@ericsson.com  |      Owner:\nType:  defect                          |  henrik@levkowetz.com\nPriority:  medium                          |     Status:  new\nComponent:  Version 2 cli                   |  Milestone:\nKeywords:                                  |    Version:  2.3.10"}, "context_segments": []}, {"current_segment": {"sid": 6471, "labels": "ExtensionOfPrevious,InformationProviding", "content": "\nTicket URL: <http://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/144>\nxml2rfc <http://tools.ietf.org/tools/xml2rfc/>"}, "context_segments": []}, {"current_segment": {"sid": 2486, "labels": "InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction,Social,Question,ContextSetting", "content": "\nI may have an incorrect impression about the code points, but, let us\nsay, one finds out an attack on one of the TLS1.3 algorithms and wishes\nto swap the algorithm set for a new one (that is clearly specified, say,\n\"RS-Alg-X\"). How does one do this if one marks 224-255 as deprecated.\nHow does one signal private use of \"RS-Alg-X\" now. If you could tell me,\nplease let me know, so that I feel more at ease with this. {This should\nnot be something where reliability is impossible to achieve)."}, "context_segments": []}, {"current_segment": {"sid": 2487, "labels": "InformationProviding,UnderstandingNegative,NeutralResponse", "content": "\nI don't understand the question. There are plenty of other code points, we\njust no longer break them up into signature/hash pairs.\n"}, "context_segments": [{"sid": 2486, "labels": "InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction,Social,Question,ContextSetting", "content": "\nI may have an incorrect impression about the code points, but, let us\nsay, one finds out an attack on one of the TLS1.3 algorithms and wishes\nto swap the algorithm set for a new one (that is clearly specified, say,\n\"RS-Alg-X\"). How does one do this if one marks 224-255 as deprecated.\nHow does one signal private use of \"RS-Alg-X\" now. If you could tell me,\nplease let me know, so that I feel more at ease with this. {This should\nnot be something where reliability is impossible to achieve)."}]}, {"current_segment": {"sid": 2488, "labels": "Answer,Answer,InformationProviding", "content": "\nYou publish a specification that meets the specification bar and file for a\ncode point.\n\n-Ekr\n"}, "context_segments": [{"sid": 2486, "labels": "InformationSeeking,Question,InformationProviding,NeutralResponse,ProposeAction,Social,Question,ContextSetting", "content": "\nI may have an incorrect impression about the code points, but, let us\nsay, one finds out an attack on one of the TLS1.3 algorithms and wishes\nto swap the algorithm set for a new one (that is clearly specified, say,\n\"RS-Alg-X\"). How does one do this if one marks 224-255 as deprecated.\nHow does one signal private use of \"RS-Alg-X\" now. If you could tell me,\nplease let me know, so that I feel more at ease with this. {This should\nnot be something where reliability is impossible to achieve)."}]}, {"current_segment": {"sid": 2489, "labels": "Thanking,Thanking,Social", "content": "\nThanks!"}, "context_segments": []}, {"current_segment": {"sid": 2490, "labels": "InformationProviding,ContextSetting,StateDecision,InformationProviding", "content": "During Adam Roach\u2019s AD review of draft-ietf-tls-tls13, he noted something about the HashAlgorithm and that made me go look at what was said in draft-ietf-tls-iana-registry-updates.  Turns out that 4492bis assigned some values draft-ietf-tls-iana-registry-updates was marking as reserved.  I have fixed that up in:\nhttps://github.com/tlswg/draft-ietf-tls-iana-registry-updates/pull/65"}, "context_segments": []}, {"current_segment": {"sid": 2491, "labels": "Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,ExtensionOfPrevious,InformationSeeking", "content": "\nOne further point brought out in discussions with Adam was that if we\u2019re really closing the HashAlgorithm and SignatureAlgorithms registry we need to also mark 224-255 as deprecated.  Currently these are marked as Reserved for Private Use.  So the question is should we mark 224-255 as deprecated in these two registries?"}, "context_segments": []}, {"current_segment": {"sid": 2492, "labels": "Answer,ProposeAction,Answer,InformationProviding", "content": "\nWith no hats, yes, we should mark those ranges as deprecated, since\nthere is no warning about them in the SignatureScheme registry and\nthe latter is the way of the future.\n\n-Ben"}, "context_segments": [{"sid": 2491, "labels": "Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,InformationProviding,ExtensionOfPrevious,InformationSeeking", "content": "\nOne further point brought out in discussions with Adam was that if we\u2019re really closing the HashAlgorithm and SignatureAlgorithms registry we need to also mark 224-255 as deprecated.  Currently these are marked as Reserved for Private Use.  So the question is should we mark 224-255 as deprecated in these two registries?"}]}, {"current_segment": {"sid": 2493, "labels": "Social", "content": "Hi Eric:"}, "context_segments": []}, {"current_segment": {"sid": 2494, "labels": "ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,InformationProviding", "content": "\nTLS HashAlgorithm Registry"}, "context_segments": []}, {"current_segment": {"sid": 2495, "labels": "ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,InformationProviding", "content": "\nRegistration Procedure(s)"}, "context_segments": []}, {"current_segment": {"sid": 2496, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,ExtensionOfPrevious", "content": "\nClosed see [this-to-be-rfc]"}, "context_segments": []}, {"current_segment": {"sid": 2497, "labels": "ExtensionOfPrevious,ContextSetting,ExtensionOfPrevious,InformationProviding", "content": "\nReference"}, "context_segments": []}, {"current_segment": {"sid": 2498, "labels": "InformationProviding,ExtensionOfPrevious,ExtensionOfPrevious", "content": "\n[RFC5246][this-to-be-rfc]"}, "context_segments": []}, {"current_segment": {"sid": 2499, "labels": "ContextSetting,StateDecision,InformationProviding,ExtensionOfPrevious", "content": "\nWe\u2019d make the following changes to the draft:"}, "context_segments": []}, {"current_segment": {"sid": 2500, "labels": "Social", "content": "Hi Sean:"}, "context_segments": []}, {"current_segment": {"sid": 2501, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding,ExtensionOfPrevious", "content": "\nOLD:\n[SHALL update/has updated] the TLS HashAlgorithm Registry to list\nvalues 7-223 as \"Reserved\" and the TLS SignatureAlgorithm registry\nto list values 4-223 as \"Reserved\u201d."}, "context_segments": []}, {"current_segment": {"sid": 2502, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nNEW:\n[SHALL close/has closed] the TLS HashAlgorithm Registry and\nthe TLS SignatureAlgorithm registries for new assignments."}, "context_segments": []}, {"current_segment": {"sid": 2503, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nI personally think this is cleaner that reserving the values.  But, it does mean that this registries are closed for assignments."}, "context_segments": []}, {"current_segment": {"sid": 2504, "labels": "ClarificationElicitation,InformationProviding,Disagreement,Question,Disagreement,InformationSeeking", "content": "Is it now impossible adding new things to TLS 1.2?  I don't believe the WG understood that this would be the situation.  So I disagree with your claim that this was our understanding of the situation."}, "context_segments": []}, {"current_segment": {"sid": 2505, "labels": "InformationProviding,Answer,ContextSetting,Answer", "content": "\nI was under the impression that the WG was well aware, e.g., in my\ncomments on the 2nd WGLC, where I say \"It looks like we no longer do\nanything to obsolete/reserve/similar the HashAlgorithm and\nSignatureAlgorithm registries; was that just an editorial mixup or an\nintended change?\", and Ekr replies with a link to the appropriate\nsection of draft-ietf-tls-iana-registry-updates, as seen at\nhttps://www.ietf.org/mail-archive/web/tls/current/msg23865.html\n"}, "context_segments": [{"sid": 2504, "labels": "ClarificationElicitation,InformationProviding,Disagreement,Question,Disagreement,InformationSeeking", "content": "Is it now impossible adding new things to TLS 1.2?  I don't believe the WG understood that this would be the situation.  So I disagree with your claim that this was our understanding of the situation."}]}, {"current_segment": {"sid": 2506, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\nOkay, it turns out that David's neat hack make some things harder. So what?"}, "context_segments": []}, {"current_segment": {"sid": 2507, "labels": "InformationProviding,Answer,Answer", "content": "\nThe intent was that additions to TLS 1.2 would just use the new registry\ntoo (since the hack can be backported easily), e.g.\ndraft-ietf-tls-rfc4492bis-17. Though, yeah, it is a bit awkward text-wise."}, "context_segments": [{"sid": 2506, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\nOkay, it turns out that David's neat hack make some things harder. So what?"}]}, {"current_segment": {"sid": 2508, "labels": "NeutralResponse,UnderstandingNegative,Answer,InformationProviding", "content": "\nI thought that's what I was asking you -- you seem to feel that we\nshould care about this, and I still don't understand why.\n\n-Ben"}, "context_segments": [{"sid": 2506, "labels": "Question,InformationProviding,ExtensionOfPrevious,Question,InformationSeeking", "content": "\nOkay, it turns out that David's neat hack make some things harder. So what?"}]}, {"current_segment": {"sid": 2509, "labels": "Question,ClarificationElicitation,Question,InformationSeeking", "content": "\nQuick question: does \"closing the registry\" not contradict catering towards crypto agility? What happens if, say, one wishes to add another signature scheme, besides Ed25519, to the mix. If there is no private field, does this mean that, e.g., Schnorr+BSI Brainpool256r1 is now ruled out?"}, "context_segments": []}, {"current_segment": {"sid": 2510, "labels": "InformationProviding,Answer,Answer", "content": "\nNo. Private just means \"we're not going to allocate these code points, so\nyou should use them without coordination\".\n\nThe key point here is that this is a big space and so we're instead going\nto make it easy for people to reserve code points by writing a stable spec,\nthat need not be an IETF standard, and that's what they should do.\n"}, "context_segments": [{"sid": 2509, "labels": "Question,ClarificationElicitation,Question,InformationSeeking", "content": "\nQuick question: does \"closing the registry\" not contradict catering towards crypto agility? What happens if, say, one wishes to add another signature scheme, besides Ed25519, to the mix. If there is no private field, does this mean that, e.g., Schnorr+BSI Brainpool256r1 is now ruled out?"}]}, {"current_segment": {"sid": 2511, "labels": "InformationProviding,ExtensionOfPrevious,ContextSetting,ContextSetting", "content": "\nMy more serious concern is, however, that if the Private Use case is \"verboten\", there is no chance for people to signal private extensions (since IETF will just have killed this off)."}, "context_segments": []}, {"current_segment": {"sid": 2512, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding", "content": "\nI do not think it is prudent to have a slow process in place (IETF standardization) to effectuate crypto agility, if private use can already do this without waiting for 3-year public discussions and heated debate (if a weakness is discovered, dark forces will exploit this right away and won't wait for IETF to catch up to exploit an issue)."}, "context_segments": []}, {"current_segment": {"sid": 2513, "labels": "Question,InformationProviding,ExtensionOfPrevious,ContextSetting,Question,ContextSetting,InformationSeeking", "content": "\nAs case in point, suppose US Gov't wants to roll its own \"Suite A\" scheme, or if one wants to use TLS with something tailored towards the sensor world (which operates in quite a hostile environment for implementation security), how is one going to do this in context of TLS if the signaling required has just been removed?"}, "context_segments": []}, {"current_segment": {"sid": 2514, "labels": "InformationProviding,ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nNOTE: this is not an invite for endless discussions on the legitimacy of whoever may wish a private extensions (it is private after all), it does question though the wisdom of removing the option for using this. If Zulu hour arrives, one should have tools to act..."}, "context_segments": []}, {"current_segment": {"sid": 2515, "labels": "InformationProviding,Agreement,Agreement", "content": "I am inclined to agree with Peter.  It doesn't quite seem like a registry if the very first time there is a list of things in it, that list is now frozen."}, "context_segments": []}, {"current_segment": {"sid": 2516, "labels": "ClarificationElicitation,ExtensionOfPrevious,Question,InformationSeeking,InformationProviding", "content": "\nWhy are we closing/reserving all the bits?"}, "context_segments": []}, {"current_segment": {"sid": 2517, "labels": "InformationSeeking,ClarificationElicitation,InformationProviding,Answer,ProposeAction,Answer", "content": "\nHuh?  These are for the old TLS 1.2 separately negotiated Hash and\nSignature registries, that have been pouplated for quite some time.\nWe need to close them or reserve \"all\" free values in order to not\nconflict with the new TLS 1.3 SignatureScheme registry that uses\ncombined 16-bit codepoints, but share space on the wire.\n\nClosing the registries does seem to be a better match for our\nintended future for these registries, but I am curious if you asked\nwhat the procedure would be on the off chance that we did need to\nreopen them for some reason.\n\n-Ben"}, "context_segments": [{"sid": 2516, "labels": "ClarificationElicitation,ExtensionOfPrevious,Question,InformationSeeking,InformationProviding", "content": "\nWhy are we closing/reserving all the bits?"}]}, {"current_segment": {"sid": 2518, "labels": "NeutralResponse,InformationProviding", "content": "So we have two registries that share a number space."}, "context_segments": []}, {"current_segment": {"sid": 2519, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nSounds like the right solution is for the registries to coordinate."}, "context_segments": []}, {"current_segment": {"sid": 2520, "labels": "InformationSeeking,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nWell, there are three registries involved -- two existing one octet\nregistries that apply to TLS 1.2 and below, and a new TLS 1.3 registry\nwith two octets of space.\u00a0 The original proposal by the authors was to\nmark all the unallocated entries in the existing two registries as\neither reserved or deprecated.\u00a0 IANA noted that this is effectively the\nsame as closing the registries in terms of the difficulty of making\nfurther registrations, though I am not sure that the authors replied to\nthe question that I think I asked about what the procedure is for\nre-opening a registry should a need arise to allocate an additional\ncodepoint from it.\n\nAnyway, it seems rather challenging to try to keep all three registries\nopen and coordinate amongst them, given that the new two-octet registry\nhas a pretty low \"specification required\" registration policy, and\nallocations from the existing registries would apparently both require a\n\"contiguous\" 256 values to be free in the new registry and then \"knock\nout\" those 256 values from further use.\u00a0 This would eat up the free\nspace in the new registry relatively quickly, and presumably would not\nbe compatible with a weak \"specification required\" policy (which is\ncurrently the policy for values 64-223).\u00a0 If we agree that\n\"specification required\" is not appropriate for the existing one-octet\nregistries in a proposed \"coordinate\" scenario, then I don't see what\nthe policy would be other than \"standards action\" (the current policy\nfor values 0-63).\u00a0 And if \"standards action\" is the bar, that would\nrequire the IETF to do work on TLS 1.2 in order to need a new\nregistration, but this WG is chartered primarily for TLS 1.3 and\n\"require significant justification\" to take on work for older versions.\nSo it's extremely unclear to me that there's a plausible scenario in\nwhich a registration in the existing registries would occur.\u00a0 Such a\ncase could presumably reopen the existing registries for its use anyway,\ngiven the level of review that would be needed.\n\nSo, in summary, closing these registries seems to adequately reflect (my\nunderstanding of) our expectations for what will happen to them.\u00a0 I'm\ncurious to know how your understanding differs.\n\n-Ben"}, "context_segments": [{"sid": 2519, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nSounds like the right solution is for the registries to coordinate."}]}, {"current_segment": {"sid": 2521, "labels": "NeutralResponse,ProposeAction,StateDecision,InformationProviding", "content": "\nI\u2019ll have to ask, but I suspect that someone who wanted a new assignment would draft an I-D that assigned the code point and it would go through the process.  I.e., I think it\u2019s mostly symbolic.\n\nspt"}, "context_segments": [{"sid": 2519, "labels": "ExtensionOfPrevious,ProposeAction,InformationProviding,ExtensionOfPrevious", "content": "\nSounds like the right solution is for the registries to coordinate."}, {"sid": 2520, "labels": "InformationSeeking,InformationProviding,NeutralResponse,ProposeAction,NeutralResponse,InformationProviding", "content": "\nWell, there are three registries involved -- two existing one octet\nregistries that apply to TLS 1.2 and below, and a new TLS 1.3 registry\nwith two octets of space.\u00a0 The original proposal by the authors was to\nmark all the unallocated entries in the existing two registries as\neither reserved or deprecated.\u00a0 IANA noted that this is effectively the\nsame as closing the registries in terms of the difficulty of making\nfurther registrations, though I am not sure that the authors replied to\nthe question that I think I asked about what the procedure is for\nre-opening a registry should a need arise to allocate an additional\ncodepoint from it.\n\nAnyway, it seems rather challenging to try to keep all three registries\nopen and coordinate amongst them, given that the new two-octet registry\nhas a pretty low \"specification required\" registration policy, and\nallocations from the existing registries would apparently both require a\n\"contiguous\" 256 values to be free in the new registry and then \"knock\nout\" those 256 values from further use.\u00a0 This would eat up the free\nspace in the new registry relatively quickly, and presumably would not\nbe compatible with a weak \"specification required\" policy (which is\ncurrently the policy for values 64-223).\u00a0 If we agree that\n\"specification required\" is not appropriate for the existing one-octet\nregistries in a proposed \"coordinate\" scenario, then I don't see what\nthe policy would be other than \"standards action\" (the current policy\nfor values 0-63).\u00a0 And if \"standards action\" is the bar, that would\nrequire the IETF to do work on TLS 1.2 in order to need a new\nregistration, but this WG is chartered primarily for TLS 1.3 and\n\"require significant justification\" to take on work for older versions.\nSo it's extremely unclear to me that there's a plausible scenario in\nwhich a registration in the existing registries would occur.\u00a0 Such a\ncase could presumably reopen the existing registries for its use anyway,\ngiven the level of review that would be needed.\n\nSo, in summary, closing these registries seems to adequately reflect (my\nunderstanding of) our expectations for what will happen to them.\u00a0 I'm\ncurious to know how your understanding differs.\n\n-Ben"}]}, {"current_segment": {"sid": 2522, "labels": "InformationProviding,NeutralResponse,InformationProviding", "content": "I'm hesitant to call a 16-bit registry \"big\" in any context.\nBut if allocating a value requires a specification, that's probably okay.\n(There aren't even close to 2^16 RFCs in total)\n"}, "context_segments": []}, {"current_segment": {"sid": 2523, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "I had a quick chat with the iANA folks about the HashAlgorithm and SignatureAlgorithm, which we are effectively closing by marking all unregistered bits as either reserved or depcreated.  IANA suggested another way which is to just close the registry,   An example for the registry follows:"}, "context_segments": []}, {"current_segment": {"sid": 2524, "labels": "Question,InformationProviding,Disagreement,NeutralResponse,Question,NeutralResponse,InformationSeeking", "content": "\nThis seems a bit of a strange thing to do, if it's going to be closed as soon\nas the RFC is published then why have it?  A registry implies you can register\nthings in it, while this will be just a publication of existing values with no\nability to register new ones.  If it's that then it's a List of Algorithm IDs,\nnot a Registry.\n\nPeter."}, "context_segments": [{"sid": 2523, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "I had a quick chat with the iANA folks about the HashAlgorithm and SignatureAlgorithm, which we are effectively closing by marking all unregistered bits as either reserved or depcreated.  IANA suggested another way which is to just close the registry,   An example for the registry follows:"}]}, {"current_segment": {"sid": 2525, "labels": "ClarificationElicitation,InformationProviding,ProposeAction,ClarificationElicitation,NeutralResponse,InformationSeeking", "content": "\nPeter,\n\nI think you\u2019re saying that once the registries are closed we don\u2019t call them registries?  I think I can get the registry title to be:\n\nTLS HashAlgorithm - Registry Closed\n\nspt"}, "context_segments": [{"sid": 2523, "labels": "InformationProviding,ContextSetting,InformationProviding", "content": "I had a quick chat with the iANA folks about the HashAlgorithm and SignatureAlgorithm, which we are effectively closing by marking all unregistered bits as either reserved or depcreated.  IANA suggested another way which is to just close the registry,   An example for the registry follows:"}, {"sid": 2524, "labels": "Question,InformationProviding,Disagreement,NeutralResponse,Question,NeutralResponse,InformationSeeking", "content": "\nThis seems a bit of a strange thing to do, if it's going to be closed as soon\nas the RFC is published then why have it?  A registry implies you can register\nthings in it, while this will be just a publication of existing values with no\nability to register new ones.  If it's that then it's a List of Algorithm IDs,\nnot a Registry.\n\nPeter."}]}, {"current_segment": {"sid": 2616, "labels": "ExtensionOfPrevious,ContextSetting,InformationProviding", "content": "\nCOMMENT:"}, "context_segments": []}, {"current_segment": {"sid": 2617, "labels": "ExtensionOfPrevious,Thanking,InformationProviding,ExtensionOfPrevious,StateDecision,Thanking,Social", "content": "\nThank you for a surprisingly (because of the technical density) readable\ndocument - I may use this as an example of a well written but dense document..."}, "context_segments": []}, {"current_segment": {"sid": 2618, "labels": "ExtensionOfPrevious,Thanking,ExtensionOfPrevious,Thanking,InformationProviding,Social", "content": "\nAlso, thanks to the doc shepherd for a good write-up."}, "context_segments": []}, {"current_segment": {"sid": 2619, "labels": "InformationProviding,ExtensionOfPrevious,InformationProviding,ContextSetting", "content": "\nI'm balloting NoObj instead of Yes only because I don't think I have enough\nbackground/expertise in the topic."}, "context_segments": []}, {"current_segment": {"sid": 2620, "labels": "InformationProviding,InformationProviding,ContextSetting", "content": "Warren Kumari has entered the following ballot position for\ndraft-ietf-tls-tls13-26: No Objection"}, "context_segments": []}, {"current_segment": {"sid": 2621, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,Social", "content": "\nWhen responding, please keep the subject line intact and reply to all\nemail addresses included in the To and CC lines. (Feel free to cut this\nintroductory paragraph, however.)"}, "context_segments": []}, {"current_segment": {"sid": 2622, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious,Social", "content": "\nPlease refer to https://www.ietf.org/iesg/statement/discuss-criteria.html\nfor more information about IESG DISCUSS and COMMENT positions."}, "context_segments": []}, {"current_segment": {"sid": 2623, "labels": "InformationProviding,InformationProviding,ExtensionOfPrevious", "content": "\nThe document, along with other ballot positions, can be found here:\nhttps://datatracker.ietf.org/doc/draft-ietf-tls-tls13/"}, "context_segments": []}]